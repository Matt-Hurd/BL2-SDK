#include "stdafx.h"
// Using =======================================================================
using namespace boost::python;

// Module ======================================================================
void Export_pystes_ULightComponent()
{
    class_< ULightComponent, bases< UActorComponent >  , boost::noncopyable>("ULightComponent", no_init)
        .def_readwrite("SceneInfo", &ULightComponent::SceneInfo)
        .def_readwrite("WorldToLight", &ULightComponent::WorldToLight)
        .def_readwrite("LightToWorld", &ULightComponent::LightToWorld)
        .def_readwrite("LightGuid", &ULightComponent::LightGuid)
        .def_readwrite("LightmapGuid", &ULightComponent::LightmapGuid)
        .def_readwrite("Brightness", &ULightComponent::Brightness)
        .def_readwrite("LightColor", &ULightComponent::LightColor)
        .def_readwrite("Function", &ULightComponent::Function)
        .def_readwrite("LightEnvironment", &ULightComponent::LightEnvironment)
        .def_readwrite("LightingChannels", &ULightComponent::LightingChannels)
        .def_readwrite("LightAffectsClassification", &ULightComponent::LightAffectsClassification)
        .def_readwrite("LightShadowMode", &ULightComponent::LightShadowMode)
        .def_readwrite("ModShadowColor", &ULightComponent::ModShadowColor)
        .def_readwrite("ModShadowFadeoutTime", &ULightComponent::ModShadowFadeoutTime)
        .def_readwrite("ModShadowFadeoutExponent", &ULightComponent::ModShadowFadeoutExponent)
        .def_readwrite("LightListIndex", &ULightComponent::LightListIndex)
        .def_readwrite("ShadowProjectionTechnique", &ULightComponent::ShadowProjectionTechnique)
        .def_readwrite("ShadowFilterQuality", &ULightComponent::ShadowFilterQuality)
        .def_readwrite("MinShadowResolution", &ULightComponent::MinShadowResolution)
        .def_readwrite("MaxShadowResolution", &ULightComponent::MaxShadowResolution)
        .def_readwrite("ShadowFadeResolution", &ULightComponent::ShadowFadeResolution)
        .def_readwrite("OcclusionDepthRange", &ULightComponent::OcclusionDepthRange)
        .def_readwrite("BloomScale", &ULightComponent::BloomScale)
        .def_readwrite("BloomThreshold", &ULightComponent::BloomThreshold)
        .def_readwrite("BloomScreenBlendThreshold", &ULightComponent::BloomScreenBlendThreshold)
        .def_readwrite("BloomTint", &ULightComponent::BloomTint)
        .def_readwrite("RadialBlurPercent", &ULightComponent::RadialBlurPercent)
        .def_readwrite("OcclusionMaskDarkness", &ULightComponent::OcclusionMaskDarkness)
        .def("StaticClass", &ULightComponent::StaticClass, return_value_policy< reference_existing_object >())
        .def("Behavior_ChangeVisibility", &ULightComponent::Behavior_ChangeVisibility)
        .def("Behavior_ToggleVisibility", &ULightComponent::Behavior_ToggleVisibility)
        .def("OnUpdatePropertyLightColor", &ULightComponent::OnUpdatePropertyLightColor)
        .def("OnUpdatePropertyBrightness", &ULightComponent::OnUpdatePropertyBrightness)
        .def("OnUpdatePropertyOcclusionMaskDarkness", &ULightComponent::OnUpdatePropertyOcclusionMaskDarkness)
        .def("OnUpdatePropertyBloomTint", &ULightComponent::OnUpdatePropertyBloomTint)
        .def("OnUpdatePropertyBloomScale", &ULightComponent::OnUpdatePropertyBloomScale)
        .def("UpdateLightShaftParameters", &ULightComponent::UpdateLightShaftParameters)
        .def("UpdateColorAndBrightness", &ULightComponent::UpdateColorAndBrightness)
        .def("GetDirection", &ULightComponent::GetDirection)
        .def("GetOrigin", &ULightComponent::GetOrigin)
        .def("SetLightProperties", &ULightComponent::SetLightProperties)
        .def("SetEnabled", &ULightComponent::SetEnabled)
        .staticmethod("StaticClass")
  ;
}