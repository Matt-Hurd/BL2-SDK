#include "stdafx.h"
// Using =======================================================================
namespace py = pybind11;

// Module ======================================================================
void Export_pystes_UAction_AnimAttack(py::module &m)
{
    py::class_< UAction_AnimAttack,  UAction_Burrow   >(m, "UAction_AnimAttack")
        .def_readwrite("AimType", &UAction_AnimAttack::AimType)
        .def_readwrite("VisionAngle", &UAction_AnimAttack::VisionAngle)
        .def_readwrite("AttackAnim", &UAction_AnimAttack::AttackAnim)
        .def_readwrite("Aim", &UAction_AnimAttack::Aim)
        .def_readwrite("Limits", &UAction_GenericAttack::Limits)
        .def_readwrite("CrouchIdleChance", &UAction_GenericAttack::CrouchIdleChance)
        .def_readwrite("CrouchMoveChance", &UAction_GenericAttack::CrouchMoveChance)
        .def_readwrite("CheckRate", &UAction_GenericAttack::CheckRate)
        .def_readwrite("Type", &UAction_GenericAttack::Type)
        .def_readwrite("Validity", &UAction_GenericAttack::Validity)
        .def_readwrite("AttackLoc", &UAction_GenericAttack::AttackLoc)
        .def_readwrite("MyZone", &UAction_GenericAttack::MyZone)
        .def_readwrite("IdleTime", &UAction_GenericAttack::IdleTime)
        .def("StaticClass", &UAction_AnimAttack::StaticClass, py::return_value_policy::reference)
        .def("IsAimed", &UAction_AnimAttack::IsAimed)
        .def("ReleaseTarget", &UAction_AnimAttack::ReleaseTarget)
        .def("HoldTarget", &UAction_AnimAttack::HoldTarget)
        .def("AttackFinished", &UAction_AnimAttack::AttackFinished)
        .def("OnlyExpireMyZone", &UAction_AnimAttack::OnlyExpireMyZone)
        .def("CanCheckExpiredZone", &UAction_AnimAttack::CanCheckExpiredZone)
        .def("GetDesiredState", &UAction_AnimAttack::GetDesiredState)
        .def("eventUpdate", &UAction_AnimAttack::eventUpdate)
        .def("eventStop", &UAction_AnimAttack::eventStop)
        .def("eventStart", &UAction_AnimAttack::eventStart)
        .def("eventInit", &UAction_AnimAttack::eventInit)
        .def("ReachedAttackLoc", &UAction_GenericAttack::ReachedAttackLoc)
        .def("HalfExposed", &UAction_GenericAttack::HalfExposed)
        .def("GetDotToTarget", &UAction_GenericAttack::GetDotToTarget)
        .def("TargetReachable", &UAction_GenericAttack::TargetReachable)
        .def("GetNearestLocationToTarget", &UAction_GenericAttack::GetNearestLocationToTarget)
        .def("eventPathFind", &UAction_GenericAttack::eventPathFind)
        .def("WantsPathFind", &UAction_GenericAttack::WantsPathFind)
        .def("CheckExpiredZone", &UAction_GenericAttack::CheckExpiredZone)
        .def("CheckForNewZone", &UAction_GenericAttack::CheckForNewZone)
        .def("CanClaimZones", &UAction_GenericAttack::CanClaimZones)
        .def("ValidLocation", &UAction_GenericAttack::ValidLocation)
        .def("CheckAttackLocation", &UAction_GenericAttack::CheckAttackLocation)
        .def("UnclaimMovement", &UAction_GenericAttack::UnclaimMovement)
        .def("ClaimMovement", &UAction_GenericAttack::ClaimMovement)
        .def("CanMove", &UAction_GenericAttack::CanMove)
        .def("CheckStateTransition", &UAction_GenericAttack::CheckStateTransition)
        .def("TargetIsDownedPlayer", &UAction_GenericAttack::TargetIsDownedPlayer)
        .def("eventCanRun", &UAction_GenericAttack::eventCanRun)
        .def("InitData", &UAction_GenericAttack::InitData)
          ;
}