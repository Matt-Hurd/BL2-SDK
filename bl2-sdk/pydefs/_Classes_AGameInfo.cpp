#include "stdafx.h"
// Using =======================================================================
namespace py = pybind11;

// Module ======================================================================
void Export_pystes_AGameInfo(py::module &m)
{
    py::class_< AGameInfo,  AInfo   >(m, "AGameInfo")
        .def_readwrite("CauseEventCommand", &AGameInfo::CauseEventCommand)
        .def_readwrite("BugLocString", &AGameInfo::BugLocString)
        .def_readwrite("BugRotString", &AGameInfo::BugRotString)
        .def_readwrite("PendingArbitrationPCs", &AGameInfo::PendingArbitrationPCs)
        .def_readwrite("ArbitrationPCs", &AGameInfo::ArbitrationPCs)
        .def_readwrite("ArbitrationHandshakeTimeout", &AGameInfo::ArbitrationHandshakeTimeout)
        .def_readwrite("GameDifficulty", &AGameInfo::GameDifficulty)
        .def_readwrite("GoreLevel", &AGameInfo::GoreLevel)
        .def_readwrite("GameSpeed", &AGameInfo::GameSpeed)
        .def_readwrite("DefaultPawnClass", &AGameInfo::DefaultPawnClass)
        .def_readwrite("HUDType", &AGameInfo::HUDType)
        .def_readwrite("MaxSpectators", &AGameInfo::MaxSpectators)
        .def_readwrite("MaxSpectatorsAllowed", &AGameInfo::MaxSpectatorsAllowed)
        .def_readwrite("NumSpectators", &AGameInfo::NumSpectators)
        .def_readwrite("MaxPlayers", &AGameInfo::MaxPlayers)
        .def_readwrite("MaxPlayersAllowed", &AGameInfo::MaxPlayersAllowed)
        .def_readwrite("NumPlayers", &AGameInfo::NumPlayers)
        .def_readwrite("EffectiveNumPlayers", &AGameInfo::EffectiveNumPlayers)
        .def_readwrite("NumBots", &AGameInfo::NumBots)
        .def_readwrite("NumTravellingPlayers", &AGameInfo::NumTravellingPlayers)
        .def_readwrite("CurrentID", &AGameInfo::CurrentID)
        .def_readwrite("DefaultPlayerName", &AGameInfo::DefaultPlayerName)
        .def_readwrite("GameName", &AGameInfo::GameName)
        .def_readwrite("GoalScore", &AGameInfo::GoalScore)
        .def_readwrite("MaxLives", &AGameInfo::MaxLives)
        .def_readwrite("TimeLimit", &AGameInfo::TimeLimit)
        .def_readwrite("DeathMessageClass", &AGameInfo::DeathMessageClass)
        .def_readwrite("GameMessageClass", &AGameInfo::GameMessageClass)
        .def_readwrite("BaseMutator", &AGameInfo::BaseMutator)
        .def_readwrite("AccessControlClass", &AGameInfo::AccessControlClass)
        .def_readwrite("AccessControl", &AGameInfo::AccessControl)
        .def_readwrite("BroadcastHandlerClass", &AGameInfo::BroadcastHandlerClass)
        .def_readwrite("BroadcastHandler", &AGameInfo::BroadcastHandler)
        .def_readwrite("AutoTestManagerClass", &AGameInfo::AutoTestManagerClass)
        .def_readwrite("MyAutoTestManager", &AGameInfo::MyAutoTestManager)
        .def_readwrite("PlayerControllerClass", &AGameInfo::PlayerControllerClass)
        .def_readwrite("PlayerReplicationInfoClass", &AGameInfo::PlayerReplicationInfoClass)
        .def_readwrite("GameReplicationInfoClass", &AGameInfo::GameReplicationInfoClass)
        .def_readwrite("GameReplicationInfo", &AGameInfo::GameReplicationInfo)
        .def_readwrite("MaxIdleTime", &AGameInfo::MaxIdleTime)
        .def_readwrite("MaxTimeMargin", &AGameInfo::MaxTimeMargin)
        .def_readwrite("TimeMarginSlack", &AGameInfo::TimeMarginSlack)
        .def_readwrite("MinTimeMargin", &AGameInfo::MinTimeMargin)
        .def_readwrite("InactivePRIArray", &AGameInfo::InactivePRIArray)
        .def_readwrite("Pausers", &AGameInfo::Pausers)
        .def_readwrite("OnlineSub", &AGameInfo::OnlineSub)
        .def_readwrite("GameInterface", &AGameInfo::GameInterface)
        .def_readwrite("OnlineStatsWriteClass", &AGameInfo::OnlineStatsWriteClass)
        .def_readwrite("LeaderboardId", &AGameInfo::LeaderboardId)
        .def_readwrite("ArbitratedLeaderboardId", &AGameInfo::ArbitratedLeaderboardId)
        .def_readwrite("CoverReplicatorBase", &AGameInfo::CoverReplicatorBase)
        .def_readwrite("OnlineGameSettingsClass", &AGameInfo::OnlineGameSettingsClass)
        .def_readwrite("DebugBeaconActorClasses", &AGameInfo::DebugBeaconActorClasses)
        .def_readwrite("ServerOptions", &AGameInfo::ServerOptions)
        .def_readwrite("AdjustedNetSpeed", &AGameInfo::AdjustedNetSpeed)
        .def_readwrite("LastNetSpeedUpdateTime", &AGameInfo::LastNetSpeedUpdateTime)
        .def_readwrite("TotalNetBandwidth", &AGameInfo::TotalNetBandwidth)
        .def_readwrite("MinDynamicBandwidth", &AGameInfo::MinDynamicBandwidth)
        .def_readwrite("MaxDynamicBandwidth", &AGameInfo::MaxDynamicBandwidth)
        .def_readwrite("StandbyRxCheatTime", &AGameInfo::StandbyRxCheatTime)
        .def_readwrite("StandbyTxCheatTime", &AGameInfo::StandbyTxCheatTime)
        .def_readwrite("BadPingThreshold", &AGameInfo::BadPingThreshold)
        .def_readwrite("PercentMissingForRxStandby", &AGameInfo::PercentMissingForRxStandby)
        .def_readwrite("PercentMissingForTxStandby", &AGameInfo::PercentMissingForTxStandby)
        .def_readwrite("PercentForBadPing", &AGameInfo::PercentForBadPing)
        .def_readwrite("JoinInProgressStandbyWaitTime", &AGameInfo::JoinInProgressStandbyWaitTime)
        .def_readwrite("GameInfoClassAliases", &AGameInfo::GameInfoClassAliases)
        .def_readwrite("DefaultGameType", &AGameInfo::DefaultGameType)
        .def_readwrite("DefaultMapPrefixes", &AGameInfo::DefaultMapPrefixes)
        .def_readwrite("CustomMapPrefixes", &AGameInfo::CustomMapPrefixes)
        .def_readwrite("AnimTreePoolSize", &AGameInfo::AnimTreePoolSize)
        .def("OverrideCanUnpauseInternalUI", &AGameInfo::OverrideCanUnpauseInternalUI)
        .def("Beacon", &AGameInfo::Beacon)
        .def("CheckForDebugBeacon", &AGameInfo::CheckForDebugBeacon)
        .def("GetDebugBeacon", &AGameInfo::GetDebugBeacon)
        .def("SaveDebugBeacon", &AGameInfo::SaveDebugBeacon)
        .def("eventOnEngineHasLoaded", &AGameInfo::eventOnEngineHasLoaded)
        .def("OnDestroyOnlineGameComplete", &AGameInfo::OnDestroyOnlineGameComplete)
        .def("eventStandbyCheatDetected", &AGameInfo::eventStandbyCheatDetected)
        .def("EnableStandbyCheatDetection", &AGameInfo::EnableStandbyCheatDetection)
        .def("BeginBVT", &AGameInfo::BeginBVT)
        .def("CheckForSentinelRun", &AGameInfo::CheckForSentinelRun)
        .def("ShouldAutoContinueToNextRound", &AGameInfo::ShouldAutoContinueToNextRound)
        .def("IsDoingASentinelRun", &AGameInfo::IsDoingASentinelRun)
        .def("IsCheckingForMemLeaks", &AGameInfo::IsCheckingForMemLeaks)
        .def("IsCheckingForFragmentation", &AGameInfo::IsCheckingForFragmentation)
        .def("IsAutomatedPerfTesting", &AGameInfo::IsAutomatedPerfTesting)
        .def("SetBandwidthLimit", &AGameInfo::SetBandwidthLimit)
        .def("DoTravelTheWorld", &AGameInfo::DoTravelTheWorld)
        .def("DoGameSpecificPerformanceSettings", &AGameInfo::DoGameSpecificPerformanceSettings)
        .def("TellClientsToTravelToSession", [](AGameInfo &self , struct FName SessionName, class UClass* SearchClass) { unsigned char* pyPlatformSpecificInfo = (unsigned char*)malloc(sizeof(unsigned char)) ;   self.TellClientsToTravelToSession(SessionName, SearchClass, pyPlatformSpecificInfo); return py::make_tuple(*pyPlatformSpecificInfo); })
        .def("TellClientsPartyHostIsLeaving", &AGameInfo::TellClientsPartyHostIsLeaving)
        .def("TellClientsToReturnToPartyHost", &AGameInfo::TellClientsToReturnToPartyHost)
        .def("OnServerCreateComplete", &AGameInfo::OnServerCreateComplete)
        .def("RegisterServer", &AGameInfo::RegisterServer)
        .def("OnLoginChange", &AGameInfo::OnLoginChange)
        .def("OnLoginFailed", &AGameInfo::OnLoginFailed)
        .def("ClearAutoLoginDelegates", &AGameInfo::ClearAutoLoginDelegates)
        .def("ProcessServerLogin", &AGameInfo::ProcessServerLogin)
        .def("eventMatineeCancelled", &AGameInfo::eventMatineeCancelled)
        .def("RecalculateSkillRating", &AGameInfo::RecalculateSkillRating)
        .def("UpdateGameplayMuteList", &AGameInfo::UpdateGameplayMuteList)
        .def("NotifyArbitratedMatchEnd", &AGameInfo::NotifyArbitratedMatchEnd)
        .def("MatchIsInProgress", &AGameInfo::MatchIsInProgress)
        .def("ArbitrationRegistrationComplete", &AGameInfo::ArbitrationRegistrationComplete)
        .def("RegisterServerForArbitration", &AGameInfo::RegisterServerForArbitration)
        .def("StartArbitratedMatch", &AGameInfo::StartArbitratedMatch)
        .def("StartArbitrationRegistration", &AGameInfo::StartArbitrationRegistration)
        .def("ProcessClientRegistrationCompletion", &AGameInfo::ProcessClientRegistrationCompletion)
        .def("UpdateGameSettingsCounts", &AGameInfo::UpdateGameSettingsCounts)
        .def("SetSeamlessTravelViewTarget", &AGameInfo::SetSeamlessTravelViewTarget)
        .def("eventHandleSeamlessTravelPlayer", [](AGameInfo &self ) { class AController** pyC = 0 ;   self.eventHandleSeamlessTravelPlayer(pyC); return py::make_tuple(*pyC); })
        .def("UpdateGameSettings", &AGameInfo::UpdateGameSettings)
        .def("eventPostSeamlessTravel", &AGameInfo::eventPostSeamlessTravel)
        .def("SwapPlayerControllers", &AGameInfo::SwapPlayerControllers)
        .def("eventGetSeamlessTravelActorList", &AGameInfo::eventGetSeamlessTravelActorList)
        .def("OverridePRI", &AGameInfo::OverridePRI)
        .def("FindInactivePRI", &AGameInfo::FindInactivePRI)
        .def("AddInactivePRI", &AGameInfo::AddInactivePRI)
        .def("eventPostCommitMapChange", &AGameInfo::eventPostCommitMapChange)
        .def("eventPreCommitMapChange", &AGameInfo::eventPreCommitMapChange)
        .def("AllowPausing", &AGameInfo::AllowPausing)
        .def("AllowCheats", &AGameInfo::AllowCheats)
        .def("AllowMutator", &AGameInfo::AllowMutator)
        .def("PlayerCanRestart", &AGameInfo::PlayerCanRestart)
        .def("PlayerCanRestartGame", &AGameInfo::PlayerCanRestartGame)
        .def("DriverLeftVehicle", &AGameInfo::DriverLeftVehicle)
        .def("CanLeaveVehicle", &AGameInfo::CanLeaveVehicle)
        .def("DriverEnteredVehicle", &AGameInfo::DriverEnteredVehicle)
        .def("ModifyScoreKill", &AGameInfo::ModifyScoreKill)
        .def("ScoreKill", &AGameInfo::ScoreKill)
        .def("CheckScore", &AGameInfo::CheckScore)
        .def("ScoreObjective", &AGameInfo::ScoreObjective)
        .def("AddObjectiveScore", &AGameInfo::AddObjectiveScore)
        .def("RatePlayerStart", &AGameInfo::RatePlayerStart)
        .def("ChoosePlayerStart", &AGameInfo::ChoosePlayerStart, py::return_value_policy::reference)
        .def("FindPlayerStart", &AGameInfo::FindPlayerStart, py::return_value_policy::reference)
        .def("ShouldSpawnAtStartSpot", &AGameInfo::ShouldSpawnAtStartSpot)
        .def("EndLogging", &AGameInfo::EndLogging)
        .def("GameEventsPoll", &AGameInfo::GameEventsPoll)
        .def("EndOnlineGame", &AGameInfo::EndOnlineGame)
        .def("PerformEndGameHandling", &AGameInfo::PerformEndGameHandling)
        .def("EndGame", &AGameInfo::EndGame)
        .def("WriteOnlinePlayerScores", &AGameInfo::WriteOnlinePlayerScores)
        .def("WriteOnlineStats", &AGameInfo::WriteOnlineStats)
        .def("CheckEndGame", &AGameInfo::CheckEndGame)
        .def("CheckModifiedEndGame", &AGameInfo::CheckModifiedEndGame)
        .def("eventBroadcastLocalizedTeam", &AGameInfo::eventBroadcastLocalizedTeam)
        .def("eventBroadcastLocalized", &AGameInfo::eventBroadcastLocalized)
        .def("BroadcastTeam", &AGameInfo::BroadcastTeam)
        .def("eventBroadcast", &AGameInfo::eventBroadcast)
        .def("RestartGame", &AGameInfo::RestartGame)
        .def("GetTravelType", &AGameInfo::GetTravelType)
        .def("GetNextMap", &AGameInfo::GetNextMap)
        .def("SendPlayer", &AGameInfo::SendPlayer)
        .def("PickTeam", &AGameInfo::PickTeam)
        .def("ChangeTeam", &AGameInfo::ChangeTeam)
        .def("ChangeName", &AGameInfo::ChangeName)
        .def("DiscardInventory", &AGameInfo::DiscardInventory)
        .def("ShouldPawnDropWeaponOnDeath", &AGameInfo::ShouldPawnDropWeaponOnDeath)
        .def("PickupQuery", &AGameInfo::PickupQuery)
        .def("ShouldRespawn", &AGameInfo::ShouldRespawn)
        .def("CheckRelevance", &AGameInfo::CheckRelevance)
        .def("ReduceDamage", [](AGameInfo &self , class APawn* injured, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class UIDamageCauser* DamageCauser, class UDamagePipeline* Pipeline, struct FVector* Momentum) { float* pyDamage = (float*)malloc(sizeof(float)) ;   self.ReduceDamage(injured, InstigatedBy, HitLocation, DamageType, DamageCauser, Pipeline, pyDamage, Momentum); return py::make_tuple(*pyDamage); })
        .def("eventShouldOverrideDamageTypeForHealing", &AGameInfo::eventShouldOverrideDamageTypeForHealing)
        .def("eventGetHealingDamageTypeDefinition", &AGameInfo::eventGetHealingDamageTypeDefinition, py::return_value_policy::reference)
        .def("ConvertDamageToHealing", &AGameInfo::ConvertDamageToHealing)
        .def("IsFriendlyFire", &AGameInfo::IsFriendlyFire)
        .def("CanSpectate", &AGameInfo::CanSpectate)
        .def("KickBan", &AGameInfo::KickBan)
        .def("Kick", &AGameInfo::Kick)
        .def("BroadcastDeathMessage", &AGameInfo::BroadcastDeathMessage)
        .def("PreventDeath", &AGameInfo::PreventDeath)
        .def("Killed", &AGameInfo::Killed)
        .def("NotifyKilled", &AGameInfo::NotifyKilled)
        .def("SetPlayerDefaults", &AGameInfo::SetPlayerDefaults)
        .def("Mutate", &AGameInfo::Mutate)
        .def("eventAddDefaultInventory", &AGameInfo::eventAddDefaultInventory)
        .def("eventAcceptInventory", &AGameInfo::eventAcceptInventory)
        .def("UnregisterPlayer", &AGameInfo::UnregisterPlayer)
        .def("Logout", &AGameInfo::Logout)
        .def("eventPreExit", &AGameInfo::eventPreExit)
        .def("CalculatedNetSpeed", &AGameInfo::CalculatedNetSpeed)
        .def("UpdateNetSpeeds", &AGameInfo::UpdateNetSpeeds)
        .def("eventPostLogin", &AGameInfo::eventPostLogin)
        .def("DisableFakePauseFor", &AGameInfo::DisableFakePauseFor)
        .def("UpdateBestNextHosts", &AGameInfo::UpdateBestNextHosts)
        .def("BestNextHostSort", &AGameInfo::BestNextHostSort)
        .def("ClientsShouldSeeLobby", &AGameInfo::ClientsShouldSeeLobby)
        .def("GenericPlayerInitialization", &AGameInfo::GenericPlayerInitialization)
        .def("ReplicateStreamingStatus", &AGameInfo::ReplicateStreamingStatus)
        .def("GetDefaultPlayerClass", &AGameInfo::GetDefaultPlayerClass, py::return_value_policy::reference)
        .def("SpawnDefaultPawnFor", &AGameInfo::SpawnDefaultPawnFor, py::return_value_policy::reference)
        .def("InitiatePlayerPawnDataLoad", &AGameInfo::InitiatePlayerPawnDataLoad)
        .def("RestartPlayer", &AGameInfo::RestartPlayer)
        .def("StartBots", &AGameInfo::StartBots)
        .def("StartHumans", &AGameInfo::StartHumans)
        .def("OnStartOnlineGameComplete", &AGameInfo::OnStartOnlineGameComplete)
        .def("StartOnlineGame", &AGameInfo::StartOnlineGame)
        .def("StartMatch", &AGameInfo::StartMatch)
        .def("eventLogin", &AGameInfo::eventLogin, py::return_value_policy::reference)
        .def("SpawnPlayerController", &AGameInfo::SpawnPlayerController, py::return_value_policy::reference)
        .def("GetNextPlayerID", &AGameInfo::GetNextPlayerID)
        .def("AtCapacity", &AGameInfo::AtCapacity)
        .def("RejectLogin", &AGameInfo::RejectLogin)
        .def("ResumeLogin", &AGameInfo::ResumeLogin)
        .def("PauseLogin", &AGameInfo::PauseLogin, py::return_value_policy::reference)
        .def("eventPreLogin", &AGameInfo::eventPreLogin)
        .def("RequiresPassword", &AGameInfo::RequiresPassword)
        .def("ProcessClientTravel", &AGameInfo::ProcessClientTravel, py::return_value_policy::reference)
        .def("ProcessServerTravel", &AGameInfo::ProcessServerTravel)
        .def("RemoveMutator", &AGameInfo::RemoveMutator)
        .def("AddMutator", &AGameInfo::AddMutator)
        .def("eventNotifyPendingConnectionLost", &AGameInfo::eventNotifyPendingConnectionLost)
        .def("eventInitGame", &AGameInfo::eventInitGame)
        .def("eventSetGameType", &AGameInfo::eventSetGameType, py::return_value_policy::reference)
        .def("eventGetDefaultGameClassPath", &AGameInfo::eventGetDefaultGameClassPath)
        .def("GetIntOption", &AGameInfo::GetIntOption)
        .def("HasOption", &AGameInfo::HasOption)
        .def("ParseOption", &AGameInfo::ParseOption)
        .def("GetKeyValue", &AGameInfo::GetKeyValue)
        .def("GrabOption", &AGameInfo::GrabOption)
        .def("SetGameSpeed", &AGameInfo::SetGameSpeed)
        .def("DebugPause", &AGameInfo::DebugPause)
        .def("ForceClearUnpauseDelegates", &AGameInfo::ForceClearUnpauseDelegates)
        .def("eventClearPause", &AGameInfo::eventClearPause)
        .def("SetPause", &AGameInfo::SetPause)
        .def("CanUnpause", &AGameInfo::CanUnpause)
        .def("GetNumPlayers", &AGameInfo::GetNumPlayers)
        .def("GetNetworkNumber", &AGameInfo::GetNetworkNumber)
        .def("InitGameReplicationInfo", &AGameInfo::InitGameReplicationInfo)
        .def("eventForceKickPlayer", &AGameInfo::eventForceKickPlayer)
        .def("eventKickIdler", &AGameInfo::eventKickIdler)
        .def("eventGameEnding", &AGameInfo::eventGameEnding)
        .def("NotifyNavigationChanged", &AGameInfo::NotifyNavigationChanged)
        .def("eventTimer", &AGameInfo::eventTimer)
        .def("ResetLevel", &AGameInfo::ResetLevel)
        .def("ShouldReset", &AGameInfo::ShouldReset)
        .def("Reset", &AGameInfo::Reset)
        .def("eventPostBeginPlay", &AGameInfo::eventPostBeginPlay)
        .def("GetCoverReplicator", &AGameInfo::GetCoverReplicator, py::return_value_policy::reference)
        .def("eventPreBeginPlay", &AGameInfo::eventPreBeginPlay)
        .def("GetMapCommonPackageName", &AGameInfo::GetMapCommonPackageName)
        .def("GetSupportedGameTypes", &AGameInfo::GetSupportedGameTypes)
          ;
}