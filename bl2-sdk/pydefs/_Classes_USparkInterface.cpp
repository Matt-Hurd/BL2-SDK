#include "stdafx.h"
// Using =======================================================================
namespace py = pybind11;

// Module ======================================================================
void Export_pystes_USparkInterface(py::object m)
{
    py::class_< USparkInterface,  UInterface   >(m, "USparkInterface")
        .def("StaticClass", &USparkInterface::StaticClass, py::return_value_policy::reference)
        .def("GetNewsService", &USparkInterface::GetNewsService, py::return_value_policy::reference)
        .def("GetTitleStorageServiceConfiguration", &USparkInterface::GetTitleStorageServiceConfiguration, py::return_value_policy::reference)
        .def("GetTitleStorageUrl", &USparkInterface::GetTitleStorageUrl)
        .def("ClearGearboxAccountData", &USparkInterface::ClearGearboxAccountData)
        .def("SignOutGearboxAccount", &USparkInterface::SignOutGearboxAccount)
        .def("SignInGearboxAccount", &USparkInterface::SignInGearboxAccount)
        .def("eventGetGearboxAccountData", &USparkInterface::eventGetGearboxAccountData, py::return_value_policy::reference)
        .def("eventIsGearboxAccountAuthenticated", &USparkInterface::eventIsGearboxAccountAuthenticated)
        .def("IsGearboxAccountSignedIn", &USparkInterface::IsGearboxAccountSignedIn)
        .def("ConvertUtcTimeToLocalTime", &USparkInterface::ConvertUtcTimeToLocalTime)
        .def("ShouldUpdateEmergencyMessage", &USparkInterface::ShouldUpdateEmergencyMessage)
        .def("GetEmergencyMessage", &USparkInterface::GetEmergencyMessage)
        .def("SetEmergencyMessage", &USparkInterface::SetEmergencyMessage)
        .def("eventGetPlatformLoginNameFromSplitscreenIndex", &USparkInterface::eventGetPlatformLoginNameFromSplitscreenIndex)
        .def("GetPlatformLoginNameFromController", &USparkInterface::GetPlatformLoginNameFromController)
        .def("IncreaseInteractionTries", &USparkInterface::IncreaseInteractionTries)
        .def("GetInteractionTries", &USparkInterface::GetInteractionTries)
        .def("GetInteractionGraceTries", &USparkInterface::GetInteractionGraceTries)
        .def("GetInteractionPunishmentMinWaitSeconds", &USparkInterface::GetInteractionPunishmentMinWaitSeconds)
        .def("GetInteractionMinWaitSeconds", &USparkInterface::GetInteractionMinWaitSeconds)
        .def("IsTmsComplete", &USparkInterface::IsTmsComplete)
        .def("SetTmsComplete", &USparkInterface::SetTmsComplete)
        .def("GetSparkInitialization", &USparkInterface::GetSparkInitialization, py::return_value_policy::reference)
        .def("eventRestartSparkInitialization", &USparkInterface::eventRestartSparkInitialization)
        .def("RestartSparkInitializationFromScript", &USparkInterface::RestartSparkInitializationFromScript)
        .def("StartSparkInitialization", &USparkInterface::StartSparkInitialization)
        .def("StartSecondaryInitialization", &USparkInterface::StartSecondaryInitialization)
        .def("GetGameName", &USparkInterface::GetGameName)
        .def("GetHardwareName", &USparkInterface::GetHardwareName)
        .def("GetPlatformName", &USparkInterface::GetPlatformName)
        .def("GetPlatformTicket", &USparkInterface::GetPlatformTicket)
        .def("ClearSparkConfigReceivedDelegate", &USparkInterface::ClearSparkConfigReceivedDelegate)
        .def("AddSparkConfigReceivedDelegate", &USparkInterface::AddSparkConfigReceivedDelegate)
        .def("ResetInitializationStatus", &USparkInterface::ResetInitializationStatus)
        .def("eventIsSparkEnabled", &USparkInterface::eventIsSparkEnabled)
        .def("IssueSparkStringRequest", &USparkInterface::IssueSparkStringRequest)
        .def("IssueSparkRequest", &USparkInterface::IssueSparkRequest)
          ;
}