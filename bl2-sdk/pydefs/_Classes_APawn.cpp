#include "stdafx.h"
// Using =======================================================================
namespace py = pybind11;

// Module ======================================================================
void Export_pystes_APawn(py::object m)
{
    py::class_< APawn,  AActor   >(m, "APawn")
        .def_readwrite("VfTable_IInterface_Speaker", &APawn::VfTable_IInterface_Speaker)
        .def_readwrite("VfTable_IIKilledBehavior", &APawn::VfTable_IIKilledBehavior)
        .def_readwrite("VfTable_IITargetable", &APawn::VfTable_IITargetable)
        .def_readwrite("MaxStepHeight", &APawn::MaxStepHeight)
        .def_readwrite("MaxJumpHeight", &APawn::MaxJumpHeight)
        .def_readwrite("WalkableFloorZ", &APawn::WalkableFloorZ)
        .def_readwrite("LedgeCheckThreshold", &APawn::LedgeCheckThreshold)
        .def_readwrite("PartialLedgeMoveDir", &APawn::PartialLedgeMoveDir)
        .def_readwrite("Controller", &APawn::Controller)
        .def_readwrite("NextPawn", &APawn::NextPawn)
        .def_readwrite("NetRelevancyTime", &APawn::NetRelevancyTime)
        .def_readwrite("LastRealViewer", &APawn::LastRealViewer)
        .def_readwrite("LastViewer", &APawn::LastViewer)
        .def_readwrite("bIsSprinting", &APawn::bIsSprinting)
        .def_readwrite("bIsSprintingBaseValue", &APawn::bIsSprintingBaseValue)
        .def_readwrite("bIsSprintingModifierStack", &APawn::bIsSprintingModifierStack)
        .def_readwrite("WalkingPhysics", &APawn::WalkingPhysics)
        .def_readwrite("PathSearchType", &APawn::PathSearchType)
        .def_readwrite("RemoteViewPitch", &APawn::RemoteViewPitch)
        .def_readwrite("RemoteViewYaw", &APawn::RemoteViewYaw)
        .def_readwrite("NextFlashLocationIdx", &APawn::NextFlashLocationIdx)
        .def_readwrite("FlashCount", &APawn::FlashCount)
        .def_readwrite("OffHandFlashCount", &APawn::OffHandFlashCount)
        .def_readwrite("FiringMode", &APawn::FiringMode)
        .def_readwrite("AutoAimProfile", &APawn::AutoAimProfile)
        .def_readwrite("bEnableWeaponFireSkillEvent", &APawn::bEnableWeaponFireSkillEvent)
        .def_readwrite("bEnableWeaponFireSkillEventBaseValue", &APawn::bEnableWeaponFireSkillEventBaseValue)
        .def_readwrite("bEnableWeaponFireSkillEventModifierStack", &APawn::bEnableWeaponFireSkillEventModifierStack)
        .def_readwrite("UncrouchTime", &APawn::UncrouchTime)
        .def_readwrite("CrouchHeight", &APawn::CrouchHeight)
        .def_readwrite("CrouchRadius", &APawn::CrouchRadius)
        .def_readwrite("FullHeight", &APawn::FullHeight)
        .def_readwrite("NonPreferredVehiclePathMultiplier", &APawn::NonPreferredVehiclePathMultiplier)
        .def_readwrite("PathConstraintList", &APawn::PathConstraintList)
        .def_readwrite("PathGoalList", &APawn::PathGoalList)
        .def_readwrite("DesiredSpeed", &APawn::DesiredSpeed)
        .def_readwrite("MaxDesiredSpeed", &APawn::MaxDesiredSpeed)
        .def_readwrite("HearingThreshold", &APawn::HearingThreshold)
        .def_readwrite("HearingThresholdBaseValue", &APawn::HearingThresholdBaseValue)
        .def_readwrite("HearingThresholdModifierStack", &APawn::HearingThresholdModifierStack)
        .def_readwrite("Alertness", &APawn::Alertness)
        .def_readwrite("SightRadius", &APawn::SightRadius)
        .def_readwrite("SightRadiusBaseValue", &APawn::SightRadiusBaseValue)
        .def_readwrite("SightRadiusModifierStack", &APawn::SightRadiusModifierStack)
        .def_readwrite("PeripheralVision", &APawn::PeripheralVision)
        .def_readwrite("PeripheralVisionBaseValue", &APawn::PeripheralVisionBaseValue)
        .def_readwrite("PeripheralVisionModifierStack", &APawn::PeripheralVisionModifierStack)
        .def_readwrite("AvgPhysicsTime", &APawn::AvgPhysicsTime)
        .def_readwrite("Mass", &APawn::Mass)
        .def_readwrite("Buoyancy", &APawn::Buoyancy)
        .def_readwrite("MeleeRange", &APawn::MeleeRange)
        .def_readwrite("Anchor", &APawn::Anchor)
        .def_readwrite("AnchorItem", &APawn::AnchorItem)
        .def_readwrite("LastAnchor", &APawn::LastAnchor)
        .def_readwrite("FindAnchorFailedTime", &APawn::FindAnchorFailedTime)
        .def_readwrite("LastValidAnchorTime", &APawn::LastValidAnchorTime)
        .def_readwrite("DestinationOffset", &APawn::DestinationOffset)
        .def_readwrite("NextPathRadius", &APawn::NextPathRadius)
        .def_readwrite("SerpentineDir", &APawn::SerpentineDir)
        .def_readwrite("SerpentineDist", &APawn::SerpentineDist)
        .def_readwrite("SerpentineTime", &APawn::SerpentineTime)
        .def_readwrite("SpawnTime", &APawn::SpawnTime)
        .def_readwrite("MaxPitchLimit", &APawn::MaxPitchLimit)
        .def_readwrite("GroundSpeed", &APawn::GroundSpeed)
        .def_readwrite("GroundSpeedBaseValue", &APawn::GroundSpeedBaseValue)
        .def_readwrite("GroundSpeedModifierStack", &APawn::GroundSpeedModifierStack)
        .def_readwrite("WaterSpeed", &APawn::WaterSpeed)
        .def_readwrite("AirSpeed", &APawn::AirSpeed)
        .def_readwrite("AirSpeedBaseValue", &APawn::AirSpeedBaseValue)
        .def_readwrite("AirSpeedModifierStack", &APawn::AirSpeedModifierStack)
        .def_readwrite("LadderSpeed", &APawn::LadderSpeed)
        .def_readwrite("AccelRate", &APawn::AccelRate)
        .def_readwrite("AccelRateBaseValue", &APawn::AccelRateBaseValue)
        .def_readwrite("AccelRateModifierStack", &APawn::AccelRateModifierStack)
        .def_readwrite("JumpZ", &APawn::JumpZ)
        .def_readwrite("JumpZBaseValue", &APawn::JumpZBaseValue)
        .def_readwrite("JumpZModifierStack", &APawn::JumpZModifierStack)
        .def_readwrite("OutofWaterZ", &APawn::OutofWaterZ)
        .def_readwrite("MaxOutOfWaterStepHeight", &APawn::MaxOutOfWaterStepHeight)
        .def_readwrite("AirControl", &APawn::AirControl)
        .def_readwrite("WalkingPct", &APawn::WalkingPct)
        .def_readwrite("MovementSpeedModifier", &APawn::MovementSpeedModifier)
        .def_readwrite("CrouchedPct", &APawn::CrouchedPct)
        .def_readwrite("SprintingPct", &APawn::SprintingPct)
        .def_readwrite("MaxFallSpeed", &APawn::MaxFallSpeed)
        .def_readwrite("TotalEncumbrance", &APawn::TotalEncumbrance)
        .def_readwrite("TotalEncumbranceBaseValue", &APawn::TotalEncumbranceBaseValue)
        .def_readwrite("TotalEncumbranceModifierStack", &APawn::TotalEncumbranceModifierStack)
        .def_readwrite("EncumbranceResistance", &APawn::EncumbranceResistance)
        .def_readwrite("EncumbranceResistanceBaseValue", &APawn::EncumbranceResistanceBaseValue)
        .def_readwrite("EncumbranceResistanceModifierStack", &APawn::EncumbranceResistanceModifierStack)
        .def_readwrite("AIMaxFallSpeedFactor", &APawn::AIMaxFallSpeedFactor)
        .def_readwrite("AnalogMovePct", &APawn::AnalogMovePct)
        .def_readwrite("BaseEyeHeight", &APawn::BaseEyeHeight)
        .def_readwrite("EyeHeight", &APawn::EyeHeight)
        .def_readwrite("Floor", &APawn::Floor)
        .def_readwrite("SplashTime", &APawn::SplashTime)
        .def_readwrite("HeadVolume", &APawn::HeadVolume)
        .def_readwrite("HealthVar", &APawn::HealthVar)
        .def_readwrite("HealthMaxVar", &APawn::HealthMaxVar)
        .def_readwrite("LastHealthVar", &APawn::LastHealthVar)
        .def_readwrite("LastHealthMaxVar", &APawn::LastHealthMaxVar)
        .def_readwrite("HealthPool", &APawn::HealthPool)
        .def_readwrite("BreathTime", &APawn::BreathTime)
        .def_readwrite("UnderWaterTime", &APawn::UnderWaterTime)
        .def_readwrite("LastPainTime", &APawn::LastPainTime)
        .def_readwrite("KismetDeathDelayTime", &APawn::KismetDeathDelayTime)
        .def_readwrite("RMVelocity", &APawn::RMVelocity)
        .def_readwrite("noise1spot", &APawn::noise1spot)
        .def_readwrite("noise1time", &APawn::noise1time)
        .def_readwrite("noise1other", &APawn::noise1other)
        .def_readwrite("noise1loudness", &APawn::noise1loudness)
        .def_readwrite("noise2spot", &APawn::noise2spot)
        .def_readwrite("noise2time", &APawn::noise2time)
        .def_readwrite("noise2other", &APawn::noise2other)
        .def_readwrite("noise2loudness", &APawn::noise2loudness)
        .def_readwrite("SoundDampening", &APawn::SoundDampening)
        .def_readwrite("DamageScaling", &APawn::DamageScaling)
        .def_readwrite("MenuName", &APawn::MenuName)
        .def_readwrite("ControllerClass", &APawn::ControllerClass)
        .def_readwrite("PlayerReplicationInfo", &APawn::PlayerReplicationInfo)
        .def_readwrite("OnLadder", &APawn::OnLadder)
        .def_readwrite("LandMovementState", &APawn::LandMovementState)
        .def_readwrite("WaterMovementState", &APawn::WaterMovementState)
        .def_readwrite("LastStartSpot", &APawn::LastStartSpot)
        .def_readwrite("LastStartTime", &APawn::LastStartTime)
        .def_readwrite("TakeHitLocation", &APawn::TakeHitLocation)
        .def_readwrite("HitDamageType", &APawn::HitDamageType)
        .def_readwrite("HitDamageTypeDefinition", &APawn::HitDamageTypeDefinition)
        .def_readwrite("HitImpactDefinition", &APawn::HitImpactDefinition)
        .def_readwrite("TearOffMomentum", &APawn::TearOffMomentum)
        .def_readwrite("Mesh", &APawn::Mesh)
        .def_readwrite("CylinderComponent", &APawn::CylinderComponent)
        .def_readwrite("RBPushRadius", &APawn::RBPushRadius)
        .def_readwrite("RBPushStrength", &APawn::RBPushStrength)
        .def_readwrite("DrivenVehicle", &APawn::DrivenVehicle)
        .def_readwrite("AlwaysRelevantDistanceSquared", &APawn::AlwaysRelevantDistanceSquared)
        .def_readwrite("VehicleCheckRadius", &APawn::VehicleCheckRadius)
        .def_readwrite("LastHitBy", &APawn::LastHitBy)
        .def_readwrite("ViewPitchMin", &APawn::ViewPitchMin)
        .def_readwrite("ViewPitchMax", &APawn::ViewPitchMax)
        .def_readwrite("AllowedYawError", &APawn::AllowedYawError)
        .def_readwrite("DesiredRotation", &APawn::DesiredRotation)
        .def_readwrite("InventoryManagerClass", &APawn::InventoryManagerClass)
        .def_readwrite("InvManager", &APawn::InvManager)
        .def_readwrite("Weapon", &APawn::Weapon)
        .def_readwrite("OffHandWeapon", &APawn::OffHandWeapon)
        .def_readwrite("FlashLocationWeaponID", &APawn::FlashLocationWeaponID)
        .def_readwrite("ShotCount", &APawn::ShotCount)
        .def_readwrite("PreRagdollCollisionComponent", &APawn::PreRagdollCollisionComponent)
        .def_readwrite("Allegiance", &APawn::Allegiance)
        .def_readwrite("AllegianceParent", &APawn::AllegianceParent)
        .def_readwrite("AllegianceChildren", &APawn::AllegianceChildren)
        .def_readwrite("PhysicsPushBody", &APawn::PhysicsPushBody)
        .def_readwrite("FailedLandingCount", &APawn::FailedLandingCount)
        .def_readwrite("SlotNodes", &APawn::SlotNodes)
        .def_readwrite("InterpGroupList", &APawn::InterpGroupList)
        .def_readwrite("FacialAudioComp", &APawn::FacialAudioComp)
        .def_readwrite("ScalarParameterInterpArray", &APawn::ScalarParameterInterpArray)
        .def_readwrite("RootMotionInterpCurve", &APawn::RootMotionInterpCurve)
        .def_readwrite("RootMotionInterpRate", &APawn::RootMotionInterpRate)
        .def_readwrite("RootMotionInterpCurrentTime", &APawn::RootMotionInterpCurrentTime)
        .def_readwrite("RootMotionInterpCurveLastValue", &APawn::RootMotionInterpCurveLastValue)
        .def_readwrite("MaxPreciseDestinationSpeed", &APawn::MaxPreciseDestinationSpeed)
        .def_readwrite("HorizontalPreciseDestinationThreshold", &APawn::HorizontalPreciseDestinationThreshold)
        .def_readwrite("VerticalPreciseDestinationThreshold", &APawn::VerticalPreciseDestinationThreshold)
        .def_readwrite("NormalImpactDamageModifier", &APawn::NormalImpactDamageModifier)
        .def_readwrite("NormalImpactDamageModifierBaseValue", &APawn::NormalImpactDamageModifierBaseValue)
        .def_readwrite("NormalImpactDamageModifierModifierStack", &APawn::NormalImpactDamageModifierModifierStack)
        .def_readwrite("NormalStatusEffectDamageModifier", &APawn::NormalStatusEffectDamageModifier)
        .def_readwrite("NormalStatusEffectDamageModifierBaseValue", &APawn::NormalStatusEffectDamageModifierBaseValue)
        .def_readwrite("NormalStatusEffectDamageModifierModifierStack", &APawn::NormalStatusEffectDamageModifierModifierStack)
        .def_readwrite("ExplosiveImpactDamageModifier", &APawn::ExplosiveImpactDamageModifier)
        .def_readwrite("ExplosiveImpactDamageModifierBaseValue", &APawn::ExplosiveImpactDamageModifierBaseValue)
        .def_readwrite("ExplosiveImpactDamageModifierModifierStack", &APawn::ExplosiveImpactDamageModifierModifierStack)
        .def_readwrite("ExplosiveStatusEffectDamageModifier", &APawn::ExplosiveStatusEffectDamageModifier)
        .def_readwrite("ExplosiveStatusEffectDamageModifierBaseValue", &APawn::ExplosiveStatusEffectDamageModifierBaseValue)
        .def_readwrite("ExplosiveStatusEffectDamageModifierModifierStack", &APawn::ExplosiveStatusEffectDamageModifierModifierStack)
        .def_readwrite("ShockImpactDamageModifier", &APawn::ShockImpactDamageModifier)
        .def_readwrite("ShockImpactDamageModifierBaseValue", &APawn::ShockImpactDamageModifierBaseValue)
        .def_readwrite("ShockImpactDamageModifierModifierStack", &APawn::ShockImpactDamageModifierModifierStack)
        .def_readwrite("ShockStatusEffectDamageModifier", &APawn::ShockStatusEffectDamageModifier)
        .def_readwrite("ShockStatusEffectDamageModifierBaseValue", &APawn::ShockStatusEffectDamageModifierBaseValue)
        .def_readwrite("ShockStatusEffectDamageModifierModifierStack", &APawn::ShockStatusEffectDamageModifierModifierStack)
        .def_readwrite("CorrosiveImpactDamageModifier", &APawn::CorrosiveImpactDamageModifier)
        .def_readwrite("CorrosiveImpactDamageModifierBaseValue", &APawn::CorrosiveImpactDamageModifierBaseValue)
        .def_readwrite("CorrosiveImpactDamageModifierModifierStack", &APawn::CorrosiveImpactDamageModifierModifierStack)
        .def_readwrite("CorrosiveStatusEffectDamageModifier", &APawn::CorrosiveStatusEffectDamageModifier)
        .def_readwrite("CorrosiveStatusEffectDamageModifierBaseValue", &APawn::CorrosiveStatusEffectDamageModifierBaseValue)
        .def_readwrite("CorrosiveStatusEffectDamageModifierModifierStack", &APawn::CorrosiveStatusEffectDamageModifierModifierStack)
        .def_readwrite("IncendiaryImpactDamageModifier", &APawn::IncendiaryImpactDamageModifier)
        .def_readwrite("IncendiaryImpactDamageModifierBaseValue", &APawn::IncendiaryImpactDamageModifierBaseValue)
        .def_readwrite("IncendiaryImpactDamageModifierModifierStack", &APawn::IncendiaryImpactDamageModifierModifierStack)
        .def_readwrite("IncendiaryStatusEffectDamageModifier", &APawn::IncendiaryStatusEffectDamageModifier)
        .def_readwrite("IncendiaryStatusEffectDamageModifierBaseValue", &APawn::IncendiaryStatusEffectDamageModifierBaseValue)
        .def_readwrite("IncendiaryStatusEffectDamageModifierModifierStack", &APawn::IncendiaryStatusEffectDamageModifierModifierStack)
        .def_readwrite("AmpImpactDamageModifier", &APawn::AmpImpactDamageModifier)
        .def_readwrite("AmpImpactDamageModifierBaseValue", &APawn::AmpImpactDamageModifierBaseValue)
        .def_readwrite("AmpImpactDamageModifierModifierStack", &APawn::AmpImpactDamageModifierModifierStack)
        .def_readwrite("AmpStatusEffectDamageModifier", &APawn::AmpStatusEffectDamageModifier)
        .def_readwrite("AmpStatusEffectDamageModifierBaseValue", &APawn::AmpStatusEffectDamageModifierBaseValue)
        .def_readwrite("AmpStatusEffectDamageModifierModifierStack", &APawn::AmpStatusEffectDamageModifierModifierStack)
        .def_readwrite("RecentDamage", &APawn::RecentDamage)
        .def_readwrite("BalanceDefinitionState", &APawn::BalanceDefinitionState)
        .def_readwrite("YawLastFrame", &APawn::YawLastFrame)
        .def_readwrite("YawPerSecond", &APawn::YawPerSecond)
        .def("StaticClass", &APawn::StaticClass, py::return_value_policy::reference)
        .def("OnHealthPoolMaxValueModified", &APawn::OnHealthPoolMaxValueModified)
        .def("IsVulnerableToFriendlyFire", &APawn::IsVulnerableToFriendlyFire)
        .def("eventSetWeaponVisibility", &APawn::eventSetWeaponVisibility)
        .def("ResetDefaultRotationRate", &APawn::ResetDefaultRotationRate)
        .def("SetPatsy", &APawn::SetPatsy)
        .def("GetPatsy", &APawn::GetPatsy, py::return_value_policy::reference)
        .def("IsBeingHealed", &APawn::IsBeingHealed)
        .def("SetBeingHealed", &APawn::SetBeingHealed)
        .def("GetDefaultRootMotionRotationMode", &APawn::GetDefaultRootMotionRotationMode)
        .def("GetDefaultRootMotionMode", &APawn::GetDefaultRootMotionMode)
        .def("OverrideDestroyInventoryContents", &APawn::OverrideDestroyInventoryContents)
        .def("TellOpportunityPawnIsDead", &APawn::TellOpportunityPawnIsDead)
        .def("GetDamageVector", &APawn::GetDamageVector)
        .def("GetRigidBodyMesh", &APawn::GetRigidBodyMesh, py::return_value_policy::reference)
        .def("DestroyHealthPool", &APawn::DestroyHealthPool)
        .def("SetHealthResourcePoolDefinition", [](APawn &self , class UResourcePoolDefinition* Definition) { class AResourcePoolManager** pyResourcePoolManager = 0 ;   self.SetHealthResourcePoolDefinition(Definition, pyResourcePoolManager); return py::make_tuple(*pyResourcePoolManager); })
        .def("Behavior_Killed", &APawn::Behavior_Killed)
        .def("Behavior_CauseRadiusDamage", &APawn::Behavior_CauseRadiusDamage)
        .def("Behavior_CauseDamage", &APawn::Behavior_CauseDamage)
        .def("EvaluateAttributeInitialization", &APawn::EvaluateAttributeInitialization)
        .def("FindAnimNode", &APawn::FindAnimNode, py::return_value_policy::reference)
        .def("SetRotationRate", &APawn::SetRotationRate)
        .def("GetCollisionRadius", &APawn::GetCollisionRadius)
        .def("Behavior_RegisterTargetable", &APawn::Behavior_RegisterTargetable)
        .def("Behavior_SetCanTarget", &APawn::Behavior_SetCanTarget)
        .def("ShowSelfAsTarget", &APawn::ShowSelfAsTarget)
        .def("eventGetTargetName", &APawn::eventGetTargetName)
        .def("eventSpeak", &APawn::eventSpeak)
        .def("SetScalarParameterInterp", &APawn::SetScalarParameterInterp)
        .def("SetRootMotionInterpCurrentTime", &APawn::SetRootMotionInterpCurrentTime)
        .def("SetCinematicMode", &APawn::SetCinematicMode)
        .def("ZeroMovementVariables", &APawn::ZeroMovementVariables)
        .def("ClearPathStep", &APawn::ClearPathStep)
        .def("DrawPathStep", &APawn::DrawPathStep)
        .def("IncrementPathChild", &APawn::IncrementPathChild)
        .def("IncrementPathStep", &APawn::IncrementPathStep)
        .def("CreatePathGoalEvaluator", &APawn::CreatePathGoalEvaluator, py::return_value_policy::reference)
        .def("CreatePathConstraint", &APawn::CreatePathConstraint, py::return_value_policy::reference)
        .def("AddGoalEvaluator", &APawn::AddGoalEvaluator)
        .def("AddPathConstraint", &APawn::AddPathConstraint)
        .def("ClearConstraints", &APawn::ClearConstraints)
        .def("eventSoakPause", &APawn::eventSoakPause)
        .def("eventBecomeViewTarget", &APawn::eventBecomeViewTarget)
        .def("eventMessagePlayer", &APawn::eventMessagePlayer)
        .def("HandleTeleport", &APawn::HandleTeleport)
        .def("OnTeleport", &APawn::OnTeleport)
        .def("OnSetMaterial", &APawn::OnSetMaterial)
        .def("GetDamageScaling", &APawn::GetDamageScaling)
        .def("DoKismetAttachment", &APawn::DoKismetAttachment)
        .def("eventSpawnedByKismet", &APawn::eventSpawnedByKismet)
        .def("GetCollisionExtent", &APawn::GetCollisionExtent)
        .def("eventGetCollisionHeight", &APawn::eventGetCollisionHeight)
        .def("CheatFly", &APawn::CheatFly)
        .def("CheatGhost", &APawn::CheatGhost)
        .def("CheatWalk", &APawn::CheatWalk)
        .def("PlayWeaponSwitch", &APawn::PlayWeaponSwitch)
        .def("SetActiveWeapon", &APawn::SetActiveWeapon)
        .def("TossInventory", &APawn::TossInventory)
        .def("ThrowActiveWeapon", &APawn::ThrowActiveWeapon)
        .def("DrawHUD", &APawn::DrawHUD)
        .def("FindInventoryType", &APawn::FindInventoryType, py::return_value_policy::reference)
        .def("eventCreateInventory", &APawn::eventCreateInventory, py::return_value_policy::reference)
        .def("AddDefaultInventory", &APawn::AddDefaultInventory)
        .def("eventStopDriving", &APawn::eventStopDriving)
        .def("eventStartDriving", &APawn::eventStartDriving)
        .def("CanThrowWeapon", &APawn::CanThrowWeapon)
        .def("Suicide", &APawn::Suicide)
        .def("GetVehicleBase", &APawn::GetVehicleBase, py::return_value_policy::reference)
        .def("PlayLanded", &APawn::PlayLanded)
        .def("CannotJumpNow", &APawn::CannotJumpNow)
        .def("PlayFootStepSound", &APawn::PlayFootStepSound)
        .def("eventTornOff", &APawn::eventTornOff)
        .def("PlayDying", &APawn::PlayDying)
        .def("SetDyingPhysics", &APawn::SetDyingPhysics)
        .def("TurnOff", &APawn::TurnOff)
        .def("PlayHealingHit", &APawn::PlayHealingHit)
        .def("PlayHit", &APawn::PlayHit)
        .def("PawnCheckPlayHitPreconditions", &APawn::PawnCheckPlayHitPreconditions)
        .def("PlayDyingSound", &APawn::PlayDyingSound)
        .def("DoJump", &APawn::DoJump)
        .def("CanJump", &APawn::CanJump)
        .def("CanStuckJump", &APawn::CanStuckJump)
        .def("CheckWaterJump", &APawn::CheckWaterJump)
        .def("TakeDrowningDamage", &APawn::TakeDrowningDamage)
        .def("eventBreathTimer", &APawn::eventBreathTimer)
        .def("TouchingWaterVolume", &APawn::TouchingWaterVolume)
        .def("eventHeadVolumeChange", &APawn::eventHeadVolumeChange)
        .def("eventTickSpecial", &APawn::eventTickSpecial)
        .def("eventLanded", &APawn::eventLanded)
        .def("eventFalling", &APawn::eventFalling)
        .def("DelayTriggerDeath", &APawn::DelayTriggerDeath)
        .def("Died", &APawn::Died)
        .def("PlayInjured", &APawn::PlayInjured)
        .def("ThrowWeaponOnDeath", &APawn::ThrowWeaponOnDeath)
        .def("eventIsSameTeam", &APawn::eventIsSameTeam)
        .def("GetTeam", &APawn::GetTeam, py::return_value_policy::reference)
        .def("GetTeamNum", &APawn::GetTeamNum)
        .def("TookDamageFromFriendly", &APawn::TookDamageFromFriendly)
        .def("TookDamageFromEnemy", &APawn::TookDamageFromEnemy)
        .def("eventTakeDamage", &APawn::eventTakeDamage)
        .def("IsDemigodMode", &APawn::IsDemigodMode)
        .def("PawnCheckTakeDamagePreconditions", &APawn::PawnCheckTakeDamagePreconditions)
        .def("eventHandleHealthDepleted", &APawn::eventHandleHealthDepleted)
        .def("SetKillInstigator", &APawn::SetKillInstigator, py::return_value_policy::reference)
        .def("NotifyTakeHit", &APawn::NotifyTakeHit)
        .def("eventTakeRadiusDamageOnBones", &APawn::eventTakeRadiusDamageOnBones)
        .def("PruneDamagedBoneList", &APawn::PruneDamagedBoneList)
        .def("eventHealDamage", &APawn::eventHealDamage)
        .def("HealthWasGained", &APawn::HealthWasGained)
        .def("AdjustDamage", [](APawn &self , class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class UIDamageCauser* DamageCauser, class UDamagePipeline* Pipeline, struct FVector* Momentum, struct FTraceHitInfo* HitInfo) { float* pyInDamage = (float*)malloc(sizeof(float)) ; float* pyDamageSeverityPercent = (float*)malloc(sizeof(float)) ;   self.AdjustDamage(InstigatedBy, HitLocation, DamageType, DamageCauser, Pipeline, pyInDamage, pyDamageSeverityPercent, Momentum, HitInfo); return py::make_tuple(*pyInDamage, *pyDamageSeverityPercent); })
        .def("SetMovementPhysics", &APawn::SetMovementPhysics)
        .def("Gasp", &APawn::Gasp)
        .def("OnAssignController", &APawn::OnAssignController)
        .def("eventReceivedNewEvent", &APawn::eventReceivedNewEvent)
        .def("SpawnDefaultController", &APawn::SpawnDefaultController)
        .def("eventPostBeginPlay", &APawn::eventPostBeginPlay)
        .def("eventPreBeginPlay", &APawn::eventPreBeginPlay)
        .def("eventDestroyed", &APawn::eventDestroyed)
        .def("DetachFromController", &APawn::DetachFromController)
        .def("CrushedByActor", &APawn::CrushedByActor)
        .def("CrushedBy", &APawn::CrushedBy)
        .def("CanBeBaseForPawn", &APawn::CanBeBaseForPawn)
        .def("eventBaseChange", &APawn::eventBaseChange)
        .def("eventStuckOnPawn", &APawn::eventStuckOnPawn)
        .def("JumpOffPawn", &APawn::JumpOffPawn)
        .def("gibbedBy", &APawn::gibbedBy)
        .def("eventEncroachedBy", &APawn::eventEncroachedBy)
        .def("eventEncroachingOn", &APawn::eventEncroachingOn)
        .def("FaceRotation", &APawn::FaceRotation)
        .def("eventUpdatePawnRotation", &APawn::eventUpdatePawnRotation)
        .def("ClientSetRotation", &APawn::ClientSetRotation)
        .def("ClientRestart", &APawn::ClientRestart)
        .def("Restart", &APawn::Restart)
        .def("GetFallingDamageScale", &APawn::GetFallingDamageScale)
        .def("TakeFallingDamage", &APawn::TakeFallingDamage)
        .def("KilledBy", &APawn::KilledBy)
        .def("AddVelocity", &APawn::AddVelocity)
        .def("HandleMomentum", &APawn::HandleMomentum)
        .def("eventStartCrouch", &APawn::eventStartCrouch)
        .def("eventEndCrouch", &APawn::eventEndCrouch)
        .def("ShouldCrouch", &APawn::ShouldCrouch)
        .def("UnCrouch", &APawn::UnCrouch)
        .def("eventOutsideWorldBounds", &APawn::eventOutsideWorldBounds)
        .def("eventFellOutOfWorld", &APawn::eventFellOutOfWorld)
        .def("eventClientMessage", &APawn::eventClientMessage)
        .def("HandlePickup", &APawn::HandlePickup)
        .def("LineOfSightTo", &APawn::LineOfSightTo)
        .def("SetMoveTarget", &APawn::SetMoveTarget)
        .def("InGodMode", &APawn::InGodMode)
        .def("SetViewRotation", &APawn::SetViewRotation)
        .def("GetAdjustedAimFor", &APawn::GetAdjustedAimFor)
        .def("InFreeCam", &APawn::InFreeCam)
        .def("eventGetBaseAimRotation", &APawn::eventGetBaseAimRotation)
        .def("GetWeaponStartTraceLocation", &APawn::GetWeaponStartTraceLocation)
        .def("GetPawnViewLocation", &APawn::GetPawnViewLocation)
        .def("GetViewRotation", &APawn::GetViewRotation)
        .def("GetActorEyesViewPoint", &APawn::GetActorEyesViewPoint)
        .def("ProcessViewRotation", &APawn::ProcessViewRotation)
        .def("IsFirstPerson", &APawn::IsFirstPerson)
        .def("IsPlayerPawn", &APawn::IsPlayerPawn)
        .def("IsLocallyControlled", &APawn::IsLocallyControlled)
        .def("IsAIControlled", &APawn::IsAIControlled)
        .def("IsHumanControlled", &APawn::IsHumanControlled)
        .def("ClimbLadder", &APawn::ClimbLadder)
        .def("EndClimbLadder", &APawn::EndClimbLadder)
        .def("CanSplash", &APawn::CanSplash)
        .def("eventSetSprinting", &APawn::eventSetSprinting)
        .def("RangedAttackTime", &APawn::RangedAttackTime)
        .def("RecommendLongRangedAttack", &APawn::RecommendLongRangedAttack)
        .def("CanGrabLadder", &APawn::CanGrabLadder)
        .def("DropToGround", &APawn::DropToGround)
        .def("GetDefaultCameraMode", &APawn::GetDefaultCameraMode)
        .def("UnPossessed", &APawn::UnPossessed)
        .def("UpdateControllerOnPossess", &APawn::UpdateControllerOnPossess)
        .def("UpdateWeaponOnPossess", &APawn::UpdateWeaponOnPossess)
        .def("PossessedBy", &APawn::PossessedBy)
        .def("NotifyTeamChanged", &APawn::NotifyTeamChanged)
        .def("PlayTeleportEffect", &APawn::PlayTeleportEffect)
        .def("GetHumanReadableName", &APawn::GetHumanReadableName)
        .def("NeedToTurn", &APawn::NeedToTurn)
        .def("IsFiring", &APawn::IsFiring)
        .def("HasRangedAttack", &APawn::HasRangedAttack)
        .def("FireOnRelease", &APawn::FireOnRelease)
        .def("TooCloseToAttack", &APawn::TooCloseToAttack)
        .def("CanAttack", &APawn::CanAttack)
        .def("BotFire", &APawn::BotFire)
        .def("WeaponStoppedFiring", &APawn::WeaponStoppedFiring)
        .def("WeaponFired", &APawn::WeaponFired)
        .def("FlashLocationUpdated", &APawn::FlashLocationUpdated)
        .def("ClearFlashLocation", &APawn::ClearFlashLocation)
        .def("SetFlashLocation", &APawn::SetFlashLocation)
        .def("ClearFlashCount", &APawn::ClearFlashCount)
        .def("FlashCountUpdated", &APawn::FlashCountUpdated)
        .def("IncrementFlashCount", &APawn::IncrementFlashCount)
        .def("FiringModeUpdated", &APawn::FiringModeUpdated)
        .def("SetFiringMode", &APawn::SetFiringMode)
        .def("GetWeaponFiringMode", &APawn::GetWeaponFiringMode)
        .def("StopFire", &APawn::StopFire)
        .def("StartFire", &APawn::StartFire)
        .def("StopFiring", &APawn::StopFiring)
        .def("Reset", &APawn::Reset)
        .def("PlayerChangedTeam", &APawn::PlayerChangedTeam)
        .def("SetBaseEyeheight", &APawn::SetBaseEyeheight)
        .def("IsDead", &APawn::IsDead)
        .def("IsInjured", &APawn::IsInjured)
        .def("GetController", &APawn::GetController, py::return_value_policy::reference)
        .def("eventSpecialMoveThruEdge", &APawn::eventSpecialMoveThruEdge)
        .def("SpecialMoveTo", &APawn::SpecialMoveTo)
        .def("TermRagdoll", &APawn::TermRagdoll)
        .def("InitRagdoll", &APawn::InitRagdoll)
        .def("GetBoundingCylinder", [](APawn &self ) { float* pyCollisionRadius = (float*)malloc(sizeof(float)) ; float* pyCollisionHeight = (float*)malloc(sizeof(float)) ;   self.GetBoundingCylinder(pyCollisionRadius, pyCollisionHeight); return py::make_tuple(*pyCollisionRadius, *pyCollisionHeight); })
        .def("ReachedDesiredRotation", &APawn::ReachedDesiredRotation)
        .def("SetPushesRigidBodies", &APawn::SetPushesRigidBodies)
        .def("UndoForceCrouch", &APawn::UndoForceCrouch)
        .def("ForceCrouch", &APawn::ForceCrouch)
        .def("ReachedPoint", &APawn::ReachedPoint)
        .def("ReachedDestination", &APawn::ReachedDestination)
        .def("GetBestAnchor", [](APawn &self , class AActor* TestActor, struct FVector TestLocation, unsigned long bStartPoint, unsigned long bOnlyCheckVisible) { float* pyout_Dist = (float*)malloc(sizeof(float)) ;  class ANavigationPoint* ret =  self.GetBestAnchor(TestActor, TestLocation, bStartPoint, bOnlyCheckVisible, pyout_Dist); return py::make_tuple(ret, *pyout_Dist); })
        .def("SetAnchor", &APawn::SetAnchor)
        .def("SetRemoteViewYaw", &APawn::SetRemoteViewYaw)
        .def("SetRemoteViewPitch", &APawn::SetRemoteViewPitch)
        .def("IsInvisible", &APawn::IsInvisible)
        .def("IsValidEnemyTargetFor", &APawn::IsValidEnemyTargetFor)
        .def("GetFallDuration", &APawn::GetFallDuration)
        .def("SuggestJumpVelocity", &APawn::SuggestJumpVelocity)
        .def("ValidAnchor", &APawn::ValidAnchor)
        .def("AdjustDestination", &APawn::AdjustDestination)
        .def("IsAliveAndWell", &APawn::IsAliveAndWell)
        .def("ApplyBalanceDefinitionCustomizations", &APawn::ApplyBalanceDefinitionCustomizations)
        .def("InitializeBalanceDefinitionState", &APawn::InitializeBalanceDefinitionState)
        .def("eventReplicatedEvent", &APawn::eventReplicatedEvent)
        .def("eventSetSkelControlScale", &APawn::eventSetSkelControlScale)
        .def("eventSetMorphWeight", &APawn::eventSetMorphWeight)
        .def("eventGetActorFaceFXAsset", &APawn::eventGetActorFaceFXAsset, py::return_value_policy::reference)
        .def("FaceFXAudioFinished", &APawn::FaceFXAudioFinished)
        .def("OnPlayFaceFXAnim", &APawn::OnPlayFaceFXAnim)
        .def("CanActorPlayFaceFXAnim", &APawn::CanActorPlayFaceFXAnim)
        .def("IsActorPlayingFaceFXAnim", &APawn::IsActorPlayingFaceFXAnim)
        .def("eventGetFaceFXAudioComponent", &APawn::eventGetFaceFXAudioComponent, py::return_value_policy::reference)
        .def("eventStopActorFaceFXAnim", &APawn::eventStopActorFaceFXAnim)
        .def("eventPlayActorFaceFXAnim", &APawn::eventPlayActorFaceFXAnim)
        .def("eventMAT_FinishAIGroup", &APawn::eventMAT_FinishAIGroup)
        .def("eventMAT_BeginAIGroup", &APawn::eventMAT_BeginAIGroup)
        .def("FinishAIGroup", &APawn::FinishAIGroup)
        .def("BeginAIGroup", &APawn::BeginAIGroup)
        .def("eventInterpolationFinished", &APawn::eventInterpolationFinished)
        .def("eventInterpolationStarted", &APawn::eventInterpolationStarted)
        .def("LastMatineeAnimFinished", &APawn::LastMatineeAnimFinished)
        .def("MAT_SetSkelControlStrength", &APawn::MAT_SetSkelControlStrength)
        .def("MAT_SetSkelControlScale", &APawn::MAT_SetSkelControlScale)
        .def("MAT_SetMorphWeight", &APawn::MAT_SetMorphWeight)
        .def("MAT_SetAnimWeights", &APawn::MAT_SetAnimWeights)
        .def("MAT_SetAnimPosition", &APawn::MAT_SetAnimPosition)
        .def("eventSetAnimPosition", &APawn::eventSetAnimPosition)
        .def("MAT_FinishAnimControl", &APawn::MAT_FinishAnimControl)
        .def("eventFinishAnimControl", &APawn::eventFinishAnimControl)
        .def("MAT_BeginAnimControl", &APawn::MAT_BeginAnimControl)
        .def("eventBeginAnimControl", &APawn::eventBeginAnimControl)
        .def("GetDefaultMaxHealth", &APawn::GetDefaultMaxHealth)
        .def("GetDefaultHealth", &APawn::GetDefaultHealth)
        .def("GetMaxHealth", &APawn::GetMaxHealth)
        .def("GetHealth", &APawn::GetHealth)
        .def("SetMaxHealth", &APawn::SetMaxHealth)
        .def("SetHealth", &APawn::SetHealth)
        .def("eventRestoreAnimSetsToDefault", &APawn::eventRestoreAnimSetsToDefault)
        .def("eventAnimSetListUpdated", &APawn::eventAnimSetListUpdated)
        .def("AddAnimSets", &APawn::AddAnimSets)
        .def("eventBuildScriptAnimSetList", &APawn::eventBuildScriptAnimSetList)
        .def("UpdateAnimSetList", &APawn::UpdateAnimSetList)
        .def("ClearAnimNodes", &APawn::ClearAnimNodes)
        .def("CacheAnimNodes", &APawn::CacheAnimNodes)
        .def("eventPostInitAnimTree", &APawn::eventPostInitAnimTree)
        .def("IsDesiredRotationLocked", &APawn::IsDesiredRotationLocked)
        .def("IsDesiredRotationInUse", &APawn::IsDesiredRotationInUse)
        .def("CheckDesiredRotation", &APawn::CheckDesiredRotation)
        .def("ResetDesiredRotation", &APawn::ResetDesiredRotation)
        .def("LockDesiredRotation", &APawn::LockDesiredRotation)
        .def("SetDesiredRotation", &APawn::SetDesiredRotation)
        .def("IsDamagePipelineDebugEnabled", &APawn::IsDamagePipelineDebugEnabled)
        .def("ToggleDamagePipelineDebug", &APawn::ToggleDamagePipelineDebug)
        .def("SetInfoBarVisibility", &APawn::SetInfoBarVisibility)
        .def("HideTargetInfoOnHud", &APawn::HideTargetInfoOnHud)
        .def("IsChampion", &APawn::IsChampion)
        .def("IsBoss", &APawn::IsBoss)
        .def("DisplayParentInfo", &APawn::DisplayParentInfo)
        .def("GetAllBarInfo", &APawn::GetAllBarInfo)
        .def("GetExpInfo", [](APawn &self ) { int* pyExpLevelValue = (int*)malloc(sizeof(int)) ;   self.GetExpInfo(pyExpLevelValue); return py::make_tuple(*pyExpLevelValue); })
        .def("PickWallAdjust", &APawn::PickWallAdjust)
        .def("IsUsingWalkingPhysics", &APawn::IsUsingWalkingPhysics)
        .def("GetAutoAimProfile", &APawn::GetAutoAimProfile)
        .def("GetMagnetismRange", &APawn::GetMagnetismRange)
        .def("GetMagnetismOrigin", &APawn::GetMagnetismOrigin)
        .def("IsAutoAimTarget", &APawn::IsAutoAimTarget)
        .def("HasHomingTargetComponents", &APawn::HasHomingTargetComponents)
        .def("IsValidHomingTarget", &APawn::IsValidHomingTarget)
        .def("GetTargetableIsHidden", &APawn::GetTargetableIsHidden)
        .def("DoesTargetableTakeDamage", &APawn::DoesTargetableTakeDamage)
        .def("GetTargetingModifier", &APawn::GetTargetingModifier)
        .def("IsInjuredDead", &APawn::IsInjuredDead)
        .def("CanSnapZoom", &APawn::CanSnapZoom)
        .def("GetSnapLocation", &APawn::GetSnapLocation)
        .def("GetTargetableLocation", &APawn::GetTargetableLocation)
        .def("IsTargetableProxy", &APawn::IsTargetableProxy)
        .def("IsTargetable", &APawn::IsTargetable)
        .def("GetOpinion", &APawn::GetOpinion)
        .def("SetAllegiance", &APawn::SetAllegiance)
        .def("GetDefaultAllegiance", &APawn::GetDefaultAllegiance, py::return_value_policy::reference)
        .def("GetObjectAllegiance", &APawn::GetObjectAllegiance, py::return_value_policy::reference)
        .def("IsSameAllegiance", &APawn::IsSameAllegiance)
        .def("IsNeutral", &APawn::IsNeutral)
        .def("IsFriendly", &APawn::IsFriendly)
        .def("IsEnemy", &APawn::IsEnemy)
        .def("GetTargetableActor", &APawn::GetTargetableActor, py::return_value_policy::reference)
          ;
}