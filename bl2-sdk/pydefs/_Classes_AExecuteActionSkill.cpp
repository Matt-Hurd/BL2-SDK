#include "stdafx.h"
// Using =======================================================================
using namespace boost::python;

// Module ======================================================================
void Export_pystes_AExecuteActionSkill()
{
    class_< AExecuteActionSkill, bases< AActionSkill >  , boost::noncopyable>("AExecuteActionSkill", no_init)
        .def_readwrite("ExecuteDurationFormula", &AExecuteActionSkill::ExecuteDurationFormula)
        .def_readwrite("RestoreControlAfterMeleeSwingDelay", &AExecuteActionSkill::RestoreControlAfterMeleeSwingDelay)
        .def_readwrite("AutoSwingAngleInDegrees", &AExecuteActionSkill::AutoSwingAngleInDegrees)
        .def_readwrite("ExecuteCaption", &AExecuteActionSkill::ExecuteCaption)
        .def_readwrite("ExecuteMeleeSkill", &AExecuteActionSkill::ExecuteMeleeSkill)
        .def_readwrite("ExecuteAnimDelay", &AExecuteActionSkill::ExecuteAnimDelay)
        .def_readwrite("ExecuteMeleeDef", &AExecuteActionSkill::ExecuteMeleeDef)
        .def_readwrite("CheckForTargetDistance", &AExecuteActionSkill::CheckForTargetDistance)
        .def_readwrite("InitiateMeleeDistance", &AExecuteActionSkill::InitiateMeleeDistance)
        .def_readwrite("ExecuteVelocity", &AExecuteActionSkill::ExecuteVelocity)
        .def_readwrite("AirSpeed", &AExecuteActionSkill::AirSpeed)
        .def_readwrite("AccelRateMultiplier", &AExecuteActionSkill::AccelRateMultiplier)
        .def_readwrite("MinHitWallOverrideFormula", &AExecuteActionSkill::MinHitWallOverrideFormula)
        .def_readwrite("DashEndInAirVelocityScale", &AExecuteActionSkill::DashEndInAirVelocityScale)
        .def_readwrite("BeginExecuteSMD", &AExecuteActionSkill::BeginExecuteSMD)
        .def_readwrite("IdleExecuteSMD", &AExecuteActionSkill::IdleExecuteSMD)
        .def_readwrite("ExecuteAttackSMD", &AExecuteActionSkill::ExecuteAttackSMD)
        .def_readwrite("ExecuteDOFEffectData", &AExecuteActionSkill::ExecuteDOFEffectData)
        .def_readwrite("ExecuteDOFModiferData", &AExecuteActionSkill::ExecuteDOFModiferData)
        .def_readwrite("ExecuteDOFEffectName", &AExecuteActionSkill::ExecuteDOFEffectName)
        .def_readwrite("CancelDashAngleInDegrees", &AExecuteActionSkill::CancelDashAngleInDegrees)
        .def_readwrite("VisionModeMaterial", &AExecuteActionSkill::VisionModeMaterial)
        .def_readwrite("VisionModePostProcessChain", &AExecuteActionSkill::VisionModePostProcessChain)
        .def_readwrite("VisionModePostProcessChainOptions", &AExecuteActionSkill::VisionModePostProcessChainOptions)
        .def_readwrite("VisionModeCoordinatedEffect", &AExecuteActionSkill::VisionModeCoordinatedEffect)
        .def_readwrite("VisionModeCurrentTargetCoordinatedEffect", &AExecuteActionSkill::VisionModeCurrentTargetCoordinatedEffect)
        .def_readwrite("CritLocationsSkill", &AExecuteActionSkill::CritLocationsSkill)
        .def_readwrite("VisionModeMaterialInstance", &AExecuteActionSkill::VisionModeMaterialInstance)
        .def_readwrite("PrevVisionModePPCModifierData", &AExecuteActionSkill::PrevVisionModePPCModifierData)
        .def_readwrite("PrevVisionModeDOFEffectData", &AExecuteActionSkill::PrevVisionModeDOFEffectData)
        .def_readwrite("PreExecuteVelocity", &AExecuteActionSkill::PreExecuteVelocity)
        .def_readwrite("PrevFrameExecuteVelocity", &AExecuteActionSkill::PrevFrameExecuteVelocity)
        .def_readwrite("CachedAccelRate", &AExecuteActionSkill::CachedAccelRate)
        .def_readwrite("CachedMinHitWall", &AExecuteActionSkill::CachedMinHitWall)
        .def_readwrite("MyTarget", &AExecuteActionSkill::MyTarget)
        .def_readwrite("InitiateMeleeDistanceSquared", &AExecuteActionSkill::InitiateMeleeDistanceSquared)
        .def_readwrite("ActionSkill", &AExecuteActionSkill::ActionSkill)
        .def_readwrite("MeleeAttackAnimDuration", &AExecuteActionSkill::MeleeAttackAnimDuration)
        .def_readwrite("ExecuteDuration", &AExecuteActionSkill::ExecuteDuration)
        .def_readwrite("MinHitWallOverride", &AExecuteActionSkill::MinHitWallOverride)
        .def_readwrite("AutoSwingAngleCos", &AExecuteActionSkill::AutoSwingAngleCos)
        .def_readwrite("CancelDashAngleCos", &AExecuteActionSkill::CancelDashAngleCos)
        .def_readwrite("SkillDuration", &AExecuteActionSkill::SkillDuration)
        .def("StaticClass", &AExecuteActionSkill::StaticClass, return_value_policy< reference_existing_object >())
        .def("HasTrainedCritLocationsSkill", &AExecuteActionSkill::HasTrainedCritLocationsSkill)
        .def("eventOverrideCrosshairVisibility", &AExecuteActionSkill::eventOverrideCrosshairVisibility)
        .def("eventDisableActionSkillHUD", &AExecuteActionSkill::eventDisableActionSkillHUD)
        .def("eventEnableActionSkillHUD", &AExecuteActionSkill::eventEnableActionSkillHUD)
        .def("eventTickActionSkillHUD", &AExecuteActionSkill::eventTickActionSkillHUD)
        .def("UpdateHUDTimer", &AExecuteActionSkill::UpdateHUDTimer)
        .def("FoundBadReflectionVelocity", &AExecuteActionSkill::FoundBadReflectionVelocity)
        .def("OnExecuteEndEarlyDueToCollision", &AExecuteActionSkill::OnExecuteEndEarlyDueToCollision)
        .def("OnExecuteFailedToKillTarget", &AExecuteActionSkill::OnExecuteFailedToKillTarget)
        .def("OnExecuteKilledTarget", &AExecuteActionSkill::OnExecuteKilledTarget)
        .def("OnExecuteAttackBegin", &AExecuteActionSkill::OnExecuteAttackBegin)
        .def("OnExecuteDashEnd", &AExecuteActionSkill::OnExecuteDashEnd)
        .def("OnExecuteEnd", &AExecuteActionSkill::OnExecuteEnd)
        .def("OnExecuteBegin", &AExecuteActionSkill::OnExecuteBegin)
        .def("OnExecuteIsNowAvailable", &AExecuteActionSkill::OnExecuteIsNowAvailable)
        .def("DrawExecuteDebug", &AExecuteActionSkill::DrawExecuteDebug)
        .def("IsExecuting", &AExecuteActionSkill::IsExecuting)
        .def("CleanUpExecute", &AExecuteActionSkill::CleanUpExecute)
        .def("EndExecuteEarlyDueToCollision", &AExecuteActionSkill::EndExecuteEarlyDueToCollision)
        .def("RestorePhysicsPostExecute", &AExecuteActionSkill::RestorePhysicsPostExecute)
        .def("RestrictPlayerMovementPreExecute", &AExecuteActionSkill::RestrictPlayerMovementPreExecute)
        .def("RestorePlayerMovementPostExecute", &AExecuteActionSkill::RestorePlayerMovementPostExecute)
        .def("EnableDOFEffect", &AExecuteActionSkill::EnableDOFEffect)
        .def("EnableVisionModeEffect", &AExecuteActionSkill::EnableVisionModeEffect)
        .def("OnActionSkillOwnerTouchedActor", &AExecuteActionSkill::OnActionSkillOwnerTouchedActor)
        .def("OnActionSkillOwnerHitWall", &AExecuteActionSkill::OnActionSkillOwnerHitWall)
        .def("PlayMeleeAttackAnim", &AExecuteActionSkill::PlayMeleeAttackAnim)
        .def("AttachMeleeWeapon", &AExecuteActionSkill::AttachMeleeWeapon)
        .def("FirePawnCannon", &AExecuteActionSkill::FirePawnCannon)
        .def("ServerFirePawnCannon", &AExecuteActionSkill::ServerFirePawnCannon)
        .def("WeaponDeEquipped", &AExecuteActionSkill::WeaponDeEquipped)
        .def("DrawGhettoDebugSphere", &AExecuteActionSkill::DrawGhettoDebugSphere)
        .def("ClientPerformExecuteAttack", &AExecuteActionSkill::ClientPerformExecuteAttack)
        .def("UpdateExecuteRotation", &AExecuteActionSkill::UpdateExecuteRotation)
        .def("IsTargetWithinAutoSwingCone", &AExecuteActionSkill::IsTargetWithinAutoSwingCone)
        .def("TriggerExecuteAttack", &AExecuteActionSkill::TriggerExecuteAttack)
        .def("CanHitExecuteTarget", &AExecuteActionSkill::CanHitExecuteTarget)
        .def("UpdateExecuteTooltip", &AExecuteActionSkill::UpdateExecuteTooltip)
        .def("ClientExecuteIsAvailable", &AExecuteActionSkill::ClientExecuteIsAvailable)
        .def("OnExecuteIsAvailable", &AExecuteActionSkill::OnExecuteIsAvailable)
        .def("SetExecuteAvailability", &AExecuteActionSkill::SetExecuteAvailability)
        .def("HasAutoAimTarget", &AExecuteActionSkill::HasAutoAimTarget)
        .def("TryEnablingExecuteCooldown", &AExecuteActionSkill::TryEnablingExecuteCooldown)
        .def("ClientEndExecuteDash", &AExecuteActionSkill::ClientEndExecuteDash)
        .def("EndExecuteDash", &AExecuteActionSkill::EndExecuteDash)
        .def("ExecuteDashTimerUp", &AExecuteActionSkill::ExecuteDashTimerUp)
        .def("ServerEndExecute", &AExecuteActionSkill::ServerEndExecute)
        .def("EndExecute", &AExecuteActionSkill::EndExecute)
        .def("ClientEndExecute", &AExecuteActionSkill::ClientEndExecute)
        .def("RemoveExecuteFlagInstanceData", &AExecuteActionSkill::RemoveExecuteFlagInstanceData)
        .def("SetExecuteFlagInstanceData", &AExecuteActionSkill::SetExecuteFlagInstanceData)
        .def("IsVisionModeEffectEnabled", &AExecuteActionSkill::IsVisionModeEffectEnabled)
        .def("RemoveVisionModeFromPawns", &AExecuteActionSkill::RemoveVisionModeFromPawns)
        .def("UpdateVisionModeForPawns", &AExecuteActionSkill::UpdateVisionModeForPawns)
        .def("ActionSkillComplete", &AExecuteActionSkill::ActionSkillComplete)
        .def("BeginExecute", &AExecuteActionSkill::BeginExecute)
        .def("TryExecuting", &AExecuteActionSkill::TryExecuting)
        .def("StartActionSkillActiveAbility", &AExecuteActionSkill::StartActionSkillActiveAbility)
        .def("OnActionSkillOwnerMelee", &AExecuteActionSkill::OnActionSkillOwnerMelee)
        .def("CanInitiateNewExecuteAttack", &AExecuteActionSkill::CanInitiateNewExecuteAttack)
        .def("ReadyToInterceptMelee", &AExecuteActionSkill::ReadyToInterceptMelee)
        .def("eventOnActionSkillTick", &AExecuteActionSkill::eventOnActionSkillTick)
        .def("RemoveCritLocationEffect", &AExecuteActionSkill::RemoveCritLocationEffect)
        .def("OnActionSkillKilledEnemy", &AExecuteActionSkill::OnActionSkillKilledEnemy)
        .def("eventOwnerAcquiredAutoAimTarget", &AExecuteActionSkill::eventOwnerAcquiredAutoAimTarget)
        .def("OnActionSkillShowBackMenu", &AExecuteActionSkill::OnActionSkillShowBackMenu)
        .def("OnActionSkillOwnerWeaponSwitched", &AExecuteActionSkill::OnActionSkillOwnerWeaponSwitched)
        .def("OnActionSkillEnded", &AExecuteActionSkill::OnActionSkillEnded)
        .def("ClientActionSkillWantsToDeactivate", &AExecuteActionSkill::ClientActionSkillWantsToDeactivate)
        .def("eventOnActionSkillWantsToDeactivate", &AExecuteActionSkill::eventOnActionSkillWantsToDeactivate)
        .def("OnActionSkillStarted", &AExecuteActionSkill::OnActionSkillStarted)
        .staticmethod("StaticClass")
  ;
}