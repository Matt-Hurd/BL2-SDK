#include "stdafx.h"
// Using =======================================================================
namespace py = pybind11;

// Module ======================================================================
void Export_pystes_GearboxFramework_classes(py::module &m)
{
	py::class_< UActorFactoryClone, UAudioDevice >(m, "UActorFactoryClone")
		.def_static("StaticClass", &UActorFactoryClone::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CloneArchetype", &UActorFactoryClone::CloneArchetype, py::return_value_policy::reference)
		.def_readwrite("NewCloneTag", &UActorFactoryClone::NewCloneTag, py::return_value_policy::reference)
		;
	py::class_< UActorFactoryWireTerminal, UAudioDevice >(m, "UActorFactoryWireTerminal")
		.def_static("StaticClass", &UActorFactoryWireTerminal::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UAIDebugCamera, UAudioDevice >(m, "UAIDebugCamera")
		.def_static("StaticClass", &UAIDebugCamera::StaticClass, py::return_value_policy::reference)
		.def_property("bSnapshotModeOn", [](UAIDebugCamera &self){return self.bSnapshotModeOn;}, [](UAIDebugCamera &self, bool value){self.bSnapshotModeOn = value ? 1 : 0;})
		.def_property("bShowFlags", [](UAIDebugCamera &self){return self.bShowFlags;}, [](UAIDebugCamera &self, bool value){self.bShowFlags = value ? 1 : 0;})
		.def_property("bShowRules", [](UAIDebugCamera &self){return self.bShowRules;}, [](UAIDebugCamera &self, bool value){self.bShowRules = value ? 1 : 0;})
		.def_property("bShowInactiveRules", [](UAIDebugCamera &self){return self.bShowInactiveRules;}, [](UAIDebugCamera &self, bool value){self.bShowInactiveRules = value ? 1 : 0;})
		.def_property("bShowResources", [](UAIDebugCamera &self){return self.bShowResources;}, [](UAIDebugCamera &self, bool value){self.bShowResources = value ? 1 : 0;})
		.def_property("bShowCombat", [](UAIDebugCamera &self){return self.bShowCombat;}, [](UAIDebugCamera &self, bool value){self.bShowCombat = value ? 1 : 0;})
		.def_property("bShowRuleEngineLoadBalance", [](UAIDebugCamera &self){return self.bShowRuleEngineLoadBalance;}, [](UAIDebugCamera &self, bool value){self.bShowRuleEngineLoadBalance = value ? 1 : 0;})
		.def_property("bShowAwarenessZones", [](UAIDebugCamera &self){return self.bShowAwarenessZones;}, [](UAIDebugCamera &self, bool value){self.bShowAwarenessZones = value ? 1 : 0;})
		.def_property("bShowTargetViewCones", [](UAIDebugCamera &self){return self.bShowTargetViewCones;}, [](UAIDebugCamera &self, bool value){self.bShowTargetViewCones = value ? 1 : 0;})
		.def_property("bShowTimers", [](UAIDebugCamera &self){return self.bShowTimers;}, [](UAIDebugCamera &self, bool value){self.bShowTimers = value ? 1 : 0;})
		.def_property("bShowAITree", [](UAIDebugCamera &self){return self.bShowAITree;}, [](UAIDebugCamera &self, bool value){self.bShowAITree = value ? 1 : 0;})
		.def_readwrite("Mind", &UAIDebugCamera::Mind, py::return_value_policy::reference)
		.def_readwrite("RuleEngine", &UAIDebugCamera::RuleEngine, py::return_value_policy::reference)
		.def_readwrite("DisplayList", &UAIDebugCamera::DisplayList, py::return_value_policy::reference)
		.def_readwrite("SnapshotNdx", &UAIDebugCamera::SnapshotNdx)
		.def_readwrite("CurSnapshot", &UAIDebugCamera::CurSnapshot, py::return_value_policy::reference)
		.def_readwrite("PopUpGraphTop", &UAIDebugCamera::PopUpGraphTop, py::return_value_policy::reference)
		.def_readwrite("PopUpGraphCenter", &UAIDebugCamera::PopUpGraphCenter, py::return_value_policy::reference)
		.def_readwrite("CurrentInspectedTargetName", &UAIDebugCamera::CurrentInspectedTargetName, py::return_value_policy::reference)
		.def_readwrite("TopBarGraphStartXPct", &UAIDebugCamera::TopBarGraphStartXPct)
		.def_readwrite("TopBarGraphStartYPct", &UAIDebugCamera::TopBarGraphStartYPct)
		.def_readwrite("CenterBarGraphStartXPct", &UAIDebugCamera::CenterBarGraphStartXPct)
		.def_readwrite("CenterBarGraphStartYPct", &UAIDebugCamera::CenterBarGraphStartYPct)
		.def_readwrite("Column2XOffset", &UAIDebugCamera::Column2XOffset)
		.def_readwrite("Column1LastY", &UAIDebugCamera::Column1LastY)
		.def_readwrite("Column2LastY", &UAIDebugCamera::Column2LastY)
		.def_readwrite("LastColumnDrawnTo", &UAIDebugCamera::LastColumnDrawnTo)
		.def("ToggleAITree", &UAIDebugCamera::ToggleAITree)
		.def("ToggleTargetViewCones", &UAIDebugCamera::ToggleTargetViewCones)
		.def("ToggleAwarenessZones", &UAIDebugCamera::ToggleAwarenessZones)
		.def("ToggleRuleEngineLoadBalance", &UAIDebugCamera::ToggleRuleEngineLoadBalance)
		.def("ToggleCombat", &UAIDebugCamera::ToggleCombat)
		.def("ToggleShowTimers", &UAIDebugCamera::ToggleShowTimers)
		.def("ToggleResources", &UAIDebugCamera::ToggleResources)
		.def("ToggleInactiveRules", &UAIDebugCamera::ToggleInactiveRules)
		.def("ToggleRules", &UAIDebugCamera::ToggleRules)
		.def("ToggleFlags", &UAIDebugCamera::ToggleFlags)
		.def("GetTracker", &UAIDebugCamera::GetTracker, py::return_value_policy::reference)
		.def("SetMind", &UAIDebugCamera::SetMind)
		.def("InitDummies", &UAIDebugCamera::InitDummies)
		.def("WantsToDoCameraInspection", &UAIDebugCamera::WantsToDoCameraInspection)
		.def("SetCurrentInspectedTarget", &UAIDebugCamera::SetCurrentInspectedTarget)
		.def("CompareRuleSetAndAdjustRuleIdx", &UAIDebugCamera::CompareRuleSetAndAdjustRuleIdx)
		.def("SetRuleEngine", &UAIDebugCamera::SetRuleEngine)
		.def("SetPrevSnapshotRule", &UAIDebugCamera::SetPrevSnapshotRule)
		.def("SetNextSnapshotRule", &UAIDebugCamera::SetNextSnapshotRule)
		.def("SetPrevSnapshot", &UAIDebugCamera::SetPrevSnapshot)
		.def("SetNextSnapshot", &UAIDebugCamera::SetNextSnapshot)
		.def("NotifyGameUnPaused", &UAIDebugCamera::NotifyGameUnPaused)
		.def("NotifyGamePaused", &UAIDebugCamera::NotifyGamePaused)
		.def("Display", &UAIDebugCamera::Display)
		;
	py::class_< UAITracker, UAudioDevice >(m, "UAITracker")
		.def_static("StaticClass", &UAITracker::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Snapshots[0x32]", &UAITracker::Snapshots[0x32], py::return_value_policy::reference)
		.def_readwrite("SnapshotSize", &UAITracker::SnapshotSize)
		.def_readwrite("SnapshotIndex", &UAITracker::SnapshotIndex)
		.def_readwrite("DebugOwner", &UAITracker::DebugOwner, py::return_value_policy::reference)
		;
	py::class_< UAnimNodeSpecialMoveBlend, UAudioDevice >(m, "UAnimNodeSpecialMoveBlend")
		.def_static("StaticClass", &UAnimNodeSpecialMoveBlend::StaticClass, py::return_value_policy::reference)
		.def_property("bForceLocalSpaceBlend", [](UAnimNodeSpecialMoveBlend &self){return self.bForceLocalSpaceBlend;}, [](UAnimNodeSpecialMoveBlend &self, bool value){self.bForceLocalSpaceBlend = value ? 1 : 0;})
		.def_property("IssueNotifiesWhenZeroWeight", [](UAnimNodeSpecialMoveBlend &self){return self.IssueNotifiesWhenZeroWeight;}, [](UAnimNodeSpecialMoveBlend &self, bool value){self.IssueNotifiesWhenZeroWeight = value ? 1 : 0;})
		.def_readwrite("AnimState", &UAnimNodeSpecialMoveBlend::AnimState)
		.def_readwrite("SavedBlendOutTime", &UAnimNodeSpecialMoveBlend::SavedBlendOutTime)
		.def_readwrite("SMI", &UAnimNodeSpecialMoveBlend::SMI, py::return_value_policy::reference)
		.def_readwrite("UnknownData00[0x4]", &UAnimNodeSpecialMoveBlend::UnknownData00[0x4])
		.def_readwrite("AnimParameters", &UAnimNodeSpecialMoveBlend::AnimParameters, py::return_value_policy::reference)
		.def("IsPlaying", &UAnimNodeSpecialMoveBlend::IsPlaying)
		.def("SetRootMotion", &UAnimNodeSpecialMoveBlend::SetRootMotion)
		.def("GetCurrentAnimDef", &UAnimNodeSpecialMoveBlend::GetCurrentAnimDef, py::return_value_policy::reference)
		.def("GetCurrentAnimName", &UAnimNodeSpecialMoveBlend::GetCurrentAnimName, py::return_value_policy::reference)
		.def("Finish", &UAnimNodeSpecialMoveBlend::Finish)
		.def("Stop", &UAnimNodeSpecialMoveBlend::Stop)
		.def("PlayData", &UAnimNodeSpecialMoveBlend::PlayData)
		.def("Play", &UAnimNodeSpecialMoveBlend::Play)
		;
	py::class_< UAttributeExpressionEvaluator, UAudioDevice >(m, "UAttributeExpressionEvaluator")
		.def_static("StaticClass", &UAttributeExpressionEvaluator::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Expression", &UAttributeExpressionEvaluator::Expression, py::return_value_policy::reference)
		.def("Evaluate", &UAttributeExpressionEvaluator::Evaluate)
		;
	py::class_< UBehavior_CallFunction, UAudioDevice >(m, "UBehavior_CallFunction")
		.def_static("StaticClass", &UBehavior_CallFunction::StaticClass, py::return_value_policy::reference)
		.def_readwrite("FunctionName", &UBehavior_CallFunction::FunctionName, py::return_value_policy::reference)
		.def("CallFunction", &UBehavior_CallFunction::CallFunction)
		.def("ApplyBehaviorToContext", &UBehavior_CallFunction::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ChangeRemoteBehaviorSequenceState, UAudioDevice >(m, "UBehavior_ChangeRemoteBehaviorSequenceState")
		.def_static("StaticClass", &UBehavior_ChangeRemoteBehaviorSequenceState::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Action", &UBehavior_ChangeRemoteBehaviorSequenceState::Action)
		.def_readwrite("SequenceName", &UBehavior_ChangeRemoteBehaviorSequenceState::SequenceName, py::return_value_policy::reference)
		.def_readwrite("SequenceProvider", &UBehavior_ChangeRemoteBehaviorSequenceState::SequenceProvider, py::return_value_policy::reference)
		.def_readwrite("ProviderDefinitionPathName", &UBehavior_ChangeRemoteBehaviorSequenceState::ProviderDefinitionPathName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeRemoteBehaviorSequenceState::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ChangeTimer, UAudioDevice >(m, "UBehavior_ChangeTimer")
		.def_static("StaticClass", &UBehavior_ChangeTimer::StaticClass, py::return_value_policy::reference)
		.def_property("bSetNewTimerDelay", [](UBehavior_ChangeTimer &self){return self.bSetNewTimerDelay;}, [](UBehavior_ChangeTimer &self, bool value){self.bSetNewTimerDelay = value ? 1 : 0;})
		.def_readwrite("TimerId", &UBehavior_ChangeTimer::TimerId)
		.def_readwrite("Reaction", &UBehavior_ChangeTimer::Reaction)
		.def_readwrite("NewTimerDelayFormula", &UBehavior_ChangeTimer::NewTimerDelayFormula, py::return_value_policy::reference)
		.def_readwrite("NewTimerDelay", &UBehavior_ChangeTimer::NewTimerDelay)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeTimer::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_IsSequenceEnabled, UAudioDevice >(m, "UBehavior_IsSequenceEnabled")
		.def_static("StaticClass", &UBehavior_IsSequenceEnabled::StaticClass, py::return_value_policy::reference)
		.def_readwrite("SequenceName", &UBehavior_IsSequenceEnabled::SequenceName, py::return_value_policy::reference)
		.def_readwrite("SequenceProvider", &UBehavior_IsSequenceEnabled::SequenceProvider, py::return_value_policy::reference)
		.def_readwrite("ProviderDefinitionPathName", &UBehavior_IsSequenceEnabled::ProviderDefinitionPathName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_IsSequenceEnabled::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PostAkEvent, UAudioDevice >(m, "UBehavior_PostAkEvent")
		.def_static("StaticClass", &UBehavior_PostAkEvent::StaticClass, py::return_value_policy::reference)
		.def_property("bReplicateEvent", [](UBehavior_PostAkEvent &self){return self.bReplicateEvent;}, [](UBehavior_PostAkEvent &self, bool value){self.bReplicateEvent = value ? 1 : 0;})
		.def_property("bForLocalPlayerOnly", [](UBehavior_PostAkEvent &self){return self.bForLocalPlayerOnly;}, [](UBehavior_PostAkEvent &self, bool value){self.bForLocalPlayerOnly = value ? 1 : 0;})
		.def_property("bForcePlayImmediate", [](UBehavior_PostAkEvent &self){return self.bForcePlayImmediate;}, [](UBehavior_PostAkEvent &self, bool value){self.bForcePlayImmediate = value ? 1 : 0;})
		.def_property("bPlayFromActor", [](UBehavior_PostAkEvent &self){return self.bPlayFromActor;}, [](UBehavior_PostAkEvent &self, bool value){self.bPlayFromActor = value ? 1 : 0;})
		.def_property("bLatentWhenNoConnections", [](UBehavior_PostAkEvent &self){return self.bLatentWhenNoConnections;}, [](UBehavior_PostAkEvent &self, bool value){self.bLatentWhenNoConnections = value ? 1 : 0;})
		.def_readwrite("Event", &UBehavior_PostAkEvent::Event, py::return_value_policy::reference)
		.def_readwrite("PlayingInfo", &UBehavior_PostAkEvent::PlayingInfo, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_PostAkEvent::ApplyBehaviorToContext)
		;
	py::class_< UBehaviorHelpers, UAudioDevice >(m, "UBehaviorHelpers")
		.def_static("StaticClass", &UBehaviorHelpers::StaticClass, py::return_value_policy::reference)
		.def_readwrite("__BehaviorSetStrategy__Delegate", &UBehaviorHelpers::__BehaviorSetStrategy__Delegate, py::return_value_policy::reference)
		.def_readwrite("__BehaviorStrategy__Delegate", &UBehaviorHelpers::__BehaviorStrategy__Delegate, py::return_value_policy::reference)
		.def("RunAllBehaviorsForEvent", &UBehaviorHelpers::RunAllBehaviorsForEvent)
		.def("BehaviorStrategy", &UBehaviorHelpers::BehaviorStrategy)
		.def("BehaviorSetStrategy", &UBehaviorHelpers::BehaviorSetStrategy)
		.def("ResolveBehaviorProviderDefinitionReference", &UBehaviorHelpers::ResolveBehaviorProviderDefinitionReference, py::return_value_policy::reference)
		.def("IsBehaviorsV2", &UBehaviorHelpers::IsBehaviorsV2)
		.def("ShouldContinueExecution", &UBehaviorHelpers::ShouldContinueExecution)
		.def("GetNextFireLocationSocket", &UBehaviorHelpers::GetNextFireLocationSocket, py::return_value_policy::reference)
		.def("GetRotationFromAttachmentLocationData", &UBehaviorHelpers::GetRotationFromAttachmentLocationData)
		.def("GetRelativeDirection", &UBehaviorHelpers::GetRelativeDirection, py::return_value_policy::reference)
		;
	py::class_< UCompoundExpressionEvaluator, UAudioDevice >(m, "UCompoundExpressionEvaluator")
		.def_static("StaticClass", &UCompoundExpressionEvaluator::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Expression1", &UCompoundExpressionEvaluator::Expression1, py::return_value_policy::reference)
		.def_readwrite("Operator", &UCompoundExpressionEvaluator::Operator)
		.def_readwrite("Expression2", &UCompoundExpressionEvaluator::Expression2, py::return_value_policy::reference)
		.def("Evaluate", &UCompoundExpressionEvaluator::Evaluate)
		;
	py::class_< UConditionalAttributeValueResolver, UAudioDevice >(m, "UConditionalAttributeValueResolver")
		.def_static("StaticClass", &UConditionalAttributeValueResolver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ValueExpressions", &UConditionalAttributeValueResolver::ValueExpressions, py::return_value_policy::reference)
		;
	py::class_< UConstantAttributeValueResolver, UAudioDevice >(m, "UConstantAttributeValueResolver")
		.def_static("StaticClass", &UConstantAttributeValueResolver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ConstantValue", &UConstantAttributeValueResolver::ConstantValue)
		;
	py::class_< UConstraintAttributeValueResolver, UAudioDevice >(m, "UConstraintAttributeValueResolver")
		.def_static("StaticClass", &UConstraintAttributeValueResolver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Constraints", &UConstraintAttributeValueResolver::Constraints, py::return_value_policy::reference)
		;
	py::class_< UFeatherBoneBlendDefinition, UAudioDevice >(m, "UFeatherBoneBlendDefinition")
		.def_static("StaticClass", &UFeatherBoneBlendDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("BoneBlends", &UFeatherBoneBlendDefinition::BoneBlends, py::return_value_policy::reference)
		;
	py::class_< UGBXActorList, UAudioDevice >(m, "UGBXActorList")
		.def_static("StaticClass", &UGBXActorList::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ActorList", &UGBXActorList::ActorList, py::return_value_policy::reference)
		.def("RemoveAndDeleteActorsOfClassFromLevel", &UGBXActorList::RemoveAndDeleteActorsOfClassFromLevel)
		.def("RemoveActorsOfClassFromLevel", &UGBXActorList::RemoveActorsOfClassFromLevel)
		.def("RemoveAndDeleteActorsFromLevel", &UGBXActorList::RemoveAndDeleteActorsFromLevel)
		.def("RemoveActorsFromLevel", &UGBXActorList::RemoveActorsFromLevel)
		.def("FindNextActorByLevel", &UGBXActorList::FindNextActorByLevel, py::return_value_policy::reference)
		.def("FindFirstActorByLevel", &UGBXActorList::FindFirstActorByLevel, py::return_value_policy::reference)
		.def("FindNextActorByClass", &UGBXActorList::FindNextActorByClass, py::return_value_policy::reference)
		.def("FindFirstActorByClass", &UGBXActorList::FindFirstActorByClass, py::return_value_policy::reference)
		.def("RemoveActor", &UGBXActorList::RemoveActor)
		.def("AddActor", &UGBXActorList::AddActor)
		;
	py::class_< UGBXObjectList, UAudioDevice >(m, "UGBXObjectList")
		.def_static("StaticClass", &UGBXObjectList::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ObjectList", &UGBXObjectList::ObjectList, py::return_value_policy::reference)
		.def("RemoveObjectsOfClass", &UGBXObjectList::RemoveObjectsOfClass)
		.def("FindNextObjectByClass", &UGBXObjectList::FindNextObjectByClass, py::return_value_policy::reference)
		.def("FindFirstObjectByClass", &UGBXObjectList::FindFirstObjectByClass, py::return_value_policy::reference)
		.def("RemoveObject", &UGBXObjectList::RemoveObject)
		.def("AddObject", &UGBXObjectList::AddObject)
		;
	py::class_< AGearboxAIController, UAudioDevice >(m, "AGearboxAIController")
		.def_static("StaticClass", &AGearboxAIController::StaticClass, py::return_value_policy::reference)
		.def("ForceMoveToActor", &AGearboxAIController::ForceMoveToActor)
		;
	py::class_< AGearboxAIMoveNode, UAudioDevice >(m, "AGearboxAIMoveNode")
		.def_static("StaticClass", &AGearboxAIMoveNode::StaticClass, py::return_value_policy::reference)
		.def_property("bEnabled", [](AGearboxAIMoveNode &self){return self.bEnabled;}, [](AGearboxAIMoveNode &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_property("bFaceNodeDirection", [](AGearboxAIMoveNode &self){return self.bFaceNodeDirection;}, [](AGearboxAIMoveNode &self, bool value){self.bFaceNodeDirection = value ? 1 : 0;})
		.def_readwrite("NextNodes", &AGearboxAIMoveNode::NextNodes, py::return_value_policy::reference)
		.def_readwrite("PreviousNodes", &AGearboxAIMoveNode::PreviousNodes, py::return_value_policy::reference)
		.def_readwrite("HoldTime", &AGearboxAIMoveNode::HoldTime)
		.def_readwrite("Behaviors", &AGearboxAIMoveNode::Behaviors, py::return_value_policy::reference)
		.def_readwrite("SpecialMoves", &AGearboxAIMoveNode::SpecialMoves, py::return_value_policy::reference)
		.def_readwrite("Sprite", &AGearboxAIMoveNode::Sprite, py::return_value_policy::reference)
		.def("DoesPatrolPathExistToPoint", &AGearboxAIMoveNode::DoesPatrolPathExistToPoint)
		.def("GetAllLinkedNodes", &AGearboxAIMoveNode::GetAllLinkedNodes)
		.def("GetNextMoveNodeClosestToPoint", &AGearboxAIMoveNode::GetNextMoveNodeClosestToPoint, py::return_value_policy::reference)
		.def("GetNextMoveNode", &AGearboxAIMoveNode::GetNextMoveNode, py::return_value_policy::reference)
		.def("RemoveNode", &AGearboxAIMoveNode::RemoveNode)
		.def("AddNode", &AGearboxAIMoveNode::AddNode)
		.def("ClearLinks", &AGearboxAIMoveNode::ClearLinks)
		.def("OnToggle", &AGearboxAIMoveNode::OnToggle)
		;
	py::class_< AGearboxCameraBasic, UAudioDevice >(m, "AGearboxCameraBasic")
		.def_static("StaticClass", &AGearboxCameraBasic::StaticClass, py::return_value_policy::reference)
		.def_readwrite("VfTable_IInterfaceGearboxCamera", &AGearboxCameraBasic::VfTable_IInterfaceGearboxCamera, py::return_value_policy::reference)
		.def("eventFinishCameraLookAt", &AGearboxCameraBasic::eventFinishCameraLookAt)
		.def("eventEnableThirdPersonLookAt", &AGearboxCameraBasic::eventEnableThirdPersonLookAt)
		.def("BeginCameraLookAt", &AGearboxCameraBasic::BeginCameraLookAt)
		.def("CalcSimpleThirdPersonView", &AGearboxCameraBasic::CalcSimpleThirdPersonView)
		.def("CalcBaseView", &AGearboxCameraBasic::CalcBaseView)
		.def("UpdateViewTarget", &AGearboxCameraBasic::UpdateViewTarget)
		;
	py::class_< UGearboxCameraModifier, UAudioDevice >(m, "UGearboxCameraModifier")
		.def_static("StaticClass", &UGearboxCameraModifier::StaticClass, py::return_value_policy::reference)
		.def_property("FadeStarted", [](UGearboxCameraModifier &self){return self.FadeStarted;}, [](UGearboxCameraModifier &self, bool value){self.FadeStarted = value ? 1 : 0;})
		.def_property("FadingUpwards", [](UGearboxCameraModifier &self){return self.FadingUpwards;}, [](UGearboxCameraModifier &self, bool value){self.FadingUpwards = value ? 1 : 0;})
		.def_property("DisableWhenFadedOut", [](UGearboxCameraModifier &self){return self.DisableWhenFadedOut;}, [](UGearboxCameraModifier &self, bool value){self.DisableWhenFadedOut = value ? 1 : 0;})
		.def_property("AdjustForTimeDilation", [](UGearboxCameraModifier &self){return self.AdjustForTimeDilation;}, [](UGearboxCameraModifier &self, bool value){self.AdjustForTimeDilation = value ? 1 : 0;})
		.def_readwrite("GBXCameraOwner", &UGearboxCameraModifier::GBXCameraOwner, py::return_value_policy::reference)
		.def_readwrite("DesiredPOV", &UGearboxCameraModifier::DesiredPOV, py::return_value_policy::reference)
		.def_readwrite("MasterFadeValue", &UGearboxCameraModifier::MasterFadeValue)
		.def_readwrite("FadeElapsedTime", &UGearboxCameraModifier::FadeElapsedTime)
		.def_readwrite("FadeTimeSpan", &UGearboxCameraModifier::FadeTimeSpan)
		.def_readwrite("FadeMode", &UGearboxCameraModifier::FadeMode)
		.def("LerpFOV", &UGearboxCameraModifier::LerpFOV)
		.def("LerpRotation", &UGearboxCameraModifier::LerpRotation, py::return_value_policy::reference)
		.def("LerpLocation", &UGearboxCameraModifier::LerpLocation, py::return_value_policy::reference)
		.def("UpdateAllLerps", &UGearboxCameraModifier::UpdateAllLerps)
		.def("UpdateMasterFadePercentage", &UGearboxCameraModifier::UpdateMasterFadePercentage)
		.def("IsFadingDownwards", &UGearboxCameraModifier::IsFadingDownwards)
		.def("IsFadingUpwards", &UGearboxCameraModifier::IsFadingUpwards)
		.def("IsFadeInProgress", &UGearboxCameraModifier::IsFadeInProgress)
		.def("StartFadeOut", &UGearboxCameraModifier::StartFadeOut)
		.def("StartFadeIn", &UGearboxCameraModifier::StartFadeIn)
		.def("SetDesiredCamera", &UGearboxCameraModifier::SetDesiredCamera)
		.def("SetGBXCameraOwner", &UGearboxCameraModifier::SetGBXCameraOwner)
		.def("AddCameraModifier", &UGearboxCameraModifier::AddCameraModifier)
		;
	py::class_< UGearboxCheatManager, UAudioDevice >(m, "UGearboxCheatManager")
		.def_static("StaticClass", &UGearboxCheatManager::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogInterface, UAudioDevice >(m, "UGearboxDialogInterface")
		.def_static("StaticClass", &UGearboxDialogInterface::StaticClass, py::return_value_policy::reference)
		.def("eventServerDialog_TriggerEvent", &UGearboxDialogInterface::eventServerDialog_TriggerEvent)
		.def("SetDialogNameTag", &UGearboxDialogInterface::SetDialogNameTag)
		.def("GetReplicatedDialogData", &UGearboxDialogInterface::GetReplicatedDialogData, py::return_value_policy::reference)
		.def("SetReplicatedDialogData", &UGearboxDialogInterface::SetReplicatedDialogData)
		.def("GetDialogGroups", &UGearboxDialogInterface::GetDialogGroups)
		.def("GetDialogComponent", &UGearboxDialogInterface::GetDialogComponent, py::return_value_policy::reference)
		.def("GetDialogNameTag", &UGearboxDialogInterface::GetDialogNameTag, py::return_value_policy::reference)
		.def("GetActor", &UGearboxDialogInterface::GetActor, py::return_value_policy::reference)
		.def("CanTalk", &UGearboxDialogInterface::CanTalk)
		;
	py::class_< UGearboxEditorNode, UAudioDevice >(m, "UGearboxEditorNode")
		.def_static("StaticClass", &UGearboxEditorNode::StaticClass, py::return_value_policy::reference)
		.def_property("bAllowInputs", [](UGearboxEditorNode &self){return self.bAllowInputs;}, [](UGearboxEditorNode &self, bool value){self.bAllowInputs = value ? 1 : 0;})
		.def_property("bAllowOutputs", [](UGearboxEditorNode &self){return self.bAllowOutputs;}, [](UGearboxEditorNode &self, bool value){self.bAllowOutputs = value ? 1 : 0;})
		.def_property("bAllowVariables", [](UGearboxEditorNode &self){return self.bAllowVariables;}, [](UGearboxEditorNode &self, bool value){self.bAllowVariables = value ? 1 : 0;})
		.def_property("bAllowMovement", [](UGearboxEditorNode &self){return self.bAllowMovement;}, [](UGearboxEditorNode &self, bool value){self.bAllowMovement = value ? 1 : 0;})
		.def_property("bAllowMultipleInputs", [](UGearboxEditorNode &self){return self.bAllowMultipleInputs;}, [](UGearboxEditorNode &self, bool value){self.bAllowMultipleInputs = value ? 1 : 0;})
		.def_property("bAllowMultipleOutputs", [](UGearboxEditorNode &self){return self.bAllowMultipleOutputs;}, [](UGearboxEditorNode &self, bool value){self.bAllowMultipleOutputs = value ? 1 : 0;})
		.def_property("bAllowMultipleVariables", [](UGearboxEditorNode &self){return self.bAllowMultipleVariables;}, [](UGearboxEditorNode &self, bool value){self.bAllowMultipleVariables = value ? 1 : 0;})
		.def_readwrite("Type", &UGearboxEditorNode::Type)
		.def_readwrite("OutputLinks", &UGearboxEditorNode::OutputLinks, py::return_value_policy::reference)
		.def_readwrite("InputLinks", &UGearboxEditorNode::InputLinks, py::return_value_policy::reference)
		.def_readwrite("VariableLinks", &UGearboxEditorNode::VariableLinks, py::return_value_policy::reference)
		.def_readwrite("SliderPosition", &UGearboxEditorNode::SliderPosition)
		.def("IsChild", &UGearboxEditorNode::IsChild)
		;
	py::class_< UGearboxEngine, UAudioDevice >(m, "UGearboxEngine")
		.def_static("StaticClass", &UGearboxEngine::StaticClass, py::return_value_policy::reference)
		.def_property("bHasSelectedValidStorageDevice", [](UGearboxEngine &self){return self.bHasSelectedValidStorageDevice;}, [](UGearboxEngine &self, bool value){self.bHasSelectedValidStorageDevice = value ? 1 : 0;})
		.def_readwrite("CurrentUserID", &UGearboxEngine::CurrentUserID)
		.def_readwrite("CurrentDeviceID", &UGearboxEngine::CurrentDeviceID)
		.def_readwrite("DefaultSparkInterfaceName", &UGearboxEngine::DefaultSparkInterfaceName, py::return_value_policy::reference)
		.def_readwrite("SparkInterface", &UGearboxEngine::SparkInterface, py::return_value_policy::reference)
		.def_readwrite("UnknownData00[0x4]", &UGearboxEngine::UnknownData00[0x4])
		.def("GetSparkInterface", &UGearboxEngine::GetSparkInterface, py::return_value_policy::reference)
		.def("eventIsCurrentDeviceValid", &UGearboxEngine::eventIsCurrentDeviceValid)
		.def("HasStorageDeviceBeenRemoved", &UGearboxEngine::HasStorageDeviceBeenRemoved)
		.def("GetCurrentDeviceID", &UGearboxEngine::GetCurrentDeviceID)
		.def("SetCurrentDeviceID", &UGearboxEngine::SetCurrentDeviceID)
		;
	py::class_< AGearboxGameInfo, UAudioDevice >(m, "AGearboxGameInfo")
		.def_static("StaticClass", &AGearboxGameInfo::StaticClass, py::return_value_policy::reference)
		.def("eventPostLogin", &AGearboxGameInfo::eventPostLogin)
		;
	py::class_< UGearboxGFxMovie, UAudioDevice >(m, "UGearboxGFxMovie")
		.def_static("StaticClass", &UGearboxGFxMovie::StaticClass, py::return_value_policy::reference)
		.def_property("bTickScript", [](UGearboxGFxMovie &self){return self.bTickScript;}, [](UGearboxGFxMovie &self, bool value){self.bTickScript = value ? 1 : 0;})
		.def_property("bTickFirstFrame", [](UGearboxGFxMovie &self){return self.bTickFirstFrame;}, [](UGearboxGFxMovie &self, bool value){self.bTickFirstFrame = value ? 1 : 0;})
		.def_property("bRenderingDisabled", [](UGearboxGFxMovie &self){return self.bRenderingDisabled;}, [](UGearboxGFxMovie &self, bool value){self.bRenderingDisabled = value ? 1 : 0;})
		.def_property("bSupportsStatePooling", [](UGearboxGFxMovie &self){return self.bSupportsStatePooling;}, [](UGearboxGFxMovie &self, bool value){self.bSupportsStatePooling = value ? 1 : 0;})
		.def_property("bIsUsingFlashMouse", [](UGearboxGFxMovie &self){return self.bIsUsingFlashMouse;}, [](UGearboxGFxMovie &self, bool value){self.bIsUsingFlashMouse = value ? 1 : 0;})
		.def_property("bBlockingMovie", [](UGearboxGFxMovie &self){return self.bBlockingMovie;}, [](UGearboxGFxMovie &self, bool value){self.bBlockingMovie = value ? 1 : 0;})
		.def_property("bCloseOnDeath", [](UGearboxGFxMovie &self){return self.bCloseOnDeath;}, [](UGearboxGFxMovie &self, bool value){self.bCloseOnDeath = value ? 1 : 0;})
		.def_readwrite("InteractionOverrideSounds", &UGearboxGFxMovie::InteractionOverrideSounds, py::return_value_policy::reference)
		.def_readwrite("TickRateSeconds", &UGearboxGFxMovie::TickRateSeconds)
		.def_readwrite("AllStyles", &UGearboxGFxMovie::AllStyles, py::return_value_policy::reference)
		.def_readwrite("MyDefinition", &UGearboxGFxMovie::MyDefinition, py::return_value_policy::reference)
		.def_readwrite("MyPool", &UGearboxGFxMovie::MyPool, py::return_value_policy::reference)
		.def_readwrite("PlayerOwners", &UGearboxGFxMovie::PlayerOwners, py::return_value_policy::reference)
		.def_readwrite("ContextObject", &UGearboxGFxMovie::ContextObject, py::return_value_policy::reference)
		.def_readwrite("LastTickTime", &UGearboxGFxMovie::LastTickTime)
		.def_readwrite("PoolParent", &UGearboxGFxMovie::PoolParent, py::return_value_policy::reference)
		.def_readwrite("CurrentMovieState", &UGearboxGFxMovie::CurrentMovieState, py::return_value_policy::reference)
		.def_readwrite("BaseMovieStates", &UGearboxGFxMovie::BaseMovieStates, py::return_value_policy::reference)
		.def_readwrite("AllMovieStates", &UGearboxGFxMovie::AllMovieStates, py::return_value_policy::reference)
		.def_readwrite("bMouseable", &UGearboxGFxMovie::bMouseable)
		.def_readwrite("__OnInputAxis__Delegate", &UGearboxGFxMovie::__OnInputAxis__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnClosed__Delegate", &UGearboxGFxMovie::__OnClosed__Delegate, py::return_value_policy::reference)
		.def("extSetLanguageExt", &UGearboxGFxMovie::extSetLanguageExt)
		.def("OnClosedOnDeath", &UGearboxGFxMovie::OnClosedOnDeath)
		.def("IsShowingFlashMouse", &UGearboxGFxMovie::IsShowingFlashMouse)
		.def("extIsMouseablePlatform", &UGearboxGFxMovie::extIsMouseablePlatform)
		.def("eventSetMouseableFlag", &UGearboxGFxMovie::eventSetMouseableFlag)
		.def("GetStyleDebugString", &UGearboxGFxMovie::GetStyleDebugString, py::return_value_policy::reference)
		.def("GetStateDebugString", &UGearboxGFxMovie::GetStateDebugString, py::return_value_policy::reference)
		.def("InitializeFrom", &UGearboxGFxMovie::InitializeFrom)
		.def("RemoveStylesDrawnTo", &UGearboxGFxMovie::RemoveStylesDrawnTo)
		.def("RemoveStyles", &UGearboxGFxMovie::RemoveStyles)
		.def("RemoveStyle", &UGearboxGFxMovie::RemoveStyle)
		.def("AddStyle", &UGearboxGFxMovie::AddStyle)
		.def("ShutdownMoviePlayback", &UGearboxGFxMovie::ShutdownMoviePlayback)
		.def("InitMoviePlayback", &UGearboxGFxMovie::InitMoviePlayback)
		.def("GetRenderTexture", &UGearboxGFxMovie::GetRenderTexture, py::return_value_policy::reference)
		.def("eventMovieState_OnChanged", &UGearboxGFxMovie::eventMovieState_OnChanged)
		.def("eventMovieState_SetFromMovie", &UGearboxGFxMovie::eventMovieState_SetFromMovie)
		.def("MovieState_Copy", &UGearboxGFxMovie::MovieState_Copy)
		.def("MovieState_Compare", &UGearboxGFxMovie::MovieState_Compare)
		.def("MovieState_Toggle", &UGearboxGFxMovie::MovieState_Toggle)
		.def("MovieState_Enable", &UGearboxGFxMovie::MovieState_Enable)
		.def("MovieState_IsEnabled", &UGearboxGFxMovie::MovieState_IsEnabled)
		.def("MovieState_SupportsState", &UGearboxGFxMovie::MovieState_SupportsState)
		.def("MovieState_Init", &UGearboxGFxMovie::MovieState_Init)
		.def("InitFromDefinition", &UGearboxGFxMovie::InitFromDefinition)
		.def("MovieState_Apply", &UGearboxGFxMovie::MovieState_Apply)
		.def("MovieState_ApplyState", &UGearboxGFxMovie::MovieState_ApplyState)
		.def("ApplyState", &UGearboxGFxMovie::ApplyState)
		.def("SetRenderingEnabled", &UGearboxGFxMovie::SetRenderingEnabled)
		.def("GotoAndStop", &UGearboxGFxMovie::GotoAndStop)
		.def("GotoAndPlay", &UGearboxGFxMovie::GotoAndPlay)
		.def("PlaySpecialUISound", &UGearboxGFxMovie::PlaySpecialUISound)
		.def("eventPlayUISound", &UGearboxGFxMovie::eventPlayUISound)
		.def("eventSetOtherObject", &UGearboxGFxMovie::eventSetOtherObject)
		.def("GetInstanceContextObject", &UGearboxGFxMovie::GetInstanceContextObject, py::return_value_policy::reference)
		.def("eventOnTick", &UGearboxGFxMovie::eventOnTick)
		.def("eventOnClose", &UGearboxGFxMovie::eventOnClose)
		.def("eventStart", &UGearboxGFxMovie::eventStart)
		.def("ColorizeTooltipText", &UGearboxGFxMovie::ColorizeTooltipText, py::return_value_policy::reference)
		.def("GFxColoredText", &UGearboxGFxMovie::GFxColoredText, py::return_value_policy::reference)
		.def("SingleArgInvokeB", &UGearboxGFxMovie::SingleArgInvokeB)
		.def("SingleArgInvokeS", &UGearboxGFxMovie::SingleArgInvokeS)
		.def("SingleArgInvokeF", &UGearboxGFxMovie::SingleArgInvokeF)
		.def("GetLocalPlayer", &UGearboxGFxMovie::GetLocalPlayer, py::return_value_policy::reference)
		.def("OnClosed", &UGearboxGFxMovie::OnClosed)
		.def("WantsControllerInput", &UGearboxGFxMovie::WantsControllerInput)
		.def("SetExternalTexture", &UGearboxGFxMovie::SetExternalTexture)
		.def("OnInputAxis", &UGearboxGFxMovie::OnInputAxis)
		;
	py::class_< UGFxMovie_StateParent, UAudioDevice >(m, "UGFxMovie_StateParent")
		.def_static("StaticClass", &UGFxMovie_StateParent::StaticClass, py::return_value_policy::reference)
		.def_readwrite("StateClass", &UGFxMovie_StateParent::StateClass, py::return_value_policy::reference)
		.def("MovieState_OnChanged", &UGFxMovie_StateParent::MovieState_OnChanged)
		.def("eventStart", &UGFxMovie_StateParent::eventStart)
		;
	py::class_< UGearboxGlobals, UAudioDevice >(m, "UGearboxGlobals")
		.def_static("StaticClass", &UGearboxGlobals::StaticClass, py::return_value_policy::reference)
		.def_readwrite("TheGlobalsDefinition", &UGearboxGlobals::TheGlobalsDefinition, py::return_value_policy::reference)
		.def_readwrite("ExposureUtilityClass", &UGearboxGlobals::ExposureUtilityClass, py::return_value_policy::reference)
		.def_readwrite("ExposureUtilityStrategyClass", &UGearboxGlobals::ExposureUtilityStrategyClass, py::return_value_policy::reference)
		.def_readwrite("TheExposureUtility", &UGearboxGlobals::TheExposureUtility, py::return_value_policy::reference)
		.def_readwrite("TheAIFactory", &UGearboxGlobals::TheAIFactory, py::return_value_policy::reference)
		.def_readwrite("TheRuleEngineLoadBalanceManager", &UGearboxGlobals::TheRuleEngineLoadBalanceManager, py::return_value_policy::reference)
		.def_readwrite("TheGBXActorList", &UGearboxGlobals::TheGBXActorList, py::return_value_policy::reference)
		.def_readwrite("TheGBXObjectList", &UGearboxGlobals::TheGBXObjectList, py::return_value_policy::reference)
		.def_readwrite("ValidNameList", &UGearboxGlobals::ValidNameList, py::return_value_policy::reference)
		.def_readwrite("TheWireMgr", &UGearboxGlobals::TheWireMgr, py::return_value_policy::reference)
		.def_readwrite("TheMessageManager", &UGearboxGlobals::TheMessageManager, py::return_value_policy::reference)
		.def_readwrite("TheDynamicTextureActorList", &UGearboxGlobals::TheDynamicTextureActorList, py::return_value_policy::reference)
		.def_readwrite("ThePopulationMaster", &UGearboxGlobals::ThePopulationMaster, py::return_value_policy::reference)
		.def_readwrite("TheBehaviorKernel", &UGearboxGlobals::TheBehaviorKernel, py::return_value_policy::reference)
		.def_readwrite("TheScreenSpaceManager", &UGearboxGlobals::TheScreenSpaceManager, py::return_value_policy::reference)
		.def_readwrite("TheGFxManager", &UGearboxGlobals::TheGFxManager, py::return_value_policy::reference)
		.def_readwrite("TheRenderTextureManager", &UGearboxGlobals::TheRenderTextureManager, py::return_value_policy::reference)
		.def_readwrite("GlobalInstanceClassName", &UGearboxGlobals::GlobalInstanceClassName, py::return_value_policy::reference)
		.def_readwrite("DefaultMaxPopulationActorCost", &UGearboxGlobals::DefaultMaxPopulationActorCost)
		.def_readwrite("StateRecords", &UGearboxGlobals::StateRecords, py::return_value_policy::reference)
		.def_readwrite("UIAudioComponent", &UGearboxGlobals::UIAudioComponent, py::return_value_policy::reference)
		.def_readwrite("TheDialogManager", &UGearboxGlobals::TheDialogManager, py::return_value_policy::reference)
		.def("GetBehaviorKernel", &UGearboxGlobals::GetBehaviorKernel, py::return_value_policy::reference)
		.def("GetDialogManager", &UGearboxGlobals::GetDialogManager, py::return_value_policy::reference)
		.def("GetPopulationRespawnDelay", &UGearboxGlobals::GetPopulationRespawnDelay)
		.def("eventShowDialog", &UGearboxGlobals::eventShowDialog, py::return_value_policy::reference)
		.def("NotifyActorDied", &UGearboxGlobals::NotifyActorDied)
		.def("DoesLOSIntersectSpecialOccluder", &UGearboxGlobals::DoesLOSIntersectSpecialOccluder)
		.def("HasPhysXCapableGPU", &UGearboxGlobals::HasPhysXCapableGPU)
		.def("GetPlatform", &UGearboxGlobals::GetPlatform)
		.def("ValidatePlayerName", &UGearboxGlobals::ValidatePlayerName)
		.def("RegisterStateKey", &UGearboxGlobals::RegisterStateKey)
		.def("DoesStateKeyExist", &UGearboxGlobals::DoesStateKeyExist)
		.def("FreeTexture2D", &UGearboxGlobals::FreeTexture2D)
		.def("GetTexture2D", &UGearboxGlobals::GetTexture2D, py::return_value_policy::reference)
		.def("GetRenderTextureManager", &UGearboxGlobals::GetRenderTextureManager, py::return_value_policy::reference)
		.def("GetGFxManager", &UGearboxGlobals::GetGFxManager, py::return_value_policy::reference)
		.def("GetScreenSpaceManager", &UGearboxGlobals::GetScreenSpaceManager, py::return_value_policy::reference)
		.def("GetMessageManager", &UGearboxGlobals::GetMessageManager, py::return_value_policy::reference)
		.def("RegDynamicTextureStreaming", &UGearboxGlobals::RegDynamicTextureStreaming)
		.def("GetDynamicTextureActorList", &UGearboxGlobals::GetDynamicTextureActorList, py::return_value_policy::reference)
		.def("GetPopulationMaster", &UGearboxGlobals::GetPopulationMaster, py::return_value_policy::reference)
		.def("GetWireManager", &UGearboxGlobals::GetWireManager, py::return_value_policy::reference)
		.def("GetGBXObjectList", &UGearboxGlobals::GetGBXObjectList, py::return_value_policy::reference)
		.def("GetGBXActorList", &UGearboxGlobals::GetGBXActorList, py::return_value_policy::reference)
		.def("GetRuleEngineLoadBalanceManager", &UGearboxGlobals::GetRuleEngineLoadBalanceManager, py::return_value_policy::reference)
		.def("GetGearboxAIFactory", &UGearboxGlobals::GetGearboxAIFactory, py::return_value_policy::reference)
		.def("GetExposureUtility", &UGearboxGlobals::GetExposureUtility, py::return_value_policy::reference)
		.def("GetGearboxGlobals", &UGearboxGlobals::GetGearboxGlobals, py::return_value_policy::reference)
		;
	py::class_< UGearboxGlobalsDefinition, UAudioDevice >(m, "UGearboxGlobalsDefinition")
		.def_static("StaticClass", &UGearboxGlobalsDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("RespawnDelayInSeconds", &UGearboxGlobalsDefinition::RespawnDelayInSeconds)
		.def_readwrite("Dialog", &UGearboxGlobalsDefinition::Dialog, py::return_value_policy::reference)
		;
	py::class_< UGearboxLocationRequest, UAudioDevice >(m, "UGearboxLocationRequest")
		.def_static("StaticClass", &UGearboxLocationRequest::StaticClass, py::return_value_policy::reference)
		.def_readwrite("SearchOrigin", &UGearboxLocationRequest::SearchOrigin, py::return_value_policy::reference)
		.def_readwrite("DirectionFromOrigin", &UGearboxLocationRequest::DirectionFromOrigin, py::return_value_policy::reference)
		.def_readwrite("LocationFilterTest", &UGearboxLocationRequest::LocationFilterTest, py::return_value_policy::reference)
		.def_readwrite("DirectionCone", &UGearboxLocationRequest::DirectionCone)
		.def_readwrite("MinDistanceFromOrigin", &UGearboxLocationRequest::MinDistanceFromOrigin, py::return_value_policy::reference)
		.def_readwrite("MaxDistanceFromOrigin", &UGearboxLocationRequest::MaxDistanceFromOrigin, py::return_value_policy::reference)
		.def_readwrite("SearchRandomness", &UGearboxLocationRequest::SearchRandomness)
		.def_readwrite("SearchOriginResult", &UGearboxLocationRequest::SearchOriginResult, py::return_value_policy::reference)
		.def_readwrite("SearchDirectionResult", &UGearboxLocationRequest::SearchDirectionResult, py::return_value_policy::reference)
		.def("GetLastDirection", &UGearboxLocationRequest::GetLastDirection, py::return_value_policy::reference)
		.def("GetLastOrigin", &UGearboxLocationRequest::GetLastOrigin, py::return_value_policy::reference)
		.def("GetDirection", &UGearboxLocationRequest::GetDirection)
		.def("GetOrigin", &UGearboxLocationRequest::GetOrigin)
		.def("Get", &UGearboxLocationRequest::Get)
		;
	py::class_< UPawnMoveLocationRequest, UAudioDevice >(m, "UPawnMoveLocationRequest")
		.def_static("StaticClass", &UPawnMoveLocationRequest::StaticClass, py::return_value_policy::reference)
		.def_property("GoToCover", [](UPawnMoveLocationRequest &self){return self.GoToCover;}, [](UPawnMoveLocationRequest &self, bool value){self.GoToCover = value ? 1 : 0;})
		.def_readwrite("CoverSearchFilter", &UPawnMoveLocationRequest::CoverSearchFilter)
		.def_readwrite("RepathOption", &UPawnMoveLocationRequest::RepathOption)
		.def_readwrite("CoverFailureResponse", &UPawnMoveLocationRequest::CoverFailureResponse)
		.def_readwrite("DestinationTestNonCover", &UPawnMoveLocationRequest::DestinationTestNonCover)
		.def_readwrite("RepathDistanceThresh", &UPawnMoveLocationRequest::RepathDistanceThresh, py::return_value_policy::reference)
		.def_readwrite("FailureEvent", &UPawnMoveLocationRequest::FailureEvent, py::return_value_policy::reference)
		.def_readwrite("OverrideDistanceForCover", &UPawnMoveLocationRequest::OverrideDistanceForCover, py::return_value_policy::reference)
		.def("Get", &UPawnMoveLocationRequest::Get)
		;
	py::class_< AGearboxPawn, UAudioDevice >(m, "AGearboxPawn")
		.def_static("StaticClass", &AGearboxPawn::StaticClass, py::return_value_policy::reference)
		.def_property("bWantsToMove", [](AGearboxPawn &self){return self.bWantsToMove;}, [](AGearboxPawn &self, bool value){self.bWantsToMove = value ? 1 : 0;})
		.def_readwrite("VfTable_ISpecialMoveInterface", &AGearboxPawn::VfTable_ISpecialMoveInterface, py::return_value_policy::reference)
		.def_readwrite("VfTable_IGearboxDialogInterface", &AGearboxPawn::VfTable_IGearboxDialogInterface, py::return_value_policy::reference)
		.def_readwrite("NPCSightBone", &AGearboxPawn::NPCSightBone, py::return_value_policy::reference)
		.def_readwrite("SMComponent", &AGearboxPawn::SMComponent, py::return_value_policy::reference)
		.def_readwrite("ReplicatedSMData", &AGearboxPawn::ReplicatedSMData, py::return_value_policy::reference)
		.def_readwrite("HasBeenShotAtRecently", &AGearboxPawn::HasBeenShotAtRecently, py::return_value_policy::reference)
		.def_readwrite("CoverState", &AGearboxPawn::CoverState, py::return_value_policy::reference)
		.def_readwrite("CoverManager", &AGearboxPawn::CoverManager, py::return_value_policy::reference)
		.def_readwrite("DialogComponent", &AGearboxPawn::DialogComponent, py::return_value_policy::reference)
		.def_readwrite("DialogReplicatedData", &AGearboxPawn::DialogReplicatedData, py::return_value_policy::reference)
		.def_readwrite("DyingScream", &AGearboxPawn::DyingScream, py::return_value_policy::reference)
		.def("GetAimDirection", &AGearboxPawn::GetAimDirection, py::return_value_policy::reference)
		.def("SetDialogNameTag", &AGearboxPawn::SetDialogNameTag)
		.def("eventServerDialog_TriggerEvent", &AGearboxPawn::eventServerDialog_TriggerEvent)
		.def("GetReplicatedDialogData", &AGearboxPawn::GetReplicatedDialogData, py::return_value_policy::reference)
		.def("SetReplicatedDialogData", &AGearboxPawn::SetReplicatedDialogData)
		.def("GetDialogGroups", &AGearboxPawn::GetDialogGroups)
		.def("GetDialogComponent", &AGearboxPawn::GetDialogComponent, py::return_value_policy::reference)
		.def("GetDialogNameTag", &AGearboxPawn::GetDialogNameTag, py::return_value_policy::reference)
		.def("CanTalk", &AGearboxPawn::CanTalk)
		.def("OnCoverStateChanged", &AGearboxPawn::OnCoverStateChanged)
		.def("ServerSetCoverState", &AGearboxPawn::ServerSetCoverState)
		.def("eventSetCoverState", &AGearboxPawn::eventSetCoverState)
		.def("GetMountAnimDistanceForSpeed", &AGearboxPawn::GetMountAnimDistanceForSpeed)
		.def("eventGetSpotOthersShouldLookAt", &AGearboxPawn::eventGetSpotOthersShouldLookAt, py::return_value_policy::reference)
		.def("SetReplicatedSMData", &AGearboxPawn::SetReplicatedSMData)
		.def("eventServerSpecialMove_StopAny", &AGearboxPawn::eventServerSpecialMove_StopAny)
		.def("eventServerSpecialMove_Stop", &AGearboxPawn::eventServerSpecialMove_Stop)
		.def("eventServerSpecialMove_Queue", &AGearboxPawn::eventServerSpecialMove_Queue)
		.def("eventServerSpecialMove_Play", &AGearboxPawn::eventServerSpecialMove_Play)
		.def("GetDefaultRootMotionRotationMode", &AGearboxPawn::GetDefaultRootMotionRotationMode)
		.def("GetDefaultRootMotionMode", &AGearboxPawn::GetDefaultRootMotionMode)
		.def("GetSkelMesh", &AGearboxPawn::GetSkelMesh, py::return_value_policy::reference)
		.def("GetSMComponent", &AGearboxPawn::GetSMComponent, py::return_value_policy::reference)
		.def("GetActor", &AGearboxPawn::GetActor, py::return_value_policy::reference)
		.def("GetNavigationHandle", &AGearboxPawn::GetNavigationHandle, py::return_value_policy::reference)
		.def("PlayHit", &AGearboxPawn::PlayHit)
		.def("eventReplicatedEvent", &AGearboxPawn::eventReplicatedEvent)
		.def("Died", &AGearboxPawn::Died)
		.def("SetMovementPhysics", &AGearboxPawn::SetMovementPhysics)
		.def("eventPostBeginPlay", &AGearboxPawn::eventPostBeginPlay)
		.def("NotifyShotAtBy", &AGearboxPawn::NotifyShotAtBy)
		.def("HaveIBeenShotAtRecently", &AGearboxPawn::HaveIBeenShotAtRecently)
		;
	py::class_< AGearboxPlayerController, UAudioDevice >(m, "AGearboxPlayerController")
		.def_static("StaticClass", &AGearboxPlayerController::StaticClass, py::return_value_policy::reference)
		.def_property("bWantsToShowStorageMenu", [](AGearboxPlayerController &self){return self.bWantsToShowStorageMenu;}, [](AGearboxPlayerController &self, bool value){self.bWantsToShowStorageMenu = value ? 1 : 0;})
		.def_property("bShouldCheckForProfileDeviceRemoval", [](AGearboxPlayerController &self){return self.bShouldCheckForProfileDeviceRemoval;}, [](AGearboxPlayerController &self, bool value){self.bShouldCheckForProfileDeviceRemoval = value ? 1 : 0;})
		.def_readwrite("CurrentViewShake", &AGearboxPlayerController::CurrentViewShake, py::return_value_policy::reference)
		.def_readwrite("BaseDamageShake", &AGearboxPlayerController::BaseDamageShake, py::return_value_policy::reference)
		.def_readwrite("ShakeOffset", &AGearboxPlayerController::ShakeOffset, py::return_value_policy::reference)
		.def_readwrite("ShakeRot", &AGearboxPlayerController::ShakeRot, py::return_value_policy::reference)
		.def_readwrite("ShakeFOV", &AGearboxPlayerController::ShakeFOV)
		.def_readwrite("AIDebugCam", &AGearboxPlayerController::AIDebugCam, py::return_value_policy::reference)
		.def_readwrite("PreviousDebugPawn", &AGearboxPlayerController::PreviousDebugPawn, py::return_value_policy::reference)
		.def_readwrite("AIDebugCamClass", &AGearboxPlayerController::AIDebugCamClass, py::return_value_policy::reference)
		.def_readwrite("DamageShakeMagnitudeMultiplier", &AGearboxPlayerController::DamageShakeMagnitudeMultiplier)
		.def_readwrite("DamageShakeMagnitudeMultiplierBaseValue", &AGearboxPlayerController::DamageShakeMagnitudeMultiplierBaseValue)
		.def_readwrite("DamageShakeMagnitudeMultiplierModifierStack", &AGearboxPlayerController::DamageShakeMagnitudeMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("DamageShakeTimeMultiplier", &AGearboxPlayerController::DamageShakeTimeMultiplier)
		.def_readwrite("DamageShakeTimeMultiplierBaseValue", &AGearboxPlayerController::DamageShakeTimeMultiplierBaseValue)
		.def_readwrite("DamageShakeTimeMultiplierModifierStack", &AGearboxPlayerController::DamageShakeTimeMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("LeviathanReplicationChannel", &AGearboxPlayerController::LeviathanReplicationChannel, py::return_value_policy::reference)
		.def_readwrite("PlaySessionGuid", &AGearboxPlayerController::PlaySessionGuid, py::return_value_policy::reference)
		.def_readwrite("SessionBundleNumber", &AGearboxPlayerController::SessionBundleNumber)
		.def_readwrite("CachedProfileSettings", &AGearboxPlayerController::CachedProfileSettings, py::return_value_policy::reference)
		.def("RequestTitleStorageFile", &AGearboxPlayerController::RequestTitleStorageFile)
		.def("ShowSparkID", &AGearboxPlayerController::ShowSparkID)
		.def("ShouldCheckRemoteControlCheckbox", &AGearboxPlayerController::ShouldCheckRemoteControlCheckbox)
		.def("DisplayDebugSpark", &AGearboxPlayerController::DisplayDebugSpark)
		.def("AITree", &AGearboxPlayerController::AITree)
		.def("AIToggleTargetViewCones", &AGearboxPlayerController::AIToggleTargetViewCones)
		.def("AIToggleAwarenessZones", &AGearboxPlayerController::AIToggleAwarenessZones)
		.def("AIToggleCombat", &AGearboxPlayerController::AIToggleCombat)
		.def("AIToggleResources", &AGearboxPlayerController::AIToggleResources)
		.def("AIToggleInactiveRules", &AGearboxPlayerController::AIToggleInactiveRules)
		.def("AIToggleRules", &AGearboxPlayerController::AIToggleRules)
		.def("AIToggleFlags", &AGearboxPlayerController::AIToggleFlags)
		.def("AIDebugNextSnapshot", &AGearboxPlayerController::AIDebugNextSnapshot)
		.def("AIDebugPrevSnapshot", &AGearboxPlayerController::AIDebugPrevSnapshot)
		.def("ainext", &AGearboxPlayerController::ainext)
		.def("aiprev", &AGearboxPlayerController::aiprev)
		.def("AINextRule", &AGearboxPlayerController::AINextRule)
		.def("AIPrevRule", &AGearboxPlayerController::AIPrevRule)
		.def("AIDebugSetPawn", &AGearboxPlayerController::AIDebugSetPawn)
		.def("AIDebugSetPawnByName", &AGearboxPlayerController::AIDebugSetPawnByName)
		.def("debugpawn", &AGearboxPlayerController::debugpawn)
		.def("aisetp", &AGearboxPlayerController::aisetp)
		.def("NotifyGameUnPaused", &AGearboxPlayerController::NotifyGameUnPaused)
		.def("NotifyGamePaused", &AGearboxPlayerController::NotifyGamePaused)
		.def("SetSettingsFromProfile", &AGearboxPlayerController::SetSettingsFromProfile)
		.def("GetStorageDeviceID", &AGearboxPlayerController::GetStorageDeviceID)
		.def("SetStorageDeviceID", &AGearboxPlayerController::SetStorageDeviceID)
		.def("NotifyDeviceSelectComplete", &AGearboxPlayerController::NotifyDeviceSelectComplete)
		.def("eventDisplayStorageRemovedMenu", &AGearboxPlayerController::eventDisplayStorageRemovedMenu)
		.def("DisplayProfileRemovedMenu", &AGearboxPlayerController::DisplayProfileRemovedMenu)
		.def("NotifyProfileWriteFromStorageChangeComplete", &AGearboxPlayerController::NotifyProfileWriteFromStorageChangeComplete)
		.def("IsCurrentStorageDeviceValid", &AGearboxPlayerController::IsCurrentStorageDeviceValid)
		.def("NotifyStorageDeviceChange", &AGearboxPlayerController::NotifyStorageDeviceChange)
		.def("eventDestroyOnlineGame", &AGearboxPlayerController::eventDestroyOnlineGame)
		.def("ReturnToTitleScreen", &AGearboxPlayerController::ReturnToTitleScreen)
		.def("GetConnectionFailureNoticeMsg", &AGearboxPlayerController::GetConnectionFailureNoticeMsg, py::return_value_policy::reference)
		.def("GetMainMenuMapName", &AGearboxPlayerController::GetMainMenuMapName, py::return_value_policy::reference)
		.def("NotifyLinkStatusChange", &AGearboxPlayerController::NotifyLinkStatusChange)
		.def("NotifyLoginStatusChange", &AGearboxPlayerController::NotifyLoginStatusChange)
		.def("NotifyLoginChange", &AGearboxPlayerController::NotifyLoginChange)
		.def("OnReadProfileSettingsComplete", &AGearboxPlayerController::OnReadProfileSettingsComplete)
		.def("OnReceivedNewProfile", &AGearboxPlayerController::OnReceivedNewProfile)
		.def("ClearOnlineDelegates", &AGearboxPlayerController::ClearOnlineDelegates)
		.def("RegisterOnlineDelegates", &AGearboxPlayerController::RegisterOnlineDelegates)
		.def("OnProfileWriteComplete", &AGearboxPlayerController::OnProfileWriteComplete)
		.def("HidePS3WritingProfileDialog", &AGearboxPlayerController::HidePS3WritingProfileDialog)
		.def("ShowPS3WritingProfileDialog", &AGearboxPlayerController::ShowPS3WritingProfileDialog)
		.def("eventWriteProfile", &AGearboxPlayerController::eventWriteProfile)
		.def("eventGetProfileSettings", &AGearboxPlayerController::eventGetProfileSettings, py::return_value_policy::reference)
		.def("GetMyControllerId", &AGearboxPlayerController::GetMyControllerId)
		.def("eventReadProfile", &AGearboxPlayerController::eventReadProfile)
		.def("UnregisterPlayerDataStores", &AGearboxPlayerController::UnregisterPlayerDataStores)
		.def("RegisterCustomPlayerDataStores", &AGearboxPlayerController::RegisterCustomPlayerDataStores)
		.def("SetDataStoreStringValue", &AGearboxPlayerController::SetDataStoreStringValue)
		.def("GetDataStoreStringValue", &AGearboxPlayerController::GetDataStoreStringValue, py::return_value_policy::reference)
		.def("eventClientKeepPlayingLoadingMovie", &AGearboxPlayerController::eventClientKeepPlayingLoadingMovie)
		.def("ClientResetCamera", &AGearboxPlayerController::ClientResetCamera)
		.def("eventSpawnPlayerCamera", &AGearboxPlayerController::eventSpawnPlayerCamera)
		.def("eventInitInputSystem", &AGearboxPlayerController::eventInitInputSystem)
		.def("NoTargetAll", &AGearboxPlayerController::NoTargetAll)
		.def("NoTarget", &AGearboxPlayerController::NoTarget)
		.def("GetNoTargetPlayers", &AGearboxPlayerController::GetNoTargetPlayers)
		.def("SetNoTargetPlayers", &AGearboxPlayerController::SetNoTargetPlayers)
		.def("Possess", &AGearboxPlayerController::Possess)
		.def("DontTarget", &AGearboxPlayerController::DontTarget)
		.def("ClientConsoleCommand", &AGearboxPlayerController::ClientConsoleCommand)
		.def("IsPlayerAllowingActiveMoment", &AGearboxPlayerController::IsPlayerAllowingActiveMoment)
		.def("IsActiveMomentRunning", &AGearboxPlayerController::IsActiveMomentRunning)
		.def("ViewShake", &AGearboxPlayerController::ViewShake)
		.def("UpdateShakeRotComponent", &AGearboxPlayerController::UpdateShakeRotComponent)
		.def("CheckShake", &AGearboxPlayerController::CheckShake)
		.def("StopViewShaking", &AGearboxPlayerController::StopViewShaking)
		.def("OnCameraShake", &AGearboxPlayerController::OnCameraShake)
		.def("ShakeView", &AGearboxPlayerController::ShakeView)
		.def("ClientDamageShake", &AGearboxPlayerController::ClientDamageShake)
		.def("ConsoleEcho", &AGearboxPlayerController::ConsoleEcho)
		.def("initialize", &AGearboxPlayerController::initialize)
		.def("PostBeginPlay", &AGearboxPlayerController::PostBeginPlay)
		.def("TryAndSpawnLeviathanChannel", &AGearboxPlayerController::TryAndSpawnLeviathanChannel)
		.def("GenerateNewSessionGuid", &AGearboxPlayerController::GenerateNewSessionGuid)
		;
	py::class_< UGearboxPlayerInput, UAudioDevice >(m, "UGearboxPlayerInput")
		.def_static("StaticClass", &UGearboxPlayerInput::StaticClass, py::return_value_policy::reference)
		.def("eventPlayerInput", &UGearboxPlayerInput::eventPlayerInput)
		;
	py::class_< AGearboxPlayerReplicationInfo, UAudioDevice >(m, "AGearboxPlayerReplicationInfo")
		.def_static("StaticClass", &AGearboxPlayerReplicationInfo::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Difficulty", &AGearboxPlayerReplicationInfo::Difficulty)
		.def_readwrite("Dummy", &AGearboxPlayerReplicationInfo::Dummy)
		;
	py::class_< UGearboxProfileSettings, UAudioDevice >(m, "UGearboxProfileSettings")
		.def_static("StaticClass", &UGearboxProfileSettings::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxRenderTextureManager, UAudioDevice >(m, "UGearboxRenderTextureManager")
		.def_static("StaticClass", &UGearboxRenderTextureManager::StaticClass, py::return_value_policy::reference)
		.def_readwrite("FreeList2D", &UGearboxRenderTextureManager::FreeList2D, py::return_value_policy::reference)
		.def_readwrite("FreeList", &UGearboxRenderTextureManager::FreeList, py::return_value_policy::reference)
		.def_readwrite("HoldDuration", &UGearboxRenderTextureManager::HoldDuration)
		.def_readwrite("TimeToNextTick", &UGearboxRenderTextureManager::TimeToNextTick)
		.def_readwrite("Thumbnails", &UGearboxRenderTextureManager::Thumbnails, py::return_value_policy::reference)
		.def_readwrite("DefaultLights", &UGearboxRenderTextureManager::DefaultLights, py::return_value_policy::reference)
		.def_readwrite("ThumbnailTextureArea", &UGearboxRenderTextureManager::ThumbnailTextureArea)
		.def("SetThumbnailMesh", &UGearboxRenderTextureManager::SetThumbnailMesh)
		.def("FreeContext", &UGearboxRenderTextureManager::FreeContext)
		.def("FreeThumbnail", &UGearboxRenderTextureManager::FreeThumbnail)
		.def("GetThumbnail", &UGearboxRenderTextureManager::GetThumbnail, py::return_value_policy::reference)
		.def("FreeTexture2D", &UGearboxRenderTextureManager::FreeTexture2D)
		.def("GetTexture2D", &UGearboxRenderTextureManager::GetTexture2D, py::return_value_policy::reference)
		.def("FreeRenderTexture", &UGearboxRenderTextureManager::FreeRenderTexture)
		.def("GetRenderTexture", &UGearboxRenderTextureManager::GetRenderTexture, py::return_value_policy::reference)
		;
	py::class_< UGearboxSeqAct_DestroyPopulationActors, UAudioDevice >(m, "UGearboxSeqAct_DestroyPopulationActors")
		.def_static("StaticClass", &UGearboxSeqAct_DestroyPopulationActors::StaticClass, py::return_value_policy::reference)
		.def_property("SaveDestroyedActors", [](UGearboxSeqAct_DestroyPopulationActors &self){return self.SaveDestroyedActors;}, [](UGearboxSeqAct_DestroyPopulationActors &self, bool value){self.SaveDestroyedActors = value ? 1 : 0;})
		.def_property("DisablePopulationSpawners", [](UGearboxSeqAct_DestroyPopulationActors &self){return self.DisablePopulationSpawners;}, [](UGearboxSeqAct_DestroyPopulationActors &self, bool value){self.DisablePopulationSpawners = value ? 1 : 0;})
		.def_property("bActorsDestroyed", [](UGearboxSeqAct_DestroyPopulationActors &self){return self.bActorsDestroyed;}, [](UGearboxSeqAct_DestroyPopulationActors &self, bool value){self.bActorsDestroyed = value ? 1 : 0;})
		.def_readwrite("Opportunities", &UGearboxSeqAct_DestroyPopulationActors::Opportunities, py::return_value_policy::reference)
		.def_readwrite("Encounters", &UGearboxSeqAct_DestroyPopulationActors::Encounters, py::return_value_policy::reference)
		;
	py::class_< UGearboxSeqAct_ResetPopulationCount, UAudioDevice >(m, "UGearboxSeqAct_ResetPopulationCount")
		.def_static("StaticClass", &UGearboxSeqAct_ResetPopulationCount::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxSkeletalMeshComponent, UAudioDevice >(m, "UGearboxSkeletalMeshComponent")
		.def_static("StaticClass", &UGearboxSkeletalMeshComponent::StaticClass, py::return_value_policy::reference)
		.def_readwrite("FOV", &UGearboxSkeletalMeshComponent::FOV)
		.def("SetFOV", &UGearboxSkeletalMeshComponent::SetFOV)
		;
	py::class_< UGearboxStaticMeshComponent, UAudioDevice >(m, "UGearboxStaticMeshComponent")
		.def_static("StaticClass", &UGearboxStaticMeshComponent::StaticClass, py::return_value_policy::reference)
		.def_readwrite("FOV", &UGearboxStaticMeshComponent::FOV)
		;
	py::class_< UGestaltSkeletalMeshDefinition, UAudioDevice >(m, "UGestaltSkeletalMeshDefinition")
		.def_static("StaticClass", &UGestaltSkeletalMeshDefinition::StaticClass, py::return_value_policy::reference)
		.def_property("bStaticMeshRigidBodyMesh", [](UGestaltSkeletalMeshDefinition &self){return self.bStaticMeshRigidBodyMesh;}, [](UGestaltSkeletalMeshDefinition &self, bool value){self.bStaticMeshRigidBodyMesh = value ? 1 : 0;})
		.def_readwrite("GestaltSkeletalMesh", &UGestaltSkeletalMeshDefinition::GestaltSkeletalMesh, py::return_value_policy::reference)
		.def_readwrite("GestaltInfos", &UGestaltSkeletalMeshDefinition::GestaltInfos, py::return_value_policy::reference)
		.def_readwrite("GestaltAccessoryNames", &UGestaltSkeletalMeshDefinition::GestaltAccessoryNames, py::return_value_policy::reference)
		.def_readwrite("GestaltSocketMappings", &UGestaltSkeletalMeshDefinition::GestaltSocketMappings, py::return_value_policy::reference)
		.def_readwrite("GestaltPartBounds", &UGestaltSkeletalMeshDefinition::GestaltPartBounds, py::return_value_policy::reference)
		.def("InitGestaltAccessoryMeshDataFromParts", &UGestaltSkeletalMeshDefinition::InitGestaltAccessoryMeshDataFromParts)
		.def("InitGestaltMeshDataFromParts", &UGestaltSkeletalMeshDefinition::InitGestaltMeshDataFromParts)
		;
	py::class_< UGFxActorMoviePool, UAudioDevice >(m, "UGFxActorMoviePool")
		.def_static("StaticClass", &UGFxActorMoviePool::StaticClass, py::return_value_policy::reference)
		.def_readwrite("MovieDefinition", &UGFxActorMoviePool::MovieDefinition, py::return_value_policy::reference)
		.def_readwrite("Pools", &UGFxActorMoviePool::Pools, py::return_value_policy::reference)
		.def_readwrite("MovieTargets", &UGFxActorMoviePool::MovieTargets, py::return_value_policy::reference)
		.def("DisplayDebug", &UGFxActorMoviePool::DisplayDebug)
		.def("GetPoolName", &UGFxActorMoviePool::GetPoolName, py::return_value_policy::reference)
		.def("PoolStyleString", &UGFxActorMoviePool::PoolStyleString, py::return_value_policy::reference)
		.def("MovieStateChanged", &UGFxActorMoviePool::MovieStateChanged)
		;
	py::class_< UGFxMovieDefinition, UAudioDevice >(m, "UGFxMovieDefinition")
		.def_static("StaticClass", &UGFxMovieDefinition::StaticClass, py::return_value_policy::reference)
		.def_property("bTakeFocus", [](UGFxMovieDefinition &self){return self.bTakeFocus;}, [](UGFxMovieDefinition &self, bool value){self.bTakeFocus = value ? 1 : 0;})
		.def_property("bCaptureInput", [](UGFxMovieDefinition &self){return self.bCaptureInput;}, [](UGFxMovieDefinition &self, bool value){self.bCaptureInput = value ? 1 : 0;})
		.def_property("bStartPaused", [](UGFxMovieDefinition &self){return self.bStartPaused;}, [](UGFxMovieDefinition &self, bool value){self.bStartPaused = value ? 1 : 0;})
		.def_property("bIsModalGameMenu", [](UGFxMovieDefinition &self){return self.bIsModalGameMenu;}, [](UGFxMovieDefinition &self, bool value){self.bIsModalGameMenu = value ? 1 : 0;})
		.def_property("bOverrideWorldLighting", [](UGFxMovieDefinition &self){return self.bOverrideWorldLighting;}, [](UGFxMovieDefinition &self, bool value){self.bOverrideWorldLighting = value ? 1 : 0;})
		.def_property("bInputOwnerOnly", [](UGFxMovieDefinition &self){return self.bInputOwnerOnly;}, [](UGFxMovieDefinition &self, bool value){self.bInputOwnerOnly = value ? 1 : 0;})
		.def_property("bInputAllKeys", [](UGFxMovieDefinition &self){return self.bInputAllKeys;}, [](UGFxMovieDefinition &self, bool value){self.bInputAllKeys = value ? 1 : 0;})
		.def_readwrite("SwfMovie", &UGFxMovieDefinition::SwfMovie, py::return_value_policy::reference)
		.def_readwrite("SwfMovieClass", &UGFxMovieDefinition::SwfMovieClass, py::return_value_policy::reference)
		.def_readwrite("Movie", &UGFxMovieDefinition::Movie, py::return_value_policy::reference)
		.def_readwrite("ExternalInterfaceClass", &UGFxMovieDefinition::ExternalInterfaceClass, py::return_value_policy::reference)
		.def_readwrite("FadeInSeconds", &UGFxMovieDefinition::FadeInSeconds)
		.def_readwrite("FadeOutSeconds", &UGFxMovieDefinition::FadeOutSeconds)
		.def_readwrite("WorldLightingDirectionOffset", &UGFxMovieDefinition::WorldLightingDirectionOffset, py::return_value_policy::reference)
		.def_readwrite("DrawStyle", &UGFxMovieDefinition::DrawStyle, py::return_value_policy::reference)
		.def_readwrite("DepthPriority", &UGFxMovieDefinition::DepthPriority)
		.def_readwrite("PoolType", &UGFxMovieDefinition::PoolType)
		.def_readwrite("ScaleMode", &UGFxMovieDefinition::ScaleMode)
		.def_readwrite("AlignMode", &UGFxMovieDefinition::AlignMode)
		.def_readwrite("TimingMode", &UGFxMovieDefinition::TimingMode)
		.def_readwrite("RenderTextureMode", &UGFxMovieDefinition::RenderTextureMode)
		.def_readwrite("Pool", &UGFxMovieDefinition::Pool, py::return_value_policy::reference)
		.def_readwrite("CustomStates", &UGFxMovieDefinition::CustomStates, py::return_value_policy::reference)
		.def_readwrite("AutoActivateStates", &UGFxMovieDefinition::AutoActivateStates, py::return_value_policy::reference)
		.def_readwrite("MenuLinks", &UGFxMovieDefinition::MenuLinks, py::return_value_policy::reference)
		.def_readwrite("RenderTexture", &UGFxMovieDefinition::RenderTexture, py::return_value_policy::reference)
		.def_readwrite("InteractionOverrideSounds", &UGFxMovieDefinition::InteractionOverrideSounds, py::return_value_policy::reference)
		.def_readwrite("BaseMovieStates", &UGFxMovieDefinition::BaseMovieStates, py::return_value_policy::reference)
		.def("FindMovieLink", &UGFxMovieDefinition::FindMovieLink, py::return_value_policy::reference)
		.def("PostMovieStart", &UGFxMovieDefinition::PostMovieStart)
		.def("SpawnPlayerMovie", &UGFxMovieDefinition::SpawnPlayerMovie, py::return_value_policy::reference)
		.def("SupportsStatePooling", &UGFxMovieDefinition::SupportsStatePooling)
		.def("GetPoolStyle", &UGFxMovieDefinition::GetPoolStyle)
		;
	py::class_< UGFxMovieDrawStyle, UAudioDevice >(m, "UGFxMovieDrawStyle")
		.def_static("StaticClass", &UGFxMovieDrawStyle::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Movie", &UGFxMovieDrawStyle::Movie, py::return_value_policy::reference)
		.def_readwrite("TargetActor", &UGFxMovieDrawStyle::TargetActor, py::return_value_policy::reference)
		.def_readwrite("UnknownData00[0x4]", &UGFxMovieDrawStyle::UnknownData00[0x4])
		.def("GetStyleDebugString", &UGFxMovieDrawStyle::GetStyleDebugString, py::return_value_policy::reference)
		;
	py::class_< UGFxMovieDrawStyleHUD, UAudioDevice >(m, "UGFxMovieDrawStyleHUD")
		.def_static("StaticClass", &UGFxMovieDrawStyleHUD::StaticClass, py::return_value_policy::reference)
		.def_property("bCacheValid", [](UGFxMovieDrawStyleHUD &self){return self.bCacheValid;}, [](UGFxMovieDrawStyleHUD &self, bool value){self.bCacheValid = value ? 1 : 0;})
		.def_readwrite("AnchorPoints", &UGFxMovieDrawStyleHUD::AnchorPoints, py::return_value_policy::reference)
		.def_readwrite("MovieDimensions[0x2]", &UGFxMovieDrawStyleHUD::MovieDimensions[0x2], py::return_value_policy::reference)
		.def_readwrite("MovieScreenPos[0x4]", &UGFxMovieDrawStyleHUD::MovieScreenPos[0x4])
		.def("eventRequiresClientInstance", &UGFxMovieDrawStyleHUD::eventRequiresClientInstance)
		;
	py::class_< UGFxMovieDrawStyleRTT, UAudioDevice >(m, "UGFxMovieDrawStyleRTT")
		.def_static("StaticClass", &UGFxMovieDrawStyleRTT::StaticClass, py::return_value_policy::reference)
		.def_readwrite("TextureSize", &UGFxMovieDrawStyleRTT::TextureSize)
		.def_readwrite("RenderTextureMode", &UGFxMovieDrawStyleRTT::RenderTextureMode)
		;
	py::class_< UGFxMovieDrawStyleComponent, UAudioDevice >(m, "UGFxMovieDrawStyleComponent")
		.def_static("StaticClass", &UGFxMovieDrawStyleComponent::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGFxMovieDrawStyleMesh, UAudioDevice >(m, "UGFxMovieDrawStyleMesh")
		.def_static("StaticClass", &UGFxMovieDrawStyleMesh::StaticClass, py::return_value_policy::reference)
		.def_readwrite("MeshComponentArchetype", &UGFxMovieDrawStyleMesh::MeshComponentArchetype, py::return_value_policy::reference)
		.def_readwrite("UseStaticMesh", &UGFxMovieDrawStyleMesh::UseStaticMesh, py::return_value_policy::reference)
		.def_readwrite("UseSkeletalMesh", &UGFxMovieDrawStyleMesh::UseSkeletalMesh, py::return_value_policy::reference)
		.def_readwrite("UseMeshInstanceName", &UGFxMovieDrawStyleMesh::UseMeshInstanceName, py::return_value_policy::reference)
		.def_readwrite("MaterialIndex", &UGFxMovieDrawStyleMesh::MaterialIndex)
		.def_readwrite("OverrideMaterial", &UGFxMovieDrawStyleMesh::OverrideMaterial, py::return_value_policy::reference)
		.def_readwrite("TextureParameterName", &UGFxMovieDrawStyleMesh::TextureParameterName, py::return_value_policy::reference)
		.def_readwrite("Component", &UGFxMovieDrawStyleMesh::Component, py::return_value_policy::reference)
		.def_readwrite("Mati", &UGFxMovieDrawStyleMesh::Mati, py::return_value_policy::reference)
		.def_readwrite("OriginalMaterial", &UGFxMovieDrawStyleMesh::OriginalMaterial, py::return_value_policy::reference)
		.def("GetStyleDebugString", &UGFxMovieDrawStyleMesh::GetStyleDebugString, py::return_value_policy::reference)
		.def("eventRequiresClientInstance", &UGFxMovieDrawStyleMesh::eventRequiresClientInstance)
		;
	py::class_< UGFxMovieDrawStyleSprite, UAudioDevice >(m, "UGFxMovieDrawStyleSprite")
		.def_static("StaticClass", &UGFxMovieDrawStyleSprite::StaticClass, py::return_value_policy::reference)
		.def_readwrite("SpriteSize", &UGFxMovieDrawStyleSprite::SpriteSize)
		.def_readwrite("TheSprite", &UGFxMovieDrawStyleSprite::TheSprite, py::return_value_policy::reference)
		;
	py::class_< UGFxMovieDrawStyleSplitscreen, UAudioDevice >(m, "UGFxMovieDrawStyleSplitscreen")
		.def_static("StaticClass", &UGFxMovieDrawStyleSplitscreen::StaticClass, py::return_value_policy::reference)
		.def("eventRequiresClientInstance", &UGFxMovieDrawStyleSplitscreen::eventRequiresClientInstance)
		;
	py::class_< UGFxMovieManager, UAudioDevice >(m, "UGFxMovieManager")
		.def_static("StaticClass", &UGFxMovieManager::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Subscribers", &UGFxMovieManager::Subscribers, py::return_value_policy::reference)
		.def_readwrite("MoviePools", &UGFxMovieManager::MoviePools, py::return_value_policy::reference)
		.def("ChangeMovieState", &UGFxMovieManager::ChangeMovieState)
		.def("Unsubscribe", &UGFxMovieManager::Unsubscribe)
		.def("Subscribe", &UGFxMovieManager::Subscribe)
		.def("UnregisterMoviesDrawnTo", &UGFxMovieManager::UnregisterMoviesDrawnTo)
		.def("UnregisterTarget", &UGFxMovieManager::UnregisterTarget)
		.def("UnregisterMovie", &UGFxMovieManager::UnregisterMovie)
		.def("RegisterMovie", &UGFxMovieManager::RegisterMovie)
		;
	py::class_< UGFxMovieState, UAudioDevice >(m, "UGFxMovieState")
		.def_static("StaticClass", &UGFxMovieState::StaticClass, py::return_value_policy::reference)
		.def_readwrite("StateName", &UGFxMovieState::StateName, py::return_value_policy::reference)
		.def_readwrite("DefaultState", &UGFxMovieState::DefaultState, py::return_value_policy::reference)
		.def_readwrite("StateType", &UGFxMovieState::StateType)
		.def_readwrite("AllStates", &UGFxMovieState::AllStates, py::return_value_policy::reference)
		.def("GetDebugString", &UGFxMovieState::GetDebugString, py::return_value_policy::reference)
		.def("ApplyMovieState", &UGFxMovieState::ApplyMovieState)
		.def("FindMovieState", &UGFxMovieState::FindMovieState)
		.def("TestState", &UGFxMovieState::TestState)
		.def("ToggleState", &UGFxMovieState::ToggleState)
		.def("EnableState", &UGFxMovieState::EnableState)
		;
	py::class_< UGFxMovieStateCustom, UAudioDevice >(m, "UGFxMovieStateCustom")
		.def_static("StaticClass", &UGFxMovieStateCustom::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CustomStates", &UGFxMovieStateCustom::CustomStates, py::return_value_policy::reference)
		;
	py::class_< UGFxMovieStateFlags, UAudioDevice >(m, "UGFxMovieStateFlags")
		.def_static("StaticClass", &UGFxMovieStateFlags::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CustomFlags", &UGFxMovieStateFlags::CustomFlags, py::return_value_policy::reference)
		;
	py::class_< UGFxMovieStatePlayerAware, UAudioDevice >(m, "UGFxMovieStatePlayerAware")
		.def_static("StaticClass", &UGFxMovieStatePlayerAware::StaticClass, py::return_value_policy::reference)
		.def_readwrite("LookAtThreshold", &UGFxMovieStatePlayerAware::LookAtThreshold)
		.def_readwrite("LookStates", &UGFxMovieStatePlayerAware::LookStates, py::return_value_policy::reference)
		.def_readwrite("RangeStates", &UGFxMovieStatePlayerAware::RangeStates, py::return_value_policy::reference)
		.def("EnableState", &UGFxMovieStatePlayerAware::EnableState)
		;
	py::class_< UIAIInterface, UAudioDevice >(m, "UIAIInterface")
		.def_static("StaticClass", &UIAIInterface::StaticClass, py::return_value_policy::reference)
		.def("InitSequence", &UIAIInterface::InitSequence)
		.def("GetAllegiance", &UIAIInterface::GetAllegiance, py::return_value_policy::reference)
		.def("GetAIDefinition", &UIAIInterface::GetAIDefinition, py::return_value_policy::reference)
		.def("GetAIComponent", &UIAIInterface::GetAIComponent, py::return_value_policy::reference)
		.def("GetAIParent", &UIAIInterface::GetAIParent, py::return_value_policy::reference)
		.def("GetAILocation", &UIAIInterface::GetAILocation, py::return_value_policy::reference)
		.def("GetAIActor", &UIAIInterface::GetAIActor, py::return_value_policy::reference)
		.def("CanTickAI", &UIAIInterface::CanTickAI)
		;
	py::class_< UIConstructObject, UAudioDevice >(m, "UIConstructObject")
		.def_static("StaticClass", &UIConstructObject::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UIGFxActorMovie, UAudioDevice >(m, "UIGFxActorMovie")
		.def_static("StaticClass", &UIGFxActorMovie::StaticClass, py::return_value_policy::reference)
		.def("GFx_NotifyMovieDestroy", &UIGFxActorMovie::GFx_NotifyMovieDestroy)
		.def("GFx_NotifyMovieCreate", &UIGFxActorMovie::GFx_NotifyMovieCreate)
		.def("GFx_GetMovieActor", &UIGFxActorMovie::GFx_GetMovieActor, py::return_value_policy::reference)
		;
	py::class_< UINounAttributeProvider, UAudioDevice >(m, "UINounAttributeProvider")
		.def_static("StaticClass", &UINounAttributeProvider::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UInterfaceGearboxCamera, UAudioDevice >(m, "UInterfaceGearboxCamera")
		.def_static("StaticClass", &UInterfaceGearboxCamera::StaticClass, py::return_value_policy::reference)
		.def("eventFinishCameraLookAt", &UInterfaceGearboxCamera::eventFinishCameraLookAt)
		.def("EnableThirdPersonLookAt", &UInterfaceGearboxCamera::EnableThirdPersonLookAt)
		.def("BeginCameraLookAt", &UInterfaceGearboxCamera::BeginCameraLookAt)
		;
	py::class_< UIStreamingDataEvent, UAudioDevice >(m, "UIStreamingDataEvent")
		.def_static("StaticClass", &UIStreamingDataEvent::StaticClass, py::return_value_policy::reference)
		.def("eventRunStreamingDataEvent", &UIStreamingDataEvent::eventRunStreamingDataEvent)
		;
	py::class_< ULeviathanChannel, UAudioDevice >(m, "ULeviathanChannel")
		.def_static("StaticClass", &ULeviathanChannel::StaticClass, py::return_value_policy::reference)
		.def_readwrite("UnknownData00[0x10]", &ULeviathanChannel::UnknownData00[0x10])
		;
	py::class_< UNoContextNeededAttributeContextResolver, UAudioDevice >(m, "UNoContextNeededAttributeContextResolver")
		.def_static("StaticClass", &UNoContextNeededAttributeContextResolver::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UNounAttributeValueResolver, UAudioDevice >(m, "UNounAttributeValueResolver")
		.def_static("StaticClass", &UNounAttributeValueResolver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ReplicationStrategy", &UNounAttributeValueResolver::ReplicationStrategy)
		.def_readwrite("DefaultValue", &UNounAttributeValueResolver::DefaultValue, py::return_value_policy::reference)
		;
	py::class_< UObjectFunctionAttributeValueResolver, UAudioDevice >(m, "UObjectFunctionAttributeValueResolver")
		.def_static("StaticClass", &UObjectFunctionAttributeValueResolver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("FunctionCall", &UObjectFunctionAttributeValueResolver::FunctionCall, py::return_value_policy::reference)
		;
	py::class_< UObjectPropertyContextResolver, UAudioDevice >(m, "UObjectPropertyContextResolver")
		.def_static("StaticClass", &UObjectPropertyContextResolver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("PropertyName", &UObjectPropertyContextResolver::PropertyName, py::return_value_policy::reference)
		;
	py::class_< UPhysicsStateExpressionEvaluator, UAudioDevice >(m, "UPhysicsStateExpressionEvaluator")
		.def_static("StaticClass", &UPhysicsStateExpressionEvaluator::StaticClass, py::return_value_policy::reference)
		.def_property("bIsInState", [](UPhysicsStateExpressionEvaluator &self){return self.bIsInState;}, [](UPhysicsStateExpressionEvaluator &self, bool value){self.bIsInState = value ? 1 : 0;})
		.def_readwrite("PhysicsState", &UPhysicsStateExpressionEvaluator::PhysicsState)
		.def("Evaluate", &UPhysicsStateExpressionEvaluator::Evaluate)
		;
	py::class_< UPopulationAspect, UAudioDevice >(m, "UPopulationAspect")
		.def_static("StaticClass", &UPopulationAspect::StaticClass, py::return_value_policy::reference)
		.def("eventDenStatRemoved", &UPopulationAspect::eventDenStatRemoved)
		.def("eventDenStatAdded", &UPopulationAspect::eventDenStatAdded)
		.def("eventEnabledStatusChanged", &UPopulationAspect::eventEnabledStatusChanged)
		.def("eventAllActorsRemoved", &UPopulationAspect::eventAllActorsRemoved)
		.def("eventOnActorDeath", &UPopulationAspect::eventOnActorDeath)
		.def("eventOnSpawnActor", &UPopulationAspect::eventOnSpawnActor)
		.def("eventinitialize", &UPopulationAspect::eventinitialize)
		;
	py::class_< UPopulationBodyTag, UAudioDevice >(m, "UPopulationBodyTag")
		.def_static("StaticClass", &UPopulationBodyTag::StaticClass, py::return_value_policy::reference)
		;
	py::class_< APopulationEncounter, UAudioDevice >(m, "APopulationEncounter")
		.def_static("StaticClass", &APopulationEncounter::StaticClass, py::return_value_policy::reference)
		.def_property("IsEnabled", [](APopulationEncounter &self){return self.IsEnabled;}, [](APopulationEncounter &self, bool value){self.IsEnabled = value ? 1 : 0;})
		.def_property("AutoEnableOpportunities", [](APopulationEncounter &self){return self.AutoEnableOpportunities;}, [](APopulationEncounter &self, bool value){self.AutoEnableOpportunities = value ? 1 : 0;})
		.def_property("bWaitingForNextWave", [](APopulationEncounter &self){return self.bWaitingForNextWave;}, [](APopulationEncounter &self, bool value){self.bWaitingForNextWave = value ? 1 : 0;})
		.def_property("bIsWaitingForRespawn", [](APopulationEncounter &self){return self.bIsWaitingForRespawn;}, [](APopulationEncounter &self, bool value){self.bIsWaitingForRespawn = value ? 1 : 0;})
		.def_readwrite("EncounterPopulationDef", &APopulationEncounter::EncounterPopulationDef, py::return_value_policy::reference)
		.def_readwrite("MemberOutposts", &APopulationEncounter::MemberOutposts, py::return_value_policy::reference)
		.def_readwrite("MemberOpportunities", &APopulationEncounter::MemberOpportunities, py::return_value_policy::reference)
		.def_readwrite("SpawnLimits", &APopulationEncounter::SpawnLimits, py::return_value_policy::reference)
		.def_readwrite("Waves", &APopulationEncounter::Waves, py::return_value_policy::reference)
		.def_readwrite("CurrentWave", &APopulationEncounter::CurrentWave)
		.def_readwrite("TimeToStartNextWave", &APopulationEncounter::TimeToStartNextWave)
		.def_readwrite("RespawnDelayStartTime", &APopulationEncounter::RespawnDelayStartTime)
		.def("eventTriggerKismetAllSpawnedEvent", &APopulationEncounter::eventTriggerKismetAllSpawnedEvent)
		.def("eventTriggerKismetDeathEvent", &APopulationEncounter::eventTriggerKismetDeathEvent)
		.def("OnToggle", &APopulationEncounter::OnToggle)
		.def("UpdateOpportunityEnabledStates", &APopulationEncounter::UpdateOpportunityEnabledStates)
		.def("UpdateKismetNotifications", &APopulationEncounter::UpdateKismetNotifications)
		;
	py::class_< UPopulationEncounterRenderingComponent, UAudioDevice >(m, "UPopulationEncounterRenderingComponent")
		.def_static("StaticClass", &UPopulationEncounterRenderingComponent::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UPopulationOpportunityCombatRenderingComponent, UAudioDevice >(m, "UPopulationOpportunityCombatRenderingComponent")
		.def_static("StaticClass", &UPopulationOpportunityCombatRenderingComponent::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UPopulationSpawnedActorTagDefinition, UAudioDevice >(m, "UPopulationSpawnedActorTagDefinition")
		.def_static("StaticClass", &UPopulationSpawnedActorTagDefinition::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UPopUpDebugBarGraph, UAudioDevice >(m, "UPopUpDebugBarGraph")
		.def_static("StaticClass", &UPopUpDebugBarGraph::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Columns", &UPopUpDebugBarGraph::Columns, py::return_value_policy::reference)
		.def_readwrite("TitleText", &UPopUpDebugBarGraph::TitleText, py::return_value_policy::reference)
		.def_readwrite("BaseLineColor", &UPopUpDebugBarGraph::BaseLineColor, py::return_value_policy::reference)
		.def_readwrite("TitleTextColor", &UPopUpDebugBarGraph::TitleTextColor, py::return_value_policy::reference)
		.def_readwrite("ColumnWidth", &UPopUpDebugBarGraph::ColumnWidth)
		.def_readwrite("ColumnPadding", &UPopUpDebugBarGraph::ColumnPadding)
		.def_readwrite("ColumnMaxHeight", &UPopUpDebugBarGraph::ColumnMaxHeight)
		.def_readwrite("TextScale", &UPopUpDebugBarGraph::TextScale)
		.def_readwrite("TextPadding", &UPopUpDebugBarGraph::TextPadding)
		.def_readwrite("TitleTextScale", &UPopUpDebugBarGraph::TitleTextScale)
		.def_readwrite("TitleTextPaddingY", &UPopUpDebugBarGraph::TitleTextPaddingY)
		.def_readwrite("ColumnValueTextOffsetY", &UPopUpDebugBarGraph::ColumnValueTextOffsetY)
		.def("Display", &UPopUpDebugBarGraph::Display)
		.def("GetValue", &UPopUpDebugBarGraph::GetValue)
		.def("SetValue", &UPopUpDebugBarGraph::SetValue)
		.def("AddNewColumn", &UPopUpDebugBarGraph::AddNewColumn)
		.def("AddTitleText", &UPopUpDebugBarGraph::AddTitleText)
		;
	py::class_< URandomAttributeValueResolver, UAudioDevice >(m, "URandomAttributeValueResolver")
		.def_static("StaticClass", &URandomAttributeValueResolver::StaticClass, py::return_value_policy::reference)
		.def_property("bUseIntegerRandomization", [](URandomAttributeValueResolver &self){return self.bUseIntegerRandomization;}, [](URandomAttributeValueResolver &self, bool value){self.bUseIntegerRandomization = value ? 1 : 0;})
		.def_readwrite("LowerBound", &URandomAttributeValueResolver::LowerBound, py::return_value_policy::reference)
		.def_readwrite("UpperBound", &URandomAttributeValueResolver::UpperBound, py::return_value_policy::reference)
		.def_readwrite("ValueLifetime", &URandomAttributeValueResolver::ValueLifetime, py::return_value_policy::reference)
		.def_readwrite("SavedRandomValues", &URandomAttributeValueResolver::SavedRandomValues, py::return_value_policy::reference)
		;
	py::class_< URegionDefinition, UAudioDevice >(m, "URegionDefinition")
		.def_static("StaticClass", &URegionDefinition::StaticClass, py::return_value_policy::reference)
		.def("GetDefaultRegionGameStage", &URegionDefinition::GetDefaultRegionGameStage)
		.def("TestRegionGameStage", &URegionDefinition::TestRegionGameStage)
		.def("GetRegionGameStage", &URegionDefinition::GetRegionGameStage)
		;
	py::class_< URootMotionDefinition, UAudioDevice >(m, "URootMotionDefinition")
		.def_static("StaticClass", &URootMotionDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("RootMotionMode", &URootMotionDefinition::RootMotionMode)
		.def_readwrite("RootBoneOption[0x3]", &URootMotionDefinition::RootBoneOption[0x3])
		.def_readwrite("RootRotationMode", &URootMotionDefinition::RootRotationMode)
		.def_readwrite("RootRotationOption[0x3]", &URootMotionDefinition::RootRotationOption[0x3])
		;
	py::class_< URuleEngineLoadBalanceManager, UAudioDevice >(m, "URuleEngineLoadBalanceManager")
		.def_static("StaticClass", &URuleEngineLoadBalanceManager::StaticClass, py::return_value_policy::reference)
		.def_property("bIsDebugging", [](URuleEngineLoadBalanceManager &self){return self.bIsDebugging;}, [](URuleEngineLoadBalanceManager &self, bool value){self.bIsDebugging = value ? 1 : 0;})
		.def_readwrite("NumTimeSpentThisFrame", &URuleEngineLoadBalanceManager::NumTimeSpentThisFrame)
		.def_readwrite("LastTimeFullUpdate", &URuleEngineLoadBalanceManager::LastTimeFullUpdate)
		.def_readwrite("WaitingEngines", &URuleEngineLoadBalanceManager::WaitingEngines, py::return_value_policy::reference)
		.def_readwrite("DebugEngines", &URuleEngineLoadBalanceManager::DebugEngines, py::return_value_policy::reference)
		.def_readwrite("ManagerStats", &URuleEngineLoadBalanceManager::ManagerStats, py::return_value_policy::reference)
		.def_readwrite("MSPosition", &URuleEngineLoadBalanceManager::MSPosition)
		.def("SetAsDebugging", &URuleEngineLoadBalanceManager::SetAsDebugging)
		;
	py::class_< UScreenSpaceManager, UAudioDevice >(m, "UScreenSpaceManager")
		.def_static("StaticClass", &UScreenSpaceManager::StaticClass, py::return_value_policy::reference)
		.def_property("bMatricesUpToDate", [](UScreenSpaceManager &self){return self.bMatricesUpToDate;}, [](UScreenSpaceManager &self, bool value){self.bMatricesUpToDate = value ? 1 : 0;})
		.def_readwrite("pLocalPlayer", &UScreenSpaceManager::pLocalPlayer, py::return_value_policy::reference)
		.def_readwrite("ViewWidth", &UScreenSpaceManager::ViewWidth)
		.def_readwrite("ViewHeight", &UScreenSpaceManager::ViewHeight)
		.def_readwrite("UnknownData00[0x8]", &UScreenSpaceManager::UnknownData00[0x8])
		.def_readwrite("ViewProjectionMatrix", &UScreenSpaceManager::ViewProjectionMatrix, py::return_value_policy::reference)
		;
	py::class_< USeqAct_AllPlayersInVolume, UAudioDevice >(m, "USeqAct_AllPlayersInVolume")
		.def_static("StaticClass", &USeqAct_AllPlayersInVolume::StaticClass, py::return_value_policy::reference)
		.def_property("bAllActorsInVolumes", [](USeqAct_AllPlayersInVolume &self){return self.bAllActorsInVolumes;}, [](USeqAct_AllPlayersInVolume &self, bool value){self.bAllActorsInVolumes = value ? 1 : 0;})
		.def_property("bCheckForAllPlayers", [](USeqAct_AllPlayersInVolume &self){return self.bCheckForAllPlayers;}, [](USeqAct_AllPlayersInVolume &self, bool value){self.bCheckForAllPlayers = value ? 1 : 0;})
		.def_readwrite("Volumes", &USeqAct_AllPlayersInVolume::Volumes, py::return_value_policy::reference)
		.def("AllPlayersInVolumes", &USeqAct_AllPlayersInVolume::AllPlayersInVolumes)
		.def("PlayerIsInAVolume", &USeqAct_AllPlayersInVolume::PlayerIsInAVolume)
		;
	py::class_< USeqCond_CompareLocation, UAudioDevice >(m, "USeqCond_CompareLocation")
		.def_static("StaticClass", &USeqCond_CompareLocation::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CheckRadius", &USeqCond_CompareLocation::CheckRadius)
		;
	py::class_< USeqCond_CompareString, UAudioDevice >(m, "USeqCond_CompareString")
		.def_static("StaticClass", &USeqCond_CompareString::StaticClass, py::return_value_policy::reference)
		.def_property("bCaseSensitive", [](USeqCond_CompareString &self){return self.bCaseSensitive;}, [](USeqCond_CompareString &self, bool value){self.bCaseSensitive = value ? 1 : 0;})
		;
	py::class_< USeqCond_GetLanguage, UAudioDevice >(m, "USeqCond_GetLanguage")
		.def_static("StaticClass", &USeqCond_GetLanguage::StaticClass, py::return_value_policy::reference)
		.def_readwrite("LangList", &USeqCond_GetLanguage::LangList, py::return_value_policy::reference)
		;
	py::class_< USimpleMathValueResolver, UAudioDevice >(m, "USimpleMathValueResolver")
		.def_static("StaticClass", &USimpleMathValueResolver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Arg1Option", &USimpleMathValueResolver::Arg1Option)
		.def_readwrite("Operand", &USimpleMathValueResolver::Operand)
		.def_readwrite("Arg1Attribute", &USimpleMathValueResolver::Arg1Attribute, py::return_value_policy::reference)
		.def_readwrite("Argument", &USimpleMathValueResolver::Argument, py::return_value_policy::reference)
		;
	py::class_< USpecialMoveComponent, UAudioDevice >(m, "USpecialMoveComponent")
		.def_static("StaticClass", &USpecialMoveComponent::StaticClass, py::return_value_policy::reference)
		.def_property("bLocalPlay", [](USpecialMoveComponent &self){return self.bLocalPlay;}, [](USpecialMoveComponent &self, bool value){self.bLocalPlay = value ? 1 : 0;})
		.def_readwrite("StartTime", &USpecialMoveComponent::StartTime)
		.def_readwrite("SMI", &USpecialMoveComponent::SMI, py::return_value_policy::reference)
		.def_readwrite("UnknownData00[0x4]", &USpecialMoveComponent::UnknownData00[0x4])
		.def_readwrite("CurrentSMData", &USpecialMoveComponent::CurrentSMData, py::return_value_policy::reference)
		.def_readwrite("SMDQueue", &USpecialMoveComponent::SMDQueue, py::return_value_policy::reference)
		.def_readwrite("SMBlendNode", &USpecialMoveComponent::SMBlendNode, py::return_value_policy::reference)
		.def("IsOwnerAlwaysNetRelevant", &USpecialMoveComponent::IsOwnerAlwaysNetRelevant)
		.def("CanPlayBehaviorData", &USpecialMoveComponent::CanPlayBehaviorData)
		.def("RunBehaviors", &USpecialMoveComponent::RunBehaviors)
		.def("GetCurrent", &USpecialMoveComponent::GetCurrent, py::return_value_policy::reference)
		.def("GetPlayRateScale", &USpecialMoveComponent::GetPlayRateScale)
		.def("GetDuration", &USpecialMoveComponent::GetDuration)
		.def("GetData", &USpecialMoveComponent::GetData, py::return_value_policy::reference)
		.def("LocalAnimFinished", &USpecialMoveComponent::LocalAnimFinished)
		.def("ClearQueue", &USpecialMoveComponent::ClearQueue)
		.def("StopAnyLocal", &USpecialMoveComponent::StopAnyLocal)
		.def("StopLocal", &USpecialMoveComponent::StopLocal)
		.def("StopAny", &USpecialMoveComponent::StopAny)
		.def("Stop", &USpecialMoveComponent::Stop)
		.def("PlayLocal", &USpecialMoveComponent::PlayLocal)
		.def("Queue", &USpecialMoveComponent::Queue)
		.def("Play", &USpecialMoveComponent::Play)
		.def("RemoveFromQueue", &USpecialMoveComponent::RemoveFromQueue)
		.def("IsQueued", &USpecialMoveComponent::IsQueued)
		.def("IsPlayingClass", &USpecialMoveComponent::IsPlayingClass)
		.def("IsPlayingAny", &USpecialMoveComponent::IsPlayingAny)
		.def("IsPlaying", &USpecialMoveComponent::IsPlaying)
		.def("GetAnimDelta", &USpecialMoveComponent::GetAnimDelta, py::return_value_policy::reference)
		.def("GetSMNode", &USpecialMoveComponent::GetSMNode, py::return_value_policy::reference)
		.def("PlayReplicated", &USpecialMoveComponent::PlayReplicated)
		.def("GetAnimLength", &USpecialMoveComponent::GetAnimLength)
		;
	py::class_< USpecialMoveDefinition, UAudioDevice >(m, "USpecialMoveDefinition")
		.def_static("StaticClass", &USpecialMoveDefinition::StaticClass, py::return_value_policy::reference)
		.def_property("bOwnerAlwaysRelevant", [](USpecialMoveDefinition &self){return self.bOwnerAlwaysRelevant;}, [](USpecialMoveDefinition &self, bool value){self.bOwnerAlwaysRelevant = value ? 1 : 0;})
		.def_property("bClientHasAuthority", [](USpecialMoveDefinition &self){return self.bClientHasAuthority;}, [](USpecialMoveDefinition &self, bool value){self.bClientHasAuthority = value ? 1 : 0;})
		.def_readwrite("NextSpecialMove", &USpecialMoveDefinition::NextSpecialMove, py::return_value_policy::reference)
		.def_readwrite("StopExpression", &USpecialMoveDefinition::StopExpression, py::return_value_policy::reference)
		.def("eventIsPlayingLocally", &USpecialMoveDefinition::eventIsPlayingLocally)
		.def("GetSMDToPlay", &USpecialMoveDefinition::GetSMDToPlay, py::return_value_policy::reference)
		.def("Contains", &USpecialMoveDefinition::Contains)
		.def("eventClientFinished", &USpecialMoveDefinition::eventClientFinished)
		.def("eventServerFinished", &USpecialMoveDefinition::eventServerFinished)
		.def("eventClientStarted", &USpecialMoveDefinition::eventClientStarted)
		.def("eventServerStarted", &USpecialMoveDefinition::eventServerStarted)
		.def("IsLocalAuthority", &USpecialMoveDefinition::IsLocalAuthority)
		.def("eventAuthorityCanPlay", &USpecialMoveDefinition::eventAuthorityCanPlay)
		;
	py::class_< USpecialMoveExpressionList, UAudioDevice >(m, "USpecialMoveExpressionList")
		.def_static("StaticClass", &USpecialMoveExpressionList::StaticClass, py::return_value_policy::reference)
		.def_readwrite("SpecialMoveList", &USpecialMoveExpressionList::SpecialMoveList, py::return_value_policy::reference)
		.def("Contains", &USpecialMoveExpressionList::Contains)
		.def("GetSMDToPlay", &USpecialMoveExpressionList::GetSMDToPlay, py::return_value_policy::reference)
		;
	py::class_< USpecialMoveRandom, UAudioDevice >(m, "USpecialMoveRandom")
		.def_static("StaticClass", &USpecialMoveRandom::StaticClass, py::return_value_policy::reference)
		.def_readwrite("RandomList", &USpecialMoveRandom::RandomList, py::return_value_policy::reference)
		.def("Contains", &USpecialMoveRandom::Contains)
		.def("GetSMDToPlay", &USpecialMoveRandom::GetSMDToPlay, py::return_value_policy::reference)
		;
	py::class_< USpecialMoveInterface, UAudioDevice >(m, "USpecialMoveInterface")
		.def_static("StaticClass", &USpecialMoveInterface::StaticClass, py::return_value_policy::reference)
		.def("SetReplicatedSMData", &USpecialMoveInterface::SetReplicatedSMData)
		.def("eventServerSpecialMove_StopAny", &USpecialMoveInterface::eventServerSpecialMove_StopAny)
		.def("eventServerSpecialMove_Stop", &USpecialMoveInterface::eventServerSpecialMove_Stop)
		.def("eventServerSpecialMove_Queue", &USpecialMoveInterface::eventServerSpecialMove_Queue)
		.def("eventServerSpecialMove_Play", &USpecialMoveInterface::eventServerSpecialMove_Play)
		.def("GetDefaultRootMotionRotationMode", &USpecialMoveInterface::GetDefaultRootMotionRotationMode)
		.def("GetDefaultRootMotionMode", &USpecialMoveInterface::GetDefaultRootMotionMode)
		.def("GetSkelMesh", &USpecialMoveInterface::GetSkelMesh, py::return_value_policy::reference)
		.def("GetSMComponent", &USpecialMoveInterface::GetSMComponent, py::return_value_policy::reference)
		.def("GetActor", &USpecialMoveInterface::GetActor, py::return_value_policy::reference)
		;
	py::class_< UStateAttributeResolver, UAudioDevice >(m, "UStateAttributeResolver")
		.def_static("StaticClass", &UStateAttributeResolver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("NameKey", &UStateAttributeResolver::NameKey, py::return_value_policy::reference)
		;
	py::class_< UTimeValueResolver, UAudioDevice >(m, "UTimeValueResolver")
		.def_static("StaticClass", &UTimeValueResolver::StaticClass, py::return_value_policy::reference)
		.def_property("bNormalizeTime", [](UTimeValueResolver &self){return self.bNormalizeTime;}, [](UTimeValueResolver &self, bool value){self.bNormalizeTime = value ? 1 : 0;})
		.def_readwrite("TimeMode", &UTimeValueResolver::TimeMode)
		.def_readwrite("StartTime", &UTimeValueResolver::StartTime, py::return_value_policy::reference)
		.def_readwrite("TotalTime", &UTimeValueResolver::TotalTime, py::return_value_policy::reference)
		;
	py::class_< AWireManager, UAudioDevice >(m, "AWireManager")
		.def_static("StaticClass", &AWireManager::StaticClass, py::return_value_policy::reference)
		.def_readwrite("DefaultMaterial", &AWireManager::DefaultMaterial, py::return_value_policy::reference)
		;
	py::class_< AWireTerminal, UAudioDevice >(m, "AWireTerminal")
		.def_static("StaticClass", &AWireTerminal::StaticClass, py::return_value_policy::reference)
		.def_property("bTerminalDirty", [](AWireTerminal &self){return self.bTerminalDirty;}, [](AWireTerminal &self, bool value){self.bTerminalDirty = value ? 1 : 0;})
		.def_readwrite("NextTerminal", &AWireTerminal::NextTerminal, py::return_value_policy::reference)
		.def_readwrite("Linkages", &AWireTerminal::Linkages, py::return_value_policy::reference)
		.def_readwrite("WireMaterial", &AWireTerminal::WireMaterial, py::return_value_policy::reference)
		.def("eventDestroyed", &AWireTerminal::eventDestroyed)
		.def("NotifyModifiedTerminal", &AWireTerminal::NotifyModifiedTerminal)
		;
	py::class_< AWiringActor, UAudioDevice >(m, "AWiringActor")
		.def_static("StaticClass", &AWiringActor::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UWiringMesh, UAudioDevice >(m, "UWiringMesh")
		.def_static("StaticClass", &UWiringMesh::StaticClass, py::return_value_policy::reference)
		.def_readwrite("UnknownData00[0x240]", &UWiringMesh::UnknownData00[0x240])
		;
	py::class_< UActionResource, UAudioDevice >(m, "UActionResource")
		.def_static("StaticClass", &UActionResource::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UActionSequence, UAudioDevice >(m, "UActionSequence")
		.def_static("StaticClass", &UActionSequence::StaticClass, py::return_value_policy::reference)
		.def_property("bInitialized", [](UActionSequence &self){return self.bInitialized;}, [](UActionSequence &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_property("bDoWorkFinished", [](UActionSequence &self){return self.bDoWorkFinished;}, [](UActionSequence &self, bool value){self.bDoWorkFinished = value ? 1 : 0;})
		.def_property("bInAtomicSection", [](UActionSequence &self){return self.bInAtomicSection;}, [](UActionSequence &self, bool value){self.bInAtomicSection = value ? 1 : 0;})
		.def_property("bDoNotLoadBalance", [](UActionSequence &self){return self.bDoNotLoadBalance;}, [](UActionSequence &self, bool value){self.bDoNotLoadBalance = value ? 1 : 0;})
		.def_readwrite("ResourcesUsed", &UActionSequence::ResourcesUsed, py::return_value_policy::reference)
		.def_readwrite("MyRuleEngine", &UActionSequence::MyRuleEngine, py::return_value_policy::reference)
		.def_readwrite("AttachedRule", &UActionSequence::AttachedRule, py::return_value_policy::reference)
		.def_readwrite("LatentFloat", &UActionSequence::LatentFloat)
		.def_readwrite("ParentSequence", &UActionSequence::ParentSequence, py::return_value_policy::reference)
		.def_readwrite("ChildSequence", &UActionSequence::ChildSequence, py::return_value_policy::reference)
		.def_readwrite("TheAIFactory", &UActionSequence::TheAIFactory, py::return_value_policy::reference)
		.def_readwrite("ContextMenu", &UActionSequence::ContextMenu, py::return_value_policy::reference)
		.def_readwrite("StoredDeltaTime", &UActionSequence::StoredDeltaTime)
		.def_readwrite("FlagValuesToSetOnBegin", &UActionSequence::FlagValuesToSetOnBegin, py::return_value_policy::reference)
		.def_readwrite("FlagValuesToSetOnEnd", &UActionSequence::FlagValuesToSetOnEnd, py::return_value_policy::reference)
		.def_readwrite("AI", &UActionSequence::AI, py::return_value_policy::reference)
		.def_readwrite("UnknownData00[0x4]", &UActionSequence::UnknownData00[0x4])
		.def_readwrite("BehaviorOutputs", &UActionSequence::BehaviorOutputs, py::return_value_policy::reference)
		.def_readwrite("BehaviorName", &UActionSequence::BehaviorName, py::return_value_policy::reference)
		.def("TriggerBehavior", &UActionSequence::TriggerBehavior)
		.def("GetRangeValue", &UActionSequence::GetRangeValue)
		.def("RangeIsValid", &UActionSequence::RangeIsValid)
		.def("Finish", &UActionSequence::Finish)
		.def("IsRunning", &UActionSequence::IsRunning)
		.def("eventScriptCleanUp", &UActionSequence::eventScriptCleanUp)
		.def("eventCanRun", &UActionSequence::eventCanRun, py::return_value_policy::reference)
		.def("eventActivateEvent", &UActionSequence::eventActivateEvent)
		.def("eventUpdate", &UActionSequence::eventUpdate)
		.def("eventInit", &UActionSequence::eventInit)
		.def("eventStop", &UActionSequence::eventStop)
		.def("eventStart", &UActionSequence::eventStart)
		.def("eventInterruptSequence", &UActionSequence::eventInterruptSequence)
		.def("eventStopSequence", &UActionSequence::eventStopSequence)
		.def("eventStartSequence", &UActionSequence::eventStartSequence)
		.def("ExecuteSequence", &UActionSequence::ExecuteSequence)
		.def("Sleep", &UActionSequence::Sleep)
		.def("RunSubSequence", &UActionSequence::RunSubSequence)
		.def("InterruptLatentAction", &UActionSequence::InterruptLatentAction)
		.def("DoRuleSetPop", &UActionSequence::DoRuleSetPop)
		.def("DoRuleSetPush", &UActionSequence::DoRuleSetPush)
		.def("DoRuleSetSwitch", &UActionSequence::DoRuleSetSwitch)
		.def("PreventNewRulesFromStarting", &UActionSequence::PreventNewRulesFromStarting)
		.def("GetRuleNative", &UActionSequence::GetRuleNative, py::return_value_policy::reference)
		.def("GetActionSequence", &UActionSequence::GetActionSequence)
		.def("IsInLabel", &UActionSequence::IsInLabel)
		.def("IsAtomic", &UActionSequence::IsAtomic)
		.def("StopAtomic", &UActionSequence::StopAtomic)
		.def("StartAtomic", &UActionSequence::StartAtomic)
		.def("IsActionReadyToFinish", &UActionSequence::IsActionReadyToFinish)
		;
	py::class_< UActionSequenceList, UAudioDevice >(m, "UActionSequenceList")
		.def_static("StaticClass", &UActionSequenceList::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CurrentIndex", &UActionSequenceList::CurrentIndex)
		.def("IsActionReadyToFinish", &UActionSequenceList::IsActionReadyToFinish)
		;
	py::class_< UActionSequencePawn, UAudioDevice >(m, "UActionSequencePawn")
		.def_static("StaticClass", &UActionSequencePawn::StaticClass, py::return_value_policy::reference)
		.def_readwrite("MyGearboxMind", &UActionSequencePawn::MyGearboxMind, py::return_value_policy::reference)
		.def_readwrite("MyGearboxPawn", &UActionSequencePawn::MyGearboxPawn, py::return_value_policy::reference)
		;
	py::class_< UAction_PawnMovementBase, UAudioDevice >(m, "UAction_PawnMovementBase")
		.def_static("StaticClass", &UAction_PawnMovementBase::StaticClass, py::return_value_policy::reference)
		.def_property("ShouldRepeatNavSearch", [](UAction_PawnMovementBase &self){return self.ShouldRepeatNavSearch;}, [](UAction_PawnMovementBase &self, bool value){self.ShouldRepeatNavSearch = value ? 1 : 0;})
		.def_property("Interrupted", [](UAction_PawnMovementBase &self){return self.Interrupted;}, [](UAction_PawnMovementBase &self, bool value){self.Interrupted = value ? 1 : 0;})
		.def_property("GoToCover", [](UAction_PawnMovementBase &self){return self.GoToCover;}, [](UAction_PawnMovementBase &self, bool value){self.GoToCover = value ? 1 : 0;})
		.def_property("UsePreciseArrival", [](UAction_PawnMovementBase &self){return self.UsePreciseArrival;}, [](UAction_PawnMovementBase &self, bool value){self.UsePreciseArrival = value ? 1 : 0;})
		.def_readwrite("CachedSearchOrigin", &UAction_PawnMovementBase::CachedSearchOrigin, py::return_value_policy::reference)
		.def_readwrite("CoverCheckThrottle", &UAction_PawnMovementBase::CoverCheckThrottle, py::return_value_policy::reference)
		.def_readwrite("CoverCheckThrottleInterval", &UAction_PawnMovementBase::CoverCheckThrottleInterval)
		.def_readwrite("NewGoalLocation", &UAction_PawnMovementBase::NewGoalLocation, py::return_value_policy::reference)
		.def_readwrite("OneMoveRequest", &UAction_PawnMovementBase::OneMoveRequest, py::return_value_policy::reference)
		.def_readwrite("MoveRequestClass", &UAction_PawnMovementBase::MoveRequestClass, py::return_value_policy::reference)
		.def_readwrite("AttributesToEvaluate", &UAction_PawnMovementBase::AttributesToEvaluate, py::return_value_policy::reference)
		.def_readwrite("AttributeEvalStyle", &UAction_PawnMovementBase::AttributeEvalStyle)
		.def_readwrite("SearchRandomness", &UAction_PawnMovementBase::SearchRandomness)
		.def_readwrite("CoverSearchFilter", &UAction_PawnMovementBase::CoverSearchFilter)
		.def_readwrite("CoverFailureResponse", &UAction_PawnMovementBase::CoverFailureResponse)
		.def_readwrite("RepathOption", &UAction_PawnMovementBase::RepathOption)
		.def_readwrite("SearchOrigin", &UAction_PawnMovementBase::SearchOrigin, py::return_value_policy::reference)
		.def_readwrite("DirectionFromOrigin", &UAction_PawnMovementBase::DirectionFromOrigin, py::return_value_policy::reference)
		.def_readwrite("DirectionCone", &UAction_PawnMovementBase::DirectionCone)
		.def_readwrite("LocationFilterTest", &UAction_PawnMovementBase::LocationFilterTest, py::return_value_policy::reference)
		.def_readwrite("MinDistanceFromOrigin", &UAction_PawnMovementBase::MinDistanceFromOrigin, py::return_value_policy::reference)
		.def_readwrite("MaxDistanceFromOrigin", &UAction_PawnMovementBase::MaxDistanceFromOrigin, py::return_value_policy::reference)
		.def_readwrite("OverrideDistanceForCover", &UAction_PawnMovementBase::OverrideDistanceForCover, py::return_value_policy::reference)
		.def_readwrite("RepathDistanceThresh", &UAction_PawnMovementBase::RepathDistanceThresh, py::return_value_policy::reference)
		.def_readwrite("FailureEvent", &UAction_PawnMovementBase::FailureEvent, py::return_value_policy::reference)
		.def("eventPostMovement", &UAction_PawnMovementBase::eventPostMovement)
		.def("eventPreMovement", &UAction_PawnMovementBase::eventPreMovement)
		.def("eventPrePathFind", &UAction_PawnMovementBase::eventPrePathFind)
		.def("eventInterruptSequence", &UAction_PawnMovementBase::eventInterruptSequence)
		.def("eventStopSequence", &UAction_PawnMovementBase::eventStopSequence)
		.def("eventStartSequence", &UAction_PawnMovementBase::eventStartSequence)
		.def("MovePawnToDestinationLocation", &UAction_PawnMovementBase::MovePawnToDestinationLocation)
		.def("TakeDebugSnapshotMoveFailure", &UAction_PawnMovementBase::TakeDebugSnapshotMoveFailure)
		.def("SetMaxMovementSpeed", &UAction_PawnMovementBase::SetMaxMovementSpeed)
		.def("EndMovePawnToDestinationLocation", &UAction_PawnMovementBase::EndMovePawnToDestinationLocation)
		;
	py::class_< UActionSequenceRandom, UAudioDevice >(m, "UActionSequenceRandom")
		.def_static("StaticClass", &UActionSequenceRandom::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ActionList", &UActionSequenceRandom::ActionList, py::return_value_policy::reference)
		.def("EvaluateActionList", &UActionSequenceRandom::EvaluateActionList)
		.def("OverrideNextSequenceToRun", &UActionSequenceRandom::OverrideNextSequenceToRun)
		.def("GetRandomAction", &UActionSequenceRandom::GetRandomAction, py::return_value_policy::reference)
		;
	py::class_< UAIComponent, UAudioDevice >(m, "UAIComponent")
		.def_static("StaticClass", &UAIComponent::StaticClass, py::return_value_policy::reference)
		.def_property("bInitialized", [](UAIComponent &self){return self.bInitialized;}, [](UAIComponent &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_readwrite("UpdateRate", &UAIComponent::UpdateRate)
		.def_readwrite("AI", &UAIComponent::AI, py::return_value_policy::reference)
		.def_readwrite("UnknownData00[0x4]", &UAIComponent::UnknownData00[0x4])
		.def_readwrite("AIDef", &UAIComponent::AIDef, py::return_value_policy::reference)
		.def_readwrite("LastStateUpdateTime", &UAIComponent::LastStateUpdateTime)
		.def_readwrite("CurrentState", &UAIComponent::CurrentState, py::return_value_policy::reference)
		.def_readwrite("ResourceData", &UAIComponent::ResourceData, py::return_value_policy::reference)
		.def_readwrite("CurrentTarget", &UAIComponent::CurrentTarget, py::return_value_policy::reference)
		.def_readwrite("ScriptedTarget", &UAIComponent::ScriptedTarget, py::return_value_policy::reference)
		.def_readwrite("LastTargetUpdateTime", &UAIComponent::LastTargetUpdateTime)
		.def_readwrite("Targets", &UAIComponent::Targets, py::return_value_policy::reference)
		.def_readwrite("TargetingDef", &UAIComponent::TargetingDef, py::return_value_policy::reference)
		.def_readwrite("MindTargetInfoClass", &UAIComponent::MindTargetInfoClass, py::return_value_policy::reference)
		.def_readwrite("Holds", &UAIComponent::Holds, py::return_value_policy::reference)
		.def_readwrite("TargetHolds", &UAIComponent::TargetHolds, py::return_value_policy::reference)
		.def_readwrite("MovementHolds", &UAIComponent::MovementHolds, py::return_value_policy::reference)
		.def_readwrite("DemigodHolds", &UAIComponent::DemigodHolds, py::return_value_policy::reference)
		.def_readwrite("GodHolds", &UAIComponent::GodHolds, py::return_value_policy::reference)
		.def_readwrite("DialogHolds", &UAIComponent::DialogHolds, py::return_value_policy::reference)
		.def("GetAIRangeTime", &UAIComponent::GetAIRangeTime)
		.def("DrawAITree", &UAIComponent::DrawAITree)
		.def("LogDemigodHolds", &UAIComponent::LogDemigodHolds)
		.def("ReleaseDialog", &UAIComponent::ReleaseDialog)
		.def("HoldDialog", &UAIComponent::HoldDialog)
		.def("DialogOnHold", &UAIComponent::DialogOnHold)
		.def("ReleaseGod", &UAIComponent::ReleaseGod)
		.def("HoldGod", &UAIComponent::HoldGod)
		.def("GodOnHold", &UAIComponent::GodOnHold)
		.def("ReleaseDemigod", &UAIComponent::ReleaseDemigod)
		.def("HoldDemigod", &UAIComponent::HoldDemigod)
		.def("DemigodOnHold", &UAIComponent::DemigodOnHold)
		.def("ReleaseMovement", &UAIComponent::ReleaseMovement)
		.def("HoldMovement", &UAIComponent::HoldMovement)
		.def("MovementOnHold", &UAIComponent::MovementOnHold)
		.def("ReleaseTarget", &UAIComponent::ReleaseTarget)
		.def("HoldTarget", &UAIComponent::HoldTarget)
		.def("TargetOnHold", &UAIComponent::TargetOnHold)
		.def("Release", &UAIComponent::Release)
		.def("Hold", &UAIComponent::Hold)
		.def("OnHold", &UAIComponent::OnHold)
		.def("ForceUpdateTargets", &UAIComponent::ForceUpdateTargets)
		.def("TargetChanged", &UAIComponent::TargetChanged)
		.def("SetTarget", &UAIComponent::SetTarget)
		.def("SetScriptedTarget", &UAIComponent::SetScriptedTarget)
		.def("GetTargetRecordFor", &UAIComponent::GetTargetRecordFor, py::return_value_policy::reference)
		.def("GetTargetRecord", &UAIComponent::GetTargetRecord, py::return_value_policy::reference)
		.def("IsTarget", &UAIComponent::IsTarget)
		.def("GetTarget", &UAIComponent::GetTarget, py::return_value_policy::reference)
		.def("HasTarget", &UAIComponent::HasTarget)
		.def("ShouldRemoveTarget", &UAIComponent::ShouldRemoveTarget)
		.def("TargetRemoved", &UAIComponent::TargetRemoved)
		.def("ForceRemoveTarget", &UAIComponent::ForceRemoveTarget)
		.def("ValidCurrentTarget", &UAIComponent::ValidCurrentTarget)
		.def("ValidTarget", &UAIComponent::ValidTarget)
		.def("PrioritizeTarget", &UAIComponent::PrioritizeTarget)
		.def("CalcTargetInfo", &UAIComponent::CalcTargetInfo)
		.def("ChooseBestTarget", &UAIComponent::ChooseBestTarget)
		.def("InheritTargets", &UAIComponent::InheritTargets)
		.def("RemoveTargets", &UAIComponent::RemoveTargets)
		.def("FindTargets", &UAIComponent::FindTargets)
		.def("GetTargets", &UAIComponent::GetTargets)
		.def("InitializeTargetRecord", &UAIComponent::InitializeTargetRecord)
		.def("NotifyAttackedBy", &UAIComponent::NotifyAttackedBy)
		.def("AddTarget", &UAIComponent::AddTarget, py::return_value_policy::reference)
		.def("GetParentComponent", &UAIComponent::GetParentComponent, py::return_value_policy::reference)
		.def("GetAllegiance", &UAIComponent::GetAllegiance, py::return_value_policy::reference)
		.def("ClearState", &UAIComponent::ClearState)
		.def("ActivateEvent", &UAIComponent::ActivateEvent)
		;
	py::class_< UAICostExpressionEvaluator, UAudioDevice >(m, "UAICostExpressionEvaluator")
		.def_static("StaticClass", &UAICostExpressionEvaluator::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Multiplier", &UAICostExpressionEvaluator::Multiplier)
		.def_readwrite("PopDef", &UAICostExpressionEvaluator::PopDef, py::return_value_policy::reference)
		.def("Evaluate", &UAICostExpressionEvaluator::Evaluate)
		;
	py::class_< UAIFactoryBase, UAudioDevice >(m, "UAIFactoryBase")
		.def_static("StaticClass", &UAIFactoryBase::StaticClass, py::return_value_policy::reference)
		.def_readwrite("KnowledgeRecordList", &UAIFactoryBase::KnowledgeRecordList, py::return_value_policy::reference)
		.def_readwrite("RuleSets", &UAIFactoryBase::RuleSets, py::return_value_policy::reference)
		.def_readwrite("Rules", &UAIFactoryBase::Rules, py::return_value_policy::reference)
		.def_readwrite("ActionSequences", &UAIFactoryBase::ActionSequences, py::return_value_policy::reference)
		.def_readwrite("TargetRecords", &UAIFactoryBase::TargetRecords, py::return_value_policy::reference)
		.def_readwrite("AIDefinitionRecords", &UAIFactoryBase::AIDefinitionRecords, py::return_value_policy::reference)
		.def_readwrite("TimeStampedRecordLifetime", &UAIFactoryBase::TimeStampedRecordLifetime)
		.def("FlushPools", &UAIFactoryBase::FlushPools)
		.def("ReturnAIDef", &UAIFactoryBase::ReturnAIDef)
		.def("GetAIDef", &UAIFactoryBase::GetAIDef)
		.def("ReturnTargetRecord", &UAIFactoryBase::ReturnTargetRecord)
		.def("GetTargetRecord", &UAIFactoryBase::GetTargetRecord)
		.def("ReturnActionSequence", &UAIFactoryBase::ReturnActionSequence)
		.def("GetActionSequence", &UAIFactoryBase::GetActionSequence)
		.def("ReturnRuleSet", &UAIFactoryBase::ReturnRuleSet)
		.def("GetRuleSetFromArchetype", &UAIFactoryBase::GetRuleSetFromArchetype)
		.def("ReturnKnowledgeRecord", &UAIFactoryBase::ReturnKnowledgeRecord)
		.def("GetKnowledgeRecordListFromArchetypes", &UAIFactoryBase::GetKnowledgeRecordListFromArchetypes)
		.def("GetKnowledgeRecordFromArchetype", &UAIFactoryBase::GetKnowledgeRecordFromArchetype)
		.def("GetKnowledgeRecord", &UAIFactoryBase::GetKnowledgeRecord)
		.def("ReturnRule", &UAIFactoryBase::ReturnRule)
		.def("GetRuleFromArchetype", &UAIFactoryBase::GetRuleFromArchetype)
		.def("GetRule", &UAIFactoryBase::GetRule)
		.def("ReturnRuleEngine", &UAIFactoryBase::ReturnRuleEngine)
		;
	py::class_< UGearboxAIFactory, UAudioDevice >(m, "UGearboxAIFactory")
		.def_static("StaticClass", &UGearboxAIFactory::StaticClass, py::return_value_policy::reference)
		.def("FreeRuleEngine", &UGearboxAIFactory::FreeRuleEngine)
		.def("GetRuleEngineFromTemplate", &UGearboxAIFactory::GetRuleEngineFromTemplate)
		;
	py::class_< UAIResource, UAudioDevice >(m, "UAIResource")
		.def_static("StaticClass", &UAIResource::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ResourceRestrictions", &UAIResource::ResourceRestrictions, py::return_value_policy::reference)
		.def_readwrite("MaxUsers", &UAIResource::MaxUsers)
		.def_readwrite("MinUsers", &UAIResource::MinUsers)
		;
	py::class_< UAIResourceExpressionEvaluator, UAudioDevice >(m, "UAIResourceExpressionEvaluator")
		.def_static("StaticClass", &UAIResourceExpressionEvaluator::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Option", &UAIResourceExpressionEvaluator::Option)
		.def_readwrite("Resource", &UAIResourceExpressionEvaluator::Resource, py::return_value_policy::reference)
		.def("Evaluate", &UAIResourceExpressionEvaluator::Evaluate)
		;
	py::class_< UAllegianceExpressionEvaluator, UAudioDevice >(m, "UAllegianceExpressionEvaluator")
		.def_static("StaticClass", &UAllegianceExpressionEvaluator::StaticClass, py::return_value_policy::reference)
		.def_readwrite("AllegianceCheck", &UAllegianceExpressionEvaluator::AllegianceCheck)
		.def_readwrite("Allegiance", &UAllegianceExpressionEvaluator::Allegiance, py::return_value_policy::reference)
		.def("Evaluate", &UAllegianceExpressionEvaluator::Evaluate)
		;
	py::class_< UAwarenessZoneCollectionDefinition, UAudioDevice >(m, "UAwarenessZoneCollectionDefinition")
		.def_static("StaticClass", &UAwarenessZoneCollectionDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("DefaultAwarenessZones", &UAwarenessZoneCollectionDefinition::DefaultAwarenessZones, py::return_value_policy::reference)
		.def_readwrite("CollectionName", &UAwarenessZoneCollectionDefinition::CollectionName, py::return_value_policy::reference)
		;
	py::class_< UAwarenessZoneDefinition, UAudioDevice >(m, "UAwarenessZoneDefinition")
		.def_static("StaticClass", &UAwarenessZoneDefinition::StaticClass, py::return_value_policy::reference)
		.def_property("OuterRimInfinitelyFarAway", [](UAwarenessZoneDefinition &self){return self.OuterRimInfinitelyFarAway;}, [](UAwarenessZoneDefinition &self, bool value){self.OuterRimInfinitelyFarAway = value ? 1 : 0;})
		.def_property("ViewConeOnlyUsedForUnknownTargets", [](UAwarenessZoneDefinition &self){return self.ViewConeOnlyUsedForUnknownTargets;}, [](UAwarenessZoneDefinition &self, bool value){self.ViewConeOnlyUsedForUnknownTargets = value ? 1 : 0;})
		.def_property("NeverForgetHiddenThreats", [](UAwarenessZoneDefinition &self){return self.NeverForgetHiddenThreats;}, [](UAwarenessZoneDefinition &self, bool value){self.NeverForgetHiddenThreats = value ? 1 : 0;})
		.def_readwrite("ZoneName", &UAwarenessZoneDefinition::ZoneName, py::return_value_policy::reference)
		.def_readwrite("OuterRimDistance", &UAwarenessZoneDefinition::OuterRimDistance)
		.def_readwrite("ViewConeStyle", &UAwarenessZoneDefinition::ViewConeStyle)
		.def_readwrite("SpecialExposureBehavior", &UAwarenessZoneDefinition::SpecialExposureBehavior)
		.def_readwrite("HearingBehavior", &UAwarenessZoneDefinition::HearingBehavior)
		.def_readwrite("ViewConeFieldOfViewInDegrees", &UAwarenessZoneDefinition::ViewConeFieldOfViewInDegrees)
		.def_readwrite("MinExposureRatingConsideredVisible", &UAwarenessZoneDefinition::MinExposureRatingConsideredVisible)
		.def_readwrite("ForgetHiddenThreatsAfterXSeconds", &UAwarenessZoneDefinition::ForgetHiddenThreatsAfterXSeconds)
		.def_readwrite("TargetSelectionPriority", &UAwarenessZoneDefinition::TargetSelectionPriority)
		.def_readwrite("ZoneColor", &UAwarenessZoneDefinition::ZoneColor, py::return_value_policy::reference)
		.def_readwrite("TimeFiringAtLastKnownLocation", &UAwarenessZoneDefinition::TimeFiringAtLastKnownLocation)
		;
	py::class_< UBehavior_SendGbxMessage, UAudioDevice >(m, "UBehavior_SendGbxMessage")
		.def_static("StaticClass", &UBehavior_SendGbxMessage::StaticClass, py::return_value_policy::reference)
		.def_readwrite("MessageDefinition", &UBehavior_SendGbxMessage::MessageDefinition, py::return_value_policy::reference)
		.def_readwrite("AssignSenderTo", &UBehavior_SendGbxMessage::AssignSenderTo)
		.def_readwrite("AssignSubjectTo", &UBehavior_SendGbxMessage::AssignSubjectTo)
		.def_readwrite("TakeLocationFrom", &UBehavior_SendGbxMessage::TakeLocationFrom)
		.def_readwrite("MetaData", &UBehavior_SendGbxMessage::MetaData, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SendGbxMessage::ApplyBehaviorToContext)
		.def("GetLocation", &UBehavior_SendGbxMessage::GetLocation, py::return_value_policy::reference)
		.def("GetMessageParameter", &UBehavior_SendGbxMessage::GetMessageParameter, py::return_value_policy::reference)
		;
	py::class_< UBehavior_SetFlag, UAudioDevice >(m, "UBehavior_SetFlag")
		.def_static("StaticClass", &UBehavior_SetFlag::StaticClass, py::return_value_policy::reference)
		.def_readwrite("FlagsToSet", &UBehavior_SetFlag::FlagsToSet, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetFlag::ApplyBehaviorToContext)
		;
	py::class_< UBestTargetAttributeContextResolver, UAudioDevice >(m, "UBestTargetAttributeContextResolver")
		.def_static("StaticClass", &UBestTargetAttributeContextResolver::StaticClass, py::return_value_policy::reference)
		.def_property("bGetTargetInfo", [](UBestTargetAttributeContextResolver &self){return self.bGetTargetInfo;}, [](UBestTargetAttributeContextResolver &self, bool value){self.bGetTargetInfo = value ? 1 : 0;})
		;
	py::class_< UCharacterClassMessageDefinition, UAudioDevice >(m, "UCharacterClassMessageDefinition")
		.def_static("StaticClass", &UCharacterClassMessageDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("BehaviorTriggers", &UCharacterClassMessageDefinition::BehaviorTriggers, py::return_value_policy::reference)
		;
	py::class_< UCoverSearchCriteria, UAudioDevice >(m, "UCoverSearchCriteria")
		.def_static("StaticClass", &UCoverSearchCriteria::StaticClass, py::return_value_policy::reference)
		.def_property("DoDistanceToOriginCandidateTest", [](UCoverSearchCriteria &self){return self.DoDistanceToOriginCandidateTest;}, [](UCoverSearchCriteria &self, bool value){self.DoDistanceToOriginCandidateTest = value ? 1 : 0;})
		.def_property("DoProvidesCoverCandidateTest", [](UCoverSearchCriteria &self){return self.DoProvidesCoverCandidateTest;}, [](UCoverSearchCriteria &self, bool value){self.DoProvidesCoverCandidateTest = value ? 1 : 0;})
		.def_property("DoDistanceToThreatCandidateTest", [](UCoverSearchCriteria &self){return self.DoDistanceToThreatCandidateTest;}, [](UCoverSearchCriteria &self, bool value){self.DoDistanceToThreatCandidateTest = value ? 1 : 0;})
		.def_property("DoVantageToBestTargetCandidateTest", [](UCoverSearchCriteria &self){return self.DoVantageToBestTargetCandidateTest;}, [](UCoverSearchCriteria &self, bool value){self.DoVantageToBestTargetCandidateTest = value ? 1 : 0;})
		.def_property("DoVantageToAnyTargetCandidateTest", [](UCoverSearchCriteria &self){return self.DoVantageToAnyTargetCandidateTest;}, [](UCoverSearchCriteria &self, bool value){self.DoVantageToAnyTargetCandidateTest = value ? 1 : 0;})
		.def_property("DoAssignmentVolumeCandidateTest", [](UCoverSearchCriteria &self){return self.DoAssignmentVolumeCandidateTest;}, [](UCoverSearchCriteria &self, bool value){self.DoAssignmentVolumeCandidateTest = value ? 1 : 0;})
		.def_property("DoBlacklistedCoverCandidateTest", [](UCoverSearchCriteria &self){return self.DoBlacklistedCoverCandidateTest;}, [](UCoverSearchCriteria &self, bool value){self.DoBlacklistedCoverCandidateTest = value ? 1 : 0;})
		.def_property("DoScoringForDistanceToOrigin", [](UCoverSearchCriteria &self){return self.DoScoringForDistanceToOrigin;}, [](UCoverSearchCriteria &self, bool value){self.DoScoringForDistanceToOrigin = value ? 1 : 0;})
		.def_property("DoScoringForDistanceToThreat", [](UCoverSearchCriteria &self){return self.DoScoringForDistanceToThreat;}, [](UCoverSearchCriteria &self, bool value){self.DoScoringForDistanceToThreat = value ? 1 : 0;})
		.def_property("DoScoringForProvidesCover", [](UCoverSearchCriteria &self){return self.DoScoringForProvidesCover;}, [](UCoverSearchCriteria &self, bool value){self.DoScoringForProvidesCover = value ? 1 : 0;})
		.def_property("DoScoringForVantageOnBestTarget", [](UCoverSearchCriteria &self){return self.DoScoringForVantageOnBestTarget;}, [](UCoverSearchCriteria &self, bool value){self.DoScoringForVantageOnBestTarget = value ? 1 : 0;})
		.def_property("DoScoringForVantageOnAnyTarget", [](UCoverSearchCriteria &self){return self.DoScoringForVantageOnAnyTarget;}, [](UCoverSearchCriteria &self, bool value){self.DoScoringForVantageOnAnyTarget = value ? 1 : 0;})
		.def_property("DoScoringForUnoccupiedLink", [](UCoverSearchCriteria &self){return self.DoScoringForUnoccupiedLink;}, [](UCoverSearchCriteria &self, bool value){self.DoScoringForUnoccupiedLink = value ? 1 : 0;})
		.def_property("DoScoringForNonBlacklistedCover", [](UCoverSearchCriteria &self){return self.DoScoringForNonBlacklistedCover;}, [](UCoverSearchCriteria &self, bool value){self.DoScoringForNonBlacklistedCover = value ? 1 : 0;})
		.def_readwrite("DistanceToOriginCandidateTestMax", &UCoverSearchCriteria::DistanceToOriginCandidateTestMax)
		.def_readwrite("DistanceToThreatCandidateTest", &UCoverSearchCriteria::DistanceToThreatCandidateTest)
		.def_readwrite("MinDistanceToOrigin", &UCoverSearchCriteria::MinDistanceToOrigin)
		.def_readwrite("MaxDistanceToOrigin", &UCoverSearchCriteria::MaxDistanceToOrigin)
		.def_readwrite("ScoreDistanceToOrigin", &UCoverSearchCriteria::ScoreDistanceToOrigin)
		.def_readwrite("MinDistanceToThreat", &UCoverSearchCriteria::MinDistanceToThreat)
		.def_readwrite("MaxDistanceToThreat", &UCoverSearchCriteria::MaxDistanceToThreat)
		.def_readwrite("ScoreDistanceToThreat", &UCoverSearchCriteria::ScoreDistanceToThreat)
		.def_readwrite("MaxDistanceProvidesCover", &UCoverSearchCriteria::MaxDistanceProvidesCover)
		.def_readwrite("ScoreProvidesCover", &UCoverSearchCriteria::ScoreProvidesCover)
		.def_readwrite("ScoreVantageOnBestTarget", &UCoverSearchCriteria::ScoreVantageOnBestTarget)
		.def_readwrite("ScoreVantageOnAnyTarget", &UCoverSearchCriteria::ScoreVantageOnAnyTarget)
		.def_readwrite("ScoreUnoccupiedLink", &UCoverSearchCriteria::ScoreUnoccupiedLink)
		.def_readwrite("ScoreNonBlacklistedCover", &UCoverSearchCriteria::ScoreNonBlacklistedCover)
		;
	py::class_< UExposureUtilityBase, UAudioDevice >(m, "UExposureUtilityBase")
		.def_static("StaticClass", &UExposureUtilityBase::StaticClass, py::return_value_policy::reference)
		.def_property("ExposureEnabled", [](UExposureUtilityBase &self){return self.ExposureEnabled;}, [](UExposureUtilityBase &self, bool value){self.ExposureEnabled = value ? 1 : 0;})
		.def_readwrite("ExposureStrategy", &UExposureUtilityBase::ExposureStrategy, py::return_value_policy::reference)
		.def("CalculateVantageToPoint", &UExposureUtilityBase::CalculateVantageToPoint)
		.def("CalculateTargetExposure", &UExposureUtilityBase::CalculateTargetExposure)
		;
	py::class_< UExposureUtilityBasicCaching, UAudioDevice >(m, "UExposureUtilityBasicCaching")
		.def_static("StaticClass", &UExposureUtilityBasicCaching::StaticClass, py::return_value_policy::reference)
		.def_property("CachingEnabled", [](UExposureUtilityBasicCaching &self){return self.CachingEnabled;}, [](UExposureUtilityBasicCaching &self, bool value){self.CachingEnabled = value ? 1 : 0;})
		.def_readwrite("MaxCacheTime", &UExposureUtilityBasicCaching::MaxCacheTime)
		.def_readwrite("DistanceClose", &UExposureUtilityBasicCaching::DistanceClose)
		.def_readwrite("DistanceMed", &UExposureUtilityBasicCaching::DistanceMed)
		.def_readwrite("CacheFreshnessTimeClose", &UExposureUtilityBasicCaching::CacheFreshnessTimeClose)
		.def_readwrite("CacheFreshnessTimeMed", &UExposureUtilityBasicCaching::CacheFreshnessTimeMed)
		.def_readwrite("CacheFreshnessTimeFar", &UExposureUtilityBasicCaching::CacheFreshnessTimeFar)
		.def_readwrite("CacheFreshnessTimePlayer", &UExposureUtilityBasicCaching::CacheFreshnessTimePlayer)
		.def_readwrite("CacheTimeFudgeFactorClose", &UExposureUtilityBasicCaching::CacheTimeFudgeFactorClose)
		.def_readwrite("CacheTimeFudgeFactorMed", &UExposureUtilityBasicCaching::CacheTimeFudgeFactorMed)
		.def_readwrite("CacheTimeFudgeFactorFar", &UExposureUtilityBasicCaching::CacheTimeFudgeFactorFar)
		.def_readwrite("HasMovedDistThreshold", &UExposureUtilityBasicCaching::HasMovedDistThreshold)
		.def_readwrite("HasMovedDistThresholdPlayer", &UExposureUtilityBasicCaching::HasMovedDistThresholdPlayer)
		.def_readwrite("CachedExposures", &UExposureUtilityBasicCaching::CachedExposures, py::return_value_policy::reference)
		;
	py::class_< UExposureUtilityFixedCost, UAudioDevice >(m, "UExposureUtilityFixedCost")
		.def_static("StaticClass", &UExposureUtilityFixedCost::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CloseDistanceSquared", &UExposureUtilityFixedCost::CloseDistanceSquared)
		.def_readwrite("MedDistanceSquared", &UExposureUtilityFixedCost::MedDistanceSquared)
		.def_readwrite("MaxLineChecksPerFrame", &UExposureUtilityFixedCost::MaxLineChecksPerFrame)
		.def_readwrite("Buckets", &UExposureUtilityFixedCost::Buckets, py::return_value_policy::reference)
		.def_readwrite("MedAccumulatedTime", &UExposureUtilityFixedCost::MedAccumulatedTime)
		.def_readwrite("FarAccumulatedTime", &UExposureUtilityFixedCost::FarAccumulatedTime)
		.def_readwrite("SkipUpdateForTime", &UExposureUtilityFixedCost::SkipUpdateForTime)
		.def_readwrite("MaxPointData", &UExposureUtilityFixedCost::MaxPointData)
		.def_readwrite("PointLineChecks", &UExposureUtilityFixedCost::PointLineChecks)
		.def_readwrite("PointMaxLineChecks", &UExposureUtilityFixedCost::PointMaxLineChecks)
		.def_readwrite("PointFreshTime", &UExposureUtilityFixedCost::PointFreshTime)
		.def_readwrite("PointStaleTime", &UExposureUtilityFixedCost::PointStaleTime)
		.def_readwrite("PointMaxErrorSq", &UExposureUtilityFixedCost::PointMaxErrorSq)
		.def_readwrite("PointData", &UExposureUtilityFixedCost::PointData, py::return_value_policy::reference)
		;
	py::class_< UExposureUtilityStrategy, UAudioDevice >(m, "UExposureUtilityStrategy")
		.def_static("StaticClass", &UExposureUtilityStrategy::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UFiringBehaviorDefinition, UAudioDevice >(m, "UFiringBehaviorDefinition")
		.def_static("StaticClass", &UFiringBehaviorDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ConditionalPatterns", &UFiringBehaviorDefinition::ConditionalPatterns, py::return_value_policy::reference)
		;
	py::class_< UFiringBehaviorManager, UAudioDevice >(m, "UFiringBehaviorManager")
		.def_static("StaticClass", &UFiringBehaviorManager::StaticClass, py::return_value_policy::reference)
		.def_property("bHasTargetPoint", [](UFiringBehaviorManager &self){return self.bHasTargetPoint;}, [](UFiringBehaviorManager &self, bool value){self.bHasTargetPoint = value ? 1 : 0;})
		.def_property("bSetupWithZoneCollection", [](UFiringBehaviorManager &self){return self.bSetupWithZoneCollection;}, [](UFiringBehaviorManager &self, bool value){self.bSetupWithZoneCollection = value ? 1 : 0;})
		.def_readwrite("CurrentFiringPattern", &UFiringBehaviorManager::CurrentFiringPattern, py::return_value_policy::reference)
		.def_readwrite("CurrentTargetExposure", &UFiringBehaviorManager::CurrentTargetExposure)
		.def_readwrite("NumShotsThisBurst", &UFiringBehaviorManager::NumShotsThisBurst)
		.def_readwrite("CachedTargetPoint", &UFiringBehaviorManager::CachedTargetPoint, py::return_value_policy::reference)
		.def_readwrite("CurrentZoneCollection", &UFiringBehaviorManager::CurrentZoneCollection, py::return_value_policy::reference)
		.def_readwrite("CurrentZone", &UFiringBehaviorManager::CurrentZone, py::return_value_policy::reference)
		.def_readwrite("CurrentBehavior", &UFiringBehaviorManager::CurrentBehavior, py::return_value_policy::reference)
		.def_readwrite("CurrentConditionalPattern", &UFiringBehaviorManager::CurrentConditionalPattern)
		.def_readwrite("DefaultFiringBehaviorDefinition", &UFiringBehaviorManager::DefaultFiringBehaviorDefinition, py::return_value_policy::reference)
		.def_readwrite("DefaultFiringPatternTemplate", &UFiringBehaviorManager::DefaultFiringPatternTemplate, py::return_value_policy::reference)
		.def("eventGetTemplateClass", &UFiringBehaviorManager::eventGetTemplateClass, py::return_value_policy::reference)
		;
	py::class_< UFiringCondition, UAudioDevice >(m, "UFiringCondition")
		.def_static("StaticClass", &UFiringCondition::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UFireCond_IsPlayerTarget, UAudioDevice >(m, "UFireCond_IsPlayerTarget")
		.def_static("StaticClass", &UFireCond_IsPlayerTarget::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UFiringPattern, UAudioDevice >(m, "UFiringPattern")
		.def_static("StaticClass", &UFiringPattern::StaticClass, py::return_value_policy::reference)
		.def_property("bIsHarmlessToPawns", [](UFiringPattern &self){return self.bIsHarmlessToPawns;}, [](UFiringPattern &self, bool value){self.bIsHarmlessToPawns = value ? 1 : 0;})
		.def_property("bAllowFakeShots", [](UFiringPattern &self){return self.bAllowFakeShots;}, [](UFiringPattern &self, bool value){self.bAllowFakeShots = value ? 1 : 0;})
		;
	py::class_< UFirePatt_Cone, UAudioDevice >(m, "UFirePatt_Cone")
		.def_static("StaticClass", &UFirePatt_Cone::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ConeDegrees", &UFirePatt_Cone::ConeDegrees)
		.def_readwrite("ShotSpreadType", &UFirePatt_Cone::ShotSpreadType)
		;
	py::class_< UFirePatt_ShrinkingCone, UAudioDevice >(m, "UFirePatt_ShrinkingCone")
		.def_static("StaticClass", &UFirePatt_ShrinkingCone::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CurrentAccuracyConeDeg", &UFirePatt_ShrinkingCone::CurrentAccuracyConeDeg)
		.def_readwrite("LastDesiredAim", &UFirePatt_ShrinkingCone::LastDesiredAim, py::return_value_policy::reference)
		.def_readwrite("MaxAccuracyConeDeg", &UFirePatt_ShrinkingCone::MaxAccuracyConeDeg)
		.def_readwrite("ConeMultiplierPerShot", &UFirePatt_ShrinkingCone::ConeMultiplierPerShot)
		.def_readwrite("ShotSpreadType", &UFirePatt_ShrinkingCone::ShotSpreadType)
		;
	py::class_< UFirePatt_StrafeOver, UAudioDevice >(m, "UFirePatt_StrafeOver")
		.def_static("StaticClass", &UFirePatt_StrafeOver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CurrentAimRotation", &UFirePatt_StrafeOver::CurrentAimRotation, py::return_value_policy::reference)
		.def_readwrite("PitchDeltaPerShot", &UFirePatt_StrafeOver::PitchDeltaPerShot)
		.def_readwrite("MaxYawDeltaPerShot", &UFirePatt_StrafeOver::MaxYawDeltaPerShot)
		.def_readwrite("RefireRate", &UFirePatt_StrafeOver::RefireRate)
		.def_readwrite("LineOfShotsSpeed", &UFirePatt_StrafeOver::LineOfShotsSpeed)
		.def_readwrite("LineOfShotsEndZ", &UFirePatt_StrafeOver::LineOfShotsEndZ)
		.def_readwrite("YawDeltaRatio", &UFirePatt_StrafeOver::YawDeltaRatio)
		.def_readwrite("TargetPosition", &UFirePatt_StrafeOver::TargetPosition)
		;
	py::class_< UFiringZoneCollectionDefinition, UAudioDevice >(m, "UFiringZoneCollectionDefinition")
		.def_static("StaticClass", &UFiringZoneCollectionDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Zones", &UFiringZoneCollectionDefinition::Zones, py::return_value_policy::reference)
		.def("eventGetZoneForDistance", &UFiringZoneCollectionDefinition::eventGetZoneForDistance, py::return_value_policy::reference)
		;
	py::class_< UFiringZoneDefinition, UAudioDevice >(m, "UFiringZoneDefinition")
		.def_static("StaticClass", &UFiringZoneDefinition::StaticClass, py::return_value_policy::reference)
		.def_property("OuterRimInfinitelyFarAway", [](UFiringZoneDefinition &self){return self.OuterRimInfinitelyFarAway;}, [](UFiringZoneDefinition &self, bool value){self.OuterRimInfinitelyFarAway = value ? 1 : 0;})
		.def_readwrite("ZoneName", &UFiringZoneDefinition::ZoneName, py::return_value_policy::reference)
		.def_readwrite("OuterRimDistance", &UFiringZoneDefinition::OuterRimDistance)
		.def_readwrite("ZoneColor", &UFiringZoneDefinition::ZoneColor, py::return_value_policy::reference)
		.def_readwrite("FiringBehavior", &UFiringZoneDefinition::FiringBehavior, py::return_value_policy::reference)
		;
	py::class_< UFlagDefinition, UAudioDevice >(m, "UFlagDefinition")
		.def_static("StaticClass", &UFlagDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("EvaluationExpression", &UFlagDefinition::EvaluationExpression, py::return_value_policy::reference)
		.def_readwrite("ContextResolverChain", &UFlagDefinition::ContextResolverChain, py::return_value_policy::reference)
		.def_readwrite("ValueResolver", &UFlagDefinition::ValueResolver, py::return_value_policy::reference)
		.def("ApplyFlagInitializationData", &UFlagDefinition::ApplyFlagInitializationData)
		.def("ResolveContext", &UFlagDefinition::ResolveContext, py::return_value_policy::reference)
		.def("SetTrueTimed", &UFlagDefinition::SetTrueTimed)
		.def("SetValue", &UFlagDefinition::SetValue)
		;
	py::class_< UFlagExpressionEvaluator, UAudioDevice >(m, "UFlagExpressionEvaluator")
		.def_static("StaticClass", &UFlagExpressionEvaluator::StaticClass, py::return_value_policy::reference)
		.def_readwrite("FlagChain", &UFlagExpressionEvaluator::FlagChain, py::return_value_policy::reference)
		.def_readwrite("FlagChainOperator", &UFlagExpressionEvaluator::FlagChainOperator)
		.def("Evaluate", &UFlagExpressionEvaluator::Evaluate)
		;
	py::class_< UFlagValueResolver, UAudioDevice >(m, "UFlagValueResolver")
		.def_static("StaticClass", &UFlagValueResolver::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UMultipleFlagValueResolver, UAudioDevice >(m, "UMultipleFlagValueResolver")
		.def_static("StaticClass", &UMultipleFlagValueResolver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("FlagToLookUp", &UMultipleFlagValueResolver::FlagToLookUp, py::return_value_policy::reference)
		.def_readwrite("AggregationType", &UMultipleFlagValueResolver::AggregationType)
		;
	py::class_< UObjectFunctionFlagValueResolver, UAudioDevice >(m, "UObjectFunctionFlagValueResolver")
		.def_static("StaticClass", &UObjectFunctionFlagValueResolver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CheckRate", &UObjectFunctionFlagValueResolver::CheckRate)
		.def_readwrite("FunctionCall", &UObjectFunctionFlagValueResolver::FunctionCall, py::return_value_policy::reference)
		;
	py::class_< UObjectPropertyFlagValueResolver, UAudioDevice >(m, "UObjectPropertyFlagValueResolver")
		.def_static("StaticClass", &UObjectPropertyFlagValueResolver::StaticClass, py::return_value_policy::reference)
		.def_readwrite("PropertyName", &UObjectPropertyFlagValueResolver::PropertyName, py::return_value_policy::reference)
		;
	py::class_< URuleEngineFlagValueResolver, UAudioDevice >(m, "URuleEngineFlagValueResolver")
		.def_static("StaticClass", &URuleEngineFlagValueResolver::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGbxMessage, UAudioDevice >(m, "UGbxMessage")
		.def_static("StaticClass", &UGbxMessage::StaticClass, py::return_value_policy::reference)
		.def_property("IntendedForAllies", [](UGbxMessage &self){return self.IntendedForAllies;}, [](UGbxMessage &self, bool value){self.IntendedForAllies = value ? 1 : 0;})
		.def_property("IntendedForEnemies", [](UGbxMessage &self){return self.IntendedForEnemies;}, [](UGbxMessage &self, bool value){self.IntendedForEnemies = value ? 1 : 0;})
		.def_property("HasLocation", [](UGbxMessage &self){return self.HasLocation;}, [](UGbxMessage &self, bool value){self.HasLocation = value ? 1 : 0;})
		.def_property("HasRadius", [](UGbxMessage &self){return self.HasRadius;}, [](UGbxMessage &self, bool value){self.HasRadius = value ? 1 : 0;})
		.def_property("SendRepeatedly", [](UGbxMessage &self){return self.SendRepeatedly;}, [](UGbxMessage &self, bool value){self.SendRepeatedly = value ? 1 : 0;})
		.def_readwrite("Definition", &UGbxMessage::Definition, py::return_value_policy::reference)
		.def_readwrite("NameKey", &UGbxMessage::NameKey, py::return_value_policy::reference)
		.def_readwrite("Sender", &UGbxMessage::Sender, py::return_value_policy::reference)
		.def_readwrite("Subject", &UGbxMessage::Subject, py::return_value_policy::reference)
		.def_readwrite("AdditionalData", &UGbxMessage::AdditionalData, py::return_value_policy::reference)
		.def_readwrite("SimpleMetaData", &UGbxMessage::SimpleMetaData, py::return_value_policy::reference)
		.def_readwrite("SimpleMetaData2", &UGbxMessage::SimpleMetaData2, py::return_value_policy::reference)
		.def_readwrite("SimpleMetaData3", &UGbxMessage::SimpleMetaData3, py::return_value_policy::reference)
		.def_readwrite("SimpleMetaData4", &UGbxMessage::SimpleMetaData4, py::return_value_policy::reference)
		.def_readwrite("SenderAllegiance", &UGbxMessage::SenderAllegiance, py::return_value_policy::reference)
		.def_readwrite("SubjectAllegiance", &UGbxMessage::SubjectAllegiance, py::return_value_policy::reference)
		.def_readwrite("MessageLocation", &UGbxMessage::MessageLocation, py::return_value_policy::reference)
		.def_readwrite("BroadcastRadius", &UGbxMessage::BroadcastRadius)
		.def_readwrite("DeliverTime", &UGbxMessage::DeliverTime)
		.def_readwrite("TimePosted", &UGbxMessage::TimePosted)
		.def_readwrite("TimeSent", &UGbxMessage::TimeSent)
		.def_readwrite("DoNotSendRightNow", &UGbxMessage::DoNotSendRightNow, py::return_value_policy::reference)
		.def_readwrite("StopSendingAfterXReceptions", &UGbxMessage::StopSendingAfterXReceptions)
		.def_readwrite("MaxDurationToSend", &UGbxMessage::MaxDurationToSend)
		.def_readwrite("TimeBetweenSends", &UGbxMessage::TimeBetweenSends)
		.def_readwrite("DupeCriteria", &UGbxMessage::DupeCriteria, py::return_value_policy::reference)
		.def("InitializeFromDefinition", &UGbxMessage::InitializeFromDefinition)
		;
	py::class_< UGbxMessageDefinition, UAudioDevice >(m, "UGbxMessageDefinition")
		.def_static("StaticClass", &UGbxMessageDefinition::StaticClass, py::return_value_policy::reference)
		.def_property("HasLocation", [](UGbxMessageDefinition &self){return self.HasLocation;}, [](UGbxMessageDefinition &self, bool value){self.HasLocation = value ? 1 : 0;})
		.def_property("HasRadius", [](UGbxMessageDefinition &self){return self.HasRadius;}, [](UGbxMessageDefinition &self, bool value){self.HasRadius = value ? 1 : 0;})
		.def_property("TakeLocationFromSender", [](UGbxMessageDefinition &self){return self.TakeLocationFromSender;}, [](UGbxMessageDefinition &self, bool value){self.TakeLocationFromSender = value ? 1 : 0;})
		.def_property("IntendedForAllies", [](UGbxMessageDefinition &self){return self.IntendedForAllies;}, [](UGbxMessageDefinition &self, bool value){self.IntendedForAllies = value ? 1 : 0;})
		.def_property("IntendedForEnemies", [](UGbxMessageDefinition &self){return self.IntendedForEnemies;}, [](UGbxMessageDefinition &self, bool value){self.IntendedForEnemies = value ? 1 : 0;})
		.def_property("AllowRepeatSends", [](UGbxMessageDefinition &self){return self.AllowRepeatSends;}, [](UGbxMessageDefinition &self, bool value){self.AllowRepeatSends = value ? 1 : 0;})
		.def_property("LimitedReception", [](UGbxMessageDefinition &self){return self.LimitedReception;}, [](UGbxMessageDefinition &self, bool value){self.LimitedReception = value ? 1 : 0;})
		.def_readwrite("NameKey", &UGbxMessageDefinition::NameKey, py::return_value_policy::reference)
		.def_readwrite("Radius", &UGbxMessageDefinition::Radius, py::return_value_policy::reference)
		.def_readwrite("SecondsBetweenSends", &UGbxMessageDefinition::SecondsBetweenSends)
		.def_readwrite("MaxTimeToKeepSending", &UGbxMessageDefinition::MaxTimeToKeepSending)
		.def_readwrite("DupeCriteria", &UGbxMessageDefinition::DupeCriteria, py::return_value_policy::reference)
		.def_readwrite("MaxRecipients", &UGbxMessageDefinition::MaxRecipients)
		;
	py::class_< UGbxMessageManager, UAudioDevice >(m, "UGbxMessageManager")
		.def_static("StaticClass", &UGbxMessageManager::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Listeners", &UGbxMessageManager::Listeners, py::return_value_policy::reference)
		.def_readwrite("MessagesToSend", &UGbxMessageManager::MessagesToSend, py::return_value_policy::reference)
		.def_readwrite("SentMessagesRecently", &UGbxMessageManager::SentMessagesRecently, py::return_value_policy::reference)
		.def_readwrite("DistributionInterval", &UGbxMessageManager::DistributionInterval)
		.def_readwrite("MaxMessagesPerDistribution", &UGbxMessageManager::MaxMessagesPerDistribution)
		.def("RemoveListener", &UGbxMessageManager::RemoveListener)
		.def("AddListener", &UGbxMessageManager::AddListener)
		.def("PostMessage", &UGbxMessageManager::PostMessage)
		.def("AllocateMessage", &UGbxMessageManager::AllocateMessage, py::return_value_policy::reference)
		;
	py::class_< AGearboxMind, UAudioDevice >(m, "AGearboxMind")
		.def_static("StaticClass", &AGearboxMind::StaticClass, py::return_value_policy::reference)
		.def_property("bDisabledDueToPopulationIrrelevance", [](AGearboxMind &self){return self.bDisabledDueToPopulationIrrelevance;}, [](AGearboxMind &self, bool value){self.bDisabledDueToPopulationIrrelevance = value ? 1 : 0;})
		.def_property("bWantsToWalk", [](AGearboxMind &self){return self.bWantsToWalk;}, [](AGearboxMind &self, bool value){self.bWantsToWalk = value ? 1 : 0;})
		.def_readwrite("VfTable_IIRuleEngineOwner", &AGearboxMind::VfTable_IIRuleEngineOwner, py::return_value_policy::reference)
		.def_readwrite("VfTable_IINounAttributeProvider", &AGearboxMind::VfTable_IINounAttributeProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIFlagProvider", &AGearboxMind::VfTable_IIFlagProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIAIInterface", &AGearboxMind::VfTable_IIAIInterface, py::return_value_policy::reference)
		.def_readwrite("MyRuleEngine", &AGearboxMind::MyRuleEngine, py::return_value_policy::reference)
		.def_readwrite("RuleEngineTemplate", &AGearboxMind::RuleEngineTemplate, py::return_value_policy::reference)
		.def_readwrite("MyGearboxPawn", &AGearboxMind::MyGearboxPawn, py::return_value_policy::reference)
		.def_readwrite("FacingPolicy", &AGearboxMind::FacingPolicy)
		.def_readwrite("AtLeastOneKnownThreat", &AGearboxMind::AtLeastOneKnownThreat)
		.def_readwrite("NewEnemyAwarenessReason", &AGearboxMind::NewEnemyAwarenessReason)
		.def_readwrite("DebugMoveFinishedReason", &AGearboxMind::DebugMoveFinishedReason)
		.def_readwrite("FacingActor", &AGearboxMind::FacingActor, py::return_value_policy::reference)
		.def_readwrite("FacingVector", &AGearboxMind::FacingVector, py::return_value_policy::reference)
		.def_readwrite("DotProductToFacingPolicy", &AGearboxMind::DotProductToFacingPolicy)
		.def_readwrite("DotProductToCurrentEnemy", &AGearboxMind::DotProductToCurrentEnemy)
		.def_readwrite("MostRecentNewEnemyName", &AGearboxMind::MostRecentNewEnemyName, py::return_value_policy::reference)
		.def_readwrite("MostRecentNewEnemyArchName", &AGearboxMind::MostRecentNewEnemyArchName, py::return_value_policy::reference)
		.def_readwrite("DefaultAwarenessZoneCollection", &AGearboxMind::DefaultAwarenessZoneCollection, py::return_value_policy::reference)
		.def_readwrite("CurrentAwarenessZoneCollection", &AGearboxMind::CurrentAwarenessZoneCollection, py::return_value_policy::reference)
		.def_readwrite("CurrentAwarenessZone", &AGearboxMind::CurrentAwarenessZone, py::return_value_policy::reference)
		.def_readwrite("DefaultCoverSearchCriteria", &AGearboxMind::DefaultCoverSearchCriteria, py::return_value_policy::reference)
		.def_readwrite("FailedMoveSpots", &AGearboxMind::FailedMoveSpots, py::return_value_policy::reference)
		.def_readwrite("NounState", &AGearboxMind::NounState, py::return_value_policy::reference)
		.def_readwrite("HomeLocation", &AGearboxMind::HomeLocation, py::return_value_policy::reference)
		.def_readwrite("PopulationOpportunityIndex", &AGearboxMind::PopulationOpportunityIndex)
		.def_readwrite("MindTargetInfoClass", &AGearboxMind::MindTargetInfoClass, py::return_value_policy::reference)
		.def_readwrite("MyTracker", &AGearboxMind::MyTracker, py::return_value_policy::reference)
		.def_readwrite("DynamicFlagDefinitions", &AGearboxMind::DynamicFlagDefinitions, py::return_value_policy::reference)
		.def_readwrite("DynamicFlags", &AGearboxMind::DynamicFlags, py::return_value_policy::reference)
		.def_readwrite("UnknownData00[0x3C]", &AGearboxMind::UnknownData00[0x3C])
		.def_readwrite("AIComponent", &AGearboxMind::AIComponent, py::return_value_policy::reference)
		.def("InitSequence", &AGearboxMind::InitSequence)
		.def("GetAllegiance", &AGearboxMind::GetAllegiance, py::return_value_policy::reference)
		.def("GetAIDefinition", &AGearboxMind::GetAIDefinition, py::return_value_policy::reference)
		.def("GetAIComponent", &AGearboxMind::GetAIComponent, py::return_value_policy::reference)
		.def("GetAIParent", &AGearboxMind::GetAIParent, py::return_value_policy::reference)
		.def("GetAILocation", &AGearboxMind::GetAILocation, py::return_value_policy::reference)
		.def("GetAIActor", &AGearboxMind::GetAIActor, py::return_value_policy::reference)
		.def("CanTickAI", &AGearboxMind::CanTickAI)
		.def("InGodMode", &AGearboxMind::InGodMode)
		.def("PawnDied", &AGearboxMind::PawnDied)
		.def("OnTargetPriority", &AGearboxMind::OnTargetPriority)
		.def("Behavior_SetCanTarget", &AGearboxMind::Behavior_SetCanTarget)
		.def("GetNoTargetAllEnemies", &AGearboxMind::GetNoTargetAllEnemies)
		.def("SetNoTargetAllEnemies", &AGearboxMind::SetNoTargetAllEnemies)
		.def("eventClearScriptedMoveTarget", &AGearboxMind::eventClearScriptedMoveTarget)
		.def("eventIsCloseEnoughToScriptedMoveTarget", &AGearboxMind::eventIsCloseEnoughToScriptedMoveTarget)
		.def("eventGetWeaponFireLocation", &AGearboxMind::eventGetWeaponFireLocation, py::return_value_policy::reference)
		.def("ActivateEventRule", &AGearboxMind::ActivateEventRule)
		.def("AddHitTargetRecord", &AGearboxMind::AddHitTargetRecord)
		.def("StopMovement", &AGearboxMind::StopMovement)
		.def("eventPossess", &AGearboxMind::eventPossess)
		.def("GetGearboxRuleEngine", &AGearboxMind::GetGearboxRuleEngine, py::return_value_policy::reference)
		.def("GetRuleEngine", &AGearboxMind::GetRuleEngine, py::return_value_policy::reference)
		.def("NotifyShotAtBy", &AGearboxMind::NotifyShotAtBy)
		.def("FindCoverAndClaim", &AGearboxMind::FindCoverAndClaim)
		.def("UpdateRuleEngineKnowledge", &AGearboxMind::UpdateRuleEngineKnowledge)
		.def("GetCurrentTargetInfo", &AGearboxMind::GetCurrentTargetInfo)
		.def("IsSameAllegianceMind", &AGearboxMind::IsSameAllegianceMind)
		.def("IsSameAllegiance", &AGearboxMind::IsSameAllegiance)
		.def("IsNeutralMind", &AGearboxMind::IsNeutralMind)
		.def("IsNeutral", &AGearboxMind::IsNeutral)
		.def("IsFriendlyMind", &AGearboxMind::IsFriendlyMind)
		.def("IsFriendly", &AGearboxMind::IsFriendly)
		.def("IsEnemyMind", &AGearboxMind::IsEnemyMind)
		.def("IsEnemy", &AGearboxMind::IsEnemy)
		.def("WantsToWalk", &AGearboxMind::WantsToWalk)
		.def("SetWantsToWalk", &AGearboxMind::SetWantsToWalk)
		.def("GetFacingPolicy", &AGearboxMind::GetFacingPolicy)
		.def("SetFacingPolicy", &AGearboxMind::SetFacingPolicy)
		.def("GetCurrentTarget", &AGearboxMind::GetCurrentTarget, py::return_value_policy::reference)
		.def("RemoveEnemyFromQueue", &AGearboxMind::RemoveEnemyFromQueue)
		.def("GetNavigationHandle", &AGearboxMind::GetNavigationHandle, py::return_value_policy::reference)
		;
	py::class_< UGearboxAIMoveNodeRenderComponent, UAudioDevice >(m, "UGearboxAIMoveNodeRenderComponent")
		.def_static("StaticClass", &UGearboxAIMoveNodeRenderComponent::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxCoverStateManager, UAudioDevice >(m, "UGearboxCoverStateManager")
		.def_static("StaticClass", &UGearboxCoverStateManager::StaticClass, py::return_value_policy::reference)
		.def_property("PawnCrouchedPriorToMount", [](UGearboxCoverStateManager &self){return self.PawnCrouchedPriorToMount;}, [](UGearboxCoverStateManager &self, bool value){self.PawnCrouchedPriorToMount = value ? 1 : 0;})
		.def_property("CoverDebugSearchWasFinalized", [](UGearboxCoverStateManager &self){return self.CoverDebugSearchWasFinalized;}, [](UGearboxCoverStateManager &self, bool value){self.CoverDebugSearchWasFinalized = value ? 1 : 0;})
		.def_readwrite("MyGearboxPawn", &UGearboxCoverStateManager::MyGearboxPawn, py::return_value_policy::reference)
		.def_readwrite("DesiredCoverState", &UGearboxCoverStateManager::DesiredCoverState, py::return_value_policy::reference)
		.def_readwrite("CurrentCoverState", &UGearboxCoverStateManager::CurrentCoverState, py::return_value_policy::reference)
		.def_readwrite("DesiredCoverTransition", &UGearboxCoverStateManager::DesiredCoverTransition, py::return_value_policy::reference)
		.def_readwrite("CurrentCoverTransition", &UGearboxCoverStateManager::CurrentCoverTransition, py::return_value_policy::reference)
		.def_readwrite("DesiredCoverInfo", &UGearboxCoverStateManager::DesiredCoverInfo, py::return_value_policy::reference)
		.def_readwrite("CurrentCoverInfo", &UGearboxCoverStateManager::CurrentCoverInfo, py::return_value_policy::reference)
		.def_readwrite("LastCoverInfo", &UGearboxCoverStateManager::LastCoverInfo, py::return_value_policy::reference)
		.def_readwrite("CoverDebugInnerRadius", &UGearboxCoverStateManager::CoverDebugInnerRadius)
		.def_readwrite("CoverDebugOuterRadius", &UGearboxCoverStateManager::CoverDebugOuterRadius)
		.def_readwrite("CoverDebugSearchAngle", &UGearboxCoverStateManager::CoverDebugSearchAngle)
		.def_readwrite("CoverDebugSearchDirection", &UGearboxCoverStateManager::CoverDebugSearchDirection, py::return_value_policy::reference)
		.def_readwrite("CoverDebugSearchOrigin", &UGearboxCoverStateManager::CoverDebugSearchOrigin, py::return_value_policy::reference)
		.def_readwrite("CoverDebugList", &UGearboxCoverStateManager::CoverDebugList, py::return_value_policy::reference)
		.def_readwrite("HorizontalCoverAngleDegrees", &UGearboxCoverStateManager::HorizontalCoverAngleDegrees)
		.def_readwrite("VerticalCoverAngleDegrees", &UGearboxCoverStateManager::VerticalCoverAngleDegrees)
		.def("IsChangingDirection", &UGearboxCoverStateManager::IsChangingDirection)
		.def("IsMantlingOverCoverInProgress", &UGearboxCoverStateManager::IsMantlingOverCoverInProgress)
		.def("IsReturnFromPeekInProgress", &UGearboxCoverStateManager::IsReturnFromPeekInProgress)
		.def("IsPeekTransitionInProgress", &UGearboxCoverStateManager::IsPeekTransitionInProgress)
		.def("IsPeekedUp", &UGearboxCoverStateManager::IsPeekedUp)
		.def("IsReturnFromLeanOutInProgress", &UGearboxCoverStateManager::IsReturnFromLeanOutInProgress)
		.def("IsLeanOutTransitionInProgress", &UGearboxCoverStateManager::IsLeanOutTransitionInProgress)
		.def("IsLeanedOut", &UGearboxCoverStateManager::IsLeanedOut)
		.def("IsReturnFromPopUpInProgress", &UGearboxCoverStateManager::IsReturnFromPopUpInProgress)
		.def("IsPopUpTransitionInProgress", &UGearboxCoverStateManager::IsPopUpTransitionInProgress)
		.def("IsPoppedUp", &UGearboxCoverStateManager::IsPoppedUp)
		.def("IsExecutingAnyTransition", &UGearboxCoverStateManager::IsExecutingAnyTransition)
		.def("GetDesiredState", &UGearboxCoverStateManager::GetDesiredState)
		.def("GetCurrentTransition", &UGearboxCoverStateManager::GetCurrentTransition)
		.def("OnMantleOverCoverAnimEnd", &UGearboxCoverStateManager::OnMantleOverCoverAnimEnd)
		.def("OnTransitionAnimEndEx", &UGearboxCoverStateManager::OnTransitionAnimEndEx)
		.def("OnTransitionAnimEnd", &UGearboxCoverStateManager::OnTransitionAnimEnd)
		.def("OnDismountAnimEnd", &UGearboxCoverStateManager::OnDismountAnimEnd)
		.def("OnMountAnimEnd", &UGearboxCoverStateManager::OnMountAnimEnd)
		.def("MantleOverCover", &UGearboxCoverStateManager::MantleOverCover)
		.def("ReturnToCover", &UGearboxCoverStateManager::ReturnToCover)
		.def("LeanOutForFiring", &UGearboxCoverStateManager::LeanOutForFiring)
		.def("PopUpForFiring", &UGearboxCoverStateManager::PopUpForFiring)
		.def("Peek", &UGearboxCoverStateManager::Peek)
		.def("DetachFromCover", &UGearboxCoverStateManager::DetachFromCover)
		.def("DismountCover", &UGearboxCoverStateManager::DismountCover)
		.def("ClaimAndMountCover", &UGearboxCoverStateManager::ClaimAndMountCover)
		.def("MountDesiredCover", &UGearboxCoverStateManager::MountDesiredCover)
		.def("ClearDesiredCover", &UGearboxCoverStateManager::ClearDesiredCover)
		.def("GetCurrentCoverLocationAndRotation", &UGearboxCoverStateManager::GetCurrentCoverLocationAndRotation)
		.def("GetDesiredCoverLocationAndRotation", &UGearboxCoverStateManager::GetDesiredCoverLocationAndRotation)
		.def("HasDesiredCover", &UGearboxCoverStateManager::HasDesiredCover)
		.def("GetLastCoverHeight", &UGearboxCoverStateManager::GetLastCoverHeight)
		.def("GetCurrentCoverHeight", &UGearboxCoverStateManager::GetCurrentCoverHeight)
		.def("GetDesiredCoverHeight", &UGearboxCoverStateManager::GetDesiredCoverHeight)
		.def("WasCoveredFrom", &UGearboxCoverStateManager::WasCoveredFrom)
		.def("WillBeCoveredFrom", &UGearboxCoverStateManager::WillBeCoveredFrom)
		.def("IsCoveredFrom", &UGearboxCoverStateManager::IsCoveredFrom)
		.def("IsDismountInProgress", &UGearboxCoverStateManager::IsDismountInProgress)
		.def("IsMountInProgress", &UGearboxCoverStateManager::IsMountInProgress)
		.def("WasMountedOnCover", &UGearboxCoverStateManager::WasMountedOnCover)
		.def("IsMountedOnCover", &UGearboxCoverStateManager::IsMountedOnCover)
		.def("IsUsingCover", &UGearboxCoverStateManager::IsUsingCover)
		.def("OnCoverStateChanged", &UGearboxCoverStateManager::OnCoverStateChanged)
		.def("GetLastCover", &UGearboxCoverStateManager::GetLastCover)
		.def("GetCurrentCover", &UGearboxCoverStateManager::GetCurrentCover)
		.def("GetDesiredCover", &UGearboxCoverStateManager::GetDesiredCover)
		.def("FindCoverAndClaim", &UGearboxCoverStateManager::FindCoverAndClaim)
		.def("Initialize", &UGearboxCoverStateManager::Initialize)
		;
	py::class_< UGearboxMindAttributeContextResolver, UAudioDevice >(m, "UGearboxMindAttributeContextResolver")
		.def_static("StaticClass", &UGearboxMindAttributeContextResolver::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxNavigationHandle, UAudioDevice >(m, "UGearboxNavigationHandle")
		.def_static("StaticClass", &UGearboxNavigationHandle::StaticClass, py::return_value_policy::reference)
		.def_property("bFollowingPath", [](UGearboxNavigationHandle &self){return self.bFollowingPath;}, [](UGearboxNavigationHandle &self, bool value){self.bFollowingPath = value ? 1 : 0;})
		.def_property("bReachedDestination", [](UGearboxNavigationHandle &self){return self.bReachedDestination;}, [](UGearboxNavigationHandle &self, bool value){self.bReachedDestination = value ? 1 : 0;})
		.def_property("bSpecialMovementFinished", [](UGearboxNavigationHandle &self){return self.bSpecialMovementFinished;}, [](UGearboxNavigationHandle &self, bool value){self.bSpecialMovementFinished = value ? 1 : 0;})
		.def_property("bClearPathAfterSpecialMove", [](UGearboxNavigationHandle &self){return self.bClearPathAfterSpecialMove;}, [](UGearboxNavigationHandle &self, bool value){self.bClearPathAfterSpecialMove = value ? 1 : 0;})
		.def_readwrite("DesiredMovementSpeed", &UGearboxNavigationHandle::DesiredMovementSpeed)
		.def_readwrite("ActiveSpecialNavMeshMove", &UGearboxNavigationHandle::ActiveSpecialNavMeshMove)
		.def_readwrite("CurrentGoal", &UGearboxNavigationHandle::CurrentGoal, py::return_value_policy::reference)
		.def_readwrite("CurrentPath", &UGearboxNavigationHandle::CurrentPath, py::return_value_policy::reference)
		.def_readwrite("Anchor", &UGearboxNavigationHandle::Anchor, py::return_value_policy::reference)
		.def_readwrite("LastValidAnchor", &UGearboxNavigationHandle::LastValidAnchor, py::return_value_policy::reference)
		.def_readwrite("LastAnchorPosition", &UGearboxNavigationHandle::LastAnchorPosition, py::return_value_policy::reference)
		.def_readwrite("LastAnchorDelta", &UGearboxNavigationHandle::LastAnchorDelta, py::return_value_policy::reference)
		.def_readwrite("NextPathObjectDistance", &UGearboxNavigationHandle::NextPathObjectDistance)
		.def_readwrite("CurrentGoalStartLoc", &UGearboxNavigationHandle::CurrentGoalStartLoc, py::return_value_policy::reference)
		.def_readwrite("DesiredLookDirection", &UGearboxNavigationHandle::DesiredLookDirection, py::return_value_policy::reference)
		.def_readwrite("LookDirection", &UGearboxNavigationHandle::LookDirection, py::return_value_policy::reference)
		.def_readwrite("PathFinder", &UGearboxNavigationHandle::PathFinder, py::return_value_policy::reference)
		.def_readwrite("NearPathCheckDist", &UGearboxNavigationHandle::NearPathCheckDist)
		.def_readwrite("NearPathCheckDistMin", &UGearboxNavigationHandle::NearPathCheckDistMin)
		.def_readwrite("NearPathCheckDistMax", &UGearboxNavigationHandle::NearPathCheckDistMax)
		.def_readwrite("NearPathCheckDistRate", &UGearboxNavigationHandle::NearPathCheckDistRate)
		.def("SetDesiredMovementSpeed", &UGearboxNavigationHandle::SetDesiredMovementSpeed)
		.def("ClearAnchor", &UGearboxNavigationHandle::ClearAnchor)
		.def("GetNearestPositionOnNavMesh", &UGearboxNavigationHandle::GetNearestPositionOnNavMesh)
		.def("GetNavMeshPolyForPoint", &UGearboxNavigationHandle::GetNavMeshPolyForPoint)
		.def("IsDoingSpecialMove", &UGearboxNavigationHandle::IsDoingSpecialMove)
		.def("InFinalPoly", &UGearboxNavigationHandle::InFinalPoly)
		.def("NeedsRegularWalkingPhysics", &UGearboxNavigationHandle::NeedsRegularWalkingPhysics)
		.def("PopulatePathfindingParamCache", &UGearboxNavigationHandle::PopulatePathfindingParamCache)
		.def("TrySpecialMove", &UGearboxNavigationHandle::TrySpecialMove)
		.def("Finished", &UGearboxNavigationHandle::Finished)
		.def("IsGoalValid", &UGearboxNavigationHandle::IsGoalValid)
		.def("MovePawnToGoal", &UGearboxNavigationHandle::MovePawnToGoal)
		.def("PathIsValid", &UGearboxNavigationHandle::PathIsValid)
		.def("IsFollowingPath", &UGearboxNavigationHandle::IsFollowingPath)
		.def("ClearPath", &UGearboxNavigationHandle::ClearPath)
		.def("FollowPath", &UGearboxNavigationHandle::FollowPath)
		.def("CreatePathToLocation", &UGearboxNavigationHandle::CreatePathToLocation)
		;
	py::class_< UIFlagProvider, UAudioDevice >(m, "UIFlagProvider")
		.def_static("StaticClass", &UIFlagProvider::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UIFlagProviderGroup, UAudioDevice >(m, "UIFlagProviderGroup")
		.def_static("StaticClass", &UIFlagProviderGroup::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UIGbxMessageListener, UAudioDevice >(m, "UIGbxMessageListener")
		.def_static("StaticClass", &UIGbxMessageListener::StaticClass, py::return_value_policy::reference)
		.def("WantsToStopListening", &UIGbxMessageListener::WantsToStopListening)
		.def("GetActor", &UIGbxMessageListener::GetActor, py::return_value_policy::reference)
		.def("GetListenerLocation", &UIGbxMessageListener::GetListenerLocation, py::return_value_policy::reference)
		.def("GetAllegiance", &UIGbxMessageListener::GetAllegiance, py::return_value_policy::reference)
		.def("ReceiveMessage", &UIGbxMessageListener::ReceiveMessage)
		.def("CaresAboutMessage", &UIGbxMessageListener::CaresAboutMessage)
		;
	py::class_< UIRuleEngineOwner, UAudioDevice >(m, "UIRuleEngineOwner")
		.def_static("StaticClass", &UIRuleEngineOwner::StaticClass, py::return_value_policy::reference)
		.def("GetRuleEngine", &UIRuleEngineOwner::GetRuleEngine, py::return_value_policy::reference)
		;
	py::class_< UKnowledgeRecord, UAudioDevice >(m, "UKnowledgeRecord")
		.def_static("StaticClass", &UKnowledgeRecord::StaticClass, py::return_value_policy::reference)
		.def_readwrite("TheAIFactory", &UKnowledgeRecord::TheAIFactory, py::return_value_policy::reference)
		.def_readwrite("TheName", &UKnowledgeRecord::TheName, py::return_value_policy::reference)
		.def_readwrite("KCategory", &UKnowledgeRecord::KCategory)
		.def_readwrite("EvalType", &UKnowledgeRecord::EvalType)
		.def_readwrite("Active", &UKnowledgeRecord::Active)
		.def_readwrite("Marked", &UKnowledgeRecord::Marked)
		.def_readwrite("Frequency", &UKnowledgeRecord::Frequency)
		.def_readwrite("NextUpdateTime", &UKnowledgeRecord::NextUpdateTime)
		.def_readwrite("FlagIndex", &UKnowledgeRecord::FlagIndex)
		.def("eventRecordEvalCallback", &UKnowledgeRecord::eventRecordEvalCallback)
		;
	py::class_< ULocationFilter, UAudioDevice >(m, "ULocationFilter")
		.def_static("StaticClass", &ULocationFilter::StaticClass, py::return_value_policy::reference)
		;
	py::class_< ULocationFilter_MustHaveLOS, UAudioDevice >(m, "ULocationFilter_MustHaveLOS")
		.def_static("StaticClass", &ULocationFilter_MustHaveLOS::StaticClass, py::return_value_policy::reference)
		;
	py::class_< ULocationFilter_MustNotHaveLOS, UAudioDevice >(m, "ULocationFilter_MustNotHaveLOS")
		.def_static("StaticClass", &ULocationFilter_MustNotHaveLOS::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UMindTargetInfo, UAudioDevice >(m, "UMindTargetInfo")
		.def_static("StaticClass", &UMindTargetInfo::StaticClass, py::return_value_policy::reference)
		.def_property("bShouldRemove", [](UMindTargetInfo &self){return self.bShouldRemove;}, [](UMindTargetInfo &self, bool value){self.bShouldRemove = value ? 1 : 0;})
		.def_property("bCanSeeOrHearTarget", [](UMindTargetInfo &self){return self.bCanSeeOrHearTarget;}, [](UMindTargetInfo &self, bool value){self.bCanSeeOrHearTarget = value ? 1 : 0;})
		.def_readwrite("Target", &UMindTargetInfo::Target, py::return_value_policy::reference)
		.def_readwrite("Distance", &UMindTargetInfo::Distance)
		.def_readwrite("bCanFireAt", &UMindTargetInfo::bCanFireAt)
		.def_readwrite("Priority", &UMindTargetInfo::Priority)
		.def_readwrite("OnePriority", &UMindTargetInfo::OnePriority)
		.def_readwrite("TargetExposureToMe", &UMindTargetInfo::TargetExposureToMe)
		.def_readwrite("MyExposureToTarget", &UMindTargetInfo::MyExposureToTarget)
		.def_readwrite("HitTargetHistory", &UMindTargetInfo::HitTargetHistory, py::return_value_policy::reference)
		.def_readwrite("PriorityDebugRecords", &UMindTargetInfo::PriorityDebugRecords, py::return_value_policy::reference)
		.def_readwrite("IAmConsciousOfTarget", &UMindTargetInfo::IAmConsciousOfTarget, py::return_value_policy::reference)
		.def_readwrite("IAmConsciousTime", &UMindTargetInfo::IAmConsciousTime)
		.def_readwrite("TargetHasShotAtMeRecently", &UMindTargetInfo::TargetHasShotAtMeRecently, py::return_value_policy::reference)
		.def_readwrite("TargetOccludedBySmoke", &UMindTargetInfo::TargetOccludedBySmoke, py::return_value_policy::reference)
		.def_readwrite("IHaveSeenOrKnownThisTargetBefore", &UMindTargetInfo::IHaveSeenOrKnownThisTargetBefore, py::return_value_policy::reference)
		.def_readwrite("LastVisibleOrAudibleLocation", &UMindTargetInfo::LastVisibleOrAudibleLocation, py::return_value_policy::reference)
		.def_readwrite("BonusPriority", &UMindTargetInfo::BonusPriority)
		.def("GetAverageHitTime", &UMindTargetInfo::GetAverageHitTime)
		.def("AddHitTargetRecord", &UMindTargetInfo::AddHitTargetRecord)
		;
	py::class_< URule, UAudioDevice >(m, "URule")
		.def_static("StaticClass", &URule::StaticClass, py::return_value_policy::reference)
		.def_property("RuleEnabled", [](URule &self){return self.RuleEnabled;}, [](URule &self, bool value){self.RuleEnabled = value ? 1 : 0;})
		.def_property("StopWhenStateCodeRunsOut", [](URule &self){return self.StopWhenStateCodeRunsOut;}, [](URule &self, bool value){self.StopWhenStateCodeRunsOut = value ? 1 : 0;})
		.def_property("AlwaysExecute", [](URule &self){return self.AlwaysExecute;}, [](URule &self, bool value){self.AlwaysExecute = value ? 1 : 0;})
		.def_property("bInitialized", [](URule &self){return self.bInitialized;}, [](URule &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_property("bIsRunning", [](URule &self){return self.bIsRunning;}, [](URule &self, bool value){self.bIsRunning = value ? 1 : 0;})
		.def_property("bCanRunMultipleInstances", [](URule &self){return self.bCanRunMultipleInstances;}, [](URule &self, bool value){self.bCanRunMultipleInstances = value ? 1 : 0;})
		.def_property("bIsTransferable", [](URule &self){return self.bIsTransferable;}, [](URule &self, bool value){self.bIsTransferable = value ? 1 : 0;})
		.def_property("bRestartable", [](URule &self){return self.bRestartable;}, [](URule &self, bool value){self.bRestartable = value ? 1 : 0;})
		.def_property("bBlockRuleSetChange", [](URule &self){return self.bBlockRuleSetChange;}, [](URule &self, bool value){self.bBlockRuleSetChange = value ? 1 : 0;})
		.def_property("WasTransferred", [](URule &self){return self.WasTransferred;}, [](URule &self, bool value){self.WasTransferred = value ? 1 : 0;})
		.def_readwrite("MyRuleEngine", &URule::MyRuleEngine, py::return_value_policy::reference)
		.def_readwrite("Priority", &URule::Priority)
		.def_readwrite("BasePriority", &URule::BasePriority)
		.def_readwrite("StartingSequenceTemplate", &URule::StartingSequenceTemplate, py::return_value_policy::reference)
		.def_readwrite("ExecutionPattern", &URule::ExecutionPattern)
		.def_readwrite("TimeToWaitBeforeFirstExecution", &URule::TimeToWaitBeforeFirstExecution, py::return_value_policy::reference)
		.def_readwrite("TimeToWaitBeforeNextExecution", &URule::TimeToWaitBeforeNextExecution, py::return_value_policy::reference)
		.def_readwrite("MaxTimeToExecute", &URule::MaxTimeToExecute, py::return_value_policy::reference)
		.def_readwrite("MaxNumberOfExecutions", &URule::MaxNumberOfExecutions)
		.def_readwrite("CanExecuteConditionals", &URule::CanExecuteConditionals, py::return_value_policy::reference)
		.def_readwrite("ShouldStopConditionals", &URule::ShouldStopConditionals, py::return_value_policy::reference)
		.def_readwrite("CanExecuteExpression", &URule::CanExecuteExpression, py::return_value_policy::reference)
		.def_readwrite("ShouldStopExpression", &URule::ShouldStopExpression, py::return_value_policy::reference)
		.def_readwrite("MyActionSequence", &URule::MyActionSequence, py::return_value_policy::reference)
		.def_readwrite("TheAIFactory", &URule::TheAIFactory, py::return_value_policy::reference)
		.def_readwrite("MyRuleEventDef", &URule::MyRuleEventDef, py::return_value_policy::reference)
		.def_readwrite("AssociatedKnowledgeRecords", &URule::AssociatedKnowledgeRecords, py::return_value_policy::reference)
		.def_readwrite("FlagDebugString", &URule::FlagDebugString, py::return_value_policy::reference)
		.def_readwrite("RuleName", &URule::RuleName, py::return_value_policy::reference)
		.def_readwrite("OtherEventParticipantObject", &URule::OtherEventParticipantObject, py::return_value_policy::reference)
		.def_readwrite("IsTimingRestrictedNow", &URule::IsTimingRestrictedNow, py::return_value_policy::reference)
		.def_readwrite("NumExecutions", &URule::NumExecutions)
		.def_readwrite("RuleEventDefPath", &URule::RuleEventDefPath, py::return_value_policy::reference)
		.def_readwrite("StartExecutionTimeStamp", &URule::StartExecutionTimeStamp)
		.def("GetRuleName", &URule::GetRuleName, py::return_value_policy::reference)
		.def("GetRuleFName", &URule::GetRuleFName, py::return_value_policy::reference)
		.def("GetOtherEventParticipant", &URule::GetOtherEventParticipant, py::return_value_policy::reference)
		;
	py::class_< URuleContainer, UAudioDevice >(m, "URuleContainer")
		.def_static("StaticClass", &URuleContainer::StaticClass, py::return_value_policy::reference)
		.def_property("AllowAllEventsThrough", [](URuleContainer &self){return self.AllowAllEventsThrough;}, [](URuleContainer &self, bool value){self.AllowAllEventsThrough = value ? 1 : 0;})
		.def_readwrite("RuleSetTemplate", &URuleContainer::RuleSetTemplate, py::return_value_policy::reference)
		.def_readwrite("CurRuleSet", &URuleContainer::CurRuleSet, py::return_value_policy::reference)
		;
	py::class_< URulePlaceholder, UAudioDevice >(m, "URulePlaceholder")
		.def_static("StaticClass", &URulePlaceholder::StaticClass, py::return_value_policy::reference)
		;
	py::class_< URuleEngine, UAudioDevice >(m, "URuleEngine")
		.def_static("StaticClass", &URuleEngine::StaticClass, py::return_value_policy::reference)
		.def_property("bRulesEnabled", [](URuleEngine &self){return self.bRulesEnabled;}, [](URuleEngine &self, bool value){self.bRulesEnabled = value ? 1 : 0;})
		.def_property("bHasDebugFocus", [](URuleEngine &self){return self.bHasDebugFocus;}, [](URuleEngine &self, bool value){self.bHasDebugFocus = value ? 1 : 0;})
		.def_property("bVerboseLoggingEnabled", [](URuleEngine &self){return self.bVerboseLoggingEnabled;}, [](URuleEngine &self, bool value){self.bVerboseLoggingEnabled = value ? 1 : 0;})
		.def_property("bInitialized", [](URuleEngine &self){return self.bInitialized;}, [](URuleEngine &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_property("DoLoadBalancing", [](URuleEngine &self){return self.DoLoadBalancing;}, [](URuleEngine &self, bool value){self.DoLoadBalancing = value ? 1 : 0;})
		.def_property("bForceFullUpdate", [](URuleEngine &self){return self.bForceFullUpdate;}, [](URuleEngine &self, bool value){self.bForceFullUpdate = value ? 1 : 0;})
		.def_property("OnlyIterateRulesForEvents", [](URuleEngine &self){return self.OnlyIterateRulesForEvents;}, [](URuleEngine &self, bool value){self.OnlyIterateRulesForEvents = value ? 1 : 0;})
		.def_property("bEventsCausedKnowledgeRecordUpdate", [](URuleEngine &self){return self.bEventsCausedKnowledgeRecordUpdate;}, [](URuleEngine &self, bool value){self.bEventsCausedKnowledgeRecordUpdate = value ? 1 : 0;})
		.def_property("EnableSnapshots", [](URuleEngine &self){return self.EnableSnapshots;}, [](URuleEngine &self, bool value){self.EnableSnapshots = value ? 1 : 0;})
		.def_readwrite("VfTable_IIFlagProvider", &URuleEngine::VfTable_IIFlagProvider, py::return_value_policy::reference)
		.def_readwrite("TheAIFactory", &URuleEngine::TheAIFactory, py::return_value_policy::reference)
		.def_readwrite("ActorProxy", &URuleEngine::ActorProxy, py::return_value_policy::reference)
		.def_readwrite("ThinkRate", &URuleEngine::ThinkRate)
		.def_readwrite("ElapsedTime", &URuleEngine::ElapsedTime)
		.def_readwrite("TickRate", &URuleEngine::TickRate)
		.def_readwrite("RuleSetTemplate", &URuleEngine::RuleSetTemplate, py::return_value_policy::reference)
		.def_readwrite("CurRuleSet", &URuleEngine::CurRuleSet, py::return_value_policy::reference)
		.def_readwrite("PendingRuleSetTemplate", &URuleEngine::PendingRuleSetTemplate, py::return_value_policy::reference)
		.def_readwrite("FlagInitialization", &URuleEngine::FlagInitialization, py::return_value_policy::reference)
		.def_readwrite("DynamicFlagDefinitions", &URuleEngine::DynamicFlagDefinitions, py::return_value_policy::reference)
		.def_readwrite("DynamicFlags", &URuleEngine::DynamicFlags, py::return_value_policy::reference)
		.def_readwrite("UnknownData00[0x3C]", &URuleEngine::UnknownData00[0x3C])
		.def_readwrite("KnowledgeDB", &URuleEngine::KnowledgeDB, py::return_value_policy::reference)
		.def_readwrite("RunningRules", &URuleEngine::RunningRules, py::return_value_policy::reference)
		.def_readwrite("ResourcesInUse", &URuleEngine::ResourcesInUse, py::return_value_policy::reference)
		.def_readwrite("MyTracker", &URuleEngine::MyTracker, py::return_value_policy::reference)
		.def_readwrite("RuleSetStack", &URuleEngine::RuleSetStack, py::return_value_policy::reference)
		.def_readwrite("QueuedRuleEvents", &URuleEngine::QueuedRuleEvents, py::return_value_policy::reference)
		.def_readwrite("LastFullUpdateTime", &URuleEngine::LastFullUpdateTime)
		.def_readwrite("MaxRuleSetPasses", &URuleEngine::MaxRuleSetPasses)
		.def_readwrite("KRCache", &URuleEngine::KRCache, py::return_value_policy::reference)
		.def_readwrite("LastTargetIteratorTime", &URuleEngine::LastTargetIteratorTime)
		.def_readwrite("LastTargetIteratorRuleEvalDiffTime", &URuleEngine::LastTargetIteratorRuleEvalDiffTime)
		.def_readwrite("AverageTargetIteratorRuleEvalDiffTime", &URuleEngine::AverageTargetIteratorRuleEvalDiffTime)
		.def_readwrite("WorstTargetIteratorRuleEvalDiffTime", &URuleEngine::WorstTargetIteratorRuleEvalDiffTime)
		.def_readwrite("ActivateTime", &URuleEngine::ActivateTime)
		.def_readwrite("RuleSetReferences", &URuleEngine::RuleSetReferences, py::return_value_policy::reference)
		.def("ApplyFlagInitializationData", &URuleEngine::ApplyFlagInitializationData)
		.def("IsResourceInUse", &URuleEngine::IsResourceInUse)
		.def("GetContextSource", &URuleEngine::GetContextSource, py::return_value_policy::reference)
		.def("IsRunningRuleWhichBlocksRuleSetChange", &URuleEngine::IsRunningRuleWhichBlocksRuleSetChange)
		.def("GetDynamicFlagValue", &URuleEngine::GetDynamicFlagValue)
		.def("SetDynamicFlagDefTrueTimed", &URuleEngine::SetDynamicFlagDefTrueTimed)
		.def("SetDynamicFlagDefValue", &URuleEngine::SetDynamicFlagDefValue)
		.def("GetRuleSetFromReference", &URuleEngine::GetRuleSetFromReference, py::return_value_policy::reference)
		.def("ClearRuleSetStack", &URuleEngine::ClearRuleSetStack)
		.def("PopRuleSetSwitch", &URuleEngine::PopRuleSetSwitch)
		.def("PushRuleSetSwitch", &URuleEngine::PushRuleSetSwitch)
		.def("SetRuleSet", &URuleEngine::SetRuleSet)
		.def("SwitchActiveRuleSet", &URuleEngine::SwitchActiveRuleSet)
		.def("UpdateKnowledge", &URuleEngine::UpdateKnowledge)
		.def("ActivateEventRuleEx", &URuleEngine::ActivateEventRuleEx)
		.def("CleanUpRuleEngineData", &URuleEngine::CleanUpRuleEngineData)
		.def("ActivateEventRule", &URuleEngine::ActivateEventRule)
		.def("ActivateEventRuleByDefinition", &URuleEngine::ActivateEventRuleByDefinition)
		;
	py::class_< UGearboxRuleEngine, UAudioDevice >(m, "UGearboxRuleEngine")
		.def_static("StaticClass", &UGearboxRuleEngine::StaticClass, py::return_value_policy::reference)
		.def_readwrite("MyGearboxPawn", &UGearboxRuleEngine::MyGearboxPawn, py::return_value_policy::reference)
		.def_readwrite("MyGearboxMind", &UGearboxRuleEngine::MyGearboxMind, py::return_value_policy::reference)
		.def("Initialize", &UGearboxRuleEngine::Initialize)
		.def("GetContextSource", &UGearboxRuleEngine::GetContextSource, py::return_value_policy::reference)
		;
	py::class_< URuleEventDef, UAudioDevice >(m, "URuleEventDef")
		.def_static("StaticClass", &URuleEventDef::StaticClass, py::return_value_policy::reference)
		.def_readwrite("EventDefName", &URuleEventDef::EventDefName, py::return_value_policy::reference)
		.def_readwrite("FlagActionOnEventTrigger", &URuleEventDef::FlagActionOnEventTrigger, py::return_value_policy::reference)
		;
	py::class_< URuleSet, UAudioDevice >(m, "URuleSet")
		.def_static("StaticClass", &URuleSet::StaticClass, py::return_value_policy::reference)
		.def_property("bInitialized", [](URuleSet &self){return self.bInitialized;}, [](URuleSet &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_property("bNewRuleEvaluationEnabled", [](URuleSet &self){return self.bNewRuleEvaluationEnabled;}, [](URuleSet &self, bool value){self.bNewRuleEvaluationEnabled = value ? 1 : 0;})
		.def_readwrite("TheAIFactory", &URuleSet::TheAIFactory, py::return_value_policy::reference)
		.def_readwrite("RuleTemplateRefs", &URuleSet::RuleTemplateRefs, py::return_value_policy::reference)
		.def_readwrite("Rules", &URuleSet::Rules, py::return_value_policy::reference)
		.def_readwrite("ToDiscard", &URuleSet::ToDiscard, py::return_value_policy::reference)
		.def_readwrite("RuleSetName", &URuleSet::RuleSetName, py::return_value_policy::reference)
		.def_readwrite("FlagsOnEntry", &URuleSet::FlagsOnEntry, py::return_value_policy::reference)
		.def_readwrite("FlagsOnExit", &URuleSet::FlagsOnExit, py::return_value_policy::reference)
		.def_readwrite("HACK_RuleSetsAllowedToFollow", &URuleSet::HACK_RuleSetsAllowedToFollow, py::return_value_policy::reference)
		;
	py::class_< UStateRuleSet, UAudioDevice >(m, "UStateRuleSet")
		.def_static("StaticClass", &UStateRuleSet::StaticClass, py::return_value_policy::reference)
		.def_property("bShowPawnInRadarWhenActive", [](UStateRuleSet &self){return self.bShowPawnInRadarWhenActive;}, [](UStateRuleSet &self, bool value){self.bShowPawnInRadarWhenActive = value ? 1 : 0;})
		.def_readwrite("StateRules", &UStateRuleSet::StateRules, py::return_value_policy::reference)
		.def_readwrite("StateAttributeMap", &UStateRuleSet::StateAttributeMap, py::return_value_policy::reference)
		;
	py::class_< USearchDirection, UAudioDevice >(m, "USearchDirection")
		.def_static("StaticClass", &USearchDirection::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_Any, UAudioDevice >(m, "USearchDirection_Any")
		.def_static("StaticClass", &USearchDirection_Any::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_AwayFromMe, UAudioDevice >(m, "USearchDirection_AwayFromMe")
		.def_static("StaticClass", &USearchDirection_AwayFromMe::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_AwayFromTarget, UAudioDevice >(m, "USearchDirection_AwayFromTarget")
		.def_static("StaticClass", &USearchDirection_AwayFromTarget::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_MyFacingDirection, UAudioDevice >(m, "USearchDirection_MyFacingDirection")
		.def_static("StaticClass", &USearchDirection_MyFacingDirection::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_OppositeMyFacingDirection, UAudioDevice >(m, "USearchDirection_OppositeMyFacingDirection")
		.def_static("StaticClass", &USearchDirection_OppositeMyFacingDirection::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_OppositeTargetsFacingDirection, UAudioDevice >(m, "USearchDirection_OppositeTargetsFacingDirection")
		.def_static("StaticClass", &USearchDirection_OppositeTargetsFacingDirection::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_RandomLeftOrRight, UAudioDevice >(m, "USearchDirection_RandomLeftOrRight")
		.def_static("StaticClass", &USearchDirection_RandomLeftOrRight::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_TargetsFacingDirection, UAudioDevice >(m, "USearchDirection_TargetsFacingDirection")
		.def_static("StaticClass", &USearchDirection_TargetsFacingDirection::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_ToMyLeft, UAudioDevice >(m, "USearchDirection_ToMyLeft")
		.def_static("StaticClass", &USearchDirection_ToMyLeft::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_ToMyRight, UAudioDevice >(m, "USearchDirection_ToMyRight")
		.def_static("StaticClass", &USearchDirection_ToMyRight::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_TowardMe, UAudioDevice >(m, "USearchDirection_TowardMe")
		.def_static("StaticClass", &USearchDirection_TowardMe::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchDirection_TowardTarget, UAudioDevice >(m, "USearchDirection_TowardTarget")
		.def_static("StaticClass", &USearchDirection_TowardTarget::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchOrigin, UAudioDevice >(m, "USearchOrigin")
		.def_static("StaticClass", &USearchOrigin::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchOrigin_CurrentLocation, UAudioDevice >(m, "USearchOrigin_CurrentLocation")
		.def_static("StaticClass", &USearchOrigin_CurrentLocation::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchOrigin_ScriptedMoveTarget, UAudioDevice >(m, "USearchOrigin_ScriptedMoveTarget")
		.def_static("StaticClass", &USearchOrigin_ScriptedMoveTarget::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USearchOrigin_TargetLocation, UAudioDevice >(m, "USearchOrigin_TargetLocation")
		.def_static("StaticClass", &USearchOrigin_TargetLocation::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USnapshotRecord, UAudioDevice >(m, "USnapshotRecord")
		.def_static("StaticClass", &USnapshotRecord::StaticClass, py::return_value_policy::reference)
		.def_readwrite("MyName", &USnapshotRecord::MyName, py::return_value_policy::reference)
		.def_readwrite("RuleSet", &USnapshotRecord::RuleSet, py::return_value_policy::reference)
		.def_readwrite("CurrentRules", &USnapshotRecord::CurrentRules, py::return_value_policy::reference)
		.def_readwrite("ContainedRules[0x2D]", &USnapshotRecord::ContainedRules[0x2D], py::return_value_policy::reference)
		.def_readwrite("SelectedRuleIdx", &USnapshotRecord::SelectedRuleIdx)
		.def_readwrite("SelectedSubRuleIdx", &USnapshotRecord::SelectedSubRuleIdx)
		.def_readwrite("ResourcesInUse", &USnapshotRecord::ResourcesInUse, py::return_value_policy::reference)
		.def_readwrite("Flags", &USnapshotRecord::Flags, py::return_value_policy::reference)
		.def_readwrite("Location", &USnapshotRecord::Location, py::return_value_policy::reference)
		.def_readwrite("Velocity", &USnapshotRecord::Velocity, py::return_value_policy::reference)
		.def_readwrite("Rotation", &USnapshotRecord::Rotation, py::return_value_policy::reference)
		.def_readwrite("RuleAffected", &USnapshotRecord::RuleAffected, py::return_value_policy::reference)
		.def_readwrite("Rule2Affected", &USnapshotRecord::Rule2Affected, py::return_value_policy::reference)
		.def_readwrite("SequenceAffected", &USnapshotRecord::SequenceAffected, py::return_value_policy::reference)
		.def_readwrite("Sequence2Affected", &USnapshotRecord::Sequence2Affected, py::return_value_policy::reference)
		.def_readwrite("Event", &USnapshotRecord::Event)
		.def_readwrite("RuleStartName", &USnapshotRecord::RuleStartName, py::return_value_policy::reference)
		.def_readwrite("RuleEndName", &USnapshotRecord::RuleEndName, py::return_value_policy::reference)
		.def_readwrite("RuleInterruptName", &USnapshotRecord::RuleInterruptName, py::return_value_policy::reference)
		.def_readwrite("ChildSequenceStartName", &USnapshotRecord::ChildSequenceStartName, py::return_value_policy::reference)
		.def_readwrite("SwitchRuleSetName", &USnapshotRecord::SwitchRuleSetName, py::return_value_policy::reference)
		.def_readwrite("PreventNewRulesName", &USnapshotRecord::PreventNewRulesName, py::return_value_policy::reference)
		.def_readwrite("RunningRulesColor", &USnapshotRecord::RunningRulesColor, py::return_value_policy::reference)
		.def_readwrite("StalledRulesColor", &USnapshotRecord::StalledRulesColor, py::return_value_policy::reference)
		.def_readwrite("NotRunningRulesColor", &USnapshotRecord::NotRunningRulesColor, py::return_value_policy::reference)
		.def_readwrite("DisabledRulesColor", &USnapshotRecord::DisabledRulesColor, py::return_value_policy::reference)
		.def_readwrite("FlagsColor", &USnapshotRecord::FlagsColor, py::return_value_policy::reference)
		.def_readwrite("ResourcesColor", &USnapshotRecord::ResourcesColor, py::return_value_policy::reference)
		;
	py::class_< UGearboxPawnSnapshotRecord, UAudioDevice >(m, "UGearboxPawnSnapshotRecord")
		.def_static("StaticClass", &UGearboxPawnSnapshotRecord::StaticClass, py::return_value_policy::reference)
		.def_property("CoverSearchWasFinalized", [](UGearboxPawnSnapshotRecord &self){return self.CoverSearchWasFinalized;}, [](UGearboxPawnSnapshotRecord &self, bool value){self.CoverSearchWasFinalized = value ? 1 : 0;})
		.def_readwrite("PawnIconZOffset", &UGearboxPawnSnapshotRecord::PawnIconZOffset)
		.def_readwrite("PawnExposureZOffset", &UGearboxPawnSnapshotRecord::PawnExposureZOffset)
		.def_readwrite("CollectionNameOffset", &UGearboxPawnSnapshotRecord::CollectionNameOffset)
		.def_readwrite("LastVisibleConnectionColor", &UGearboxPawnSnapshotRecord::LastVisibleConnectionColor, py::return_value_policy::reference)
		.def_readwrite("RouteColor", &UGearboxPawnSnapshotRecord::RouteColor, py::return_value_policy::reference)
		.def_readwrite("OriginalRouteColor", &UGearboxPawnSnapshotRecord::OriginalRouteColor, py::return_value_policy::reference)
		.def_readwrite("DestLineColor", &UGearboxPawnSnapshotRecord::DestLineColor, py::return_value_policy::reference)
		.def_readwrite("BestCoverColor", &UGearboxPawnSnapshotRecord::BestCoverColor, py::return_value_policy::reference)
		.def_readwrite("PotentialCoverColor", &UGearboxPawnSnapshotRecord::PotentialCoverColor, py::return_value_policy::reference)
		.def_readwrite("StandardCoverColor", &UGearboxPawnSnapshotRecord::StandardCoverColor, py::return_value_policy::reference)
		.def_readwrite("AIDebugTexture", &UGearboxPawnSnapshotRecord::AIDebugTexture, py::return_value_policy::reference)
		.def_readwrite("MyPawnName", &UGearboxPawnSnapshotRecord::MyPawnName, py::return_value_policy::reference)
		.def_readwrite("MyArchetypeName", &UGearboxPawnSnapshotRecord::MyArchetypeName, py::return_value_policy::reference)
		.def_readwrite("CurrentHealth", &UGearboxPawnSnapshotRecord::CurrentHealth)
		.def_readwrite("MaxHealth", &UGearboxPawnSnapshotRecord::MaxHealth)
		.def_readwrite("DistanceToBestTarget", &UGearboxPawnSnapshotRecord::DistanceToBestTarget)
		.def_readwrite("AwarenessZones", &UGearboxPawnSnapshotRecord::AwarenessZones, py::return_value_policy::reference)
		.def_readwrite("AwarenessCollectionName", &UGearboxPawnSnapshotRecord::AwarenessCollectionName, py::return_value_policy::reference)
		.def_readwrite("BestTarget", &UGearboxPawnSnapshotRecord::BestTarget, py::return_value_policy::reference)
		.def_readwrite("TargetLocs", &UGearboxPawnSnapshotRecord::TargetLocs, py::return_value_policy::reference)
		.def_readwrite("LastVisibleTargetLocs", &UGearboxPawnSnapshotRecord::LastVisibleTargetLocs, py::return_value_policy::reference)
		.def_readwrite("AnimTree", &UGearboxPawnSnapshotRecord::AnimTree, py::return_value_policy::reference)
		.def_readwrite("Bones", &UGearboxPawnSnapshotRecord::Bones, py::return_value_policy::reference)
		.def_readwrite("ForgottenTargets", &UGearboxPawnSnapshotRecord::ForgottenTargets, py::return_value_policy::reference)
		.def_readwrite("NewEnemyName", &UGearboxPawnSnapshotRecord::NewEnemyName, py::return_value_policy::reference)
		.def_readwrite("NewEnemyArchName", &UGearboxPawnSnapshotRecord::NewEnemyArchName, py::return_value_policy::reference)
		.def_readwrite("NewEnemyAwarenessReason", &UGearboxPawnSnapshotRecord::NewEnemyAwarenessReason)
		.def_readwrite("CurrentMoveSpeed", &UGearboxPawnSnapshotRecord::CurrentMoveSpeed)
		.def_readwrite("MaxDesiredMoveSpeed", &UGearboxPawnSnapshotRecord::MaxDesiredMoveSpeed)
		.def_readwrite("ReasonForMovementFinish", &UGearboxPawnSnapshotRecord::ReasonForMovementFinish)
		.def_readwrite("Exposure", &UGearboxPawnSnapshotRecord::Exposure, py::return_value_policy::reference)
		.def_readwrite("DummyMesh", &UGearboxPawnSnapshotRecord::DummyMesh, py::return_value_policy::reference)
		.def_readwrite("DummyMesh_LOD", &UGearboxPawnSnapshotRecord::DummyMesh_LOD)
		.def_readwrite("TargetViewCones", &UGearboxPawnSnapshotRecord::TargetViewCones, py::return_value_policy::reference)
		.def_readwrite("PawnLocalDestination", &UGearboxPawnSnapshotRecord::PawnLocalDestination, py::return_value_policy::reference)
		.def_readwrite("FailedMoveSpots", &UGearboxPawnSnapshotRecord::FailedMoveSpots, py::return_value_policy::reference)
		.def_readwrite("RouteCache", &UGearboxPawnSnapshotRecord::RouteCache, py::return_value_policy::reference)
		.def_readwrite("OriginalRouteCache", &UGearboxPawnSnapshotRecord::OriginalRouteCache, py::return_value_policy::reference)
		.def_readwrite("DesiredCoverLocation", &UGearboxPawnSnapshotRecord::DesiredCoverLocation, py::return_value_policy::reference)
		.def_readwrite("CurrentCoverLocation", &UGearboxPawnSnapshotRecord::CurrentCoverLocation, py::return_value_policy::reference)
		.def_readwrite("ScriptedMoveTargetLocation", &UGearboxPawnSnapshotRecord::ScriptedMoveTargetLocation, py::return_value_policy::reference)
		.def_readwrite("CoverSearchInnerRadius", &UGearboxPawnSnapshotRecord::CoverSearchInnerRadius)
		.def_readwrite("CoverSearchOuterRadius", &UGearboxPawnSnapshotRecord::CoverSearchOuterRadius)
		.def_readwrite("CoverSearchAngle", &UGearboxPawnSnapshotRecord::CoverSearchAngle)
		.def_readwrite("CoverSearchOrigin", &UGearboxPawnSnapshotRecord::CoverSearchOrigin, py::return_value_policy::reference)
		.def_readwrite("CoverSearchDirection", &UGearboxPawnSnapshotRecord::CoverSearchDirection, py::return_value_policy::reference)
		.def_readwrite("CoverSlotDebugList", &UGearboxPawnSnapshotRecord::CoverSlotDebugList, py::return_value_policy::reference)
		.def_readwrite("ICON_BLUELOCATION", &UGearboxPawnSnapshotRecord::ICON_BLUELOCATION, py::return_value_policy::reference)
		.def_readwrite("ICON_YELLOWLOCATION", &UGearboxPawnSnapshotRecord::ICON_YELLOWLOCATION, py::return_value_policy::reference)
		.def_readwrite("ICON_QUESTIONMARK", &UGearboxPawnSnapshotRecord::ICON_QUESTIONMARK, py::return_value_policy::reference)
		.def_readwrite("ICON_EXCLAMATIONPOINT", &UGearboxPawnSnapshotRecord::ICON_EXCLAMATIONPOINT, py::return_value_policy::reference)
		.def_readwrite("ICON_REDARROW", &UGearboxPawnSnapshotRecord::ICON_REDARROW, py::return_value_policy::reference)
		.def_readwrite("ICON_GREENARROW", &UGearboxPawnSnapshotRecord::ICON_GREENARROW, py::return_value_policy::reference)
		.def_readwrite("ICON_FAILED_MOVE_DEST", &UGearboxPawnSnapshotRecord::ICON_FAILED_MOVE_DEST, py::return_value_policy::reference)
		.def_readwrite("ICON_GREENCIRCLE", &UGearboxPawnSnapshotRecord::ICON_GREENCIRCLE, py::return_value_policy::reference)
		.def_readwrite("ICON_PATHPOINT", &UGearboxPawnSnapshotRecord::ICON_PATHPOINT, py::return_value_policy::reference)
		.def_readwrite("ICON_CURRENTCOVER", &UGearboxPawnSnapshotRecord::ICON_CURRENTCOVER, py::return_value_policy::reference)
		.def_readwrite("ICON_DESIREDCOVER", &UGearboxPawnSnapshotRecord::ICON_DESIREDCOVER, py::return_value_policy::reference)
		.def_readwrite("ICON_SCRIPTEDMOVETARGET", &UGearboxPawnSnapshotRecord::ICON_SCRIPTEDMOVETARGET, py::return_value_policy::reference)
		.def_readwrite("TargetData", &UGearboxPawnSnapshotRecord::TargetData, py::return_value_policy::reference)
		.def_readwrite("Holds", &UGearboxPawnSnapshotRecord::Holds, py::return_value_policy::reference)
		.def_readwrite("TargetHolds", &UGearboxPawnSnapshotRecord::TargetHolds, py::return_value_policy::reference)
		.def_readwrite("MovementHolds", &UGearboxPawnSnapshotRecord::MovementHolds, py::return_value_policy::reference)
		.def_readwrite("DemigodHolds", &UGearboxPawnSnapshotRecord::DemigodHolds, py::return_value_policy::reference)
		.def_readwrite("GodHolds", &UGearboxPawnSnapshotRecord::GodHolds, py::return_value_policy::reference)
		;
	py::class_< UTargetingDefinition, UAudioDevice >(m, "UTargetingDefinition")
		.def_static("StaticClass", &UTargetingDefinition::StaticClass, py::return_value_policy::reference)
		.def_property("bCanTargetFriendlies", [](UTargetingDefinition &self){return self.bCanTargetFriendlies;}, [](UTargetingDefinition &self, bool value){self.bCanTargetFriendlies = value ? 1 : 0;})
		.def_property("bOverrideSearchRadius", [](UTargetingDefinition &self){return self.bOverrideSearchRadius;}, [](UTargetingDefinition &self, bool value){self.bOverrideSearchRadius = value ? 1 : 0;})
		.def_readwrite("Knowledge", &UTargetingDefinition::Knowledge, py::return_value_policy::reference)
		.def_readwrite("Prioritization", &UTargetingDefinition::Prioritization, py::return_value_policy::reference)
		.def_readwrite("CanTargetIf", &UTargetingDefinition::CanTargetIf, py::return_value_policy::reference)
		.def_readwrite("StopTargetingIf", &UTargetingDefinition::StopTargetingIf, py::return_value_policy::reference)
		.def_readwrite("CanTargetFriendliesIf", &UTargetingDefinition::CanTargetFriendliesIf, py::return_value_policy::reference)
		.def_readwrite("SearchRadius", &UTargetingDefinition::SearchRadius)
		;
	py::class_< UTargetIterator, UAudioDevice >(m, "UTargetIterator")
		.def_static("StaticClass", &UTargetIterator::StaticClass, py::return_value_policy::reference)
		.def_readwrite("IteratorType", &UTargetIterator::IteratorType)
		.def_readwrite("BarGraphShortName", &UTargetIterator::BarGraphShortName, py::return_value_policy::reference)
		.def("eventRecordEvalCallback", &UTargetIterator::eventRecordEvalCallback)
		;
	py::class_< UTargetIteratorCalculateDistance, UAudioDevice >(m, "UTargetIteratorCalculateDistance")
		.def_static("StaticClass", &UTargetIteratorCalculateDistance::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTargetIteratorCalculateExposure, UAudioDevice >(m, "UTargetIteratorCalculateExposure")
		.def_static("StaticClass", &UTargetIteratorCalculateExposure::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTargetIteratorCheckAwareness, UAudioDevice >(m, "UTargetIteratorCheckAwareness")
		.def_static("StaticClass", &UTargetIteratorCheckAwareness::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTargetIteratorCheckRemoveTarget, UAudioDevice >(m, "UTargetIteratorCheckRemoveTarget")
		.def_static("StaticClass", &UTargetIteratorCheckRemoveTarget::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTargetIteratorForgetAboutTarget, UAudioDevice >(m, "UTargetIteratorForgetAboutTarget")
		.def_static("StaticClass", &UTargetIteratorForgetAboutTarget::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTargetIteratorPrioritizeTargetsIAmExposedTo, UAudioDevice >(m, "UTargetIteratorPrioritizeTargetsIAmExposedTo")
		.def_static("StaticClass", &UTargetIteratorPrioritizeTargetsIAmExposedTo::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTI_Calc, UAudioDevice >(m, "UTI_Calc")
		.def_static("StaticClass", &UTI_Calc::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTI_Prioritize, UAudioDevice >(m, "UTI_Prioritize")
		.def_static("StaticClass", &UTI_Prioritize::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Weight", &UTI_Prioritize::Weight)
		;
	py::class_< UTargetIteratorPrioritizeExposedTargets, UAudioDevice >(m, "UTargetIteratorPrioritizeExposedTargets")
		.def_static("StaticClass", &UTargetIteratorPrioritizeExposedTargets::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTargetIteratorPrioritizeHumanTargets, UAudioDevice >(m, "UTargetIteratorPrioritizeHumanTargets")
		.def_static("StaticClass", &UTargetIteratorPrioritizeHumanTargets::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTargetIteratorPrioritizeNearbyTarget, UAudioDevice >(m, "UTargetIteratorPrioritizeNearbyTarget")
		.def_static("StaticClass", &UTargetIteratorPrioritizeNearbyTarget::StaticClass, py::return_value_policy::reference)
		.def_readwrite("MaxDistance", &UTargetIteratorPrioritizeNearbyTarget::MaxDistance)
		;
	py::class_< UTargetIteratorPrioritizePreviousTarget, UAudioDevice >(m, "UTargetIteratorPrioritizePreviousTarget")
		.def_static("StaticClass", &UTargetIteratorPrioritizePreviousTarget::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTargetIteratorPrioritizeTargetNotBeingShotAt, UAudioDevice >(m, "UTargetIteratorPrioritizeTargetNotBeingShotAt")
		.def_static("StaticClass", &UTargetIteratorPrioritizeTargetNotBeingShotAt::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTargetIteratorPrioritizeTargetWhoShootsAtMe, UAudioDevice >(m, "UTargetIteratorPrioritizeTargetWhoShootsAtMe")
		.def_static("StaticClass", &UTargetIteratorPrioritizeTargetWhoShootsAtMe::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTI_PrioritizeBonus, UAudioDevice >(m, "UTI_PrioritizeBonus")
		.def_static("StaticClass", &UTI_PrioritizeBonus::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UTI_PrioritizeConditional, UAudioDevice >(m, "UTI_PrioritizeConditional")
		.def_static("StaticClass", &UTI_PrioritizeConditional::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Condition", &UTI_PrioritizeConditional::Condition, py::return_value_policy::reference)
		;
	py::class_< UGearboxSeqAct_PopulationOpportunityLink, UAudioDevice >(m, "UGearboxSeqAct_PopulationOpportunityLink")
		.def_static("StaticClass", &UGearboxSeqAct_PopulationOpportunityLink::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CloneOpportunities", &UGearboxSeqAct_PopulationOpportunityLink::CloneOpportunities, py::return_value_policy::reference)
		;
	py::class_< UIPopulationSpawnPoint, UAudioDevice >(m, "UIPopulationSpawnPoint")
		.def_static("StaticClass", &UIPopulationSpawnPoint::StaticClass, py::return_value_policy::reference)
		.def("GetInitialMovementHoldTime", &UIPopulationSpawnPoint::GetInitialMovementHoldTime)
		.def("GetInitialDestination", &UIPopulationSpawnPoint::GetInitialDestination, py::return_value_policy::reference)
		.def("GetInitialActionType", &UIPopulationSpawnPoint::GetInitialActionType)
		.def("GetSpawnStyleType", &UIPopulationSpawnPoint::GetSpawnStyleType)
		;
	py::class_< UPopulationDefinition, UAudioDevice >(m, "UPopulationDefinition")
		.def_static("StaticClass", &UPopulationDefinition::StaticClass, py::return_value_policy::reference)
		.def_property("bTotalResetOnLevelLoad", [](UPopulationDefinition &self){return self.bTotalResetOnLevelLoad;}, [](UPopulationDefinition &self, bool value){self.bTotalResetOnLevelLoad = value ? 1 : 0;})
		.def_readwrite("VfTable_IIConstructObject", &UPopulationDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("ActorArchetypeList", &UPopulationDefinition::ActorArchetypeList, py::return_value_policy::reference)
		.def_readwrite("RespawnStyle", &UPopulationDefinition::RespawnStyle)
		.def("IsAllSpawnTypesDebugEnabled", &UPopulationDefinition::IsAllSpawnTypesDebugEnabled)
		.def("ToggleAllSpawnTypesDebug", &UPopulationDefinition::ToggleAllSpawnTypesDebug)
		.def("GetRandomFactory", &UPopulationDefinition::GetRandomFactory, py::return_value_policy::reference)
		;
	py::class_< UPopulationFactory, UAudioDevice >(m, "UPopulationFactory")
		.def_static("StaticClass", &UPopulationFactory::StaticClass, py::return_value_policy::reference)
		.def_property("bIsCriticalActor", [](UPopulationFactory &self){return self.bIsCriticalActor;}, [](UPopulationFactory &self, bool value){self.bIsCriticalActor = value ? 1 : 0;})
		.def_property("bUseSavedLocationWhenRestored", [](UPopulationFactory &self){return self.bUseSavedLocationWhenRestored;}, [](UPopulationFactory &self, bool value){self.bUseSavedLocationWhenRestored = value ? 1 : 0;})
		.def_property("UseCostOverride", [](UPopulationFactory &self){return self.UseCostOverride;}, [](UPopulationFactory &self, bool value){self.UseCostOverride = value ? 1 : 0;})
		.def_readwrite("VfTable_IIConstructObject", &UPopulationFactory::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("OnActorSpawn", &UPopulationFactory::OnActorSpawn, py::return_value_policy::reference)
		.def_readwrite("DestructionParams", &UPopulationFactory::DestructionParams, py::return_value_policy::reference)
		.def_readwrite("SpawnCostOverride", &UPopulationFactory::SpawnCostOverride)
		.def("eventGetDescriptionOfFactoryOutput", &UPopulationFactory::eventGetDescriptionOfFactoryOutput, py::return_value_policy::reference)
		.def("eventShouldSavePopulationActor", &UPopulationFactory::eventShouldSavePopulationActor)
		.def("eventDestroyPopulationActor", &UPopulationFactory::eventDestroyPopulationActor)
		.def("eventCreatePopulationActor", &UPopulationFactory::eventCreatePopulationActor, py::return_value_policy::reference)
		.def("eventGetSpawnVisibilityBounds", &UPopulationFactory::eventGetSpawnVisibilityBounds, py::return_value_policy::reference)
		.def("GetActorAllegiance", &UPopulationFactory::GetActorAllegiance, py::return_value_policy::reference)
		.def("eventGetActorSpawnCost", &UPopulationFactory::eventGetActorSpawnCost)
		.def("eventOnSpawnActor", &UPopulationFactory::eventOnSpawnActor)
		.def("eventSetupMatineeForActor", &UPopulationFactory::eventSetupMatineeForActor)
		.def("GetSpawnFactory", &UPopulationFactory::GetSpawnFactory, py::return_value_policy::reference)
		.def("GetSpawnProbabilityAtThisGameStage", &UPopulationFactory::GetSpawnProbabilityAtThisGameStage)
		.def("IsFactoryWithin", &UPopulationFactory::IsFactoryWithin)
		.def("CanSpawn", &UPopulationFactory::CanSpawn)
		;
	py::class_< UPopulationFactoryGeneric, UAudioDevice >(m, "UPopulationFactoryGeneric")
		.def_static("StaticClass", &UPopulationFactoryGeneric::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ActorArchetype", &UPopulationFactoryGeneric::ActorArchetype, py::return_value_policy::reference)
		.def("eventCreatePopulationActor", &UPopulationFactoryGeneric::eventCreatePopulationActor, py::return_value_policy::reference)
		.def("eventGetSpawnVisibilityBounds", &UPopulationFactoryGeneric::eventGetSpawnVisibilityBounds, py::return_value_policy::reference)
		;
	py::class_< UPopulationFactoryPopulationDefinition, UAudioDevice >(m, "UPopulationFactoryPopulationDefinition")
		.def_static("StaticClass", &UPopulationFactoryPopulationDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("PopulationDef", &UPopulationFactoryPopulationDefinition::PopulationDef, py::return_value_policy::reference)
		.def("GetSpawnFactory", &UPopulationFactoryPopulationDefinition::GetSpawnFactory, py::return_value_policy::reference)
		.def("GetActorAllegiance", &UPopulationFactoryPopulationDefinition::GetActorAllegiance, py::return_value_policy::reference)
		.def("IsFactoryWithin", &UPopulationFactoryPopulationDefinition::IsFactoryWithin)
		;
	py::class_< UPopulationMaster, UAudioDevice >(m, "UPopulationMaster")
		.def_static("StaticClass", &UPopulationMaster::StaticClass, py::return_value_policy::reference)
		.def_property("bHasActorsReadyToDeleteIfSpaceIsNeeded", [](UPopulationMaster &self){return self.bHasActorsReadyToDeleteIfSpaceIsNeeded;}, [](UPopulationMaster &self, bool value){self.bHasActorsReadyToDeleteIfSpaceIsNeeded = value ? 1 : 0;})
		.def_property("bShutdownAIWhenIrrelevant", [](UPopulationMaster &self){return self.bShutdownAIWhenIrrelevant;}, [](UPopulationMaster &self, bool value){self.bShutdownAIWhenIrrelevant = value ? 1 : 0;})
		.def_readwrite("OpportunityList", &UPopulationMaster::OpportunityList, py::return_value_policy::reference)
		.def_readwrite("ActiveActorCost", &UPopulationMaster::ActiveActorCost)
		.def_readwrite("MaxActorCost", &UPopulationMaster::MaxActorCost)
		.def_readwrite("MasterThinkRate", &UPopulationMaster::MasterThinkRate)
		.def_readwrite("MasterTestForDestroyRate", &UPopulationMaster::MasterTestForDestroyRate)
		.def_readwrite("IfIrrelevantDestroyTimeout", &UPopulationMaster::IfIrrelevantDestroyTimeout)
		.def_readwrite("PopulationMasterStats", &UPopulationMaster::PopulationMasterStats, py::return_value_policy::reference)
		.def_readwrite("EncounterList", &UPopulationMaster::EncounterList, py::return_value_policy::reference)
		.def_readwrite("SecondsElapsed", &UPopulationMaster::SecondsElapsed)
		.def_readwrite("NextOpportunityTickTime", &UPopulationMaster::NextOpportunityTickTime)
		.def_readwrite("NextDestroyTestTickTime", &UPopulationMaster::NextDestroyTestTickTime)
		.def_readwrite("PopulationRespawnDelayInSeconds", &UPopulationMaster::PopulationRespawnDelayInSeconds)
		.def("GetActorSpawnedFromOpportunity", &UPopulationMaster::GetActorSpawnedFromOpportunity, py::return_value_policy::reference)
		.def("GetSavedActorDebugInfoForOpportunity", &UPopulationMaster::GetSavedActorDebugInfoForOpportunity)
		.def("GetNumberOfSavedActorsForOpportunity", &UPopulationMaster::GetNumberOfSavedActorsForOpportunity)
		.def("WillActorsOpportunityBeResetOnLevelLoad", &UPopulationMaster::WillActorsOpportunityBeResetOnLevelLoad)
		.def("ResetRespawn", &UPopulationMaster::ResetRespawn)
		.def("GetStreamingLevelForActor", &UPopulationMaster::GetStreamingLevelForActor, py::return_value_policy::reference)
		.def("HasCapacityToSpawnFromFactories", &UPopulationMaster::HasCapacityToSpawnFromFactories)
		.def("HasCapacityToSpawnFromFactory", &UPopulationMaster::HasCapacityToSpawnFromFactory)
		.def("IsPopulationSystemAtCapacity", &UPopulationMaster::IsPopulationSystemAtCapacity)
		.def("StatProfileStop", &UPopulationMaster::StatProfileStop)
		.def("StatProfileStart", &UPopulationMaster::StatProfileStart)
		.def("GetStatProfileTime", &UPopulationMaster::GetStatProfileTime)
		.def("AddSavedActor", &UPopulationMaster::AddSavedActor)
		.def("DisconnectEncounter", &UPopulationMaster::DisconnectEncounter)
		.def("ConnectEncounter", &UPopulationMaster::ConnectEncounter)
		.def("DisconnectOpportunity", &UPopulationMaster::DisconnectOpportunity)
		.def("ConnectOpportunity", &UPopulationMaster::ConnectOpportunity)
		.def("GetWorldInfo", &UPopulationMaster::GetWorldInfo, py::return_value_policy::reference)
		.def("DestroySpawnedActors", &UPopulationMaster::DestroySpawnedActors)
		.def("RemoveSpawnedActor", &UPopulationMaster::RemoveSpawnedActor)
		.def("SetSpawnedActorsReuse", &UPopulationMaster::SetSpawnedActorsReuse)
		.def("AddExternalActor", &UPopulationMaster::AddExternalActor)
		.def("SpawnActorFromOpportunity", &UPopulationMaster::SpawnActorFromOpportunity, py::return_value_policy::reference)
		.def("SpawnActor", &UPopulationMaster::SpawnActor, py::return_value_policy::reference)
		.def("GetPopulationOpportunityIndex", &UPopulationMaster::GetPopulationOpportunityIndex)
		.def("GetActorsOpportunity", &UPopulationMaster::GetActorsOpportunity, py::return_value_policy::reference)
		.def("SpawnPopulationControlledActor", &UPopulationMaster::SpawnPopulationControlledActor, py::return_value_policy::reference)
		;
	py::class_< APopulationOpportunity, UAudioDevice >(m, "APopulationOpportunity")
		.def_static("StaticClass", &APopulationOpportunity::StaticClass, py::return_value_policy::reference)
		.def_property("IsEnabled", [](APopulationOpportunity &self){return self.IsEnabled;}, [](APopulationOpportunity &self, bool value){self.IsEnabled = value ? 1 : 0;})
		.def_property("bNoRespawning", [](APopulationOpportunity &self){return self.bNoRespawning;}, [](APopulationOpportunity &self, bool value){self.bNoRespawning = value ? 1 : 0;})
		.def_property("bIsWaitingForRespawn", [](APopulationOpportunity &self){return self.bIsWaitingForRespawn;}, [](APopulationOpportunity &self, bool value){self.bIsWaitingForRespawn = value ? 1 : 0;})
		.def_property("bUseRandomSpawns", [](APopulationOpportunity &self){return self.bUseRandomSpawns;}, [](APopulationOpportunity &self, bool value){self.bUseRandomSpawns = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBodyCompositionInstance", &APopulationOpportunity::VfTable_IIBodyCompositionInstance, py::return_value_policy::reference)
		.def_readwrite("CleanupParams", &APopulationOpportunity::CleanupParams, py::return_value_policy::reference)
		.def_readwrite("SpawnPoints", &APopulationOpportunity::SpawnPoints, py::return_value_policy::reference)
		.def_readwrite("StreamingLevel", &APopulationOpportunity::StreamingLevel, py::return_value_policy::reference)
		.def_readwrite("SystemID", &APopulationOpportunity::SystemID)
		.def_readwrite("NextInitialDestinationIdx", &APopulationOpportunity::NextInitialDestinationIdx)
		.def_readwrite("SequenceActionLink", &APopulationOpportunity::SequenceActionLink, py::return_value_policy::reference)
		.def_readwrite("LastTimeBlockedFromSpawningDueToPopLimits", &APopulationOpportunity::LastTimeBlockedFromSpawningDueToPopLimits)
		.def_readwrite("RespawnDelayStartTime", &APopulationOpportunity::RespawnDelayStartTime)
		.def_readwrite("GameStageRegion", &APopulationOpportunity::GameStageRegion, py::return_value_policy::reference)
		.def_readwrite("Aspect", &APopulationOpportunity::Aspect, py::return_value_policy::reference)
		.def_readwrite("SpawnIndex", &APopulationOpportunity::SpawnIndex)
		.def_readwrite("SpawnList", &APopulationOpportunity::SpawnList, py::return_value_policy::reference)
		.def_readwrite("InclusiveSpawnIndex", &APopulationOpportunity::InclusiveSpawnIndex)
		.def_readwrite("InclusiveSpawnList", &APopulationOpportunity::InclusiveSpawnList, py::return_value_policy::reference)
		.def("ClearBodyCompositionInstance", &APopulationOpportunity::ClearBodyCompositionInstance)
		.def("ApplyPreviewBodyComposition", &APopulationOpportunity::ApplyPreviewBodyComposition)
		.def("GetBodyInfoProvider", &APopulationOpportunity::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("ChangeInstanceDataSwitch", &APopulationOpportunity::ChangeInstanceDataSwitch)
		.def("PostInitBodyComposition", &APopulationOpportunity::PostInitBodyComposition)
		.def("PreRemoveBodyComposition", &APopulationOpportunity::PreRemoveBodyComposition)
		.def("GetNumSpawned", &APopulationOpportunity::GetNumSpawned)
		.def("GetNumAlive", &APopulationOpportunity::GetNumAlive)
		.def("GetNumDied", &APopulationOpportunity::GetNumDied)
		.def("eventDestroyed", &APopulationOpportunity::eventDestroyed)
		.def("GetRarity", &APopulationOpportunity::GetRarity)
		.def("GetGameStage", &APopulationOpportunity::GetGameStage)
		.def("GetOpportunityGameStage", &APopulationOpportunity::GetOpportunityGameStage)
		.def("eventTriggerKismetAllSpawnedEvent", &APopulationOpportunity::eventTriggerKismetAllSpawnedEvent)
		.def("eventClearSequenceActionLink", &APopulationOpportunity::eventClearSequenceActionLink)
		.def("eventSetSequenceActionLink", &APopulationOpportunity::eventSetSequenceActionLink)
		.def("SetEnabledStatus", &APopulationOpportunity::SetEnabledStatus)
		.def("OnToggle", &APopulationOpportunity::OnToggle)
		.def("GetNumLeftToSpawnAndStillAlive", &APopulationOpportunity::GetNumLeftToSpawnAndStillAlive)
		.def("GetNextSpawnTime", &APopulationOpportunity::GetNextSpawnTime)
		.def("RespawnKilledActors", &APopulationOpportunity::RespawnKilledActors)
		.def("DoSpawning", &APopulationOpportunity::DoSpawning)
		;
	py::class_< APopulationOpportunityArea, UAudioDevice >(m, "APopulationOpportunityArea")
		.def_static("StaticClass", &APopulationOpportunityArea::StaticClass, py::return_value_policy::reference)
		.def_property("bContinueSpawningAfterPlayerDetected", [](APopulationOpportunityArea &self){return self.bContinueSpawningAfterPlayerDetected;}, [](APopulationOpportunityArea &self, bool value){self.bContinueSpawningAfterPlayerDetected = value ? 1 : 0;})
		.def_property("bOpportunityVolume", [](APopulationOpportunityArea &self){return self.bOpportunityVolume;}, [](APopulationOpportunityArea &self, bool value){self.bOpportunityVolume = value ? 1 : 0;})
		.def_property("bOpportunityRadius", [](APopulationOpportunityArea &self){return self.bOpportunityRadius;}, [](APopulationOpportunityArea &self, bool value){self.bOpportunityRadius = value ? 1 : 0;})
		.def_property("bOpportunityLevel", [](APopulationOpportunityArea &self){return self.bOpportunityLevel;}, [](APopulationOpportunityArea &self, bool value){self.bOpportunityLevel = value ? 1 : 0;})
		.def_property("bPlayerHasBeenDetected", [](APopulationOpportunityArea &self){return self.bPlayerHasBeenDetected;}, [](APopulationOpportunityArea &self, bool value){self.bPlayerHasBeenDetected = value ? 1 : 0;})
		.def_readwrite("SpawnOptions", &APopulationOpportunityArea::SpawnOptions, py::return_value_policy::reference)
		.def_readwrite("DetectionVolumes", &APopulationOpportunityArea::DetectionVolumes, py::return_value_policy::reference)
		.def_readwrite("DetectionRadius", &APopulationOpportunityArea::DetectionRadius)
		.def_readwrite("SelectedSpawnIdx", &APopulationOpportunityArea::SelectedSpawnIdx)
		.def_readwrite("SpawnData", &APopulationOpportunityArea::SpawnData, py::return_value_policy::reference)
		.def_readwrite("PlayersDetected", &APopulationOpportunityArea::PlayersDetected, py::return_value_policy::reference)
		.def_readwrite("NumPlayersDetected", &APopulationOpportunityArea::NumPlayersDetected)
		.def("ApplyPreviewBodyComposition", &APopulationOpportunityArea::ApplyPreviewBodyComposition)
		.def("GetBodyInfoProvider", &APopulationOpportunityArea::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("RespawnKilledActors", &APopulationOpportunityArea::RespawnKilledActors)
		.def("DoSpawning", &APopulationOpportunityArea::DoSpawning)
		;
	py::class_< APopulationOpportunityCloner, UAudioDevice >(m, "APopulationOpportunityCloner")
		.def_static("StaticClass", &APopulationOpportunityCloner::StaticClass, py::return_value_policy::reference)
		.def_property("bTotalResetOnLevelLoad", [](APopulationOpportunityCloner &self){return self.bTotalResetOnLevelLoad;}, [](APopulationOpportunityCloner &self, bool value){self.bTotalResetOnLevelLoad = value ? 1 : 0;})
		.def_property("bReadyToSpawn", [](APopulationOpportunityCloner &self){return self.bReadyToSpawn;}, [](APopulationOpportunityCloner &self, bool value){self.bReadyToSpawn = value ? 1 : 0;})
		.def_readwrite("Conditions", &APopulationOpportunityCloner::Conditions, py::return_value_policy::reference)
		.def_readwrite("SpawnFactory", &APopulationOpportunityCloner::SpawnFactory, py::return_value_policy::reference)
		.def_readwrite("MaxTotalActors", &APopulationOpportunityCloner::MaxTotalActors)
		.def_readwrite("MaxActiveActors", &APopulationOpportunityCloner::MaxActiveActors)
		.def_readwrite("RespawnStyle", &APopulationOpportunityCloner::RespawnStyle)
		.def_readwrite("RespawnDelay", &APopulationOpportunityCloner::RespawnDelay)
		.def_readwrite("RespawnDelayAfterDeath", &APopulationOpportunityCloner::RespawnDelayAfterDeath)
		.def_readwrite("NumTotalActors", &APopulationOpportunityCloner::NumTotalActors)
		.def_readwrite("NumActiveActors", &APopulationOpportunityCloner::NumActiveActors)
		.def("ApplyPreviewBodyComposition", &APopulationOpportunityCloner::ApplyPreviewBodyComposition)
		.def("GetBodyInfoProvider", &APopulationOpportunityCloner::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("CloneTimer", &APopulationOpportunityCloner::CloneTimer)
		.def("RespawnKilledActors", &APopulationOpportunityCloner::RespawnKilledActors)
		.def("DoSpawning", &APopulationOpportunityCloner::DoSpawning)
		;
	py::class_< APopulationOpportunityCombat, UAudioDevice >(m, "APopulationOpportunityCombat")
		.def_static("StaticClass", &APopulationOpportunityCombat::StaticClass, py::return_value_policy::reference)
		.def_property("bAdjustForPlayerCount", [](APopulationOpportunityCombat &self){return self.bAdjustForPlayerCount;}, [](APopulationOpportunityCombat &self, bool value){self.bAdjustForPlayerCount = value ? 1 : 0;})
		.def_property("bOpportunityVolume", [](APopulationOpportunityCombat &self){return self.bOpportunityVolume;}, [](APopulationOpportunityCombat &self, bool value){self.bOpportunityVolume = value ? 1 : 0;})
		.def_property("bOpportunityRadius", [](APopulationOpportunityCombat &self){return self.bOpportunityRadius;}, [](APopulationOpportunityCombat &self, bool value){self.bOpportunityRadius = value ? 1 : 0;})
		.def_property("bPlayerHasBeenDetected", [](APopulationOpportunityCombat &self){return self.bPlayerHasBeenDetected;}, [](APopulationOpportunityCombat &self, bool value){self.bPlayerHasBeenDetected = value ? 1 : 0;})
		.def_property("bShowDebugEnabled", [](APopulationOpportunityCombat &self){return self.bShowDebugEnabled;}, [](APopulationOpportunityCombat &self, bool value){self.bShowDebugEnabled = value ? 1 : 0;})
		.def_readwrite("VfTable_IIGbxMessageListener", &APopulationOpportunityCombat::VfTable_IIGbxMessageListener, py::return_value_policy::reference)
		.def_readwrite("ParentEncounter", &APopulationOpportunityCombat::ParentEncounter, py::return_value_policy::reference)
		.def_readwrite("ParentEncounterWave", &APopulationOpportunityCombat::ParentEncounterWave)
		.def_readwrite("PopulationDef", &APopulationOpportunityCombat::PopulationDef, py::return_value_policy::reference)
		.def_readwrite("MaxTotalActorsFormula", &APopulationOpportunityCombat::MaxTotalActorsFormula, py::return_value_policy::reference)
		.def_readwrite("MaxTotalActors", &APopulationOpportunityCombat::MaxTotalActors)
		.def_readwrite("MaxActiveActorsIsNormal", &APopulationOpportunityCombat::MaxActiveActorsIsNormal)
		.def_readwrite("MaxActiveActorsThreatened", &APopulationOpportunityCombat::MaxActiveActorsThreatened)
		.def_readwrite("RespawnDelayFormula", &APopulationOpportunityCombat::RespawnDelayFormula, py::return_value_policy::reference)
		.def_readwrite("DetectionVolumes", &APopulationOpportunityCombat::DetectionVolumes, py::return_value_policy::reference)
		.def_readwrite("DetectionRadius", &APopulationOpportunityCombat::DetectionRadius)
		.def_readwrite("OpportunityHeight", &APopulationOpportunityCombat::OpportunityHeight)
		.def_readwrite("RadiusDebugColor", &APopulationOpportunityCombat::RadiusDebugColor, py::return_value_policy::reference)
		.def_readwrite("RespawnDelay", &APopulationOpportunityCombat::RespawnDelay)
		.def_readwrite("DetectionDrawSphere", &APopulationOpportunityCombat::DetectionDrawSphere, py::return_value_policy::reference)
		.def_readwrite("ActivePlayerScale", &APopulationOpportunityCombat::ActivePlayerScale)
		.def_readwrite("SpawnedMembers", &APopulationOpportunityCombat::SpawnedMembers, py::return_value_policy::reference)
		.def_readwrite("SpawnData", &APopulationOpportunityCombat::SpawnData, py::return_value_policy::reference)
		.def_readwrite("PlayersDetected", &APopulationOpportunityCombat::PlayersDetected, py::return_value_policy::reference)
		.def_readwrite("NumPlayersDetected", &APopulationOpportunityCombat::NumPlayersDetected)
		.def("ApplyPreviewBodyComposition", &APopulationOpportunityCombat::ApplyPreviewBodyComposition)
		.def("GetBodyInfoProvider", &APopulationOpportunityCombat::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("eventTriggerKismetSingleDeathEvent", &APopulationOpportunityCombat::eventTriggerKismetSingleDeathEvent)
		.def("eventTriggerKismetDeathEvent", &APopulationOpportunityCombat::eventTriggerKismetDeathEvent)
		.def("GetNumSpawned", &APopulationOpportunityCombat::GetNumSpawned)
		.def("GetNumAlive", &APopulationOpportunityCombat::GetNumAlive)
		.def("GetNumDied", &APopulationOpportunityCombat::GetNumDied)
		.def("WantsToStopListening", &APopulationOpportunityCombat::WantsToStopListening)
		.def("GetActor", &APopulationOpportunityCombat::GetActor, py::return_value_policy::reference)
		.def("GetListenerLocation", &APopulationOpportunityCombat::GetListenerLocation, py::return_value_policy::reference)
		.def("GetAllegiance", &APopulationOpportunityCombat::GetAllegiance, py::return_value_policy::reference)
		.def("ReceiveMessage", &APopulationOpportunityCombat::ReceiveMessage)
		.def("CaresAboutMessage", &APopulationOpportunityCombat::CaresAboutMessage)
		.def("PostBeginPlay", &APopulationOpportunityCombat::PostBeginPlay)
		.def("EnableDebugging", &APopulationOpportunityCombat::EnableDebugging)
		.def("RespawnKilledActors", &APopulationOpportunityCombat::RespawnKilledActors)
		.def("DoSpawning", &APopulationOpportunityCombat::DoSpawning)
		;
	py::class_< APopulationOpportunityPoint, UAudioDevice >(m, "APopulationOpportunityPoint")
		.def_static("StaticClass", &APopulationOpportunityPoint::StaticClass, py::return_value_policy::reference)
		.def_property("SpawnedForMatinee", [](APopulationOpportunityPoint &self){return self.SpawnedForMatinee;}, [](APopulationOpportunityPoint &self, bool value){self.SpawnedForMatinee = value ? 1 : 0;})
		.def_property("bHasSpawned", [](APopulationOpportunityPoint &self){return self.bHasSpawned;}, [](APopulationOpportunityPoint &self, bool value){self.bHasSpawned = value ? 1 : 0;})
		.def_property("bActiveSpawn", [](APopulationOpportunityPoint &self){return self.bActiveSpawn;}, [](APopulationOpportunityPoint &self, bool value){self.bActiveSpawn = value ? 1 : 0;})
		.def_property("bDetectedPlayer", [](APopulationOpportunityPoint &self){return self.bDetectedPlayer;}, [](APopulationOpportunityPoint &self, bool value){self.bDetectedPlayer = value ? 1 : 0;})
		.def_readwrite("VfTable_IIPopulationSpawnPoint", &APopulationOpportunityPoint::VfTable_IIPopulationSpawnPoint, py::return_value_policy::reference)
		.def_readwrite("PopulationDef", &APopulationOpportunityPoint::PopulationDef, py::return_value_policy::reference)
		.def_readwrite("SpawnAndCullRadius", &APopulationOpportunityPoint::SpawnAndCullRadius)
		.def_readwrite("SpawnCustomizations", &APopulationOpportunityPoint::SpawnCustomizations, py::return_value_policy::reference)
		.def_readwrite("AISpawnStyle", &APopulationOpportunityPoint::AISpawnStyle)
		.def_readwrite("InitialAction", &APopulationOpportunityPoint::InitialAction)
		.def_readwrite("InitialActionDestinations", &APopulationOpportunityPoint::InitialActionDestinations, py::return_value_policy::reference)
		.def("ClearBodyCompositionInstance", &APopulationOpportunityPoint::ClearBodyCompositionInstance)
		.def("ApplyPreviewBodyComposition", &APopulationOpportunityPoint::ApplyPreviewBodyComposition)
		.def("GetBodyInfoProvider", &APopulationOpportunityPoint::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("ChangeInstanceDataSwitch", &APopulationOpportunityPoint::ChangeInstanceDataSwitch)
		.def("PostInitBodyComposition", &APopulationOpportunityPoint::PostInitBodyComposition)
		.def("PreRemoveBodyComposition", &APopulationOpportunityPoint::PreRemoveBodyComposition)
		.def("GetInitialMovementHoldTime", &APopulationOpportunityPoint::GetInitialMovementHoldTime)
		.def("GetInitialDestination", &APopulationOpportunityPoint::GetInitialDestination, py::return_value_policy::reference)
		.def("GetInitialActionType", &APopulationOpportunityPoint::GetInitialActionType)
		.def("GetSpawnStyleType", &APopulationOpportunityPoint::GetSpawnStyleType)
		.def("RespawnKilledActors", &APopulationOpportunityPoint::RespawnKilledActors)
		.def("DoSpawning", &APopulationOpportunityPoint::DoSpawning)
		;
	py::class_< UPopulationOpportunityAreaRenderingComponent, UAudioDevice >(m, "UPopulationOpportunityAreaRenderingComponent")
		.def_static("StaticClass", &UPopulationOpportunityAreaRenderingComponent::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UPopulationOpportunityAttributeContextResolver, UAudioDevice >(m, "UPopulationOpportunityAttributeContextResolver")
		.def_static("StaticClass", &UPopulationOpportunityAttributeContextResolver::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UPopulationOpportunityPointRenderingComponent, UAudioDevice >(m, "UPopulationOpportunityPointRenderingComponent")
		.def_static("StaticClass", &UPopulationOpportunityPointRenderingComponent::StaticClass, py::return_value_policy::reference)
		;
	py::class_< APopulationPoint, UAudioDevice >(m, "APopulationPoint")
		.def_static("StaticClass", &APopulationPoint::StaticClass, py::return_value_policy::reference)
		.def_property("bAttachSpawnedToBase", [](APopulationPoint &self){return self.bAttachSpawnedToBase;}, [](APopulationPoint &self, bool value){self.bAttachSpawnedToBase = value ? 1 : 0;})
		.def_property("IsEnabled", [](APopulationPoint &self){return self.IsEnabled;}, [](APopulationPoint &self, bool value){self.IsEnabled = value ? 1 : 0;})
		.def_property("bDisableAfterUse", [](APopulationPoint &self){return self.bDisableAfterUse;}, [](APopulationPoint &self, bool value){self.bDisableAfterUse = value ? 1 : 0;})
		.def_property("TestVisibility", [](APopulationPoint &self){return self.TestVisibility;}, [](APopulationPoint &self, bool value){self.TestVisibility = value ? 1 : 0;})
		.def_property("TestFOV", [](APopulationPoint &self){return self.TestFOV;}, [](APopulationPoint &self, bool value){self.TestFOV = value ? 1 : 0;})
		.def_readwrite("VfTable_IIPopulationSpawnPoint", &APopulationPoint::VfTable_IIPopulationSpawnPoint, py::return_value_policy::reference)
		.def_readwrite("Flags", &APopulationPoint::Flags)
		.def_readwrite("AISpawnStyle", &APopulationPoint::AISpawnStyle)
		.def_readwrite("InitialAction", &APopulationPoint::InitialAction)
		.def_readwrite("ConstraintType", &APopulationPoint::ConstraintType)
		.def_readwrite("InitialActionDestinations", &APopulationPoint::InitialActionDestinations, py::return_value_policy::reference)
		.def_readwrite("InitialMovementHoldTime", &APopulationPoint::InitialMovementHoldTime)
		.def_readwrite("InitialDestinationIndex", &APopulationPoint::InitialDestinationIndex)
		.def_readwrite("TagsToUseWithConstraint", &APopulationPoint::TagsToUseWithConstraint, py::return_value_policy::reference)
		.def_readwrite("OnSpawnCustomizations", &APopulationPoint::OnSpawnCustomizations, py::return_value_policy::reference)
		.def_readwrite("MinSpawnDistance", &APopulationPoint::MinSpawnDistance)
		.def("CanSpawnFromFactory", &APopulationPoint::CanSpawnFromFactory)
		.def("GetSpawnRotation", &APopulationPoint::GetSpawnRotation, py::return_value_policy::reference)
		.def("GetSpawnLocation", &APopulationPoint::GetSpawnLocation, py::return_value_policy::reference)
		.def("ActorSpawned", &APopulationPoint::ActorSpawned)
		.def("GetInitialMovementHoldTime", &APopulationPoint::GetInitialMovementHoldTime)
		.def("GetInitialDestination", &APopulationPoint::GetInitialDestination, py::return_value_policy::reference)
		.def("RandomizeInitialDestinations", &APopulationPoint::RandomizeInitialDestinations)
		.def("GetInitialActionType", &APopulationPoint::GetInitialActionType)
		.def("GetSpawnStyleType", &APopulationPoint::GetSpawnStyleType)
		.def("OnToggle", &APopulationPoint::OnToggle)
		;
	py::class_< APopulationPoint_Dynamic, UAudioDevice >(m, "APopulationPoint_Dynamic")
		.def_static("StaticClass", &APopulationPoint_Dynamic::StaticClass, py::return_value_policy::reference)
		.def_property("bSaveAsInstanceDataOnBase", [](APopulationPoint_Dynamic &self){return self.bSaveAsInstanceDataOnBase;}, [](APopulationPoint_Dynamic &self, bool value){self.bSaveAsInstanceDataOnBase = value ? 1 : 0;})
		.def_readwrite("DynamicPointName", &APopulationPoint_Dynamic::DynamicPointName, py::return_value_policy::reference)
		;
	py::class_< UPopulationPointRenderingComponent, UAudioDevice >(m, "UPopulationPointRenderingComponent")
		.def_static("StaticClass", &UPopulationPointRenderingComponent::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USeqEvent_EncounterWaveComplete, UAudioDevice >(m, "USeqEvent_EncounterWaveComplete")
		.def_static("StaticClass", &USeqEvent_EncounterWaveComplete::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CurrentWave", &USeqEvent_EncounterWaveComplete::CurrentWave)
		.def("NotifyWaveComplete", &USeqEvent_EncounterWaveComplete::NotifyWaveComplete)
		;
	py::class_< USeqEvent_PopulatedActor, UAudioDevice >(m, "USeqEvent_PopulatedActor")
		.def_static("StaticClass", &USeqEvent_PopulatedActor::StaticClass, py::return_value_policy::reference)
		.def_readwrite("DestPopulationOpportunity", &USeqEvent_PopulatedActor::DestPopulationOpportunity, py::return_value_policy::reference)
		.def_readwrite("SpawnPoint", &USeqEvent_PopulatedActor::SpawnPoint, py::return_value_policy::reference)
		.def("eventNotifyPopulatedActor", &USeqEvent_PopulatedActor::eventNotifyPopulatedActor)
		;
	py::class_< USeqEvent_PopulatedPoint, UAudioDevice >(m, "USeqEvent_PopulatedPoint")
		.def_static("StaticClass", &USeqEvent_PopulatedPoint::StaticClass, py::return_value_policy::reference)
		.def_readwrite("DestPopulationOpportunity", &USeqEvent_PopulatedPoint::DestPopulationOpportunity, py::return_value_policy::reference)
		.def_readwrite("SpawnPoint", &USeqEvent_PopulatedPoint::SpawnPoint, py::return_value_policy::reference)
		.def("eventNotifyPopulatedActor", &USeqEvent_PopulatedPoint::eventNotifyPopulatedActor)
		;
	py::class_< AGearboxHUD, UAudioDevice >(m, "AGearboxHUD")
		.def_static("StaticClass", &AGearboxHUD::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UAIDefinition, UAudioDevice >(m, "UAIDefinition")
		.def_static("StaticClass", &UAIDefinition::StaticClass, py::return_value_policy::reference)
		.def_property("bHealOnReset", [](UAIDefinition &self){return self.bHealOnReset;}, [](UAIDefinition &self, bool value){self.bHealOnReset = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorProvider", &UAIDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UAIDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def_readwrite("AIBehaviorProviderDefinition", &UAIDefinition::AIBehaviorProviderDefinition, py::return_value_policy::reference)
		.def_readwrite("NodeList", &UAIDefinition::NodeList, py::return_value_policy::reference)
		.def_readwrite("TargetSearchRadius", &UAIDefinition::TargetSearchRadius)
		.def_readwrite("TargetingDef", &UAIDefinition::TargetingDef, py::return_value_policy::reference)
		.def("OnReset", &UAIDefinition::OnReset)
		.def("OnHitByVehicle", &UAIDefinition::OnHitByVehicle)
		.def("OnRanOver", &UAIDefinition::OnRanOver)
		.def("OnTimerEvent", &UAIDefinition::OnTimerEvent)
		.def("OnKilledPawn", &UAIDefinition::OnKilledPawn)
		.def("OnLanded", &UAIDefinition::OnLanded)
		.def("OnStopFiringWeapon", &UAIDefinition::OnStopFiringWeapon)
		.def("OnStartFiringWeapon", &UAIDefinition::OnStartFiringWeapon)
		.def("OnTargetLost", &UAIDefinition::OnTargetLost)
		.def("OnTargetChanged", &UAIDefinition::OnTargetChanged)
		.def("OnTargetAcquired", &UAIDefinition::OnTargetAcquired)
		.def("OnSpawned", &UAIDefinition::OnSpawned)
		.def("OnTakeHeal", &UAIDefinition::OnTakeHeal)
		.def("OnVehicleTakeDamage", &UAIDefinition::OnVehicleTakeDamage)
		.def("OnTakeDamage", &UAIDefinition::OnTakeDamage)
		.def("OnUserCouldNotAffordSecondary", &UAIDefinition::OnUserCouldNotAffordSecondary)
		.def("OnUserCouldNotAfford", &UAIDefinition::OnUserCouldNotAfford)
		.def("OnSecondaryUsed", &UAIDefinition::OnSecondaryUsed)
		.def("OnUsed", &UAIDefinition::OnUsed)
		.def("SetBehaviorProviderDefinition", &UAIDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UAIDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UBehaviorEventFilterBase, UAudioDevice >(m, "UBehaviorEventFilterBase")
		.def_static("StaticClass", &UBehaviorEventFilterBase::StaticClass, py::return_value_policy::reference)
		.def_property("ShouldBeInstanced", [](UBehaviorEventFilterBase &self){return self.ShouldBeInstanced;}, [](UBehaviorEventFilterBase &self, bool value){self.ShouldBeInstanced = value ? 1 : 0;})
		;
	py::class_< UBehaviorKernel, UAudioDevice >(m, "UBehaviorKernel")
		.def_static("StaticClass", &UBehaviorKernel::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Processes", &UBehaviorKernel::Processes, py::return_value_policy::reference)
		.def_readwrite("ProcessDeathList", &UBehaviorKernel::ProcessDeathList, py::return_value_policy::reference)
		.def_readwrite("WaitingThreads", &UBehaviorKernel::WaitingThreads, py::return_value_policy::reference)
		.def_readwrite("Providers", &UBehaviorKernel::Providers, py::return_value_policy::reference)
		.def_readwrite("ProvidersIndexFreeList", &UBehaviorKernel::ProvidersIndexFreeList, py::return_value_policy::reference)
		.def_readwrite("ProvidersPendingRemoval", &UBehaviorKernel::ProvidersPendingRemoval, py::return_value_policy::reference)
		.def_readwrite("ObjectVariables", &UBehaviorKernel::ObjectVariables, py::return_value_policy::reference)
		.def_readwrite("ObjectVariablesIndexFreeList", &UBehaviorKernel::ObjectVariablesIndexFreeList, py::return_value_policy::reference)
		.def_readwrite("DynamicBehaviors", &UBehaviorKernel::DynamicBehaviors, py::return_value_policy::reference)
		.def_readwrite("DynamicBehaviorsIndexFreeList", &UBehaviorKernel::DynamicBehaviorsIndexFreeList, py::return_value_policy::reference)
		.def_readwrite("ProvidersListReserveLength", &UBehaviorKernel::ProvidersListReserveLength)
		.def_readwrite("ObjectVariablesListReserveLength", &UBehaviorKernel::ObjectVariablesListReserveLength)
		.def_readwrite("DynamicBehaviorsListReserveLength", &UBehaviorKernel::DynamicBehaviorsListReserveLength)
		.def_readwrite("WatchedPID", &UBehaviorKernel::WatchedPID)
		.def_readwrite("RecentlyRunBehaviors", &UBehaviorKernel::RecentlyRunBehaviors, py::return_value_policy::reference)
		.def_readwrite("CurrentDebugPage", &UBehaviorKernel::CurrentDebugPage)
		.def_readwrite("DebugPages", &UBehaviorKernel::DebugPages, py::return_value_policy::reference)
		.def_readwrite("EventFilterObjects", &UBehaviorKernel::EventFilterObjects, py::return_value_policy::reference)
		.def("RecentlyRunBehaviorsForSequence", &UBehaviorKernel::RecentlyRunBehaviorsForSequence)
		.def("AllEventStateForSequence", &UBehaviorKernel::AllEventStateForSequence)
		.def("AllWaitingThreadsForSequence", &UBehaviorKernel::AllWaitingThreadsForSequence)
		.def("AllSequencesForProvider", &UBehaviorKernel::AllSequencesForProvider)
		.def("AllProvidersForProcess", &UBehaviorKernel::AllProvidersForProcess)
		.def("AllProcesses", &UBehaviorKernel::AllProcesses)
		.def("GetVariableStateSummaryForSequence", &UBehaviorKernel::GetVariableStateSummaryForSequence)
		.def("GetChunkedListSummaries", &UBehaviorKernel::GetChunkedListSummaries)
		.def("GetBehaviorKernelStats", &UBehaviorKernel::GetBehaviorKernelStats, py::return_value_policy::reference)
		.def("IsBehaviorKernelWatchingConsumer", &UBehaviorKernel::IsBehaviorKernelWatchingConsumer)
		.def("IsBehaviorSequenceEnabled", &UBehaviorKernel::IsBehaviorSequenceEnabled)
		.def("ActivateBehaviorOutputLink", &UBehaviorKernel::ActivateBehaviorOutputLink)
		.def("PublishBoolOutputVariable", &UBehaviorKernel::PublishBoolOutputVariable)
		.def("PublishObjectOutputVariable", &UBehaviorKernel::PublishObjectOutputVariable)
		.def("PublishVectorOutputVariable", &UBehaviorKernel::PublishVectorOutputVariable)
		.def("PublishFloatOutputVariable", &UBehaviorKernel::PublishFloatOutputVariable)
		.def("PublishIntOutputVariable", &UBehaviorKernel::PublishIntOutputVariable)
		.def("BeginNondeterministicProviderRegistration", &UBehaviorKernel::BeginNondeterministicProviderRegistration)
		.def("ProcessReplicatedBehaviorEvent", &UBehaviorKernel::ProcessReplicatedBehaviorEvent)
		.def("ProcessReplicatedBehaviorConsumerState", &UBehaviorKernel::ProcessReplicatedBehaviorConsumerState)
		.def("ChangeBehaviorSequenceActivationStatus", &UBehaviorKernel::ChangeBehaviorSequenceActivationStatus)
		.def("ChangeBehaviorConsumerSuspensionStatus", &UBehaviorKernel::ChangeBehaviorConsumerSuspensionStatus)
		.def("BroadcastBehaviorEventFromScript", &UBehaviorKernel::BroadcastBehaviorEventFromScript)
		.def("ActivateBehaviorEventFromScript", &UBehaviorKernel::ActivateBehaviorEventFromScript)
		.def("RemoveBehaviorProviderFromConsumer", &UBehaviorKernel::RemoveBehaviorProviderFromConsumer)
		.def("IntializeBehaviorProviderForConsumer", &UBehaviorKernel::IntializeBehaviorProviderForConsumer)
		.def("ForceUnregisterBehaviorConsumer", &UBehaviorKernel::ForceUnregisterBehaviorConsumer)
		.def("RegisterBehaviorConsumer", &UBehaviorKernel::RegisterBehaviorConsumer, py::return_value_policy::reference)
		;
	py::class_< UBehaviorProviderDefinition, UAudioDevice >(m, "UBehaviorProviderDefinition")
		.def_static("StaticClass", &UBehaviorProviderDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CurrentVersion", &UBehaviorProviderDefinition::CurrentVersion)
		.def_readwrite("BehaviorSequences", &UBehaviorProviderDefinition::BehaviorSequences, py::return_value_policy::reference)
		.def("SetObjectBehaviorVariable", &UBehaviorProviderDefinition::SetObjectBehaviorVariable)
		.def("SetVectorBehaviorVariable", &UBehaviorProviderDefinition::SetVectorBehaviorVariable)
		.def("SetFloatBehaviorVariable", &UBehaviorProviderDefinition::SetFloatBehaviorVariable)
		.def("SetIntBehaviorVariable", &UBehaviorProviderDefinition::SetIntBehaviorVariable)
		.def("SetBoolBehaviorVariable", &UBehaviorProviderDefinition::SetBoolBehaviorVariable)
		;
	py::class_< UAIBehaviorProviderDefinition, UAudioDevice >(m, "UAIBehaviorProviderDefinition")
		.def_static("StaticClass", &UAIBehaviorProviderDefinition::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UBehaviorSequenceCustomEnableCondition, UAudioDevice >(m, "UBehaviorSequenceCustomEnableCondition")
		.def_static("StaticClass", &UBehaviorSequenceCustomEnableCondition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("LinkedBehaviorSequences", &UBehaviorSequenceCustomEnableCondition::LinkedBehaviorSequences, py::return_value_policy::reference)
		.def_readwrite("BehaviorKernelInstanceTagForTransientState", &UBehaviorSequenceCustomEnableCondition::BehaviorKernelInstanceTagForTransientState)
		;
	py::class_< UBehaviorSequenceEnableByMultipleConditions, UAudioDevice >(m, "UBehaviorSequenceEnableByMultipleConditions")
		.def_static("StaticClass", &UBehaviorSequenceEnableByMultipleConditions::StaticClass, py::return_value_policy::reference)
		.def_readwrite("EnableConditions", &UBehaviorSequenceEnableByMultipleConditions::EnableConditions, py::return_value_policy::reference)
		.def_readwrite("Operator", &UBehaviorSequenceEnableByMultipleConditions::Operator)
		;
	py::class_< UIBehaviorConsumer, UAudioDevice >(m, "UIBehaviorConsumer")
		.def_static("StaticClass", &UIBehaviorConsumer::StaticClass, py::return_value_policy::reference)
		.def("GetBehaviorConsumerHandle", &UIBehaviorConsumer::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		;
	py::class_< UIBehaviorProvider, UAudioDevice >(m, "UIBehaviorProvider")
		.def_static("StaticClass", &UIBehaviorProvider::StaticClass, py::return_value_policy::reference)
		.def("SetBehaviorProviderDefinition", &UIBehaviorProvider::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UIBehaviorProvider::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UICustomEvent, UAudioDevice >(m, "UICustomEvent")
		.def_static("StaticClass", &UICustomEvent::StaticClass, py::return_value_policy::reference)
		.def("eventRunCustomEvent", &UICustomEvent::eventRunCustomEvent)
		;
	py::class_< UITimerBehavior, UAudioDevice >(m, "UITimerBehavior")
		.def_static("StaticClass", &UITimerBehavior::StaticClass, py::return_value_policy::reference)
		.def("SetTimerState", &UITimerBehavior::SetTimerState)
		.def("GetTimerState", &UITimerBehavior::GetTimerState)
		.def("GetTimeSeconds", &UITimerBehavior::GetTimeSeconds)
		;
	py::class_< UGearboxAnimDefinition, UAudioDevice >(m, "UGearboxAnimDefinition")
		.def_static("StaticClass", &UGearboxAnimDefinition::StaticClass, py::return_value_policy::reference)
		.def_property("bMirrored", [](UGearboxAnimDefinition &self){return self.bMirrored;}, [](UGearboxAnimDefinition &self, bool value){self.bMirrored = value ? 1 : 0;})
		.def_property("BlendPerBone", [](UGearboxAnimDefinition &self){return self.BlendPerBone;}, [](UGearboxAnimDefinition &self, bool value){self.BlendPerBone = value ? 1 : 0;})
		.def_property("DisableAnimSequenceNotifies", [](UGearboxAnimDefinition &self){return self.DisableAnimSequenceNotifies;}, [](UGearboxAnimDefinition &self, bool value){self.DisableAnimSequenceNotifies = value ? 1 : 0;})
		.def_property("bOnlyPlayNotifiesWhileActive", [](UGearboxAnimDefinition &self){return self.bOnlyPlayNotifiesWhileActive;}, [](UGearboxAnimDefinition &self, bool value){self.bOnlyPlayNotifiesWhileActive = value ? 1 : 0;})
		.def_property("bReverseAnimSearchOrder", [](UGearboxAnimDefinition &self){return self.bReverseAnimSearchOrder;}, [](UGearboxAnimDefinition &self, bool value){self.bReverseAnimSearchOrder = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorProvider", &UGearboxAnimDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("AnimName", &UGearboxAnimDefinition::AnimName, py::return_value_policy::reference)
		.def_readwrite("BlendInTime", &UGearboxAnimDefinition::BlendInTime)
		.def_readwrite("BlendOutTime", &UGearboxAnimDefinition::BlendOutTime)
		.def_readwrite("PlayRate", &UGearboxAnimDefinition::PlayRate)
		.def_readwrite("EndingCondition", &UGearboxAnimDefinition::EndingCondition)
		.def_readwrite("AnimSet", &UGearboxAnimDefinition::AnimSet, py::return_value_policy::reference)
		.def_readwrite("AnimNodeName", &UGearboxAnimDefinition::AnimNodeName, py::return_value_policy::reference)
		.def_readwrite("RootMotionDef", &UGearboxAnimDefinition::RootMotionDef, py::return_value_policy::reference)
		.def_readwrite("BoneBlendDef", &UGearboxAnimDefinition::BoneBlendDef, py::return_value_policy::reference)
		.def_readwrite("BoneNames", &UGearboxAnimDefinition::BoneNames, py::return_value_policy::reference)
		.def_readwrite("StartBehaviors", &UGearboxAnimDefinition::StartBehaviors, py::return_value_policy::reference)
		.def_readwrite("SMNotifies", &UGearboxAnimDefinition::SMNotifies, py::return_value_policy::reference)
		.def_readwrite("StopBehaviors", &UGearboxAnimDefinition::StopBehaviors, py::return_value_policy::reference)
		.def_readwrite("TimedBehaviorEvents", &UGearboxAnimDefinition::TimedBehaviorEvents, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UGearboxAnimDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def("GetAnimLength", &UGearboxAnimDefinition::GetAnimLength)
		.def("eventIsPlayingLocally", &UGearboxAnimDefinition::eventIsPlayingLocally)
		.def("GetSMNode", &UGearboxAnimDefinition::GetSMNode, py::return_value_policy::reference)
		.def("PlayAnim", &UGearboxAnimDefinition::PlayAnim)
		.def("eventAnimFinished", &UGearboxAnimDefinition::eventAnimFinished)
		.def("eventClientFinished", &UGearboxAnimDefinition::eventClientFinished)
		.def("eventClientStarted", &UGearboxAnimDefinition::eventClientStarted)
		.def("eventServerFinished", &UGearboxAnimDefinition::eventServerFinished)
		.def("eventServerStarted", &UGearboxAnimDefinition::eventServerStarted)
		.def("AddAnimSet", &UGearboxAnimDefinition::AddAnimSet)
		.def("GetSkeletalMesh", &UGearboxAnimDefinition::GetSkeletalMesh, py::return_value_policy::reference)
		.def("eventAuthorityCanPlay", &UGearboxAnimDefinition::eventAuthorityCanPlay)
		.def("OnTimedEvent", &UGearboxAnimDefinition::OnTimedEvent)
		.def("OnServerStop", &UGearboxAnimDefinition::OnServerStop)
		.def("OnServerStart", &UGearboxAnimDefinition::OnServerStart)
		.def("OnStop", &UGearboxAnimDefinition::OnStop)
		.def("OnStart", &UGearboxAnimDefinition::OnStart)
		.def("SetBehaviorProviderDefinition", &UGearboxAnimDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UGearboxAnimDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UBehavior_TriggerDialogEvent, UAudioDevice >(m, "UBehavior_TriggerDialogEvent")
		.def_static("StaticClass", &UBehavior_TriggerDialogEvent::StaticClass, py::return_value_policy::reference)
		.def_property("bForcePlayImmediate", [](UBehavior_TriggerDialogEvent &self){return self.bForcePlayImmediate;}, [](UBehavior_TriggerDialogEvent &self, bool value){self.bForcePlayImmediate = value ? 1 : 0;})
		.def_property("bCheckCanPreview", [](UBehavior_TriggerDialogEvent &self){return self.bCheckCanPreview;}, [](UBehavior_TriggerDialogEvent &self, bool value){self.bCheckCanPreview = value ? 1 : 0;})
		.def_property("bCanPreview", [](UBehavior_TriggerDialogEvent &self){return self.bCanPreview;}, [](UBehavior_TriggerDialogEvent &self, bool value){self.bCanPreview = value ? 1 : 0;})
		.def_readwrite("EventTag", &UBehavior_TriggerDialogEvent::EventTag, py::return_value_policy::reference)
		.def_readwrite("Group", &UBehavior_TriggerDialogEvent::Group, py::return_value_policy::reference)
		.def_readwrite("NameTag", &UBehavior_TriggerDialogEvent::NameTag, py::return_value_policy::reference)
		.def_readwrite("Other", &UBehavior_TriggerDialogEvent::Other, py::return_value_policy::reference)
		.def_readwrite("MyEventData", &UBehavior_TriggerDialogEvent::MyEventData, py::return_value_policy::reference)
		.def_readwrite("MyDataUseCount", &UBehavior_TriggerDialogEvent::MyDataUseCount)
		.def("ApplyBehaviorToContext", &UBehavior_TriggerDialogEvent::ApplyBehaviorToContext)
		.def("TriggerDialogEvent", &UBehavior_TriggerDialogEvent::TriggerDialogEvent)
		;
	py::class_< AGearboxDialogActor, UAudioDevice >(m, "AGearboxDialogActor")
		.def_static("StaticClass", &AGearboxDialogActor::StaticClass, py::return_value_policy::reference)
		.def_readwrite("VfTable_IGearboxDialogInterface", &AGearboxDialogActor::VfTable_IGearboxDialogInterface, py::return_value_policy::reference)
		.def_readwrite("DialogGroups", &AGearboxDialogActor::DialogGroups, py::return_value_policy::reference)
		.def_readwrite("NameTag", &AGearboxDialogActor::NameTag, py::return_value_policy::reference)
		.def_readwrite("EditorSprite", &AGearboxDialogActor::EditorSprite, py::return_value_policy::reference)
		.def_readwrite("DialogComponent", &AGearboxDialogActor::DialogComponent, py::return_value_policy::reference)
		.def_readwrite("DialogReplicatedData", &AGearboxDialogActor::DialogReplicatedData, py::return_value_policy::reference)
		.def_readwrite("CurrentNameTag", &AGearboxDialogActor::CurrentNameTag, py::return_value_policy::reference)
		.def("SetDialogNameTag", &AGearboxDialogActor::SetDialogNameTag)
		.def("GetReplicatedDialogData", &AGearboxDialogActor::GetReplicatedDialogData, py::return_value_policy::reference)
		.def("SetReplicatedDialogData", &AGearboxDialogActor::SetReplicatedDialogData)
		.def("GetDialogGroups", &AGearboxDialogActor::GetDialogGroups)
		.def("GetDialogComponent", &AGearboxDialogActor::GetDialogComponent, py::return_value_policy::reference)
		.def("GetDialogNameTag", &AGearboxDialogActor::GetDialogNameTag, py::return_value_policy::reference)
		.def("GetActor", &AGearboxDialogActor::GetActor, py::return_value_policy::reference)
		.def("CanTalk", &AGearboxDialogActor::CanTalk)
		.def("eventServerDialog_TriggerEvent", &AGearboxDialogActor::eventServerDialog_TriggerEvent)
		.def("eventReplicatedEvent", &AGearboxDialogActor::eventReplicatedEvent)
		;
	py::class_< UGearboxDialogComponent, UAudioDevice >(m, "UGearboxDialogComponent")
		.def_static("StaticClass", &UGearboxDialogComponent::StaticClass, py::return_value_policy::reference)
		.def_property("bIsReattaching", [](UGearboxDialogComponent &self){return self.bIsReattaching;}, [](UGearboxDialogComponent &self, bool value){self.bIsReattaching = value ? 1 : 0;})
		.def_readwrite("EventData", &UGearboxDialogComponent::EventData, py::return_value_policy::reference)
		.def_readwrite("ClientPlayingInfo", &UGearboxDialogComponent::ClientPlayingInfo, py::return_value_policy::reference)
		.def("IsTalking", &UGearboxDialogComponent::IsTalking)
		.def("StopTalking", &UGearboxDialogComponent::StopTalking)
		.def("TalkReplicated", &UGearboxDialogComponent::TalkReplicated)
		.def("Talk", &UGearboxDialogComponent::Talk)
		.def("GetMatchingEvent", &UGearboxDialogComponent::GetMatchingEvent)
		.def("TriggerEvent", &UGearboxDialogComponent::TriggerEvent, py::return_value_policy::reference)
		.def("GetDialogInterface", &UGearboxDialogComponent::GetDialogInterface, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogEventData, UAudioDevice >(m, "UGearboxDialogEventData")
		.def_static("StaticClass", &UGearboxDialogEventData::StaticClass, py::return_value_policy::reference)
		.def_readwrite("EventInfo", &UGearboxDialogEventData::EventInfo, py::return_value_policy::reference)
		.def_readwrite("Instigator", &UGearboxDialogEventData::Instigator, py::return_value_policy::reference)
		.def_readwrite("Other", &UGearboxDialogEventData::Other, py::return_value_policy::reference)
		.def_readwrite("ObjectParameter", &UGearboxDialogEventData::ObjectParameter, py::return_value_policy::reference)
		.def_readwrite("LastTalker", &UGearboxDialogEventData::LastTalker, py::return_value_policy::reference)
		.def_readwrite("LiveTalkAction", &UGearboxDialogEventData::LiveTalkAction, py::return_value_policy::reference)
		.def_readwrite("LiveTalkActionDataID", &UGearboxDialogEventData::LiveTalkActionDataID)
		.def_readwrite("TemplateEventInfo", &UGearboxDialogEventData::TemplateEventInfo, py::return_value_policy::reference)
		.def_readwrite("LiveTriggerAction", &UGearboxDialogEventData::LiveTriggerAction, py::return_value_policy::reference)
		.def_readwrite("PlayingInfo", &UGearboxDialogEventData::PlayingInfo, py::return_value_policy::reference)
		.def_readwrite("TalkFinishTime", &UGearboxDialogEventData::TalkFinishTime)
		.def_readwrite("UseCount", &UGearboxDialogEventData::UseCount)
		.def("IsActive", &UGearboxDialogEventData::IsActive)
		;
	py::class_< UGearboxDialogEventTag, UAudioDevice >(m, "UGearboxDialogEventTag")
		.def_static("StaticClass", &UGearboxDialogEventTag::StaticClass, py::return_value_policy::reference)
		.def_property("bGroupEvent", [](UGearboxDialogEventTag &self){return self.bGroupEvent;}, [](UGearboxDialogEventTag &self, bool value){self.bGroupEvent = value ? 1 : 0;})
		.def_property("bSoundEffect", [](UGearboxDialogEventTag &self){return self.bSoundEffect;}, [](UGearboxDialogEventTag &self, bool value){self.bSoundEffect = value ? 1 : 0;})
		.def_property("bIsDeathScream", [](UGearboxDialogEventTag &self){return self.bIsDeathScream;}, [](UGearboxDialogEventTag &self, bool value){self.bIsDeathScream = value ? 1 : 0;})
		.def_readwrite("Priority", &UGearboxDialogEventTag::Priority, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogGlobalsDefinition, UAudioDevice >(m, "UGearboxDialogGlobalsDefinition")
		.def_static("StaticClass", &UGearboxDialogGlobalsDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("PitchRTPC", &UGearboxDialogGlobalsDefinition::PitchRTPC, py::return_value_policy::reference)
		.def_readwrite("Priorities", &UGearboxDialogGlobalsDefinition::Priorities, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogGroup, UAudioDevice >(m, "UGearboxDialogGroup")
		.def_static("StaticClass", &UGearboxDialogGroup::StaticClass, py::return_value_policy::reference)
		.def_readwrite("EventTagPackages", &UGearboxDialogGroup::EventTagPackages, py::return_value_policy::reference)
		.def_readwrite("NameTags", &UGearboxDialogGroup::NameTags, py::return_value_policy::reference)
		.def_readwrite("EventTags", &UGearboxDialogGroup::EventTags, py::return_value_policy::reference)
		.def_readwrite("ParentGroup", &UGearboxDialogGroup::ParentGroup, py::return_value_policy::reference)
		.def_readwrite("Nodes", &UGearboxDialogGroup::Nodes, py::return_value_policy::reference)
		.def_readwrite("SharedDialogEvent", &UGearboxDialogGroup::SharedDialogEvent, py::return_value_policy::reference)
		.def_readwrite("SharedTalkAct", &UGearboxDialogGroup::SharedTalkAct, py::return_value_policy::reference)
		.def_readwrite("OutputLinksToStructs", &UGearboxDialogGroup::OutputLinksToStructs, py::return_value_policy::reference)
		.def_readwrite("DialogEvents", &UGearboxDialogGroup::DialogEvents, py::return_value_policy::reference)
		.def_readwrite("TalkActs", &UGearboxDialogGroup::TalkActs, py::return_value_policy::reference)
		.def("SimpleEvent", &UGearboxDialogGroup::SimpleEvent)
		;
	py::class_< UGearboxDialogTemplateGroup, UAudioDevice >(m, "UGearboxDialogTemplateGroup")
		.def_static("StaticClass", &UGearboxDialogTemplateGroup::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogManager, UAudioDevice >(m, "UGearboxDialogManager")
		.def_static("StaticClass", &UGearboxDialogManager::StaticClass, py::return_value_policy::reference)
		.def_property("bEnabled", [](UGearboxDialogManager &self){return self.bEnabled;}, [](UGearboxDialogManager &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_property("bShowDebug", [](UGearboxDialogManager &self){return self.bShowDebug;}, [](UGearboxDialogManager &self, bool value){self.bShowDebug = value ? 1 : 0;})
		.def_readwrite("Talkers", &UGearboxDialogManager::Talkers, py::return_value_policy::reference)
		.def_readwrite("DisabledTalkers", &UGearboxDialogManager::DisabledTalkers, py::return_value_policy::reference)
		.def_readwrite("Groups", &UGearboxDialogManager::Groups, py::return_value_policy::reference)
		.def_readwrite("CurrentEventContext", &UGearboxDialogManager::CurrentEventContext, py::return_value_policy::reference)
		.def_readwrite("GroupEventTagMap", &UGearboxDialogManager::GroupEventTagMap, py::return_value_policy::reference)
		.def_readwrite("EventDataPool", &UGearboxDialogManager::EventDataPool, py::return_value_policy::reference)
		.def_readwrite("EventDataClassPath", &UGearboxDialogManager::EventDataClassPath, py::return_value_policy::reference)
		.def_readwrite("EventDataClass", &UGearboxDialogManager::EventDataClass, py::return_value_policy::reference)
		.def("DrawDialogDebug", &UGearboxDialogManager::DrawDialogDebug)
		.def("CheckpointRemoveReferencesBeforeDestroy", &UGearboxDialogManager::CheckpointRemoveReferencesBeforeDestroy)
		.def("GetEventTagForEventInfo", &UGearboxDialogManager::GetEventTagForEventInfo, py::return_value_policy::reference)
		.def("TriggerGroupEvent", &UGearboxDialogManager::TriggerGroupEvent, py::return_value_policy::reference)
		.def("Cleanup", &UGearboxDialogManager::Cleanup)
		.def("SetGroupEventTag", &UGearboxDialogManager::SetGroupEventTag)
		.def("GetGroupEventTag", &UGearboxDialogManager::GetGroupEventTag, py::return_value_policy::reference)
		.def("SilenceGroup", &UGearboxDialogManager::SilenceGroup)
		.def("AddGroup", &UGearboxDialogManager::AddGroup)
		.def("UnregisterTalker", &UGearboxDialogManager::UnregisterTalker)
		.def("RegisterTalker", &UGearboxDialogManager::RegisterTalker)
		.def("DisableTalker", &UGearboxDialogManager::DisableTalker)
		.def("EnableTalker", &UGearboxDialogManager::EnableTalker)
		.def("GetPriority", &UGearboxDialogManager::GetPriority)
		;
	py::class_< UGearboxDialogNameTag, UAudioDevice >(m, "UGearboxDialogNameTag")
		.def_static("StaticClass", &UGearboxDialogNameTag::StaticClass, py::return_value_policy::reference)
		.def_readwrite("NameTag", &UGearboxDialogNameTag::NameTag, py::return_value_policy::reference)
		.def_readwrite("ParentTag", &UGearboxDialogNameTag::ParentTag, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogPriority, UAudioDevice >(m, "UGearboxDialogPriority")
		.def_static("StaticClass", &UGearboxDialogPriority::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogNode, UAudioDevice >(m, "UGearboxDialogNode")
		.def_static("StaticClass", &UGearboxDialogNode::StaticClass, py::return_value_policy::reference)
		.def_readwrite("NodeID", &UGearboxDialogNode::NodeID)
		.def("ActivateOutput", &UGearboxDialogNode::ActivateOutput)
		;
	py::class_< UGearboxDialogAction, UAudioDevice >(m, "UGearboxDialogAction")
		.def_static("StaticClass", &UGearboxDialogAction::StaticClass, py::return_value_policy::reference)
		.def("eventActivate", &UGearboxDialogAction::eventActivate)
		;
	py::class_< UGearboxDialogAct_Chance, UAudioDevice >(m, "UGearboxDialogAct_Chance")
		.def_static("StaticClass", &UGearboxDialogAct_Chance::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Chance", &UGearboxDialogAct_Chance::Chance)
		.def_readwrite("QuietTimeMin", &UGearboxDialogAct_Chance::QuietTimeMin)
		.def_readwrite("QuietTimeMax", &UGearboxDialogAct_Chance::QuietTimeMax)
		.def_readwrite("NextFireTime", &UGearboxDialogAct_Chance::NextFireTime)
		.def("eventActivate", &UGearboxDialogAct_Chance::eventActivate)
		;
	py::class_< UGearboxDialogAct_Compare, UAudioDevice >(m, "UGearboxDialogAct_Compare")
		.def_static("StaticClass", &UGearboxDialogAct_Compare::StaticClass, py::return_value_policy::reference)
		.def("eventActivate", &UGearboxDialogAct_Compare::eventActivate)
		;
	py::class_< UGearboxDialogAct_ObjectParameterSwitch, UAudioDevice >(m, "UGearboxDialogAct_ObjectParameterSwitch")
		.def_static("StaticClass", &UGearboxDialogAct_ObjectParameterSwitch::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Outputs", &UGearboxDialogAct_ObjectParameterSwitch::Outputs, py::return_value_policy::reference)
		.def("eventActivate", &UGearboxDialogAct_ObjectParameterSwitch::eventActivate)
		;
	py::class_< UGearboxDialogNonTemplateAction, UAudioDevice >(m, "UGearboxDialogNonTemplateAction")
		.def_static("StaticClass", &UGearboxDialogNonTemplateAction::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogAct_Talk, UAudioDevice >(m, "UGearboxDialogAct_Talk")
		.def_static("StaticClass", &UGearboxDialogAct_Talk::StaticClass, py::return_value_policy::reference)
		.def_property("bShowTalkers", [](UGearboxDialogAct_Talk &self){return self.bShowTalkers;}, [](UGearboxDialogAct_Talk &self, bool value){self.bShowTalkers = value ? 1 : 0;})
		.def_property("bPreviewing", [](UGearboxDialogAct_Talk &self){return self.bPreviewing;}, [](UGearboxDialogAct_Talk &self, bool value){self.bPreviewing = value ? 1 : 0;})
		.def_property("bInstigatorTalker", [](UGearboxDialogAct_Talk &self){return self.bInstigatorTalker;}, [](UGearboxDialogAct_Talk &self, bool value){self.bInstigatorTalker = value ? 1 : 0;})
		.def_readwrite("OutputDelay", &UGearboxDialogAct_Talk::OutputDelay)
		.def_readwrite("TalkData", &UGearboxDialogAct_Talk::TalkData, py::return_value_policy::reference)
		.def("eventActivate", &UGearboxDialogAct_Talk::eventActivate)
		.def("eventTalkFinished", &UGearboxDialogAct_Talk::eventTalkFinished)
		.def("eventTalkStarted", &UGearboxDialogAct_Talk::eventTalkStarted)
		;
	py::class_< UGearboxDialogTemplateAction, UAudioDevice >(m, "UGearboxDialogTemplateAction")
		.def_static("StaticClass", &UGearboxDialogTemplateAction::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogAct_Trigger, UAudioDevice >(m, "UGearboxDialogAct_Trigger")
		.def_static("StaticClass", &UGearboxDialogAct_Trigger::StaticClass, py::return_value_policy::reference)
		.def_property("bPreviewing", [](UGearboxDialogAct_Trigger &self){return self.bPreviewing;}, [](UGearboxDialogAct_Trigger &self, bool value){self.bPreviewing = value ? 1 : 0;})
		.def_readwrite("DialogEvent", &UGearboxDialogAct_Trigger::DialogEvent, py::return_value_policy::reference)
		.def("ActivateOutput", &UGearboxDialogAct_Trigger::ActivateOutput)
		.def("eventActivate", &UGearboxDialogAct_Trigger::eventActivate)
		;
	py::class_< UGearboxDialogEvent, UAudioDevice >(m, "UGearboxDialogEvent")
		.def_static("StaticClass", &UGearboxDialogEvent::StaticClass, py::return_value_policy::reference)
		.def_property("bDisabled", [](UGearboxDialogEvent &self){return self.bDisabled;}, [](UGearboxDialogEvent &self, bool value){self.bDisabled = value ? 1 : 0;})
		.def_readwrite("Tag", &UGearboxDialogEvent::Tag, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogTemplateEvent, UAudioDevice >(m, "UGearboxDialogTemplateEvent")
		.def_static("StaticClass", &UGearboxDialogTemplateEvent::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogVariable, UAudioDevice >(m, "UGearboxDialogVariable")
		.def_static("StaticClass", &UGearboxDialogVariable::StaticClass, py::return_value_policy::reference)
		.def("ResolveToArgumentValue", &UGearboxDialogVariable::ResolveToArgumentValue)
		.def("GetTalkers", &UGearboxDialogVariable::GetTalkers)
		;
	py::class_< UGearboxDialogVar_Instigator, UAudioDevice >(m, "UGearboxDialogVar_Instigator")
		.def_static("StaticClass", &UGearboxDialogVar_Instigator::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogVar_LastTalker, UAudioDevice >(m, "UGearboxDialogVar_LastTalker")
		.def_static("StaticClass", &UGearboxDialogVar_LastTalker::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogVar_NameTag, UAudioDevice >(m, "UGearboxDialogVar_NameTag")
		.def_static("StaticClass", &UGearboxDialogVar_NameTag::StaticClass, py::return_value_policy::reference)
		.def_readwrite("NameTag", &UGearboxDialogVar_NameTag::NameTag, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogVar_Other, UAudioDevice >(m, "UGearboxDialogVar_Other")
		.def_static("StaticClass", &UGearboxDialogVar_Other::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UGearboxDialogVar_Random, UAudioDevice >(m, "UGearboxDialogVar_Random")
		.def_static("StaticClass", &UGearboxDialogVar_Random::StaticClass, py::return_value_policy::reference)
		.def_property("bNotOther", [](UGearboxDialogVar_Random &self){return self.bNotOther;}, [](UGearboxDialogVar_Random &self, bool value){self.bNotOther = value ? 1 : 0;})
		.def_property("bNotInstigator", [](UGearboxDialogVar_Random &self){return self.bNotInstigator;}, [](UGearboxDialogVar_Random &self, bool value){self.bNotInstigator = value ? 1 : 0;})
		.def_property("bNotLastTalker", [](UGearboxDialogVar_Random &self){return self.bNotLastTalker;}, [](UGearboxDialogVar_Random &self, bool value){self.bNotLastTalker = value ? 1 : 0;})
		.def_readwrite("Allegiance", &UGearboxDialogVar_Random::Allegiance, py::return_value_policy::reference)
		.def_readwrite("DistanceLimit", &UGearboxDialogVar_Random::DistanceLimit, py::return_value_policy::reference)
		;
	py::class_< UGearboxSeqAct_ToggleDialog, UAudioDevice >(m, "UGearboxSeqAct_ToggleDialog")
		.def_static("StaticClass", &UGearboxSeqAct_ToggleDialog::StaticClass, py::return_value_policy::reference)
		.def_property("bDialogEnabled", [](UGearboxSeqAct_ToggleDialog &self){return self.bDialogEnabled;}, [](UGearboxSeqAct_ToggleDialog &self, bool value){self.bDialogEnabled = value ? 1 : 0;})
		;
	py::class_< UGearboxSeqAct_TriggerDialog, UAudioDevice >(m, "UGearboxSeqAct_TriggerDialog")
		.def_static("StaticClass", &UGearboxSeqAct_TriggerDialog::StaticClass, py::return_value_policy::reference)
		.def_property("bCheckCanPreview", [](UGearboxSeqAct_TriggerDialog &self){return self.bCheckCanPreview;}, [](UGearboxSeqAct_TriggerDialog &self, bool value){self.bCheckCanPreview = value ? 1 : 0;})
		.def_property("bCanPreview", [](UGearboxSeqAct_TriggerDialog &self){return self.bCanPreview;}, [](UGearboxSeqAct_TriggerDialog &self, bool value){self.bCanPreview = value ? 1 : 0;})
		.def_readwrite("Other", &UGearboxSeqAct_TriggerDialog::Other, py::return_value_policy::reference)
		.def_readwrite("EventTag", &UGearboxSeqAct_TriggerDialog::EventTag, py::return_value_policy::reference)
		.def_readwrite("NameTag", &UGearboxSeqAct_TriggerDialog::NameTag, py::return_value_policy::reference)
		.def_readwrite("EventData", &UGearboxSeqAct_TriggerDialog::EventData, py::return_value_policy::reference)
		.def_readwrite("MyDataUseCount", &UGearboxSeqAct_TriggerDialog::MyDataUseCount)
		;
	py::class_< UGearboxSeqAct_TriggerDialogName, UAudioDevice >(m, "UGearboxSeqAct_TriggerDialogName")
		.def_static("StaticClass", &UGearboxSeqAct_TriggerDialogName::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Group", &UGearboxSeqAct_TriggerDialogName::Group, py::return_value_policy::reference)
		;
	py::class_< UGearboxAccountActions, UAudioDevice >(m, "UGearboxAccountActions")
		.def_static("StaticClass", &UGearboxAccountActions::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CurrentConsumeCount", &UGearboxAccountActions::CurrentConsumeCount)
		.def_readwrite("CurrentControllerId", &UGearboxAccountActions::CurrentControllerId)
		.def_readwrite("CurrentEntitlement", &UGearboxAccountActions::CurrentEntitlement, py::return_value_policy::reference)
		.def_readwrite("CurrentBulkConsumeEntitlements", &UGearboxAccountActions::CurrentBulkConsumeEntitlements, py::return_value_policy::reference)
		.def_readwrite("CurrentBulkConsumeControllerIds", &UGearboxAccountActions::CurrentBulkConsumeControllerIds, py::return_value_policy::reference)
		.def_readwrite("CurrentBulkConsumeCounts", &UGearboxAccountActions::CurrentBulkConsumeCounts, py::return_value_policy::reference)
		.def_readwrite("__OnSignInGearboxAccount__Delegate", &UGearboxAccountActions::__OnSignInGearboxAccount__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSignUpGearboxAccount__Delegate", &UGearboxAccountActions::__OnSignUpGearboxAccount__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnResetPasswordGearboxAccount__Delegate", &UGearboxAccountActions::__OnResetPasswordGearboxAccount__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnCodeRedeemed__Delegate", &UGearboxAccountActions::__OnCodeRedeemed__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnEntitlementConsumed__Delegate", &UGearboxAccountActions::__OnEntitlementConsumed__Delegate, py::return_value_policy::reference)
		.def("HandleOffersNotifiedResponse", &UGearboxAccountActions::HandleOffersNotifiedResponse)
		.def("HandleBulkEntitlementsConsumedResponse", &UGearboxAccountActions::HandleBulkEntitlementsConsumedResponse)
		.def("HandleEntitlementConsumedResponse", &UGearboxAccountActions::HandleEntitlementConsumedResponse)
		.def("HandleCodeRedeemedResponse", &UGearboxAccountActions::HandleCodeRedeemedResponse)
		.def("HandleResetPasswordResponse", &UGearboxAccountActions::HandleResetPasswordResponse)
		.def("HandleSignUpResponse", &UGearboxAccountActions::HandleSignUpResponse)
		.def("HandleSignInResponse", &UGearboxAccountActions::HandleSignInResponse)
		.def("ExtractArchwayResult", &UGearboxAccountActions::ExtractArchwayResult, py::return_value_policy::reference)
		.def("MarkOffersNotified", &UGearboxAccountActions::MarkOffersNotified)
		.def("LocallyConsumeEntitlementWithCount", &UGearboxAccountActions::LocallyConsumeEntitlementWithCount)
		.def("eventConsumeEntitlementsWithCounts", &UGearboxAccountActions::eventConsumeEntitlementsWithCounts)
		.def("ConsumeEntitlementWithCount", &UGearboxAccountActions::ConsumeEntitlementWithCount)
		.def("RedeemCode", &UGearboxAccountActions::RedeemCode)
		.def("ResetPasswordGearboxAccount", &UGearboxAccountActions::ResetPasswordGearboxAccount)
		.def("EscapeJson", &UGearboxAccountActions::EscapeJson, py::return_value_policy::reference)
		.def("SignUpGearboxAccount", &UGearboxAccountActions::SignUpGearboxAccount)
		.def("SignInGearboxAccount", &UGearboxAccountActions::SignInGearboxAccount)
		.def("OnEntitlementConsumed", &UGearboxAccountActions::OnEntitlementConsumed)
		.def("OnCodeRedeemed", &UGearboxAccountActions::OnCodeRedeemed)
		.def("OnResetPasswordGearboxAccount", &UGearboxAccountActions::OnResetPasswordGearboxAccount)
		.def("OnSignUpGearboxAccount", &UGearboxAccountActions::OnSignUpGearboxAccount)
		.def("OnSignInGearboxAccount", &UGearboxAccountActions::OnSignInGearboxAccount)
		;
	py::class_< UGearboxAccountData, UAudioDevice >(m, "UGearboxAccountData")
		.def_static("StaticClass", &UGearboxAccountData::StaticClass, py::return_value_policy::reference)
		.def_property("SignedIn", [](UGearboxAccountData &self){return self.SignedIn;}, [](UGearboxAccountData &self, bool value){self.SignedIn = value ? 1 : 0;})
		.def_property("HasValidPlatform", [](UGearboxAccountData &self){return self.HasValidPlatform;}, [](UGearboxAccountData &self, bool value){self.HasValidPlatform = value ? 1 : 0;})
		.def_readwrite("RequestId", &UGearboxAccountData::RequestId, py::return_value_policy::reference)
		.def_readwrite("PlatformLoginName", &UGearboxAccountData::PlatformLoginName, py::return_value_policy::reference)
		.def_readwrite("NextEntitlementUpdateTime", &UGearboxAccountData::NextEntitlementUpdateTime, py::return_value_policy::reference)
		.def_readwrite("Entitlements", &UGearboxAccountData::Entitlements, py::return_value_policy::reference)
		.def_readwrite("Offers", &UGearboxAccountData::Offers, py::return_value_policy::reference)
		.def_readwrite("EntitlementsUpdatedDelegates", &UGearboxAccountData::EntitlementsUpdatedDelegates, py::return_value_policy::reference)
		.def_readwrite("Services", &UGearboxAccountData::Services, py::return_value_policy::reference)
		.def("CountEntitlement", &UGearboxAccountData::CountEntitlement)
		.def("GetTotalGoldenKeyCount", &UGearboxAccountData::GetTotalGoldenKeyCount)
		.def("GetGoldenKeyCount", &UGearboxAccountData::GetGoldenKeyCount)
		.def("HasGoldenKey", &UGearboxAccountData::HasGoldenKey)
		.def("HasDeveloperSkin", &UGearboxAccountData::HasDeveloperSkin)
		.def("IsDeveloper", &UGearboxAccountData::IsDeveloper)
		.def("MarkOffersNotified", &UGearboxAccountData::MarkOffersNotified)
		.def("GetUnnotifiedOffers", &UGearboxAccountData::GetUnnotifiedOffers, py::return_value_policy::reference)
		.def("GetEntitlementWithName", &UGearboxAccountData::GetEntitlementWithName, py::return_value_policy::reference)
		.def("GetEntitlementWithId", &UGearboxAccountData::GetEntitlementWithId, py::return_value_policy::reference)
		.def("HasEntitlement", &UGearboxAccountData::HasEntitlement)
		.def("RemoveEntitlement", &UGearboxAccountData::RemoveEntitlement)
		.def("ReplaceEntitlements", &UGearboxAccountData::ReplaceEntitlements)
		.def("ReplaceServices", &UGearboxAccountData::ReplaceServices)
		.def("HandleReloadEntitlementsResponse", &UGearboxAccountData::HandleReloadEntitlementsResponse)
		.def("ReloadEntitlements", &UGearboxAccountData::ReloadEntitlements)
		.def("ResetEntitlementUpdateTimer", &UGearboxAccountData::ResetEntitlementUpdateTimer)
		.def("CanReloadEntitlements", &UGearboxAccountData::CanReloadEntitlements)
		.def("TriggerEntitlementsUpdatedDelegates", &UGearboxAccountData::TriggerEntitlementsUpdatedDelegates)
		.def("ClearEntitlementsUpdatedDelegate", &UGearboxAccountData::ClearEntitlementsUpdatedDelegate)
		.def("AddEntitlementsUpdatedDelegate", &UGearboxAccountData::AddEntitlementsUpdatedDelegate)
		.def("eventGetService", &UGearboxAccountData::eventGetService, py::return_value_policy::reference)
		.def("Clear", &UGearboxAccountData::Clear)
		.def("ExtractArchwayResultJson", &UGearboxAccountData::ExtractArchwayResultJson)
		.def("ExtractArchwayResult", &UGearboxAccountData::ExtractArchwayResult)
		;
	py::class_< UGearboxProcess, UAudioDevice >(m, "UGearboxProcess")
		.def_static("StaticClass", &UGearboxProcess::StaticClass, py::return_value_policy::reference)
		.def_property("Waiting", [](UGearboxProcess &self){return self.Waiting;}, [](UGearboxProcess &self, bool value){self.Waiting = value ? 1 : 0;})
		.def_readwrite("FirstAttemptDelay", &UGearboxProcess::FirstAttemptDelay)
		.def_readwrite("BaseRetrySeconds", &UGearboxProcess::BaseRetrySeconds)
		.def_readwrite("MaxRetryAttempts", &UGearboxProcess::MaxRetryAttempts)
		.def_readwrite("RetryMultiplier", &UGearboxProcess::RetryMultiplier)
		.def_readwrite("RetryJitter", &UGearboxProcess::RetryJitter)
		.def_readwrite("CurrentRetrySeconds", &UGearboxProcess::CurrentRetrySeconds)
		.def_readwrite("Attempts", &UGearboxProcess::Attempts)
		.def_readwrite("WaitTime", &UGearboxProcess::WaitTime)
		.def_readwrite("CurrentStep", &UGearboxProcess::CurrentStep)
		.def_readwrite("FailureStep", &UGearboxProcess::FailureStep)
		.def("GetStepConfiguration", &UGearboxProcess::GetStepConfiguration, py::return_value_policy::reference)
		.def("GotoStep", &UGearboxProcess::GotoStep)
		.def("GotoNextStep", &UGearboxProcess::GotoNextStep)
		.def("GotoFirstStep", &UGearboxProcess::GotoFirstStep)
		.def("eventPerformStep", &UGearboxProcess::eventPerformStep)
		.def("PauseLoop", &UGearboxProcess::PauseLoop)
		.def("Init", &UGearboxProcess::Init)
		.def("ContinueLoop", &UGearboxProcess::ContinueLoop)
		.def("StopLoop", &UGearboxProcess::StopLoop)
		;
	py::class_< USparkInitializationProcess, UAudioDevice >(m, "USparkInitializationProcess")
		.def_static("StaticClass", &USparkInitializationProcess::StaticClass, py::return_value_policy::reference)
		.def_property("bPrimary", [](USparkInitializationProcess &self){return self.bPrimary;}, [](USparkInitializationProcess &self, bool value){self.bPrimary = value ? 1 : 0;})
		.def_property("ValidAccount", [](USparkInitializationProcess &self){return self.ValidAccount;}, [](USparkInitializationProcess &self, bool value){self.ValidAccount = value ? 1 : 0;})
		.def_readwrite("Data", &USparkInitializationProcess::Data, py::return_value_policy::reference)
		.def_readwrite("PlayerIndex", &USparkInitializationProcess::PlayerIndex)
		.def_readwrite("SparkInitializedDelegates", &USparkInitializationProcess::SparkInitializedDelegates, py::return_value_policy::reference)
		.def_readwrite("AsyncTicket", &USparkInitializationProcess::AsyncTicket, py::return_value_policy::reference)
		.def("eventTriggerSparkInitializedDelegates", &USparkInitializationProcess::eventTriggerSparkInitializedDelegates)
		.def("ClearSparkInitializedDelegate", &USparkInitializationProcess::ClearSparkInitializedDelegate)
		.def("AddSparkInitializedDelegate", &USparkInitializationProcess::AddSparkInitializedDelegate)
		.def("GetStepName", &USparkInitializationProcess::GetStepName, py::return_value_policy::reference)
		.def("GetStepConfiguration", &USparkInitializationProcess::GetStepConfiguration, py::return_value_policy::reference)
		.def("IsInitialized", &USparkInitializationProcess::IsInitialized)
		.def("IsDisabled", &USparkInitializationProcess::IsDisabled)
		.def("IsInitializing", &USparkInitializationProcess::IsInitializing)
		.def("HandleVerificationReceived", &USparkInitializationProcess::HandleVerificationReceived)
		.def("eventVerifyAuthentication", &USparkInitializationProcess::eventVerifyAuthentication)
		.def("AuthenticateTicketStringWithDelegate", &USparkInitializationProcess::AuthenticateTicketStringWithDelegate)
		.def("HandleAuthenticationReceived", &USparkInitializationProcess::HandleAuthenticationReceived)
		.def("eventAuthenticateAccount", &USparkInitializationProcess::eventAuthenticateAccount)
		.def("GetConfigQuery", &USparkInitializationProcess::GetConfigQuery, py::return_value_policy::reference)
		.def("CompleteInitialization", &USparkInitializationProcess::CompleteInitialization)
		.def("HttpInit", &USparkInitializationProcess::HttpInit)
		.def("CheckForTMS", &USparkInitializationProcess::CheckForTMS)
		.def("PerformStep", &USparkInitializationProcess::PerformStep)
		.def("StartProcess", &USparkInitializationProcess::StartProcess)
		.def("InitWithController", &USparkInitializationProcess::InitWithController)
		;
	py::class_< ULeviathanService, UAudioDevice >(m, "ULeviathanService")
		.def_static("StaticClass", &ULeviathanService::StaticClass, py::return_value_policy::reference)
		.def_readwrite("VfTable_ISparkUpdateCallback", &ULeviathanService::VfTable_ISparkUpdateCallback, py::return_value_policy::reference)
		.def_readwrite("EventBufferSize", &ULeviathanService::EventBufferSize)
		.def_readwrite("StatBufferSize", &ULeviathanService::StatBufferSize)
		.def_readwrite("AtomTableBufferSize", &ULeviathanService::AtomTableBufferSize)
		.def("eventGetLeviathanServiceConfiguration", &ULeviathanService::eventGetLeviathanServiceConfiguration, py::return_value_policy::reference)
		.def("OnSparkInitialized", &ULeviathanService::OnSparkInitialized)
		.def("LoadServiceConfigurationForPlayer", &ULeviathanService::LoadServiceConfigurationForPlayer)
		.def("GetLeviathanService", &ULeviathanService::GetLeviathanService, py::return_value_policy::reference)
		;
	py::class_< USparkInterface, UAudioDevice >(m, "USparkInterface")
		.def_static("StaticClass", &USparkInterface::StaticClass, py::return_value_policy::reference)
		.def("GetNewsService", &USparkInterface::GetNewsService, py::return_value_policy::reference)
		.def("GetTitleStorageServiceConfiguration", &USparkInterface::GetTitleStorageServiceConfiguration, py::return_value_policy::reference)
		.def("GetTitleStorageUrl", &USparkInterface::GetTitleStorageUrl, py::return_value_policy::reference)
		.def("ClearGearboxAccountData", &USparkInterface::ClearGearboxAccountData)
		.def("SignOutGearboxAccount", &USparkInterface::SignOutGearboxAccount)
		.def("SignInGearboxAccount", &USparkInterface::SignInGearboxAccount)
		.def("eventGetGearboxAccountData", &USparkInterface::eventGetGearboxAccountData, py::return_value_policy::reference)
		.def("eventIsGearboxAccountAuthenticated", &USparkInterface::eventIsGearboxAccountAuthenticated)
		.def("IsGearboxAccountSignedIn", &USparkInterface::IsGearboxAccountSignedIn)
		.def("ConvertUtcTimeToLocalTime", &USparkInterface::ConvertUtcTimeToLocalTime, py::return_value_policy::reference)
		.def("ShouldUpdateEmergencyMessage", &USparkInterface::ShouldUpdateEmergencyMessage)
		.def("GetEmergencyMessage", &USparkInterface::GetEmergencyMessage, py::return_value_policy::reference)
		.def("SetEmergencyMessage", &USparkInterface::SetEmergencyMessage)
		.def("eventGetPlatformLoginNameFromSplitscreenIndex", &USparkInterface::eventGetPlatformLoginNameFromSplitscreenIndex, py::return_value_policy::reference)
		.def("GetPlatformLoginNameFromController", &USparkInterface::GetPlatformLoginNameFromController, py::return_value_policy::reference)
		.def("IncreaseInteractionTries", &USparkInterface::IncreaseInteractionTries)
		.def("GetInteractionTries", &USparkInterface::GetInteractionTries)
		.def("GetInteractionGraceTries", &USparkInterface::GetInteractionGraceTries)
		.def("GetInteractionPunishmentMinWaitSeconds", &USparkInterface::GetInteractionPunishmentMinWaitSeconds)
		.def("GetInteractionMinWaitSeconds", &USparkInterface::GetInteractionMinWaitSeconds)
		.def("IsTmsComplete", &USparkInterface::IsTmsComplete)
		.def("SetTmsComplete", &USparkInterface::SetTmsComplete)
		.def("GetSparkInitialization", &USparkInterface::GetSparkInitialization, py::return_value_policy::reference)
		.def("eventRestartSparkInitialization", &USparkInterface::eventRestartSparkInitialization)
		.def("RestartSparkInitializationFromScript", &USparkInterface::RestartSparkInitializationFromScript)
		.def("StartSparkInitialization", &USparkInterface::StartSparkInitialization)
		.def("StartSecondaryInitialization", &USparkInterface::StartSecondaryInitialization)
		.def("GetGameName", &USparkInterface::GetGameName, py::return_value_policy::reference)
		.def("GetHardwareName", &USparkInterface::GetHardwareName, py::return_value_policy::reference)
		.def("GetPlatformName", &USparkInterface::GetPlatformName, py::return_value_policy::reference)
		.def("GetPlatformTicket", &USparkInterface::GetPlatformTicket, py::return_value_policy::reference)
		.def("ClearSparkConfigReceivedDelegate", &USparkInterface::ClearSparkConfigReceivedDelegate)
		.def("AddSparkConfigReceivedDelegate", &USparkInterface::AddSparkConfigReceivedDelegate)
		.def("ResetInitializationStatus", &USparkInterface::ResetInitializationStatus)
		.def("eventIsSparkEnabled", &USparkInterface::eventIsSparkEnabled)
		.def("IssueSparkStringRequest", &USparkInterface::IssueSparkStringRequest)
		.def("IssueSparkRequest", &USparkInterface::IssueSparkRequest)
		;
	py::class_< USparkInterfaceImpl, UAudioDevice >(m, "USparkInterfaceImpl")
		.def_static("StaticClass", &USparkInterfaceImpl::StaticClass, py::return_value_policy::reference)
		.def_property("TmsInitComplete", [](USparkInterfaceImpl &self){return self.TmsInitComplete;}, [](USparkInterfaceImpl &self, bool value){self.TmsInitComplete = value ? 1 : 0;})
		.def_property("UpdateEmergencyMessage", [](USparkInterfaceImpl &self){return self.UpdateEmergencyMessage;}, [](USparkInterfaceImpl &self, bool value){self.UpdateEmergencyMessage = value ? 1 : 0;})
		.def_readwrite("VfTable_ISparkInterface", &USparkInterfaceImpl::VfTable_ISparkInterface, py::return_value_policy::reference)
		.def_readwrite("VfTable_FTickableObject", &USparkInterfaceImpl::VfTable_FTickableObject, py::return_value_policy::reference)
		.def_readwrite("SparkInitialization", &USparkInterfaceImpl::SparkInitialization, py::return_value_policy::reference)
		.def_readwrite("SecondaryInitialization", &USparkInterfaceImpl::SecondaryInitialization, py::return_value_policy::reference)
		.def_readwrite("Accounts", &USparkInterfaceImpl::Accounts, py::return_value_policy::reference)
		.def_readwrite("LeviathanServiceClassName", &USparkInterfaceImpl::LeviathanServiceClassName, py::return_value_policy::reference)
		.def_readwrite("LeviathanSvc", &USparkInterfaceImpl::LeviathanSvc, py::return_value_policy::reference)
		.def_readwrite("ReadBufferSize", &USparkInterfaceImpl::ReadBufferSize)
		.def_readwrite("EmergencyMessage", &USparkInterfaceImpl::EmergencyMessage, py::return_value_policy::reference)
		.def_readwrite("Requests", &USparkInterfaceImpl::Requests, py::return_value_policy::reference)
		.def_readwrite("LastHttpRequestRetries", &USparkInterfaceImpl::LastHttpRequestRetries)
		.def_readwrite("LastHttpRequestResponseTime", &USparkInterfaceImpl::LastHttpRequestResponseTime)
		.def_readwrite("RecentHttpRequestFailures", &USparkInterfaceImpl::RecentHttpRequestFailures)
		.def_readwrite("InteractionMinWaitSeconds", &USparkInterfaceImpl::InteractionMinWaitSeconds)
		.def_readwrite("InteractionGraceTries", &USparkInterfaceImpl::InteractionGraceTries)
		.def_readwrite("InteractionPunishmentMinWaitSeconds", &USparkInterfaceImpl::InteractionPunishmentMinWaitSeconds)
		.def_readwrite("InteractionTries", &USparkInterfaceImpl::InteractionTries)
		.def_readwrite("TitleStorageService", &USparkInterfaceImpl::TitleStorageService, py::return_value_policy::reference)
		.def_readwrite("TitleStorageUrl", &USparkInterfaceImpl::TitleStorageUrl, py::return_value_policy::reference)
		.def_readwrite("NewsService", &USparkInterfaceImpl::NewsService, py::return_value_policy::reference)
		.def_readwrite("__OnSparkRequestComplete__Delegate", &USparkInterfaceImpl::__OnSparkRequestComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSparkConfigReceived__Delegate", &USparkInterfaceImpl::__OnSparkConfigReceived__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSparkEmergencyMessageUpdated__Delegate", &USparkInterfaceImpl::__OnSparkEmergencyMessageUpdated__Delegate, py::return_value_policy::reference)
		.def("GetNewsService", &USparkInterfaceImpl::GetNewsService, py::return_value_policy::reference)
		.def("GetTitleStorageServiceConfiguration", &USparkInterfaceImpl::GetTitleStorageServiceConfiguration, py::return_value_policy::reference)
		.def("GetTitleStorageUrl", &USparkInterfaceImpl::GetTitleStorageUrl, py::return_value_policy::reference)
		.def("OnSparkInitialized", &USparkInterfaceImpl::OnSparkInitialized)
		.def("IncreaseInteractionTries", &USparkInterfaceImpl::IncreaseInteractionTries)
		.def("GetInteractionTries", &USparkInterfaceImpl::GetInteractionTries)
		.def("GetInteractionGraceTries", &USparkInterfaceImpl::GetInteractionGraceTries)
		.def("GetInteractionPunishmentMinWaitSeconds", &USparkInterfaceImpl::GetInteractionPunishmentMinWaitSeconds)
		.def("GetInteractionMinWaitSeconds", &USparkInterfaceImpl::GetInteractionMinWaitSeconds)
		.def("ConvertUtcTimeToLocalTime", &USparkInterfaceImpl::ConvertUtcTimeToLocalTime, py::return_value_policy::reference)
		.def("ShouldUpdateEmergencyMessage", &USparkInterfaceImpl::ShouldUpdateEmergencyMessage)
		.def("GetEmergencyMessage", &USparkInterfaceImpl::GetEmergencyMessage, py::return_value_policy::reference)
		.def("SetEmergencyMessage", &USparkInterfaceImpl::SetEmergencyMessage)
		.def("IsTmsComplete", &USparkInterfaceImpl::IsTmsComplete)
		.def("SetTmsComplete", &USparkInterfaceImpl::SetTmsComplete)
		.def("RestartSparkInitializationFromScript", &USparkInterfaceImpl::RestartSparkInitializationFromScript)
		.def("eventRestartSparkInitialization", &USparkInterfaceImpl::eventRestartSparkInitialization)
		.def("StartSparkInitialization", &USparkInterfaceImpl::StartSparkInitialization)
		.def("ResetInitializationStatus", &USparkInterfaceImpl::ResetInitializationStatus)
		.def("ResetSecondaryInitializationStatus", &USparkInterfaceImpl::ResetSecondaryInitializationStatus)
		.def("StartSecondaryInitialization", &USparkInterfaceImpl::StartSecondaryInitialization)
		.def("GetSparkInitialization", &USparkInterfaceImpl::GetSparkInitialization, py::return_value_policy::reference)
		.def("SignInGearboxAccount", &USparkInterfaceImpl::SignInGearboxAccount)
		.def("eventGetGearboxAccountData", &USparkInterfaceImpl::eventGetGearboxAccountData, py::return_value_policy::reference)
		.def("SignOutGearboxAccount", &USparkInterfaceImpl::SignOutGearboxAccount)
		.def("ValidPlayerIndex", &USparkInterfaceImpl::ValidPlayerIndex)
		.def("GetPlayerIndex", &USparkInterfaceImpl::GetPlayerIndex)
		.def("ClearGearboxAccountData", &USparkInterfaceImpl::ClearGearboxAccountData)
		.def("IsGearboxAccountSignedIn", &USparkInterfaceImpl::IsGearboxAccountSignedIn)
		.def("eventIsGearboxAccountAuthenticated", &USparkInterfaceImpl::eventIsGearboxAccountAuthenticated)
		.def("GetGameName", &USparkInterfaceImpl::GetGameName, py::return_value_policy::reference)
		.def("GetHardwareName", &USparkInterfaceImpl::GetHardwareName, py::return_value_policy::reference)
		.def("GetPlatformName", &USparkInterfaceImpl::GetPlatformName, py::return_value_policy::reference)
		.def("GetPlatformTicket", &USparkInterfaceImpl::GetPlatformTicket, py::return_value_policy::reference)
		.def("ClearSparkConfigReceivedDelegate", &USparkInterfaceImpl::ClearSparkConfigReceivedDelegate)
		.def("AddSparkConfigReceivedDelegate", &USparkInterfaceImpl::AddSparkConfigReceivedDelegate)
		.def("GetPlatformLoginNameFromController", &USparkInterfaceImpl::GetPlatformLoginNameFromController, py::return_value_policy::reference)
		.def("eventGetPlatformLoginNameFromSplitscreenIndex", &USparkInterfaceImpl::eventGetPlatformLoginNameFromSplitscreenIndex, py::return_value_policy::reference)
		.def("eventGetPlatformLoginName", &USparkInterfaceImpl::eventGetPlatformLoginName, py::return_value_policy::reference)
		.def("eventGetLoginStatus", &USparkInterfaceImpl::eventGetLoginStatus)
		.def("eventIsShiftEnabled", &USparkInterfaceImpl::eventIsShiftEnabled)
		.def("eventIsSparkEnabled", &USparkInterfaceImpl::eventIsSparkEnabled)
		.def("WithShift", &USparkInterfaceImpl::WithShift)
		.def("WithSpark", &USparkInterfaceImpl::WithSpark)
		.def("IssueSparkStringRequest", &USparkInterfaceImpl::IssueSparkStringRequest)
		.def("IssueSparkRequest", &USparkInterfaceImpl::IssueSparkRequest)
		.def("AlternativeXboxlivePlatformId", &USparkInterfaceImpl::AlternativeXboxlivePlatformId, py::return_value_policy::reference)
		.def("OnSparkEmergencyMessageUpdated", &USparkInterfaceImpl::OnSparkEmergencyMessageUpdated)
		.def("OnSparkConfigReceived", &USparkInterfaceImpl::OnSparkConfigReceived)
		.def("OnSparkRequestComplete", &USparkInterfaceImpl::OnSparkRequestComplete)
		;
	py::class_< USparkServiceConfiguration, UAudioDevice >(m, "USparkServiceConfiguration")
		.def_static("StaticClass", &USparkServiceConfiguration::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ServiceName", &USparkServiceConfiguration::ServiceName, py::return_value_policy::reference)
		.def_readwrite("ConfigurationGroup", &USparkServiceConfiguration::ConfigurationGroup, py::return_value_policy::reference)
		.def_readwrite("Keys", &USparkServiceConfiguration::Keys, py::return_value_policy::reference)
		.def_readwrite("Values", &USparkServiceConfiguration::Values, py::return_value_policy::reference)
		.def_readwrite("OverrideUrl", &USparkServiceConfiguration::OverrideUrl, py::return_value_policy::reference)
		.def("GetFloatParameter", &USparkServiceConfiguration::GetFloatParameter)
		.def("GetIntParameter", &USparkServiceConfiguration::GetIntParameter)
		.def("GetStringParameter", &USparkServiceConfiguration::GetStringParameter, py::return_value_policy::reference)
		.def("GetParameter", &USparkServiceConfiguration::GetParameter, py::return_value_policy::reference)
		.def("LoadService", &USparkServiceConfiguration::LoadService)
		.def("LoadOverrides", &USparkServiceConfiguration::LoadOverrides)
		;
	py::class_< USparkTypes, UAudioDevice >(m, "USparkTypes")
		.def_static("StaticClass", &USparkTypes::StaticClass, py::return_value_policy::reference)
		.def_readwrite("__OnSparkRequestComplete__Delegate", &USparkTypes::__OnSparkRequestComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSparkConfigReceived__Delegate", &USparkTypes::__OnSparkConfigReceived__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSparkInitialized__Delegate", &USparkTypes::__OnSparkInitialized__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSparkEmergencyMessageUpdated__Delegate", &USparkTypes::__OnSparkEmergencyMessageUpdated__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnEntitlementsUpdated__Delegate", &USparkTypes::__OnEntitlementsUpdated__Delegate, py::return_value_policy::reference)
		.def("UTF8toString", &USparkTypes::UTF8toString, py::return_value_policy::reference)
		.def("OnEntitlementsUpdated", &USparkTypes::OnEntitlementsUpdated)
		.def("OnSparkEmergencyMessageUpdated", &USparkTypes::OnSparkEmergencyMessageUpdated)
		.def("OnSparkInitialized", &USparkTypes::OnSparkInitialized)
		.def("OnSparkConfigReceived", &USparkTypes::OnSparkConfigReceived)
		.def("OnSparkRequestComplete", &USparkTypes::OnSparkRequestComplete)
		;
	py::class_< UAction_ChangeRuleSet, UAudioDevice >(m, "UAction_ChangeRuleSet")
		.def_static("StaticClass", &UAction_ChangeRuleSet::StaticClass, py::return_value_policy::reference)
		.def_readwrite("NewRuleSet", &UAction_ChangeRuleSet::NewRuleSet, py::return_value_policy::reference)
		;
	py::class_< URES_RuleSetChange, UAudioDevice >(m, "URES_RuleSetChange")
		.def_static("StaticClass", &URES_RuleSetChange::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UAction_FaceThreat, UAudioDevice >(m, "UAction_FaceThreat")
		.def_static("StaticClass", &UAction_FaceThreat::StaticClass, py::return_value_policy::reference)
		.def("eventStopSequence", &UAction_FaceThreat::eventStopSequence)
		;
	py::class_< URES_FacingPolicy, UAudioDevice >(m, "URES_FacingPolicy")
		.def_static("StaticClass", &URES_FacingPolicy::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UAction_MoveRandom, UAudioDevice >(m, "UAction_MoveRandom")
		.def_static("StaticClass", &UAction_MoveRandom::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UAction_MoveTo, UAudioDevice >(m, "UAction_MoveTo")
		.def_static("StaticClass", &UAction_MoveTo::StaticClass, py::return_value_policy::reference)
		;
	py::class_< URES_Movement, UAudioDevice >(m, "URES_Movement")
		.def_static("StaticClass", &URES_Movement::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UAction_PopRuleSet, UAudioDevice >(m, "UAction_PopRuleSet")
		.def_static("StaticClass", &UAction_PopRuleSet::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UAction_PushRuleSet, UAudioDevice >(m, "UAction_PushRuleSet")
		.def_static("StaticClass", &UAction_PushRuleSet::StaticClass, py::return_value_policy::reference)
		.def_readwrite("NewRuleSet", &UAction_PushRuleSet::NewRuleSet, py::return_value_policy::reference)
		;
	py::class_< UActorAttributeContextResolver, UAudioDevice >(m, "UActorAttributeContextResolver")
		.def_static("StaticClass", &UActorAttributeContextResolver::StaticClass, py::return_value_policy::reference)
		.def("GetAttributeContext", &UActorAttributeContextResolver::GetAttributeContext, py::return_value_policy::reference)
		;
	py::class_< UAIComponentAttributeContextResolver, UAudioDevice >(m, "UAIComponentAttributeContextResolver")
		.def_static("StaticClass", &UAIComponentAttributeContextResolver::StaticClass, py::return_value_policy::reference)
		.def("GetAttributeContext", &UAIComponentAttributeContextResolver::GetAttributeContext, py::return_value_policy::reference)
		;
	py::class_< UAIStateBase, UAudioDevice >(m, "UAIStateBase")
		.def_static("StaticClass", &UAIStateBase::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UAIState, UAudioDevice >(m, "UAIState")
		.def_static("StaticClass", &UAIState::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UAIState_Priority, UAudioDevice >(m, "UAIState_Priority")
		.def_static("StaticClass", &UAIState_Priority::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UAIState_Random, UAudioDevice >(m, "UAIState_Random")
		.def_static("StaticClass", &UAIState_Random::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UAIState_Sequential, UAudioDevice >(m, "UAIState_Sequential")
		.def_static("StaticClass", &UAIState_Sequential::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UBehavior_AIHold, UAudioDevice >(m, "UBehavior_AIHold")
		.def_static("StaticClass", &UBehavior_AIHold::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Reason", &UBehavior_AIHold::Reason, py::return_value_policy::reference)
		.def_readwrite("Action", &UBehavior_AIHold::Action)
		.def_readwrite("Type", &UBehavior_AIHold::Type)
		.def("ApplyBehaviorToContext", &UBehavior_AIHold::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AIPriority, UAudioDevice >(m, "UBehavior_AIPriority")
		.def_static("StaticClass", &UBehavior_AIPriority::StaticClass, py::return_value_policy::reference)
		.def_readwrite("PriorityModifier", &UBehavior_AIPriority::PriorityModifier)
		.def_readwrite("Target", &UBehavior_AIPriority::Target, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AIPriority::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AITargeting, UAudioDevice >(m, "UBehavior_AITargeting")
		.def_static("StaticClass", &UBehavior_AITargeting::StaticClass, py::return_value_policy::reference)
		.def_readwrite("NewTargetingDefinition", &UBehavior_AITargeting::NewTargetingDefinition, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AITargeting::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ChangeAnyBehaviorSequenceState, UAudioDevice >(m, "UBehavior_ChangeAnyBehaviorSequenceState")
		.def_static("StaticClass", &UBehavior_ChangeAnyBehaviorSequenceState::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Action", &UBehavior_ChangeAnyBehaviorSequenceState::Action)
		.def_readwrite("SequenceName", &UBehavior_ChangeAnyBehaviorSequenceState::SequenceName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeAnyBehaviorSequenceState::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ChangeLocalBehaviorSequenceState, UAudioDevice >(m, "UBehavior_ChangeLocalBehaviorSequenceState")
		.def_static("StaticClass", &UBehavior_ChangeLocalBehaviorSequenceState::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Action", &UBehavior_ChangeLocalBehaviorSequenceState::Action)
		.def_readwrite("SequenceName", &UBehavior_ChangeLocalBehaviorSequenceState::SequenceName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeLocalBehaviorSequenceState::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CompareBool, UAudioDevice >(m, "UBehavior_CompareBool")
		.def_static("StaticClass", &UBehavior_CompareBool::StaticClass, py::return_value_policy::reference)
		.def_property("BoolValue", [](UBehavior_CompareBool &self){return self.BoolValue;}, [](UBehavior_CompareBool &self, bool value){self.BoolValue = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_CompareBool::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CompareValues, UAudioDevice >(m, "UBehavior_CompareValues")
		.def_static("StaticClass", &UBehavior_CompareValues::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ValueA", &UBehavior_CompareValues::ValueA, py::return_value_policy::reference)
		.def_readwrite("ContextB", &UBehavior_CompareValues::ContextB, py::return_value_policy::reference)
		.def_readwrite("ValueB", &UBehavior_CompareValues::ValueB, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_CompareValues::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CustomEvent, UAudioDevice >(m, "UBehavior_CustomEvent")
		.def_static("StaticClass", &UBehavior_CustomEvent::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CustomEventName", &UBehavior_CustomEvent::CustomEventName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_CustomEvent::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_Delay, UAudioDevice >(m, "UBehavior_Delay")
		.def_static("StaticClass", &UBehavior_Delay::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Delay", &UBehavior_Delay::Delay)
		.def("ApplyBehaviorToContext", &UBehavior_Delay::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_Gate, UAudioDevice >(m, "UBehavior_Gate")
		.def_static("StaticClass", &UBehavior_Gate::StaticClass, py::return_value_policy::reference)
		.def_readwrite("GateCount", &UBehavior_Gate::GateCount)
		.def_readwrite("ActivationCount", &UBehavior_Gate::ActivationCount)
		.def("ApplyBehaviorToContext", &UBehavior_Gate::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GetFloatParam, UAudioDevice >(m, "UBehavior_GetFloatParam")
		.def_static("StaticClass", &UBehavior_GetFloatParam::StaticClass, py::return_value_policy::reference)
		.def("PublishBehaviorOutput", &UBehavior_GetFloatParam::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_GetFloatParam::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GetObjectParam, UAudioDevice >(m, "UBehavior_GetObjectParam")
		.def_static("StaticClass", &UBehavior_GetObjectParam::StaticClass, py::return_value_policy::reference)
		.def("PublishBehaviorOutput", &UBehavior_GetObjectParam::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_GetObjectParam::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GetVectorParam, UAudioDevice >(m, "UBehavior_GetVectorParam")
		.def_static("StaticClass", &UBehavior_GetVectorParam::StaticClass, py::return_value_policy::reference)
		.def_property("bTreatAsVector", [](UBehavior_GetVectorParam &self){return self.bTreatAsVector;}, [](UBehavior_GetVectorParam &self, bool value){self.bTreatAsVector = value ? 1 : 0;})
		.def("PublishBehaviorOutput", &UBehavior_GetVectorParam::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_GetVectorParam::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_InterpolateFloatOverTime, UAudioDevice >(m, "UBehavior_InterpolateFloatOverTime")
		.def_static("StaticClass", &UBehavior_InterpolateFloatOverTime::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Duration", &UBehavior_InterpolateFloatOverTime::Duration)
		.def_readwrite("UpdateInterval", &UBehavior_InterpolateFloatOverTime::UpdateInterval)
		.def_readwrite("EndingValue", &UBehavior_InterpolateFloatOverTime::EndingValue)
		.def_readwrite("BeginningValue", &UBehavior_InterpolateFloatOverTime::BeginningValue)
		.def("PublishBehaviorOutput", &UBehavior_InterpolateFloatOverTime::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_InterpolateFloatOverTime::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_Metronome, UAudioDevice >(m, "UBehavior_Metronome")
		.def_static("StaticClass", &UBehavior_Metronome::StaticClass, py::return_value_policy::reference)
		.def_property("bUseTickCount", [](UBehavior_Metronome &self){return self.bUseTickCount;}, [](UBehavior_Metronome &self, bool value){self.bUseTickCount = value ? 1 : 0;})
		.def_property("bUseDuration", [](UBehavior_Metronome &self){return self.bUseDuration;}, [](UBehavior_Metronome &self, bool value){self.bUseDuration = value ? 1 : 0;})
		.def_readwrite("MaxTickCount", &UBehavior_Metronome::MaxTickCount)
		.def_readwrite("CurrentTickCount", &UBehavior_Metronome::CurrentTickCount)
		.def_readwrite("Duration", &UBehavior_Metronome::Duration)
		.def_readwrite("TickInterval", &UBehavior_Metronome::TickInterval)
		.def("ApplyBehaviorToContext", &UBehavior_Metronome::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ModifyTimer, UAudioDevice >(m, "UBehavior_ModifyTimer")
		.def_static("StaticClass", &UBehavior_ModifyTimer::StaticClass, py::return_value_policy::reference)
		.def_readwrite("TimerId", &UBehavior_ModifyTimer::TimerId)
		.def_readwrite("Operation", &UBehavior_ModifyTimer::Operation)
		.def_readwrite("NewTimerDelay", &UBehavior_ModifyTimer::NewTimerDelay, py::return_value_policy::reference)
		.def("PublishBehaviorOutput", &UBehavior_ModifyTimer::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_ModifyTimer::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetFloatParam, UAudioDevice >(m, "UBehavior_SetFloatParam")
		.def_static("StaticClass", &UBehavior_SetFloatParam::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Value", &UBehavior_SetFloatParam::Value)
		.def("ApplyBehaviorToContext", &UBehavior_SetFloatParam::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetObjectParam, UAudioDevice >(m, "UBehavior_SetObjectParam")
		.def_static("StaticClass", &UBehavior_SetObjectParam::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Value", &UBehavior_SetObjectParam::Value, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetObjectParam::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetVectorParam, UAudioDevice >(m, "UBehavior_SetVectorParam")
		.def_static("StaticClass", &UBehavior_SetVectorParam::StaticClass, py::return_value_policy::reference)
		.def_property("bKeepR", [](UBehavior_SetVectorParam &self){return self.bKeepR;}, [](UBehavior_SetVectorParam &self, bool value){self.bKeepR = value ? 1 : 0;})
		.def_property("bKeepG", [](UBehavior_SetVectorParam &self){return self.bKeepG;}, [](UBehavior_SetVectorParam &self, bool value){self.bKeepG = value ? 1 : 0;})
		.def_property("bKeepB", [](UBehavior_SetVectorParam &self){return self.bKeepB;}, [](UBehavior_SetVectorParam &self, bool value){self.bKeepB = value ? 1 : 0;})
		.def_property("bKeepA", [](UBehavior_SetVectorParam &self){return self.bKeepA;}, [](UBehavior_SetVectorParam &self, bool value){self.bKeepA = value ? 1 : 0;})
		.def_property("bTreatAsVector", [](UBehavior_SetVectorParam &self){return self.bTreatAsVector;}, [](UBehavior_SetVectorParam &self, bool value){self.bTreatAsVector = value ? 1 : 0;})
		.def_readwrite("RValue", &UBehavior_SetVectorParam::RValue)
		.def_readwrite("GValue", &UBehavior_SetVectorParam::GValue)
		.def_readwrite("bValue", &UBehavior_SetVectorParam::bValue)
		.def_readwrite("AValue", &UBehavior_SetVectorParam::AValue)
		.def("ApplyBehaviorToContext", &UBehavior_SetVectorParam::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpecialMove, UAudioDevice >(m, "UBehavior_SpecialMove")
		.def_static("StaticClass", &UBehavior_SpecialMove::StaticClass, py::return_value_policy::reference)
		.def_property("bStopCurrentMove", [](UBehavior_SpecialMove &self){return self.bStopCurrentMove;}, [](UBehavior_SpecialMove &self, bool value){self.bStopCurrentMove = value ? 1 : 0;})
		.def_property("bQueueIfCannotPlay", [](UBehavior_SpecialMove &self){return self.bQueueIfCannotPlay;}, [](UBehavior_SpecialMove &self, bool value){self.bQueueIfCannotPlay = value ? 1 : 0;})
		.def_property("bLocal", [](UBehavior_SpecialMove &self){return self.bLocal;}, [](UBehavior_SpecialMove &self, bool value){self.bLocal = value ? 1 : 0;})
		.def_readwrite("SpecialMove", &UBehavior_SpecialMove::SpecialMove, py::return_value_policy::reference)
		.def_readwrite("Duration", &UBehavior_SpecialMove::Duration)
		.def("PlaySpecialMove", &UBehavior_SpecialMove::PlaySpecialMove)
		.def("TriggerOutput", &UBehavior_SpecialMove::TriggerOutput)
		.def("ApplyBehaviorToContext", &UBehavior_SpecialMove::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpecialMoveStop, UAudioDevice >(m, "UBehavior_SpecialMoveStop")
		.def_static("StaticClass", &UBehavior_SpecialMoveStop::StaticClass, py::return_value_policy::reference)
		.def_readwrite("SpecificMove", &UBehavior_SpecialMoveStop::SpecificMove, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SpecialMoveStop::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_StartAkAmbientSound, UAudioDevice >(m, "UBehavior_StartAkAmbientSound")
		.def_static("StaticClass", &UBehavior_StartAkAmbientSound::StaticClass, py::return_value_policy::reference)
		.def_readwrite("AkEvent", &UBehavior_StartAkAmbientSound::AkEvent, py::return_value_policy::reference)
		.def_readwrite("SoundGroup", &UBehavior_StartAkAmbientSound::SoundGroup, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_StartAkAmbientSound::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_StopAkAmbientSound, UAudioDevice >(m, "UBehavior_StopAkAmbientSound")
		.def_static("StaticClass", &UBehavior_StopAkAmbientSound::StaticClass, py::return_value_policy::reference)
		.def_readwrite("AkEvent", &UBehavior_StopAkAmbientSound::AkEvent, py::return_value_policy::reference)
		.def_readwrite("SoundGroup", &UBehavior_StopAkAmbientSound::SoundGroup, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_StopAkAmbientSound::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_StopDialog, UAudioDevice >(m, "UBehavior_StopDialog")
		.def_static("StaticClass", &UBehavior_StopDialog::StaticClass, py::return_value_policy::reference)
		.def_readwrite("EventTag", &UBehavior_StopDialog::EventTag, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_StopDialog::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ToggleDialog, UAudioDevice >(m, "UBehavior_ToggleDialog")
		.def_static("StaticClass", &UBehavior_ToggleDialog::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Option", &UBehavior_ToggleDialog::Option)
		.def("ApplyBehaviorToContext", &UBehavior_ToggleDialog::ApplyBehaviorToContext)
		;
	py::class_< UCameraModifierCrossfade, UAudioDevice >(m, "UCameraModifierCrossfade")
		.def_static("StaticClass", &UCameraModifierCrossfade::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ModifierA", &UCameraModifierCrossfade::ModifierA, py::return_value_policy::reference)
		.def_readwrite("ModifierB", &UCameraModifierCrossfade::ModifierB, py::return_value_policy::reference)
		.def_readwrite("CurModifierNdx", &UCameraModifierCrossfade::CurModifierNdx)
		.def_readwrite("CurBlendWeight", &UCameraModifierCrossfade::CurBlendWeight)
		.def_readwrite("BlendSpeed", &UCameraModifierCrossfade::BlendSpeed)
		.def_readwrite("DebugInset", &UCameraModifierCrossfade::DebugInset)
		.def_readwrite("LerpMode", &UCameraModifierCrossfade::LerpMode)
		.def("DoCrossfade", &UCameraModifierCrossfade::DoCrossfade)
		.def("UpdateAllLerps", &UCameraModifierCrossfade::UpdateAllLerps)
		.def("ModifyCamera", &UCameraModifierCrossfade::ModifyCamera)
		.def("ProcessCameraBlend", &UCameraModifierCrossfade::ProcessCameraBlend)
		.def("InitializeSubModifiers", &UCameraModifierCrossfade::InitializeSubModifiers)
		.def("eventEnableModifier", &UCameraModifierCrossfade::eventEnableModifier)
		;
	py::class_< UCameraModifierLookAt, UAudioDevice >(m, "UCameraModifierLookAt")
		.def_static("StaticClass", &UCameraModifierLookAt::StaticClass, py::return_value_policy::reference)
		.def_property("bActionFinished", [](UCameraModifierLookAt &self){return self.bActionFinished;}, [](UCameraModifierLookAt &self, bool value){self.bActionFinished = value ? 1 : 0;})
		.def_readwrite("LookAtMode", &UCameraModifierLookAt::LookAtMode)
		.def_readwrite("Duration", &UCameraModifierLookAt::Duration)
		.def_readwrite("TimeElapsed", &UCameraModifierLookAt::TimeElapsed)
		.def_readwrite("ThirdPersonPullBackDistance", &UCameraModifierLookAt::ThirdPersonPullBackDistance)
		.def_readwrite("ThirdPersonPushSideDistance", &UCameraModifierLookAt::ThirdPersonPushSideDistance)
		.def_readwrite("ThirdPersonRaiseUpDistance", &UCameraModifierLookAt::ThirdPersonRaiseUpDistance)
		.def_readwrite("Zoom", &UCameraModifierLookAt::Zoom)
		.def_readwrite("TransitionInTime", &UCameraModifierLookAt::TransitionInTime)
		.def_readwrite("TransitionOutTime", &UCameraModifierLookAt::TransitionOutTime)
		.def_readwrite("LookAtTarget", &UCameraModifierLookAt::LookAtTarget, py::return_value_policy::reference)
		.def_readwrite("LookAtBone", &UCameraModifierLookAt::LookAtBone, py::return_value_policy::reference)
		.def("ExecuteFadeIfNeeded", &UCameraModifierLookAt::ExecuteFadeIfNeeded)
		.def("GetDesiredLocation", &UCameraModifierLookAt::GetDesiredLocation, py::return_value_policy::reference)
		.def("ModifyCamera", &UCameraModifierLookAt::ModifyCamera)
		.def("GetBoneLocation", &UCameraModifierLookAt::GetBoneLocation)
		.def("SetLookAtBone", &UCameraModifierLookAt::SetLookAtBone)
		.def("SetLookAtTarget", &UCameraModifierLookAt::SetLookAtTarget)
		.def("SetTargetLocation", &UCameraModifierLookAt::SetTargetLocation)
		.def("SetDuration", &UCameraModifierLookAt::SetDuration)
		.def("SetTransitionTimes", &UCameraModifierLookAt::SetTransitionTimes)
		.def("SetZoomFOV", &UCameraModifierLookAt::SetZoomFOV)
		.def("SetThirdPersonDistances", &UCameraModifierLookAt::SetThirdPersonDistances)
		.def("SetLookAtMode", &UCameraModifierLookAt::SetLookAtMode)
		.def("DisableModifier", &UCameraModifierLookAt::DisableModifier)
		.def("EnableModifier", &UCameraModifierLookAt::EnableModifier)
		;
	py::class_< UDefinitionUITestCaseDefinition, UAudioDevice >(m, "UDefinitionUITestCaseDefinition")
		.def_static("StaticClass", &UDefinitionUITestCaseDefinition::StaticClass, py::return_value_policy::reference)
		.def_readwrite("ConstantFloat", &UDefinitionUITestCaseDefinition::ConstantFloat)
		.def_readwrite("ConstantFloatArray", &UDefinitionUITestCaseDefinition::ConstantFloatArray, py::return_value_policy::reference)
		.def_readwrite("Float", &UDefinitionUITestCaseDefinition::Float)
		.def_readwrite("FloatArray", &UDefinitionUITestCaseDefinition::FloatArray, py::return_value_policy::reference)
		.def_readwrite("EditConstReferencedDefinition", &UDefinitionUITestCaseDefinition::EditConstReferencedDefinition, py::return_value_policy::reference)
		.def_readwrite("EditConstArrayOfReferences", &UDefinitionUITestCaseDefinition::EditConstArrayOfReferences, py::return_value_policy::reference)
		.def_readwrite("ReferencedDefinition", &UDefinitionUITestCaseDefinition::ReferencedDefinition, py::return_value_policy::reference)
		.def_readwrite("ArrayOfReferences", &UDefinitionUITestCaseDefinition::ArrayOfReferences, py::return_value_policy::reference)
		;
	py::class_< USparkNews, UAudioDevice >(m, "USparkNews")
		.def_static("StaticClass", &USparkNews::StaticClass, py::return_value_policy::reference)
		.def_readwrite("Articles", &USparkNews::Articles, py::return_value_policy::reference)
		.def_readwrite("__OnNewsRetrieved__Delegate", &USparkNews::__OnNewsRetrieved__Delegate, py::return_value_policy::reference)
		.def("Internal_GetService", &USparkNews::Internal_GetService, py::return_value_policy::reference)
		.def("CallAndClearRetrievedDelegate", &USparkNews::CallAndClearRetrievedDelegate)
		.def("ParseArticles", &USparkNews::ParseArticles)
		.def("HandleNewsRetrievalResponse", &USparkNews::HandleNewsRetrievalResponse)
		.def("GetArticle", &USparkNews::GetArticle)
		.def("GetArticleCount", &USparkNews::GetArticleCount)
		.def("RetrieveNews", &USparkNews::RetrieveNews)
		.def("OnNewsRetrieved", &USparkNews::OnNewsRetrieved)
		;
	py::class_< UGearboxAccountEntitlement, UAudioDevice >(m, "UGearboxAccountEntitlement")
		.def_static("StaticClass", &UGearboxAccountEntitlement::StaticClass, py::return_value_policy::reference)
		.def_property("Consumable", [](UGearboxAccountEntitlement &self){return self.Consumable;}, [](UGearboxAccountEntitlement &self, bool value){self.Consumable = value ? 1 : 0;})
		.def_readwrite("Identifier", &UGearboxAccountEntitlement::Identifier, py::return_value_policy::reference)
		.def_readwrite("Id", &UGearboxAccountEntitlement::Id)
		.def_readwrite("ConsumableAmount", &UGearboxAccountEntitlement::ConsumableAmount)
		.def_readwrite("Consumed", &UGearboxAccountEntitlement::Consumed)
		.def_readwrite("Payload", &UGearboxAccountEntitlement::Payload, py::return_value_policy::reference)
		.def_readwrite("LocallyConsumed", &UGearboxAccountEntitlement::LocallyConsumed)
		;
	py::class_< UGearboxAccountOffer, UAudioDevice >(m, "UGearboxAccountOffer")
		.def_static("StaticClass", &UGearboxAccountOffer::StaticClass, py::return_value_policy::reference)
		.def_property("Notified", [](UGearboxAccountOffer &self){return self.Notified;}, [](UGearboxAccountOffer &self, bool value){self.Notified = value ? 1 : 0;})
		.def_readwrite("TitleEfigs", &UGearboxAccountOffer::TitleEfigs, py::return_value_policy::reference)
		.def_readwrite("DescriptionEfigs", &UGearboxAccountOffer::DescriptionEfigs, py::return_value_policy::reference)
		.def_readwrite("Id", &UGearboxAccountOffer::Id)
		.def_readwrite("DateUnlocked", &UGearboxAccountOffer::DateUnlocked, py::return_value_policy::reference)
		;
	py::class_< APatrolDestination, UAudioDevice >(m, "APatrolDestination")
		.def_static("StaticClass", &APatrolDestination::StaticClass, py::return_value_policy::reference)
		.def_readwrite("NextPatrolPoints", &APatrolDestination::NextPatrolPoints, py::return_value_policy::reference)
		;
	py::class_< UGearboxSeqAct_TargetPriority, UAudioDevice >(m, "UGearboxSeqAct_TargetPriority")
		.def_static("StaticClass", &UGearboxSeqAct_TargetPriority::StaticClass, py::return_value_policy::reference)
		.def_readwrite("AITargets", &UGearboxSeqAct_TargetPriority::AITargets, py::return_value_policy::reference)
		.def_readwrite("PriorityModifier", &UGearboxSeqAct_TargetPriority::PriorityModifier)
		;
	py::class_< UGearboxSeqAct_CameraShake, UAudioDevice >(m, "UGearboxSeqAct_CameraShake")
		.def_static("StaticClass", &UGearboxSeqAct_CameraShake::StaticClass, py::return_value_policy::reference)
		.def_readwrite("CameraShake", &UGearboxSeqAct_CameraShake::CameraShake, py::return_value_policy::reference)
		;
	py::class_< UGearboxSeqAct_PawnClonerLink, UAudioDevice >(m, "UGearboxSeqAct_PawnClonerLink")
		.def_static("StaticClass", &UGearboxSeqAct_PawnClonerLink::StaticClass, py::return_value_policy::reference)
		.def_property("bEnabled", [](UGearboxSeqAct_PawnClonerLink &self){return self.bEnabled;}, [](UGearboxSeqAct_PawnClonerLink &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_property("bIsSpawning", [](UGearboxSeqAct_PawnClonerLink &self){return self.bIsSpawning;}, [](UGearboxSeqAct_PawnClonerLink &self, bool value){self.bIsSpawning = value ? 1 : 0;})
		.def_readwrite("ClonePoints", &UGearboxSeqAct_PawnClonerLink::ClonePoints, py::return_value_policy::reference)
		.def_readwrite("SpawnedCount", &UGearboxSeqAct_PawnClonerLink::SpawnedCount)
		.def_readwrite("RemainingDelay", &UGearboxSeqAct_PawnClonerLink::RemainingDelay)
		;
	py::class_< UGFxMovieDrawStyleInstanceData, UAudioDevice >(m, "UGFxMovieDrawStyleInstanceData")
		.def_static("StaticClass", &UGFxMovieDrawStyleInstanceData::StaticClass, py::return_value_policy::reference)
		.def_property("bAlwaysInstance", [](UGFxMovieDrawStyleInstanceData &self){return self.bAlwaysInstance;}, [](UGFxMovieDrawStyleInstanceData &self, bool value){self.bAlwaysInstance = value ? 1 : 0;})
		.def_readwrite("ComponentIDName", &UGFxMovieDrawStyleInstanceData::ComponentIDName, py::return_value_policy::reference)
		.def_readwrite("MatIndexName", &UGFxMovieDrawStyleInstanceData::MatIndexName, py::return_value_policy::reference)
		.def_readwrite("MatiSource", &UGFxMovieDrawStyleInstanceData::MatiSource, py::return_value_policy::reference)
		.def_readwrite("TextureParameterName", &UGFxMovieDrawStyleInstanceData::TextureParameterName, py::return_value_policy::reference)
		.def_readwrite("Component", &UGFxMovieDrawStyleInstanceData::Component, py::return_value_policy::reference)
		.def_readwrite("MaterialIndex", &UGFxMovieDrawStyleInstanceData::MaterialIndex)
		.def_readwrite("Mati", &UGFxMovieDrawStyleInstanceData::Mati, py::return_value_policy::reference)
		.def("eventRequiresClientInstance", &UGFxMovieDrawStyleInstanceData::eventRequiresClientInstance)
		;
	py::class_< USeqEvent_AllSpawned, UAudioDevice >(m, "USeqEvent_AllSpawned")
		.def_static("StaticClass", &USeqEvent_AllSpawned::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UPopulationMasterAttributeContextResolver, UAudioDevice >(m, "UPopulationMasterAttributeContextResolver")
		.def_static("StaticClass", &UPopulationMasterAttributeContextResolver::StaticClass, py::return_value_policy::reference)
		.def("GetAttributeContext", &UPopulationMasterAttributeContextResolver::GetAttributeContext, py::return_value_policy::reference)
		;
	py::class_< USeqEvent_SinglePopulationDeath, UAudioDevice >(m, "USeqEvent_SinglePopulationDeath")
		.def_static("StaticClass", &USeqEvent_SinglePopulationDeath::StaticClass, py::return_value_policy::reference)
		;
	py::class_< URES_Rotation, UAudioDevice >(m, "URES_Rotation")
		.def_static("StaticClass", &URES_Rotation::StaticClass, py::return_value_policy::reference)
		;
	py::class_< URES_SpecialMove, UAudioDevice >(m, "URES_SpecialMove")
		.def_static("StaticClass", &URES_SpecialMove::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USeqEvent_ArrivedAtMoveNode, UAudioDevice >(m, "USeqEvent_ArrivedAtMoveNode")
		.def_static("StaticClass", &USeqEvent_ArrivedAtMoveNode::StaticClass, py::return_value_policy::reference)
		;
	py::class_< USeqEvent_LeavingMoveNode, UAudioDevice >(m, "USeqEvent_LeavingMoveNode")
		.def_static("StaticClass", &USeqEvent_LeavingMoveNode::StaticClass, py::return_value_policy::reference)
		;
	py::class_< UShowDebugHelpers, UAudioDevice >(m, "UShowDebugHelpers")
		.def_static("StaticClass", &UShowDebugHelpers::StaticClass, py::return_value_policy::reference)
		;
	py::class_< ASkeletalMeshActorGBXMatinee, UAudioDevice >(m, "ASkeletalMeshActorGBXMatinee")
		.def_static("StaticClass", &ASkeletalMeshActorGBXMatinee::StaticClass, py::return_value_policy::reference)
		;

}