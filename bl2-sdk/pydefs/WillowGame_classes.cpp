#include "stdafx.h"
// Using =======================================================================
namespace py = pybind11;

// Module ======================================================================
void Export_pystes_WillowGame_classes(py::module &m)
{
#ifndef _DEBUG
	py::class_< UAchievementUtility, UObject >(m, "UAchievementUtility")
		.def("ShouldUnlockAchievementFromUnlockType", &UAchievementUtility::ShouldUnlockAchievementFromUnlockType, py::return_value_policy::reference)
		;
	py::class_< AActionSkill, AActor >(m, "AActionSkill")
		.def_property("bInitialized", [](AActionSkill &self){return self.bInitialized;}, [](AActionSkill &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_property("bDebugEnabled", [](AActionSkill &self){return self.bDebugEnabled;}, [](AActionSkill &self, bool value){self.bDebugEnabled = value ? 1 : 0;})
		.def_property("bBlockDeactivate", [](AActionSkill &self){return self.bBlockDeactivate;}, [](AActionSkill &self, bool value){self.bBlockDeactivate = value ? 1 : 0;})
		.def_property("bWantsDeactivate", [](AActionSkill &self){return self.bWantsDeactivate;}, [](AActionSkill &self, bool value){self.bWantsDeactivate = value ? 1 : 0;})
		.def_property("bWantsDestroy", [](AActionSkill &self){return self.bWantsDestroy;}, [](AActionSkill &self, bool value){self.bWantsDestroy = value ? 1 : 0;})
		.def_property("bActionSkillNearingCompletionEventFired", [](AActionSkill &self){return self.bActionSkillNearingCompletionEventFired;}, [](AActionSkill &self, bool value){self.bActionSkillNearingCompletionEventFired = value ? 1 : 0;})
		.def_property("bAllowAutomaticActiveAbilityActivation", [](AActionSkill &self){return self.bAllowAutomaticActiveAbilityActivation;}, [](AActionSkill &self, bool value){self.bAllowAutomaticActiveAbilityActivation = value ? 1 : 0;})
		.def_property("bRestrictActiveAbilityByCount", [](AActionSkill &self){return self.bRestrictActiveAbilityByCount;}, [](AActionSkill &self, bool value){self.bRestrictActiveAbilityByCount = value ? 1 : 0;})
		.def_property("bRestrictActiveAbilityByTimeFrequency", [](AActionSkill &self){return self.bRestrictActiveAbilityByTimeFrequency;}, [](AActionSkill &self, bool value){self.bRestrictActiveAbilityByTimeFrequency = value ? 1 : 0;})
		.def_property("bAllowAutomaticCooldownAbilityActivation", [](AActionSkill &self){return self.bAllowAutomaticCooldownAbilityActivation;}, [](AActionSkill &self, bool value){self.bAllowAutomaticCooldownAbilityActivation = value ? 1 : 0;})
		.def_property("bRestrictCooldownAbilityByCount", [](AActionSkill &self){return self.bRestrictCooldownAbilityByCount;}, [](AActionSkill &self, bool value){self.bRestrictCooldownAbilityByCount = value ? 1 : 0;})
		.def_property("bRestrictCooldownAbilityByTimeFrequency", [](AActionSkill &self){return self.bRestrictCooldownAbilityByTimeFrequency;}, [](AActionSkill &self, bool value){self.bRestrictCooldownAbilityByTimeFrequency = value ? 1 : 0;})
		.def_readwrite("VfTable_IIInstanceData", &AActionSkill::VfTable_IIInstanceData, py::return_value_policy::reference)
		.def_readwrite("VfTable_IITimerBehavior", &AActionSkill::VfTable_IITimerBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IICustomEvent", &AActionSkill::VfTable_IICustomEvent, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorConsumer", &AActionSkill::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorProvider", &AActionSkill::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIConstructObject", &AActionSkill::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("TickRate", &AActionSkill::TickRate)
		.def_readwrite("NextTick", &AActionSkill::NextTick)
		.def_readwrite("MyController", &AActionSkill::MyController, py::return_value_policy::reference)
		.def_readwrite("MyWillowPawn", &AActionSkill::MyWillowPawn, py::return_value_policy::reference)
		.def_readwrite("MyWillowPlayerPawn", &AActionSkill::MyWillowPlayerPawn, py::return_value_policy::reference)
		.def_readwrite("MyWillowPC", &AActionSkill::MyWillowPC, py::return_value_policy::reference)
		.def_readwrite("MyWillowMind", &AActionSkill::MyWillowMind, py::return_value_policy::reference)
		.def_readwrite("TargetPawn", &AActionSkill::TargetPawn, py::return_value_policy::reference)
		.def_readwrite("InstanceState", &AActionSkill::InstanceState, py::return_value_policy::reference)
		.def_readwrite("ConsumerHandle", &AActionSkill::ConsumerHandle, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorConsumerState", &AActionSkill::ReplicatedBehaviorConsumerState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorEvent", &AActionSkill::ReplicatedBehaviorEvent, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &AActionSkill::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def_readwrite("ActionSkillTimers", &AActionSkill::ActionSkillTimers, py::return_value_policy::reference)
		.def_readwrite("CustomEventReplication", &AActionSkill::CustomEventReplication, py::return_value_policy::reference)
		.def_readwrite("ActionSkillNearingCompletionTime", &AActionSkill::ActionSkillNearingCompletionTime)
		.def_readwrite("MaxActivationCountPerActiveCycle", &AActionSkill::MaxActivationCountPerActiveCycle)
		.def_readwrite("ActiveAbilityActivationTimeFrequency", &AActionSkill::ActiveAbilityActivationTimeFrequency)
		.def_readwrite("MaxActivationCountPerCooldownCycle", &AActionSkill::MaxActivationCountPerCooldownCycle)
		.def_readwrite("CooldownAbilityActivationTimeFrequency", &AActionSkill::CooldownAbilityActivationTimeFrequency)
		.def_readwrite("MeleeOverrideSkill", &AActionSkill::MeleeOverrideSkill, py::return_value_policy::reference)
		.def_readwrite("TimeStarted", &AActionSkill::TimeStarted)
		.def("ShouldResetOnInterruptedGrenadeThrow", &AActionSkill::ShouldResetOnInterruptedGrenadeThrow)
		.def("CanResetActionSkill", &AActionSkill::CanResetActionSkill)
		.def("eventOverrideCrosshairVisibility", &AActionSkill::eventOverrideCrosshairVisibility)
		.def("eventGetDeferredActionSkillTime", &AActionSkill::eventGetDeferredActionSkillTime)
		.def("eventTickActionSkillHUD", &AActionSkill::eventTickActionSkillHUD)
		.def("eventDisableActionSkillHUD", &AActionSkill::eventDisableActionSkillHUD)
		.def("eventEnableActionSkillHUD", &AActionSkill::eventEnableActionSkillHUD)
		.def("GetBehaviorConsumerHandle", &AActionSkill::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("GetActionSkillEventContextObject", &AActionSkill::GetActionSkillEventContextObject, py::return_value_policy::reference)
		.def("eventRunCustomEvent", &AActionSkill::eventRunCustomEvent)
		.def("eventHandleTimerEvent", &AActionSkill::eventHandleTimerEvent)
		.def("SetTimerState", &AActionSkill::SetTimerState)
		.def("GetTimerState", &AActionSkill::GetTimerState)
		.def("GetTimeSeconds", &AActionSkill::GetTimeSeconds)
		.def("GetReplicatedInstanceDataState", &AActionSkill::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &AActionSkill::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &AActionSkill::DestroyOwnedInstanceData)
		.def("eventRemoveInstanceDataObject", &AActionSkill::eventRemoveInstanceDataObject)
		.def("eventRemoveInstanceData", &AActionSkill::eventRemoveInstanceData)
		.def("eventGetInstanceData", &AActionSkill::eventGetInstanceData)
		.def("SetInstanceData", &AActionSkill::SetInstanceData)
		.def("EnableDebug", &AActionSkill::EnableDebug)
		.def("NotifyActionSkillActiveAbility", &AActionSkill::NotifyActionSkillActiveAbility)
		.def("StartActionSkillActiveAbility", &AActionSkill::StartActionSkillActiveAbility)
		.def("ClientStartActionSkillActiveAbility", &AActionSkill::ClientStartActionSkillActiveAbility)
		.def("AllowAutomaticActiveAbilityActivation", &AActionSkill::AllowAutomaticActiveAbilityActivation)
		.def("AllowAutomaticCooldownAbilityActivation", &AActionSkill::AllowAutomaticCooldownAbilityActivation)
		.def("eventOnActionSkillTick", &AActionSkill::eventOnActionSkillTick)
		.def("OverridesStandardMelee", &AActionSkill::OverridesStandardMelee)
		.def("ReadyToInterceptMelee", &AActionSkill::ReadyToInterceptMelee)
		.def("OnActionSkillOwnerMelee", &AActionSkill::OnActionSkillOwnerMelee)
		.def("OnActionSkillWeaponsRestricted", &AActionSkill::OnActionSkillWeaponsRestricted)
		.def("OnActionSkillOwnerInjured", &AActionSkill::OnActionSkillOwnerInjured)
		.def("OnActionSkillKilledEnemy", &AActionSkill::OnActionSkillKilledEnemy)
		.def("OnActionSkillShowBackMenu", &AActionSkill::OnActionSkillShowBackMenu)
		.def("OnActionSkillFakePause", &AActionSkill::OnActionSkillFakePause)
		.def("OnActionSkillOwnerTouchedActor", &AActionSkill::OnActionSkillOwnerTouchedActor)
		.def("OnActionSkillOwnerHitWall", &AActionSkill::OnActionSkillOwnerHitWall)
		.def("OnActionSkillOwnerStoppedWalking", &AActionSkill::OnActionSkillOwnerStoppedWalking)
		.def("OnActionSkillOwnerBeganWalking", &AActionSkill::OnActionSkillOwnerBeganWalking)
		.def("OnActionSkillOwnerBeganFalling", &AActionSkill::OnActionSkillOwnerBeganFalling)
		.def("eventOnActionSkillOwnerAllieganceChanged", &AActionSkill::eventOnActionSkillOwnerAllieganceChanged)
		.def("OnActionSkillOwnerWeaponSwitched", &AActionSkill::OnActionSkillOwnerWeaponSwitched)
		.def("OnActionSkillOwnerDied", &AActionSkill::OnActionSkillOwnerDied)
		.def("eventOwnerLostAutoAimTarget", &AActionSkill::eventOwnerLostAutoAimTarget)
		.def("eventOwnerAcquiredAutoAimTarget", &AActionSkill::eventOwnerAcquiredAutoAimTarget)
		.def("eventTornOff", &AActionSkill::eventTornOff)
		.def("TearOff", &AActionSkill::TearOff)
		.def("OnActionSkillEnded", &AActionSkill::OnActionSkillEnded)
		.def("eventIsDeactivateBlocked", &AActionSkill::eventIsDeactivateBlocked)
		.def("ClientActionSkillWantsToDeactivate", &AActionSkill::ClientActionSkillWantsToDeactivate)
		.def("eventOnActionSkillWantsToDeactivate", &AActionSkill::eventOnActionSkillWantsToDeactivate)
		.def("OnActionSkillStarted", &AActionSkill::OnActionSkillStarted)
		.def("eventReplicatedEvent", &AActionSkill::eventReplicatedEvent)
		.def("OnActionSkillOwnerShowBackMenu", &AActionSkill::OnActionSkillOwnerShowBackMenu)
		.def("OnTimerEvent", &AActionSkill::OnTimerEvent)
		.def("OnActionSkillNearingCompletion", &AActionSkill::OnActionSkillNearingCompletion)
		.def("OnActionSkillOwnerMeleeOverridden", &AActionSkill::OnActionSkillOwnerMeleeOverridden)
		.def("OnOwnerLostAutoAimTarget", &AActionSkill::OnOwnerLostAutoAimTarget)
		.def("OnOwnerAcquiredAutoAimTarget", &AActionSkill::OnOwnerAcquiredAutoAimTarget)
		.def("OnActionSkillDeactivated", &AActionSkill::OnActionSkillDeactivated)
		.def("OnActionSkillActivated", &AActionSkill::OnActionSkillActivated)
		.def("OnActionSkillActiveAbilityNotified", &AActionSkill::OnActionSkillActiveAbilityNotified)
		.def("OnActionSkillActiveAbilityActivated", &AActionSkill::OnActionSkillActiveAbilityActivated)
		.def("SetBehaviorProviderDefinition", &AActionSkill::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &AActionSkill::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		.def("AllowNewActiveAbilityActivation", [](AActionSkill &self ) { int* pyCurrentActionSkillActiveAbilityCount = (int*)malloc(sizeof(int)) ; float* pyNextActionSkillActiveAbilityTime = (float*)malloc(sizeof(float)) ;  bool ret =  self.AllowNewActiveAbilityActivation(pyCurrentActionSkillActiveAbilityCount, pyNextActionSkillActiveAbilityTime); return py::make_tuple(ret, *pyCurrentActionSkillActiveAbilityCount, *pyNextActionSkillActiveAbilityTime); })
		.def("AllowNewCooldownAbilityActivation", [](AActionSkill &self ) { int* pyCurrentActionSkillCooldownAbilityCount = (int*)malloc(sizeof(int)) ; float* pyNextActionSkillCooldownAbilityTime = (float*)malloc(sizeof(float)) ;  bool ret =  self.AllowNewCooldownAbilityActivation(pyCurrentActionSkillCooldownAbilityCount, pyNextActionSkillCooldownAbilityTime); return py::make_tuple(ret, *pyCurrentActionSkillCooldownAbilityCount, *pyNextActionSkillCooldownAbilityTime); })
		;
	py::class_< AScorpioActionSkill, AActionSkill >(m, "AScorpioActionSkill")
		.def_readwrite("ScorpioSpawnedActor", &AScorpioActionSkill::ScorpioSpawnedActor, py::return_value_policy::reference)
		.def_readwrite("GeminiSpawnedActor", &AScorpioActionSkill::GeminiSpawnedActor, py::return_value_policy::reference)
		.def_readwrite("ActiveProjectile", &AScorpioActionSkill::ActiveProjectile, py::return_value_policy::reference)
		.def_readwrite("GeminiSkill", &AScorpioActionSkill::GeminiSkill, py::return_value_policy::reference)
		.def_readwrite("ThrowScorpioSMD", &AScorpioActionSkill::ThrowScorpioSMD, py::return_value_policy::reference)
		.def("ShouldResetOnInterruptedGrenadeThrow", &AScorpioActionSkill::ShouldResetOnInterruptedGrenadeThrow)
		.def("CanResetActionSkill", &AScorpioActionSkill::CanResetActionSkill)
		.def("NotifySkillActorDied", &AScorpioActionSkill::NotifySkillActorDied)
		.def("GetActionSkillEventContextObject", &AScorpioActionSkill::GetActionSkillEventContextObject, py::return_value_policy::reference)
		.def("ClientDeployScorpio", &AScorpioActionSkill::ClientDeployScorpio)
		.def("DeployScorpio", &AScorpioActionSkill::DeployScorpio)
		.def("PlayThrowAnimation", &AScorpioActionSkill::PlayThrowAnimation)
		.def("DestroyOwnedInstanceData", &AScorpioActionSkill::DestroyOwnedInstanceData)
		.def("RemoveInstanceData", &AScorpioActionSkill::RemoveInstanceData)
		.def("eventGetInstanceData", &AScorpioActionSkill::eventGetInstanceData)
		.def("SetInstanceData", &AScorpioActionSkill::SetInstanceData)
		.def("StartActionSkillActiveAbility", &AScorpioActionSkill::StartActionSkillActiveAbility)
		.def("OnActionSkillOwnerDied", &AScorpioActionSkill::OnActionSkillOwnerDied)
		.def("OnActionSkillEnded", &AScorpioActionSkill::OnActionSkillEnded)
		.def("OnActionSkillStarted", &AScorpioActionSkill::OnActionSkillStarted)
		.def("AllowNewActiveAbilityActivation", [](AScorpioActionSkill &self ) { int* pyCurrentActionSkillActiveAbilityCount = (int*)malloc(sizeof(int)) ; float* pyNextActionSkillActiveAbilityTime = (float*)malloc(sizeof(float)) ;  bool ret =  self.AllowNewActiveAbilityActivation(pyCurrentActionSkillActiveAbilityCount, pyNextActionSkillActiveAbilityTime); return py::make_tuple(ret, *pyCurrentActionSkillActiveAbilityCount, *pyNextActionSkillActiveAbilityTime); })
		;
	py::class_< UActorFactoryInteractiveObject, UActorFactory >(m, "UActorFactoryInteractiveObject")
		.def_readwrite("Definition", &UActorFactoryInteractiveObject::Definition, py::return_value_policy::reference)
		;
	py::class_< UActorFactoryWillowElevatorButton, UActorFactoryInteractiveObject >(m, "UActorFactoryWillowElevatorButton")
		;
	py::class_< UActorFactoryMissionPickupSpawner, UActorFactory >(m, "UActorFactoryMissionPickupSpawner")
		.def_readwrite("Definition", &UActorFactoryMissionPickupSpawner::Definition, py::return_value_policy::reference)
		;
	py::class_< UActorFactoryMissionPickupFailsafe, UActorFactoryMissionPickupSpawner >(m, "UActorFactoryMissionPickupFailsafe")
		;
	py::class_< UActorFactoryPopulationOpportunityArea, UActorFactory >(m, "UActorFactoryPopulationOpportunityArea")
		;
	py::class_< UActorFactoryPopulationOpportunityDen, UActorFactory >(m, "UActorFactoryPopulationOpportunityDen")
		;
	py::class_< UActorFactoryWillowCoopPlayerStart, UActorFactory >(m, "UActorFactoryWillowCoopPlayerStart")
		;
	py::class_< UActorFactoryWillowElevator, UActorFactoryMover >(m, "UActorFactoryWillowElevator")
		;
	py::class_< UActorFactoryWillowPawn, UActorFactory >(m, "UActorFactoryWillowPawn")
		.def_readwrite("PawnArchetype", &UActorFactoryWillowPawn::PawnArchetype, py::return_value_policy::reference)
		;
	py::class_< UActorFactoryWillowTrigger, UActorFactory >(m, "UActorFactoryWillowTrigger")
		;
	py::class_< UActorFactoryWillowVehicle, UActorFactory >(m, "UActorFactoryWillowVehicle")
		.def_readwrite("VehicleArchetype", &UActorFactoryWillowVehicle::VehicleArchetype, py::return_value_policy::reference)
		;
	py::class_< UActorFactoryWillowVehicleFactory, UActorFactoryWillowVehicle >(m, "UActorFactoryWillowVehicleFactory")
		;
	py::class_< UActorFactoryWillowWaypoint, UActorFactory >(m, "UActorFactoryWillowWaypoint")
		;
	py::class_< UAdvancedAxisDefinition, UGBXDefinition >(m, "UAdvancedAxisDefinition")
		.def_readwrite("Speed", &UAdvancedAxisDefinition::Speed)
		.def_readwrite("ZoomSpeed", &UAdvancedAxisDefinition::ZoomSpeed)
		.def_readwrite("DeadZone", &UAdvancedAxisDefinition::DeadZone)
		.def_readwrite("AccelThreshold", &UAdvancedAxisDefinition::AccelThreshold)
		.def_readwrite("AccelRate", &UAdvancedAxisDefinition::AccelRate)
		.def_readwrite("AccelSpeed", &UAdvancedAxisDefinition::AccelSpeed)
		.def_readwrite("AccelWarmup", &UAdvancedAxisDefinition::AccelWarmup)
		;
	py::class_< UAIPawnBalanceModifierDefinition, UGBXDefinition >(m, "UAIPawnBalanceModifierDefinition")
		.def_property("bEmptyAttributeStartingValues", [](UAIPawnBalanceModifierDefinition &self){return self.bEmptyAttributeStartingValues;}, [](UAIPawnBalanceModifierDefinition &self, bool value){self.bEmptyAttributeStartingValues = value ? 1 : 0;})
		.def_readwrite("AIPawnBalanceDefinitionPath", &UAIPawnBalanceModifierDefinition::AIPawnBalanceDefinitionPath, py::return_value_policy::reference)
		.def_readwrite("AttributeStartingValues", &UAIPawnBalanceModifierDefinition::AttributeStartingValues, py::return_value_policy::reference)
		;
	py::class_< UAIResourceAttributeValueResolver, UAttributeValueResolver >(m, "UAIResourceAttributeValueResolver")
		.def_readwrite("Resource", &UAIResourceAttributeValueResolver::Resource, py::return_value_policy::reference)
		;
	py::class_< UAmmoDropWeightAttributeValueResolver, UAttributeValueResolver >(m, "UAmmoDropWeightAttributeValueResolver")
		.def_readwrite("Resource", &UAmmoDropWeightAttributeValueResolver::Resource, py::return_value_policy::reference)
		.def_readwrite("ResourceThreshold", &UAmmoDropWeightAttributeValueResolver::ResourceThreshold, py::return_value_policy::reference)
		.def_readwrite("AboveThresholdWeight", &UAmmoDropWeightAttributeValueResolver::AboveThresholdWeight, py::return_value_policy::reference)
		.def_readwrite("NoPoolWeight", &UAmmoDropWeightAttributeValueResolver::NoPoolWeight, py::return_value_policy::reference)
		.def_readwrite("MinBelowThresholdWeight", &UAmmoDropWeightAttributeValueResolver::MinBelowThresholdWeight, py::return_value_policy::reference)
		.def_readwrite("MaxBelowThresholdWeight", &UAmmoDropWeightAttributeValueResolver::MaxBelowThresholdWeight, py::return_value_policy::reference)
		;
	py::class_< UAmmoResourcePool, UResourcePool >(m, "UAmmoResourcePool")
		.def("GetDebugText", &UAmmoResourcePool::GetDebugText)
		.def("GetExtraAmmoRegen", &UAmmoResourcePool::GetExtraAmmoRegen)
		;
	py::class_< UAmmoResourceUpgradeAttributeValueResolver, UAttributeValueResolver >(m, "UAmmoResourceUpgradeAttributeValueResolver")
		.def_readwrite("AssociatedResource", &UAmmoResourceUpgradeAttributeValueResolver::AssociatedResource, py::return_value_policy::reference)
		.def_readwrite("AmmoResourceUpgradesArrayIndex", &UAmmoResourceUpgradeAttributeValueResolver::AmmoResourceUpgradesArrayIndex)
		;
	py::class_< UAssetLibraryManager, UObject >(m, "UAssetLibraryManager")
		.def_readwrite("EditorAssetLibraries", &UAssetLibraryManager::EditorAssetLibraries, py::return_value_policy::reference)
		.def_readwrite("RuntimeAssetLibraries", &UAssetLibraryManager::RuntimeAssetLibraries, py::return_value_policy::reference)
		.def("DetermineObjLibraryType", &UAssetLibraryManager::DetermineObjLibraryType)
		.def("DetermineLibraryType", &UAssetLibraryManager::DetermineLibraryType)
		.def("EncodeSKUID", &UAssetLibraryManager::EncodeSKUID)
		.def("EncodeTyped", &UAssetLibraryManager::EncodeTyped)
		.def("Encode", &UAssetLibraryManager::Encode)
		.def("DecodeTyped", [](UAssetLibraryManager &self , int EncodedObj, unsigned char ObjType, int Revision, int SKUID) { class UObject** pyDecodedResult = 0 ;  bool ret =  self.DecodeTyped(EncodedObj, ObjType, Revision, SKUID, pyDecodedResult); return py::make_tuple(ret, *pyDecodedResult); })
		.def("Decode", [](UAssetLibraryManager &self , int EncodedObj, int Revision, int SKUID) { class UObject** pyDecodedResult = 0 ;  bool ret =  self.Decode(EncodedObj, Revision, SKUID, pyDecodedResult); return py::make_tuple(ret, *pyDecodedResult); })
		;
	py::class_< UAttributePresentationDefinition, UGBXDefinition >(m, "UAttributePresentationDefinition")
		.def_property("bIncludeSuffixInTranslation", [](UAttributePresentationDefinition &self){return self.bIncludeSuffixInTranslation;}, [](UAttributePresentationDefinition &self, bool value){self.bIncludeSuffixInTranslation = value ? 1 : 0;})
		.def_property("bIncludePrefixInTranslation", [](UAttributePresentationDefinition &self){return self.bIncludePrefixInTranslation;}, [](UAttributePresentationDefinition &self, bool value){self.bIncludePrefixInTranslation = value ? 1 : 0;})
		.def_property("bBiggerIsBetter", [](UAttributePresentationDefinition &self){return self.bBiggerIsBetter;}, [](UAttributePresentationDefinition &self, bool value){self.bBiggerIsBetter = value ? 1 : 0;})
		.def_property("bDisplayAsPercentage", [](UAttributePresentationDefinition &self){return self.bDisplayAsPercentage;}, [](UAttributePresentationDefinition &self, bool value){self.bDisplayAsPercentage = value ? 1 : 0;})
		.def_property("bDisplayPercentAsFloat", [](UAttributePresentationDefinition &self){return self.bDisplayPercentAsFloat;}, [](UAttributePresentationDefinition &self, bool value){self.bDisplayPercentAsFloat = value ? 1 : 0;})
		.def_property("bDisplayAsInverse", [](UAttributePresentationDefinition &self){return self.bDisplayAsInverse;}, [](UAttributePresentationDefinition &self, bool value){self.bDisplayAsInverse = value ? 1 : 0;})
		.def_property("bDontDisplayNumber", [](UAttributePresentationDefinition &self){return self.bDontDisplayNumber;}, [](UAttributePresentationDefinition &self, bool value){self.bDontDisplayNumber = value ? 1 : 0;})
		.def_property("bDontDisplayPlusSign", [](UAttributePresentationDefinition &self){return self.bDontDisplayPlusSign;}, [](UAttributePresentationDefinition &self, bool value){self.bDontDisplayPlusSign = value ? 1 : 0;})
		.def_property("bUseCustomNumberPlacement", [](UAttributePresentationDefinition &self){return self.bUseCustomNumberPlacement;}, [](UAttributePresentationDefinition &self, bool value){self.bUseCustomNumberPlacement = value ? 1 : 0;})
		.def_property("bEnableTextColor", [](UAttributePresentationDefinition &self){return self.bEnableTextColor;}, [](UAttributePresentationDefinition &self, bool value){self.bEnableTextColor = value ? 1 : 0;})
		.def_property("bValueRemappingEnabled", [](UAttributePresentationDefinition &self){return self.bValueRemappingEnabled;}, [](UAttributePresentationDefinition &self, bool value){self.bValueRemappingEnabled = value ? 1 : 0;})
		.def_property("bUseOneAsBaseValueForPresentationIfContextFailsToResolve", [](UAttributePresentationDefinition &self){return self.bUseOneAsBaseValueForPresentationIfContextFailsToResolve;}, [](UAttributePresentationDefinition &self, bool value){self.bUseOneAsBaseValueForPresentationIfContextFailsToResolve = value ? 1 : 0;})
		.def_property("bUseTwoAsBaseValueForPresentationIfContextFailsToResolve", [](UAttributePresentationDefinition &self){return self.bUseTwoAsBaseValueForPresentationIfContextFailsToResolve;}, [](UAttributePresentationDefinition &self, bool value){self.bUseTwoAsBaseValueForPresentationIfContextFailsToResolve = value ? 1 : 0;})
		.def_readwrite("BasePriority", &UAttributePresentationDefinition::BasePriority)
		.def_readwrite("Attribute", &UAttributePresentationDefinition::Attribute, py::return_value_policy::reference)
		.def_readwrite("Description", &UAttributePresentationDefinition::Description, py::return_value_policy::reference)
		.def_readwrite("NoConstraintText", &UAttributePresentationDefinition::NoConstraintText, py::return_value_policy::reference)
		.def_readwrite("Suffix", &UAttributePresentationDefinition::Suffix, py::return_value_policy::reference)
		.def_readwrite("Prefix", &UAttributePresentationDefinition::Prefix, py::return_value_policy::reference)
		.def_readwrite("RoundingMode", &UAttributePresentationDefinition::RoundingMode)
		.def_readwrite("SignStyle", &UAttributePresentationDefinition::SignStyle)
		.def_readwrite("TextColor", &UAttributePresentationDefinition::TextColor, py::return_value_policy::reference)
		.def_readwrite("FloatPrecision", &UAttributePresentationDefinition::FloatPrecision)
		.def_readwrite("Icon", &UAttributePresentationDefinition::Icon, py::return_value_policy::reference)
		.def_readwrite("RemappingData", &UAttributePresentationDefinition::RemappingData, py::return_value_policy::reference)
		.def("IncludePrefixInTranslation", &UAttributePresentationDefinition::IncludePrefixInTranslation)
		.def("IncludeSuffixInTranslation", &UAttributePresentationDefinition::IncludeSuffixInTranslation)
		.def("IsTextColorEnabled", &UAttributePresentationDefinition::IsTextColorEnabled)
		.def("GetTextColor", &UAttributePresentationDefinition::GetTextColor, py::return_value_policy::reference)
		.def("GetSignStyle", &UAttributePresentationDefinition::GetSignStyle)
		.def("GetEffectiveRoundingMode", &UAttributePresentationDefinition::GetEffectiveRoundingMode)
		.def("GetRoundingMode", &UAttributePresentationDefinition::GetRoundingMode)
		.def("ShouldUseCustomNumberPlacement", &UAttributePresentationDefinition::ShouldUseCustomNumberPlacement)
		.def("ShouldDisplayPlusSign", &UAttributePresentationDefinition::ShouldDisplayPlusSign)
		.def("ShouldDisplayNumberInTranslation", &UAttributePresentationDefinition::ShouldDisplayNumberInTranslation)
		.def("ShouldDisplayAsInverse", &UAttributePresentationDefinition::ShouldDisplayAsInverse)
		.def("ShouldDisplayAsPercentage", &UAttributePresentationDefinition::ShouldDisplayAsPercentage)
		.def("IsBiggerBetter", &UAttributePresentationDefinition::IsBiggerBetter)
		.def("GetIconFramename", &UAttributePresentationDefinition::GetIconFramename, py::return_value_policy::reference)
		.def("GetPrefix", &UAttributePresentationDefinition::GetPrefix, py::return_value_policy::reference)
		.def("GetSuffix", &UAttributePresentationDefinition::GetSuffix, py::return_value_policy::reference)
		.def("GetNoConstraintText", &UAttributePresentationDefinition::GetNoConstraintText, py::return_value_policy::reference)
		.def("GetDescription", &UAttributePresentationDefinition::GetDescription, py::return_value_policy::reference)
		.def("GetBasePriority", &UAttributePresentationDefinition::GetBasePriority)
		.def("RemapValue", &UAttributePresentationDefinition::RemapValue)
		.def("RoundValue", &UAttributePresentationDefinition::RoundValue)
		.def("ApplyPresentationRulesToValue", &UAttributePresentationDefinition::ApplyPresentationRulesToValue)
		.def("ValueToString", &UAttributePresentationDefinition::ValueToString, py::return_value_policy::reference)
		.def("TranslateValue", &UAttributePresentationDefinition::TranslateValue, py::return_value_policy::reference)
		.def("TranslateStatData", &UAttributePresentationDefinition::TranslateStatData, py::return_value_policy::reference)
		;
	py::class_< UWeaponStatusEffectAttributePresentationDefinition, UAttributePresentationDefinition >(m, "UWeaponStatusEffectAttributePresentationDefinition")
		.def_readwrite("MappingData", &UWeaponStatusEffectAttributePresentationDefinition::MappingData, py::return_value_policy::reference)
		;
	py::class_< UAttributePresentationListDefinition, UGBXDefinition >(m, "UAttributePresentationListDefinition")
		.def_readwrite("Attributes", &UAttributePresentationListDefinition::Attributes, py::return_value_policy::reference)
		.def("FindAttributePresentation", &UAttributePresentationListDefinition::FindAttributePresentation, py::return_value_policy::reference)
		;
	py::class_< UAttributeSlotEffectAttributeValueResolver, UAttributeValueResolver >(m, "UAttributeSlotEffectAttributeValueResolver")
		.def_readwrite("SlotProperty", &UAttributeSlotEffectAttributeValueResolver::SlotProperty)
		.def_readwrite("SlotName", &UAttributeSlotEffectAttributeValueResolver::SlotName, py::return_value_policy::reference)
		;
	py::class_< UAvatarAwardUtility, UObject >(m, "UAvatarAwardUtility")
		;
	py::class_< UBadassAttributeValueResolver, UAttributeValueResolver >(m, "UBadassAttributeValueResolver")
		.def_readwrite("AssociatedBadassReward", &UBadassAttributeValueResolver::AssociatedBadassReward, py::return_value_policy::reference)
		;
	py::class_< UBadassRewardDefinition, UGBXDefinition >(m, "UBadassRewardDefinition")
		.def_readwrite("RewardName", &UBadassRewardDefinition::RewardName, py::return_value_policy::reference)
		.def_readwrite("Description", &UBadassRewardDefinition::Description, py::return_value_policy::reference)
		.def_readwrite("RewardString", &UBadassRewardDefinition::RewardString, py::return_value_policy::reference)
		.def_readwrite("AttrInitDef", &UBadassRewardDefinition::AttrInitDef, py::return_value_policy::reference)
		.def_readwrite("Presentation", &UBadassRewardDefinition::Presentation, py::return_value_policy::reference)
		.def_readwrite("CachedRewardIndex", &UBadassRewardDefinition::CachedRewardIndex)
		.def("UpdateCachedRewardIndex", &UBadassRewardDefinition::UpdateCachedRewardIndex)
		;
	py::class_< UBalanceModifierDefinition, UGBXDefinition >(m, "UBalanceModifierDefinition")
		.def_readwrite("PlaythroughToBalance", &UBalanceModifierDefinition::PlaythroughToBalance)
		.def_readwrite("BalanceModifiers", &UBalanceModifierDefinition::BalanceModifiers, py::return_value_policy::reference)
		.def_readwrite("AdditionalAmmoSDUUpgrades", &UBalanceModifierDefinition::AdditionalAmmoSDUUpgrades, py::return_value_policy::reference)
		.def_readwrite("AdditionalBankStorageUpgrades", &UBalanceModifierDefinition::AdditionalBankStorageUpgrades, py::return_value_policy::reference)
		.def_readwrite("AdditionalBackpackSDUUpgrades", &UBalanceModifierDefinition::AdditionalBackpackSDUUpgrades, py::return_value_policy::reference)
		.def_readwrite("MapSpecificBalanceModifiers", &UBalanceModifierDefinition::MapSpecificBalanceModifiers, py::return_value_policy::reference)
		.def_readwrite("BalanceModifiersForPlayersWithOneLevelCapUpgrade", &UBalanceModifierDefinition::BalanceModifiersForPlayersWithOneLevelCapUpgrade, py::return_value_policy::reference)
		.def_readwrite("BalanceModifiersForPlayersWithTwoLevelCapUpgrades", &UBalanceModifierDefinition::BalanceModifiersForPlayersWithTwoLevelCapUpgrades, py::return_value_policy::reference)
		.def_readwrite("BalanceModifiersForPlayersWithTwoLevelCapUpgradesAndOverpower", &UBalanceModifierDefinition::BalanceModifiersForPlayersWithTwoLevelCapUpgradesAndOverpower, py::return_value_policy::reference)
		.def_readwrite("NewAIPawnNamesForThisPlayThrough", &UBalanceModifierDefinition::NewAIPawnNamesForThisPlayThrough, py::return_value_policy::reference)
		.def_readwrite("GearDrops_CommonWeightModifier_PT1_BaseValueOverride", &UBalanceModifierDefinition::GearDrops_CommonWeightModifier_PT1_BaseValueOverride, py::return_value_policy::reference)
		.def_readwrite("GearDrops_CommonWeightModifier_PT2_BaseValueOverride", &UBalanceModifierDefinition::GearDrops_CommonWeightModifier_PT2_BaseValueOverride, py::return_value_policy::reference)
		.def_readwrite("ChestItemPool_Weight_2_Uncommon_PT1_Multiplier", &UBalanceModifierDefinition::ChestItemPool_Weight_2_Uncommon_PT1_Multiplier, py::return_value_policy::reference)
		.def_readwrite("ChestItemPool_Weight_2_Uncommon_PT2_Multiplier", &UBalanceModifierDefinition::ChestItemPool_Weight_2_Uncommon_PT2_Multiplier, py::return_value_policy::reference)
		.def("GetAIDamageScaleBasedOnExpLevelDifferences", &UBalanceModifierDefinition::GetAIDamageScaleBasedOnExpLevelDifferences)
		.def("GetStatusEffectChanceBasedOnExpLevelDifferences", &UBalanceModifierDefinition::GetStatusEffectChanceBasedOnExpLevelDifferences)
		.def("GetUncommonChestItemPoolWeightMultiplier", &UBalanceModifierDefinition::GetUncommonChestItemPoolWeightMultiplier)
		.def("GetCommonGearDropWeightBaseValue", &UBalanceModifierDefinition::GetCommonGearDropWeightBaseValue)
		.def("GetNewAIPawnNamesForThisPlayThrough", &UBalanceModifierDefinition::GetNewAIPawnNamesForThisPlayThrough, py::return_value_policy::reference)
		.def("UpdatePlayerVehicleDamage", &UBalanceModifierDefinition::UpdatePlayerVehicleDamage)
		.def("GetAmmoDropsPerPlayerMultiplier", &UBalanceModifierDefinition::GetAmmoDropsPerPlayerMultiplier)
		.def("GetAmplifiedDamageMultiplier", &UBalanceModifierDefinition::GetAmplifiedDamageMultiplier)
		.def("GetAdditionalEnemyDamageMultiplier", &UBalanceModifierDefinition::GetAdditionalEnemyDamageMultiplier)
		.def("ApplyPlayThroughBasedPlayerAttributeEffects", &UBalanceModifierDefinition::ApplyPlayThroughBasedPlayerAttributeEffects)
		.def("UpdateSpawnedPlayerEnemyAIPawn", &UBalanceModifierDefinition::UpdateSpawnedPlayerEnemyAIPawn)
		.def("GetXPEarnedMultiplier", &UBalanceModifierDefinition::GetXPEarnedMultiplier)
		;
	py::class_< UBehavior_ActivateInstancedMissionBehaviorSequence, UBehaviorBase >(m, "UBehavior_ActivateInstancedMissionBehaviorSequence")
		.def_readwrite("Mission", &UBehavior_ActivateInstancedMissionBehaviorSequence::Mission, py::return_value_policy::reference)
		.def_readwrite("MissionObjective", &UBehavior_ActivateInstancedMissionBehaviorSequence::MissionObjective, py::return_value_policy::reference)
		.def_readwrite("SequenceName", &UBehavior_ActivateInstancedMissionBehaviorSequence::SequenceName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ActivateInstancedMissionBehaviorSequence::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ActivateMission, UBehaviorBase >(m, "UBehavior_ActivateMission")
		.def("ApplyBehaviorToContext", &UBehavior_ActivateMission::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AddMissionDirectives, UBehaviorBase >(m, "UBehavior_AddMissionDirectives")
		.def_readwrite("MissionDirectives", &UBehavior_AddMissionDirectives::MissionDirectives, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AddMissionDirectives::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AddMissionTime, UBehaviorBase >(m, "UBehavior_AddMissionTime")
		.def_readwrite("SecondsToAdd", &UBehavior_AddMissionTime::SecondsToAdd)
		.def("ApplyBehaviorToContext", &UBehavior_AddMissionTime::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AdvanceObjectiveSet, UBehaviorBase >(m, "UBehavior_AdvanceObjectiveSet")
		.def_readwrite("ObjectiveSetToAdvanceTo", &UBehavior_AdvanceObjectiveSet::ObjectiveSetToAdvanceTo, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AdvanceObjectiveSet::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AICloak, UBehaviorBase >(m, "UBehavior_AICloak")
		.def_property("bImmediate", [](UBehavior_AICloak &self){return self.bImmediate;}, [](UBehavior_AICloak &self, bool value){self.bImmediate = value ? 1 : 0;})
		.def_readwrite("NewCloakBehavior", &UBehavior_AICloak::NewCloakBehavior)
		.def("ApplyBehaviorToContext", &UBehavior_AICloak::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AIThrowProjectileAtTarget, UBehaviorBase >(m, "UBehavior_AIThrowProjectileAtTarget")
		.def_property("bGrenade", [](UBehavior_AIThrowProjectileAtTarget &self){return self.bGrenade;}, [](UBehavior_AIThrowProjectileAtTarget &self, bool value){self.bGrenade = value ? 1 : 0;})
		.def_readwrite("NumProjectiles", &UBehavior_AIThrowProjectileAtTarget::NumProjectiles)
		.def_readwrite("Options", &UBehavior_AIThrowProjectileAtTarget::Options, py::return_value_policy::reference)
		.def_readwrite("StartOffset", &UBehavior_AIThrowProjectileAtTarget::StartOffset, py::return_value_policy::reference)
		.def_readwrite("StartSocket", &UBehavior_AIThrowProjectileAtTarget::StartSocket, py::return_value_policy::reference)
		.def_readwrite("ChildProjectileBaseValues", &UBehavior_AIThrowProjectileAtTarget::ChildProjectileBaseValues, py::return_value_policy::reference)
		.def_readwrite("ProjectileDef", &UBehavior_AIThrowProjectileAtTarget::ProjectileDef, py::return_value_policy::reference)
		.def_readwrite("ExistingProjectile", &UBehavior_AIThrowProjectileAtTarget::ExistingProjectile, py::return_value_policy::reference)
		.def_readwrite("SetProjectileSequenceState", &UBehavior_AIThrowProjectileAtTarget::SetProjectileSequenceState, py::return_value_policy::reference)
		.def("PublishBehaviorOutput", &UBehavior_AIThrowProjectileAtTarget::PublishBehaviorOutput)
		.def("ThrowExisting", &UBehavior_AIThrowProjectileAtTarget::ThrowExisting)
		.def("ThrowProjectile", &UBehavior_AIThrowProjectileAtTarget::ThrowProjectile)
		.def("ApplyBehaviorToContext", &UBehavior_AIThrowProjectileAtTarget::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AttemptItemCallout, UBehaviorBase >(m, "UBehavior_AttemptItemCallout")
		.def_property("bMarkAsDiscovered", [](UBehavior_AttemptItemCallout &self){return self.bMarkAsDiscovered;}, [](UBehavior_AttemptItemCallout &self, bool value){self.bMarkAsDiscovered = value ? 1 : 0;})
		.def_property("bTestVisibility", [](UBehavior_AttemptItemCallout &self){return self.bTestVisibility;}, [](UBehavior_AttemptItemCallout &self, bool value){self.bTestVisibility = value ? 1 : 0;})
		.def_readwrite("DET_CallOut", &UBehavior_AttemptItemCallout::DET_CallOut, py::return_value_policy::reference)
		.def_readwrite("InstanceDataName", &UBehavior_AttemptItemCallout::InstanceDataName, py::return_value_policy::reference)
		.def("TestTargetVisibility", &UBehavior_AttemptItemCallout::TestTargetVisibility)
		.def("ApplyBehaviorToContext", &UBehavior_AttemptItemCallout::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AttemptStatusEffect, UBehaviorBase >(m, "UBehavior_AttemptStatusEffect")
		.def_readwrite("VfTable_IIDamageCauser", &UBehavior_AttemptStatusEffect::VfTable_IIDamageCauser, py::return_value_policy::reference)
		.def_readwrite("StatusEffect", &UBehavior_AttemptStatusEffect::StatusEffect, py::return_value_policy::reference)
		.def_readwrite("TargetContext", &UBehavior_AttemptStatusEffect::TargetContext, py::return_value_policy::reference)
		.def_readwrite("InstigatorChanceModifier", &UBehavior_AttemptStatusEffect::InstigatorChanceModifier, py::return_value_policy::reference)
		.def_readwrite("StatusEffectDamage", &UBehavior_AttemptStatusEffect::StatusEffectDamage, py::return_value_policy::reference)
		.def_readwrite("StatusEffectChance", &UBehavior_AttemptStatusEffect::StatusEffectChance, py::return_value_policy::reference)
		.def("GetControllerResponsibleForDamage", &UBehavior_AttemptStatusEffect::GetControllerResponsibleForDamage, py::return_value_policy::reference)
		.def("GetInstigator", &UBehavior_AttemptStatusEffect::GetInstigator, py::return_value_policy::reference)
		.def("GetInstigatorSelfDamageScale", &UBehavior_AttemptStatusEffect::GetInstigatorSelfDamageScale)
		.def("GetFireIntervalChanceModifier", &UBehavior_AttemptStatusEffect::GetFireIntervalChanceModifier)
		.def("GetStatusEffectBaseChanceModifier", &UBehavior_AttemptStatusEffect::GetStatusEffectBaseChanceModifier)
		.def("GetStatusEffectChanceModifier", &UBehavior_AttemptStatusEffect::GetStatusEffectChanceModifier)
		.def("GetStatusEffectBaseDamage", &UBehavior_AttemptStatusEffect::GetStatusEffectBaseDamage)
		.def("AttempEffect", &UBehavior_AttemptStatusEffect::AttempEffect)
		.def("ApplyBehaviorToContext", &UBehavior_AttemptStatusEffect::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CauseDamage, UBehaviorBase >(m, "UBehavior_CauseDamage")
		.def_property("bInflictRadiusDamage", [](UBehavior_CauseDamage &self){return self.bInflictRadiusDamage;}, [](UBehavior_CauseDamage &self, bool value){self.bInflictRadiusDamage = value ? 1 : 0;})
		.def_property("bDisableRadiusDamageFalloff", [](UBehavior_CauseDamage &self){return self.bDisableRadiusDamageFalloff;}, [](UBehavior_CauseDamage &self, bool value){self.bDisableRadiusDamageFalloff = value ? 1 : 0;})
		.def_property("bSkipTraceTest", [](UBehavior_CauseDamage &self){return self.bSkipTraceTest;}, [](UBehavior_CauseDamage &self, bool value){self.bSkipTraceTest = value ? 1 : 0;})
		.def_property("bCanDamageFriendlies", [](UBehavior_CauseDamage &self){return self.bCanDamageFriendlies;}, [](UBehavior_CauseDamage &self, bool value){self.bCanDamageFriendlies = value ? 1 : 0;})
		.def_property("bBarrelSource", [](UBehavior_CauseDamage &self){return self.bBarrelSource;}, [](UBehavior_CauseDamage &self, bool value){self.bBarrelSource = value ? 1 : 0;})
		.def_property("bPlantSource", [](UBehavior_CauseDamage &self){return self.bPlantSource;}, [](UBehavior_CauseDamage &self, bool value){self.bPlantSource = value ? 1 : 0;})
		.def_readwrite("VfTable_IIDamageCauser", &UBehavior_CauseDamage::VfTable_IIDamageCauser, py::return_value_policy::reference)
		.def_readwrite("DamageFormula", &UBehavior_CauseDamage::DamageFormula, py::return_value_policy::reference)
		.def_readwrite("RadiusFormula", &UBehavior_CauseDamage::RadiusFormula, py::return_value_policy::reference)
		.def_readwrite("MomentumFormula", &UBehavior_CauseDamage::MomentumFormula, py::return_value_policy::reference)
		.def_readwrite("OverrideContext", &UBehavior_CauseDamage::OverrideContext, py::return_value_policy::reference)
		.def_readwrite("OverrideName", &UBehavior_CauseDamage::OverrideName, py::return_value_policy::reference)
		.def_readwrite("DamageSource", &UBehavior_CauseDamage::DamageSource, py::return_value_policy::reference)
		.def_readwrite("DamageTypeDefinition", &UBehavior_CauseDamage::DamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("ImpactDefinition", &UBehavior_CauseDamage::ImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("StatusEffectDamage", &UBehavior_CauseDamage::StatusEffectDamage, py::return_value_policy::reference)
		.def_readwrite("StatusEffectChance", &UBehavior_CauseDamage::StatusEffectChance, py::return_value_policy::reference)
		.def_readwrite("DamageTarget", &UBehavior_CauseDamage::DamageTarget)
		.def_readwrite("CustomTargetName", &UBehavior_CauseDamage::CustomTargetName, py::return_value_policy::reference)
		.def_readwrite("TargetContext", &UBehavior_CauseDamage::TargetContext, py::return_value_policy::reference)
		.def_readwrite("BarrelSourceTime", &UBehavior_CauseDamage::BarrelSourceTime)
		.def_readwrite("PlantSourceTime", &UBehavior_CauseDamage::PlantSourceTime)
		.def_readwrite("InstigatorSelfDamageScale", &UBehavior_CauseDamage::InstigatorSelfDamageScale)
		.def_readwrite("SelfActor", &UBehavior_CauseDamage::SelfActor, py::return_value_policy::reference)
		.def("GetControllerResponsibleForDamage", &UBehavior_CauseDamage::GetControllerResponsibleForDamage, py::return_value_policy::reference)
		.def("GetInstigator", &UBehavior_CauseDamage::GetInstigator, py::return_value_policy::reference)
		.def("GetInstigatorSelfDamageScale", &UBehavior_CauseDamage::GetInstigatorSelfDamageScale)
		.def("GetFireIntervalChanceModifier", &UBehavior_CauseDamage::GetFireIntervalChanceModifier)
		.def("GetStatusEffectBaseChanceModifier", &UBehavior_CauseDamage::GetStatusEffectBaseChanceModifier)
		.def("GetStatusEffectChanceModifier", &UBehavior_CauseDamage::GetStatusEffectChanceModifier)
		.def("GetStatusEffectBaseDamage", &UBehavior_CauseDamage::GetStatusEffectBaseDamage)
		.def("ApplyBehaviorToContext", &UBehavior_CauseDamage::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ClearObjective, UBehaviorBase >(m, "UBehavior_ClearObjective")
		.def_readwrite("ObjectiveToClear", &UBehavior_ClearObjective::ObjectiveToClear, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ClearObjective::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CompleteMission, UBehaviorBase >(m, "UBehavior_CompleteMission")
		.def("ApplyBehaviorToContext", &UBehavior_CompleteMission::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_Conditional, UBehaviorBase >(m, "UBehavior_Conditional")
		.def_readwrite("Conditions", &UBehavior_Conditional::Conditions, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_Conditional::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ConvertInstanceDataIntoPhysicsActor, UBehaviorBase >(m, "UBehavior_ConvertInstanceDataIntoPhysicsActor")
		.def_property("bRemoveInstanceData", [](UBehavior_ConvertInstanceDataIntoPhysicsActor &self){return self.bRemoveInstanceData;}, [](UBehavior_ConvertInstanceDataIntoPhysicsActor &self, bool value){self.bRemoveInstanceData = value ? 1 : 0;})
		.def_readwrite("DetachImpulse", &UBehavior_ConvertInstanceDataIntoPhysicsActor::DetachImpulse, py::return_value_policy::reference)
		.def_readwrite("ImpulseSourceLocation", &UBehavior_ConvertInstanceDataIntoPhysicsActor::ImpulseSourceLocation, py::return_value_policy::reference)
		.def_readwrite("PhysicsActorLifeTime", &UBehavior_ConvertInstanceDataIntoPhysicsActor::PhysicsActorLifeTime)
		.def_readwrite("MinRelevantDistance", &UBehavior_ConvertInstanceDataIntoPhysicsActor::MinRelevantDistance)
		.def("PublishBehaviorOutput", &UBehavior_ConvertInstanceDataIntoPhysicsActor::PublishBehaviorOutput)
		.def("RemoveInstanceDataComponent", &UBehavior_ConvertInstanceDataIntoPhysicsActor::RemoveInstanceDataComponent)
		.def("ConvertInstanceDataToPhysicsActor", &UBehavior_ConvertInstanceDataIntoPhysicsActor::ConvertInstanceDataToPhysicsActor, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ConvertInstanceDataIntoPhysicsActor::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DecrementObjective, UBehaviorBase >(m, "UBehavior_DecrementObjective")
		.def_readwrite("ObjectiveToDecrement", &UBehavior_DecrementObjective::ObjectiveToDecrement, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_DecrementObjective::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_Explode, UBehaviorBase >(m, "UBehavior_Explode")
		.def_property("bReplicate", [](UBehavior_Explode &self){return self.bReplicate;}, [](UBehavior_Explode &self, bool value){self.bReplicate = value ? 1 : 0;})
		.def_property("bNoSound", [](UBehavior_Explode &self){return self.bNoSound;}, [](UBehavior_Explode &self, bool value){self.bNoSound = value ? 1 : 0;})
		.def_property("bDisableRadiusDamageFalloff", [](UBehavior_Explode &self){return self.bDisableRadiusDamageFalloff;}, [](UBehavior_Explode &self, bool value){self.bDisableRadiusDamageFalloff = value ? 1 : 0;})
		.def_property("bSkipTraceTest", [](UBehavior_Explode &self){return self.bSkipTraceTest;}, [](UBehavior_Explode &self, bool value){self.bSkipTraceTest = value ? 1 : 0;})
		.def_property("bCanDamageFriendlies", [](UBehavior_Explode &self){return self.bCanDamageFriendlies;}, [](UBehavior_Explode &self, bool value){self.bCanDamageFriendlies = value ? 1 : 0;})
		.def_property("bBarrelSource", [](UBehavior_Explode &self){return self.bBarrelSource;}, [](UBehavior_Explode &self, bool value){self.bBarrelSource = value ? 1 : 0;})
		.def_property("bPlantSource", [](UBehavior_Explode &self){return self.bPlantSource;}, [](UBehavior_Explode &self, bool value){self.bPlantSource = value ? 1 : 0;})
		.def_readwrite("VfTable_IIDamageCauser", &UBehavior_Explode::VfTable_IIDamageCauser, py::return_value_policy::reference)
		.def_readwrite("DamageSource", &UBehavior_Explode::DamageSource, py::return_value_policy::reference)
		.def_readwrite("DamageRadiusFormula", &UBehavior_Explode::DamageRadiusFormula, py::return_value_policy::reference)
		.def_readwrite("DamageFormula", &UBehavior_Explode::DamageFormula, py::return_value_policy::reference)
		.def_readwrite("MomentumFormula", &UBehavior_Explode::MomentumFormula, py::return_value_policy::reference)
		.def_readwrite("Definition", &UBehavior_Explode::Definition, py::return_value_policy::reference)
		.def_readwrite("LocationOffset", &UBehavior_Explode::LocationOffset, py::return_value_policy::reference)
		.def_readwrite("SocketName", &UBehavior_Explode::SocketName, py::return_value_policy::reference)
		.def_readwrite("DamageContext", &UBehavior_Explode::DamageContext, py::return_value_policy::reference)
		.def_readwrite("HitNormal", &UBehavior_Explode::HitNormal, py::return_value_policy::reference)
		.def_readwrite("StatusEffectDamage", &UBehavior_Explode::StatusEffectDamage, py::return_value_policy::reference)
		.def_readwrite("StatusEffectChance", &UBehavior_Explode::StatusEffectChance, py::return_value_policy::reference)
		.def_readwrite("OverrideContext", &UBehavior_Explode::OverrideContext, py::return_value_policy::reference)
		.def_readwrite("OverrideName", &UBehavior_Explode::OverrideName, py::return_value_policy::reference)
		.def_readwrite("HitContext", &UBehavior_Explode::HitContext, py::return_value_policy::reference)
		.def_readwrite("BarrelSourceTime", &UBehavior_Explode::BarrelSourceTime)
		.def_readwrite("PlantSourceTime", &UBehavior_Explode::PlantSourceTime)
		.def_readwrite("InstigatorSelfDamageScale", &UBehavior_Explode::InstigatorSelfDamageScale)
		.def_readwrite("OverrideActor", &UBehavior_Explode::OverrideActor, py::return_value_policy::reference)
		.def_readwrite("SelfActor", &UBehavior_Explode::SelfActor, py::return_value_policy::reference)
		.def("SetInstigatorOverride", &UBehavior_Explode::SetInstigatorOverride)
		.def("GetControllerResponsibleForDamage", &UBehavior_Explode::GetControllerResponsibleForDamage, py::return_value_policy::reference)
		.def("GetInstigator", &UBehavior_Explode::GetInstigator, py::return_value_policy::reference)
		.def("GetInstigatorSelfDamageScale", &UBehavior_Explode::GetInstigatorSelfDamageScale)
		.def("GetFireIntervalChanceModifier", &UBehavior_Explode::GetFireIntervalChanceModifier)
		.def("GetStatusEffectBaseChanceModifier", &UBehavior_Explode::GetStatusEffectBaseChanceModifier)
		.def("GetStatusEffectChanceModifier", &UBehavior_Explode::GetStatusEffectChanceModifier)
		.def("GetStatusEffectBaseDamage", &UBehavior_Explode::GetStatusEffectBaseDamage)
		.def("ApplyBehaviorToContext", &UBehavior_Explode::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_FailMission, UBehaviorBase >(m, "UBehavior_FailMission")
		.def("ApplyBehaviorToContext", &UBehavior_FailMission::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GFxMovieRegister, UBehaviorBase >(m, "UBehavior_GFxMovieRegister")
		.def_property("bUnregister", [](UBehavior_GFxMovieRegister &self){return self.bUnregister;}, [](UBehavior_GFxMovieRegister &self, bool value){self.bUnregister = value ? 1 : 0;})
		.def_readwrite("MovieDefinition", &UBehavior_GFxMovieRegister::MovieDefinition, py::return_value_policy::reference)
		.def_readwrite("MeshComponentInstanceDataName", &UBehavior_GFxMovieRegister::MeshComponentInstanceDataName, py::return_value_policy::reference)
		.def_readwrite("RegisteredDefinition", &UBehavior_GFxMovieRegister::RegisteredDefinition, py::return_value_policy::reference)
		.def("ResolveController", &UBehavior_GFxMovieRegister::ResolveController, py::return_value_policy::reference)
		.def("RegisterMovie", &UBehavior_GFxMovieRegister::RegisterMovie)
		.def("ApplyBehaviorToContext", &UBehavior_GFxMovieRegister::ApplyBehaviorToContext)
		.def("RemoveFromroot", &UBehavior_GFxMovieRegister::RemoveFromroot)
		.def("AddToRoot", &UBehavior_GFxMovieRegister::AddToRoot)
		;
	py::class_< UBehavior_GiveChallengeToPlayer, UBehaviorBase >(m, "UBehavior_GiveChallengeToPlayer")
		.def_property("bGiveToAllPlayers", [](UBehavior_GiveChallengeToPlayer &self){return self.bGiveToAllPlayers;}, [](UBehavior_GiveChallengeToPlayer &self, bool value){self.bGiveToAllPlayers = value ? 1 : 0;})
		.def_readwrite("Challenge", &UBehavior_GiveChallengeToPlayer::Challenge, py::return_value_policy::reference)
		.def_readwrite("Challenges", &UBehavior_GiveChallengeToPlayer::Challenges, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_GiveChallengeToPlayer::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_IntMath, UBehaviorBase >(m, "UBehavior_IntMath")
		.def_readwrite("A", &UBehavior_IntMath::A)
		.def_readwrite("B", &UBehavior_IntMath::B)
		.def_readwrite("Operation", &UBehavior_IntMath::Operation)
		.def("eventPublishBehaviorOutput", &UBehavior_IntMath::eventPublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_IntMath::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_IntSwitchRange, UBehaviorBase >(m, "UBehavior_IntSwitchRange")
		.def_readwrite("CheckValue", &UBehavior_IntSwitchRange::CheckValue)
		.def_readwrite("RangeMin", &UBehavior_IntSwitchRange::RangeMin)
		.def_readwrite("RangeMax", &UBehavior_IntSwitchRange::RangeMax)
		.def("ApplyBehaviorToContext", &UBehavior_IntSwitchRange::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_MatchTransform, UBehaviorBase >(m, "UBehavior_MatchTransform")
		.def_readwrite("AttachmentName", &UBehavior_MatchTransform::AttachmentName, py::return_value_policy::reference)
		.def_readwrite("Source", &UBehavior_MatchTransform::Source, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_MatchTransform::ApplyBehaviorToContext)
		.def("ApplyOffsets", &UBehavior_MatchTransform::ApplyOffsets)
		;
	py::class_< UBehavior_MeleeAttack, UBehaviorBase >(m, "UBehavior_MeleeAttack")
		.def_readwrite("MeleeDefinition", &UBehavior_MeleeAttack::MeleeDefinition, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_MeleeAttack::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_MissionRemoteEvent, UBehaviorBase >(m, "UBehavior_MissionRemoteEvent")
		.def_readwrite("EventName", &UBehavior_MissionRemoteEvent::EventName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_MissionRemoteEvent::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_RandomBranch, UBehaviorBase >(m, "UBehavior_RandomBranch")
		.def_readwrite("Conditions", &UBehavior_RandomBranch::Conditions, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_RandomBranch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_Switch, UBehavior_RandomBranch >(m, "UBehavior_Switch")
		.def_readwrite("CheckValue", &UBehavior_Switch::CheckValue)
		.def("ApplyBehaviorToContext", &UBehavior_Switch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_RandomlySelectBehaviors, UBehaviorBase >(m, "UBehavior_RandomlySelectBehaviors")
		.def_property("bUseWeightContext", [](UBehavior_RandomlySelectBehaviors &self){return self.bUseWeightContext;}, [](UBehavior_RandomlySelectBehaviors &self, bool value){self.bUseWeightContext = value ? 1 : 0;})
		.def_readwrite("Possibilities", &UBehavior_RandomlySelectBehaviors::Possibilities, py::return_value_policy::reference)
		.def_readwrite("WeightContext", &UBehavior_RandomlySelectBehaviors::WeightContext, py::return_value_policy::reference)
		.def("ApplyBehavior", &UBehavior_RandomlySelectBehaviors::ApplyBehavior)
		.def("SelectAndRunWeightedBehaviors", &UBehavior_RandomlySelectBehaviors::SelectAndRunWeightedBehaviors)
		;
	py::class_< UBehavior_RemoteCustomEvent, UBehaviorBase >(m, "UBehavior_RemoteCustomEvent")
		.def_readwrite("SequenceProvider", &UBehavior_RemoteCustomEvent::SequenceProvider, py::return_value_policy::reference)
		.def_readwrite("ProviderDefinitionPathName", &UBehavior_RemoteCustomEvent::ProviderDefinitionPathName, py::return_value_policy::reference)
		.def_readwrite("CustomEventName", &UBehavior_RemoteCustomEvent::CustomEventName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_RemoteCustomEvent::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ScreenParticle, UBehaviorBase >(m, "UBehavior_ScreenParticle")
		.def_readwrite("Parameters", &UBehavior_ScreenParticle::Parameters, py::return_value_policy::reference)
		.def_readwrite("Action", &UBehavior_ScreenParticle::Action)
		.def_readwrite("ScreenParticleModifiers", &UBehavior_ScreenParticle::ScreenParticleModifiers, py::return_value_policy::reference)
		.def_readwrite("MaterialInterface", &UBehavior_ScreenParticle::MaterialInterface, py::return_value_policy::reference)
		.def_readwrite("MatParamName", &UBehavior_ScreenParticle::MatParamName, py::return_value_policy::reference)
		.def_readwrite("ParticleSystem", &UBehavior_ScreenParticle::ParticleSystem, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ScreenParticle::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetShieldDamageResistanceType, UBehaviorBase >(m, "UBehavior_SetShieldDamageResistanceType")
		.def_readwrite("DamageResistanceType", &UBehavior_SetShieldDamageResistanceType::DamageResistanceType, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetShieldDamageResistanceType::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetShieldTriggeredState, UBehaviorBase >(m, "UBehavior_SetShieldTriggeredState")
		.def("ApplyBehaviorToContext", &UBehavior_SetShieldTriggeredState::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SimpleMath, UBehaviorBase >(m, "UBehavior_SimpleMath")
		.def_readwrite("A", &UBehavior_SimpleMath::A)
		.def_readwrite("B", &UBehavior_SimpleMath::B)
		.def_readwrite("Operation", &UBehavior_SimpleMath::Operation)
		.def("eventPublishBehaviorOutput", &UBehavior_SimpleMath::eventPublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_SimpleMath::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpawnFirstPersonParticleSystem, UBehaviorBase >(m, "UBehavior_SpawnFirstPersonParticleSystem")
		.def_property("bSaveParticleReference", [](UBehavior_SpawnFirstPersonParticleSystem &self){return self.bSaveParticleReference;}, [](UBehavior_SpawnFirstPersonParticleSystem &self, bool value){self.bSaveParticleReference = value ? 1 : 0;})
		.def_property("bDeleteByOwner", [](UBehavior_SpawnFirstPersonParticleSystem &self){return self.bDeleteByOwner;}, [](UBehavior_SpawnFirstPersonParticleSystem &self, bool value){self.bDeleteByOwner = value ? 1 : 0;})
		.def_readwrite("InstanceDataContext", &UBehavior_SpawnFirstPersonParticleSystem::InstanceDataContext, py::return_value_policy::reference)
		.def_readwrite("SavedReferenceName", &UBehavior_SpawnFirstPersonParticleSystem::SavedReferenceName, py::return_value_policy::reference)
		.def_readwrite("ParticleEffect", &UBehavior_SpawnFirstPersonParticleSystem::ParticleEffect, py::return_value_policy::reference)
		.def_readwrite("AttachmentPointName", &UBehavior_SpawnFirstPersonParticleSystem::AttachmentPointName, py::return_value_policy::reference)
		.def_readwrite("RelativeLocation", &UBehavior_SpawnFirstPersonParticleSystem::RelativeLocation, py::return_value_policy::reference)
		.def_readwrite("RelativeRotation", &UBehavior_SpawnFirstPersonParticleSystem::RelativeRotation, py::return_value_policy::reference)
		.def_readwrite("DrawScale", &UBehavior_SpawnFirstPersonParticleSystem::DrawScale)
		.def("PublishBehaviorOutput", &UBehavior_SpawnFirstPersonParticleSystem::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnFirstPersonParticleSystem::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpawnFromPopulationSystem, UBehaviorBase >(m, "UBehavior_SpawnFromPopulationSystem")
		.def_property("bZeroPitchAndRollOnSpawnedActor", [](UBehavior_SpawnFromPopulationSystem &self){return self.bZeroPitchAndRollOnSpawnedActor;}, [](UBehavior_SpawnFromPopulationSystem &self, bool value){self.bZeroPitchAndRollOnSpawnedActor = value ? 1 : 0;})
		.def_property("bRelativeSpawnOffset", [](UBehavior_SpawnFromPopulationSystem &self){return self.bRelativeSpawnOffset;}, [](UBehavior_SpawnFromPopulationSystem &self, bool value){self.bRelativeSpawnOffset = value ? 1 : 0;})
		.def_property("bSpawnOnGround", [](UBehavior_SpawnFromPopulationSystem &self){return self.bSpawnOnGround;}, [](UBehavior_SpawnFromPopulationSystem &self, bool value){self.bSpawnOnGround = value ? 1 : 0;})
		.def_property("bInheritAttachment", [](UBehavior_SpawnFromPopulationSystem &self){return self.bInheritAttachment;}, [](UBehavior_SpawnFromPopulationSystem &self, bool value){self.bInheritAttachment = value ? 1 : 0;})
		.def_property("bInheritAttachmentBase", [](UBehavior_SpawnFromPopulationSystem &self){return self.bInheritAttachmentBase;}, [](UBehavior_SpawnFromPopulationSystem &self, bool value){self.bInheritAttachmentBase = value ? 1 : 0;})
		.def_property("bSaveActorReference", [](UBehavior_SpawnFromPopulationSystem &self){return self.bSaveActorReference;}, [](UBehavior_SpawnFromPopulationSystem &self, bool value){self.bSaveActorReference = value ? 1 : 0;})
		.def_readwrite("SpawnFactory", &UBehavior_SpawnFromPopulationSystem::SpawnFactory, py::return_value_policy::reference)
		.def_readwrite("GameStageContext", &UBehavior_SpawnFromPopulationSystem::GameStageContext, py::return_value_policy::reference)
		.def_readwrite("SpawnLocOffset", &UBehavior_SpawnFromPopulationSystem::SpawnLocOffset, py::return_value_policy::reference)
		.def_readwrite("InheritLocationRotationFrom", &UBehavior_SpawnFromPopulationSystem::InheritLocationRotationFrom)
		.def_readwrite("SpawnRotationOffset", &UBehavior_SpawnFromPopulationSystem::SpawnRotationOffset, py::return_value_policy::reference)
		.def_readwrite("MyOwner", &UBehavior_SpawnFromPopulationSystem::MyOwner, py::return_value_policy::reference)
		.def_readwrite("StartingVelocity", &UBehavior_SpawnFromPopulationSystem::StartingVelocity, py::return_value_policy::reference)
		.def_readwrite("InstanceDataContext", &UBehavior_SpawnFromPopulationSystem::InstanceDataContext, py::return_value_policy::reference)
		.def_readwrite("SavedReferenceName", &UBehavior_SpawnFromPopulationSystem::SavedReferenceName, py::return_value_policy::reference)
		.def_readwrite("FloorTestZDist", &UBehavior_SpawnFromPopulationSystem::FloorTestZDist)
		.def("PublishBehaviorOutput", &UBehavior_SpawnFromPopulationSystem::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnFromPopulationSystem::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpawnParticleSystem, UBehaviorBase >(m, "UBehavior_SpawnParticleSystem")
		.def_property("bSaveParticleReference", [](UBehavior_SpawnParticleSystem &self){return self.bSaveParticleReference;}, [](UBehavior_SpawnParticleSystem &self, bool value){self.bSaveParticleReference = value ? 1 : 0;})
		.def_property("bUseClientPrediction", [](UBehavior_SpawnParticleSystem &self){return self.bUseClientPrediction;}, [](UBehavior_SpawnParticleSystem &self, bool value){self.bUseClientPrediction = value ? 1 : 0;})
		.def_property("bDeleteByOwner", [](UBehavior_SpawnParticleSystem &self){return self.bDeleteByOwner;}, [](UBehavior_SpawnParticleSystem &self, bool value){self.bDeleteByOwner = value ? 1 : 0;})
		.def_property("bAttachToContext", [](UBehavior_SpawnParticleSystem &self){return self.bAttachToContext;}, [](UBehavior_SpawnParticleSystem &self, bool value){self.bAttachToContext = value ? 1 : 0;})
		.def_property("bSetOwnerFromContext", [](UBehavior_SpawnParticleSystem &self){return self.bSetOwnerFromContext;}, [](UBehavior_SpawnParticleSystem &self, bool value){self.bSetOwnerFromContext = value ? 1 : 0;})
		.def_property("bReplicateEmitter", [](UBehavior_SpawnParticleSystem &self){return self.bReplicateEmitter;}, [](UBehavior_SpawnParticleSystem &self, bool value){self.bReplicateEmitter = value ? 1 : 0;})
		.def_property("bHideEffectFromOwner", [](UBehavior_SpawnParticleSystem &self){return self.bHideEffectFromOwner;}, [](UBehavior_SpawnParticleSystem &self, bool value){self.bHideEffectFromOwner = value ? 1 : 0;})
		.def_property("bUseOwnerSeeFlags", [](UBehavior_SpawnParticleSystem &self){return self.bUseOwnerSeeFlags;}, [](UBehavior_SpawnParticleSystem &self, bool value){self.bUseOwnerSeeFlags = value ? 1 : 0;})
		.def_readwrite("InstanceDataContext", &UBehavior_SpawnParticleSystem::InstanceDataContext, py::return_value_policy::reference)
		.def_readwrite("SavedReferenceName", &UBehavior_SpawnParticleSystem::SavedReferenceName, py::return_value_policy::reference)
		.def_readwrite("ParticleEffect", &UBehavior_SpawnParticleSystem::ParticleEffect, py::return_value_policy::reference)
		.def_readwrite("AttachmentPointName", &UBehavior_SpawnParticleSystem::AttachmentPointName, py::return_value_policy::reference)
		.def_readwrite("RelativeLocation", &UBehavior_SpawnParticleSystem::RelativeLocation, py::return_value_policy::reference)
		.def_readwrite("RelativeRotation", &UBehavior_SpawnParticleSystem::RelativeRotation, py::return_value_policy::reference)
		.def_readwrite("DrawScale", &UBehavior_SpawnParticleSystem::DrawScale)
		.def_readwrite("SpawnDirection", &UBehavior_SpawnParticleSystem::SpawnDirection)
		.def("PublishBehaviorOutput", &UBehavior_SpawnParticleSystem::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnParticleSystem::ApplyBehaviorToContext)
		.def("GetEmitterClass", &UBehavior_SpawnParticleSystem::GetEmitterClass, py::return_value_policy::reference)
		;
	py::class_< UBehavior_SpawnProjectile, UBehaviorBase >(m, "UBehavior_SpawnProjectile")
		.def_property("bSetOwnerFromOwnerContext", [](UBehavior_SpawnProjectile &self){return self.bSetOwnerFromOwnerContext;}, [](UBehavior_SpawnProjectile &self, bool value){self.bSetOwnerFromOwnerContext = value ? 1 : 0;})
		.def_property("bSaveProjectileReference", [](UBehavior_SpawnProjectile &self){return self.bSaveProjectileReference;}, [](UBehavior_SpawnProjectile &self, bool value){self.bSaveProjectileReference = value ? 1 : 0;})
		.def_property("bTransformRelativeLocationBySpawnDirection", [](UBehavior_SpawnProjectile &self){return self.bTransformRelativeLocationBySpawnDirection;}, [](UBehavior_SpawnProjectile &self, bool value){self.bTransformRelativeLocationBySpawnDirection = value ? 1 : 0;})
		.def_property("InheritParentVelocity", [](UBehavior_SpawnProjectile &self){return self.InheritParentVelocity;}, [](UBehavior_SpawnProjectile &self, bool value){self.InheritParentVelocity = value ? 1 : 0;})
		.def_property("bAttachToContext", [](UBehavior_SpawnProjectile &self){return self.bAttachToContext;}, [](UBehavior_SpawnProjectile &self, bool value){self.bAttachToContext = value ? 1 : 0;})
		.def_property("bInflictRadiusDamageOnOwner", [](UBehavior_SpawnProjectile &self){return self.bInflictRadiusDamageOnOwner;}, [](UBehavior_SpawnProjectile &self, bool value){self.bInflictRadiusDamageOnOwner = value ? 1 : 0;})
		.def_property("bSpawnEvenDistribution", [](UBehavior_SpawnProjectile &self){return self.bSpawnEvenDistribution;}, [](UBehavior_SpawnProjectile &self, bool value){self.bSpawnEvenDistribution = value ? 1 : 0;})
		.def_property("bUseSocketAsParentForSpawnOrientation", [](UBehavior_SpawnProjectile &self){return self.bUseSocketAsParentForSpawnOrientation;}, [](UBehavior_SpawnProjectile &self, bool value){self.bUseSocketAsParentForSpawnOrientation = value ? 1 : 0;})
		.def_property("bSpawnFromContextViewLocation", [](UBehavior_SpawnProjectile &self){return self.bSpawnFromContextViewLocation;}, [](UBehavior_SpawnProjectile &self, bool value){self.bSpawnFromContextViewLocation = value ? 1 : 0;})
		.def_property("bSetLikenessFromContext", [](UBehavior_SpawnProjectile &self){return self.bSetLikenessFromContext;}, [](UBehavior_SpawnProjectile &self, bool value){self.bSetLikenessFromContext = value ? 1 : 0;})
		.def_readwrite("OwnerContext", &UBehavior_SpawnProjectile::OwnerContext, py::return_value_policy::reference)
		.def_readwrite("AttachmentPointName", &UBehavior_SpawnProjectile::AttachmentPointName, py::return_value_policy::reference)
		.def_readwrite("InstanceDataContext", &UBehavior_SpawnProjectile::InstanceDataContext, py::return_value_policy::reference)
		.def_readwrite("SavedReferenceName", &UBehavior_SpawnProjectile::SavedReferenceName, py::return_value_policy::reference)
		.def_readwrite("NumProjectilesFormula", &UBehavior_SpawnProjectile::NumProjectilesFormula, py::return_value_policy::reference)
		.def_readwrite("NumProjectiles", &UBehavior_SpawnProjectile::NumProjectiles)
		.def_readwrite("SpawnDirection", &UBehavior_SpawnProjectile::SpawnDirection)
		.def_readwrite("SelectionBehavior", &UBehavior_SpawnProjectile::SelectionBehavior)
		.def_readwrite("SpawnDistributionType", &UBehavior_SpawnProjectile::SpawnDistributionType)
		.def_readwrite("FireSocketSelection", &UBehavior_SpawnProjectile::FireSocketSelection)
		.def_readwrite("ProjectileDefinition", &UBehavior_SpawnProjectile::ProjectileDefinition, py::return_value_policy::reference)
		.def_readwrite("RelativeLocation", &UBehavior_SpawnProjectile::RelativeLocation, py::return_value_policy::reference)
		.def_readwrite("DirectionConeMinSize", &UBehavior_SpawnProjectile::DirectionConeMinSize)
		.def_readwrite("DirectionConeSize", &UBehavior_SpawnProjectile::DirectionConeSize)
		.def_readwrite("ChildProjectileBaseValues", &UBehavior_SpawnProjectile::ChildProjectileBaseValues, py::return_value_policy::reference)
		.def_readwrite("SetProjectileSequenceState", &UBehavior_SpawnProjectile::SetProjectileSequenceState, py::return_value_policy::reference)
		.def_readwrite("SpawnDirectionOverride", &UBehavior_SpawnProjectile::SpawnDirectionOverride, py::return_value_policy::reference)
		.def_readwrite("SpawnMaterialOverride", &UBehavior_SpawnProjectile::SpawnMaterialOverride, py::return_value_policy::reference)
		.def_readwrite("FireLocationSocketNames", &UBehavior_SpawnProjectile::FireLocationSocketNames, py::return_value_policy::reference)
		.def_readwrite("TimeBetweenShots", &UBehavior_SpawnProjectile::TimeBetweenShots)
		.def_readwrite("DrawScaleOverride", &UBehavior_SpawnProjectile::DrawScaleOverride)
		.def_readwrite("GearLikenessContext", &UBehavior_SpawnProjectile::GearLikenessContext, py::return_value_policy::reference)
		.def_readwrite("FireLocationSocketsRemaining", &UBehavior_SpawnProjectile::FireLocationSocketsRemaining, py::return_value_policy::reference)
		.def_readwrite("NumShotsFired", &UBehavior_SpawnProjectile::NumShotsFired)
		.def("PublishBehaviorOutput", &UBehavior_SpawnProjectile::PublishBehaviorOutput)
		.def("StaticGetWorldBodyViewLocation", &UBehavior_SpawnProjectile::StaticGetWorldBodyViewLocation, py::return_value_policy::reference)
		.def("StaticGetChildProjectilePosition", &UBehavior_SpawnProjectile::StaticGetChildProjectilePosition, py::return_value_policy::reference)
		.def("StaticGetChildProjectileDirection", &UBehavior_SpawnProjectile::StaticGetChildProjectileDirection, py::return_value_policy::reference)
		.def("SpawnChildProjectiles", &UBehavior_SpawnProjectile::SpawnChildProjectiles)
		.def("CalculateConeVector", &UBehavior_SpawnProjectile::CalculateConeVector, py::return_value_policy::reference)
		.def("PerformMaterialOverride", &UBehavior_SpawnProjectile::PerformMaterialOverride)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnProjectile::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_StartMissionTimer, UBehaviorBase >(m, "UBehavior_StartMissionTimer")
		.def("ApplyBehaviorToContext", &UBehavior_StartMissionTimer::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_StopMissionTimer, UBehaviorBase >(m, "UBehavior_StopMissionTimer")
		.def("ApplyBehaviorToContext", &UBehavior_StopMissionTimer::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_UpdateCollision, UBehaviorBase >(m, "UBehavior_UpdateCollision")
		.def_property("bResetTouching", [](UBehavior_UpdateCollision &self){return self.bResetTouching;}, [](UBehavior_UpdateCollision &self, bool value){self.bResetTouching = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_UpdateCollision::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_UpdateMissionObjective, UBehaviorBase >(m, "UBehavior_UpdateMissionObjective")
		.def_readwrite("MissionObjective", &UBehavior_UpdateMissionObjective::MissionObjective, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_UpdateMissionObjective::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_VectorMath, UBehaviorBase >(m, "UBehavior_VectorMath")
		.def_readwrite("A", &UBehavior_VectorMath::A, py::return_value_policy::reference)
		.def_readwrite("B", &UBehavior_VectorMath::B, py::return_value_policy::reference)
		.def_readwrite("Operation", &UBehavior_VectorMath::Operation)
		.def("eventPublishBehaviorOutput", &UBehavior_VectorMath::eventPublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_VectorMath::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_VectorToLocalSpace, UBehaviorBase >(m, "UBehavior_VectorToLocalSpace")
		.def_readwrite("WorldSpaceVector", &UBehavior_VectorToLocalSpace::WorldSpaceVector, py::return_value_policy::reference)
		.def_readwrite("AttachmentPointName", &UBehavior_VectorToLocalSpace::AttachmentPointName, py::return_value_policy::reference)
		.def("eventPublishBehaviorOutput", &UBehavior_VectorToLocalSpace::eventPublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_VectorToLocalSpace::ApplyBehaviorToContext)
		;
	py::class_< UBehaviorSequenceEnableByMission, UBehaviorSequenceCustomEnableCondition >(m, "UBehaviorSequenceEnableByMission")
		.def_property("bIsObjectiveSpecific", [](UBehaviorSequenceEnableByMission &self){return self.bIsObjectiveSpecific;}, [](UBehaviorSequenceEnableByMission &self, bool value){self.bIsObjectiveSpecific = value ? 1 : 0;})
		.def_property("bInstanced", [](UBehaviorSequenceEnableByMission &self){return self.bInstanced;}, [](UBehaviorSequenceEnableByMission &self, bool value){self.bInstanced = value ? 1 : 0;})
		.def_property("bCreateWaypoint", [](UBehaviorSequenceEnableByMission &self){return self.bCreateWaypoint;}, [](UBehaviorSequenceEnableByMission &self, bool value){self.bCreateWaypoint = value ? 1 : 0;})
		.def_readwrite("VfTable_IIMission", &UBehaviorSequenceEnableByMission::VfTable_IIMission, py::return_value_policy::reference)
		.def_readwrite("LinkedMission", &UBehaviorSequenceEnableByMission::LinkedMission, py::return_value_policy::reference)
		.def_readwrite("MissionStatesToLinkTo", &UBehaviorSequenceEnableByMission::MissionStatesToLinkTo, py::return_value_policy::reference)
		.def_readwrite("LinkedObjective", &UBehaviorSequenceEnableByMission::LinkedObjective, py::return_value_policy::reference)
		.def_readwrite("ObjectiveStatesToLinkTo", &UBehaviorSequenceEnableByMission::ObjectiveStatesToLinkTo, py::return_value_policy::reference)
		.def_readwrite("ObjectiveSetRestrictions", &UBehaviorSequenceEnableByMission::ObjectiveSetRestrictions, py::return_value_policy::reference)
		.def("eventMissionReactionObjectiveComplete", &UBehaviorSequenceEnableByMission::eventMissionReactionObjectiveComplete)
		.def("eventMissionReactionObjectiveCleared", &UBehaviorSequenceEnableByMission::eventMissionReactionObjectiveCleared)
		.def("eventMissionReactionObjectiveUpdated", &UBehaviorSequenceEnableByMission::eventMissionReactionObjectiveUpdated)
		.def("eventMissionReactionObjectiveSetChanged", &UBehaviorSequenceEnableByMission::eventMissionReactionObjectiveSetChanged)
		.def("eventMissionReactionStatusChanged", &UBehaviorSequenceEnableByMission::eventMissionReactionStatusChanged)
		.def("eventMissionReactionLevelLoad", &UBehaviorSequenceEnableByMission::eventMissionReactionLevelLoad)
		;
	py::class_< ABehaviorVolume, APhysicsVolume >(m, "ABehaviorVolume")
		.def_property("bEnable", [](ABehaviorVolume &self){return self.bEnable;}, [](ABehaviorVolume &self, bool value){self.bEnable = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorConsumer", &ABehaviorVolume::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIInstanceData", &ABehaviorVolume::VfTable_IIInstanceData, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBalancedActor", &ABehaviorVolume::VfTable_IIBalancedActor, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDesignerAttributeProvider", &ABehaviorVolume::VfTable_IIDesignerAttributeProvider, py::return_value_policy::reference)
		.def_readwrite("Definition", &ABehaviorVolume::Definition, py::return_value_policy::reference)
		.def_readwrite("ConsumerHandle", &ABehaviorVolume::ConsumerHandle, py::return_value_policy::reference)
		.def_readwrite("RadiusForSearch", &ABehaviorVolume::RadiusForSearch)
		.def_readwrite("TouchingActors", &ABehaviorVolume::TouchingActors, py::return_value_policy::reference)
		.def_readwrite("TickRate", &ABehaviorVolume::TickRate)
		.def_readwrite("NextTickTime", &ABehaviorVolume::NextTickTime)
		.def_readwrite("VehicleCrewNdx", &ABehaviorVolume::VehicleCrewNdx)
		.def_readwrite("InstanceDataState", &ABehaviorVolume::InstanceDataState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedInstanceDataState", &ABehaviorVolume::ReplicatedInstanceDataState, py::return_value_policy::reference)
		.def_readwrite("BalanceToRegionDef", &ABehaviorVolume::BalanceToRegionDef, py::return_value_policy::reference)
		.def_readwrite("ExpLevel", &ABehaviorVolume::ExpLevel)
		.def_readwrite("GameStage", &ABehaviorVolume::GameStage)
		.def_readwrite("AwesomeLevel", &ABehaviorVolume::AwesomeLevel)
		.def_readwrite("AttributeStartingValues", &ABehaviorVolume::AttributeStartingValues, py::return_value_policy::reference)
		.def_readwrite("DesignerAttributes", &ABehaviorVolume::DesignerAttributes, py::return_value_policy::reference)
		.def("eventGetInstancedDesignerAttribute", &ABehaviorVolume::eventGetInstancedDesignerAttribute, py::return_value_policy::reference)
		.def("CreateDesignerAttribute", &ABehaviorVolume::CreateDesignerAttribute, py::return_value_policy::reference)
		.def("InitializeAttributeStartingValues", &ABehaviorVolume::InitializeAttributeStartingValues)
		.def("GetBalancedActorTypeIdentifier", &ABehaviorVolume::GetBalancedActorTypeIdentifier, py::return_value_policy::reference)
		.def("SetExpLevel", &ABehaviorVolume::SetExpLevel)
		.def("SetAwesomeLevel", &ABehaviorVolume::SetAwesomeLevel)
		.def("SetGameStage", &ABehaviorVolume::SetGameStage)
		.def("GetExpLevelForEquip", &ABehaviorVolume::GetExpLevelForEquip)
		.def("GetExpLevel", &ABehaviorVolume::GetExpLevel)
		.def("GetAwesomeLevel", &ABehaviorVolume::GetAwesomeLevel)
		.def("GetGameStage", &ABehaviorVolume::GetGameStage)
		.def("GetReplicatedInstanceDataState", &ABehaviorVolume::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &ABehaviorVolume::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &ABehaviorVolume::DestroyOwnedInstanceData)
		.def("eventRemoveInstanceDataObject", &ABehaviorVolume::eventRemoveInstanceDataObject)
		.def("eventRemoveInstanceData", &ABehaviorVolume::eventRemoveInstanceData)
		.def("eventGetInstanceData", &ABehaviorVolume::eventGetInstanceData)
		.def("SetInstanceData", &ABehaviorVolume::SetInstanceData)
		.def("ClearTouchList", &ABehaviorVolume::ClearTouchList)
		.def("HandleDisabled", &ABehaviorVolume::HandleDisabled)
		.def("OnToggle", &ABehaviorVolume::OnToggle)
		.def("eventCanSplashNativeWrapper", &ABehaviorVolume::eventCanSplashNativeWrapper)
		.def("IsWaterVolume", &ABehaviorVolume::IsWaterVolume)
		.def("eventBehaviorVolumeImpact", &ABehaviorVolume::eventBehaviorVolumeImpact)
		.def("eventTakeDamage", &ABehaviorVolume::eventTakeDamage)
		.def("eventTraceTouch", &ABehaviorVolume::eventTraceTouch)
		.def("eventUnTouch", &ABehaviorVolume::eventUnTouch)
		.def("eventTouch", &ABehaviorVolume::eventTouch)
		.def("StopsProjectile", &ABehaviorVolume::StopsProjectile)
		.def("eventPostBeginPlay", &ABehaviorVolume::eventPostBeginPlay)
		.def("GetBehaviorConsumerHandle", &ABehaviorVolume::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("eventReplicatedEvent", &ABehaviorVolume::eventReplicatedEvent)
		;
	py::class_< UBehaviorVolumeDefinition, UGBXDefinition >(m, "UBehaviorVolumeDefinition")
		.def_property("bIsWater", [](UBehaviorVolumeDefinition &self){return self.bIsWater;}, [](UBehaviorVolumeDefinition &self, bool value){self.bIsWater = value ? 1 : 0;})
		.def_property("bIgnoreTracesThatStartInsideVolume", [](UBehaviorVolumeDefinition &self){return self.bIgnoreTracesThatStartInsideVolume;}, [](UBehaviorVolumeDefinition &self, bool value){self.bIgnoreTracesThatStartInsideVolume = value ? 1 : 0;})
		.def_property("bCanTakeRadiusDamage", [](UBehaviorVolumeDefinition &self){return self.bCanTakeRadiusDamage;}, [](UBehaviorVolumeDefinition &self, bool value){self.bCanTakeRadiusDamage = value ? 1 : 0;})
		.def_readwrite("VfTable_IIConstructObject", &UBehaviorVolumeDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorProvider", &UBehaviorVolumeDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("DefaultTouchImpact", &UBehaviorVolumeDefinition::DefaultTouchImpact, py::return_value_policy::reference)
		.def_readwrite("DefaultUntouchImpact", &UBehaviorVolumeDefinition::DefaultUntouchImpact, py::return_value_policy::reference)
		.def_readwrite("DefaultTraceImpact", &UBehaviorVolumeDefinition::DefaultTraceImpact, py::return_value_policy::reference)
		.def_readwrite("PhysicalMaterial", &UBehaviorVolumeDefinition::PhysicalMaterial, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UBehaviorVolumeDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def("OnShoot", &UBehaviorVolumeDefinition::OnShoot)
		.def("OnExit", &UBehaviorVolumeDefinition::OnExit)
		.def("OnEntry", &UBehaviorVolumeDefinition::OnEntry)
		.def("SetBehaviorProviderDefinition", &UBehaviorVolumeDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UBehaviorVolumeDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UBlackMarketDefinition, UGBXDefinition >(m, "UBlackMarketDefinition")
		.def_readwrite("BlackMarketName", &UBlackMarketDefinition::BlackMarketName, py::return_value_policy::reference)
		.def_readwrite("ItemOfTheDay", &UBlackMarketDefinition::ItemOfTheDay, py::return_value_policy::reference)
		.def_readwrite("GeneralStock", &UBlackMarketDefinition::GeneralStock, py::return_value_policy::reference)
		.def_readwrite("MaxUpgradeLevel", &UBlackMarketDefinition::MaxUpgradeLevel)
		.def_readwrite("MaxUpgradeLevelOverrides", &UBlackMarketDefinition::MaxUpgradeLevelOverrides, py::return_value_policy::reference)
		.def("CurrentLevelIsBelowMaxForPlayer", &UBlackMarketDefinition::CurrentLevelIsBelowMaxForPlayer)
		.def("CurrentLevelIsBelowMaxLevel", &UBlackMarketDefinition::CurrentLevelIsBelowMaxLevel)
		;
	py::class_< UBlackMarketUpgradeAttributeValueResolver, UAttributeValueResolver >(m, "UBlackMarketUpgradeAttributeValueResolver")
		.def_readwrite("AssociatedBlackMarketUpgrade", &UBlackMarketUpgradeAttributeValueResolver::AssociatedBlackMarketUpgrade, py::return_value_policy::reference)
		;
	py::class_< UBlackMarketUpgradeDefinition, UGBXDefinition >(m, "UBlackMarketUpgradeDefinition")
		.def_readwrite("VfTable_IIBehaviorProvider", &UBlackMarketUpgradeDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("UpgradeName", &UBlackMarketUpgradeDefinition::UpgradeName, py::return_value_policy::reference)
		.def_readwrite("BalanceDefinition", &UBlackMarketUpgradeDefinition::BalanceDefinition, py::return_value_policy::reference)
		.def_readwrite("CachedUpgradeIndex", &UBlackMarketUpgradeDefinition::CachedUpgradeIndex)
		.def_readwrite("BehaviorProvider", &UBlackMarketUpgradeDefinition::BehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("ZippyFrameOverride", &UBlackMarketUpgradeDefinition::ZippyFrameOverride, py::return_value_policy::reference)
		.def("UpdateCachedUpgradeIndex", &UBlackMarketUpgradeDefinition::UpdateCachedUpgradeIndex)
		.def("OnPurchased", &UBlackMarketUpgradeDefinition::OnPurchased)
		.def("SetBehaviorProviderDefinition", &UBlackMarketUpgradeDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UBlackMarketUpgradeDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< ABlackMarketUpgradeManager, AActor >(m, "ABlackMarketUpgradeManager")
		.def_readwrite("VfTable_IIBehaviorConsumer", &ABlackMarketUpgradeManager::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("BehaviorConsumerHandle", &ABlackMarketUpgradeManager::BehaviorConsumerHandle, py::return_value_policy::reference)
		.def("InitAllBlackMarketUpgrades", &ABlackMarketUpgradeManager::InitAllBlackMarketUpgrades)
		.def("GetBehaviorConsumerHandle", &ABlackMarketUpgradeManager::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		;
	py::class_< UBodyClassDeathDefinition, UGBXDefinition >(m, "UBodyClassDeathDefinition")
		.def_property("KeepCorpseAfterDeath", [](UBodyClassDeathDefinition &self){return self.KeepCorpseAfterDeath;}, [](UBodyClassDeathDefinition &self, bool value){self.KeepCorpseAfterDeath = value ? 1 : 0;})
		.def_property("bDestroyOnDeath", [](UBodyClassDeathDefinition &self){return self.bDestroyOnDeath;}, [](UBodyClassDeathDefinition &self, bool value){self.bDestroyOnDeath = value ? 1 : 0;})
		.def_property("bTearOffAfterDeath", [](UBodyClassDeathDefinition &self){return self.bTearOffAfterDeath;}, [](UBodyClassDeathDefinition &self, bool value){self.bTearOffAfterDeath = value ? 1 : 0;})
		.def_property("bCensorGibs", [](UBodyClassDeathDefinition &self){return self.bCensorGibs;}, [](UBodyClassDeathDefinition &self, bool value){self.bCensorGibs = value ? 1 : 0;})
		.def_property("bUseCodeDrivenBodyDissolve", [](UBodyClassDeathDefinition &self){return self.bUseCodeDrivenBodyDissolve;}, [](UBodyClassDeathDefinition &self, bool value){self.bUseCodeDrivenBodyDissolve = value ? 1 : 0;})
		.def_property("bDeathAnimRagdoll", [](UBodyClassDeathDefinition &self){return self.bDeathAnimRagdoll;}, [](UBodyClassDeathDefinition &self, bool value){self.bDeathAnimRagdoll = value ? 1 : 0;})
		.def_property("bMotorizeRagdollOnNormalDeath", [](UBodyClassDeathDefinition &self){return self.bMotorizeRagdollOnNormalDeath;}, [](UBodyClassDeathDefinition &self, bool value){self.bMotorizeRagdollOnNormalDeath = value ? 1 : 0;})
		.def_property("bMotorizeRagdollOnTechDeath", [](UBodyClassDeathDefinition &self){return self.bMotorizeRagdollOnTechDeath;}, [](UBodyClassDeathDefinition &self, bool value){self.bMotorizeRagdollOnTechDeath = value ? 1 : 0;})
		.def_property("bDefaultRagdollContactNotification", [](UBodyClassDeathDefinition &self){return self.bDefaultRagdollContactNotification;}, [](UBodyClassDeathDefinition &self, bool value){self.bDefaultRagdollContactNotification = value ? 1 : 0;})
		.def_property("bCreateSpringsForAllBones", [](UBodyClassDeathDefinition &self){return self.bCreateSpringsForAllBones;}, [](UBodyClassDeathDefinition &self, bool value){self.bCreateSpringsForAllBones = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorProvider", &UBodyClassDeathDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("TechDeaths", &UBodyClassDeathDefinition::TechDeaths, py::return_value_policy::reference)
		.def_readwrite("NonRagdollDeathSpecialMove", &UBodyClassDeathDefinition::NonRagdollDeathSpecialMove, py::return_value_policy::reference)
		.def_readwrite("CanPlayDeathAnimationIf", &UBodyClassDeathDefinition::CanPlayDeathAnimationIf, py::return_value_policy::reference)
		.def_readwrite("InjuredSpecialMove", &UBodyClassDeathDefinition::InjuredSpecialMove, py::return_value_policy::reference)
		.def_readwrite("DissolveBodyDelayBeforeDestroy", &UBodyClassDeathDefinition::DissolveBodyDelayBeforeDestroy)
		.def_readwrite("GibTriggers", &UBodyClassDeathDefinition::GibTriggers, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UBodyClassDeathDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def_readwrite("DefaultBodyDissolveTime", &UBodyClassDeathDefinition::DefaultBodyDissolveTime)
		.def_readwrite("SkipRagdollDissolveAmount", &UBodyClassDeathDefinition::SkipRagdollDissolveAmount)
		.def_readwrite("BlendToRagdollTime", &UBodyClassDeathDefinition::BlendToRagdollTime)
		.def_readwrite("RagdollLinearSpring", &UBodyClassDeathDefinition::RagdollLinearSpring)
		.def_readwrite("RagdollAngularSpring", &UBodyClassDeathDefinition::RagdollAngularSpring)
		.def_readwrite("RagdollMotorSpring", &UBodyClassDeathDefinition::RagdollMotorSpring)
		.def_readwrite("RagdollMotorDamping", &UBodyClassDeathDefinition::RagdollMotorDamping)
		.def_readwrite("RagdollContactReportBones", &UBodyClassDeathDefinition::RagdollContactReportBones, py::return_value_policy::reference)
		.def_readwrite("RagdollContactReportThreshold", &UBodyClassDeathDefinition::RagdollContactReportThreshold)
		.def_readwrite("RagdollSpringBones", &UBodyClassDeathDefinition::RagdollSpringBones, py::return_value_policy::reference)
		.def("OnTechDeath", &UBodyClassDeathDefinition::OnTechDeath)
		.def("OnBodyDissolve", &UBodyClassDeathDefinition::OnBodyDissolve)
		.def("OnDeathNonGib", &UBodyClassDeathDefinition::OnDeathNonGib)
		.def("OnDeathGib", &UBodyClassDeathDefinition::OnDeathGib)
		.def("OnKilledBy", &UBodyClassDeathDefinition::OnKilledBy)
		.def("OnPlayDeathPizazz", &UBodyClassDeathDefinition::OnPlayDeathPizazz)
		.def("SetBehaviorProviderDefinition", &UBodyClassDeathDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UBodyClassDeathDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UBodyClassDefinition, UGBXDefinition >(m, "UBodyClassDefinition")
		.def_property("bLeftHandIKDisabled", [](UBodyClassDefinition &self){return self.bLeftHandIKDisabled;}, [](UBodyClassDefinition &self, bool value){self.bLeftHandIKDisabled = value ? 1 : 0;})
		.def_property("bUseMeshForCollision", [](UBodyClassDefinition &self){return self.bUseMeshForCollision;}, [](UBodyClassDefinition &self, bool value){self.bUseMeshForCollision = value ? 1 : 0;})
		.def_property("IgnoreMomentumTransfer", [](UBodyClassDefinition &self){return self.IgnoreMomentumTransfer;}, [](UBodyClassDefinition &self, bool value){self.IgnoreMomentumTransfer = value ? 1 : 0;})
		.def_property("UseRootMotion", [](UBodyClassDefinition &self){return self.UseRootMotion;}, [](UBodyClassDefinition &self, bool value){self.UseRootMotion = value ? 1 : 0;})
		.def_property("UseRootRotation", [](UBodyClassDefinition &self){return self.UseRootRotation;}, [](UBodyClassDefinition &self, bool value){self.UseRootRotation = value ? 1 : 0;})
		.def_property("bAllowProjectilesToCollideWithSkeletalMesh", [](UBodyClassDefinition &self){return self.bAllowProjectilesToCollideWithSkeletalMesh;}, [](UBodyClassDefinition &self, bool value){self.bAllowProjectilesToCollideWithSkeletalMesh = value ? 1 : 0;})
		.def_property("bUpdateMeshTranslationWhenCylinderChanges", [](UBodyClassDefinition &self){return self.bUpdateMeshTranslationWhenCylinderChanges;}, [](UBodyClassDefinition &self, bool value){self.bUpdateMeshTranslationWhenCylinderChanges = value ? 1 : 0;})
		.def_property("bCanUpdateMeshTranslation", [](UBodyClassDefinition &self){return self.bCanUpdateMeshTranslation;}, [](UBodyClassDefinition &self, bool value){self.bCanUpdateMeshTranslation = value ? 1 : 0;})
		.def_property("bUseDamageLocationParent", [](UBodyClassDefinition &self){return self.bUseDamageLocationParent;}, [](UBodyClassDefinition &self, bool value){self.bUseDamageLocationParent = value ? 1 : 0;})
		.def_property("bShowDamageLocations", [](UBodyClassDefinition &self){return self.bShowDamageLocations;}, [](UBodyClassDefinition &self, bool value){self.bShowDamageLocations = value ? 1 : 0;})
		.def_property("bStaggerWhenLandingOnUnwalkableTerrain", [](UBodyClassDefinition &self){return self.bStaggerWhenLandingOnUnwalkableTerrain;}, [](UBodyClassDefinition &self, bool value){self.bStaggerWhenLandingOnUnwalkableTerrain = value ? 1 : 0;})
		.def_property("bUseTurns", [](UBodyClassDefinition &self){return self.bUseTurns;}, [](UBodyClassDefinition &self, bool value){self.bUseTurns = value ? 1 : 0;})
		.def_property("bUseTurnParent", [](UBodyClassDefinition &self){return self.bUseTurnParent;}, [](UBodyClassDefinition &self, bool value){self.bUseTurnParent = value ? 1 : 0;})
		.def_property("bPawnIsAlwaysRelevant", [](UBodyClassDefinition &self){return self.bPawnIsAlwaysRelevant;}, [](UBodyClassDefinition &self, bool value){self.bPawnIsAlwaysRelevant = value ? 1 : 0;})
		.def_property("bVehicleBlockingActor", [](UBodyClassDefinition &self){return self.bVehicleBlockingActor;}, [](UBodyClassDefinition &self, bool value){self.bVehicleBlockingActor = value ? 1 : 0;})
		.def_property("bUseKnockbackParent", [](UBodyClassDefinition &self){return self.bUseKnockbackParent;}, [](UBodyClassDefinition &self, bool value){self.bUseKnockbackParent = value ? 1 : 0;})
		.def_property("bUseCringe", [](UBodyClassDefinition &self){return self.bUseCringe;}, [](UBodyClassDefinition &self, bool value){self.bUseCringe = value ? 1 : 0;})
		.def_property("bUseCringeParent", [](UBodyClassDefinition &self){return self.bUseCringeParent;}, [](UBodyClassDefinition &self, bool value){self.bUseCringeParent = value ? 1 : 0;})
		.def_property("bUseDodges", [](UBodyClassDefinition &self){return self.bUseDodges;}, [](UBodyClassDefinition &self, bool value){self.bUseDodges = value ? 1 : 0;})
		.def_property("bDodgeUseParent", [](UBodyClassDefinition &self){return self.bDodgeUseParent;}, [](UBodyClassDefinition &self, bool value){self.bDodgeUseParent = value ? 1 : 0;})
		.def_property("bCanAvoidGrenades", [](UBodyClassDefinition &self){return self.bCanAvoidGrenades;}, [](UBodyClassDefinition &self, bool value){self.bCanAvoidGrenades = value ? 1 : 0;})
		.def_property("bProvocationUseParent", [](UBodyClassDefinition &self){return self.bProvocationUseParent;}, [](UBodyClassDefinition &self, bool value){self.bProvocationUseParent = value ? 1 : 0;})
		.def_property("bNPCDialog", [](UBodyClassDefinition &self){return self.bNPCDialog;}, [](UBodyClassDefinition &self, bool value){self.bNPCDialog = value ? 1 : 0;})
		.def_property("bCanBeInjured", [](UBodyClassDefinition &self){return self.bCanBeInjured;}, [](UBodyClassDefinition &self, bool value){self.bCanBeInjured = value ? 1 : 0;})
		.def_property("bInjuredUseParent", [](UBodyClassDefinition &self){return self.bInjuredUseParent;}, [](UBodyClassDefinition &self, bool value){self.bInjuredUseParent = value ? 1 : 0;})
		.def_property("bOnlyHardFlinchWhenInjured", [](UBodyClassDefinition &self){return self.bOnlyHardFlinchWhenInjured;}, [](UBodyClassDefinition &self, bool value){self.bOnlyHardFlinchWhenInjured = value ? 1 : 0;})
		.def_property("bCloaks", [](UBodyClassDefinition &self){return self.bCloaks;}, [](UBodyClassDefinition &self, bool value){self.bCloaks = value ? 1 : 0;})
		.def_property("bCloakUseParentData", [](UBodyClassDefinition &self){return self.bCloakUseParentData;}, [](UBodyClassDefinition &self, bool value){self.bCloakUseParentData = value ? 1 : 0;})
		.def_property("bCloakUseParentOptions", [](UBodyClassDefinition &self){return self.bCloakUseParentOptions;}, [](UBodyClassDefinition &self, bool value){self.bCloakUseParentOptions = value ? 1 : 0;})
		.def_property("bCloakingRequiresShields", [](UBodyClassDefinition &self){return self.bCloakingRequiresShields;}, [](UBodyClassDefinition &self, bool value){self.bCloakingRequiresShields = value ? 1 : 0;})
		.def_property("bCanShootWhileCloaked", [](UBodyClassDefinition &self){return self.bCanShootWhileCloaked;}, [](UBodyClassDefinition &self, bool value){self.bCanShootWhileCloaked = value ? 1 : 0;})
		.def_property("bCloakHideInfo", [](UBodyClassDefinition &self){return self.bCloakHideInfo;}, [](UBodyClassDefinition &self, bool value){self.bCloakHideInfo = value ? 1 : 0;})
		.def_property("bHideBodyOnCloak", [](UBodyClassDefinition &self){return self.bHideBodyOnCloak;}, [](UBodyClassDefinition &self, bool value){self.bHideBodyOnCloak = value ? 1 : 0;})
		.def_property("bHasCloakingCapability", [](UBodyClassDefinition &self){return self.bHasCloakingCapability;}, [](UBodyClassDefinition &self, bool value){self.bHasCloakingCapability = value ? 1 : 0;})
		.def_property("bUseCoverParent", [](UBodyClassDefinition &self){return self.bUseCoverParent;}, [](UBodyClassDefinition &self, bool value){self.bUseCoverParent = value ? 1 : 0;})
		.def_property("bUseParentStances", [](UBodyClassDefinition &self){return self.bUseParentStances;}, [](UBodyClassDefinition &self, bool value){self.bUseParentStances = value ? 1 : 0;})
		.def_property("bDamageParent", [](UBodyClassDefinition &self){return self.bDamageParent;}, [](UBodyClassDefinition &self, bool value){self.bDamageParent = value ? 1 : 0;})
		.def_property("bDisplayParentInfo", [](UBodyClassDefinition &self){return self.bDisplayParentInfo;}, [](UBodyClassDefinition &self, bool value){self.bDisplayParentInfo = value ? 1 : 0;})
		.def_property("bOnlyDisplayParentInfoWhileAttached", [](UBodyClassDefinition &self){return self.bOnlyDisplayParentInfoWhileAttached;}, [](UBodyClassDefinition &self, bool value){self.bOnlyDisplayParentInfoWhileAttached = value ? 1 : 0;})
		.def_property("bKillWhenParentDies", [](UBodyClassDefinition &self){return self.bKillWhenParentDies;}, [](UBodyClassDefinition &self, bool value){self.bKillWhenParentDies = value ? 1 : 0;})
		.def_property("HideInfoOnHUD", [](UBodyClassDefinition &self){return self.HideInfoOnHUD;}, [](UBodyClassDefinition &self, bool value){self.HideInfoOnHUD = value ? 1 : 0;})
		.def_property("bFullyArmored", [](UBodyClassDefinition &self){return self.bFullyArmored;}, [](UBodyClassDefinition &self, bool value){self.bFullyArmored = value ? 1 : 0;})
		.def_property("bHideEmptyShieldBar", [](UBodyClassDefinition &self){return self.bHideEmptyShieldBar;}, [](UBodyClassDefinition &self, bool value){self.bHideEmptyShieldBar = value ? 1 : 0;})
		.def_property("bIsPossibleHomingTarget", [](UBodyClassDefinition &self){return self.bIsPossibleHomingTarget;}, [](UBodyClassDefinition &self, bool value){self.bIsPossibleHomingTarget = value ? 1 : 0;})
		.def_property("bUseRotationModifierBySpeed", [](UBodyClassDefinition &self){return self.bUseRotationModifierBySpeed;}, [](UBodyClassDefinition &self, bool value){self.bUseRotationModifierBySpeed = value ? 1 : 0;})
		.def_property("bUseSimulatedRotation", [](UBodyClassDefinition &self){return self.bUseSimulatedRotation;}, [](UBodyClassDefinition &self, bool value){self.bUseSimulatedRotation = value ? 1 : 0;})
		.def_property("bCrawlerFloorAdjust", [](UBodyClassDefinition &self){return self.bCrawlerFloorAdjust;}, [](UBodyClassDefinition &self, bool value){self.bCrawlerFloorAdjust = value ? 1 : 0;})
		.def_property("bUseParentPhaselockDef", [](UBodyClassDefinition &self){return self.bUseParentPhaselockDef;}, [](UBodyClassDefinition &self, bool value){self.bUseParentPhaselockDef = value ? 1 : 0;})
		.def_readwrite("VfTable_IIHitRegionInfoProvider", &UBodyClassDefinition::VfTable_IIHitRegionInfoProvider, py::return_value_policy::reference)
		.def_readwrite("HeadLookAtName", &UBodyClassDefinition::HeadLookAtName, py::return_value_policy::reference)
		.def_readwrite("BodyTag", &UBodyClassDefinition::BodyTag, py::return_value_policy::reference)
		.def_readwrite("PhysicsJumpSMD", &UBodyClassDefinition::PhysicsJumpSMD, py::return_value_policy::reference)
		.def_readwrite("ScrapedStances", &UBodyClassDefinition::ScrapedStances, py::return_value_policy::reference)
		.def_readwrite("Mass", &UBodyClassDefinition::Mass)
		.def_readwrite("CrouchHeight", &UBodyClassDefinition::CrouchHeight)
		.def_readwrite("DefaultHitRegion", &UBodyClassDefinition::DefaultHitRegion, py::return_value_policy::reference)
		.def_readwrite("HitRegionList", &UBodyClassDefinition::HitRegionList, py::return_value_policy::reference)
		.def_readwrite("DamageLocationTime", &UBodyClassDefinition::DamageLocationTime)
		.def_readwrite("DamageLocationFadeTime", &UBodyClassDefinition::DamageLocationFadeTime)
		.def_readwrite("DamageLocationSize", &UBodyClassDefinition::DamageLocationSize)
		.def_readwrite("DeathDef", &UBodyClassDefinition::DeathDef, py::return_value_policy::reference)
		.def_readwrite("CustomDeathBehaviors", &UBodyClassDefinition::CustomDeathBehaviors, py::return_value_policy::reference)
		.def_readwrite("InjuredDeathAnim", &UBodyClassDefinition::InjuredDeathAnim, py::return_value_policy::reference)
		.def_readwrite("RagDollGravity", &UBodyClassDefinition::RagDollGravity)
		.def_readwrite("MinimumRecognizedImpact", &UBodyClassDefinition::MinimumRecognizedImpact)
		.def_readwrite("DirectImpactEffectThreshold", &UBodyClassDefinition::DirectImpactEffectThreshold)
		.def_readwrite("SlidingImpactEffectThreshold", &UBodyClassDefinition::SlidingImpactEffectThreshold)
		.def_readwrite("ImpactEffectProbability", &UBodyClassDefinition::ImpactEffectProbability)
		.def_readwrite("RagdollImpact", &UBodyClassDefinition::RagdollImpact, py::return_value_policy::reference)
		.def_readwrite("RD_EffectsThreshold", &UBodyClassDefinition::RD_EffectsThreshold)
		.def_readwrite("RD_SlideThreshold", &UBodyClassDefinition::RD_SlideThreshold)
		.def_readwrite("RD_ImpactThreshold", &UBodyClassDefinition::RD_ImpactThreshold)
		.def_readwrite("RD_SlideMinRepeatTime", &UBodyClassDefinition::RD_SlideMinRepeatTime)
		.def_readwrite("RD_ImpactMinRepeatTime", &UBodyClassDefinition::RD_ImpactMinRepeatTime)
		.def_readwrite("RD_SlideExplosion", &UBodyClassDefinition::RD_SlideExplosion, py::return_value_policy::reference)
		.def_readwrite("RD_SlideExplosionDamageRadius", &UBodyClassDefinition::RD_SlideExplosionDamageRadius)
		.def_readwrite("RD_ImpactExplosion", &UBodyClassDefinition::RD_ImpactExplosion, py::return_value_policy::reference)
		.def_readwrite("RD_ImpactExplosionDamageRadius", &UBodyClassDefinition::RD_ImpactExplosionDamageRadius)
		.def_readwrite("RD_ImpactAkEventThreshold", &UBodyClassDefinition::RD_ImpactAkEventThreshold)
		.def_readwrite("RD_ImpactAkEventMinRepeatTime", &UBodyClassDefinition::RD_ImpactAkEventMinRepeatTime)
		.def_readwrite("RD_ImpactAkEvent", &UBodyClassDefinition::RD_ImpactAkEvent, py::return_value_policy::reference)
		.def_readwrite("FootstepBones", &UBodyClassDefinition::FootstepBones, py::return_value_policy::reference)
		.def_readwrite("FootstepImpact", &UBodyClassDefinition::FootstepImpact, py::return_value_policy::reference)
		.def_readwrite("LeadInFootstepImpacts", &UBodyClassDefinition::LeadInFootstepImpacts, py::return_value_policy::reference)
		.def_readwrite("HeavyFootStepImpact", &UBodyClassDefinition::HeavyFootStepImpact, py::return_value_policy::reference)
		.def_readwrite("JumpedImpact", &UBodyClassDefinition::JumpedImpact, py::return_value_policy::reference)
		.def_readwrite("LandedImpact", &UBodyClassDefinition::LandedImpact, py::return_value_policy::reference)
		.def_readwrite("UnwalkableTerrainStaggerVelocityZ", &UBodyClassDefinition::UnwalkableTerrainStaggerVelocityZ)
		.def_readwrite("LandedMinVel", &UBodyClassDefinition::LandedMinVel)
		.def_readwrite("SkidImpact", &UBodyClassDefinition::SkidImpact, py::return_value_policy::reference)
		.def_readwrite("SkidCameraLurchMagnitude", &UBodyClassDefinition::SkidCameraLurchMagnitude)
		.def_readwrite("SkidCameraLurchSpeed", &UBodyClassDefinition::SkidCameraLurchSpeed)
		.def_readwrite("BehaviorAliasLookup", &UBodyClassDefinition::BehaviorAliasLookup, py::return_value_policy::reference)
		.def_readwrite("ArmsMaterialIndex", &UBodyClassDefinition::ArmsMaterialIndex)
		.def_readwrite("ShieldEnabledParameterName", &UBodyClassDefinition::ShieldEnabledParameterName, py::return_value_policy::reference)
		.def_readwrite("ShieldColorParameterName", &UBodyClassDefinition::ShieldColorParameterName, py::return_value_policy::reference)
		.def_readwrite("TouchImpactDefinition", &UBodyClassDefinition::TouchImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("UntouchImpactDefinition", &UBodyClassDefinition::UntouchImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("NumFootstepsToStop", &UBodyClassDefinition::NumFootstepsToStop)
		.def_readwrite("StoppedAkEvent", &UBodyClassDefinition::StoppedAkEvent, py::return_value_policy::reference)
		.def_readwrite("HitByVehicleImpactDefinition", &UBodyClassDefinition::HitByVehicleImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("RunOverByVehicleImpactDefinition", &UBodyClassDefinition::RunOverByVehicleImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("PlayerReRezCoordinatedEffect", &UBodyClassDefinition::PlayerReRezCoordinatedEffect, py::return_value_policy::reference)
		.def_readwrite("PlayerReRezAnim", &UBodyClassDefinition::PlayerReRezAnim, py::return_value_policy::reference)
		.def_readwrite("PlayerEventDef", &UBodyClassDefinition::PlayerEventDef, py::return_value_policy::reference)
		.def_readwrite("DefaultTurns", &UBodyClassDefinition::DefaultTurns, py::return_value_policy::reference)
		.def_readwrite("DefaultCrouchTurns", &UBodyClassDefinition::DefaultCrouchTurns, py::return_value_policy::reference)
		.def_readwrite("AnimationParentBody", &UBodyClassDefinition::AnimationParentBody, py::return_value_policy::reference)
		.def_readwrite("FirstPersonHands", &UBodyClassDefinition::FirstPersonHands, py::return_value_policy::reference)
		.def_readwrite("PrimaryStandInOffset", &UBodyClassDefinition::PrimaryStandInOffset, py::return_value_policy::reference)
		.def_readwrite("WeaponActionParentClass", &UBodyClassDefinition::WeaponActionParentClass, py::return_value_policy::reference)
		.def_readwrite("AimOffsetNodeName", &UBodyClassDefinition::AimOffsetNodeName, py::return_value_policy::reference)
		.def_readwrite("DefaultWeaponHoldDef", &UBodyClassDefinition::DefaultWeaponHoldDef, py::return_value_policy::reference)
		.def_readwrite("WeaponHoldDefs", &UBodyClassDefinition::WeaponHoldDefs, py::return_value_policy::reference)
		.def_readwrite("CanShootWeaponIf", &UBodyClassDefinition::CanShootWeaponIf, py::return_value_policy::reference)
		.def_readwrite("DefaultFirstPersonWeaponHoldDef", &UBodyClassDefinition::DefaultFirstPersonWeaponHoldDef, py::return_value_policy::reference)
		.def_readwrite("FirstPersonWeaponHoldDefs", &UBodyClassDefinition::FirstPersonWeaponHoldDefs, py::return_value_policy::reference)
		.def_readwrite("ThrowGrenadeAkEvent", &UBodyClassDefinition::ThrowGrenadeAkEvent, py::return_value_policy::reference)
		.def_readwrite("MeleeAkEvent", &UBodyClassDefinition::MeleeAkEvent, py::return_value_policy::reference)
		.def_readwrite("ExtraWeaponSlots", &UBodyClassDefinition::ExtraWeaponSlots, py::return_value_policy::reference)
		.def_readwrite("ExpectedInstanceDataSize", &UBodyClassDefinition::ExpectedInstanceDataSize)
		.def_readwrite("CloakStyle", &UBodyClassDefinition::CloakStyle)
		.def_readwrite("DefaultStance", &UBodyClassDefinition::DefaultStance)
		.def_readwrite("PainDialogLines", &UBodyClassDefinition::PainDialogLines, py::return_value_policy::reference)
		.def_readwrite("DefaultStatusEffectSockets", &UBodyClassDefinition::DefaultStatusEffectSockets, py::return_value_policy::reference)
		.def_readwrite("DefaultParticleSystemTemplate", &UBodyClassDefinition::DefaultParticleSystemTemplate, py::return_value_policy::reference)
		.def_readwrite("MeleeWeaponMesh", &UBodyClassDefinition::MeleeWeaponMesh, py::return_value_policy::reference)
		.def_readwrite("MeleeSocketName", &UBodyClassDefinition::MeleeSocketName, py::return_value_policy::reference)
		.def_readwrite("MeleeCameraAnim", &UBodyClassDefinition::MeleeCameraAnim, py::return_value_policy::reference)
		.def_readwrite("PrimaryColorParameterName", &UBodyClassDefinition::PrimaryColorParameterName, py::return_value_policy::reference)
		.def_readwrite("SecondaryColorParameterName", &UBodyClassDefinition::SecondaryColorParameterName, py::return_value_policy::reference)
		.def_readwrite("TertiaryColorParameterName", &UBodyClassDefinition::TertiaryColorParameterName, py::return_value_policy::reference)
		.def_readwrite("PhysVehicleExtentScalars", &UBodyClassDefinition::PhysVehicleExtentScalars, py::return_value_policy::reference)
		.def_readwrite("StaggerSettings", &UBodyClassDefinition::StaggerSettings, py::return_value_policy::reference)
		.def_readwrite("MinKnockbackMomentum", &UBodyClassDefinition::MinKnockbackMomentum)
		.def_readwrite("KnockbackSMD", &UBodyClassDefinition::KnockbackSMD, py::return_value_policy::reference)
		.def_readwrite("KnockbackLandSMD", &UBodyClassDefinition::KnockbackLandSMD, py::return_value_policy::reference)
		.def_readwrite("BodyComposition", &UBodyClassDefinition::BodyComposition, py::return_value_policy::reference)
		.def_readwrite("CringeMinRepeatTime", &UBodyClassDefinition::CringeMinRepeatTime)
		.def_readwrite("CringeMaxRepeatTime", &UBodyClassDefinition::CringeMaxRepeatTime)
		.def_readwrite("Cringes", &UBodyClassDefinition::Cringes, py::return_value_policy::reference)
		.def_readwrite("CustomCringes", &UBodyClassDefinition::CustomCringes, py::return_value_policy::reference)
		.def_readwrite("DodgeAngle", &UBodyClassDefinition::DodgeAngle)
		.def_readwrite("DodgeChance", &UBodyClassDefinition::DodgeChance)
		.def_readwrite("DodgeTargetDistMin", &UBodyClassDefinition::DodgeTargetDistMin)
		.def_readwrite("DodgeRepeatTimeMin", &UBodyClassDefinition::DodgeRepeatTimeMin)
		.def_readwrite("DodgeRepeatTimeMax", &UBodyClassDefinition::DodgeRepeatTimeMax)
		.def_readwrite("DodgeDelayTime", &UBodyClassDefinition::DodgeDelayTime, py::return_value_policy::reference)
		.def_readwrite("DodgeAnimLeft", &UBodyClassDefinition::DodgeAnimLeft, py::return_value_policy::reference)
		.def_readwrite("DodgeAnimRight", &UBodyClassDefinition::DodgeAnimRight, py::return_value_policy::reference)
		.def_readwrite("DodgeGrenadeChance", &UBodyClassDefinition::DodgeGrenadeChance)
		.def_readwrite("MovementDodgeAnims", &UBodyClassDefinition::MovementDodgeAnims, py::return_value_policy::reference)
		.def_readwrite("MovementDodgeTime", &UBodyClassDefinition::MovementDodgeTime, py::return_value_policy::reference)
		.def_readwrite("PlayProvokedAnimChance", &UBodyClassDefinition::PlayProvokedAnimChance)
		.def_readwrite("PlayUnprovokedAnimChance", &UBodyClassDefinition::PlayUnprovokedAnimChance)
		.def_readwrite("ProvokedAnims", &UBodyClassDefinition::ProvokedAnims, py::return_value_policy::reference)
		.def_readwrite("UnprovokedAnims", &UBodyClassDefinition::UnprovokedAnims, py::return_value_policy::reference)
		.def_readwrite("DialogGroup", &UBodyClassDefinition::DialogGroup, py::return_value_policy::reference)
		.def_readwrite("DialogName", &UBodyClassDefinition::DialogName, py::return_value_policy::reference)
		.def_readwrite("DialogGroups", &UBodyClassDefinition::DialogGroups, py::return_value_policy::reference)
		.def_readwrite("InitialTauntWait", &UBodyClassDefinition::InitialTauntWait, py::return_value_policy::reference)
		.def_readwrite("SubsequentTauntWait", &UBodyClassDefinition::SubsequentTauntWait, py::return_value_policy::reference)
		.def_readwrite("TauntCustomEvent", &UBodyClassDefinition::TauntCustomEvent, py::return_value_policy::reference)
		.def_readwrite("StartHeavyBreathingAkEvent", &UBodyClassDefinition::StartHeavyBreathingAkEvent, py::return_value_policy::reference)
		.def_readwrite("StopHeavyBreathingAkEvent", &UBodyClassDefinition::StopHeavyBreathingAkEvent, py::return_value_policy::reference)
		.def_readwrite("TimeBetweenHeavyBreathLoop", &UBodyClassDefinition::TimeBetweenHeavyBreathLoop)
		.def_readwrite("BreathingLoops", &UBodyClassDefinition::BreathingLoops, py::return_value_policy::reference)
		.def_readwrite("InjuredAnims", &UBodyClassDefinition::InjuredAnims, py::return_value_policy::reference)
		.def_readwrite("InjuredAnimsLeft", &UBodyClassDefinition::InjuredAnimsLeft, py::return_value_policy::reference)
		.def_readwrite("InjuredAnimsRight", &UBodyClassDefinition::InjuredAnimsRight, py::return_value_policy::reference)
		.def_readwrite("InjuredAnimsCritical", &UBodyClassDefinition::InjuredAnimsCritical, py::return_value_policy::reference)
		.def_readwrite("InjuredHealthPct", &UBodyClassDefinition::InjuredHealthPct)
		.def_readwrite("OnInjured", &UBodyClassDefinition::OnInjured, py::return_value_policy::reference)
		.def_readwrite("OnUninjured", &UBodyClassDefinition::OnUninjured, py::return_value_policy::reference)
		.def_readwrite("LostShieldAnim", &UBodyClassDefinition::LostShieldAnim, py::return_value_policy::reference)
		.def_readwrite("LostShieldDamageTriggers", &UBodyClassDefinition::LostShieldDamageTriggers, py::return_value_policy::reference)
		.def_readwrite("StartInjuredAkEvent", &UBodyClassDefinition::StartInjuredAkEvent, py::return_value_policy::reference)
		.def_readwrite("StopInjuredAkEvent", &UBodyClassDefinition::StopInjuredAkEvent, py::return_value_policy::reference)
		.def_readwrite("InjuredLoopOverrides", &UBodyClassDefinition::InjuredLoopOverrides, py::return_value_policy::reference)
		.def_readwrite("CloakExceptions", &UBodyClassDefinition::CloakExceptions, py::return_value_policy::reference)
		.def_readwrite("CloakEnterAnims", &UBodyClassDefinition::CloakEnterAnims, py::return_value_policy::reference)
		.def_readwrite("CloakExitAnims", &UBodyClassDefinition::CloakExitAnims, py::return_value_policy::reference)
		.def_readwrite("CloakEffect", &UBodyClassDefinition::CloakEffect, py::return_value_policy::reference)
		.def_readwrite("UnCloakEffect", &UBodyClassDefinition::UnCloakEffect, py::return_value_policy::reference)
		.def_readwrite("CloakEnter", &UBodyClassDefinition::CloakEnter, py::return_value_policy::reference)
		.def_readwrite("CloakExit", &UBodyClassDefinition::CloakExit, py::return_value_policy::reference)
		.def_readwrite("CoverOffset", &UBodyClassDefinition::CoverOffset)
		.def_readwrite("CoverMantleOffset", &UBodyClassDefinition::CoverMantleOffset)
		.def_readwrite("CoverIdleTime", &UBodyClassDefinition::CoverIdleTime, py::return_value_policy::reference)
		.def_readwrite("CoverFireTime", &UBodyClassDefinition::CoverFireTime, py::return_value_policy::reference)
		.def_readwrite("CoverMantleLerpStartTime", &UBodyClassDefinition::CoverMantleLerpStartTime)
		.def_readwrite("CoverMantleLerpStopTime", &UBodyClassDefinition::CoverMantleLerpStopTime)
		.def_readwrite("MantleAnim", &UBodyClassDefinition::MantleAnim, py::return_value_policy::reference)
		.def_readwrite("CoverStance_HighLeft", &UBodyClassDefinition::CoverStance_HighLeft, py::return_value_policy::reference)
		.def_readwrite("CoverStance_HighRight", &UBodyClassDefinition::CoverStance_HighRight, py::return_value_policy::reference)
		.def_readwrite("CoverStance_LowCenter", &UBodyClassDefinition::CoverStance_LowCenter, py::return_value_policy::reference)
		.def_readwrite("RunStance", &UBodyClassDefinition::RunStance, py::return_value_policy::reference)
		.def_readwrite("PatrolStance", &UBodyClassDefinition::PatrolStance, py::return_value_policy::reference)
		.def_readwrite("SprintStance", &UBodyClassDefinition::SprintStance, py::return_value_policy::reference)
		.def_readwrite("InjuredStance", &UBodyClassDefinition::InjuredStance, py::return_value_policy::reference)
		.def_readwrite("CrouchStance", &UBodyClassDefinition::CrouchStance, py::return_value_policy::reference)
		.def_readwrite("ParentDamageLimit", &UBodyClassDefinition::ParentDamageLimit)
		.def_readwrite("DamageParentScale", &UBodyClassDefinition::DamageParentScale)
		.def_readwrite("AudioDistanceRTPC", &UBodyClassDefinition::AudioDistanceRTPC, py::return_value_policy::reference)
		.def_readwrite("DeltaRotationModifierBySpeed", &UBodyClassDefinition::DeltaRotationModifierBySpeed)
		.def_readwrite("SimulatedRotationLerpTime", &UBodyClassDefinition::SimulatedRotationLerpTime)
		.def_readwrite("CrawlerFloorAdjustBones", &UBodyClassDefinition::CrawlerFloorAdjustBones, py::return_value_policy::reference)
		.def_readwrite("CrawlerFloorAdjustRadius", &UBodyClassDefinition::CrawlerFloorAdjustRadius)
		.def_readwrite("CrawlerFloorAdjustTraceUp", &UBodyClassDefinition::CrawlerFloorAdjustTraceUp)
		.def_readwrite("CrawlerFloorAdjustTraceDown", &UBodyClassDefinition::CrawlerFloorAdjustTraceDown)
		.def_readwrite("CrawlerFloorAdjustOffset", &UBodyClassDefinition::CrawlerFloorAdjustOffset)
		.def_readwrite("CrawlerFloorAdjustRate", &UBodyClassDefinition::CrawlerFloorAdjustRate)
		.def_readwrite("PhaseLockDef", &UBodyClassDefinition::PhaseLockDef, py::return_value_policy::reference)
		.def_readwrite("DLCVehicleAnimSetMappings", &UBodyClassDefinition::DLCVehicleAnimSetMappings, py::return_value_policy::reference)
		.def("ShouldUseUpperBodyMovementBlendForHoldName", &UBodyClassDefinition::ShouldUseUpperBodyMovementBlendForHoldName)
		.def("ShouldUseArmBoneBlendForHoldName", &UBodyClassDefinition::ShouldUseArmBoneBlendForHoldName)
		.def("GetAimOffsetProfileForHoldName", &UBodyClassDefinition::GetAimOffsetProfileForHoldName, py::return_value_policy::reference)
		.def("GetFirstPersonWeaponHoldAnimSets", &UBodyClassDefinition::GetFirstPersonWeaponHoldAnimSets)
		.def("GetWeaponHoldAnimSets", &UBodyClassDefinition::GetWeaponHoldAnimSets)
		.def("GetFirstPersonWeaponHoldDef", &UBodyClassDefinition::GetFirstPersonWeaponHoldDef, py::return_value_policy::reference)
		.def("GetWeaponHoldDef", &UBodyClassDefinition::GetWeaponHoldDef, py::return_value_policy::reference)
		.def("GetCloakBody", &UBodyClassDefinition::GetCloakBody, py::return_value_policy::reference)
		.def("ShouldCloak", &UBodyClassDefinition::ShouldCloak)
		.def("GetCringeAnim", &UBodyClassDefinition::GetCringeAnim, py::return_value_policy::reference)
		.def("GetKnockbackBody", &UBodyClassDefinition::GetKnockbackBody, py::return_value_policy::reference)
		.def("GetHitRegions", [](UBodyClassDefinition &self , TArray< class UBodyHitRegionDefinition* >* Regions) { class UBodyHitRegionDefinition** pyDefaultRegion = 0 ;   self.GetHitRegions(Regions, pyDefaultRegion); return py::make_tuple(*pyDefaultRegion); })
		;
	py::class_< UBodyHitRegionDefinition, UBaseHitRegionDefinition >(m, "UBodyHitRegionDefinition")
		.def_property("bCriticalHit", [](UBodyHitRegionDefinition &self){return self.bCriticalHit;}, [](UBodyHitRegionDefinition &self, bool value){self.bCriticalHit = value ? 1 : 0;})
		.def_property("bAllowRadiusDamage", [](UBodyHitRegionDefinition &self){return self.bAllowRadiusDamage;}, [](UBodyHitRegionDefinition &self, bool value){self.bAllowRadiusDamage = value ? 1 : 0;})
		.def_property("bUseIndependentHealth", [](UBodyHitRegionDefinition &self){return self.bUseIndependentHealth;}, [](UBodyHitRegionDefinition &self, bool value){self.bUseIndependentHealth = value ? 1 : 0;})
		.def_property("bShowDamageNumbers", [](UBodyHitRegionDefinition &self){return self.bShowDamageNumbers;}, [](UBodyHitRegionDefinition &self, bool value){self.bShowDamageNumbers = value ? 1 : 0;})
		.def_property("bScaleHealthWithAttribute", [](UBodyHitRegionDefinition &self){return self.bScaleHealthWithAttribute;}, [](UBodyHitRegionDefinition &self, bool value){self.bScaleHealthWithAttribute = value ? 1 : 0;})
		.def_property("bAllowRejuvenationFromHeals", [](UBodyHitRegionDefinition &self){return self.bAllowRejuvenationFromHeals;}, [](UBodyHitRegionDefinition &self, bool value){self.bAllowRejuvenationFromHeals = value ? 1 : 0;})
		.def_property("bOnlyReflectToAttacker", [](UBodyHitRegionDefinition &self){return self.bOnlyReflectToAttacker;}, [](UBodyHitRegionDefinition &self, bool value){self.bOnlyReflectToAttacker = value ? 1 : 0;})
		.def_property("bReflectProjectiles", [](UBodyHitRegionDefinition &self){return self.bReflectProjectiles;}, [](UBodyHitRegionDefinition &self, bool value){self.bReflectProjectiles = value ? 1 : 0;})
		.def_property("bRicochetIfReflectionChanceFails", [](UBodyHitRegionDefinition &self){return self.bRicochetIfReflectionChanceFails;}, [](UBodyHitRegionDefinition &self, bool value){self.bRicochetIfReflectionChanceFails = value ? 1 : 0;})
		.def_property("bTrackDamage", [](UBodyHitRegionDefinition &self){return self.bTrackDamage;}, [](UBodyHitRegionDefinition &self, bool value){self.bTrackDamage = value ? 1 : 0;})
		.def_property("bMigratedUseOwnerHealth", [](UBodyHitRegionDefinition &self){return self.bMigratedUseOwnerHealth;}, [](UBodyHitRegionDefinition &self, bool value){self.bMigratedUseOwnerHealth = value ? 1 : 0;})
		.def_property("bWasUseOwnerHealthOne", [](UBodyHitRegionDefinition &self){return self.bWasUseOwnerHealthOne;}, [](UBodyHitRegionDefinition &self, bool value){self.bWasUseOwnerHealthOne = value ? 1 : 0;})
		.def_property("bPlayImpactWithNoDamage", [](UBodyHitRegionDefinition &self){return self.bPlayImpactWithNoDamage;}, [](UBodyHitRegionDefinition &self, bool value){self.bPlayImpactWithNoDamage = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorProvider", &UBodyHitRegionDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIConstructObject", &UBodyHitRegionDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("HitRegionName", &UBodyHitRegionDefinition::HitRegionName, py::return_value_policy::reference)
		.def_readwrite("RegionBoneNames", &UBodyHitRegionDefinition::RegionBoneNames, py::return_value_policy::reference)
		.def_readwrite("AdjacentHitRegions", &UBodyHitRegionDefinition::AdjacentHitRegions, py::return_value_policy::reference)
		.def_readwrite("OverrideDOTSocket", &UBodyHitRegionDefinition::OverrideDOTSocket, py::return_value_policy::reference)
		.def_readwrite("OwnerHealthPercent", &UBodyHitRegionDefinition::OwnerHealthPercent)
		.def_readwrite("PercentOfMaxHealthLimit", &UBodyHitRegionDefinition::PercentOfMaxHealthLimit)
		.def_readwrite("RegionDeathBehaviors", &UBodyHitRegionDefinition::RegionDeathBehaviors, py::return_value_policy::reference)
		.def_readwrite("DamageTriggeredReactions", &UBodyHitRegionDefinition::DamageTriggeredReactions, py::return_value_policy::reference)
		.def_readwrite("HealingTriggeredReactions", &UBodyHitRegionDefinition::HealingTriggeredReactions, py::return_value_policy::reference)
		.def_readwrite("AllowedDamageTypes", &UBodyHitRegionDefinition::AllowedDamageTypes, py::return_value_policy::reference)
		.def_readwrite("BulletReflectionOffSelfChance", &UBodyHitRegionDefinition::BulletReflectionOffSelfChance, py::return_value_policy::reference)
		.def_readwrite("BulletReflectedOffSelfDamageScale", &UBodyHitRegionDefinition::BulletReflectedOffSelfDamageScale, py::return_value_policy::reference)
		.def_readwrite("BulletReflectedOffSelfDamageTakenScale", &UBodyHitRegionDefinition::BulletReflectedOffSelfDamageTakenScale, py::return_value_policy::reference)
		.def_readwrite("ReflectionAccuracyModifier", &UBodyHitRegionDefinition::ReflectionAccuracyModifier, py::return_value_policy::reference)
		.def_readwrite("RicochetAccuracyModifier", &UBodyHitRegionDefinition::RicochetAccuracyModifier, py::return_value_policy::reference)
		.def_readwrite("PhysicalMaterial", &UBodyHitRegionDefinition::PhysicalMaterial, py::return_value_policy::reference)
		.def_readwrite("DefaultImpactResponse", &UBodyHitRegionDefinition::DefaultImpactResponse, py::return_value_policy::reference)
		.def_readwrite("DefaultDamageSurfaceType", &UBodyHitRegionDefinition::DefaultDamageSurfaceType)
		.def_readwrite("BloodImpact", &UBodyHitRegionDefinition::BloodImpact, py::return_value_policy::reference)
		.def_readwrite("BloodSplatterMinDistance", &UBodyHitRegionDefinition::BloodSplatterMinDistance)
		.def_readwrite("BloodSplatterMaxDistance", &UBodyHitRegionDefinition::BloodSplatterMaxDistance)
		.def_readwrite("BloodSplatterDirectionRandomness", &UBodyHitRegionDefinition::BloodSplatterDirectionRandomness)
		.def_readwrite("StatusEffectSockets", &UBodyHitRegionDefinition::StatusEffectSockets, py::return_value_policy::reference)
		.def_readwrite("ParticleSystemTemplate", &UBodyHitRegionDefinition::ParticleSystemTemplate, py::return_value_policy::reference)
		.def_readwrite("StatusEffectResistanceOverride", &UBodyHitRegionDefinition::StatusEffectResistanceOverride, py::return_value_policy::reference)
		.def_readwrite("StatusEffectBaseChanceOverride", &UBodyHitRegionDefinition::StatusEffectBaseChanceOverride, py::return_value_policy::reference)
		.def_readwrite("StatusEffectDamageModifierOverride", &UBodyHitRegionDefinition::StatusEffectDamageModifierOverride, py::return_value_policy::reference)
		.def_readwrite("OverrideDeathDef", &UBodyHitRegionDefinition::OverrideDeathDef, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UBodyHitRegionDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def("OnHealingReaction", &UBodyHitRegionDefinition::OnHealingReaction)
		.def("OnRegionRejuvenate", &UBodyHitRegionDefinition::OnRegionRejuvenate)
		.def("OnReflectedProjectile", &UBodyHitRegionDefinition::OnReflectedProjectile)
		.def("OnRegionGore", &UBodyHitRegionDefinition::OnRegionGore)
		.def("OnDamageReaction", &UBodyHitRegionDefinition::OnDamageReaction)
		.def("OnRegionDeath", &UBodyHitRegionDefinition::OnRegionDeath)
		.def("SetBehaviorProviderDefinition", &UBodyHitRegionDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UBodyHitRegionDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		.def("GetDamageSurfaceType", &UBodyHitRegionDefinition::GetDamageSurfaceType)
		.def("GetDamageModifierPercentForImpact", &UBodyHitRegionDefinition::GetDamageModifierPercentForImpact)
		.def("GetResponseForImpact", &UBodyHitRegionDefinition::GetResponseForImpact, py::return_value_policy::reference)
		;
	py::class_< UBodyRegionProtectionDefinition, UGBXDefinition >(m, "UBodyRegionProtectionDefinition")
		.def_property("PlayImpactWithNoDamage", [](UBodyRegionProtectionDefinition &self){return self.PlayImpactWithNoDamage;}, [](UBodyRegionProtectionDefinition &self, bool value){self.PlayImpactWithNoDamage = value ? 1 : 0;})
		.def_property("RunTookDamageRuleWithNoDamage", [](UBodyRegionProtectionDefinition &self){return self.RunTookDamageRuleWithNoDamage;}, [](UBodyRegionProtectionDefinition &self, bool value){self.RunTookDamageRuleWithNoDamage = value ? 1 : 0;})
		.def_readwrite("BodyHitRegion", &UBodyRegionProtectionDefinition::BodyHitRegion, py::return_value_policy::reference)
		.def_readwrite("DamageModifierPercent", &UBodyRegionProtectionDefinition::DamageModifierPercent)
		.def_readwrite("DamageImpactEffects", &UBodyRegionProtectionDefinition::DamageImpactEffects, py::return_value_policy::reference)
		.def_readwrite("PercentOfMaxHealthLimit", &UBodyRegionProtectionDefinition::PercentOfMaxHealthLimit)
		.def_readwrite("PhysicalMaterial", &UBodyRegionProtectionDefinition::PhysicalMaterial, py::return_value_policy::reference)
		;
	py::class_< UBodyWeaponHoldDefinition, UGBXDefinition >(m, "UBodyWeaponHoldDefinition")
		.def_property("bUseArmBoneBlend", [](UBodyWeaponHoldDefinition &self){return self.bUseArmBoneBlend;}, [](UBodyWeaponHoldDefinition &self, bool value){self.bUseArmBoneBlend = value ? 1 : 0;})
		.def_property("bUseUpperBodyMovementBlend", [](UBodyWeaponHoldDefinition &self){return self.bUseUpperBodyMovementBlend;}, [](UBodyWeaponHoldDefinition &self, bool value){self.bUseUpperBodyMovementBlend = value ? 1 : 0;})
		.def_property("bLeftHandIKEnabled", [](UBodyWeaponHoldDefinition &self){return self.bLeftHandIKEnabled;}, [](UBodyWeaponHoldDefinition &self, bool value){self.bLeftHandIKEnabled = value ? 1 : 0;})
		.def_readwrite("HoldName", &UBodyWeaponHoldDefinition::HoldName, py::return_value_policy::reference)
		.def_readwrite("EnvironmentTag", &UBodyWeaponHoldDefinition::EnvironmentTag, py::return_value_policy::reference)
		.def_readwrite("AimOffsetProfileName", &UBodyWeaponHoldDefinition::AimOffsetProfileName, py::return_value_policy::reference)
		.def_readwrite("AnimSetList", &UBodyWeaponHoldDefinition::AnimSetList, py::return_value_policy::reference)
		.def_readwrite("WeaponActions", &UBodyWeaponHoldDefinition::WeaponActions, py::return_value_policy::reference)
		.def_readwrite("DefaultLeftHandIKHold", &UBodyWeaponHoldDefinition::DefaultLeftHandIKHold, py::return_value_policy::reference)
		.def_readwrite("CustomLeftHandIKHolds", &UBodyWeaponHoldDefinition::CustomLeftHandIKHolds, py::return_value_policy::reference)
		.def_readwrite("LeftHandIKJointLocation", &UBodyWeaponHoldDefinition::LeftHandIKJointLocation, py::return_value_policy::reference)
		.def_readwrite("LeftHandIKHandLocation", &UBodyWeaponHoldDefinition::LeftHandIKHandLocation, py::return_value_policy::reference)
		.def_readwrite("LeftHandIKHandRotation", &UBodyWeaponHoldDefinition::LeftHandIKHandRotation, py::return_value_policy::reference)
		.def_readwrite("ParentDefinition", &UBodyWeaponHoldDefinition::ParentDefinition, py::return_value_policy::reference)
		.def("GetAnimSets", &UBodyWeaponHoldDefinition::GetAnimSets)
		.def("GetWeaponSMD", &UBodyWeaponHoldDefinition::GetWeaponSMD, py::return_value_policy::reference)
		;
	py::class_< UBoundaryTurretRenderingComponent, UPrimitiveComponent >(m, "UBoundaryTurretRenderingComponent")
		;
	py::class_< UBulletListenerComponent, UCylinderComponent >(m, "UBulletListenerComponent")
		.def_readwrite("OnBulletTouch", &UBulletListenerComponent::OnBulletTouch, py::return_value_policy::reference)
		;
	py::class_< UCellsNavigator, UObject >(m, "UCellsNavigator")
		.def_readwrite("Cells", &UCellsNavigator::Cells, py::return_value_policy::reference)
		.def_readwrite("UnnavigableIndices", &UCellsNavigator::UnnavigableIndices, py::return_value_policy::reference)
		.def_readwrite("CurrentSelectedCellIndex", &UCellsNavigator::CurrentSelectedCellIndex)
		.def_readwrite("MoveCellInfo", &UCellsNavigator::MoveCellInfo, py::return_value_policy::reference)
		.def("eventConstructInvMesh", &UCellsNavigator::eventConstructInvMesh, py::return_value_policy::reference)
		.def("CellIndex", &UCellsNavigator::CellIndex)
		.def("CellName", &UCellsNavigator::CellName, py::return_value_policy::reference)
		.def("SimpleMoveCell", &UCellsNavigator::SimpleMoveCell)
		.def("MoveCell", &UCellsNavigator::MoveCell)
		.def("SetupCell", &UCellsNavigator::SetupCell)
		;
	py::class_< UChallengeCategoryDefinition, UGBXDefinition >(m, "UChallengeCategoryDefinition")
		.def_readwrite("CategoryName", &UChallengeCategoryDefinition::CategoryName, py::return_value_policy::reference)
		.def_readwrite("SortWeight", &UChallengeCategoryDefinition::SortWeight)
		;
	py::class_< UChallengeConditionDefinition, UGBXDefinition >(m, "UChallengeConditionDefinition")
		.def_readwrite("Description", &UChallengeConditionDefinition::Description, py::return_value_policy::reference)
		.def_readwrite("StatId", &UChallengeConditionDefinition::StatId, py::return_value_policy::reference)
		.def_readwrite("TargetValue", &UChallengeConditionDefinition::TargetValue)
		;
	py::class_< UChallengeDefinition, UGBXDefinition >(m, "UChallengeDefinition")
		.def_property("bSecret", [](UChallengeDefinition &self){return self.bSecret;}, [](UChallengeDefinition &self, bool value){self.bSecret = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorProvider", &UChallengeDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDlcLicensableObject", &UChallengeDefinition::VfTable_IIDlcLicensableObject, py::return_value_policy::reference)
		.def_readwrite("ChallengeName", &UChallengeDefinition::ChallengeName, py::return_value_policy::reference)
		.def_readwrite("Description", &UChallengeDefinition::Description, py::return_value_policy::reference)
		.def_readwrite("AssociatedMap", &UChallengeDefinition::AssociatedMap, py::return_value_policy::reference)
		.def_readwrite("ChallengeType", &UChallengeDefinition::ChallengeType)
		.def_readwrite("LevelChallengeObjectGroupIdx", &UChallengeDefinition::LevelChallengeObjectGroupIdx)
		.def_readwrite("GoalValue", &UChallengeDefinition::GoalValue)
		.def_readwrite("ChallengeCategoryDef", &UChallengeDefinition::ChallengeCategoryDef, py::return_value_policy::reference)
		.def_readwrite("GiveChallengeWhenPlayerEntersMaps", &UChallengeDefinition::GiveChallengeWhenPlayerEntersMaps, py::return_value_policy::reference)
		.def_readwrite("CompletedAttributeEffects", &UChallengeDefinition::CompletedAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("BPReward", &UChallengeDefinition::BPReward, py::return_value_policy::reference)
		.def_readwrite("RewardTextKey", &UChallengeDefinition::RewardTextKey, py::return_value_policy::reference)
		.def_readwrite("Levels", &UChallengeDefinition::Levels, py::return_value_policy::reference)
		.def_readwrite("DlcExpansion", &UChallengeDefinition::DlcExpansion, py::return_value_policy::reference)
		.def_readwrite("DlcBalanceMod", &UChallengeDefinition::DlcBalanceMod, py::return_value_policy::reference)
		.def_readwrite("BehaviorProvider", &UChallengeDefinition::BehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("LevelChallengeOneOffIdx", &UChallengeDefinition::LevelChallengeOneOffIdx)
		.def("GetRewardText", &UChallengeDefinition::GetRewardText, py::return_value_policy::reference)
		.def("GetDownloadableContentDefinition", &UChallengeDefinition::GetDownloadableContentDefinition, py::return_value_policy::reference)
		.def("OnLevelCompleted", &UChallengeDefinition::OnLevelCompleted)
		.def("SetBehaviorProviderDefinition", &UChallengeDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UChallengeDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UChallengeFeedbackMessage, ULocalMessage >(m, "UChallengeFeedbackMessage")
		.def_readwrite("ChallengeCompleted", &UChallengeFeedbackMessage::ChallengeCompleted, py::return_value_policy::reference)
		.def_readwrite("ChallengeReceived", &UChallengeFeedbackMessage::ChallengeReceived, py::return_value_policy::reference)
		.def("GetString", &UChallengeFeedbackMessage::GetString, py::return_value_policy::reference)
		;
	py::class_< AChallengeManager, AActor >(m, "AChallengeManager")
		.def_readwrite("VfTable_IIBehaviorConsumer", &AChallengeManager::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("StatIdChallengeMap", &AChallengeManager::StatIdChallengeMap, py::return_value_policy::reference)
		.def_readwrite("BPRewardText", &AChallengeManager::BPRewardText, py::return_value_policy::reference)
		.def_readwrite("BehaviorConsumerHandle", &AChallengeManager::BehaviorConsumerHandle, py::return_value_policy::reference)
		.def("GetBehaviorConsumerHandle", &AChallengeManager::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("OnStatIncrement", &AChallengeManager::OnStatIncrement)
		.def("UnregisterChallenges", &AChallengeManager::UnregisterChallenges)
		.def("UnregisterChallenge", &AChallengeManager::UnregisterChallenge)
		.def("RegisterChallenge", &AChallengeManager::RegisterChallenge)
		;
	py::class_< UChassisDefinition, UGBXDefinition >(m, "UChassisDefinition")
		.def_property("AllowPawnsToStandOnTopOfVehicle", [](UChassisDefinition &self){return self.AllowPawnsToStandOnTopOfVehicle;}, [](UChassisDefinition &self, bool value){self.AllowPawnsToStandOnTopOfVehicle = value ? 1 : 0;})
		.def_readwrite("VfTable_IIHitRegionInfoProvider", &UChassisDefinition::VfTable_IIHitRegionInfoProvider, py::return_value_policy::reference)
		.def_readwrite("BodyComposition", &UChassisDefinition::BodyComposition, py::return_value_policy::reference)
		.def_readwrite("DefaultHitRegion", &UChassisDefinition::DefaultHitRegion, py::return_value_policy::reference)
		.def_readwrite("HitRegionList", &UChassisDefinition::HitRegionList, py::return_value_policy::reference)
		.def_readwrite("DrivingPhysicalMaterial", &UChassisDefinition::DrivingPhysicalMaterial, py::return_value_policy::reference)
		.def_readwrite("DefaultPhysicalMaterial", &UChassisDefinition::DefaultPhysicalMaterial, py::return_value_policy::reference)
		.def_readwrite("ReverseSwitchName", &UChassisDefinition::ReverseSwitchName, py::return_value_policy::reference)
		.def_readwrite("BrakeSwitchName", &UChassisDefinition::BrakeSwitchName, py::return_value_policy::reference)
		.def_readwrite("HeadlightSwitchName", &UChassisDefinition::HeadlightSwitchName, py::return_value_policy::reference)
		.def_readwrite("ThrottleSwitchName", &UChassisDefinition::ThrottleSwitchName, py::return_value_policy::reference)
		.def_readwrite("TouchImpactDefinition", &UChassisDefinition::TouchImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("UntouchImpactDefinition", &UChassisDefinition::UntouchImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("SpawnCoordinatedEffect", &UChassisDefinition::SpawnCoordinatedEffect, py::return_value_policy::reference)
		.def_readwrite("DeSpawnCoordinatedEffect", &UChassisDefinition::DeSpawnCoordinatedEffect, py::return_value_policy::reference)
		.def_readwrite("StatusEffectSockets", &UChassisDefinition::StatusEffectSockets, py::return_value_policy::reference)
		.def_readwrite("StatusEffectParticleSystemTemplate", &UChassisDefinition::StatusEffectParticleSystemTemplate, py::return_value_policy::reference)
		.def("GetHitRegions", [](UChassisDefinition &self , TArray< class UBodyHitRegionDefinition* >* Regions) { class UBodyHitRegionDefinition** pyDefaultRegion = 0 ;   self.GetHitRegions(Regions, pyDefaultRegion); return py::make_tuple(*pyDefaultRegion); })
		;
	py::class_< UClassDropWeightValueResolver, UAttributeValueResolver >(m, "UClassDropWeightValueResolver")
		.def_readwrite("PlayerClassId", &UClassDropWeightValueResolver::PlayerClassId, py::return_value_policy::reference)
		;
	py::class_< UCombatMusicManager, UObject >(m, "UCombatMusicManager")
		.def_property("bChangingState", [](UCombatMusicManager &self){return self.bChangingState;}, [](UCombatMusicManager &self, bool value){self.bChangingState = value ? 1 : 0;})
		.def_property("bCombatMusicManagerEnabled", [](UCombatMusicManager &self){return self.bCombatMusicManagerEnabled;}, [](UCombatMusicManager &self, bool value){self.bCombatMusicManagerEnabled = value ? 1 : 0;})
		.def_property("bInDebugMode", [](UCombatMusicManager &self){return self.bInDebugMode;}, [](UCombatMusicManager &self, bool value){self.bInDebugMode = value ? 1 : 0;})
		.def_property("bBossFightActive", [](UCombatMusicManager &self){return self.bBossFightActive;}, [](UCombatMusicManager &self, bool value){self.bBossFightActive = value ? 1 : 0;})
		.def_property("bHaveAddedEnemyWithCustomCombatMusic", [](UCombatMusicManager &self){return self.bHaveAddedEnemyWithCustomCombatMusic;}, [](UCombatMusicManager &self, bool value){self.bHaveAddedEnemyWithCustomCombatMusic = value ? 1 : 0;})
		.def_readwrite("TargetedPlayerStates", &UCombatMusicManager::TargetedPlayerStates, py::return_value_policy::reference)
		.def_readwrite("TimeSinceLastUpdate", &UCombatMusicManager::TimeSinceLastUpdate)
		.def_readwrite("TimeOfNewCombatAction", &UCombatMusicManager::TimeOfNewCombatAction)
		.def_readwrite("TimeCombatMusicStarted", &UCombatMusicManager::TimeCombatMusicStarted)
		.def_readwrite("TimeOfLastStateChange", &UCombatMusicManager::TimeOfLastStateChange)
		.def_readwrite("MaxDurationOfThisCombatMusic", &UCombatMusicManager::MaxDurationOfThisCombatMusic)
		.def_readwrite("LastTimeAddedShieldDownThreat", &UCombatMusicManager::LastTimeAddedShieldDownThreat)
		.def_readwrite("LastTimeMusicTimedOut", &UCombatMusicManager::LastTimeMusicTimedOut)
		.def_readwrite("MaxDurationOfThisMoratorium", &UCombatMusicManager::MaxDurationOfThisMoratorium)
		.def_readwrite("CombatMusicManagerState", &UCombatMusicManager::CombatMusicManagerState)
		.def_readwrite("CurrentThreatValue", &UCombatMusicManager::CurrentThreatValue)
		.def_readwrite("CombatMusicParams", &UCombatMusicManager::CombatMusicParams, py::return_value_policy::reference)
		.def_readwrite("UpdateThreatDelta", &UCombatMusicManager::UpdateThreatDelta)
		.def("GetDebugTime", &UCombatMusicManager::GetDebugTime)
		.def("ForceSetThreatLevel", &UCombatMusicManager::ForceSetThreatLevel)
		.def("ForceFadeOutCombatMusic", &UCombatMusicManager::ForceFadeOutCombatMusic)
		.def("SetEnabled", &UCombatMusicManager::SetEnabled)
		.def("Update", &UCombatMusicManager::Update)
		.def("PlayerShieldDown", &UCombatMusicManager::PlayerShieldDown)
		.def("PlayerDamagedByEnemy", &UCombatMusicManager::PlayerDamagedByEnemy)
		.def("EnemyTargetChanged", &UCombatMusicManager::EnemyTargetChanged)
		.def("PlayerPetTargetedByEnemy", &UCombatMusicManager::PlayerPetTargetedByEnemy)
		.def("PlayerTargetedByEnemy", &UCombatMusicManager::PlayerTargetedByEnemy)
		;
	py::class_< UCombatMusicParameters, UGBXDefinition >(m, "UCombatMusicParameters")
		.def_readwrite("FullThreatThreshholdValue", &UCombatMusicParameters::FullThreatThreshholdValue)
		.def_readwrite("MediumThreatThreshholdValue", &UCombatMusicParameters::MediumThreatThreshholdValue)
		.def_readwrite("NoThreatThressholdValue", &UCombatMusicParameters::NoThreatThressholdValue)
		.def_readwrite("ThreatLevelSubtractedPerSecond", &UCombatMusicParameters::ThreatLevelSubtractedPerSecond)
		.def_readwrite("HighestThreatAllowed", &UCombatMusicParameters::HighestThreatAllowed)
		.def_readwrite("RequiredThreatValueIfTargeted", &UCombatMusicParameters::RequiredThreatValueIfTargeted)
		.def_readwrite("ThreatSurgeThreshold", &UCombatMusicParameters::ThreatSurgeThreshold)
		.def_readwrite("MediumThreatVolumeFadeTime", &UCombatMusicParameters::MediumThreatVolumeFadeTime)
		.def_readwrite("MediumThreatRtpc", &UCombatMusicParameters::MediumThreatRtpc, py::return_value_policy::reference)
		.def_readwrite("EnemyThreatMultiplierWhenLevelIsPlus1", &UCombatMusicParameters::EnemyThreatMultiplierWhenLevelIsPlus1)
		.def_readwrite("EnemyThreatMultiplierWhenLevelIsPlus2", &UCombatMusicParameters::EnemyThreatMultiplierWhenLevelIsPlus2)
		.def_readwrite("EnemyThreatMultiplierWhenLevelIsPlus3", &UCombatMusicParameters::EnemyThreatMultiplierWhenLevelIsPlus3)
		.def_readwrite("EnemyThreatMultiplierWhenLevelIsPlus4", &UCombatMusicParameters::EnemyThreatMultiplierWhenLevelIsPlus4)
		.def_readwrite("EnemyThreatMultiplierWhenLevelIsPlus5", &UCombatMusicParameters::EnemyThreatMultiplierWhenLevelIsPlus5)
		.def_readwrite("EnemyThreatMultiplierWhenLevelIsMinus1", &UCombatMusicParameters::EnemyThreatMultiplierWhenLevelIsMinus1)
		.def_readwrite("EnemyThreatMultiplierWhenLevelIsMinus2", &UCombatMusicParameters::EnemyThreatMultiplierWhenLevelIsMinus2)
		.def_readwrite("EnemyThreatMultiplierWhenLevelIsMinus3", &UCombatMusicParameters::EnemyThreatMultiplierWhenLevelIsMinus3)
		.def_readwrite("EnemyThreatMultiplierWhenLevelIsMinus4", &UCombatMusicParameters::EnemyThreatMultiplierWhenLevelIsMinus4)
		.def_readwrite("EnemyThreatMultiplierWhenLevelIsMinus5", &UCombatMusicParameters::EnemyThreatMultiplierWhenLevelIsMinus5)
		.def_readwrite("EnemyDamagesPlayerWeight", &UCombatMusicParameters::EnemyDamagesPlayerWeight)
		.def_readwrite("ThreatFromShieldDown", &UCombatMusicParameters::ThreatFromShieldDown)
		.def_readwrite("MinLongestTimeCombatMusicPlays", &UCombatMusicParameters::MinLongestTimeCombatMusicPlays)
		.def_readwrite("MaxLongestTimeCombatMusicPlays", &UCombatMusicParameters::MaxLongestTimeCombatMusicPlays)
		.def_readwrite("MinTimeBeforeCombatMusicStartsAgain", &UCombatMusicParameters::MinTimeBeforeCombatMusicStartsAgain)
		.def_readwrite("MaxTimeBeforeCombatMusicStartsAgain", &UCombatMusicParameters::MaxTimeBeforeCombatMusicStartsAgain)
		.def_readwrite("CombatMusicManagerUpdateFrequency", &UCombatMusicParameters::CombatMusicManagerUpdateFrequency)
		.def_readwrite("TimeAllowedToReachFullThreat", &UCombatMusicParameters::TimeAllowedToReachFullThreat)
		.def_readwrite("FadeBackToFullVolumeTime", &UCombatMusicParameters::FadeBackToFullVolumeTime)
		.def_readwrite("TimeBetweenShieldDownThreats", &UCombatMusicParameters::TimeBetweenShieldDownThreats)
		.def_readwrite("StateChangeDelay", &UCombatMusicParameters::StateChangeDelay)
		.def_readwrite("EnemyNotTargetingPlayerTimeout", &UCombatMusicParameters::EnemyNotTargetingPlayerTimeout)
		;
	py::class_< UCoordinatedEffectDefinition, UGBXDefinition >(m, "UCoordinatedEffectDefinition")
		.def_property("bInfiniteDuration", [](UCoordinatedEffectDefinition &self){return self.bInfiniteDuration;}, [](UCoordinatedEffectDefinition &self, bool value){self.bInfiniteDuration = value ? 1 : 0;})
		.def_property("bCensored", [](UCoordinatedEffectDefinition &self){return self.bCensored;}, [](UCoordinatedEffectDefinition &self, bool value){self.bCensored = value ? 1 : 0;})
		.def_property("bReplicated", [](UCoordinatedEffectDefinition &self){return self.bReplicated;}, [](UCoordinatedEffectDefinition &self, bool value){self.bReplicated = value ? 1 : 0;})
		.def_property("bRemoveShadows", [](UCoordinatedEffectDefinition &self){return self.bRemoveShadows;}, [](UCoordinatedEffectDefinition &self, bool value){self.bRemoveShadows = value ? 1 : 0;})
		.def_property("bHideInstanceDataParticles", [](UCoordinatedEffectDefinition &self){return self.bHideInstanceDataParticles;}, [](UCoordinatedEffectDefinition &self, bool value){self.bHideInstanceDataParticles = value ? 1 : 0;})
		.def_property("bHidePawnWeaponParticleAttachments", [](UCoordinatedEffectDefinition &self){return self.bHidePawnWeaponParticleAttachments;}, [](UCoordinatedEffectDefinition &self, bool value){self.bHidePawnWeaponParticleAttachments = value ? 1 : 0;})
		.def_readwrite("OverrideMaterial", &UCoordinatedEffectDefinition::OverrideMaterial, py::return_value_policy::reference)
		.def_readwrite("CriticialHitParticle", &UCoordinatedEffectDefinition::CriticialHitParticle, py::return_value_policy::reference)
		.def_readwrite("ParticleEffects", &UCoordinatedEffectDefinition::ParticleEffects, py::return_value_policy::reference)
		.def_readwrite("MaterialScalarParameters", &UCoordinatedEffectDefinition::MaterialScalarParameters, py::return_value_policy::reference)
		.def_readwrite("MaterialVectorParameters", &UCoordinatedEffectDefinition::MaterialVectorParameters, py::return_value_policy::reference)
		.def_readwrite("AudioEffects", &UCoordinatedEffectDefinition::AudioEffects, py::return_value_policy::reference)
		.def_readwrite("EffectDuration", &UCoordinatedEffectDefinition::EffectDuration)
		.def_readwrite("ParticleSpeedMultiplier", &UCoordinatedEffectDefinition::ParticleSpeedMultiplier)
		.def_readwrite("NextEffect", &UCoordinatedEffectDefinition::NextEffect, py::return_value_policy::reference)
		.def_readwrite("MutexName", &UCoordinatedEffectDefinition::MutexName, py::return_value_policy::reference)
		;
	py::class_< UCurrencyAttributeValueResolver, UAttributeValueResolver >(m, "UCurrencyAttributeValueResolver")
		.def_readwrite("FormOfCurrency", &UCurrencyAttributeValueResolver::FormOfCurrency)
		;
	py::class_< UCurrencyListDefinition, UGBXDefinition >(m, "UCurrencyListDefinition")
		.def_readwrite("Currencies", &UCurrencyListDefinition::Currencies, py::return_value_policy::reference)
		;
	py::class_< UCurrentProficiencySkillAttributeContextResolver, UAttributeContextResolver >(m, "UCurrentProficiencySkillAttributeContextResolver")
		.def("GetAttributeContext", &UCurrentProficiencySkillAttributeContextResolver::GetAttributeContext, py::return_value_policy::reference)
		;
	py::class_< UCustomizationData, UGBXDefinition >(m, "UCustomizationData")
		.def_readwrite("MyDefinition", &UCustomizationData::MyDefinition, py::return_value_policy::reference)
		.def_readwrite("PickupMesh", &UCustomizationData::PickupMesh, py::return_value_policy::reference)
		.def_readwrite("PickupFlagIcon", &UCustomizationData::PickupFlagIcon, py::return_value_policy::reference)
		.def_readwrite("NumReferencers", &UCustomizationData::NumReferencers)
		.def("ApplyCustomizationToInstanceDataSet", &UCustomizationData::ApplyCustomizationToInstanceDataSet)
		.def("ApplyCustomization", &UCustomizationData::ApplyCustomization)
		.def("ApplyCustomizationToDataSets", &UCustomizationData::ApplyCustomizationToDataSets)
		;
	py::class_< UCustomizationData_Head, UCustomizationData >(m, "UCustomizationData_Head")
		.def_readwrite("HeadMesh", &UCustomizationData_Head::HeadMesh, py::return_value_policy::reference)
		.def_readwrite("InstanceDataName", &UCustomizationData_Head::InstanceDataName, py::return_value_policy::reference)
		.def("ApplyCustomizationToInstanceDataSet", &UCustomizationData_Head::ApplyCustomizationToInstanceDataSet)
		;
	py::class_< UCustomizationData_Skin, UCustomizationData >(m, "UCustomizationData_Skin")
		.def_readwrite("BodyMaterial", &UCustomizationData_Skin::BodyMaterial, py::return_value_policy::reference)
		.def_readwrite("HeadMaterial", &UCustomizationData_Skin::HeadMaterial, py::return_value_policy::reference)
		.def("ApplySkinToMaterial", &UCustomizationData_Skin::ApplySkinToMaterial)
		.def("ApplyCustomizationToInstanceDataSet", &UCustomizationData_Skin::ApplyCustomizationToInstanceDataSet)
		;
	py::class_< UCustomizationDefinition, UGBXDefinition >(m, "UCustomizationDefinition")
		.def_readwrite("VfTable_IIDlcLicensableObject", &UCustomizationDefinition::VfTable_IIDlcLicensableObject, py::return_value_policy::reference)
		.def_readwrite("CustomizationName", &UCustomizationDefinition::CustomizationName, py::return_value_policy::reference)
		.def_readwrite("CustomizationType", &UCustomizationDefinition::CustomizationType, py::return_value_policy::reference)
		.def_readwrite("UsageFlags", &UCustomizationDefinition::UsageFlags, py::return_value_policy::reference)
		.def_readwrite("OtherUsageFlags", &UCustomizationDefinition::OtherUsageFlags, py::return_value_policy::reference)
		.def_readwrite("PackageName", &UCustomizationDefinition::PackageName, py::return_value_policy::reference)
		.def_readwrite("CustomizationDataName", &UCustomizationDefinition::CustomizationDataName, py::return_value_policy::reference)
		.def_readwrite("ProfileEntryID", &UCustomizationDefinition::ProfileEntryID)
		.def_readwrite("ProfileEntryIndex", &UCustomizationDefinition::ProfileEntryIndex)
		.def_readwrite("PrimarySort", &UCustomizationDefinition::PrimarySort)
		.def_readwrite("SecondarySort", &UCustomizationDefinition::SecondarySort)
		.def_readwrite("DlcCustomizationSetDef", &UCustomizationDefinition::DlcCustomizationSetDef, py::return_value_policy::reference)
		.def("PassesDLCUsageRestrictionsForUser", &UCustomizationDefinition::PassesDLCUsageRestrictionsForUser)
		.def("eventIsVehicleSkinCustomization", &UCustomizationDefinition::eventIsVehicleSkinCustomization)
		.def("eventIsCharacterSkinCustomization", &UCustomizationDefinition::eventIsCharacterSkinCustomization)
		.def("eventIsCharacterHeadCustomization", &UCustomizationDefinition::eventIsCharacterHeadCustomization)
		.def("MatchRequiredUsageFlags", &UCustomizationDefinition::MatchRequiredUsageFlags)
		.def("SortCustomizationList", &UCustomizationDefinition::SortCustomizationList)
		.def("GetDownloadableContentDefinition", &UCustomizationDefinition::GetDownloadableContentDefinition, py::return_value_policy::reference)
		.def("GetAvailableAndUnauthorizedCustomizationsForVehicle", [](UCustomizationDefinition &self , class AWillowPlayerController* PC, class UVSSUIDefinition* VehicleUIDef, class UClass* RequiredType, unsigned long bDebugAllowLocked, TArray< class UCustomizationDefinition* >* AvailableCustomizations, TArray< int >* AvailableCustomizationsBeenSeen, TArray< class UCustomizationDefinition* >* UnauthorizedCustomizations) { int* pyLockedCustomizationCount = (int*)malloc(sizeof(int)) ;   self.GetAvailableAndUnauthorizedCustomizationsForVehicle(PC, VehicleUIDef, RequiredType, bDebugAllowLocked, AvailableCustomizations, AvailableCustomizationsBeenSeen, UnauthorizedCustomizations, pyLockedCustomizationCount); return py::make_tuple(*pyLockedCustomizationCount); })
		.def("GetAvailableAndUnauthorizedCustomizationsForPlayer", [](UCustomizationDefinition &self , class AWillowPlayerController* PC, class UClass* RequiredType, unsigned long bDebugAllowLocked, class UWillowCharacterClassDefinition* CharacterClassOverride, TArray< class UCustomizationDefinition* >* AvailableCustomizations, TArray< int >* AvailableCustomizationsBeenSeen, TArray< class UCustomizationDefinition* >* UnauthorizedCustomizations) { int* pyLockedCustomizationCount = (int*)malloc(sizeof(int)) ;   self.GetAvailableAndUnauthorizedCustomizationsForPlayer(PC, RequiredType, bDebugAllowLocked, CharacterClassOverride, AvailableCustomizations, AvailableCustomizationsBeenSeen, UnauthorizedCustomizations, pyLockedCustomizationCount); return py::make_tuple(*pyLockedCustomizationCount); })
		.def("GetAvailableCustomizationsForVehicle", [](UCustomizationDefinition &self , class AWillowPlayerController* PC, class UVSSUIDefinition* VehicleUIDef, class UClass* RequiredType, unsigned long bDebugAllowLocked, TArray< class UCustomizationDefinition* >* AvailableCustomizations, TArray< int >* AvailableCustomizationsBeenSeen) { int* pyLockedCustomizationCount = (int*)malloc(sizeof(int)) ;   self.GetAvailableCustomizationsForVehicle(PC, VehicleUIDef, RequiredType, bDebugAllowLocked, AvailableCustomizations, AvailableCustomizationsBeenSeen, pyLockedCustomizationCount); return py::make_tuple(*pyLockedCustomizationCount); })
		.def("GetAvailableCustomizationsForPlayer", [](UCustomizationDefinition &self , class AWillowPlayerController* PC, class UClass* RequiredType, unsigned long bDebugAllowLocked, class UWillowCharacterClassDefinition* CharacterClassOverride, TArray< class UCustomizationDefinition* >* AvailableCustomizations, TArray< int >* AvailableCustomizationsBeenSeen) { int* pyLockedCustomizationCount = (int*)malloc(sizeof(int)) ;   self.GetAvailableCustomizationsForPlayer(PC, RequiredType, bDebugAllowLocked, CharacterClassOverride, AvailableCustomizations, AvailableCustomizationsBeenSeen, pyLockedCustomizationCount); return py::make_tuple(*pyLockedCustomizationCount); })
		;
	py::class_< UCustomizationType, UGBXDefinition >(m, "UCustomizationType")
		.def_readwrite("CustomizationTypeName", &UCustomizationType::CustomizationTypeName, py::return_value_policy::reference)
		.def_readwrite("PRICustomizationIndex", &UCustomizationType::PRICustomizationIndex)
		.def_readwrite("AssociatedCustomizationDataClass", &UCustomizationType::AssociatedCustomizationDataClass, py::return_value_policy::reference)
		;
	py::class_< UCustomizationType_Head, UCustomizationType >(m, "UCustomizationType_Head")
		;
	py::class_< UCustomizationType_Skin, UCustomizationType >(m, "UCustomizationType_Skin")
		;
	py::class_< UCustomizationUsage, UGBXDefinition >(m, "UCustomizationUsage")
		.def_readwrite("CustomizationUsageName", &UCustomizationUsage::CustomizationUsageName, py::return_value_policy::reference)
		;
	py::class_< UCustomSkeletalMeshComponent, USkeletalMeshComponent >(m, "UCustomSkeletalMeshComponent")
		.def_readwrite("DefaultSkeletalMesh", &UCustomSkeletalMeshComponent::DefaultSkeletalMesh, py::return_value_policy::reference)
		;
	py::class_< UDamageOverTimeManager, UObject >(m, "UDamageOverTimeManager")
		.def_readwrite("SourceObjects", &UDamageOverTimeManager::SourceObjects, py::return_value_policy::reference)
		.def_readwrite("DamageOnlyOnceActors", &UDamageOverTimeManager::DamageOnlyOnceActors, py::return_value_policy::reference)
		.def_readwrite("UniqueId", &UDamageOverTimeManager::UniqueId)
		.def("eventDoTakeRadiusDamage", &UDamageOverTimeManager::eventDoTakeRadiusDamage)
		.def("AddSourceObject", &UDamageOverTimeManager::AddSourceObject)
		;
	py::class_< UDamageTypeAttributeValueResolver, UAttributeValueResolver >(m, "UDamageTypeAttributeValueResolver")
		.def_readwrite("ValueIfNotMatched", &UDamageTypeAttributeValueResolver::ValueIfNotMatched, py::return_value_policy::reference)
		.def_readwrite("DamageTypes", &UDamageTypeAttributeValueResolver::DamageTypes, py::return_value_policy::reference)
		;
	py::class_< UDefinitionGlobalsDefinition, UGBXDefinition >(m, "UDefinitionGlobalsDefinition")
		.def_readwrite("DefaultColor", &UDefinitionGlobalsDefinition::DefaultColor, py::return_value_policy::reference)
		.def_readwrite("DefaultIcon", &UDefinitionGlobalsDefinition::DefaultIcon, py::return_value_policy::reference)
		.def_readwrite("DefinitionIconData", &UDefinitionGlobalsDefinition::DefinitionIconData, py::return_value_policy::reference)
		.def("GetIcon", &UDefinitionGlobalsDefinition::GetIcon, py::return_value_policy::reference)
		.def("GetColor", &UDefinitionGlobalsDefinition::GetColor, py::return_value_policy::reference)
		;
	py::class_< UDesignerAttributeDefinition, UAttributeDefinition >(m, "UDesignerAttributeDefinition")
		.def_readwrite("ValueName", &UDesignerAttributeDefinition::ValueName, py::return_value_policy::reference)
		.def_readwrite("BaseValue", &UDesignerAttributeDefinition::BaseValue, py::return_value_policy::reference)
		.def_readwrite("Scope", &UDesignerAttributeDefinition::Scope)
		.def_readwrite("GlobalScopeResolverClass", &UDesignerAttributeDefinition::GlobalScopeResolverClass, py::return_value_policy::reference)
		.def_readwrite("DesignerAttributeResolverClass", &UDesignerAttributeDefinition::DesignerAttributeResolverClass, py::return_value_policy::reference)
		;
	py::class_< UDevelopmentDownloadableContentEnumerator, UDownloadableContentEnumerator >(m, "UDevelopmentDownloadableContentEnumerator")
		.def("InstallAllDLC", &UDevelopmentDownloadableContentEnumerator::InstallAllDLC)
		;
	py::class_< UDialogNameTagExpressionEvaluator, UExpressionEvaluator >(m, "UDialogNameTagExpressionEvaluator")
		.def_property("bWantExactMatch", [](UDialogNameTagExpressionEvaluator &self){return self.bWantExactMatch;}, [](UDialogNameTagExpressionEvaluator &self, bool value){self.bWantExactMatch = value ? 1 : 0;})
		.def_readwrite("NameTag", &UDialogNameTagExpressionEvaluator::NameTag, py::return_value_policy::reference)
		.def("Evaluate", &UDialogNameTagExpressionEvaluator::Evaluate)
		;
	py::class_< UDLCLegacyPlayerClassIdentifierDefinition, UGBXDefinition >(m, "UDLCLegacyPlayerClassIdentifierDefinition")
		.def_readwrite("CharacterCustomizations", &UDLCLegacyPlayerClassIdentifierDefinition::CharacterCustomizations, py::return_value_policy::reference)
		.def_readwrite("AssociatedPlayerClassIdentifierPath", &UDLCLegacyPlayerClassIdentifierDefinition::AssociatedPlayerClassIdentifierPath, py::return_value_policy::reference)
		.def_readwrite("AsterClassMods", &UDLCLegacyPlayerClassIdentifierDefinition::AsterClassMods, py::return_value_policy::reference)
		.def_readwrite("LobeliaClassMods", &UDLCLegacyPlayerClassIdentifierDefinition::LobeliaClassMods, py::return_value_policy::reference)
		;
	py::class_< UDlcTmsHolder, UObject >(m, "UDlcTmsHolder")
		.def_readwrite("PremiumCustomizationList", &UDlcTmsHolder::PremiumCustomizationList, py::return_value_policy::reference)
		.def_readwrite("PremiumClassList", &UDlcTmsHolder::PremiumClassList, py::return_value_policy::reference)
		;
	py::class_< UDownloadableAssetLibraryDefinition, UGBXDefinition >(m, "UDownloadableAssetLibraryDefinition")
		.def_readwrite("VfTable_IIDlcLicenseObject", &UDownloadableAssetLibraryDefinition::VfTable_IIDlcLicenseObject, py::return_value_policy::reference)
		.def_readwrite("PackageDef", &UDownloadableAssetLibraryDefinition::PackageDef, py::return_value_policy::reference)
		;
	py::class_< UDownloadableContentDefinition, UGBXDefinition >(m, "UDownloadableContentDefinition")
		.def_readwrite("VfTable_IIDlcLicenseObject", &UDownloadableContentDefinition::VfTable_IIDlcLicenseObject, py::return_value_policy::reference)
		.def_readwrite("PackageDef", &UDownloadableContentDefinition::PackageDef, py::return_value_policy::reference)
		.def_readwrite("ContentId", &UDownloadableContentDefinition::ContentId)
		.def_readwrite("LicenseMask", &UDownloadableContentDefinition::LicenseMask)
		.def_readwrite("ContentDisplayName", &UDownloadableContentDefinition::ContentDisplayName, py::return_value_policy::reference)
		.def("GetFullContentId", &UDownloadableContentDefinition::GetFullContentId, py::return_value_policy::reference)
		.def("CanConsume", &UDownloadableContentDefinition::CanConsume)
		.def("IsInstalled", &UDownloadableContentDefinition::IsInstalled)
		.def("IsLicensed", &UDownloadableContentDefinition::IsLicensed)
		;
	py::class_< UDownloadableBalanceModifierDefinition, UDownloadableContentDefinition >(m, "UDownloadableBalanceModifierDefinition")
		.def_readwrite("BalanceModifier", &UDownloadableBalanceModifierDefinition::BalanceModifier, py::return_value_policy::reference)
		.def_readwrite("LevelCapIncrease", &UDownloadableBalanceModifierDefinition::LevelCapIncrease)
		.def_readwrite("ChallengeList", &UDownloadableBalanceModifierDefinition::ChallengeList, py::return_value_policy::reference)
		;
	py::class_< UDownloadableCharacterDefinition, UDownloadableContentDefinition >(m, "UDownloadableCharacterDefinition")
		.def("CanPlayAs", &UDownloadableCharacterDefinition::CanPlayAs)
		;
	py::class_< UDownloadableCustomizationSetDefinition, UDownloadableContentDefinition >(m, "UDownloadableCustomizationSetDefinition")
		.def_readwrite("ProductID", &UDownloadableCustomizationSetDefinition::ProductID)
		.def_readwrite("NumCustomizations", &UDownloadableCustomizationSetDefinition::NumCustomizations)
		.def("CanUse", &UDownloadableCustomizationSetDefinition::CanUse)
		;
	py::class_< UDownloadableExpansionDefinition, UDownloadableContentDefinition >(m, "UDownloadableExpansionDefinition")
		.def_readwrite("LevelTravelPairs", &UDownloadableExpansionDefinition::LevelTravelPairs, py::return_value_policy::reference)
		.def_readwrite("LevelDependencyList", &UDownloadableExpansionDefinition::LevelDependencyList, py::return_value_policy::reference)
		.def_readwrite("ChallengeList", &UDownloadableExpansionDefinition::ChallengeList, py::return_value_policy::reference)
		.def_readwrite("NPCDialogGroups", &UDownloadableExpansionDefinition::NPCDialogGroups, py::return_value_policy::reference)
		.def_readwrite("FastTravelMapMovie", &UDownloadableExpansionDefinition::FastTravelMapMovie, py::return_value_policy::reference)
		.def_readwrite("AllSideMissionsCompleteAchievement", &UDownloadableExpansionDefinition::AllSideMissionsCompleteAchievement)
		.def_readwrite("GatewayStationDefinition", &UDownloadableExpansionDefinition::GatewayStationDefinition, py::return_value_policy::reference)
		.def_readwrite("RegionBalanceData", &UDownloadableExpansionDefinition::RegionBalanceData, py::return_value_policy::reference)
		.def_readwrite("Currencies", &UDownloadableExpansionDefinition::Currencies, py::return_value_policy::reference)
		.def_readwrite("MissionNumberBase", &UDownloadableExpansionDefinition::MissionNumberBase)
		.def_readwrite("SeasonalMissionList", &UDownloadableExpansionDefinition::SeasonalMissionList, py::return_value_policy::reference)
		.def_readwrite("TrainingMessageListDef", &UDownloadableExpansionDefinition::TrainingMessageListDef, py::return_value_policy::reference)
		.def("IsLevelTravelAccessible", &UDownloadableExpansionDefinition::IsLevelTravelAccessible)
		.def("CanTravelTo", &UDownloadableExpansionDefinition::CanTravelTo)
		;
	py::class_< UDownloadableItemSetDefinition, UDownloadableContentDefinition >(m, "UDownloadableItemSetDefinition")
		.def_readwrite("DefaultAttributePresentation", &UDownloadableItemSetDefinition::DefaultAttributePresentation, py::return_value_policy::reference)
		.def_readwrite("ItemAttributePresentationOverride", &UDownloadableItemSetDefinition::ItemAttributePresentationOverride, py::return_value_policy::reference)
		.def_readwrite("ArtifactAttributePresentationOverride", &UDownloadableItemSetDefinition::ArtifactAttributePresentationOverride, py::return_value_policy::reference)
		.def_readwrite("ClassModAttributePresentationOverride", &UDownloadableItemSetDefinition::ClassModAttributePresentationOverride, py::return_value_policy::reference)
		.def_readwrite("GrenadeModAttributePresentationOverride", &UDownloadableItemSetDefinition::GrenadeModAttributePresentationOverride, py::return_value_policy::reference)
		.def_readwrite("ShieldAttributePresentationOverride", &UDownloadableItemSetDefinition::ShieldAttributePresentationOverride, py::return_value_policy::reference)
		.def_readwrite("WeaponAttributePresentationOverride", &UDownloadableItemSetDefinition::WeaponAttributePresentationOverride, py::return_value_policy::reference)
		.def("GetDLCRestrictedMessage", &UDownloadableItemSetDefinition::GetDLCRestrictedMessage, py::return_value_policy::reference)
		.def("CanUse", &UDownloadableItemSetDefinition::CanUse)
		;
	py::class_< UDownloadableVehicleDefinition, UDownloadableContentDefinition >(m, "UDownloadableVehicleDefinition")
		.def("CanDrive", &UDownloadableVehicleDefinition::CanDrive)
		;
	py::class_< UDownloadablePackageDefinition, UGBXDefinition >(m, "UDownloadablePackageDefinition")
		.def_readwrite("VfTable_IIDlcLicenseObject", &UDownloadablePackageDefinition::VfTable_IIDlcLicenseObject, py::return_value_policy::reference)
		.def_readwrite("PackageId", &UDownloadablePackageDefinition::PackageId)
		.def_readwrite("PackageMask", &UDownloadablePackageDefinition::PackageMask)
		.def_readwrite("PackageDisplayName", &UDownloadablePackageDefinition::PackageDisplayName, py::return_value_policy::reference)
		.def_readwrite("DLCName", &UDownloadablePackageDefinition::DLCName, py::return_value_policy::reference)
		.def_readwrite("SeasonPassId", &UDownloadablePackageDefinition::SeasonPassId)
		.def_readwrite("LicenseItems", &UDownloadablePackageDefinition::LicenseItems, py::return_value_policy::reference)
		.def_readwrite("bUsesExtendedLicensing", &UDownloadablePackageDefinition::bUsesExtendedLicensing)
		.def_readwrite("AppliedLicense", &UDownloadablePackageDefinition::AppliedLicense, py::return_value_policy::reference)
		.def("IsFullyInstalled", &UDownloadablePackageDefinition::IsFullyInstalled)
		.def("IsFullyLicensed", &UDownloadablePackageDefinition::IsFullyLicensed)
		.def("GetContentDefinitionById", &UDownloadablePackageDefinition::GetContentDefinitionById, py::return_value_policy::reference)
		;
	py::class_< UDownloadablePackageLicense, UObject >(m, "UDownloadablePackageLicense")
		.def_readwrite("LicenseMask", &UDownloadablePackageLicense::LicenseMask)
		;
	py::class_< UDownloadablePackageLicenseItem, UObject >(m, "UDownloadablePackageLicenseItem")
		.def_readwrite("LicenseMask", &UDownloadablePackageLicenseItem::LicenseMask)
		;
	py::class_< UGoldenKeyLicenseItem, UDownloadablePackageLicenseItem >(m, "UGoldenKeyLicenseItem")
		.def_readwrite("SourceId", &UGoldenKeyLicenseItem::SourceId)
		.def_readwrite("NumKeys", &UGoldenKeyLicenseItem::NumKeys)
		;
	py::class_< UMarketingUnlockLicenseItem, UDownloadablePackageLicenseItem >(m, "UMarketingUnlockLicenseItem")
		.def_readwrite("UnlockId", &UMarketingUnlockLicenseItem::UnlockId)
		;
	py::class_< UEffectCollectionDefinition, UGBXDefinition >(m, "UEffectCollectionDefinition")
		.def_readwrite("ParticleEffects", &UEffectCollectionDefinition::ParticleEffects, py::return_value_policy::reference)
		.def("GetParticleEffect", &UEffectCollectionDefinition::GetParticleEffect, py::return_value_policy::reference)
		;
	py::class_< UEnvironmentTagDefinition, UGBXDefinition >(m, "UEnvironmentTagDefinition")
		;
	py::class_< UEquippedInventoryAttributeContextResolver, UAttributeContextResolver >(m, "UEquippedInventoryAttributeContextResolver")
		.def_readwrite("EquipmentLocation", &UEquippedInventoryAttributeContextResolver::EquipmentLocation)
		;
	py::class_< UEventFilter_OnTouch, UBehaviorEventFilterBase >(m, "UEventFilter_OnTouch")
		.def_property("WillowPawnsAllowed", [](UEventFilter_OnTouch &self){return self.WillowPawnsAllowed;}, [](UEventFilter_OnTouch &self, bool value){self.WillowPawnsAllowed = value ? 1 : 0;})
		.def_property("VehiclesAllowed", [](UEventFilter_OnTouch &self){return self.VehiclesAllowed;}, [](UEventFilter_OnTouch &self, bool value){self.VehiclesAllowed = value ? 1 : 0;})
		.def_property("ProjectilesAllowed", [](UEventFilter_OnTouch &self){return self.ProjectilesAllowed;}, [](UEventFilter_OnTouch &self, bool value){self.ProjectilesAllowed = value ? 1 : 0;})
		.def_property("ItemsAllowed", [](UEventFilter_OnTouch &self){return self.ItemsAllowed;}, [](UEventFilter_OnTouch &self, bool value){self.ItemsAllowed = value ? 1 : 0;})
		.def_property("AnyAllegiance", [](UEventFilter_OnTouch &self){return self.AnyAllegiance;}, [](UEventFilter_OnTouch &self, bool value){self.AnyAllegiance = value ? 1 : 0;})
		.def_property("EnemiesOnly", [](UEventFilter_OnTouch &self){return self.EnemiesOnly;}, [](UEventFilter_OnTouch &self, bool value){self.EnemiesOnly = value ? 1 : 0;})
		.def_property("FriendliesOrNeutralsOnly", [](UEventFilter_OnTouch &self){return self.FriendliesOrNeutralsOnly;}, [](UEventFilter_OnTouch &self, bool value){self.FriendliesOrNeutralsOnly = value ? 1 : 0;})
		.def("eventAllowedToRunThisEvent", &UEventFilter_OnTouch::eventAllowedToRunThisEvent)
		.def("PassesAllegianceTests", &UEventFilter_OnTouch::PassesAllegianceTests)
		;
	py::class_< UExperienceResourcePool, UResourcePool >(m, "UExperienceResourcePool")
		.def_readwrite("ExpCombatPointsScale", &UExperienceResourcePool::ExpCombatPointsScale)
		.def_readwrite("ExpCombatPointsScaleBaseValue", &UExperienceResourcePool::ExpCombatPointsScaleBaseValue)
		.def_readwrite("ExpCombatPointsScaleModifierStack", &UExperienceResourcePool::ExpCombatPointsScaleModifierStack, py::return_value_policy::reference)
		.def_readwrite("ExpMissionPointsScale", &UExperienceResourcePool::ExpMissionPointsScale)
		.def_readwrite("ExpMissionPointsScaleBaseValue", &UExperienceResourcePool::ExpMissionPointsScaleBaseValue)
		.def_readwrite("ExpMissionPointsScaleModifierStack", &UExperienceResourcePool::ExpMissionPointsScaleModifierStack, py::return_value_policy::reference)
		.def_readwrite("ExpAllPointsScale", &UExperienceResourcePool::ExpAllPointsScale)
		.def_readwrite("ExpAllPointsScaleBaseValue", &UExperienceResourcePool::ExpAllPointsScaleBaseValue)
		.def_readwrite("ExpAllPointsScaleModifierStack", &UExperienceResourcePool::ExpAllPointsScaleModifierStack, py::return_value_policy::reference)
		.def("ApplyExpPointsToExpLevel", &UExperienceResourcePool::ApplyExpPointsToExpLevel)
		;
	py::class_< UExplosionCollectionDefinition, UGBXDefinition >(m, "UExplosionCollectionDefinition")
		.def_readwrite("Explosions", &UExplosionCollectionDefinition::Explosions, py::return_value_policy::reference)
		.def("GetExplosion", &UExplosionCollectionDefinition::GetExplosion, py::return_value_policy::reference)
		;
	py::class_< UExplosionDefinition, UGBXDefinition >(m, "UExplosionDefinition")
		.def_property("bSkipTraceTest", [](UExplosionDefinition &self){return self.bSkipTraceTest;}, [](UExplosionDefinition &self, bool value){self.bSkipTraceTest = value ? 1 : 0;})
		.def_readwrite("ExplosionAkEvent", &UExplosionDefinition::ExplosionAkEvent, py::return_value_policy::reference)
		.def_readwrite("MultipleExplosionsAkEvent", &UExplosionDefinition::MultipleExplosionsAkEvent, py::return_value_policy::reference)
		.def_readwrite("ExplosionPSTemplate", &UExplosionDefinition::ExplosionPSTemplate, py::return_value_policy::reference)
		.def_readwrite("DrawScale", &UExplosionDefinition::DrawScale)
		.def_readwrite("ExplosionScale", &UExplosionDefinition::ExplosionScale, py::return_value_policy::reference)
		.def_readwrite("CameraAnim", &UExplosionDefinition::CameraAnim, py::return_value_policy::reference)
		.def_readwrite("MinCameraEffectDistance", &UExplosionDefinition::MinCameraEffectDistance)
		.def_readwrite("MaxCameraEffectDistance", &UExplosionDefinition::MaxCameraEffectDistance)
		.def_readwrite("FFWaveform", &UExplosionDefinition::FFWaveform, py::return_value_policy::reference)
		.def_readwrite("DamageTypeDef", &UExplosionDefinition::DamageTypeDef, py::return_value_policy::reference)
		.def_readwrite("ImpactEffect", &UExplosionDefinition::ImpactEffect, py::return_value_policy::reference)
		.def_readwrite("ImpactTraceLength", &UExplosionDefinition::ImpactTraceLength)
		.def_readwrite("RecentExplosionTracker", &UExplosionDefinition::RecentExplosionTracker, py::return_value_policy::reference)
		.def_readwrite("ExplosionSoundStackingPreventionDelay", &UExplosionDefinition::ExplosionSoundStackingPreventionDelay)
		.def_readwrite("ExplosionSoundStackingMaxDistanceSquared", &UExplosionDefinition::ExplosionSoundStackingMaxDistanceSquared)
		.def("DidAnExplosionForThisInstigatorJustGoOff", &UExplosionDefinition::DidAnExplosionForThisInstigatorJustGoOff)
		.def("MakeExplodyShakes", &UExplosionDefinition::MakeExplodyShakes)
		.def("PlayExplosionCameraAnim", &UExplosionDefinition::PlayExplosionCameraAnim)
		.def("PlayImpactEffects", &UExplosionDefinition::PlayImpactEffects)
		.def("PlayMultipleExplosionsSound", &UExplosionDefinition::PlayMultipleExplosionsSound)
		.def("eventPlayExplosion", &UExplosionDefinition::eventPlayExplosion)
		.def("IsExplosionDebugEnabled", &UExplosionDefinition::IsExplosionDebugEnabled)
		.def("ToggleExplosionDebug", &UExplosionDefinition::ToggleExplosionDebug)
		;
	py::class_< UFastTravelStationsListOrder, UGBXDefinition >(m, "UFastTravelStationsListOrder")
		.def_readwrite("FastTravelStationOrderList", &UFastTravelStationsListOrder::FastTravelStationOrderList, py::return_value_policy::reference)
		.def_readwrite("DlcExpansion", &UFastTravelStationsListOrder::DlcExpansion, py::return_value_policy::reference)
		;
	py::class_< UFastTravelStationsLookup, UObject >(m, "UFastTravelStationsLookup")
		.def_readwrite("FastTravelStationLookupList", &UFastTravelStationsLookup::FastTravelStationLookupList, py::return_value_policy::reference)
		.def_readwrite("LevelTravelStationLookupList", &UFastTravelStationsLookup::LevelTravelStationLookupList, py::return_value_policy::reference)
		.def("AddStationToNameListInOrder", &UFastTravelStationsLookup::AddStationToNameListInOrder)
		.def("TravelStationIsSafe", &UFastTravelStationsLookup::TravelStationIsSafe)
		.def("GetStartingTravelStation", &UFastTravelStationsLookup::GetStartingTravelStation, py::return_value_policy::reference)
		.def("GetStationsForLevel", &UFastTravelStationsLookup::GetStationsForLevel)
		.def("GetLocation", &UFastTravelStationsLookup::GetLocation, py::return_value_policy::reference)
		.def("GetDefaultStationForLevel", &UFastTravelStationsLookup::GetDefaultStationForLevel, py::return_value_policy::reference)
		.def("GetLevelName", &UFastTravelStationsLookup::GetLevelName, py::return_value_policy::reference)
		.def("GetDisplayImage", &UFastTravelStationsLookup::GetDisplayImage, py::return_value_policy::reference)
		.def("GetDescription", &UFastTravelStationsLookup::GetDescription, py::return_value_policy::reference)
		.def("GetDisplayName", &UFastTravelStationsLookup::GetDisplayName, py::return_value_policy::reference)
		.def("FindTravelStationLookupObject", &UFastTravelStationsLookup::FindTravelStationLookupObject, py::return_value_policy::reference)
		.def("FindFastTravelStationLookupObject", &UFastTravelStationsLookup::FindFastTravelStationLookupObject, py::return_value_policy::reference)
		;
	py::class_< UFiringModeDefinition, UGBXDefinition >(m, "UFiringModeDefinition")
		.def_property("bSuppressImpactEffects", [](UFiringModeDefinition &self){return self.bSuppressImpactEffects;}, [](UFiringModeDefinition &self, bool value){self.bSuppressImpactEffects = value ? 1 : 0;})
		.def_property("bPenetratePawn", [](UFiringModeDefinition &self){return self.bPenetratePawn;}, [](UFiringModeDefinition &self, bool value){self.bPenetratePawn = value ? 1 : 0;})
		.def_property("bParameterizedSourceLocation", [](UFiringModeDefinition &self){return self.bParameterizedSourceLocation;}, [](UFiringModeDefinition &self, bool value){self.bParameterizedSourceLocation = value ? 1 : 0;})
		.def_property("bBeamChooseRandomBone", [](UFiringModeDefinition &self){return self.bBeamChooseRandomBone;}, [](UFiringModeDefinition &self, bool value){self.bBeamChooseRandomBone = value ? 1 : 0;})
		.def_property("bFireRandomlyFromPattern", [](UFiringModeDefinition &self){return self.bFireRandomlyFromPattern;}, [](UFiringModeDefinition &self, bool value){self.bFireRandomlyFromPattern = value ? 1 : 0;})
		.def_property("bResetPatternAfterEachShot", [](UFiringModeDefinition &self){return self.bResetPatternAfterEachShot;}, [](UFiringModeDefinition &self, bool value){self.bResetPatternAfterEachShot = value ? 1 : 0;})
		.def_property("bSuppressWeaponSpread", [](UFiringModeDefinition &self){return self.bSuppressWeaponSpread;}, [](UFiringModeDefinition &self, bool value){self.bSuppressWeaponSpread = value ? 1 : 0;})
		.def_property("bScalePatternByWeaponSpread", [](UFiringModeDefinition &self){return self.bScalePatternByWeaponSpread;}, [](UFiringModeDefinition &self, bool value){self.bScalePatternByWeaponSpread = value ? 1 : 0;})
		.def_readwrite("FireType", &UFiringModeDefinition::FireType)
		.def_readwrite("BeamLockBehavior", &UFiringModeDefinition::BeamLockBehavior)
		.def_readwrite("DamageTypeDefinition", &UFiringModeDefinition::DamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("ProjectileDefinition", &UFiringModeDefinition::ProjectileDefinition, py::return_value_policy::reference)
		.def_readwrite("ExplosionOverrideDefinition", &UFiringModeDefinition::ExplosionOverrideDefinition, py::return_value_policy::reference)
		.def_readwrite("ExplosionOverideInstanceDataName", &UFiringModeDefinition::ExplosionOverideInstanceDataName, py::return_value_policy::reference)
		.def_readwrite("PartSysTemplate", &UFiringModeDefinition::PartSysTemplate, py::return_value_policy::reference)
		.def_readwrite("ConditionalPartSysTemplate", &UFiringModeDefinition::ConditionalPartSysTemplate, py::return_value_policy::reference)
		.def_readwrite("OnAnyImpact", &UFiringModeDefinition::OnAnyImpact, py::return_value_policy::reference)
		.def_readwrite("ImpactResponses", &UFiringModeDefinition::ImpactResponses, py::return_value_policy::reference)
		.def_readwrite("Lifetime", &UFiringModeDefinition::Lifetime)
		.def_readwrite("TraceInterval", &UFiringModeDefinition::TraceInterval)
		.def_readwrite("OverchargedImpactTemplate", &UFiringModeDefinition::OverchargedImpactTemplate, py::return_value_policy::reference)
		.def_readwrite("NumRicochets", &UFiringModeDefinition::NumRicochets)
		.def_readwrite("Speed", &UFiringModeDefinition::Speed)
		.def_readwrite("Acceleration", &UFiringModeDefinition::Acceleration, py::return_value_policy::reference)
		.def_readwrite("WaveFreq", &UFiringModeDefinition::WaveFreq, py::return_value_policy::reference)
		.def_readwrite("WaveAmp", &UFiringModeDefinition::WaveAmp, py::return_value_policy::reference)
		.def_readwrite("WavePhase", &UFiringModeDefinition::WavePhase, py::return_value_policy::reference)
		.def_readwrite("RicochetFriction", &UFiringModeDefinition::RicochetFriction)
		.def_readwrite("AirFriction", &UFiringModeDefinition::AirFriction)
		.def_readwrite("TimerEvents", &UFiringModeDefinition::TimerEvents, py::return_value_policy::reference)
		.def_readwrite("RicochetResponse", &UFiringModeDefinition::RicochetResponse, py::return_value_policy::reference)
		.def_readwrite("TraceExtent", &UFiringModeDefinition::TraceExtent, py::return_value_policy::reference)
		.def_readwrite("LightProjectileSourceLocationName", &UFiringModeDefinition::LightProjectileSourceLocationName, py::return_value_policy::reference)
		.def_readwrite("BeamMaxLockOnDistance", &UFiringModeDefinition::BeamMaxLockOnDistance)
		.def_readwrite("BeamMaxLength", &UFiringModeDefinition::BeamMaxLength)
		.def_readwrite("BeamSourceTangentStrengthOverDistance", &UFiringModeDefinition::BeamSourceTangentStrengthOverDistance)
		.def_readwrite("BeamTargetTangentStrengthOverDistance", &UFiringModeDefinition::BeamTargetTangentStrengthOverDistance)
		.def_readwrite("BeamApproxRepUpdateTime", &UFiringModeDefinition::BeamApproxRepUpdateTime)
		.def_readwrite("BeamTraceNumSteps", &UFiringModeDefinition::BeamTraceNumSteps)
		.def_readwrite("BeamSourceLocationName", &UFiringModeDefinition::BeamSourceLocationName, py::return_value_policy::reference)
		.def_readwrite("BeamSourceTangentName", &UFiringModeDefinition::BeamSourceTangentName, py::return_value_policy::reference)
		.def_readwrite("BeamSourceStrengthName", &UFiringModeDefinition::BeamSourceStrengthName, py::return_value_policy::reference)
		.def_readwrite("BeamTargetLocationName", &UFiringModeDefinition::BeamTargetLocationName, py::return_value_policy::reference)
		.def_readwrite("BeamTargetTangentName", &UFiringModeDefinition::BeamTargetTangentName, py::return_value_policy::reference)
		.def_readwrite("BeamTargetStrengthName", &UFiringModeDefinition::BeamTargetStrengthName, py::return_value_policy::reference)
		.def_readwrite("BeamDirectionName", &UFiringModeDefinition::BeamDirectionName, py::return_value_policy::reference)
		.def_readwrite("BeamChainDelay", &UFiringModeDefinition::BeamChainDelay)
		.def_readwrite("BeamChainNum", &UFiringModeDefinition::BeamChainNum)
		.def_readwrite("BeamChainMaxDistance", &UFiringModeDefinition::BeamChainMaxDistance)
		.def_readwrite("BeamRandomBoneTimeMin", &UFiringModeDefinition::BeamRandomBoneTimeMin)
		.def_readwrite("BeamRandomBoneTimeMax", &UFiringModeDefinition::BeamRandomBoneTimeMax)
		.def_readwrite("SoundDefinition", &UFiringModeDefinition::SoundDefinition, py::return_value_policy::reference)
		.def_readwrite("FiringPatternLines", &UFiringModeDefinition::FiringPatternLines, py::return_value_policy::reference)
		.def_readwrite("BasePatternSpread", &UFiringModeDefinition::BasePatternSpread)
		.def_readwrite("MinPatternScale", &UFiringModeDefinition::MinPatternScale)
		.def("GetParticleSystemTemplate", &UFiringModeDefinition::GetParticleSystemTemplate, py::return_value_policy::reference)
		.def("RunBehaviorsForImpact", &UFiringModeDefinition::RunBehaviorsForImpact)
		.def("GetImpactResponseIndex", &UFiringModeDefinition::GetImpactResponseIndex)
		.def("NotifyFiringPatternWhenShotComplete", [](UFiringModeDefinition &self ) { int* pyNextFiringPatternIndex = (int*)malloc(sizeof(int)) ;   self.NotifyFiringPatternWhenShotComplete(pyNextFiringPatternIndex); return py::make_tuple(*pyNextFiringPatternIndex); })
		.def("GetFiringPatternAdjustments", [](UFiringModeDefinition &self , float WeaponSpread, struct FRotator* InputAimAdjustment, struct FRotator* OutputAimAdjustment, struct FWaveMotionData* CustomWaveMotion) { int* pyNextFiringPatternIndex = (int*)malloc(sizeof(int)) ;  int ret =  self.GetFiringPatternAdjustments(WeaponSpread, InputAimAdjustment, OutputAimAdjustment, CustomWaveMotion, pyNextFiringPatternIndex); return py::make_tuple(ret, *pyNextFiringPatternIndex); })
		;
	py::class_< UFiringModeSoundDefinition, UGBXDefinition >(m, "UFiringModeSoundDefinition")
		.def_readwrite("FireSounds", &UFiringModeSoundDefinition::FireSounds, py::return_value_policy::reference)
		.def_readwrite("FireTailSounds", &UFiringModeSoundDefinition::FireTailSounds, py::return_value_policy::reference)
		.def_readwrite("ShellCasingImpact", &UFiringModeSoundDefinition::ShellCasingImpact, py::return_value_policy::reference)
		.def_readwrite("ShellCasingDelay", &UFiringModeSoundDefinition::ShellCasingDelay)
		.def_readwrite("TravelingSoundEvent", &UFiringModeSoundDefinition::TravelingSoundEvent, py::return_value_policy::reference)
		.def_readwrite("BulletWhipSounds", &UFiringModeSoundDefinition::BulletWhipSounds, py::return_value_policy::reference)
		.def_readwrite("BulletWhipRadius", &UFiringModeSoundDefinition::BulletWhipRadius)
		.def_readwrite("BeamSoundEvent", &UFiringModeSoundDefinition::BeamSoundEvent, py::return_value_policy::reference)
		.def_readwrite("BeamStopSoundEvent", &UFiringModeSoundDefinition::BeamStopSoundEvent, py::return_value_policy::reference)
		.def_readwrite("BeamImpactSoundEvent", &UFiringModeSoundDefinition::BeamImpactSoundEvent, py::return_value_policy::reference)
		;
	py::class_< AFlyerBlockingVolume, ABlockingVolume >(m, "AFlyerBlockingVolume")
		.def("StopsProjectile", &AFlyerBlockingVolume::StopsProjectile)
		;
	py::class_< UFocusCameraDefinition, UGBXDefinition >(m, "UFocusCameraDefinition")
		.def_readwrite("CamReturnTime", &UFocusCameraDefinition::CamReturnTime)
		.def_readwrite("CamMovementThreshold", &UFocusCameraDefinition::CamMovementThreshold)
		.def_readwrite("CamMovementSpeed_Fast", &UFocusCameraDefinition::CamMovementSpeed_Fast)
		.def_readwrite("CamMovementSpeed_Slow", &UFocusCameraDefinition::CamMovementSpeed_Slow)
		;
	py::class_< UFractalViewWanderingDefinition, UGBXDefinition >(m, "UFractalViewWanderingDefinition")
		.def_readwrite("PseudoRandomPoints", &UFractalViewWanderingDefinition::PseudoRandomPoints, py::return_value_policy::reference)
		.def_readwrite("NumberOfOctaves", &UFractalViewWanderingDefinition::NumberOfOctaves)
		.def("GenerateNewRandomPoints", &UFractalViewWanderingDefinition::GenerateNewRandomPoints)
		;
	py::class_< UGameBalanceDefinition, UGBXDefinition >(m, "UGameBalanceDefinition")
		.def_readwrite("BalanceByRegion", &UGameBalanceDefinition::BalanceByRegion, py::return_value_policy::reference)
		;
	py::class_< UGameReleaseDefinition, UGBXDefinition >(m, "UGameReleaseDefinition")
		.def_readwrite("WorldDiscoveryStatID", &UGameReleaseDefinition::WorldDiscoveryStatID, py::return_value_policy::reference)
		.def_readwrite("NumWorldDiscoveryAreas", &UGameReleaseDefinition::NumWorldDiscoveryAreas)
		;
	py::class_< UGearLikenessMeshComponent, USkeletalMeshComponent >(m, "UGearLikenessMeshComponent")
		.def_readwrite("LikenessOf", &UGearLikenessMeshComponent::LikenessOf)
		.def_readwrite("GroupIndex", &UGearLikenessMeshComponent::GroupIndex)
		.def_readwrite("CachedLikenessID", &UGearLikenessMeshComponent::CachedLikenessID, py::return_value_policy::reference)
		.def("RefreshGearLikenessComponents", &UGearLikenessMeshComponent::RefreshGearLikenessComponents)
		;
	py::class_< UGenericReviveMessageDefinition, UGBXDefinition >(m, "UGenericReviveMessageDefinition")
		.def_readwrite("Message_Self", &UGenericReviveMessageDefinition::Message_Self, py::return_value_policy::reference)
		.def_readwrite("Message_Other", &UGenericReviveMessageDefinition::Message_Other, py::return_value_policy::reference)
		;
	py::class_< UGlobalAttributeValueResolver, UAttributeValueResolver >(m, "UGlobalAttributeValueResolver")
		.def_readwrite("GlobalAttribute", &UGlobalAttributeValueResolver::GlobalAttribute)
		.def("GetGlobalAttributeValue", &UGlobalAttributeValueResolver::GetGlobalAttributeValue)
		.def("SetGlobalAttributeValue", &UGlobalAttributeValueResolver::SetGlobalAttributeValue)
		;
	py::class_< UGlobalsDefinition, UGearboxGlobalsDefinition >(m, "UGlobalsDefinition")
		.def_property("bUsePC360Buttons", [](UGlobalsDefinition &self){return self.bUsePC360Buttons;}, [](UGlobalsDefinition &self, bool value){self.bUsePC360Buttons = value ? 1 : 0;})
		.def_readwrite("BulletReflectionRadius", &UGlobalsDefinition::BulletReflectionRadius)
		.def_readwrite("BulletReflectionSpeedAdjustment", &UGlobalsDefinition::BulletReflectionSpeedAdjustment)
		.def_readwrite("BulletReflectionParticle", &UGlobalsDefinition::BulletReflectionParticle, py::return_value_policy::reference)
		.def_readwrite("BulletReflectionInaccuracyFormula", &UGlobalsDefinition::BulletReflectionInaccuracyFormula, py::return_value_policy::reference)
		.def_readwrite("BulletPenetratedEnemyParticle", &UGlobalsDefinition::BulletPenetratedEnemyParticle, py::return_value_policy::reference)
		.def_readwrite("BulletPenetratedEnemyAkEvent", &UGlobalsDefinition::BulletPenetratedEnemyAkEvent, py::return_value_policy::reference)
		.def_readwrite("DualWieldSwitchName", &UGlobalsDefinition::DualWieldSwitchName, py::return_value_policy::reference)
		.def_readwrite("DualWieldSprintSwitchName", &UGlobalsDefinition::DualWieldSprintSwitchName, py::return_value_policy::reference)
		.def_readwrite("DualWieldLeftSideControl", &UGlobalsDefinition::DualWieldLeftSideControl, py::return_value_policy::reference)
		.def_readwrite("KillSkillDurationsPerPlayers", &UGlobalsDefinition::KillSkillDurationsPerPlayers, py::return_value_policy::reference)
		.def_readwrite("GeneralSkillPointsPerLevelUp", &UGlobalsDefinition::GeneralSkillPointsPerLevelUp, py::return_value_policy::reference)
		.def_readwrite("GeneralSkillPointsTotalForCurrentLevel", &UGlobalsDefinition::GeneralSkillPointsTotalForCurrentLevel, py::return_value_policy::reference)
		.def_readwrite("SpecialistSkillPointsPerLevelUp", &UGlobalsDefinition::SpecialistSkillPointsPerLevelUp, py::return_value_policy::reference)
		.def_readwrite("CostToResetSkillPoints", &UGlobalsDefinition::CostToResetSkillPoints, py::return_value_policy::reference)
		.def_readwrite("WeaponProficiencySkills", &UGlobalsDefinition::WeaponProficiencySkills, py::return_value_policy::reference)
		.def_readwrite("BaseEnemyExperienceFormula", &UGlobalsDefinition::BaseEnemyExperienceFormula, py::return_value_policy::reference)
		.def_readwrite("DamageTypeExpModifiers", &UGlobalsDefinition::DamageTypeExpModifiers, py::return_value_policy::reference)
		.def_readwrite("ExpScaleByLevelDifference", &UGlobalsDefinition::ExpScaleByLevelDifference, py::return_value_policy::reference)
		.def_readwrite("ExpAwardWeights", &UGlobalsDefinition::ExpAwardWeights, py::return_value_policy::reference)
		.def_readwrite("ExpMaxPlayerLevel", &UGlobalsDefinition::ExpMaxPlayerLevel)
		.def_readwrite("ExpPointsRequiredForLevel", &UGlobalsDefinition::ExpPointsRequiredForLevel, py::return_value_policy::reference)
		.def_readwrite("VehicleVSCharacterExpModifier", &UGlobalsDefinition::VehicleVSCharacterExpModifier, py::return_value_policy::reference)
		.def_readwrite("WorldDiscoveryExperienceFormula", &UGlobalsDefinition::WorldDiscoveryExperienceFormula, py::return_value_policy::reference)
		.def_readwrite("FastTravelObjective", &UGlobalsDefinition::FastTravelObjective, py::return_value_policy::reference)
		.def_readwrite("TravelDelay", &UGlobalsDefinition::TravelDelay)
		.def_readwrite("DlcPreviousStation", &UGlobalsDefinition::DlcPreviousStation, py::return_value_policy::reference)
		.def_readwrite("SanctuaryMapName", &UGlobalsDefinition::SanctuaryMapName, py::return_value_policy::reference)
		.def_readwrite("SanctuaryAirMapName", &UGlobalsDefinition::SanctuaryAirMapName, py::return_value_policy::reference)
		.def_readwrite("SanctuaryBackupMapName", &UGlobalsDefinition::SanctuaryBackupMapName, py::return_value_policy::reference)
		.def_readwrite("SanctuaryInaccessibleObjective", &UGlobalsDefinition::SanctuaryInaccessibleObjective, py::return_value_policy::reference)
		.def_readwrite("SanctuaryFlyingObjective", &UGlobalsDefinition::SanctuaryFlyingObjective, py::return_value_policy::reference)
		.def_readwrite("MinTeleportTime", &UGlobalsDefinition::MinTeleportTime)
		.def_readwrite("TeleporterStartAkEvent", &UGlobalsDefinition::TeleporterStartAkEvent, py::return_value_policy::reference)
		.def_readwrite("TeleporterStopAkEvent", &UGlobalsDefinition::TeleporterStopAkEvent, py::return_value_policy::reference)
		.def_readwrite("TeleporterHoldingCellPartSys", &UGlobalsDefinition::TeleporterHoldingCellPartSys, py::return_value_policy::reference)
		.def_readwrite("StartupTeleporterAttribute", &UGlobalsDefinition::StartupTeleporterAttribute, py::return_value_policy::reference)
		.def_readwrite("TeleportCost", &UGlobalsDefinition::TeleportCost, py::return_value_policy::reference)
		.def_readwrite("PauseAkEvent", &UGlobalsDefinition::PauseAkEvent, py::return_value_policy::reference)
		.def_readwrite("UnpauseAkEvent", &UGlobalsDefinition::UnpauseAkEvent, py::return_value_policy::reference)
		.def_readwrite("DefaultMaterialAkSwitch", &UGlobalsDefinition::DefaultMaterialAkSwitch, py::return_value_policy::reference)
		.def_readwrite("FirstPersonAkSwitch", &UGlobalsDefinition::FirstPersonAkSwitch, py::return_value_policy::reference)
		.def_readwrite("ThirdPersonAkSwitch", &UGlobalsDefinition::ThirdPersonAkSwitch, py::return_value_policy::reference)
		.def_readwrite("EchoStartedAkEvent", &UGlobalsDefinition::EchoStartedAkEvent, py::return_value_policy::reference)
		.def_readwrite("EchoEndedAkEvent", &UGlobalsDefinition::EchoEndedAkEvent, py::return_value_policy::reference)
		.def_readwrite("MasterVolumeAkRtpc", &UGlobalsDefinition::MasterVolumeAkRtpc, py::return_value_policy::reference)
		.def_readwrite("UserVolumeMusicAkRtpc", &UGlobalsDefinition::UserVolumeMusicAkRtpc, py::return_value_policy::reference)
		.def_readwrite("UserVolumeSfxAkRtpc", &UGlobalsDefinition::UserVolumeSfxAkRtpc, py::return_value_policy::reference)
		.def_readwrite("UserVolumeVOAkRtpc", &UGlobalsDefinition::UserVolumeVOAkRtpc, py::return_value_policy::reference)
		.def_readwrite("ListenerDistanceAkRtpc", &UGlobalsDefinition::ListenerDistanceAkRtpc, py::return_value_policy::reference)
		.def_readwrite("ApproachSpeedAkRtpc", &UGlobalsDefinition::ApproachSpeedAkRtpc, py::return_value_policy::reference)
		.def_readwrite("SpeedAkRtpc", &UGlobalsDefinition::SpeedAkRtpc, py::return_value_policy::reference)
		.def_readwrite("ResetStatesAkEvent", &UGlobalsDefinition::ResetStatesAkEvent, py::return_value_policy::reference)
		.def_readwrite("StartSplitScreenAkEvent", &UGlobalsDefinition::StartSplitScreenAkEvent, py::return_value_policy::reference)
		.def_readwrite("PlayerVoiceAkState", &UGlobalsDefinition::PlayerVoiceAkState, py::return_value_policy::reference)
		.def_readwrite("JackVoiceAkState", &UGlobalsDefinition::JackVoiceAkState, py::return_value_policy::reference)
		.def_readwrite("PlayerCalloutsDisabledAkState", &UGlobalsDefinition::PlayerCalloutsDisabledAkState, py::return_value_policy::reference)
		.def_readwrite("PlayerCalloutsEnabledAkState", &UGlobalsDefinition::PlayerCalloutsEnabledAkState, py::return_value_policy::reference)
		.def_readwrite("CinematicModePauseDialogAkEvent", &UGlobalsDefinition::CinematicModePauseDialogAkEvent, py::return_value_policy::reference)
		.def_readwrite("CinematicModeResumeDialogAkEvent", &UGlobalsDefinition::CinematicModeResumeDialogAkEvent, py::return_value_policy::reference)
		.def_readwrite("ShieldLowWarningStartAkEvent", &UGlobalsDefinition::ShieldLowWarningStartAkEvent, py::return_value_policy::reference)
		.def_readwrite("ShieldLowWarningStopAkEvent", &UGlobalsDefinition::ShieldLowWarningStopAkEvent, py::return_value_policy::reference)
		.def_readwrite("ShieldRecoveringAkEvent", &UGlobalsDefinition::ShieldRecoveringAkEvent, py::return_value_policy::reference)
		.def_readwrite("ShieldRecoveredAkEvent", &UGlobalsDefinition::ShieldRecoveredAkEvent, py::return_value_policy::reference)
		.def_readwrite("ShieldDownAkEvent", &UGlobalsDefinition::ShieldDownAkEvent, py::return_value_policy::reference)
		.def_readwrite("TinnitusEffectDecayRate", &UGlobalsDefinition::TinnitusEffectDecayRate)
		.def_readwrite("TinnitusEffectStrengthRTPC", &UGlobalsDefinition::TinnitusEffectStrengthRTPC, py::return_value_policy::reference)
		.def_readwrite("TinnitusSourcePannerRTPC", &UGlobalsDefinition::TinnitusSourcePannerRTPC, py::return_value_policy::reference)
		.def_readwrite("TinnitusSourceStrengthRTPC", &UGlobalsDefinition::TinnitusSourceStrengthRTPC, py::return_value_policy::reference)
		.def_readwrite("TinnitusAkEvent", &UGlobalsDefinition::TinnitusAkEvent, py::return_value_policy::reference)
		.def_readwrite("LevelUpAkEvent", &UGlobalsDefinition::LevelUpAkEvent, py::return_value_policy::reference)
		.def_readwrite("VOVolumeStartAkEvent", &UGlobalsDefinition::VOVolumeStartAkEvent, py::return_value_policy::reference)
		.def_readwrite("VOVolumeStopAkEvent", &UGlobalsDefinition::VOVolumeStopAkEvent, py::return_value_policy::reference)
		.def_readwrite("SFXVolumeStartAkEvent", &UGlobalsDefinition::SFXVolumeStartAkEvent, py::return_value_policy::reference)
		.def_readwrite("SFXVolumeStopAkEvent", &UGlobalsDefinition::SFXVolumeStopAkEvent, py::return_value_policy::reference)
		.def_readwrite("MusicVolumeStartAkEvent", &UGlobalsDefinition::MusicVolumeStartAkEvent, py::return_value_policy::reference)
		.def_readwrite("MusicVolumeStopAkEvent", &UGlobalsDefinition::MusicVolumeStopAkEvent, py::return_value_policy::reference)
		.def_readwrite("LoadingSoundMode", &UGlobalsDefinition::LoadingSoundMode, py::return_value_policy::reference)
		.def_readwrite("EchoSoundMode", &UGlobalsDefinition::EchoSoundMode, py::return_value_policy::reference)
		.def_readwrite("DefaultSoundMode", &UGlobalsDefinition::DefaultSoundMode, py::return_value_policy::reference)
		.def_readwrite("SoundsToAlwaysReference", &UGlobalsDefinition::SoundsToAlwaysReference, py::return_value_policy::reference)
		.def_readwrite("PlayerInteractionDistance", &UGlobalsDefinition::PlayerInteractionDistance)
		.def_readwrite("GrenadeAmmoDefinition", &UGlobalsDefinition::GrenadeAmmoDefinition, py::return_value_policy::reference)
		.def_readwrite("StandardGrenadeDefinition", &UGlobalsDefinition::StandardGrenadeDefinition, py::return_value_policy::reference)
		.def_readwrite("ShowEchoTalkerDistance", &UGlobalsDefinition::ShowEchoTalkerDistance)
		.def_readwrite("HideEchoTalkerDistance", &UGlobalsDefinition::HideEchoTalkerDistance)
		.def_readwrite("EchoDistortionAkRtpc", &UGlobalsDefinition::EchoDistortionAkRtpc, py::return_value_policy::reference)
		.def_readwrite("MissionAcceptEchoDelay", &UGlobalsDefinition::MissionAcceptEchoDelay)
		.def_readwrite("AmmoDefinition_RepeaterPistol", &UGlobalsDefinition::AmmoDefinition_RepeaterPistol, py::return_value_policy::reference)
		.def_readwrite("AmmoDefinition_RevolverPistol", &UGlobalsDefinition::AmmoDefinition_RevolverPistol, py::return_value_policy::reference)
		.def_readwrite("AmmoDefinition_Shotgun", &UGlobalsDefinition::AmmoDefinition_Shotgun, py::return_value_policy::reference)
		.def_readwrite("AmmoDefinition_SMG", &UGlobalsDefinition::AmmoDefinition_SMG, py::return_value_policy::reference)
		.def_readwrite("AmmoDefinition_CombatRifle", &UGlobalsDefinition::AmmoDefinition_CombatRifle, py::return_value_policy::reference)
		.def_readwrite("AmmoDefinition_SniperRifle", &UGlobalsDefinition::AmmoDefinition_SniperRifle, py::return_value_policy::reference)
		.def_readwrite("AmmoDefinition_RocketLauncher", &UGlobalsDefinition::AmmoDefinition_RocketLauncher, py::return_value_policy::reference)
		.def_readwrite("PlayerEventRetriggerDelaySeconds", &UGlobalsDefinition::PlayerEventRetriggerDelaySeconds)
		.def_readwrite("RarityLevelColors", &UGlobalsDefinition::RarityLevelColors, py::return_value_policy::reference)
		.def_readwrite("MissionItemRarityLevel", &UGlobalsDefinition::MissionItemRarityLevel)
		.def_readwrite("RegionBalanceData", &UGlobalsDefinition::RegionBalanceData, py::return_value_policy::reference)
		.def_readwrite("GameStageIncreaseAbovePlayer", &UGlobalsDefinition::GameStageIncreaseAbovePlayer, py::return_value_policy::reference)
		.def_readwrite("OtherPlayerDiedCostMultiplier", &UGlobalsDefinition::OtherPlayerDiedCostMultiplier)
		.def_readwrite("GlobalAIDamageScale", &UGlobalsDefinition::GlobalAIDamageScale, py::return_value_policy::reference)
		.def_readwrite("GlobalAIWeaponDamageScale", &UGlobalsDefinition::GlobalAIWeaponDamageScale, py::return_value_policy::reference)
		.def_readwrite("GlobalAIPistolWeaponDamageScale", &UGlobalsDefinition::GlobalAIPistolWeaponDamageScale, py::return_value_policy::reference)
		.def_readwrite("GlobalAIShotgunWeaponDamageScale", &UGlobalsDefinition::GlobalAIShotgunWeaponDamageScale, py::return_value_policy::reference)
		.def_readwrite("GlobalAISmgWeaponDamageScale", &UGlobalsDefinition::GlobalAISmgWeaponDamageScale, py::return_value_policy::reference)
		.def_readwrite("GlobalAISniperWeaponDamageScale", &UGlobalsDefinition::GlobalAISniperWeaponDamageScale, py::return_value_policy::reference)
		.def_readwrite("GlobalAIAssaultWeaponDamageScale", &UGlobalsDefinition::GlobalAIAssaultWeaponDamageScale, py::return_value_policy::reference)
		.def_readwrite("GlobalAIRocketWeaponDamageScale", &UGlobalsDefinition::GlobalAIRocketWeaponDamageScale, py::return_value_policy::reference)
		.def_readwrite("PlayerDamageScaleByLevelDifference", &UGlobalsDefinition::PlayerDamageScaleByLevelDifference, py::return_value_policy::reference)
		.def_readwrite("AIDamageScaleByLevelDifference", &UGlobalsDefinition::AIDamageScaleByLevelDifference, py::return_value_policy::reference)
		.def_readwrite("SelfInflictedDamageMultiplier", &UGlobalsDefinition::SelfInflictedDamageMultiplier)
		.def_readwrite("GlobalFallingDamageScale", &UGlobalsDefinition::GlobalFallingDamageScale, py::return_value_policy::reference)
		.def_readwrite("FriendlyDamageModifier", &UGlobalsDefinition::FriendlyDamageModifier)
		.def_readwrite("StatusEffectCommonProperties", &UGlobalsDefinition::StatusEffectCommonProperties, py::return_value_policy::reference)
		.def_readwrite("StatusEffectChanceScales", &UGlobalsDefinition::StatusEffectChanceScales, py::return_value_policy::reference)
		.def_readwrite("FriendlyStatusEffectChanceModifier", &UGlobalsDefinition::FriendlyStatusEffectChanceModifier)
		.def_readwrite("DamageDisplayParticles", &UGlobalsDefinition::DamageDisplayParticles, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleColorParamName", &UGlobalsDefinition::DamageDisplayParticleColorParamName, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleDamageParamName", &UGlobalsDefinition::DamageDisplayParticleDamageParamName, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleSizeParamName", &UGlobalsDefinition::DamageDisplayParticleSizeParamName, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleSizeMinDist", &UGlobalsDefinition::DamageDisplayParticleSizeMinDist)
		.def_readwrite("DamageDisplayParticleSizeMaxDist", &UGlobalsDefinition::DamageDisplayParticleSizeMaxDist)
		.def_readwrite("DamageDisplayParticleCriticalHitParamName", &UGlobalsDefinition::DamageDisplayParticleCriticalHitParamName, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleCriticalHitParamNameEs", &UGlobalsDefinition::DamageDisplayParticleCriticalHitParamNameEs, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleCriticalHitParamNameFr", &UGlobalsDefinition::DamageDisplayParticleCriticalHitParamNameFr, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleCriticalHitParamNameIt", &UGlobalsDefinition::DamageDisplayParticleCriticalHitParamNameIt, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleCriticalHitParamNameDe", &UGlobalsDefinition::DamageDisplayParticleCriticalHitParamNameDe, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleCriticalHitParamValue", &UGlobalsDefinition::DamageDisplayParticleCriticalHitParamValue)
		.def_readwrite("DamageDisplaySortPriority", &UGlobalsDefinition::DamageDisplaySortPriority)
		.def_readwrite("AllSideMissionsCompleteAchievement", &UGlobalsDefinition::AllSideMissionsCompleteAchievement)
		.def_readwrite("ReviveAFriendAchievement", &UGlobalsDefinition::ReviveAFriendAchievement)
		.def_readwrite("MatchedSetPurplesAchievement", &UGlobalsDefinition::MatchedSetPurplesAchievement)
		.def_readwrite("KilledFlyingEnemyWithTedioreAchievement", &UGlobalsDefinition::KilledFlyingEnemyWithTedioreAchievement)
		.def_readwrite("CompletedAllChallengesLevelOneAchievement", &UGlobalsDefinition::CompletedAllChallengesLevelOneAchievement)
		.def_readwrite("CompletedASlaughterAchievement", &UGlobalsDefinition::CompletedASlaughterAchievement)
		.def_readwrite("DamageDisplayParticleResistParamName", &UGlobalsDefinition::DamageDisplayParticleResistParamName, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleResistParamValue", &UGlobalsDefinition::DamageDisplayParticleResistParamValue)
		.def_readwrite("DamageDisplayParticleResistColorParamName", &UGlobalsDefinition::DamageDisplayParticleResistColorParamName, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleHealingParamName", &UGlobalsDefinition::DamageDisplayParticleHealingParamName, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayParticleHealingParamValue", &UGlobalsDefinition::DamageDisplayParticleHealingParamValue)
		.def_readwrite("DamageDisplayParticleLanguageParamName", &UGlobalsDefinition::DamageDisplayParticleLanguageParamName, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayShortenParamName", &UGlobalsDefinition::DamageDisplayShortenParamName, py::return_value_policy::reference)
		.def_readwrite("DamageDisplayShortenDamageThreshold", &UGlobalsDefinition::DamageDisplayShortenDamageThreshold)
		.def_readwrite("DamageDisplayShortenDamageMultiplyBy", &UGlobalsDefinition::DamageDisplayShortenDamageMultiplyBy)
		.def_readwrite("VehicleControlDefinition", &UGlobalsDefinition::VehicleControlDefinition, py::return_value_policy::reference)
		.def_readwrite("DefaultWheelMaterialSoundEffect", &UGlobalsDefinition::DefaultWheelMaterialSoundEffect, py::return_value_policy::reference)
		.def_readwrite("VehicleTireDamageRepeatDelay", &UGlobalsDefinition::VehicleTireDamageRepeatDelay)
		.def_readwrite("VehicleFamilyDefinitions", &UGlobalsDefinition::VehicleFamilyDefinitions, py::return_value_policy::reference)
		.def_readwrite("VSSVehicleUIDefinitions", &UGlobalsDefinition::VSSVehicleUIDefinitions, py::return_value_policy::reference)
		.def_readwrite("DamageToApplyToVehiclesThatHitAIPawns", &UGlobalsDefinition::DamageToApplyToVehiclesThatHitAIPawns, py::return_value_policy::reference)
		.def_readwrite("VersusDuelGlobalsDef", &UGlobalsDefinition::VersusDuelGlobalsDef, py::return_value_policy::reference)
		.def_readwrite("ChallengeList", &UGlobalsDefinition::ChallengeList, py::return_value_policy::reference)
		.def_readwrite("CompletionThresholdNotification", &UGlobalsDefinition::CompletionThresholdNotification, py::return_value_policy::reference)
		.def_readwrite("MinimumGoalForNotification", &UGlobalsDefinition::MinimumGoalForNotification)
		.def_readwrite("PercentChallengeCompletionNeededForPrestige", &UGlobalsDefinition::PercentChallengeCompletionNeededForPrestige)
		.def_readwrite("CombatMusicProperties", &UGlobalsDefinition::CombatMusicProperties, py::return_value_policy::reference)
		.def_readwrite("BigDamageThreshold", &UGlobalsDefinition::BigDamageThreshold)
		.def_readwrite("MinBigDamageTime", &UGlobalsDefinition::MinBigDamageTime)
		.def_readwrite("MinSmallDamageTime", &UGlobalsDefinition::MinSmallDamageTime)
		.def_readwrite("BigDamageShakeMagnitude", &UGlobalsDefinition::BigDamageShakeMagnitude)
		.def_readwrite("SmallDamageShakeMagnitude", &UGlobalsDefinition::SmallDamageShakeMagnitude)
		.def_readwrite("BigDamageShake", &UGlobalsDefinition::BigDamageShake, py::return_value_policy::reference)
		.def_readwrite("SmallDamageShake", &UGlobalsDefinition::SmallDamageShake, py::return_value_policy::reference)
		.def_readwrite("HealingDamageTypeDefinition", &UGlobalsDefinition::HealingDamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("HealingImpactDefinition", &UGlobalsDefinition::HealingImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("AnnouncePickupRarityThreshold", &UGlobalsDefinition::AnnouncePickupRarityThreshold)
		.def_readwrite("PickupRadius", &UGlobalsDefinition::PickupRadius)
		.def_readwrite("CoopRange", &UGlobalsDefinition::CoopRange)
		.def_readwrite("DropImpactEffectMax", &UGlobalsDefinition::DropImpactEffectMax)
		.def_readwrite("DropImpactEffectDelay", &UGlobalsDefinition::DropImpactEffectDelay)
		.def_readwrite("DropImpactEffectThreshold", &UGlobalsDefinition::DropImpactEffectThreshold)
		.def_readwrite("DropImpactEffectVelocityAkRtpc", &UGlobalsDefinition::DropImpactEffectVelocityAkRtpc, py::return_value_policy::reference)
		.def_readwrite("LevelTransitionItemPool", &UGlobalsDefinition::LevelTransitionItemPool, py::return_value_policy::reference)
		.def_readwrite("InteractionDefaultSounds", &UGlobalsDefinition::InteractionDefaultSounds, py::return_value_policy::reference)
		.def_readwrite("TheTextMarkupDictionary", &UGlobalsDefinition::TheTextMarkupDictionary, py::return_value_policy::reference)
		.def_readwrite("DefaultAttributePresentation", &UGlobalsDefinition::DefaultAttributePresentation, py::return_value_policy::reference)
		.def_readwrite("ItemAttributePresentationOverride", &UGlobalsDefinition::ItemAttributePresentationOverride, py::return_value_policy::reference)
		.def_readwrite("ArtifactAttributePresentationOverride", &UGlobalsDefinition::ArtifactAttributePresentationOverride, py::return_value_policy::reference)
		.def_readwrite("ClassModAttributePresentationOverride", &UGlobalsDefinition::ClassModAttributePresentationOverride, py::return_value_policy::reference)
		.def_readwrite("GrenadeModAttributePresentationOverride", &UGlobalsDefinition::GrenadeModAttributePresentationOverride, py::return_value_policy::reference)
		.def_readwrite("ShieldAttributePresentationOverride", &UGlobalsDefinition::ShieldAttributePresentationOverride, py::return_value_policy::reference)
		.def_readwrite("WeaponAttributePresentationOverride", &UGlobalsDefinition::WeaponAttributePresentationOverride, py::return_value_policy::reference)
		.def_readwrite("AttributePresentationTranslation", &UGlobalsDefinition::AttributePresentationTranslation, py::return_value_policy::reference)
		.def_readwrite("EmptyConstraint", &UGlobalsDefinition::EmptyConstraint, py::return_value_policy::reference)
		.def_readwrite("MissingPresentation", &UGlobalsDefinition::MissingPresentation, py::return_value_policy::reference)
		.def_readwrite("LevelDependencyList", &UGlobalsDefinition::LevelDependencyList, py::return_value_policy::reference)
		.def_readwrite("PlayerAirControl", &UGlobalsDefinition::PlayerAirControl)
		.def_readwrite("DeveloperPerksDef", &UGlobalsDefinition::DeveloperPerksDef, py::return_value_policy::reference)
		.def_readwrite("CustomizationsToUnlockForLoyalCustomers", &UGlobalsDefinition::CustomizationsToUnlockForLoyalCustomers, py::return_value_policy::reference)
		.def_readwrite("MaxAllowedPlayThroughs", &UGlobalsDefinition::MaxAllowedPlayThroughs)
		.def_readwrite("AchievementData", &UGlobalsDefinition::AchievementData, py::return_value_policy::reference)
		.def_readwrite("MissionChainsEligibleForSlaughterAchievement", &UGlobalsDefinition::MissionChainsEligibleForSlaughterAchievement, py::return_value_policy::reference)
		.def_readwrite("PartItemHoverFade", &UGlobalsDefinition::PartItemHoverFade, py::return_value_policy::reference)
		.def_readwrite("PartItemHover", &UGlobalsDefinition::PartItemHover, py::return_value_policy::reference)
		.def_readwrite("PartPickup", &UGlobalsDefinition::PartPickup, py::return_value_policy::reference)
		.def_readwrite("PartLootable", &UGlobalsDefinition::PartLootable, py::return_value_policy::reference)
		.def_readwrite("PartLootableHoverOffset", &UGlobalsDefinition::PartLootableHoverOffset, py::return_value_policy::reference)
		.def_readwrite("PartPickupHoverOffset", &UGlobalsDefinition::PartPickupHoverOffset, py::return_value_policy::reference)
		.def_readwrite("HoverWidthPickup", &UGlobalsDefinition::HoverWidthPickup)
		.def_readwrite("HoverWidthLootable", &UGlobalsDefinition::HoverWidthLootable)
		.def_readwrite("ItemHoverProjectionHeight", &UGlobalsDefinition::ItemHoverProjectionHeight)
		.def_readwrite("ItemPickupCardMovie", &UGlobalsDefinition::ItemPickupCardMovie, py::return_value_policy::reference)
		.def_readwrite("HoverIconMaterial", &UGlobalsDefinition::HoverIconMaterial, py::return_value_policy::reference)
		.def_readwrite("CardHeightPitchFactor", &UGlobalsDefinition::CardHeightPitchFactor)
		.def_readwrite("CardHeightPitchDeadZone", &UGlobalsDefinition::CardHeightPitchDeadZone)
		.def_readwrite("CardHeightDistanceFactor", &UGlobalsDefinition::CardHeightDistanceFactor)
		.def_readwrite("CardHeightCombatFactor", &UGlobalsDefinition::CardHeightCombatFactor)
		.def_readwrite("PickupSpinHMin", &UGlobalsDefinition::PickupSpinHMin)
		.def_readwrite("PickupSpinHMax", &UGlobalsDefinition::PickupSpinHMax)
		.def_readwrite("PickupSpinVMin", &UGlobalsDefinition::PickupSpinVMin)
		.def_readwrite("PickupSpinVMax", &UGlobalsDefinition::PickupSpinVMax)
		.def_readwrite("DayNightCycleRate", &UGlobalsDefinition::DayNightCycleRate)
		.def_readwrite("ProtectionTimerThreshold", &UGlobalsDefinition::ProtectionTimerThreshold)
		.def_readwrite("ProtectionTimerDurationInSeconds", &UGlobalsDefinition::ProtectionTimerDurationInSeconds)
		.def_readwrite("ProtectionTimerMaintainedMaxHealthPct", &UGlobalsDefinition::ProtectionTimerMaintainedMaxHealthPct)
		.def_readwrite("InputContexts", &UGlobalsDefinition::InputContexts, py::return_value_policy::reference)
		.def_readwrite("InputDeviceCollection", &UGlobalsDefinition::InputDeviceCollection, py::return_value_policy::reference)
		.def_readwrite("ControllerPresetsPS3", &UGlobalsDefinition::ControllerPresetsPS3, py::return_value_policy::reference)
		.def_readwrite("ControllerPresetsXbox360", &UGlobalsDefinition::ControllerPresetsXbox360, py::return_value_policy::reference)
		.def_readwrite("MinutesBetweenShopResets", &UGlobalsDefinition::MinutesBetweenShopResets)
		.def_readwrite("ShopResetCost", &UGlobalsDefinition::ShopResetCost, py::return_value_policy::reference)
		.def_readwrite("DefaultShieldColor", &UGlobalsDefinition::DefaultShieldColor, py::return_value_policy::reference)
		.def_readwrite("CommonClassMods", &UGlobalsDefinition::CommonClassMods, py::return_value_policy::reference)
		.def_readwrite("UncommonClassMods", &UGlobalsDefinition::UncommonClassMods, py::return_value_policy::reference)
		.def_readwrite("RareClassMods", &UGlobalsDefinition::RareClassMods, py::return_value_policy::reference)
		.def_readwrite("VeryRareClassMods", &UGlobalsDefinition::VeryRareClassMods, py::return_value_policy::reference)
		.def_readwrite("LegendaryClassMods", &UGlobalsDefinition::LegendaryClassMods, py::return_value_policy::reference)
		.def_readwrite("SlayerOfTerramorphousClassMods", &UGlobalsDefinition::SlayerOfTerramorphousClassMods, py::return_value_policy::reference)
		.def_readwrite("MissionAcceptDefinition", &UGlobalsDefinition::MissionAcceptDefinition, py::return_value_policy::reference)
		.def_readwrite("VoGMovieDefinition", &UGlobalsDefinition::VoGMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("PauseMenuDefinition", &UGlobalsDefinition::PauseMenuDefinition, py::return_value_policy::reference)
		.def_readwrite("TradingMovieDefinition", &UGlobalsDefinition::TradingMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("UBMGameOverMovieDefinition", &UGlobalsDefinition::UBMGameOverMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("BuddyPlaneDefinition", &UGlobalsDefinition::BuddyPlaneDefinition, py::return_value_policy::reference)
		.def_readwrite("OnlineMessageMovieDefinition", &UGlobalsDefinition::OnlineMessageMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("TextChatMovieDefinition", &UGlobalsDefinition::TextChatMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("HUDScaleGuideMovieDefinition", &UGlobalsDefinition::HUDScaleGuideMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("LobbyMovieDefinition", &UGlobalsDefinition::LobbyMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("LoadCharacterMovieDefinition", &UGlobalsDefinition::LoadCharacterMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("ItemInspectionMovieDefinition", &UGlobalsDefinition::ItemInspectionMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("WeaponScopeMovieDefinition", &UGlobalsDefinition::WeaponScopeMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("DLCCharacterIconSwfMovie", &UGlobalsDefinition::DLCCharacterIconSwfMovie, py::return_value_policy::reference)
		.def_readwrite("PPOverride", &UGlobalsDefinition::PPOverride, py::return_value_policy::reference)
		.def_readwrite("MissionCreditRewardFormula", &UGlobalsDefinition::MissionCreditRewardFormula, py::return_value_policy::reference)
		.def_readwrite("MissionReadyToTurnInAkEvent", &UGlobalsDefinition::MissionReadyToTurnInAkEvent, py::return_value_policy::reference)
		.def_readwrite("ActiveMissionChangedAkEvent", &UGlobalsDefinition::ActiveMissionChangedAkEvent, py::return_value_policy::reference)
		.def_readwrite("MissionObjectiveCompleteAkEvent", &UGlobalsDefinition::MissionObjectiveCompleteAkEvent, py::return_value_policy::reference)
		.def_readwrite("MissionObjectiveIncrementedAkEvent", &UGlobalsDefinition::MissionObjectiveIncrementedAkEvent, py::return_value_policy::reference)
		.def_readwrite("MissionObjectiveClearedAkEvent", &UGlobalsDefinition::MissionObjectiveClearedAkEvent, py::return_value_policy::reference)
		.def_readwrite("MissionTurnedInAkEvent", &UGlobalsDefinition::MissionTurnedInAkEvent, py::return_value_policy::reference)
		.def_readwrite("NewMissionAcceptedAkEvent", &UGlobalsDefinition::NewMissionAcceptedAkEvent, py::return_value_policy::reference)
		.def_readwrite("MissionAvailabilityTimer", &UGlobalsDefinition::MissionAvailabilityTimer)
		.def_readwrite("LevelDifference_Impossible", &UGlobalsDefinition::LevelDifference_Impossible)
		.def_readwrite("LevelDifference_Hard", &UGlobalsDefinition::LevelDifference_Hard)
		.def_readwrite("LevelDifference_Tough", &UGlobalsDefinition::LevelDifference_Tough)
		.def_readwrite("LevelDifference_Normal", &UGlobalsDefinition::LevelDifference_Normal)
		.def_readwrite("MissionGlowColorParameter", &UGlobalsDefinition::MissionGlowColorParameter, py::return_value_policy::reference)
		.def_readwrite("FirstWeaponMission", &UGlobalsDefinition::FirstWeaponMission, py::return_value_policy::reference)
		.def_readwrite("DefaultWeapon", &UGlobalsDefinition::DefaultWeapon, py::return_value_policy::reference)
		.def_readwrite("MissionDirectorParticleSystem", &UGlobalsDefinition::MissionDirectorParticleSystem, py::return_value_policy::reference)
		.def_readwrite("MissionDirectorParticleSocket", &UGlobalsDefinition::MissionDirectorParticleSocket, py::return_value_policy::reference)
		.def_readwrite("MissionDirectorIconSelectParameterName", &UGlobalsDefinition::MissionDirectorIconSelectParameterName, py::return_value_policy::reference)
		.def_readwrite("MissionDirectorEligibleMissionsParameter", &UGlobalsDefinition::MissionDirectorEligibleMissionsParameter)
		.def_readwrite("MissionDirectorRedeemableMissionsParameter", &UGlobalsDefinition::MissionDirectorRedeemableMissionsParameter)
		.def_readwrite("MissionDirectorIconColorParameterName", &UGlobalsDefinition::MissionDirectorIconColorParameterName, py::return_value_policy::reference)
		.def_readwrite("MissionDirectorIconColor", &UGlobalsDefinition::MissionDirectorIconColor, py::return_value_policy::reference)
		.def_readwrite("MissionDirectorIconSizeParameterName", &UGlobalsDefinition::MissionDirectorIconSizeParameterName, py::return_value_policy::reference)
		.def_readwrite("MissionDirectorIconSize", &UGlobalsDefinition::MissionDirectorIconSize, py::return_value_policy::reference)
		.def_readwrite("PickupDirectorIconOffset", &UGlobalsDefinition::PickupDirectorIconOffset)
		.def_readwrite("FocusSocketName", &UGlobalsDefinition::FocusSocketName, py::return_value_policy::reference)
		.def_readwrite("MissionPickupFailsafeSeconds", &UGlobalsDefinition::MissionPickupFailsafeSeconds)
		.def_readwrite("MissionPickupFailsafeZ", &UGlobalsDefinition::MissionPickupFailsafeZ)
		.def_readwrite("WaypointSocketName", &UGlobalsDefinition::WaypointSocketName, py::return_value_policy::reference)
		.def_readwrite("MaxTimeBetweenSpreeKills", &UGlobalsDefinition::MaxTimeBetweenSpreeKills)
		.def_readwrite("QuickshotTimer", &UGlobalsDefinition::QuickshotTimer)
		.def_readwrite("PointBlankDistance", &UGlobalsDefinition::PointBlankDistance)
		.def_readwrite("ShotgunLongshot", &UGlobalsDefinition::ShotgunLongshot)
		.def_readwrite("LauncherLongshot", &UGlobalsDefinition::LauncherLongshot)
		.def_readwrite("PistolLongshot", &UGlobalsDefinition::PistolLongshot)
		.def_readwrite("NumLevelUpKillStatThreshold", &UGlobalsDefinition::NumLevelUpKillStatThreshold)
		.def_readwrite("PctOfBleedoutToSecondWind", &UGlobalsDefinition::PctOfBleedoutToSecondWind)
		.def_readwrite("MarketingUnlocks", &UGlobalsDefinition::MarketingUnlocks, py::return_value_policy::reference)
		.def_readwrite("HUDDefinition", &UGlobalsDefinition::HUDDefinition, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Use", &UGlobalsDefinition::InteractionIcon_Default_Use, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Talk", &UGlobalsDefinition::InteractionIcon_Default_Talk, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Heal", &UGlobalsDefinition::InteractionIcon_Default_Heal, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Shop", &UGlobalsDefinition::InteractionIcon_Default_Shop, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Computer", &UGlobalsDefinition::InteractionIcon_Default_Computer, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Smash", &UGlobalsDefinition::InteractionIcon_Default_Smash, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_CannotUse", &UGlobalsDefinition::InteractionIcon_Default_CannotUse, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Vehicle_Driver", &UGlobalsDefinition::InteractionIcon_Default_Vehicle_Driver, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Vehicle_Gunner", &UGlobalsDefinition::InteractionIcon_Default_Vehicle_Gunner, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Vehicle_MiddleLeft", &UGlobalsDefinition::InteractionIcon_Default_Vehicle_MiddleLeft, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Vehicle_MiddleRight", &UGlobalsDefinition::InteractionIcon_Default_Vehicle_MiddleRight, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Vehicle_Flip", &UGlobalsDefinition::InteractionIcon_Default_Vehicle_Flip, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_Objective", &UGlobalsDefinition::InteractionIcon_Default_Objective, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_PickUp", &UGlobalsDefinition::InteractionIcon_Default_PickUp, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_Default_CannotPickUp", &UGlobalsDefinition::InteractionIcon_Default_CannotPickUp, py::return_value_policy::reference)
		.def_readwrite("InteractionIcon_AlreadyDiscoveredObject", &UGlobalsDefinition::InteractionIcon_AlreadyDiscoveredObject, py::return_value_policy::reference)
		.def_readwrite("KillReviveDefinition", &UGlobalsDefinition::KillReviveDefinition, py::return_value_policy::reference)
		.def_readwrite("AICloseThreatRadius", &UGlobalsDefinition::AICloseThreatRadius)
		.def_readwrite("AIMinAttackDistance", &UGlobalsDefinition::AIMinAttackDistance)
		.def_readwrite("AIMinVertAttackDistance", &UGlobalsDefinition::AIMinVertAttackDistance)
		.def_readwrite("MaxDistanceForTrade", &UGlobalsDefinition::MaxDistanceForTrade)
		.def_readwrite("DefaultFOV", &UGlobalsDefinition::DefaultFOV)
		.def_readwrite("UnarmedFirstPersonFOV", &UGlobalsDefinition::UnarmedFirstPersonFOV)
		.def_readwrite("UnarmedPlayerViewOffset", &UGlobalsDefinition::UnarmedPlayerViewOffset, py::return_value_policy::reference)
		.def_readwrite("OverchargedLightProjectileImpactTemplate", &UGlobalsDefinition::OverchargedLightProjectileImpactTemplate, py::return_value_policy::reference)
		.def_readwrite("OverchargedProjectileTrailTemplate", &UGlobalsDefinition::OverchargedProjectileTrailTemplate, py::return_value_policy::reference)
		.def_readwrite("DigistructInWeaponEffect", &UGlobalsDefinition::DigistructInWeaponEffect, py::return_value_policy::reference)
		.def_readwrite("DigistructOutWeaponEffect", &UGlobalsDefinition::DigistructOutWeaponEffect, py::return_value_policy::reference)
		.def_readwrite("FractalWanderDef", &UGlobalsDefinition::FractalWanderDef, py::return_value_policy::reference)
		.def_readwrite("RespawnCameraDistanceNozzleOneAndTwo", &UGlobalsDefinition::RespawnCameraDistanceNozzleOneAndTwo)
		.def_readwrite("RespawnCameraOffsetZNozzleOneAndTwo", &UGlobalsDefinition::RespawnCameraOffsetZNozzleOneAndTwo)
		.def_readwrite("RespawnCameraDistanceNozzleThreeAndFour", &UGlobalsDefinition::RespawnCameraDistanceNozzleThreeAndFour)
		.def_readwrite("RespawnCameraOffsetZNozzleThreeAndFour", &UGlobalsDefinition::RespawnCameraOffsetZNozzleThreeAndFour)
		.def_readwrite("RespawnCameraLerpTime", &UGlobalsDefinition::RespawnCameraLerpTime)
		.def_readwrite("RespawnCameraLookAtOffsetZ", &UGlobalsDefinition::RespawnCameraLookAtOffsetZ)
		.def_readwrite("RespawnDelayBeforeCoordinatedEffect", &UGlobalsDefinition::RespawnDelayBeforeCoordinatedEffect)
		.def_readwrite("RespawnStartAkEvent", &UGlobalsDefinition::RespawnStartAkEvent, py::return_value_policy::reference)
		.def_readwrite("RespawnStopAkEvent", &UGlobalsDefinition::RespawnStopAkEvent, py::return_value_policy::reference)
		.def_readwrite("RespawnHeadZoomAkEvent", &UGlobalsDefinition::RespawnHeadZoomAkEvent, py::return_value_policy::reference)
		.def_readwrite("InjuredDeadCameraStartDistance", &UGlobalsDefinition::InjuredDeadCameraStartDistance)
		.def_readwrite("InjuredDeadCameraEndDistance", &UGlobalsDefinition::InjuredDeadCameraEndDistance)
		.def_readwrite("InjuredDeadCameraLerpTime", &UGlobalsDefinition::InjuredDeadCameraLerpTime)
		.def_readwrite("InjuredDeadCameraRotation", &UGlobalsDefinition::InjuredDeadCameraRotation, py::return_value_policy::reference)
		.def_readwrite("InjuredDeadDelayBetweenDeathAnimAndDigistruct", &UGlobalsDefinition::InjuredDeadDelayBetweenDeathAnimAndDigistruct)
		.def_readwrite("InjuredDeadDelayBeforeDigistructKillVolume", &UGlobalsDefinition::InjuredDeadDelayBeforeDigistructKillVolume)
		.def_readwrite("DigistructCoordinatedEffect", &UGlobalsDefinition::DigistructCoordinatedEffect, py::return_value_policy::reference)
		.def_readwrite("DigistructCoordinatedEffectKillVolume", &UGlobalsDefinition::DigistructCoordinatedEffectKillVolume, py::return_value_policy::reference)
		.def_readwrite("InjuredDeadBoneName", &UGlobalsDefinition::InjuredDeadBoneName, py::return_value_policy::reference)
		.def_readwrite("InjuredDeadStartAkEvent", &UGlobalsDefinition::InjuredDeadStartAkEvent, py::return_value_policy::reference)
		.def_readwrite("InjuredDeadStopAkEvent", &UGlobalsDefinition::InjuredDeadStopAkEvent, py::return_value_policy::reference)
		.def_readwrite("EnemyFadeoutEffect", &UGlobalsDefinition::EnemyFadeoutEffect, py::return_value_policy::reference)
		.def_readwrite("CrushedAkEvent", &UGlobalsDefinition::CrushedAkEvent, py::return_value_policy::reference)
		.def_readwrite("BadassPointsPerRank", &UGlobalsDefinition::BadassPointsPerRank)
		.def_readwrite("BadassRanksForToken", &UGlobalsDefinition::BadassRanksForToken, py::return_value_policy::reference)
		.def_readwrite("BadassRewards", &UGlobalsDefinition::BadassRewards, py::return_value_policy::reference)
		.def_readwrite("BadassSkill", &UGlobalsDefinition::BadassSkill, py::return_value_policy::reference)
		.def_readwrite("BlackMarketUpgrades", &UGlobalsDefinition::BlackMarketUpgrades, py::return_value_policy::reference)
		.def_readwrite("BlackMarketCostMultiplier", &UGlobalsDefinition::BlackMarketCostMultiplier, py::return_value_policy::reference)
		.def_readwrite("BlackMarketCostOffset", &UGlobalsDefinition::BlackMarketCostOffset, py::return_value_policy::reference)
		.def_readwrite("DefaultBankSlots", &UGlobalsDefinition::DefaultBankSlots, py::return_value_policy::reference)
		.def_readwrite("DawnTime", &UGlobalsDefinition::DawnTime)
		.def_readwrite("DuskTime", &UGlobalsDefinition::DuskTime)
		.def_readwrite("MaxDollars", &UGlobalsDefinition::MaxDollars)
		.def_readwrite("MaxEridium", &UGlobalsDefinition::MaxEridium)
		.def_readwrite("Currencies", &UGlobalsDefinition::Currencies, py::return_value_policy::reference)
		.def_readwrite("StandInTeleportEffect", &UGlobalsDefinition::StandInTeleportEffect, py::return_value_policy::reference)
		.def_readwrite("StandInHideEffect", &UGlobalsDefinition::StandInHideEffect, py::return_value_policy::reference)
		.def_readwrite("CustomizationApplicationStartEffect", &UGlobalsDefinition::CustomizationApplicationStartEffect, py::return_value_policy::reference)
		.def_readwrite("CustomizationApplicationEffectSkin", &UGlobalsDefinition::CustomizationApplicationEffectSkin, py::return_value_policy::reference)
		.def_readwrite("CustomizationApplicationEffectHead", &UGlobalsDefinition::CustomizationApplicationEffectHead, py::return_value_policy::reference)
		.def_readwrite("BinkMovieVolumeScaleFactor", &UGlobalsDefinition::BinkMovieVolumeScaleFactor)
		.def("eventGetDLCCharacterIconSwfMoviePath", &UGlobalsDefinition::eventGetDLCCharacterIconSwfMoviePath, py::return_value_policy::reference)
		.def("FindUnlockDefinitionForUnlockCode", &UGlobalsDefinition::FindUnlockDefinitionForUnlockCode, py::return_value_policy::reference)
		.def("ApplySpinToPickup", &UGlobalsDefinition::ApplySpinToPickup)
		.def("ShouldUsePC360Buttons", &UGlobalsDefinition::ShouldUsePC360Buttons)
		.def("GetStatusEffectTypeProperties", &UGlobalsDefinition::GetStatusEffectTypeProperties)
		.def("GetStatusEffectChanceBasedOnExpLevelDifferences", &UGlobalsDefinition::GetStatusEffectChanceBasedOnExpLevelDifferences)
		.def("GetAttributePresentationForAttribute", &UGlobalsDefinition::GetAttributePresentationForAttribute, py::return_value_policy::reference)
		.def("GetDropLifeSpanType", &UGlobalsDefinition::GetDropLifeSpanType)
		.def("GetRarityColorForRarityRating", &UGlobalsDefinition::GetRarityColorForRarityRating, py::return_value_policy::reference)
		.def("GetRarityColorForLevel", &UGlobalsDefinition::GetRarityColorForLevel, py::return_value_policy::reference)
		.def("GetRarityForLevel", &UGlobalsDefinition::GetRarityForLevel)
		;
	py::class_< UHitRegionHelper, UObject >(m, "UHitRegionHelper")
		.def_readwrite("HitRegionDamageList", &UHitRegionHelper::HitRegionDamageList, py::return_value_policy::reference)
		.def("PlayHit", &UHitRegionHelper::PlayHit)
		.def("ResetHitRegionHealth", &UHitRegionHelper::ResetHitRegionHealth)
		.def("HealDamageOnHitRegion", &UHitRegionHelper::HealDamageOnHitRegion)
		.def("GetBoneNameFromHitComponent", &UHitRegionHelper::GetBoneNameFromHitComponent, py::return_value_policy::reference)
		.def("GetHitRegionFromInstanceData", &UHitRegionHelper::GetHitRegionFromInstanceData, py::return_value_policy::reference)
		.def("GetHitRegionFromBoneName", &UHitRegionHelper::GetHitRegionFromBoneName, py::return_value_policy::reference)
		.def("GetHitRegionForTakenDamage", &UHitRegionHelper::GetHitRegionForTakenDamage, py::return_value_policy::reference)
		.def("AddDamageToHitRegion", &UHitRegionHelper::AddDamageToHitRegion)
		.def("RecordRecentDamageToHitRegion", &UHitRegionHelper::RecordRecentDamageToHitRegion)
		.def("PlayHealing", &UHitRegionHelper::PlayHealing)
		.def("PlayDamage", &UHitRegionHelper::PlayDamage)
		.def("PlayReplicatedDamage", &UHitRegionHelper::PlayReplicatedDamage)
		.def("GetHealthValuesForOwner", [](UHitRegionHelper &self , class AActor* Owner) { float* pyHealth = (float*)malloc(sizeof(float)) ; float* pyMaxHealth = (float*)malloc(sizeof(float)) ;   self.GetHealthValuesForOwner(Owner, pyHealth, pyMaxHealth); return py::make_tuple(*pyHealth, *pyMaxHealth); })
		.def("GetHitRegionHealthValues", [](UHitRegionHelper &self , class AActor* Owner, class UBodyHitRegionDefinition* HitRegion, float HitRegionHealthMultiplier) { float* pyHealth = (float*)malloc(sizeof(float)) ; float* pyMaxHealth = (float*)malloc(sizeof(float)) ;   self.GetHitRegionHealthValues(Owner, HitRegion, HitRegionHealthMultiplier, pyHealth, pyMaxHealth); return py::make_tuple(*pyHealth, *pyMaxHealth); })
		;
	py::class_< UIAnimProvider, UInterface >(m, "UIAnimProvider")
		.def("GetAnims", &UIAnimProvider::GetAnims)
		;
	py::class_< UIAttachableActor, UInterface >(m, "UIAttachableActor")
		.def("GetAttachedToActor", &UIAttachableActor::GetAttachedToActor, py::return_value_policy::reference)
		.def("GetAttachmentNormal", &UIAttachableActor::GetAttachmentNormal, py::return_value_policy::reference)
		.def("AttachToActor", &UIAttachableActor::AttachToActor)
		.def("IsAttached", &UIAttachableActor::IsAttached)
		;
	py::class_< UIBodyPawn, UInterface >(m, "UIBodyPawn")
		.def("GetAWillowAIPawn", &UIBodyPawn::GetAWillowAIPawn, py::return_value_policy::reference)
		.def("GetAWillowPlayerPawn", &UIBodyPawn::GetAWillowPlayerPawn, py::return_value_policy::reference)
		.def("GetAWillowPawn", &UIBodyPawn::GetAWillowPawn, py::return_value_policy::reference)
		;
	py::class_< UIControllerLocator, UInterface >(m, "UIControllerLocator")
		.def("GetAWillowMind", &UIControllerLocator::GetAWillowMind, py::return_value_policy::reference)
		.def("GetAWillowPlayerController", &UIControllerLocator::GetAWillowPlayerController, py::return_value_policy::reference)
		.def("GetABaseController", &UIControllerLocator::GetABaseController, py::return_value_policy::reference)
		;
	py::class_< UICustomizable, UInterface >(m, "UICustomizable")
		.def("AllowFallbackToDefaultCustomizations", &UICustomizable::AllowFallbackToDefaultCustomizations)
		.def("RefreshCustomizationsOnInstanceData", &UICustomizable::RefreshCustomizationsOnInstanceData)
		.def("GetCustomizableName", &UICustomizable::GetCustomizableName, py::return_value_policy::reference)
		.def("GetDesiredCustomizationOfType", &UICustomizable::GetDesiredCustomizationOfType, py::return_value_policy::reference)
		.def("CustomizationApplied", &UICustomizable::CustomizationApplied)
		.def("GetCustomizableInstanceDataSets", &UICustomizable::GetCustomizableInstanceDataSets)
		;
	py::class_< UIDamageable, UInterface >(m, "UIDamageable")
		.def("GetDamageSurfaceTypeFromHit", &UIDamageable::GetDamageSurfaceTypeFromHit)
		.def("GetIntrinsicArmor", &UIDamageable::GetIntrinsicArmor)
		.def("OnShieldDepleted", &UIDamageable::OnShieldDepleted)
		.def("SetShieldStrength", &UIDamageable::SetShieldStrength)
		.def("GetMaxShieldStrength", &UIDamageable::GetMaxShieldStrength)
		.def("GetShieldStrength", &UIDamageable::GetShieldStrength)
		.def("NotifyDamageTaken", &UIDamageable::NotifyDamageTaken)
		.def("ShieldAbsorbedAmmo", [](UIDamageable &self , class UClass* DamageSource, class UWillowDamageTypeDefinition* DamageTypeDef) { float* pyDamagePercentToAbsorb = (float*)malloc(sizeof(float)) ;  bool ret =  self.ShieldAbsorbedAmmo(DamageSource, DamageTypeDef, pyDamagePercentToAbsorb); return py::make_tuple(ret, *pyDamagePercentToAbsorb); })
		;
	py::class_< UIDamageSurface, UInterface >(m, "UIDamageSurface")
		.def("IsFullyArmored", &UIDamageSurface::IsFullyArmored)
		.def("GetDamageSurfaceTypeFromHit", &UIDamageSurface::GetDamageSurfaceTypeFromHit)
		.def("GetDefaultDamageSurfaceType", &UIDamageSurface::GetDefaultDamageSurfaceType)
		;
	py::class_< UIDesignerAttributeProvider, UInterface >(m, "UIDesignerAttributeProvider")
		.def("eventGetInstancedDesignerAttribute", &UIDesignerAttributeProvider::eventGetInstancedDesignerAttribute, py::return_value_policy::reference)
		;
	py::class_< UIDlcLicensableObject, UInterface >(m, "UIDlcLicensableObject")
		.def("GetDownloadableContentDefinition", &UIDlcLicensableObject::GetDownloadableContentDefinition, py::return_value_policy::reference)
		;
	py::class_< UIDlcLicenseObject, UInterface >(m, "UIDlcLicenseObject")
		;
	py::class_< UIDrunkenProjectile, UInterface >(m, "UIDrunkenProjectile")
		.def("SetDrunkenRandomNumberSeed", &UIDrunkenProjectile::SetDrunkenRandomNumberSeed)
		;
	py::class_< UIDynamicObstacle, UInterface >(m, "UIDynamicObstacle")
		.def("GetObstacleInfo", &UIDynamicObstacle::GetObstacleInfo)
		.def("GetObstacleActor", &UIDynamicObstacle::GetObstacleActor, py::return_value_policy::reference)
		.def("GetMagnetData", &UIDynamicObstacle::GetMagnetData)
		.def("SetObstacleVelocity", &UIDynamicObstacle::SetObstacleVelocity)
		.def("CanAvoidObstacle", &UIDynamicObstacle::CanAvoidObstacle)
		.def("CanAvoidObstacles", &UIDynamicObstacle::CanAvoidObstacles)
		.def("SetObstacleActive", &UIDynamicObstacle::SetObstacleActive)
		.def("IsObstacleActive", &UIDynamicObstacle::IsObstacleActive)
		;
	py::class_< UIExtraImpactEffects, UInterface >(m, "UIExtraImpactEffects")
		.def("PlayExtraImpactEffects", &UIExtraImpactEffects::PlayExtraImpactEffects)
		.def("SetExtraImpactEffect", &UIExtraImpactEffects::SetExtraImpactEffect)
		;
	py::class_< UIFocusable, UInterface >(m, "UIFocusable")
		.def("GetFocusScreenOffset", &UIFocusable::GetFocusScreenOffset, py::return_value_policy::reference)
		.def("GetFocusRadius", &UIFocusable::GetFocusRadius)
		.def("GetFocusLocation", &UIFocusable::GetFocusLocation, py::return_value_policy::reference)
		.def("EndFocus", &UIFocusable::EndFocus)
		.def("BeginFocus", &UIFocusable::BeginFocus)
		;
	py::class_< UIGearLikenessConsumer, UInterface >(m, "UIGearLikenessConsumer")
		.def("ShouldRefreshLikenessOf", &UIGearLikenessConsumer::ShouldRefreshLikenessOf)
		.def("AssumeLikenessOf", &UIGearLikenessConsumer::AssumeLikenessOf)
		;
	py::class_< UIHealable, UInterface >(m, "UIHealable")
		.def("RemoveAllStatusEffects", &UIHealable::RemoveAllStatusEffects)
		.def("FullyReplenishShields", &UIHealable::FullyReplenishShields)
		.def("FullyReplenishLife", &UIHealable::FullyReplenishLife)
		;
	py::class_< UIHitRegionConsumer, UInterface >(m, "UIHitRegionConsumer")
		.def("PlayHit", &UIHitRegionConsumer::PlayHit)
		.def("ResetHitRegionHealth", &UIHitRegionConsumer::ResetHitRegionHealth)
		.def("HealDamageOnHitRegion", &UIHitRegionConsumer::HealDamageOnHitRegion)
		.def("PlayHealingReaction", &UIHitRegionConsumer::PlayHealingReaction)
		.def("PlayDamageReaction", &UIHitRegionConsumer::PlayDamageReaction)
		.def("ReplicateDamageEffect", &UIHitRegionConsumer::ReplicateDamageEffect)
		.def("AddDamageToHitRegion", &UIHitRegionConsumer::AddDamageToHitRegion)
		.def("GetHitRegionForTakenDamage", &UIHitRegionConsumer::GetHitRegionForTakenDamage, py::return_value_policy::reference)
		.def("GetHitRegionHealthValues", [](UIHitRegionConsumer &self , class UBodyHitRegionDefinition* HitRegion) { float* pyHealth = (float*)malloc(sizeof(float)) ; float* pyMaxHealth = (float*)malloc(sizeof(float)) ;   self.GetHitRegionHealthValues(HitRegion, pyHealth, pyMaxHealth); return py::make_tuple(*pyHealth, *pyMaxHealth); })
		;
	py::class_< UIHitRegionInfoProvider, UInterface >(m, "UIHitRegionInfoProvider")
		.def("GetHitRegions", [](UIHitRegionInfoProvider &self , TArray< class UBodyHitRegionDefinition* >* Regions) { class UBodyHitRegionDefinition** pyDefaultRegion = 0 ;   self.GetHitRegions(Regions, pyDefaultRegion); return py::make_tuple(*pyDefaultRegion); })
		;
	py::class_< UIStatusEffectTarget, UIHitRegionInfoProvider >(m, "UIStatusEffectTarget")
		.def("CanReceiveStatusEffects", &UIStatusEffectTarget::CanReceiveStatusEffects)
		.def("ReactToPrimaryStatusEffect", &UIStatusEffectTarget::ReactToPrimaryStatusEffect)
		.def("Behavior_ClearStatusEffects", &UIStatusEffectTarget::Behavior_ClearStatusEffects)
		.def("GetAttributeContextSource", &UIStatusEffectTarget::GetAttributeContextSource, py::return_value_policy::reference)
		.def("GetDefaultDamageSurfaceType", &UIStatusEffectTarget::GetDefaultDamageSurfaceType)
		.def("GetBoundingSphereRadius", &UIStatusEffectTarget::GetBoundingSphereRadius)
		.def("AttachEmitter", &UIStatusEffectTarget::AttachEmitter)
		.def("GetDefaultStatusEffectsParticleSystemTemplate", &UIStatusEffectTarget::GetDefaultStatusEffectsParticleSystemTemplate, py::return_value_policy::reference)
		.def("GetDefaultStatusEffectSockets", &UIStatusEffectTarget::GetDefaultStatusEffectSockets, py::return_value_policy::reference)
		.def("GetStatusEffectsComponent", &UIStatusEffectTarget::GetStatusEffectsComponent, py::return_value_policy::reference)
		;
	py::class_< UIItemCardable, UInterface >(m, "UIItemCardable")
		.def("IsUsefulToThisPlayer", &UIItemCardable::IsUsefulToThisPlayer)
		.def("IsReadied", &UIItemCardable::IsReadied)
		.def("GetDLCRestrictedMessage", &UIItemCardable::GetDLCRestrictedMessage, py::return_value_policy::reference)
		.def("IsDLCRequirementMet", &UIItemCardable::IsDLCRequirementMet)
		.def("GetMonetaryValue", &UIItemCardable::GetMonetaryValue)
		.def("GetCurrencyTypeInventoryIsValuedIn", &UIItemCardable::GetCurrencyTypeInventoryIsValuedIn)
		.def("GetElementalFrame", &UIItemCardable::GetElementalFrame, py::return_value_policy::reference)
		.def("GetZippyFrame", &UIItemCardable::GetZippyFrame, py::return_value_policy::reference)
		.def("GetRarityLevel", &UIItemCardable::GetRarityLevel)
		.def("GetShortHumanReadableName", &UIItemCardable::GetShortHumanReadableName, py::return_value_policy::reference)
		.def("GetManufacturer", &UIItemCardable::GetManufacturer, py::return_value_policy::reference)
		.def("GenerateFunStatsText", &UIItemCardable::GenerateFunStatsText, py::return_value_policy::reference)
		.def("GetInventoryStatTextData", &UIItemCardable::GetInventoryStatTextData)
		.def("GetInventoryStatNumberData", &UIItemCardable::GetInventoryStatNumberData)
		.def("IsLevelRequirementMet", [](UIItemCardable &self , class AController* C) { int* pyRequiredLevel = (int*)malloc(sizeof(int)) ;  bool ret =  self.IsLevelRequirementMet(C, pyRequiredLevel); return py::make_tuple(ret, *pyRequiredLevel); })
		;
	py::class_< UILevelChallengeObject, UInterface >(m, "UILevelChallengeObject")
		.def("SetOverrideProgressNumber", &UILevelChallengeObject::SetOverrideProgressNumber)
		.def("SetOverrideAssociatedChallenge", &UILevelChallengeObject::SetOverrideAssociatedChallenge)
		.def("GetProgressNumber", &UILevelChallengeObject::GetProgressNumber)
		.def("GetAssociatedChallenge", &UILevelChallengeObject::GetAssociatedChallenge, py::return_value_policy::reference)
		;
	py::class_< UILootable, UInterface >(m, "UILootable")
		.def("WillLootableBeResetOnLevelLoad", &UILootable::WillLootableBeResetOnLevelLoad)
		.def("GetDroppedLoot", &UILootable::GetDroppedLoot)
		.def("GetAttachedLoot", &UILootable::GetAttachedLoot)
		;
	py::class_< UIMapDisplayInfo, UInterface >(m, "UIMapDisplayInfo")
		.def("eventGetMapDisplayName", &UIMapDisplayInfo::eventGetMapDisplayName, py::return_value_policy::reference)
		.def("eventGetMapDisplayHeader", &UIMapDisplayInfo::eventGetMapDisplayHeader, py::return_value_policy::reference)
		;
	py::class_< UIMaterialFadeBehavior, UInterface >(m, "UIMaterialFadeBehavior")
		.def("Behavior_UseMaterialScalarFadeForGoreDeath", &UIMaterialFadeBehavior::Behavior_UseMaterialScalarFadeForGoreDeath)
		.def("Behavior_MaterialScalarFade", &UIMaterialFadeBehavior::Behavior_MaterialScalarFade)
		;
	py::class_< UIMeleeAttacker, UInterface >(m, "UIMeleeAttacker")
		.def("ShouldIgnoreInstigatorVelocity", &UIMeleeAttacker::ShouldIgnoreInstigatorVelocity)
		.def("HasActorAlreadyBeenHitByMelee", &UIMeleeAttacker::HasActorAlreadyBeenHitByMelee)
		.def("AddActorToListOfHitActors", &UIMeleeAttacker::AddActorToListOfHitActors)
		.def("EndMeleeOverTime", &UIMeleeAttacker::EndMeleeOverTime)
		.def("BeginMeleeOverTime", &UIMeleeAttacker::BeginMeleeOverTime)
		.def("GetMeleeAttackerMass", &UIMeleeAttacker::GetMeleeAttackerMass)
		.def("GetMeleeTraceSourceLocationAndRotation", &UIMeleeAttacker::GetMeleeTraceSourceLocationAndRotation)
		.def("GetMeleeInstigator", &UIMeleeAttacker::GetMeleeInstigator, py::return_value_policy::reference)
		.def("GetMeleeTraceSourceActor", &UIMeleeAttacker::GetMeleeTraceSourceActor, py::return_value_policy::reference)
		.def("GetMeleeState", [](UIMeleeAttacker &self , struct FVector* StartLoc, struct FRotator* StartRot) { float* pyStartTime = (float*)malloc(sizeof(float)) ; float* pyLastTime = (float*)malloc(sizeof(float)) ;   self.GetMeleeState(pyStartTime, pyLastTime, StartLoc, StartRot); return py::make_tuple(*pyStartTime, *pyLastTime); })
		;
	py::class_< UIMission, UInterface >(m, "UIMission")
		.def("eventMissionReactionObjectiveComplete", &UIMission::eventMissionReactionObjectiveComplete)
		.def("eventMissionReactionObjectiveCleared", &UIMission::eventMissionReactionObjectiveCleared)
		.def("eventMissionReactionObjectiveUpdated", &UIMission::eventMissionReactionObjectiveUpdated)
		.def("eventMissionReactionObjectiveSetChanged", &UIMission::eventMissionReactionObjectiveSetChanged)
		.def("eventMissionReactionStatusChanged", &UIMission::eventMissionReactionStatusChanged)
		.def("eventMissionReactionLevelLoad", &UIMission::eventMissionReactionLevelLoad)
		;
	py::class_< UIMissionDirector, UInterface >(m, "UIMissionDirector")
		.def("OnPlayerClosedMissionUI", &UIMissionDirector::OnPlayerClosedMissionUI)
		.def("OnPlayerOpenedMissionUI", &UIMissionDirector::OnPlayerOpenedMissionUI)
		.def("HasAnyMissionsForPlayer", &UIMissionDirector::HasAnyMissionsForPlayer)
		.def("GetMissionDirectorLocation", &UIMissionDirector::GetMissionDirectorLocation, py::return_value_policy::reference)
		.def("GetAllDirectorData", &UIMissionDirector::GetAllDirectorData)
		.def("eventDeactivateMissionDirectorParticle", &UIMissionDirector::eventDeactivateMissionDirectorParticle)
		.def("eventSetMissionDirectorParticle", &UIMissionDirector::eventSetMissionDirectorParticle)
		.def("eventMissionStatusChanged", &UIMissionDirector::eventMissionStatusChanged)
		.def("OnPlayerTurnedInMission", &UIMissionDirector::OnPlayerTurnedInMission)
		.def("OnPlayerAcceptedMission", &UIMissionDirector::OnPlayerAcceptedMission)
		.def("GetInProgressMissions", &UIMissionDirector::GetInProgressMissions)
		.def("GetEligibleMissions", &UIMissionDirector::GetEligibleMissions)
		.def("GetRedeemableMissions", &UIMissionDirector::GetRedeemableMissions)
		.def("eventAddMissionDirective", &UIMissionDirector::eventAddMissionDirective)
		;
	py::class_< UIMissionInventory, UInterface >(m, "UIMissionInventory")
		;
	py::class_< UIMissionObjective, UInterface >(m, "UIMissionObjective")
		.def("eventGetObjectiveBit", &UIMissionObjective::eventGetObjectiveBit)
		;
	py::class_< UInjuredDefinition, UGBXDefinition >(m, "UInjuredDefinition")
		.def_property("InjuredBonusEnabled", [](UInjuredDefinition &self){return self.InjuredBonusEnabled;}, [](UInjuredDefinition &self, bool value){self.InjuredBonusEnabled = value ? 1 : 0;})
		.def_property("bDoBleedout", [](UInjuredDefinition &self){return self.bDoBleedout;}, [](UInjuredDefinition &self, bool value){self.bDoBleedout = value ? 1 : 0;})
		.def_property("SwitchToSidearmWhenInjured", [](UInjuredDefinition &self){return self.SwitchToSidearmWhenInjured;}, [](UInjuredDefinition &self, bool value){self.SwitchToSidearmWhenInjured = value ? 1 : 0;})
		.def_property("bForceCrouch", [](UInjuredDefinition &self){return self.bForceCrouch;}, [](UInjuredDefinition &self, bool value){self.bForceCrouch = value ? 1 : 0;})
		.def_property("bAllowSprinting", [](UInjuredDefinition &self){return self.bAllowSprinting;}, [](UInjuredDefinition &self, bool value){self.bAllowSprinting = value ? 1 : 0;})
		.def_property("bOverrideInjuredDeadCamera", [](UInjuredDefinition &self){return self.bOverrideInjuredDeadCamera;}, [](UInjuredDefinition &self, bool value){self.bOverrideInjuredDeadCamera = value ? 1 : 0;})
		.def_property("InjuredPreDeathRecoverRotation", [](UInjuredDefinition &self){return self.InjuredPreDeathRecoverRotation;}, [](UInjuredDefinition &self, bool value){self.InjuredPreDeathRecoverRotation = value ? 1 : 0;})
		.def_property("InjuredPreDeathRecoverOrbit", [](UInjuredDefinition &self){return self.InjuredPreDeathRecoverOrbit;}, [](UInjuredDefinition &self, bool value){self.InjuredPreDeathRecoverOrbit = value ? 1 : 0;})
		.def_readwrite("InjuredInteractionDefinition", &UInjuredDefinition::InjuredInteractionDefinition, py::return_value_policy::reference)
		.def_readwrite("InjuredAttributeModifiers", &UInjuredDefinition::InjuredAttributeModifiers, py::return_value_policy::reference)
		.def_readwrite("InjuredBonusDamageScale", &UInjuredDefinition::InjuredBonusDamageScale)
		.def_readwrite("InjuredBonusTimePercent", &UInjuredDefinition::InjuredBonusTimePercent)
		.def_readwrite("BaseRejuvenateDelay", &UInjuredDefinition::BaseRejuvenateDelay)
		.def_readwrite("BaseMultiplePlayersRejuvenateDelay", &UInjuredDefinition::BaseMultiplePlayersRejuvenateDelay)
		.def_readwrite("NoEnemiesDelayMultiplier", &UInjuredDefinition::NoEnemiesDelayMultiplier)
		.def_readwrite("ReviveDuration", &UInjuredDefinition::ReviveDuration)
		.def_readwrite("AutoReviveCheckDelay", &UInjuredDefinition::AutoReviveCheckDelay)
		.def_readwrite("InjuredViewDropCycleTime", &UInjuredDefinition::InjuredViewDropCycleTime)
		.def_readwrite("InjuredViewDropStrength", &UInjuredDefinition::InjuredViewDropStrength)
		.def_readwrite("InjuredMouseSensitivityMultiplier", &UInjuredDefinition::InjuredMouseSensitivityMultiplier)
		.def_readwrite("InjuredScreenFadePartSys", &UInjuredDefinition::InjuredScreenFadePartSys, py::return_value_policy::reference)
		.def_readwrite("InjuredCameraAnim", &UInjuredDefinition::InjuredCameraAnim, py::return_value_policy::reference)
		.def_readwrite("InjuredStartAkEvent", &UInjuredDefinition::InjuredStartAkEvent, py::return_value_policy::reference)
		.def_readwrite("InjuredStopAkEvent", &UInjuredDefinition::InjuredStopAkEvent, py::return_value_policy::reference)
		.def_readwrite("InjuredBehaviors", &UInjuredDefinition::InjuredBehaviors, py::return_value_policy::reference)
		.def_readwrite("TargetedBehaviors", &UInjuredDefinition::TargetedBehaviors, py::return_value_policy::reference)
		.def_readwrite("AboutToDieBehaviors", &UInjuredDefinition::AboutToDieBehaviors, py::return_value_policy::reference)
		.def_readwrite("NoEnemyBehaviors", &UInjuredDefinition::NoEnemyBehaviors, py::return_value_policy::reference)
		.def_readwrite("DamageEnemyBehaviors", &UInjuredDefinition::DamageEnemyBehaviors, py::return_value_policy::reference)
		.def_readwrite("DamageSelfBehaviors", &UInjuredDefinition::DamageSelfBehaviors, py::return_value_policy::reference)
		.def_readwrite("KilledEnemyBehaviors", &UInjuredDefinition::KilledEnemyBehaviors, py::return_value_policy::reference)
		.def_readwrite("RecoveredBehaviors", &UInjuredDefinition::RecoveredBehaviors, py::return_value_policy::reference)
		.def_readwrite("ResurrectedBehaviors", &UInjuredDefinition::ResurrectedBehaviors, py::return_value_policy::reference)
		.def_readwrite("RevivedBehaviors", &UInjuredDefinition::RevivedBehaviors, py::return_value_policy::reference)
		.def_readwrite("PermadeathBehaviors", &UInjuredDefinition::PermadeathBehaviors, py::return_value_policy::reference)
		.def_readwrite("RejuvenatedHealthPctOfMax", &UInjuredDefinition::RejuvenatedHealthPctOfMax)
		.def_readwrite("RejuvenatedShieldPctOfMax", &UInjuredDefinition::RejuvenatedShieldPctOfMax)
		.def_readwrite("ResurrectedHealthPctOfMax", &UInjuredDefinition::ResurrectedHealthPctOfMax)
		.def_readwrite("ResurrectedShieldPctOfMax", &UInjuredDefinition::ResurrectedShieldPctOfMax)
		.def_readwrite("RevivedHealthPctOfMax", &UInjuredDefinition::RevivedHealthPctOfMax)
		.def_readwrite("RevivedShieldPctOfMax", &UInjuredDefinition::RevivedShieldPctOfMax)
		.def_readwrite("MaxTimeBetweenInjuries", &UInjuredDefinition::MaxTimeBetweenInjuries)
		.def_readwrite("MaxDesiredSuccessiveInjuries", &UInjuredDefinition::MaxDesiredSuccessiveInjuries)
		.def_readwrite("InjuredMovementSpeed", &UInjuredDefinition::InjuredMovementSpeed)
		.def_readwrite("InjuredMovementAnimNodeName", &UInjuredDefinition::InjuredMovementAnimNodeName, py::return_value_policy::reference)
		.def_readwrite("InjuredWeaponPutDownTime", &UInjuredDefinition::InjuredWeaponPutDownTime)
		.def_readwrite("InjuredWeaponEquipTime", &UInjuredDefinition::InjuredWeaponEquipTime)
		.def_readwrite("InjuredSpecialMoveOverride", &UInjuredDefinition::InjuredSpecialMoveOverride, py::return_value_policy::reference)
		.def_readwrite("InjuredPreDeathAnim", &UInjuredDefinition::InjuredPreDeathAnim, py::return_value_policy::reference)
		.def_readwrite("InjuredDeadCameraStartDistance", &UInjuredDefinition::InjuredDeadCameraStartDistance)
		.def_readwrite("InjuredDeadCameraEndDistance", &UInjuredDefinition::InjuredDeadCameraEndDistance)
		.def_readwrite("InjuredDeadCameraLerpTime", &UInjuredDefinition::InjuredDeadCameraLerpTime)
		.def_readwrite("InjuredDeadCameraRotation", &UInjuredDefinition::InjuredDeadCameraRotation, py::return_value_policy::reference)
		.def_readwrite("InjuredDeadDelayBetweenDeathAnimAndDigistruct", &UInjuredDefinition::InjuredDeadDelayBetweenDeathAnimAndDigistruct)
		.def_readwrite("InjuredDeadDelayBeforeDigistructKillVolume", &UInjuredDefinition::InjuredDeadDelayBeforeDigistructKillVolume)
		.def_readwrite("InjuredDeadBoneName", &UInjuredDefinition::InjuredDeadBoneName, py::return_value_policy::reference)
		.def_readwrite("InjuredPreDeathRecoveryTime", &UInjuredDefinition::InjuredPreDeathRecoveryTime)
		.def_readwrite("InjuredPreDeathRecoveryExponent", &UInjuredDefinition::InjuredPreDeathRecoveryExponent)
		.def_readwrite("InjuredPreDeathRecoveryAnim", &UInjuredDefinition::InjuredPreDeathRecoveryAnim, py::return_value_policy::reference)
		;
	py::class_< UInputActionDefinition, UGBXDefinition >(m, "UInputActionDefinition")
		.def_property("bAlwaysAvailable", [](UInputActionDefinition &self){return self.bAlwaysAvailable;}, [](UInputActionDefinition &self, bool value){self.bAlwaysAvailable = value ? 1 : 0;})
		.def_readwrite("OnBegin", &UInputActionDefinition::OnBegin, py::return_value_policy::reference)
		.def_readwrite("OnEnd", &UInputActionDefinition::OnEnd, py::return_value_policy::reference)
		.def_readwrite("ActionName", &UInputActionDefinition::ActionName, py::return_value_policy::reference)
		;
	py::class_< UInputContextDefinition, UGBXDefinition >(m, "UInputContextDefinition")
		.def_readwrite("InputActions", &UInputContextDefinition::InputActions, py::return_value_policy::reference)
		.def_readwrite("InputSets", &UInputContextDefinition::InputSets, py::return_value_policy::reference)
		.def("ContainsInputAction", &UInputContextDefinition::ContainsInputAction)
		;
	py::class_< UInputDeviceCollectionDefinition, UGBXDefinition >(m, "UInputDeviceCollectionDefinition")
		.def_readwrite("XboxInputDevices", &UInputDeviceCollectionDefinition::XboxInputDevices, py::return_value_policy::reference)
		.def_readwrite("PS3InputDevices", &UInputDeviceCollectionDefinition::PS3InputDevices, py::return_value_policy::reference)
		.def_readwrite("PCInputDevices", &UInputDeviceCollectionDefinition::PCInputDevices, py::return_value_policy::reference)
		.def_readwrite("PCKeyBindGroups", &UInputDeviceCollectionDefinition::PCKeyBindGroups, py::return_value_policy::reference)
		;
	py::class_< UInputDeviceDefinition, UGBXDefinition >(m, "UInputDeviceDefinition")
		.def_readwrite("Axes", &UInputDeviceDefinition::Axes, py::return_value_policy::reference)
		.def_readwrite("LookAxisDefinitions", &UInputDeviceDefinition::LookAxisDefinitions, py::return_value_policy::reference)
		.def_readwrite("Buttons", &UInputDeviceDefinition::Buttons, py::return_value_policy::reference)
		;
	py::class_< UInputRemappingDefinition, UGBXDefinition >(m, "UInputRemappingDefinition")
		.def_property("bShowInPresetMenu", [](UInputRemappingDefinition &self){return self.bShowInPresetMenu;}, [](UInputRemappingDefinition &self, bool value){self.bShowInPresetMenu = value ? 1 : 0;})
		.def_readwrite("PresetTag", &UInputRemappingDefinition::PresetTag, py::return_value_policy::reference)
		.def_readwrite("PresetCaption", &UInputRemappingDefinition::PresetCaption, py::return_value_policy::reference)
		.def_readwrite("RemappedAxes", &UInputRemappingDefinition::RemappedAxes, py::return_value_policy::reference)
		.def_readwrite("RemappedButtons", &UInputRemappingDefinition::RemappedButtons, py::return_value_policy::reference)
		;
	py::class_< UInputSetDefinition, UGBXDefinition >(m, "UInputSetDefinition")
		.def_readwrite("InputActions", &UInputSetDefinition::InputActions, py::return_value_policy::reference)
		;
	py::class_< UInRangeOfInjuredPlayerExpressionEvaluator, UExpressionEvaluator >(m, "UInRangeOfInjuredPlayerExpressionEvaluator")
		.def("Evaluate", &UInRangeOfInjuredPlayerExpressionEvaluator::Evaluate)
		;
	py::class_< UInstancedDesignerAttribute, UObject >(m, "UInstancedDesignerAttribute")
		.def_readwrite("Definition", &UInstancedDesignerAttribute::Definition, py::return_value_policy::reference)
		.def_readwrite("AttributeName", &UInstancedDesignerAttribute::AttributeName, py::return_value_policy::reference)
		.def_readwrite("AttributeDataType", &UInstancedDesignerAttribute::AttributeDataType)
		.def_readwrite("Value", &UInstancedDesignerAttribute::Value)
		.def_readwrite("ValueBaseValue", &UInstancedDesignerAttribute::ValueBaseValue)
		.def_readwrite("ValueModifierStack", &UInstancedDesignerAttribute::ValueModifierStack, py::return_value_policy::reference)
		.def_readwrite("IntValue", &UInstancedDesignerAttribute::IntValue)
		.def_readwrite("IntValueBaseValue", &UInstancedDesignerAttribute::IntValueBaseValue)
		.def_readwrite("IntValueModifierStack", &UInstancedDesignerAttribute::IntValueModifierStack, py::return_value_policy::reference)
		.def_readwrite("BoolValue", &UInstancedDesignerAttribute::BoolValue)
		.def_readwrite("BoolValueBaseValue", &UInstancedDesignerAttribute::BoolValueBaseValue)
		.def_readwrite("BoolValueModifierStack", &UInstancedDesignerAttribute::BoolValueModifierStack, py::return_value_policy::reference)
		.def_readwrite("DesignerAttributeDefinitionPathName", &UInstancedDesignerAttribute::DesignerAttributeDefinitionPathName, py::return_value_policy::reference)
		.def("SetBaseValue", &UInstancedDesignerAttribute::SetBaseValue)
		.def("InitializeByName", &UInstancedDesignerAttribute::InitializeByName)
		.def("Initialize", &UInstancedDesignerAttribute::Initialize)
		;
	py::class_< UInteractionIconDefinition, UEngineInteractionIconDefinition >(m, "UInteractionIconDefinition")
		.def_readwrite("Icon", &UInteractionIconDefinition::Icon)
		.def_readwrite("Action", &UInteractionIconDefinition::Action, py::return_value_policy::reference)
		.def_readwrite("Text", &UInteractionIconDefinition::Text, py::return_value_policy::reference)
		;
	py::class_< AInteractionProxy, ATrigger >(m, "AInteractionProxy")
		.def_property("bPassEventsToKismet", [](AInteractionProxy &self){return self.bPassEventsToKismet;}, [](AInteractionProxy &self, bool value){self.bPassEventsToKismet = value ? 1 : 0;})
		.def_property("bCostsToUse", [](AInteractionProxy &self){return self.bCostsToUse;}, [](AInteractionProxy &self, bool value){self.bCostsToUse = value ? 1 : 0;})
		.def_property("bCostsToSecondaryUse", [](AInteractionProxy &self){return self.bCostsToSecondaryUse;}, [](AInteractionProxy &self, bool value){self.bCostsToSecondaryUse = value ? 1 : 0;})
		.def_property("bSecondaryUsable", [](AInteractionProxy &self){return self.bSecondaryUsable;}, [](AInteractionProxy &self, bool value){self.bSecondaryUsable = value ? 1 : 0;})
		.def_readwrite("VfTable_IIUsable", &AInteractionProxy::VfTable_IIUsable, py::return_value_policy::reference)
		.def_readwrite("Definition", &AInteractionProxy::Definition, py::return_value_policy::reference)
		.def_readwrite("CostsToUseType", &AInteractionProxy::CostsToUseType)
		.def_readwrite("CostsToSecondaryUseType", &AInteractionProxy::CostsToSecondaryUseType)
		.def_readwrite("CostsToUseAmount", &AInteractionProxy::CostsToUseAmount)
		.def_readwrite("CostsToSecondaryUseAmount", &AInteractionProxy::CostsToSecondaryUseAmount)
		.def("NotifyUserCouldNotAffordAttemptedUse", &AInteractionProxy::NotifyUserCouldNotAffordAttemptedUse)
		.def("SetInteractionIcon", &AInteractionProxy::SetInteractionIcon)
		.def("UseObject", &AInteractionProxy::UseObject)
		.def("AllowTouchEvent", &AInteractionProxy::AllowTouchEvent)
		.def("UsedBy", &AInteractionProxy::UsedBy)
		.def("eventUnTouch", &AInteractionProxy::eventUnTouch)
		.def("eventTouch", &AInteractionProxy::eventTouch)
		.def("eventBaseChange", &AInteractionProxy::eventBaseChange)
		.def("eventDestroyed", &AInteractionProxy::eventDestroyed)
		.def("Initialize", &AInteractionProxy::Initialize)
		.def("AllowUseEvent", &AInteractionProxy::AllowUseEvent)
		.def("IsInteractionDebugEnabled", &AInteractionProxy::IsInteractionDebugEnabled)
		.def("ToggleInteractionDebug", &AInteractionProxy::ToggleInteractionDebug)
		;
	py::class_< APawnInteractionProxy, AInteractionProxy >(m, "APawnInteractionProxy")
		.def_property("bDisableDuringTrade", [](APawnInteractionProxy &self){return self.bDisableDuringTrade;}, [](APawnInteractionProxy &self, bool value){self.bDisableDuringTrade = value ? 1 : 0;})
		.def_property("bDisableDuringVehicleUse", [](APawnInteractionProxy &self){return self.bDisableDuringVehicleUse;}, [](APawnInteractionProxy &self, bool value){self.bDisableDuringVehicleUse = value ? 1 : 0;})
		.def("eventOutsideWorldBounds", &APawnInteractionProxy::eventOutsideWorldBounds)
		.def("AllowUseEvent", &APawnInteractionProxy::AllowUseEvent)
		.def("AllowTouchEvent", &APawnInteractionProxy::AllowTouchEvent)
		.def("Initialize", &APawnInteractionProxy::Initialize)
		;
	py::class_< UInteractiveObjectBalanceDefinition, UBaseBalanceDefinition >(m, "UInteractiveObjectBalanceDefinition")
		.def_readwrite("VfTable_IIConstructObject", &UInteractiveObjectBalanceDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("DefaultInteractiveObject", &UInteractiveObjectBalanceDefinition::DefaultInteractiveObject, py::return_value_policy::reference)
		.def_readwrite("DefaultExpLevel", &UInteractiveObjectBalanceDefinition::DefaultExpLevel, py::return_value_policy::reference)
		.def_readwrite("DefaultDisplayName", &UInteractiveObjectBalanceDefinition::DefaultDisplayName, py::return_value_policy::reference)
		.def_readwrite("ActorTags", &UInteractiveObjectBalanceDefinition::ActorTags, py::return_value_policy::reference)
		.def_readwrite("DefaultIncludedLootLists", &UInteractiveObjectBalanceDefinition::DefaultIncludedLootLists, py::return_value_policy::reference)
		.def_readwrite("DefaultLoot", &UInteractiveObjectBalanceDefinition::DefaultLoot, py::return_value_policy::reference)
		.def_readwrite("DefaultLootGameStageVarianceFormula", &UInteractiveObjectBalanceDefinition::DefaultLootGameStageVarianceFormula, py::return_value_policy::reference)
		.def_readwrite("Grades", &UInteractiveObjectBalanceDefinition::Grades, py::return_value_policy::reference)
		.def("SetupInteractiveObjectLoot", &UInteractiveObjectBalanceDefinition::SetupInteractiveObjectLoot)
		.def("GetInteractiveObjectDefinitionForGrade", &UInteractiveObjectBalanceDefinition::GetInteractiveObjectDefinitionForGrade, py::return_value_policy::reference)
		.def("GetInteractiveObjectDefinitionForGameStage", &UInteractiveObjectBalanceDefinition::GetInteractiveObjectDefinitionForGameStage, py::return_value_policy::reference)
		;
	py::class_< UInteractiveObjectDefinition, UGBXDefinition >(m, "UInteractiveObjectDefinition")
		.def_property("bCreditDamageCausedByThisObjectToWhateverDamagedIt", [](UInteractiveObjectDefinition &self){return self.bCreditDamageCausedByThisObjectToWhateverDamagedIt;}, [](UInteractiveObjectDefinition &self, bool value){self.bCreditDamageCausedByThisObjectToWhateverDamagedIt = value ? 1 : 0;})
		.def_property("bCanBeKilled", [](UInteractiveObjectDefinition &self){return self.bCanBeKilled;}, [](UInteractiveObjectDefinition &self, bool value){self.bCanBeKilled = value ? 1 : 0;})
		.def_property("bIsKilledWhenHealthEqualsZero", [](UInteractiveObjectDefinition &self){return self.bIsKilledWhenHealthEqualsZero;}, [](UInteractiveObjectDefinition &self, bool value){self.bIsKilledWhenHealthEqualsZero = value ? 1 : 0;})
		.def_property("bDestroyWhenKilled", [](UInteractiveObjectDefinition &self){return self.bDestroyWhenKilled;}, [](UInteractiveObjectDefinition &self, bool value){self.bDestroyWhenKilled = value ? 1 : 0;})
		.def_property("bCanTakeDirectDamage", [](UInteractiveObjectDefinition &self){return self.bCanTakeDirectDamage;}, [](UInteractiveObjectDefinition &self, bool value){self.bCanTakeDirectDamage = value ? 1 : 0;})
		.def_property("bCanTakeRadiusDamage", [](UInteractiveObjectDefinition &self){return self.bCanTakeRadiusDamage;}, [](UInteractiveObjectDefinition &self, bool value){self.bCanTakeRadiusDamage = value ? 1 : 0;})
		.def_property("bCollideAsEncroacher", [](UInteractiveObjectDefinition &self){return self.bCollideAsEncroacher;}, [](UInteractiveObjectDefinition &self, bool value){self.bCollideAsEncroacher = value ? 1 : 0;})
		.def_property("bUsePlayerInteractionDistanceForTriggerRadius", [](UInteractiveObjectDefinition &self){return self.bUsePlayerInteractionDistanceForTriggerRadius;}, [](UInteractiveObjectDefinition &self, bool value){self.bUsePlayerInteractionDistanceForTriggerRadius = value ? 1 : 0;})
		.def_property("bProjTarget", [](UInteractiveObjectDefinition &self){return self.bProjTarget;}, [](UInteractiveObjectDefinition &self, bool value){self.bProjTarget = value ? 1 : 0;})
		.def_property("bUsableFromVehicle", [](UInteractiveObjectDefinition &self){return self.bUsableFromVehicle;}, [](UInteractiveObjectDefinition &self, bool value){self.bUsableFromVehicle = value ? 1 : 0;})
		.def_property("bSecondaryUsableFromVehicle", [](UInteractiveObjectDefinition &self){return self.bSecondaryUsableFromVehicle;}, [](UInteractiveObjectDefinition &self, bool value){self.bSecondaryUsableFromVehicle = value ? 1 : 0;})
		.def_property("bAllowUsabilityPassThrough", [](UInteractiveObjectDefinition &self){return self.bAllowUsabilityPassThrough;}, [](UInteractiveObjectDefinition &self, bool value){self.bAllowUsabilityPassThrough = value ? 1 : 0;})
		.def_property("bIsSoldierTurretShield", [](UInteractiveObjectDefinition &self){return self.bIsSoldierTurretShield;}, [](UInteractiveObjectDefinition &self, bool value){self.bIsSoldierTurretShield = value ? 1 : 0;})
		.def_property("bAlwaysRelevant", [](UInteractiveObjectDefinition &self){return self.bAlwaysRelevant;}, [](UInteractiveObjectDefinition &self, bool value){self.bAlwaysRelevant = value ? 1 : 0;})
		.def_property("bIsPossibleHomingTarget", [](UInteractiveObjectDefinition &self){return self.bIsPossibleHomingTarget;}, [](UInteractiveObjectDefinition &self, bool value){self.bIsPossibleHomingTarget = value ? 1 : 0;})
		.def_property("bTargetableByAI", [](UInteractiveObjectDefinition &self){return self.bTargetableByAI;}, [](UInteractiveObjectDefinition &self, bool value){self.bTargetableByAI = value ? 1 : 0;})
		.def_property("DoNotBlockWeaponFireFromFriendlies", [](UInteractiveObjectDefinition &self){return self.DoNotBlockWeaponFireFromFriendlies;}, [](UInteractiveObjectDefinition &self, bool value){self.DoNotBlockWeaponFireFromFriendlies = value ? 1 : 0;})
		.def_property("bUseOwnerAllegiance", [](UInteractiveObjectDefinition &self){return self.bUseOwnerAllegiance;}, [](UInteractiveObjectDefinition &self, bool value){self.bUseOwnerAllegiance = value ? 1 : 0;})
		.def_property("bDoNotBlockPawns", [](UInteractiveObjectDefinition &self){return self.bDoNotBlockPawns;}, [](UInteractiveObjectDefinition &self, bool value){self.bDoNotBlockPawns = value ? 1 : 0;})
		.def_property("bDynamicLightEnvironment", [](UInteractiveObjectDefinition &self){return self.bDynamicLightEnvironment;}, [](UInteractiveObjectDefinition &self, bool value){self.bDynamicLightEnvironment = value ? 1 : 0;})
		.def_property("bCastShadows", [](UInteractiveObjectDefinition &self){return self.bCastShadows;}, [](UInteractiveObjectDefinition &self, bool value){self.bCastShadows = value ? 1 : 0;})
		.def_property("bUseBooleanEnvironmentShadowing", [](UInteractiveObjectDefinition &self){return self.bUseBooleanEnvironmentShadowing;}, [](UInteractiveObjectDefinition &self, bool value){self.bUseBooleanEnvironmentShadowing = value ? 1 : 0;})
		.def_property("bDynamic", [](UInteractiveObjectDefinition &self){return self.bDynamic;}, [](UInteractiveObjectDefinition &self, bool value){self.bDynamic = value ? 1 : 0;})
		.def_property("bSynthesizeSHLight", [](UInteractiveObjectDefinition &self){return self.bSynthesizeSHLight;}, [](UInteractiveObjectDefinition &self, bool value){self.bSynthesizeSHLight = value ? 1 : 0;})
		.def_property("bShadowFromEnvironment", [](UInteractiveObjectDefinition &self){return self.bShadowFromEnvironment;}, [](UInteractiveObjectDefinition &self, bool value){self.bShadowFromEnvironment = value ? 1 : 0;})
		.def_property("bAffectedBySmallDynamicLights", [](UInteractiveObjectDefinition &self){return self.bAffectedBySmallDynamicLights;}, [](UInteractiveObjectDefinition &self, bool value){self.bAffectedBySmallDynamicLights = value ? 1 : 0;})
		.def_readwrite("VfTable_IIConstructObject", &UInteractiveObjectDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyInfoProvider", &UInteractiveObjectDefinition::VfTable_IIBodyInfoProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorProvider", &UInteractiveObjectDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIHitRegionInfoProvider", &UInteractiveObjectDefinition::VfTable_IIHitRegionInfoProvider, py::return_value_policy::reference)
		.def_readwrite("BodyComposition", &UInteractiveObjectDefinition::BodyComposition, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UInteractiveObjectDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def_readwrite("MaxHealth", &UInteractiveObjectDefinition::MaxHealth, py::return_value_policy::reference)
		.def_readwrite("Mesh", &UInteractiveObjectDefinition::Mesh, py::return_value_policy::reference)
		.def_readwrite("CollisionType", &UInteractiveObjectDefinition::CollisionType)
		.def_readwrite("HUDIcon", &UInteractiveObjectDefinition::HUDIcon)
		.def_readwrite("CompassIcon", &UInteractiveObjectDefinition::CompassIcon)
		.def_readwrite("TickGroup", &UInteractiveObjectDefinition::TickGroup)
		.def_readwrite("RelevanceDistance", &UInteractiveObjectDefinition::RelevanceDistance)
		.def_readwrite("AttributeStartingValues", &UInteractiveObjectDefinition::AttributeStartingValues, py::return_value_policy::reference)
		.def_readwrite("InstanceData", &UInteractiveObjectDefinition::InstanceData, py::return_value_policy::reference)
		.def_readwrite("HUDIconDef", &UInteractiveObjectDefinition::HUDIconDef, py::return_value_policy::reference)
		.def_readwrite("HUDIconDefSecondary", &UInteractiveObjectDefinition::HUDIconDefSecondary, py::return_value_policy::reference)
		.def_readwrite("TriggerRadius", &UInteractiveObjectDefinition::TriggerRadius)
		.def_readwrite("TriggerHeight", &UInteractiveObjectDefinition::TriggerHeight)
		.def_readwrite("StatusMenuMapInfoBoxHeader", &UInteractiveObjectDefinition::StatusMenuMapInfoBoxHeader, py::return_value_policy::reference)
		.def_readwrite("StatusMenuMapInfoBoxDescription", &UInteractiveObjectDefinition::StatusMenuMapInfoBoxDescription, py::return_value_policy::reference)
		.def_readwrite("VehicleTriggerRadius", &UInteractiveObjectDefinition::VehicleTriggerRadius)
		.def_readwrite("StatusEffectSockets", &UInteractiveObjectDefinition::StatusEffectSockets, py::return_value_policy::reference)
		.def_readwrite("StatusEffectsParticleSystem", &UInteractiveObjectDefinition::StatusEffectsParticleSystem, py::return_value_policy::reference)
		.def_readwrite("NameTag", &UInteractiveObjectDefinition::NameTag, py::return_value_policy::reference)
		.def_readwrite("DialogGroups", &UInteractiveObjectDefinition::DialogGroups, py::return_value_policy::reference)
		.def_readwrite("InteractiveObjectClass", &UInteractiveObjectDefinition::InteractiveObjectClass, py::return_value_policy::reference)
		.def_readwrite("TargetPriority", &UInteractiveObjectDefinition::TargetPriority)
		.def_readwrite("HealthDisplayHack", &UInteractiveObjectDefinition::HealthDisplayHack)
		.def_readwrite("Allegiance", &UInteractiveObjectDefinition::Allegiance, py::return_value_policy::reference)
		.def_readwrite("TargetableSocket", &UInteractiveObjectDefinition::TargetableSocket, py::return_value_policy::reference)
		.def_readwrite("TargetableOffset", &UInteractiveObjectDefinition::TargetableOffset, py::return_value_policy::reference)
		.def_readwrite("AIAvoidRadius", &UInteractiveObjectDefinition::AIAvoidRadius)
		.def_readwrite("bBlockOnTakeDamageWhenDamageEqualZero", &UInteractiveObjectDefinition::bBlockOnTakeDamageWhenDamageEqualZero)
		.def_readwrite("FocusRadius", &UInteractiveObjectDefinition::FocusRadius)
		.def_readwrite("FocusOffset", &UInteractiveObjectDefinition::FocusOffset, py::return_value_policy::reference)
		.def_readwrite("DefaultHitRegionDefinition", &UInteractiveObjectDefinition::DefaultHitRegionDefinition, py::return_value_policy::reference)
		.def_readwrite("HitRegionDefinitions", &UInteractiveObjectDefinition::HitRegionDefinitions, py::return_value_policy::reference)
		.def_readwrite("LightingBoundsScale", &UInteractiveObjectDefinition::LightingBoundsScale)
		.def_readwrite("ModShadowFadeoutExponent", &UInteractiveObjectDefinition::ModShadowFadeoutExponent)
		.def_readwrite("ModShadowFadeoutTime", &UInteractiveObjectDefinition::ModShadowFadeoutTime)
		.def_readwrite("AmbientGlow", &UInteractiveObjectDefinition::AmbientGlow, py::return_value_policy::reference)
		.def_readwrite("AmbientShadowSourceDirection", &UInteractiveObjectDefinition::AmbientShadowSourceDirection, py::return_value_policy::reference)
		.def_readwrite("AmbientShadowColor", &UInteractiveObjectDefinition::AmbientShadowColor, py::return_value_policy::reference)
		.def_readwrite("DominantShadowTransitionStartDistance", &UInteractiveObjectDefinition::DominantShadowTransitionStartDistance)
		.def_readwrite("DominantShadowTransitionEndDistance", &UInteractiveObjectDefinition::DominantShadowTransitionEndDistance)
		.def_readwrite("SkelUpdate_ThrottleDistance", &UInteractiveObjectDefinition::SkelUpdate_ThrottleDistance)
		.def_readwrite("Skelupdate_ThrottleTime", &UInteractiveObjectDefinition::Skelupdate_ThrottleTime)
		.def("SetBehaviorProviderDefinition", &UInteractiveObjectDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UInteractiveObjectDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		.def("OnAllPickupsDetached", &UInteractiveObjectDefinition::OnAllPickupsDetached)
		.def("OnPickupDetached", &UInteractiveObjectDefinition::OnPickupDetached)
		.def("OnDispense", &UInteractiveObjectDefinition::OnDispense)
		.def("OnClosing", &UInteractiveObjectDefinition::OnClosing)
		.def("OnMissionTurnedIn", &UInteractiveObjectDefinition::OnMissionTurnedIn)
		.def("OnTimerEvent", &UInteractiveObjectDefinition::OnTimerEvent)
		.def("OnKilled", &UInteractiveObjectDefinition::OnKilled)
		.def("OnHealthDepleted", &UInteractiveObjectDefinition::OnHealthDepleted)
		.def("OnTakeDamage", &UInteractiveObjectDefinition::OnTakeDamage)
		.def("OnUserCouldNotAffordSecondary", &UInteractiveObjectDefinition::OnUserCouldNotAffordSecondary)
		.def("OnUserCouldNotAfford", &UInteractiveObjectDefinition::OnUserCouldNotAfford)
		.def("OnSecondaryUsedBy", &UInteractiveObjectDefinition::OnSecondaryUsedBy)
		.def("OnUsedBy", &UInteractiveObjectDefinition::OnUsedBy)
		.def("OnUnTouch", &UInteractiveObjectDefinition::OnUnTouch)
		.def("OnTouch", &UInteractiveObjectDefinition::OnTouch)
		.def("OnSpawn", &UInteractiveObjectDefinition::OnSpawn)
		.def("GetHitRegions", [](UInteractiveObjectDefinition &self , TArray< class UBodyHitRegionDefinition* >* Regions) { class UBodyHitRegionDefinition** pyDefaultRegion = 0 ;   self.GetHitRegions(Regions, pyDefaultRegion); return py::make_tuple(*pyDefaultRegion); })
		;
	py::class_< UVehicleSpawnStationPlatformDefinition, UInteractiveObjectDefinition >(m, "UVehicleSpawnStationPlatformDefinition")
		.def_readwrite("VehicleRefSocket", &UVehicleSpawnStationPlatformDefinition::VehicleRefSocket, py::return_value_policy::reference)
		.def_readwrite("SpawnVehicleSocket", &UVehicleSpawnStationPlatformDefinition::SpawnVehicleSocket, py::return_value_policy::reference)
		;
	py::class_< UWillowVendingMachineDefinition, UInteractiveObjectDefinition >(m, "UWillowVendingMachineDefinition")
		.def("OnFeaturedItemSet", &UWillowVendingMachineDefinition::OnFeaturedItemSet)
		;
	py::class_< UInteractiveObjectLootListDefinition, UGBXDefinition >(m, "UInteractiveObjectLootListDefinition")
		.def_readwrite("LootData", &UInteractiveObjectLootListDefinition::LootData, py::return_value_policy::reference)
		;
	py::class_< UInterpTrackBehaviors, UInterpTrack >(m, "UInterpTrackBehaviors")
		.def_readwrite("VfTable_IIConstructObject", &UInterpTrackBehaviors::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorProvider", &UInterpTrackBehaviors::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("LastAddedKeyFrameName", &UInterpTrackBehaviors::LastAddedKeyFrameName, py::return_value_policy::reference)
		.def_readwrite("BehaviorEvents", &UInterpTrackBehaviors::BehaviorEvents, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UInterpTrackBehaviors::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def("BehaviorKeyFrameEvent", &UInterpTrackBehaviors::BehaviorKeyFrameEvent)
		.def("SetBehaviorProviderDefinition", &UInterpTrackBehaviors::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UInterpTrackBehaviors::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UInterpTrackInstBehaviors, UInterpTrackInst >(m, "UInterpTrackInstBehaviors")
		.def_readwrite("VfTable_IIBehaviorConsumer", &UInterpTrackInstBehaviors::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("LastUpdatePosition", &UInterpTrackInstBehaviors::LastUpdatePosition)
		.def_readwrite("ConsumerHandle", &UInterpTrackInstBehaviors::ConsumerHandle, py::return_value_policy::reference)
		.def("GetBehaviorConsumerHandle", &UInterpTrackInstBehaviors::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		;
	py::class_< UInventoryAttributeContextResolver, UAttributeContextResolver >(m, "UInventoryAttributeContextResolver")
		.def_property("bOnlyConsiderEquippedItems", [](UInventoryAttributeContextResolver &self){return self.bOnlyConsiderEquippedItems;}, [](UInventoryAttributeContextResolver &self, bool value){self.bOnlyConsiderEquippedItems = value ? 1 : 0;})
		.def_readwrite("InventoryDefinition", &UInventoryAttributeContextResolver::InventoryDefinition, py::return_value_policy::reference)
		.def("GetAttributeContext", &UInventoryAttributeContextResolver::GetAttributeContext, py::return_value_policy::reference)
		;
	py::class_< UInventoryBalanceDefinition, UBaseBalanceDefinition >(m, "UInventoryBalanceDefinition")
		.def_property("bInterpolateExpLevel", [](UInventoryBalanceDefinition &self){return self.bInterpolateExpLevel;}, [](UInventoryBalanceDefinition &self, bool value){self.bInterpolateExpLevel = value ? 1 : 0;})
		.def_readwrite("VfTable_IIDlcLicensableObject", &UInventoryBalanceDefinition::VfTable_IIDlcLicensableObject, py::return_value_policy::reference)
		.def_readwrite("InventoryDefinition", &UInventoryBalanceDefinition::InventoryDefinition, py::return_value_policy::reference)
		.def_readwrite("BaseDefinition", &UInventoryBalanceDefinition::BaseDefinition, py::return_value_policy::reference)
		.def_readwrite("Manufacturers", &UInventoryBalanceDefinition::Manufacturers, py::return_value_policy::reference)
		.def_readwrite("DlcItemSet", &UInventoryBalanceDefinition::DlcItemSet, py::return_value_policy::reference)
		.def_readwrite("PartListCollection", &UInventoryBalanceDefinition::PartListCollection, py::return_value_policy::reference)
		.def_readwrite("PlayerClassId", &UInventoryBalanceDefinition::PlayerClassId, py::return_value_policy::reference)
		.def("GetDownloadableContentDefinition", &UInventoryBalanceDefinition::GetDownloadableContentDefinition, py::return_value_policy::reference)
		.def("GetInventoryPartListCollection", &UInventoryBalanceDefinition::GetInventoryPartListCollection, py::return_value_policy::reference)
		.def("GetInventoryDefinitionForManufacturerGrade", &UInventoryBalanceDefinition::GetInventoryDefinitionForManufacturerGrade, py::return_value_policy::reference)
		.def("HACKGetVehicleInventoryDefinition", &UInventoryBalanceDefinition::HACKGetVehicleInventoryDefinition, py::return_value_policy::reference)
		.def("GetExpLevelFromManufacturerData", &UInventoryBalanceDefinition::GetExpLevelFromManufacturerData)
		.def("GetRequiredPlayerClassId", &UInventoryBalanceDefinition::GetRequiredPlayerClassId, py::return_value_policy::reference)
		.def("GetInventoryDefinition", &UInventoryBalanceDefinition::GetInventoryDefinition, py::return_value_policy::reference)
		;
	py::class_< UItemBalanceDefinition, UInventoryBalanceDefinition >(m, "UItemBalanceDefinition")
		.def_readwrite("ItemPartListCollection", &UItemBalanceDefinition::ItemPartListCollection, py::return_value_policy::reference)
		.def_readwrite("RuntimePartListCollection", &UItemBalanceDefinition::RuntimePartListCollection, py::return_value_policy::reference)
		;
	py::class_< UClassModBalanceDefinition, UItemBalanceDefinition >(m, "UClassModBalanceDefinition")
		.def_readwrite("ClassModDefinitions", &UClassModBalanceDefinition::ClassModDefinitions, py::return_value_policy::reference)
		.def("GetClassModDefSpawnedByBalanceDef", &UClassModBalanceDefinition::GetClassModDefSpawnedByBalanceDef)
		.def("GetInventoryDefinitionForManufacturerGrade", &UClassModBalanceDefinition::GetInventoryDefinitionForManufacturerGrade, py::return_value_policy::reference)
		;
	py::class_< UWeaponBalanceDefinition, UInventoryBalanceDefinition >(m, "UWeaponBalanceDefinition")
		.def_readwrite("WeaponPartListCollection", &UWeaponBalanceDefinition::WeaponPartListCollection, py::return_value_policy::reference)
		.def_readwrite("RuntimePartListCollection", &UWeaponBalanceDefinition::RuntimePartListCollection, py::return_value_policy::reference)
		;
	py::class_< UMissionWeaponBalanceDefinition, UWeaponBalanceDefinition >(m, "UMissionWeaponBalanceDefinition")
		.def_readwrite("MissionObjective", &UMissionWeaponBalanceDefinition::MissionObjective, py::return_value_policy::reference)
		;
	py::class_< UInventoryCardGFx, UObject >(m, "UInventoryCardGFx")
		.def("UpdateCardPanel", &UInventoryCardGFx::UpdateCardPanel)
		.def("SetMissionItemCard", &UInventoryCardGFx::SetMissionItemCard)
		.def("SetItemCard", &UInventoryCardGFx::SetItemCard)
		.def("SetArtifactCard", &UInventoryCardGFx::SetArtifactCard)
		.def("SetClassModCard", &UInventoryCardGFx::SetClassModCard)
		.def("SetGrenadeModCard", &UInventoryCardGFx::SetGrenadeModCard)
		.def("SetShieldCard", &UInventoryCardGFx::SetShieldCard)
		.def("SetWeaponCard", &UInventoryCardGFx::SetWeaponCard)
		.def("SetInventoryCard", &UInventoryCardGFx::SetInventoryCard)
		.def("SetCardUIStats", &UInventoryCardGFx::SetCardUIStats)
		;
	py::class_< UInventoryPartListCollectionDefinition, UGBXDefinition >(m, "UInventoryPartListCollectionDefinition")
		.def_readwrite("PartReplacementMode", &UInventoryPartListCollectionDefinition::PartReplacementMode)
		.def_readwrite("ConsolidatedAttributeInitData", &UInventoryPartListCollectionDefinition::ConsolidatedAttributeInitData, py::return_value_policy::reference)
		;
	py::class_< UItemPartListCollectionDefinition, UInventoryPartListCollectionDefinition >(m, "UItemPartListCollectionDefinition")
		.def_readwrite("AssociatedItem", &UItemPartListCollectionDefinition::AssociatedItem, py::return_value_policy::reference)
		.def_readwrite("AlphaPartData", &UItemPartListCollectionDefinition::AlphaPartData, py::return_value_policy::reference)
		.def_readwrite("BetaPartData", &UItemPartListCollectionDefinition::BetaPartData, py::return_value_policy::reference)
		.def_readwrite("GammaPartData", &UItemPartListCollectionDefinition::GammaPartData, py::return_value_policy::reference)
		.def_readwrite("DeltaPartData", &UItemPartListCollectionDefinition::DeltaPartData, py::return_value_policy::reference)
		.def_readwrite("EpsilonPartData", &UItemPartListCollectionDefinition::EpsilonPartData, py::return_value_policy::reference)
		.def_readwrite("ZetaPartData", &UItemPartListCollectionDefinition::ZetaPartData, py::return_value_policy::reference)
		.def_readwrite("EtaPartData", &UItemPartListCollectionDefinition::EtaPartData, py::return_value_policy::reference)
		.def_readwrite("ThetaPartData", &UItemPartListCollectionDefinition::ThetaPartData, py::return_value_policy::reference)
		.def_readwrite("MaterialPartData", &UItemPartListCollectionDefinition::MaterialPartData, py::return_value_policy::reference)
		;
	py::class_< UWeaponPartListCollectionDefinition, UInventoryPartListCollectionDefinition >(m, "UWeaponPartListCollectionDefinition")
		.def_readwrite("AssociatedWeaponType", &UWeaponPartListCollectionDefinition::AssociatedWeaponType, py::return_value_policy::reference)
		.def_readwrite("BodyPartData", &UWeaponPartListCollectionDefinition::BodyPartData, py::return_value_policy::reference)
		.def_readwrite("GripPartData", &UWeaponPartListCollectionDefinition::GripPartData, py::return_value_policy::reference)
		.def_readwrite("BarrelPartData", &UWeaponPartListCollectionDefinition::BarrelPartData, py::return_value_policy::reference)
		.def_readwrite("SightPartData", &UWeaponPartListCollectionDefinition::SightPartData, py::return_value_policy::reference)
		.def_readwrite("StockPartData", &UWeaponPartListCollectionDefinition::StockPartData, py::return_value_policy::reference)
		.def_readwrite("ElementalPartData", &UWeaponPartListCollectionDefinition::ElementalPartData, py::return_value_policy::reference)
		.def_readwrite("Accessory1PartData", &UWeaponPartListCollectionDefinition::Accessory1PartData, py::return_value_policy::reference)
		.def_readwrite("Accessory2PartData", &UWeaponPartListCollectionDefinition::Accessory2PartData, py::return_value_policy::reference)
		.def_readwrite("MaterialPartData", &UWeaponPartListCollectionDefinition::MaterialPartData, py::return_value_policy::reference)
		;
	py::class_< UIPlayerBehavior, UInterface >(m, "UIPlayerBehavior")
		.def("Behavior_StopRevive", &UIPlayerBehavior::Behavior_StopRevive)
		.def("Behavior_StartRevive", &UIPlayerBehavior::Behavior_StartRevive)
		.def("GetPlayerLoot", &UIPlayerBehavior::GetPlayerLoot)
		.def("Behavior_UnlockAchievementForAllPlayers", &UIPlayerBehavior::Behavior_UnlockAchievementForAllPlayers)
		.def("Behavior_DetachMeleeWeapon", &UIPlayerBehavior::Behavior_DetachMeleeWeapon)
		.def("Behavior_AttachMeleeWeapon", &UIPlayerBehavior::Behavior_AttachMeleeWeapon)
		.def("Behavior_UnlockAchievement", &UIPlayerBehavior::Behavior_UnlockAchievement)
		.def("Behavior_RegisterStation", &UIPlayerBehavior::Behavior_RegisterStation)
		.def("Behavior_SendMessageToPlayers", &UIPlayerBehavior::Behavior_SendMessageToPlayers)
		.def("Behavior_CameraAnim", &UIPlayerBehavior::Behavior_CameraAnim)
		.def("Behavior_ViewShake", &UIPlayerBehavior::Behavior_ViewShake)
		.def("Behavior_SpawnTeleporter", &UIPlayerBehavior::Behavior_SpawnTeleporter)
		.def("Behavior_ForceFeedback", &UIPlayerBehavior::Behavior_ForceFeedback)
		.def("Behavior_SpawnCurrentProjectile", &UIPlayerBehavior::Behavior_SpawnCurrentProjectile, py::return_value_policy::reference)
		.def("Behavior_SetCurrentProjectile", &UIPlayerBehavior::Behavior_SetCurrentProjectile)
		.def("Behavior_ThrowGrenade", &UIPlayerBehavior::Behavior_ThrowGrenade)
		.def("Behavior_Melee", &UIPlayerBehavior::Behavior_Melee)
		.def("Behavior_Reload", &UIPlayerBehavior::Behavior_Reload)
		;
	py::class_< UIPlayerMaster, UInterface >(m, "UIPlayerMaster")
		.def("GetPlayerMasterPlayerController", &UIPlayerMaster::GetPlayerMasterPlayerController, py::return_value_policy::reference)
		;
	py::class_< UIProjectileBehavior, UInterface >(m, "UIProjectileBehavior")
		.def("Behavior_TagPayloadType", &UIProjectileBehavior::Behavior_TagPayloadType)
		.def("Behavior_LevelOffTrajectory", &UIProjectileBehavior::Behavior_LevelOffTrajectory)
		.def("Behavior_SetExplosionDefinition", &UIProjectileBehavior::Behavior_SetExplosionDefinition)
		.def("Behavior_SetDamageTypeDefinition", &UIProjectileBehavior::Behavior_SetDamageTypeDefinition)
		.def("Behavior_SetStickyGrenade", &UIProjectileBehavior::Behavior_SetStickyGrenade)
		.def("SetSpeed", &UIProjectileBehavior::SetSpeed)
		.def("SetProximity", &UIProjectileBehavior::SetProximity)
		.def("IsLevelingNow", &UIProjectileBehavior::IsLevelingNow)
		.def("SetHomingRotationOffset", &UIProjectileBehavior::SetHomingRotationOffset)
		.def("GetHomingTargetLocation", &UIProjectileBehavior::GetHomingTargetLocation, py::return_value_policy::reference)
		.def("GetHomingTargetByType", &UIProjectileBehavior::GetHomingTargetByType)
		.def("SetHomingTarget", &UIProjectileBehavior::SetHomingTarget)
		.def("FindHomingTarget", &UIProjectileBehavior::FindHomingTarget)
		.def("Detonate", &UIProjectileBehavior::Detonate)
		.def("SetVelocity", &UIProjectileBehavior::SetVelocity)
		.def("GetVelocity", &UIProjectileBehavior::GetVelocity)
		;
	py::class_< UIProjectileReflector, UInterface >(m, "UIProjectileReflector")
		.def("GetBulletReflectedOffSelfDamageScale", &UIProjectileReflector::GetBulletReflectedOffSelfDamageScale)
		.def("GetBulletReflectedOffEnemyDamageScale", &UIProjectileReflector::GetBulletReflectedOffEnemyDamageScale)
		.def("GetBulletReflectedOffSelfDamageTakenScale", &UIProjectileReflector::GetBulletReflectedOffSelfDamageTakenScale)
		.def("GetEnemyReflectionChance", &UIProjectileReflector::GetEnemyReflectionChance)
		.def("GetSelfReflectionChance", &UIProjectileReflector::GetSelfReflectionChance)
		;
	py::class_< UIProtectionTimer, UInterface >(m, "UIProtectionTimer")
		.def("GetMinimumHealthMaintainedByProtectionTimer", &UIProtectionTimer::GetMinimumHealthMaintainedByProtectionTimer)
		.def("EnableProtectionTimer", &UIProtectionTimer::EnableProtectionTimer)
		.def("IsProtectionTimerActive", &UIProtectionTimer::IsProtectionTimerActive)
		;
	py::class_< UIResourcePoolOwner, UInterface >(m, "UIResourcePoolOwner")
		.def("CanSetResourcePoolValues", &UIResourcePoolOwner::CanSetResourcePoolValues)
		;
	py::class_< UIScreenParticle, UInterface >(m, "UIScreenParticle")
		.def("UpdateVisibilityOfAllActiveScreenParticles", &UIScreenParticle::UpdateVisibilityOfAllActiveScreenParticles)
		.def("ScreenParticlesShouldBeVisible", &UIScreenParticle::ScreenParticlesShouldBeVisible)
		.def("SetUpVoGScreenParticle", &UIScreenParticle::SetUpVoGScreenParticle)
		.def("HideScreenParticle", &UIScreenParticle::HideScreenParticle)
		.def("ShowScreenParticle", &UIScreenParticle::ShowScreenParticle)
		;
	py::class_< UISeeTargetable, UInterface >(m, "UISeeTargetable")
		.def("GetViewLocation", &UISeeTargetable::GetViewLocation, py::return_value_policy::reference)
		.def("GetWorldBody", &UISeeTargetable::GetWorldBody, py::return_value_policy::reference)
		.def("AddTargetable", &UISeeTargetable::AddTargetable)
		;
	py::class_< UIShop, UInterface >(m, "UIShop")
		.def("GetSellingPriceForInventory", &UIShop::GetSellingPriceForInventory)
		.def("GetCurrencyTypeInventoryIsSoldIn", &UIShop::GetCurrencyTypeInventoryIsSoldIn)
		.def("PlayerBuyBackItem", &UIShop::PlayerBuyBackItem)
		.def("PlayerBuyItem", &UIShop::PlayerBuyItem)
		.def("PlayerSellItem", &UIShop::PlayerSellItem)
		.def("GetFeaturedItem", &UIShop::GetFeaturedItem, py::return_value_policy::reference)
		.def("GetBuyBackList", &UIShop::GetBuyBackList)
		.def("GetInventoryList", &UIShop::GetInventoryList)
		.def("GetShopType", &UIShop::GetShopType)
		.def("GetWeaponList", &UIShop::GetWeaponList)
		.def("GetItemList", &UIShop::GetItemList)
		.def("RemoveSoldInventory", &UIShop::RemoveSoldInventory)
		.def("GetResetCost", &UIShop::GetResetCost)
		.def("eventResetInventory", &UIShop::eventResetInventory)
		;
	py::class_< UISimpleAnimPlayer, UInterface >(m, "UISimpleAnimPlayer")
		;
	py::class_< UISkillTreeListener, UInterface >(m, "UISkillTreeListener")
		.def("HandleSkillTreeReset", &UISkillTreeListener::HandleSkillTreeReset)
		;
	py::class_< UItemDefinition, UWillowInventoryDefinition >(m, "UItemDefinition")
		.def_property("bItemNameIsFullName", [](UItemDefinition &self){return self.bItemNameIsFullName;}, [](UItemDefinition &self, bool value){self.bItemNameIsFullName = value ? 1 : 0;})
		.def_property("bUseMeshCompositing", [](UItemDefinition &self){return self.bUseMeshCompositing;}, [](UItemDefinition &self, bool value){self.bUseMeshCompositing = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorProvider", &UItemDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIConstructObject", &UItemDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("DroppedImpact", &UItemDefinition::DroppedImpact, py::return_value_policy::reference)
		.def_readwrite("UseFailureCharacterMessage", &UItemDefinition::UseFailureCharacterMessage, py::return_value_policy::reference)
		.def_readwrite("ItemName", &UItemDefinition::ItemName, py::return_value_policy::reference)
		.def_readwrite("TitleList", &UItemDefinition::TitleList, py::return_value_policy::reference)
		.def_readwrite("PrefixList", &UItemDefinition::PrefixList, py::return_value_policy::reference)
		.def_readwrite("NonCompositeStaticMesh", &UItemDefinition::NonCompositeStaticMesh, py::return_value_policy::reference)
		.def_readwrite("NonCompositeSkeletalMesh", &UItemDefinition::NonCompositeSkeletalMesh, py::return_value_policy::reference)
		.def_readwrite("OverrideMaterial", &UItemDefinition::OverrideMaterial, py::return_value_policy::reference)
		.def_readwrite("GestaltMesh", &UItemDefinition::GestaltMesh, py::return_value_policy::reference)
		.def_readwrite("AlphaParts", &UItemDefinition::AlphaParts, py::return_value_policy::reference)
		.def_readwrite("BetaParts", &UItemDefinition::BetaParts, py::return_value_policy::reference)
		.def_readwrite("GammaParts", &UItemDefinition::GammaParts, py::return_value_policy::reference)
		.def_readwrite("DeltaParts", &UItemDefinition::DeltaParts, py::return_value_policy::reference)
		.def_readwrite("EpsilonParts", &UItemDefinition::EpsilonParts, py::return_value_policy::reference)
		.def_readwrite("ZetaParts", &UItemDefinition::ZetaParts, py::return_value_policy::reference)
		.def_readwrite("EtaParts", &UItemDefinition::EtaParts, py::return_value_policy::reference)
		.def_readwrite("ThetaParts", &UItemDefinition::ThetaParts, py::return_value_policy::reference)
		.def_readwrite("MaterialParts", &UItemDefinition::MaterialParts, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UItemDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def_readwrite("Behaviors", &UItemDefinition::Behaviors, py::return_value_policy::reference)
		.def_readwrite("ExternalAttributeEffects", &UItemDefinition::ExternalAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("ItemAttributeEffects", &UItemDefinition::ItemAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("ItemCardAttributes", &UItemDefinition::ItemCardAttributes, py::return_value_policy::reference)
		.def_readwrite("CustomPresentations", &UItemDefinition::CustomPresentations, py::return_value_policy::reference)
		.def_readwrite("RequiredPlayerClass", &UItemDefinition::RequiredPlayerClass, py::return_value_policy::reference)
		.def_readwrite("PickupIconOverride", &UItemDefinition::PickupIconOverride, py::return_value_policy::reference)
		.def("DisplayTitleAtEnd", &UItemDefinition::DisplayTitleAtEnd)
		.def("GetManufacturerOverrideOrDefault", &UItemDefinition::GetManufacturerOverrideOrDefault, py::return_value_policy::reference)
		.def("eventGetEquipmentLocation", &UItemDefinition::eventGetEquipmentLocation)
		.def("PlayerClassRequirementMet", &UItemDefinition::PlayerClassRequirementMet)
		.def("GetRequiredPlayerClass", &UItemDefinition::GetRequiredPlayerClass, py::return_value_policy::reference)
		.def("OnPickupDisassociated", &UItemDefinition::OnPickupDisassociated)
		.def("OnPickupAssociated", &UItemDefinition::OnPickupAssociated)
		.def("OnCreate", &UItemDefinition::OnCreate)
		.def("SetBehaviorProviderDefinition", &UItemDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UItemDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UEquipableItemDefinition, UItemDefinition >(m, "UEquipableItemDefinition")
		.def_readwrite("DamageTypeIcon", &UEquipableItemDefinition::DamageTypeIcon)
		.def_readwrite("EquipSounds", &UEquipableItemDefinition::EquipSounds, py::return_value_policy::reference)
		.def_readwrite("UnequipSounds", &UEquipableItemDefinition::UnequipSounds, py::return_value_policy::reference)
		.def("OnUnequipped", &UEquipableItemDefinition::OnUnequipped)
		.def("OnEquipped", &UEquipableItemDefinition::OnEquipped)
		;
	py::class_< UArtifactDefinition, UEquipableItemDefinition >(m, "UArtifactDefinition")
		.def("GetEquipmentLocation", &UArtifactDefinition::GetEquipmentLocation)
		;
	py::class_< UClassModDefinition, UEquipableItemDefinition >(m, "UClassModDefinition")
		.def_readwrite("ManufacturerOverride", &UClassModDefinition::ManufacturerOverride, py::return_value_policy::reference)
		.def_readwrite("DisplayClassModAtBeginningOfName", &UClassModDefinition::DisplayClassModAtBeginningOfName)
		.def("DisplayTitleAtEnd", &UClassModDefinition::DisplayTitleAtEnd)
		.def("GetManufacturerOverrideOrDefault", &UClassModDefinition::GetManufacturerOverrideOrDefault, py::return_value_policy::reference)
		.def("GetEquipmentLocation", &UClassModDefinition::GetEquipmentLocation)
		.def("PlayerClassRequirementMet", &UClassModDefinition::PlayerClassRequirementMet)
		;
	py::class_< UCrossDLCClassModDefinition, UClassModDefinition >(m, "UCrossDLCClassModDefinition")
		.def_readwrite("RequiredPlayerClassPathName", &UCrossDLCClassModDefinition::RequiredPlayerClassPathName, py::return_value_policy::reference)
		;
	py::class_< UGrenadeModDefinition, UEquipableItemDefinition >(m, "UGrenadeModDefinition")
		.def_readwrite("DefaultProjectileDefinition", &UGrenadeModDefinition::DefaultProjectileDefinition, py::return_value_policy::reference)
		.def_readwrite("ProjectileBaseValues", &UGrenadeModDefinition::ProjectileBaseValues, py::return_value_policy::reference)
		.def_readwrite("SetProjectileSequenceState", &UGrenadeModDefinition::SetProjectileSequenceState, py::return_value_policy::reference)
		.def("GetEquipmentLocation", &UGrenadeModDefinition::GetEquipmentLocation)
		.def("OnGrenadeKilledEnemy", &UGrenadeModDefinition::OnGrenadeKilledEnemy)
		.def("OnGrenadeKilledNeutral", &UGrenadeModDefinition::OnGrenadeKilledNeutral)
		.def("OnGrenadeDamagedNeutral", &UGrenadeModDefinition::OnGrenadeDamagedNeutral)
		.def("OnGrenadeDamagedFriendly", &UGrenadeModDefinition::OnGrenadeDamagedFriendly)
		.def("OnGrenadeDamagedEnemy", &UGrenadeModDefinition::OnGrenadeDamagedEnemy)
		.def("OnGrenadeExploded", &UGrenadeModDefinition::OnGrenadeExploded)
		.def("OnGrenadeSpawned", &UGrenadeModDefinition::OnGrenadeSpawned)
		;
	py::class_< UShieldDefinition, UEquipableItemDefinition >(m, "UShieldDefinition")
		.def_readwrite("ShieldType", &UShieldDefinition::ShieldType)
		.def_readwrite("ShieldPrimeMechanism", &UShieldDefinition::ShieldPrimeMechanism)
		.def_readwrite("ShieldTypeFlashFrameName", &UShieldDefinition::ShieldTypeFlashFrameName, py::return_value_policy::reference)
		.def_readwrite("PrimedFlashFrameName", &UShieldDefinition::PrimedFlashFrameName, py::return_value_policy::reference)
		.def_readwrite("ShieldPhysicalMaterial", &UShieldDefinition::ShieldPhysicalMaterial, py::return_value_policy::reference)
		.def("GetEquipmentLocation", &UShieldDefinition::GetEquipmentLocation)
		.def("OnDamageResistanceTypeChanged", &UShieldDefinition::OnDamageResistanceTypeChanged)
		.def("OnEffectTriggered", &UShieldDefinition::OnEffectTriggered)
		.def("OnShieldNowRegenerating", &UShieldDefinition::OnShieldNowRegenerating)
		.def("OnShieldNowDepletedAfterBeingFull", &UShieldDefinition::OnShieldNowDepletedAfterBeingFull)
		.def("OnShieldNowDepleted", &UShieldDefinition::OnShieldNowDepleted)
		.def("OnShieldNowFull", &UShieldDefinition::OnShieldNowFull)
		.def("OnShieldPrimed", &UShieldDefinition::OnShieldPrimed)
		.def("OnAmmoAbsorbed", &UShieldDefinition::OnAmmoAbsorbed)
		;
	py::class_< UUsableItemDefinition, UItemDefinition >(m, "UUsableItemDefinition")
		.def_property("bPlayerUseItemOnPickup", [](UUsableItemDefinition &self){return self.bPlayerUseItemOnPickup;}, [](UUsableItemDefinition &self, bool value){self.bPlayerUseItemOnPickup = value ? 1 : 0;})
		.def_property("bAIUseItemOnPickup", [](UUsableItemDefinition &self){return self.bAIUseItemOnPickup;}, [](UUsableItemDefinition &self, bool value){self.bAIUseItemOnPickup = value ? 1 : 0;})
		.def_property("bUseCoopRange", [](UUsableItemDefinition &self){return self.bUseCoopRange;}, [](UUsableItemDefinition &self, bool value){self.bUseCoopRange = value ? 1 : 0;})
		.def_readwrite("UsedStatId", &UUsableItemDefinition::UsedStatId, py::return_value_policy::reference)
		.def("OnUsed", &UUsableItemDefinition::OnUsed)
		;
	py::class_< UMissionItemDefinition, UUsableItemDefinition >(m, "UMissionItemDefinition")
		.def_property("bAlwaysDropMissionPickup", [](UMissionItemDefinition &self){return self.bAlwaysDropMissionPickup;}, [](UMissionItemDefinition &self, bool value){self.bAlwaysDropMissionPickup = value ? 1 : 0;})
		.def_property("bUpdateMissionObjectiveWhenUsed", [](UMissionItemDefinition &self){return self.bUpdateMissionObjectiveWhenUsed;}, [](UMissionItemDefinition &self, bool value){self.bUpdateMissionObjectiveWhenUsed = value ? 1 : 0;})
		.def_property("bMissionWaypoint", [](UMissionItemDefinition &self){return self.bMissionWaypoint;}, [](UMissionItemDefinition &self, bool value){self.bMissionWaypoint = value ? 1 : 0;})
		.def_property("bUniqueMissionDirector", [](UMissionItemDefinition &self){return self.bUniqueMissionDirector;}, [](UMissionItemDefinition &self, bool value){self.bUniqueMissionDirector = value ? 1 : 0;})
		.def_readwrite("AssociatedMissionObjective", &UMissionItemDefinition::AssociatedMissionObjective, py::return_value_policy::reference)
		.def_readwrite("MissionDirective", &UMissionItemDefinition::MissionDirective, py::return_value_policy::reference)
		.def_readwrite("DirectiveMovieDefinition", &UMissionItemDefinition::DirectiveMovieDefinition, py::return_value_policy::reference)
		.def("CanPickupInBulk", &UMissionItemDefinition::CanPickupInBulk)
		.def("ShouldPlayerAutomaticallyPickup", &UMissionItemDefinition::ShouldPlayerAutomaticallyPickup)
		;
	py::class_< UUsableCustomizationItemDefinition, UUsableItemDefinition >(m, "UUsableCustomizationItemDefinition")
		.def_readwrite("OverridePool", &UUsableCustomizationItemDefinition::OverridePool, py::return_value_policy::reference)
		.def_readwrite("CustomizationDef", &UUsableCustomizationItemDefinition::CustomizationDef, py::return_value_policy::reference)
		.def_readwrite("PrimaryColor", &UUsableCustomizationItemDefinition::PrimaryColor, py::return_value_policy::reference)
		.def_readwrite("SecondaryColor", &UUsableCustomizationItemDefinition::SecondaryColor, py::return_value_policy::reference)
		.def_readwrite("TertiaryColor", &UUsableCustomizationItemDefinition::TertiaryColor, py::return_value_policy::reference)
		.def_readwrite("ItemCardTopStatString", &UUsableCustomizationItemDefinition::ItemCardTopStatString, py::return_value_policy::reference)
		.def("GetCustomizationDefinitionToUnlock", &UUsableCustomizationItemDefinition::GetCustomizationDefinitionToUnlock, py::return_value_policy::reference)
		;
	py::class_< UItemPartDefinition, UWillowInventoryPartDefinition >(m, "UItemPartDefinition")
		.def_readwrite("VfTable_IIBehaviorProvider", &UItemPartDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("PartType", &UItemPartDefinition::PartType)
		.def_readwrite("TitleList", &UItemPartDefinition::TitleList, py::return_value_policy::reference)
		.def_readwrite("PrefixList", &UItemPartDefinition::PrefixList, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UItemPartDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def_readwrite("ExternalAttributeEffects", &UItemPartDefinition::ExternalAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("ItemAttributeEffects", &UItemPartDefinition::ItemAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("ItemCardAttributes", &UItemPartDefinition::ItemCardAttributes, py::return_value_policy::reference)
		.def_readwrite("CustomPresentations", &UItemPartDefinition::CustomPresentations, py::return_value_policy::reference)
		.def("OnPickupDisassociated", &UItemPartDefinition::OnPickupDisassociated)
		.def("OnPickupAssociated", &UItemPartDefinition::OnPickupAssociated)
		.def("OnCreate", &UItemPartDefinition::OnCreate)
		.def("SetBehaviorProviderDefinition", &UItemPartDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UItemPartDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UEquipableItemPartDefinition, UItemPartDefinition >(m, "UEquipableItemPartDefinition")
		.def("OnUnequipped", &UEquipableItemPartDefinition::OnUnequipped)
		.def("OnEquipped", &UEquipableItemPartDefinition::OnEquipped)
		;
	py::class_< UArtifactPartDefinition, UEquipableItemPartDefinition >(m, "UArtifactPartDefinition")
		;
	py::class_< UClassModPartDefinition, UEquipableItemPartDefinition >(m, "UClassModPartDefinition")
		;
	py::class_< UGrenadeModPartDefinition, UEquipableItemPartDefinition >(m, "UGrenadeModPartDefinition")
		.def_property("bAICanUse", [](UGrenadeModPartDefinition &self){return self.bAICanUse;}, [](UGrenadeModPartDefinition &self, bool value){self.bAICanUse = value ? 1 : 0;})
		.def_readwrite("CustomProjectileDefinition", &UGrenadeModPartDefinition::CustomProjectileDefinition, py::return_value_policy::reference)
		.def_readwrite("SetProjectileSequenceState", &UGrenadeModPartDefinition::SetProjectileSequenceState, py::return_value_policy::reference)
		.def_readwrite("FlashIconPartName", &UGrenadeModPartDefinition::FlashIconPartName, py::return_value_policy::reference)
		.def_readwrite("FlashIconPartTint", &UGrenadeModPartDefinition::FlashIconPartTint, py::return_value_policy::reference)
		.def("OnGrenadeKilledEnemy", &UGrenadeModPartDefinition::OnGrenadeKilledEnemy)
		.def("OnGrenadeKilledNeutral", &UGrenadeModPartDefinition::OnGrenadeKilledNeutral)
		.def("OnGrenadeDamagedNeutral", &UGrenadeModPartDefinition::OnGrenadeDamagedNeutral)
		.def("OnGrenadeDamagedFriendly", &UGrenadeModPartDefinition::OnGrenadeDamagedFriendly)
		.def("OnGrenadeDamagedEnemy", &UGrenadeModPartDefinition::OnGrenadeDamagedEnemy)
		.def("OnGrenadeExploded", &UGrenadeModPartDefinition::OnGrenadeExploded)
		.def("OnGrenadeSpawned", &UGrenadeModPartDefinition::OnGrenadeSpawned)
		;
	py::class_< UShieldPartDefinition, UEquipableItemPartDefinition >(m, "UShieldPartDefinition")
		;
	py::class_< UItemNamePartDefinition, UItemPartDefinition >(m, "UItemNamePartDefinition")
		.def_property("bNameIsUnique", [](UItemNamePartDefinition &self){return self.bNameIsUnique;}, [](UItemNamePartDefinition &self, bool value){self.bNameIsUnique = value ? 1 : 0;})
		.def_readwrite("PartName", &UItemNamePartDefinition::PartName, py::return_value_policy::reference)
		.def_readwrite("Expressions", &UItemNamePartDefinition::Expressions, py::return_value_policy::reference)
		.def_readwrite("MinExpLevelRequirement", &UItemNamePartDefinition::MinExpLevelRequirement)
		.def_readwrite("MaxExpLevelRequirement", &UItemNamePartDefinition::MaxExpLevelRequirement)
		.def_readwrite("Priority", &UItemNamePartDefinition::Priority)
		;
	py::class_< UUsableItemPartDefinition, UItemPartDefinition >(m, "UUsableItemPartDefinition")
		.def("OnUsed", &UUsableItemPartDefinition::OnUsed)
		;
	py::class_< UMissionItemPartDefinition, UUsableItemPartDefinition >(m, "UMissionItemPartDefinition")
		;
	py::class_< UItemPartListDefinition, UGBXDefinition >(m, "UItemPartListDefinition")
		.def_readwrite("VfTable_IIConstructObject", &UItemPartListDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("WeightedParts", &UItemPartListDefinition::WeightedParts, py::return_value_policy::reference)
		.def_readwrite("ConsolidatedAttributeInitData", &UItemPartListDefinition::ConsolidatedAttributeInitData, py::return_value_policy::reference)
		;
	py::class_< UItemPool, UObject >(m, "UItemPool")
		.def("IsAllItemTypesDebugEnabled", &UItemPool::IsAllItemTypesDebugEnabled)
		.def("ToggleAllItemTypesDebug", &UItemPool::ToggleAllItemTypesDebug)
		.def("SpawnBalancedInventoryFromInventoryBalanceDefinition", &UItemPool::SpawnBalancedInventoryFromInventoryBalanceDefinition)
		.def("SpawnBalancedInventoryFromPool", &UItemPool::SpawnBalancedInventoryFromPool)
		;
	py::class_< UItemPoolDefinition, UGBXDefinition >(m, "UItemPoolDefinition")
		.def_property("bDisablePhysicsDrop", [](UItemPoolDefinition &self){return self.bDisablePhysicsDrop;}, [](UItemPoolDefinition &self, bool value){self.bDisablePhysicsDrop = value ? 1 : 0;})
		.def_property("bAutoReadyItems", [](UItemPoolDefinition &self){return self.bAutoReadyItems;}, [](UItemPoolDefinition &self, bool value){self.bAutoReadyItems = value ? 1 : 0;})
		.def_property("bSupportsGameStageVariance", [](UItemPoolDefinition &self){return self.bSupportsGameStageVariance;}, [](UItemPoolDefinition &self, bool value){self.bSupportsGameStageVariance = value ? 1 : 0;})
		.def_property("bShopsHaveInfiniteQuantity", [](UItemPoolDefinition &self){return self.bShopsHaveInfiniteQuantity;}, [](UItemPoolDefinition &self, bool value){self.bShopsHaveInfiniteQuantity = value ? 1 : 0;})
		.def_property("bEligibleForUncommonWeightMultiplier", [](UItemPoolDefinition &self){return self.bEligibleForUncommonWeightMultiplier;}, [](UItemPoolDefinition &self, bool value){self.bEligibleForUncommonWeightMultiplier = value ? 1 : 0;})
		.def_readwrite("CheatSpawnLevel", &UItemPoolDefinition::CheatSpawnLevel, py::return_value_policy::reference)
		.def_readwrite("BalancedItems", &UItemPoolDefinition::BalancedItems, py::return_value_policy::reference)
		.def_readwrite("Quantity", &UItemPoolDefinition::Quantity, py::return_value_policy::reference)
		.def_readwrite("MinGameStageRequirement", &UItemPoolDefinition::MinGameStageRequirement, py::return_value_policy::reference)
		.def_readwrite("MaxGameStageRequirement", &UItemPoolDefinition::MaxGameStageRequirement, py::return_value_policy::reference)
		;
	py::class_< UCrossDLCItemPoolDefinition, UItemPoolDefinition >(m, "UCrossDLCItemPoolDefinition")
		.def_readwrite("BalancedItemsMirror", &UCrossDLCItemPoolDefinition::BalancedItemsMirror, py::return_value_policy::reference)
		;
	py::class_< UKeyedItemPoolDefinition, UItemPoolDefinition >(m, "UKeyedItemPoolDefinition")
		.def_readwrite("Key", &UKeyedItemPoolDefinition::Key)
		;
	py::class_< UItemPoolListDefinition, UGBXDefinition >(m, "UItemPoolListDefinition")
		.def_readwrite("ItemPoolIncludedLists", &UItemPoolListDefinition::ItemPoolIncludedLists, py::return_value_policy::reference)
		.def_readwrite("ItemPools", &UItemPoolListDefinition::ItemPools, py::return_value_policy::reference)
		.def("AddToItemPoolList", &UItemPoolListDefinition::AddToItemPoolList)
		;
	py::class_< UIUpdatePostProcessOverride, UInterface >(m, "UIUpdatePostProcessOverride")
		.def("EndLostShield", &UIUpdatePostProcessOverride::EndLostShield)
		.def("BeginLostShield", &UIUpdatePostProcessOverride::BeginLostShield)
		.def("PopPostProcessChain", &UIUpdatePostProcessOverride::PopPostProcessChain)
		.def("PushPostProcessChain", &UIUpdatePostProcessOverride::PushPostProcessChain)
		.def("ClearPostProcessOverlayQueue", &UIUpdatePostProcessOverride::ClearPostProcessOverlayQueue)
		.def("SetupPostProcessOverlay", &UIUpdatePostProcessOverride::SetupPostProcessOverlay)
		.def("GetPostProcessOverlayIndex", &UIUpdatePostProcessOverride::GetPostProcessOverlayIndex)
		.def("AddPostProcessOverlay", &UIUpdatePostProcessOverride::AddPostProcessOverlay)
		;
	py::class_< UIUsable, UInterface >(m, "UIUsable")
		.def("NotifyUserCouldNotAffordAttemptedUse", &UIUsable::NotifyUserCouldNotAffordAttemptedUse)
		.def("SetInteractionIcon", &UIUsable::SetInteractionIcon)
		.def("UseObject", &UIUsable::UseObject)
		;
	py::class_< UIWeaponThrow, UInterface >(m, "UIWeaponThrow")
		.def("Behavior_WeaponThrow", &UIWeaponThrow::Behavior_WeaponThrow)
		;
	py::class_< UIWeatherBehavior, UInterface >(m, "UIWeatherBehavior")
		.def("DestroyWeatherSystem", &UIWeatherBehavior::DestroyWeatherSystem)
		.def("CreateWeatherSystem", &UIWeatherBehavior::CreateWeatherSystem)
		;
	py::class_< ULcdHelper, UObject >(m, "ULcdHelper")
		.def_readwrite("VfTable_FTickableObject", &ULcdHelper::VfTable_FTickableObject, py::return_value_policy::reference)
		.def("IsLcdScreenConnected", &ULcdHelper::IsLcdScreenConnected)
		.def("UpdateAvailableTokens", &ULcdHelper::UpdateAvailableTokens)
		.def("UpdateCurrency", &ULcdHelper::UpdateCurrency)
		.def("GetPendingInvite", &ULcdHelper::GetPendingInvite, py::return_value_policy::reference)
		.def("UpdateFriendData", &ULcdHelper::UpdateFriendData)
		.def("UpdateChallengeData", &ULcdHelper::UpdateChallengeData)
		.def("UpdateMissionData", &ULcdHelper::UpdateMissionData)
		.def("SetLevel", &ULcdHelper::SetLevel)
		.def("SetLevelProgress", &ULcdHelper::SetLevelProgress)
		.def("NotifyLoading", &ULcdHelper::NotifyLoading)
		;
	py::class_< ULevelDependencyList, UGBXDefinition >(m, "ULevelDependencyList")
		.def_readwrite("LoaderMap", &ULevelDependencyList::LoaderMap, py::return_value_policy::reference)
		.def_readwrite("LevelList", &ULevelDependencyList::LevelList, py::return_value_policy::reference)
		.def_readwrite("LevelWorldDiscoveryStatID", &ULevelDependencyList::LevelWorldDiscoveryStatID, py::return_value_policy::reference)
		.def_readwrite("TotalNumWorldDiscoveryAreas", &ULevelDependencyList::TotalNumWorldDiscoveryAreas)
		.def_readwrite("AllAreasDiscoveredAchievement", &ULevelDependencyList::AllAreasDiscoveredAchievement)
		.def("GetFriendlyLevelNameFromMapName", &ULevelDependencyList::GetFriendlyLevelNameFromMapName, py::return_value_policy::reference)
		;
	py::class_< ALevelLandmarkAnchor, ALevelLandmark >(m, "ALevelLandmarkAnchor")
		.def_readwrite("Texture", &ALevelLandmarkAnchor::Texture, py::return_value_policy::reference)
		.def_readwrite("Opacity", &ALevelLandmarkAnchor::Opacity)
		.def_readwrite("TextureSizeX", &ALevelLandmarkAnchor::TextureSizeX)
		.def_readwrite("TextureSizeY", &ALevelLandmarkAnchor::TextureSizeY)
		.def_readwrite("MapFrame", &ALevelLandmarkAnchor::MapFrame, py::return_value_policy::reference)
		.def_readwrite("DLCMap", &ALevelLandmarkAnchor::DLCMap, py::return_value_policy::reference)
		;
	py::class_< ULevelLandmarkAnchorRenderingComponent, UPrimitiveComponent >(m, "ULevelLandmarkAnchorRenderingComponent")
		;
	py::class_< ULocalizedStringDefinition, UGBXDefinition >(m, "ULocalizedStringDefinition")
		.def_readwrite("Text", &ULocalizedStringDefinition::Text, py::return_value_policy::reference)
		;
	py::class_< ULockoutDefinition, UGBXDefinition >(m, "ULockoutDefinition")
		.def_readwrite("Style", &ULockoutDefinition::Style)
		.def_readwrite("Days", &ULockoutDefinition::Days)
		.def_readwrite("Hours", &ULockoutDefinition::Hours)
		.def_readwrite("Minutes", &ULockoutDefinition::Minutes)
		.def_readwrite("DlcExpansion", &ULockoutDefinition::DlcExpansion, py::return_value_policy::reference)
		.def("ComputePackedSystemTime", &ULockoutDefinition::ComputePackedSystemTime)
		;
	py::class_< ULookAxisDefinition, UGBXDefinition >(m, "ULookAxisDefinition")
		.def_readwrite("Speed", &ULookAxisDefinition::Speed)
		.def_readwrite("ZoomSpeed", &ULookAxisDefinition::ZoomSpeed)
		.def_readwrite("AccelThreshold", &ULookAxisDefinition::AccelThreshold)
		.def_readwrite("AccelRate", &ULookAxisDefinition::AccelRate)
		.def_readwrite("AccelSpeed", &ULookAxisDefinition::AccelSpeed)
		.def_readwrite("AccelWarmup", &ULookAxisDefinition::AccelWarmup)
		;
	py::class_< ULookingAtInjuredPlayerExpressionEvaluator, UExpressionEvaluator >(m, "ULookingAtInjuredPlayerExpressionEvaluator")
		.def("Evaluate", &ULookingAtInjuredPlayerExpressionEvaluator::Evaluate)
		;
	py::class_< ULootConfigurationDefinition, UGBXDefinition >(m, "ULootConfigurationDefinition")
		.def_readwrite("Loot", &ULootConfigurationDefinition::Loot, py::return_value_policy::reference)
		.def_readwrite("Probability", &ULootConfigurationDefinition::Probability, py::return_value_policy::reference)
		;
	py::class_< UManufacturerAttributeValueResolver, UAttributeValueResolver >(m, "UManufacturerAttributeValueResolver")
		.def_readwrite("ValueIfNotMatched", &UManufacturerAttributeValueResolver::ValueIfNotMatched, py::return_value_policy::reference)
		.def_readwrite("Manufacturers", &UManufacturerAttributeValueResolver::Manufacturers, py::return_value_policy::reference)
		;
	py::class_< UMarketingUnlockDefinition, UGBXDefinition >(m, "UMarketingUnlockDefinition")
		.def_readwrite("UnlockCode", &UMarketingUnlockDefinition::UnlockCode)
		.def_readwrite("DialogLocFile", &UMarketingUnlockDefinition::DialogLocFile, py::return_value_policy::reference)
		.def_readwrite("DialogLocSection", &UMarketingUnlockDefinition::DialogLocSection, py::return_value_policy::reference)
		;
	py::class_< UMeleeDefinition, UGBXDefinition >(m, "UMeleeDefinition")
		.def_property("bMeleeOverPeriodOfTime", [](UMeleeDefinition &self){return self.bMeleeOverPeriodOfTime;}, [](UMeleeDefinition &self, bool value){self.bMeleeOverPeriodOfTime = value ? 1 : 0;})
		.def_property("bHitEachTargetOnlyOnce", [](UMeleeDefinition &self){return self.bHitEachTargetOnlyOnce;}, [](UMeleeDefinition &self, bool value){self.bHitEachTargetOnlyOnce = value ? 1 : 0;})
		.def_property("bStopMeleeOnLanded", [](UMeleeDefinition &self){return self.bStopMeleeOnLanded;}, [](UMeleeDefinition &self, bool value){self.bStopMeleeOnLanded = value ? 1 : 0;})
		.def_property("bAffectEnemy", [](UMeleeDefinition &self){return self.bAffectEnemy;}, [](UMeleeDefinition &self, bool value){self.bAffectEnemy = value ? 1 : 0;})
		.def_property("bAffectFriendly", [](UMeleeDefinition &self){return self.bAffectFriendly;}, [](UMeleeDefinition &self, bool value){self.bAffectFriendly = value ? 1 : 0;})
		.def_property("bAffectNeutral", [](UMeleeDefinition &self){return self.bAffectNeutral;}, [](UMeleeDefinition &self, bool value){self.bAffectNeutral = value ? 1 : 0;})
		.def_property("bUseDamageRadius", [](UMeleeDefinition &self){return self.bUseDamageRadius;}, [](UMeleeDefinition &self, bool value){self.bUseDamageRadius = value ? 1 : 0;})
		.def_property("bExpandRadiusOverTime", [](UMeleeDefinition &self){return self.bExpandRadiusOverTime;}, [](UMeleeDefinition &self, bool value){self.bExpandRadiusOverTime = value ? 1 : 0;})
		.def_property("bUseTargetCone", [](UMeleeDefinition &self){return self.bUseTargetCone;}, [](UMeleeDefinition &self, bool value){self.bUseTargetCone = value ? 1 : 0;})
		.def_property("bIgnoreWorldGeometry", [](UMeleeDefinition &self){return self.bIgnoreWorldGeometry;}, [](UMeleeDefinition &self, bool value){self.bIgnoreWorldGeometry = value ? 1 : 0;})
		.def_readwrite("VfTable_IIDamageCauser", &UMeleeDefinition::VfTable_IIDamageCauser, py::return_value_policy::reference)
		.def_readwrite("Damage", &UMeleeDefinition::Damage, py::return_value_policy::reference)
		.def_readwrite("DamageSource", &UMeleeDefinition::DamageSource, py::return_value_policy::reference)
		.def_readwrite("DamageTypeDefinitionOverride", &UMeleeDefinition::DamageTypeDefinitionOverride, py::return_value_policy::reference)
		.def_readwrite("DamageTypeDefinition", &UMeleeDefinition::DamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("ImpactDefinition", &UMeleeDefinition::ImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("Knockback", &UMeleeDefinition::Knockback, py::return_value_policy::reference)
		.def_readwrite("StatusEffectDamage", &UMeleeDefinition::StatusEffectDamage, py::return_value_policy::reference)
		.def_readwrite("StatusEffectChance", &UMeleeDefinition::StatusEffectChance, py::return_value_policy::reference)
		.def_readwrite("HitStartSocketOrBone", &UMeleeDefinition::HitStartSocketOrBone, py::return_value_policy::reference)
		.def_readwrite("HitStartOffset", &UMeleeDefinition::HitStartOffset, py::return_value_policy::reference)
		.def_readwrite("MaxMeleeDuration", &UMeleeDefinition::MaxMeleeDuration)
		.def_readwrite("AttackInterval", &UMeleeDefinition::AttackInterval)
		.def_readwrite("DamageRadius", &UMeleeDefinition::DamageRadius)
		.def_readwrite("DamageHeight", &UMeleeDefinition::DamageHeight)
		.def_readwrite("DamageConeAngle", &UMeleeDefinition::DamageConeAngle)
		.def_readwrite("DamageHeightOffset", &UMeleeDefinition::DamageHeightOffset)
		.def_readwrite("ConeAngle", &UMeleeDefinition::ConeAngle)
		.def_readwrite("TraceDistance", &UMeleeDefinition::TraceDistance)
		.def_readwrite("OnHitEnemy", &UMeleeDefinition::OnHitEnemy, py::return_value_policy::reference)
		.def_readwrite("OnHitEnemyHealth", &UMeleeDefinition::OnHitEnemyHealth, py::return_value_policy::reference)
		.def_readwrite("OnHitEnemyShield", &UMeleeDefinition::OnHitEnemyShield, py::return_value_policy::reference)
		.def_readwrite("OnHitFriendly", &UMeleeDefinition::OnHitFriendly, py::return_value_policy::reference)
		.def_readwrite("OnHitEnemyOrFriendly", &UMeleeDefinition::OnHitEnemyOrFriendly, py::return_value_policy::reference)
		.def_readwrite("OnKilledEnemy", &UMeleeDefinition::OnKilledEnemy, py::return_value_policy::reference)
		.def("GetControllerResponsibleForDamage", &UMeleeDefinition::GetControllerResponsibleForDamage, py::return_value_policy::reference)
		.def("GetInstigator", &UMeleeDefinition::GetInstigator, py::return_value_policy::reference)
		.def("GetInstigatorSelfDamageScale", &UMeleeDefinition::GetInstigatorSelfDamageScale)
		.def("GetFireIntervalChanceModifier", &UMeleeDefinition::GetFireIntervalChanceModifier)
		.def("GetStatusEffectBaseChanceModifier", &UMeleeDefinition::GetStatusEffectBaseChanceModifier)
		.def("GetStatusEffectChanceModifier", &UMeleeDefinition::GetStatusEffectChanceModifier)
		.def("GetStatusEffectBaseDamage", &UMeleeDefinition::GetStatusEffectBaseDamage)
		.def("IsMeleeDebugEnabled", &UMeleeDefinition::IsMeleeDebugEnabled)
		.def("ToggleMeleeDebug", &UMeleeDefinition::ToggleMeleeDebug)
		.def("MeleeAttack", &UMeleeDefinition::MeleeAttack)
		;
	py::class_< UMissionDefinition, UGBXDefinition >(m, "UMissionDefinition")
		.def_property("bPlotCritical", [](UMissionDefinition &self){return self.bPlotCritical;}, [](UMissionDefinition &self, bool value){self.bPlotCritical = value ? 1 : 0;})
		.def_property("bActivateInitialObjectiveSet", [](UMissionDefinition &self){return self.bActivateInitialObjectiveSet;}, [](UMissionDefinition &self, bool value){self.bActivateInitialObjectiveSet = value ? 1 : 0;})
		.def_property("bGlobalMissionBlocker", [](UMissionDefinition &self){return self.bGlobalMissionBlocker;}, [](UMissionDefinition &self, bool value){self.bGlobalMissionBlocker = value ? 1 : 0;})
		.def_property("bEnableAltReward", [](UMissionDefinition &self){return self.bEnableAltReward;}, [](UMissionDefinition &self, bool value){self.bEnableAltReward = value ? 1 : 0;})
		.def_property("bCanBeFailed", [](UMissionDefinition &self){return self.bCanBeFailed;}, [](UMissionDefinition &self, bool value){self.bCanBeFailed = value ? 1 : 0;})
		.def_property("bGameStageLocked", [](UMissionDefinition &self){return self.bGameStageLocked;}, [](UMissionDefinition &self, bool value){self.bGameStageLocked = value ? 1 : 0;})
		.def_property("bRepeatable", [](UMissionDefinition &self){return self.bRepeatable;}, [](UMissionDefinition &self, bool value){self.bRepeatable = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBalancedActor", &UMissionDefinition::VfTable_IIBalancedActor, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorProvider", &UMissionDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDlcLicensableObject", &UMissionDefinition::VfTable_IIDlcLicensableObject, py::return_value_policy::reference)
		.def_readwrite("MissionName", &UMissionDefinition::MissionName, py::return_value_policy::reference)
		.def_readwrite("MissionDescription", &UMissionDefinition::MissionDescription, py::return_value_policy::reference)
		.def_readwrite("TurnInDescription", &UMissionDefinition::TurnInDescription, py::return_value_policy::reference)
		.def_readwrite("MissionSummary", &UMissionDefinition::MissionSummary, py::return_value_policy::reference)
		.def_readwrite("MissionGiver", &UMissionDefinition::MissionGiver, py::return_value_policy::reference)
		.def_readwrite("MissionTurnInLocation", &UMissionDefinition::MissionTurnInLocation, py::return_value_policy::reference)
		.def_readwrite("TeaserText", &UMissionDefinition::TeaserText, py::return_value_policy::reference)
		.def_readwrite("TravelStation", &UMissionDefinition::TravelStation, py::return_value_policy::reference)
		.def_readwrite("TurnInStation", &UMissionDefinition::TurnInStation, py::return_value_policy::reference)
		.def_readwrite("MissionWeapon", &UMissionDefinition::MissionWeapon, py::return_value_policy::reference)
		.def_readwrite("ObjectiveDependency", &UMissionDefinition::ObjectiveDependency, py::return_value_policy::reference)
		.def_readwrite("Dependencies", &UMissionDefinition::Dependencies, py::return_value_policy::reference)
		.def_readwrite("NextMissionInChain", &UMissionDefinition::NextMissionInChain, py::return_value_policy::reference)
		.def_readwrite("InitialObjectiveSet", &UMissionDefinition::InitialObjectiveSet, py::return_value_policy::reference)
		.def_readwrite("MarketingUnlock", &UMissionDefinition::MarketingUnlock, py::return_value_policy::reference)
		.def_readwrite("BlockedMissions", &UMissionDefinition::BlockedMissions, py::return_value_policy::reference)
		.def_readwrite("StartBlockingSet", &UMissionDefinition::StartBlockingSet, py::return_value_policy::reference)
		.def_readwrite("StopBlockingSet", &UMissionDefinition::StopBlockingSet, py::return_value_policy::reference)
		.def_readwrite("ObjectiveDefs", &UMissionDefinition::ObjectiveDefs, py::return_value_policy::reference)
		.def_readwrite("ObjectiveSetDefs", &UMissionDefinition::ObjectiveSetDefs, py::return_value_policy::reference)
		.def_readwrite("GameStageRegion", &UMissionDefinition::GameStageRegion, py::return_value_policy::reference)
		.def_readwrite("Reward", &UMissionDefinition::Reward, py::return_value_policy::reference)
		.def_readwrite("AlternativeReward", &UMissionDefinition::AlternativeReward, py::return_value_policy::reference)
		.def_readwrite("FailOnLoadObjectiveSet", &UMissionDefinition::FailOnLoadObjectiveSet, py::return_value_policy::reference)
		.def_readwrite("SecondsToComplete", &UMissionDefinition::SecondsToComplete)
		.def_readwrite("DefendMissionSetting", &UMissionDefinition::DefendMissionSetting)
		.def_readwrite("SeasonalAvailabilityTime", &UMissionDefinition::SeasonalAvailabilityTime)
		.def_readwrite("MissionDialogGroup", &UMissionDefinition::MissionDialogGroup, py::return_value_policy::reference)
		.def_readwrite("DialogEvent", &UMissionDefinition::DialogEvent, py::return_value_policy::reference)
		.def_readwrite("DialogTalker", &UMissionDefinition::DialogTalker, py::return_value_policy::reference)
		.def_readwrite("TurnInDialogEvent", &UMissionDefinition::TurnInDialogEvent, py::return_value_policy::reference)
		.def_readwrite("DlcExpansion", &UMissionDefinition::DlcExpansion, py::return_value_policy::reference)
		.def_readwrite("MissionNumber", &UMissionDefinition::MissionNumber)
		.def_readwrite("GameStage", &UMissionDefinition::GameStage)
		.def_readwrite("AwesomeLevel", &UMissionDefinition::AwesomeLevel)
		.def_readwrite("ExpLevel", &UMissionDefinition::ExpLevel)
		.def_readwrite("BehaviorProvider", &UMissionDefinition::BehaviorProvider, py::return_value_policy::reference)
		.def("GetItemRewardPools", &UMissionDefinition::GetItemRewardPools)
		.def("SetBehaviorProviderDefinition", &UMissionDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UMissionDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		.def("GetDownloadableContentDefinition", &UMissionDefinition::GetDownloadableContentDefinition, py::return_value_policy::reference)
		.def("CanBeFailed", &UMissionDefinition::CanBeFailed)
		.def("GetMissionRewardPresentation", &UMissionDefinition::GetMissionRewardPresentation)
		.def("ShouldGrantAlternateReward", &UMissionDefinition::ShouldGrantAlternateReward)
		.def("GetItemRewardsForPlayer", &UMissionDefinition::GetItemRewardsForPlayer)
		.def("GetExperienceReward", &UMissionDefinition::GetExperienceReward)
		.def("GetOptionalCreditReward", &UMissionDefinition::GetOptionalCreditReward)
		.def("GetCurrencyReward", &UMissionDefinition::GetCurrencyReward)
		.def("GetCurrencyRewardType", &UMissionDefinition::GetCurrencyRewardType)
		.def("GetXPRewardPercentageString", &UMissionDefinition::GetXPRewardPercentageString, py::return_value_policy::reference)
		.def("GetCurrencyRewardString", &UMissionDefinition::GetCurrencyRewardString, py::return_value_policy::reference)
		.def("GetObjectiveIndex", &UMissionDefinition::GetObjectiveIndex)
		.def("GetBalancedActorTypeIdentifier", &UMissionDefinition::GetBalancedActorTypeIdentifier, py::return_value_policy::reference)
		.def("SetExpLevel", &UMissionDefinition::SetExpLevel)
		.def("SetAwesomeLevel", &UMissionDefinition::SetAwesomeLevel)
		.def("SetGameStage", &UMissionDefinition::SetGameStage)
		.def("GetExpLevelForEquip", &UMissionDefinition::GetExpLevelForEquip)
		.def("GetExpLevel", &UMissionDefinition::GetExpLevel)
		.def("GetAwesomeLevel", &UMissionDefinition::GetAwesomeLevel)
		.def("GetGameStage", &UMissionDefinition::GetGameStage)
		;
	py::class_< UMissionDirectivesDefinition, UGBXDefinition >(m, "UMissionDirectivesDefinition")
		.def_readwrite("MissionDirectives", &UMissionDirectivesDefinition::MissionDirectives, py::return_value_policy::reference)
		.def("AddDirective", &UMissionDirectivesDefinition::AddDirective)
		.def("AddWaypointsForDirective", &UMissionDirectivesDefinition::AddWaypointsForDirective)
		.def("CreateWaypoints", &UMissionDirectivesDefinition::CreateWaypoints)
		;
	py::class_< UMissionObjectiveDefinition, UGBXDefinition >(m, "UMissionObjectiveDefinition")
		.def_property("bRememberItemsWithinObjective", [](UMissionObjectiveDefinition &self){return self.bRememberItemsWithinObjective;}, [](UMissionObjectiveDefinition &self, bool value){self.bRememberItemsWithinObjective = value ? 1 : 0;})
		.def_property("bAllOrNothing", [](UMissionObjectiveDefinition &self){return self.bAllOrNothing;}, [](UMissionObjectiveDefinition &self, bool value){self.bAllOrNothing = value ? 1 : 0;})
		.def_property("bObjectiveIsOptional", [](UMissionObjectiveDefinition &self){return self.bObjectiveIsOptional;}, [](UMissionObjectiveDefinition &self, bool value){self.bObjectiveIsOptional = value ? 1 : 0;})
		.def_readwrite("StatId", &UMissionObjectiveDefinition::StatId, py::return_value_policy::reference)
		.def_readwrite("ObjectiveCount", &UMissionObjectiveDefinition::ObjectiveCount)
		.def_readwrite("OptionalCurrencyRewardType", &UMissionObjectiveDefinition::OptionalCurrencyRewardType)
		.def_readwrite("ProgressMessage", &UMissionObjectiveDefinition::ProgressMessage, py::return_value_policy::reference)
		.def_readwrite("StationOverride", &UMissionObjectiveDefinition::StationOverride, py::return_value_policy::reference)
		.def_readwrite("OptionalCreditRewardMultiplier", &UMissionObjectiveDefinition::OptionalCreditRewardMultiplier, py::return_value_policy::reference)
		.def_readwrite("OptionalOtherCurrencyReward", &UMissionObjectiveDefinition::OptionalOtherCurrencyReward, py::return_value_policy::reference)
		.def_readwrite("OptionalExperienceRewardPercentage", &UMissionObjectiveDefinition::OptionalExperienceRewardPercentage, py::return_value_policy::reference)
		.def_readwrite("KillRestrictions", &UMissionObjectiveDefinition::KillRestrictions, py::return_value_policy::reference)
		.def("IsMissionTurnIn", &UMissionObjectiveDefinition::IsMissionTurnIn)
		.def("GetMissionName", &UMissionObjectiveDefinition::GetMissionName, py::return_value_policy::reference)
		.def("GetObjectiveName", &UMissionObjectiveDefinition::GetObjectiveName, py::return_value_policy::reference)
		.def("TranslateObjectiveCount", &UMissionObjectiveDefinition::TranslateObjectiveCount)
		;
	py::class_< UMissionObjectiveSetDefinition, UGBXDefinition >(m, "UMissionObjectiveSetDefinition")
		.def_property("bCanCompleteMission", [](UMissionObjectiveSetDefinition &self){return self.bCanCompleteMission;}, [](UMissionObjectiveSetDefinition &self, bool value){self.bCanCompleteMission = value ? 1 : 0;})
		.def_property("bAutoEnableNextSet", [](UMissionObjectiveSetDefinition &self){return self.bAutoEnableNextSet;}, [](UMissionObjectiveSetDefinition &self, bool value){self.bAutoEnableNextSet = value ? 1 : 0;})
		.def_readwrite("ObjectiveDefinitions", &UMissionObjectiveSetDefinition::ObjectiveDefinitions, py::return_value_policy::reference)
		.def_readwrite("NextSet", &UMissionObjectiveSetDefinition::NextSet, py::return_value_policy::reference)
		.def_readwrite("StationOverride", &UMissionObjectiveSetDefinition::StationOverride, py::return_value_policy::reference)
		.def_readwrite("MissionSummaryOverride", &UMissionObjectiveSetDefinition::MissionSummaryOverride, py::return_value_policy::reference)
		.def_readwrite("MissionDescriptionOverride", &UMissionObjectiveSetDefinition::MissionDescriptionOverride, py::return_value_policy::reference)
		.def("ContainsOptionalObjective", &UMissionObjectiveSetDefinition::ContainsOptionalObjective)
		.def("ContainsObjective", &UMissionObjectiveSetDefinition::ContainsObjective)
		;
	py::class_< UMissionObjectiveSetBranchingDefinition, UMissionObjectiveSetDefinition >(m, "UMissionObjectiveSetBranchingDefinition")
		.def_readwrite("BranchedObjectiveDefinitions", &UMissionObjectiveSetBranchingDefinition::BranchedObjectiveDefinitions, py::return_value_policy::reference)
		.def("ContainsObjective", &UMissionObjectiveSetBranchingDefinition::ContainsObjective)
		;
	py::class_< UMissionObjectiveSetCollectionDefinition, UMissionObjectiveSetDefinition >(m, "UMissionObjectiveSetCollectionDefinition")
		.def_readwrite("ObjectiveSetDefinitions", &UMissionObjectiveSetCollectionDefinition::ObjectiveSetDefinitions, py::return_value_policy::reference)
		.def("ContainsObjective", &UMissionObjectiveSetCollectionDefinition::ContainsObjective)
		;
	py::class_< UMissionPopulationAspect, UPopulationAspect >(m, "UMissionPopulationAspect")
		.def_property("bDefendTarget", [](UMissionPopulationAspect &self){return self.bDefendTarget;}, [](UMissionPopulationAspect &self, bool value){self.bDefendTarget = value ? 1 : 0;})
		.def_property("bApplyObjectiveSetRestrictionToActivation", [](UMissionPopulationAspect &self){return self.bApplyObjectiveSetRestrictionToActivation;}, [](UMissionPopulationAspect &self, bool value){self.bApplyObjectiveSetRestrictionToActivation = value ? 1 : 0;})
		.def_property("bActiveWaypoint", [](UMissionPopulationAspect &self){return self.bActiveWaypoint;}, [](UMissionPopulationAspect &self, bool value){self.bActiveWaypoint = value ? 1 : 0;})
		.def_property("bInitialized", [](UMissionPopulationAspect &self){return self.bInitialized;}, [](UMissionPopulationAspect &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_readwrite("VfTable_IIMission", &UMissionPopulationAspect::VfTable_IIMission, py::return_value_policy::reference)
		.def_readwrite("MissionObjective", &UMissionPopulationAspect::MissionObjective, py::return_value_policy::reference)
		.def_readwrite("Activation", &UMissionPopulationAspect::Activation)
		.def_readwrite("ObjectiveUpdateSetting", &UMissionPopulationAspect::ObjectiveUpdateSetting)
		.def_readwrite("WaypointSetting", &UMissionPopulationAspect::WaypointSetting)
		.def_readwrite("WaypointActorSetting", &UMissionPopulationAspect::WaypointActorSetting)
		.def_readwrite("OverrideObjective", &UMissionPopulationAspect::OverrideObjective, py::return_value_policy::reference)
		.def_readwrite("WaypointObjectiveSetRestrictions", &UMissionPopulationAspect::WaypointObjectiveSetRestrictions, py::return_value_policy::reference)
		.def_readwrite("AreaRadius", &UMissionPopulationAspect::AreaRadius)
		.def_readwrite("ItemPools", &UMissionPopulationAspect::ItemPools, py::return_value_policy::reference)
		.def_readwrite("PickupFailsafe", &UMissionPopulationAspect::PickupFailsafe, py::return_value_policy::reference)
		.def("eventDenStatRemoved", &UMissionPopulationAspect::eventDenStatRemoved)
		.def("eventDenStatAdded", &UMissionPopulationAspect::eventDenStatAdded)
		.def("eventMissionReactionObjectiveComplete", &UMissionPopulationAspect::eventMissionReactionObjectiveComplete)
		.def("eventMissionReactionObjectiveCleared", &UMissionPopulationAspect::eventMissionReactionObjectiveCleared)
		.def("eventMissionReactionObjectiveUpdated", &UMissionPopulationAspect::eventMissionReactionObjectiveUpdated)
		.def("eventMissionReactionObjectiveSetChanged", &UMissionPopulationAspect::eventMissionReactionObjectiveSetChanged)
		.def("eventMissionReactionStatusChanged", &UMissionPopulationAspect::eventMissionReactionStatusChanged)
		.def("eventMissionReactionLevelLoad", &UMissionPopulationAspect::eventMissionReactionLevelLoad)
		.def("SetActivationFromMission", &UMissionPopulationAspect::SetActivationFromMission)
		.def("RemoveWaypointsFromOpportunity", &UMissionPopulationAspect::RemoveWaypointsFromOpportunity)
		.def("CreateWaypoint", &UMissionPopulationAspect::CreateWaypoint)
		.def("eventEnabledStatusChanged", &UMissionPopulationAspect::eventEnabledStatusChanged)
		.def("eventAllActorsRemoved", &UMissionPopulationAspect::eventAllActorsRemoved)
		.def("eventOnActorDeath", &UMissionPopulationAspect::eventOnActorDeath)
		.def("eventOnSpawnActor", &UMissionPopulationAspect::eventOnSpawnActor)
		.def("CreateWaypointFromWaypointSetting", &UMissionPopulationAspect::CreateWaypointFromWaypointSetting)
		.def("GrantItemsToActor", &UMissionPopulationAspect::GrantItemsToActor)
		.def("eventinitialize", &UMissionPopulationAspect::eventinitialize)
		;
	py::class_< AMissionTracker, AActor >(m, "AMissionTracker")
		.def_property("bDataValidated", [](AMissionTracker &self){return self.bDataValidated;}, [](AMissionTracker &self, bool value){self.bDataValidated = value ? 1 : 0;})
		.def_property("bCinematicMode", [](AMissionTracker &self){return self.bCinematicMode;}, [](AMissionTracker &self, bool value){self.bCinematicMode = value ? 1 : 0;})
		.def_property("bNeedToIssueLevelLoadEvents", [](AMissionTracker &self){return self.bNeedToIssueLevelLoadEvents;}, [](AMissionTracker &self, bool value){self.bNeedToIssueLevelLoadEvents = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorConsumer", &AMissionTracker::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIPlayerBehavior", &AMissionTracker::VfTable_IIPlayerBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIScreenParticle", &AMissionTracker::VfTable_IIScreenParticle, py::return_value_policy::reference)
		.def_readwrite("MissionList", &AMissionTracker::MissionList, py::return_value_policy::reference)
		.def_readwrite("StatListenersMap", &AMissionTracker::StatListenersMap, py::return_value_policy::reference)
		.def_readwrite("ActiveMission", &AMissionTracker::ActiveMission, py::return_value_policy::reference)
		.def_readwrite("MissionObservers", &AMissionTracker::MissionObservers, py::return_value_policy::reference)
		.def_readwrite("MissionDirectors", &AMissionTracker::MissionDirectors, py::return_value_policy::reference)
		.def_readwrite("DependentMissions", &AMissionTracker::DependentMissions, py::return_value_policy::reference)
		.def_readwrite("MissionsWithCompletedDependencies", &AMissionTracker::MissionsWithCompletedDependencies, py::return_value_policy::reference)
		.def_readwrite("MissionWaypoints", &AMissionTracker::MissionWaypoints, py::return_value_policy::reference)
		.def_readwrite("LevelTransitions", &AMissionTracker::LevelTransitions, py::return_value_policy::reference)
		.def_readwrite("ActiveTimedMissions", &AMissionTracker::ActiveTimedMissions, py::return_value_policy::reference)
		.def_readwrite("DefendMissions", &AMissionTracker::DefendMissions, py::return_value_policy::reference)
		.def_readwrite("DefendTarget", &AMissionTracker::DefendTarget, py::return_value_policy::reference)
		.def_readwrite("ActiveMissionWeapons", &AMissionTracker::ActiveMissionWeapons, py::return_value_policy::reference)
		.def_readwrite("BlockedMissions", &AMissionTracker::BlockedMissions, py::return_value_policy::reference)
		.def_readwrite("GlobalMissionBlocker", &AMissionTracker::GlobalMissionBlocker, py::return_value_policy::reference)
		.def_readwrite("ObjectiveUpdates", &AMissionTracker::ObjectiveUpdates, py::return_value_policy::reference)
		.def_readwrite("BehaviorConsumerHandle", &AMissionTracker::BehaviorConsumerHandle, py::return_value_policy::reference)
		.def_readwrite("PendingMissionKickoff", &AMissionTracker::PendingMissionKickoff, py::return_value_policy::reference)
		.def_readwrite("ActiveMissionChangedDelegates", &AMissionTracker::ActiveMissionChangedDelegates, py::return_value_policy::reference)
		.def_readwrite("MissionStatusChangedDelegates", &AMissionTracker::MissionStatusChangedDelegates, py::return_value_policy::reference)
		.def_readwrite("MissionObjectivesChangedDelegates", &AMissionTracker::MissionObjectivesChangedDelegates, py::return_value_policy::reference)
		.def_readwrite("MissionFilteredChangedDelegates", &AMissionTracker::MissionFilteredChangedDelegates, py::return_value_policy::reference)
		.def_readwrite("FastForwardTriggerMission", &AMissionTracker::FastForwardTriggerMission, py::return_value_policy::reference)
		.def_readwrite("__OnActiveMissionChanged__Delegate", &AMissionTracker::__OnActiveMissionChanged__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnMissionStatusChanged__Delegate", &AMissionTracker::__OnMissionStatusChanged__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnMissionObjectivesChanged__Delegate", &AMissionTracker::__OnMissionObjectivesChanged__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnMissionFilteredChanged__Delegate", &AMissionTracker::__OnMissionFilteredChanged__Delegate, py::return_value_policy::reference)
		.def("PlayTurnIn", &AMissionTracker::PlayTurnIn)
		.def("PlayKickoffDialogOnly", &AMissionTracker::PlayKickoffDialogOnly)
		.def("PlayKickoff", &AMissionTracker::PlayKickoff)
		.def("ReceiveChallenge", &AMissionTracker::ReceiveChallenge)
		.def("UpdateVisibilityOfAllActiveScreenParticles", &AMissionTracker::UpdateVisibilityOfAllActiveScreenParticles)
		.def("ScreenParticlesShouldBeVisible", &AMissionTracker::ScreenParticlesShouldBeVisible)
		.def("SetUpVoGScreenParticle", &AMissionTracker::SetUpVoGScreenParticle)
		.def("HideScreenParticle", &AMissionTracker::HideScreenParticle)
		.def("ShowScreenParticle", &AMissionTracker::ShowScreenParticle)
		.def("Behavior_RegisterStation", &AMissionTracker::Behavior_RegisterStation)
		.def("Behavior_StopRevive", &AMissionTracker::Behavior_StopRevive)
		.def("Behavior_StartRevive", &AMissionTracker::Behavior_StartRevive)
		.def("GetPlayerLoot", &AMissionTracker::GetPlayerLoot)
		.def("Behavior_SpawnTeleporter", &AMissionTracker::Behavior_SpawnTeleporter)
		.def("Behavior_SetCurrentProjectile", &AMissionTracker::Behavior_SetCurrentProjectile)
		.def("Behavior_ForceFeedback", &AMissionTracker::Behavior_ForceFeedback)
		.def("Behavior_SpawnCurrentProjectile", &AMissionTracker::Behavior_SpawnCurrentProjectile, py::return_value_policy::reference)
		.def("Behavior_UnlockAchievementForAllPlayers", &AMissionTracker::Behavior_UnlockAchievementForAllPlayers)
		.def("Behavior_DetachMeleeWeapon", &AMissionTracker::Behavior_DetachMeleeWeapon)
		.def("Behavior_AttachMeleeWeapon", &AMissionTracker::Behavior_AttachMeleeWeapon)
		.def("Behavior_UnlockAchievement", &AMissionTracker::Behavior_UnlockAchievement)
		.def("Behavior_SendMessageToPlayers", &AMissionTracker::Behavior_SendMessageToPlayers)
		.def("Behavior_CameraAnim", &AMissionTracker::Behavior_CameraAnim)
		.def("Behavior_ViewShake", &AMissionTracker::Behavior_ViewShake)
		.def("Behavior_ThrowGrenade", &AMissionTracker::Behavior_ThrowGrenade)
		.def("Behavior_Melee", &AMissionTracker::Behavior_Melee)
		.def("Behavior_Reload", &AMissionTracker::Behavior_Reload)
		.def("GetBehaviorConsumerHandle", &AMissionTracker::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("RunMissionCustomEvent", &AMissionTracker::RunMissionCustomEvent)
		.def("eventDebugRefreshHUD", &AMissionTracker::eventDebugRefreshHUD)
		.def("DebugAdvanceTrackedMission", &AMissionTracker::DebugAdvanceTrackedMission)
		.def("DebugIncrementObjective", &AMissionTracker::DebugIncrementObjective)
		.def("DebugCompleteObjective", &AMissionTracker::DebugCompleteObjective)
		.def("DebugGetObjectiveFromString", &AMissionTracker::DebugGetObjectiveFromString, py::return_value_policy::reference)
		.def("DebugMakeEligibileAndComplete", &AMissionTracker::DebugMakeEligibileAndComplete)
		.def("DebugMakeEligibleForAndAccept", &AMissionTracker::DebugMakeEligibleForAndAccept)
		.def("DebugAcceptMission", &AMissionTracker::DebugAcceptMission)
		.def("DebugUndoMission", &AMissionTracker::DebugUndoMission)
		.def("DebugAdvanceObjectiveSet", &AMissionTracker::DebugAdvanceObjectiveSet)
		.def("DebugUndoCompleteMission", &AMissionTracker::DebugUndoCompleteMission)
		.def("DebugCompleteMission", &AMissionTracker::DebugCompleteMission)
		.def("DebugGetMissionFromString", &AMissionTracker::DebugGetMissionFromString, py::return_value_policy::reference)
		.def("eventTriggerMissionFilteredChangedDelegates", &AMissionTracker::eventTriggerMissionFilteredChangedDelegates)
		.def("ClearMissionFilteredChangedDelegate", &AMissionTracker::ClearMissionFilteredChangedDelegate)
		.def("AddMissionFilteredChangedDelegate", &AMissionTracker::AddMissionFilteredChangedDelegate)
		.def("OnMissionFilteredChanged", &AMissionTracker::OnMissionFilteredChanged)
		.def("eventTriggerMissionObjectivesChangedDelegates", &AMissionTracker::eventTriggerMissionObjectivesChangedDelegates)
		.def("ClearMissionObjectivesChangedDelegate", &AMissionTracker::ClearMissionObjectivesChangedDelegate)
		.def("AddMissionObjectivesChangedDelegate", &AMissionTracker::AddMissionObjectivesChangedDelegate)
		.def("OnMissionObjectivesChanged", &AMissionTracker::OnMissionObjectivesChanged)
		.def("eventTriggerMissionStatusChangedDelegates", &AMissionTracker::eventTriggerMissionStatusChangedDelegates)
		.def("ClearMissionStatusChangedDelegate", &AMissionTracker::ClearMissionStatusChangedDelegate)
		.def("AddMissionStatusChangedDelegate", &AMissionTracker::AddMissionStatusChangedDelegate)
		.def("OnMissionStatusChanged", &AMissionTracker::OnMissionStatusChanged)
		.def("eventTriggerActiveMissionChangedDelegates", &AMissionTracker::eventTriggerActiveMissionChangedDelegates)
		.def("ClearActiveMissionChangedDelegate", &AMissionTracker::ClearActiveMissionChangedDelegate)
		.def("AddActiveMissionChangedDelegate", &AMissionTracker::AddActiveMissionChangedDelegate)
		.def("OnActiveMissionChanged", &AMissionTracker::OnActiveMissionChanged)
		.def("NotifyLocalPlayerOfActiveMission", &AMissionTracker::NotifyLocalPlayerOfActiveMission)
		.def("eventReplicatedEvent", &AMissionTracker::eventReplicatedEvent)
		.def("ProcessDynamicMissionDirectives", &AMissionTracker::ProcessDynamicMissionDirectives)
		.def("AllExpansionSideMissionsComplete", &AMissionTracker::AllExpansionSideMissionsComplete)
		.def("InitializeMissionsWithCompletedDependencies", &AMissionTracker::InitializeMissionsWithCompletedDependencies)
		.def("GetMissionCount", &AMissionTracker::GetMissionCount)
		.def("IsDataValid", &AMissionTracker::IsDataValid)
		.def("ValidateData", &AMissionTracker::ValidateData)
		.def("StopMissionTimer", &AMissionTracker::StopMissionTimer)
		.def("StartMissionTimer", &AMissionTracker::StartMissionTimer)
		.def("AddTimeToMission", &AMissionTracker::AddTimeToMission)
		.def("NotifyActorDied", &AMissionTracker::NotifyActorDied)
		.def("IsValidMissionWeapon", &AMissionTracker::IsValidMissionWeapon)
		.def("AddDefendTarget", &AMissionTracker::AddDefendTarget)
		.def("IsObjectiveBitSet", &AMissionTracker::IsObjectiveBitSet)
		.def("RemoteUpdateMissionFiltered", &AMissionTracker::RemoteUpdateMissionFiltered)
		.def("RemoteDecrementMissionObjective", &AMissionTracker::RemoteDecrementMissionObjective)
		.def("RemoteClearMissionObjective", &AMissionTracker::RemoteClearMissionObjective)
		.def("RemoteUpdateMissionObjective", &AMissionTracker::RemoteUpdateMissionObjective)
		.def("RemoteSubObjectiveSetAdvanced", &AMissionTracker::RemoteSubObjectiveSetAdvanced)
		.def("RemoteUpdateActiveObjectiveSet", &AMissionTracker::RemoteUpdateActiveObjectiveSet)
		.def("RemoteUpdateMissionStatus", &AMissionTracker::RemoteUpdateMissionStatus)
		.def("RemoteUpdateMissionData", &AMissionTracker::RemoteUpdateMissionData)
		.def("GetAllMissions", &AMissionTracker::GetAllMissions)
		.def("GetMissionForNumber", &AMissionTracker::GetMissionForNumber, py::return_value_policy::reference)
		.def("GetActiveSubObjectiveSets", &AMissionTracker::GetActiveSubObjectiveSets)
		.def("CanEndMission", &AMissionTracker::CanEndMission)
		.def("CanStartMission", &AMissionTracker::CanStartMission)
		.def("SetKickoffHeard", &AMissionTracker::SetKickoffHeard)
		.def("NotifyPawnDied", &AMissionTracker::NotifyPawnDied)
		.def("GetCurrentObjectives", &AMissionTracker::GetCurrentObjectives)
		.def("IsObjectiveSetActive", &AMissionTracker::IsObjectiveSetActive)
		.def("GetActivePrimaryObjectiveSet", &AMissionTracker::GetActivePrimaryObjectiveSet, py::return_value_policy::reference)
		.def("GetObjectiveCount", &AMissionTracker::GetObjectiveCount)
		.def("IsMissionObjectiveActive", &AMissionTracker::IsMissionObjectiveActive)
		.def("IsMissionObjectiveComplete", &AMissionTracker::IsMissionObjectiveComplete)
		.def("IsMissionBlocked", &AMissionTracker::IsMissionBlocked)
		.def("GetCompletedBranch", &AMissionTracker::GetCompletedBranch)
		.def("GetObjectivesProgress", &AMissionTracker::GetObjectivesProgress)
		.def("GetActiveMissionData", &AMissionTracker::GetActiveMissionData)
		.def("GetActiveMission", &AMissionTracker::GetActiveMission, py::return_value_policy::reference)
		.def("SetActiveMission", &AMissionTracker::SetActiveMission)
		.def("EvaluateStat", &AMissionTracker::EvaluateStat)
		.def("DecrementObjective", &AMissionTracker::DecrementObjective)
		.def("UpdateObjective", &AMissionTracker::UpdateObjective)
		.def("FastTravelStationRegistered", &AMissionTracker::FastTravelStationRegistered)
		.def("RegisterLevelTransition", &AMissionTracker::RegisterLevelTransition)
		.def("UnregisterWaypoint", &AMissionTracker::UnregisterWaypoint)
		.def("RegisterWaypoint", &AMissionTracker::RegisterWaypoint)
		.def("UnregisterMissionDirector", &AMissionTracker::UnregisterMissionDirector)
		.def("RegisterMissionDirector", &AMissionTracker::RegisterMissionDirector)
		.def("UnregisterMissionObserver", &AMissionTracker::UnregisterMissionObserver)
		.def("RegisterMissionObserver", &AMissionTracker::RegisterMissionObserver)
		.def("OnCinematicModeChanged", &AMissionTracker::OnCinematicModeChanged)
		.def("MissionDependenciesMet", &AMissionTracker::MissionDependenciesMet)
		.def("GetMissionStatus", &AMissionTracker::GetMissionStatus)
		.def("CompleteMission", &AMissionTracker::CompleteMission)
		.def("ActivateMission", &AMissionTracker::ActivateMission)
		.def("GrantMissionWeaponsToClientPlayer", &AMissionTracker::GrantMissionWeaponsToClientPlayer)
		.def("SendMissionData", &AMissionTracker::SendMissionData)
		.def("InitializeWorldMissionState", &AMissionTracker::InitializeWorldMissionState)
		.def("InitializePIEWorldMissionState", &AMissionTracker::InitializePIEWorldMissionState)
		.def("GetMissionDescription", &AMissionTracker::GetMissionDescription)
		.def("IsMissionFiltered", &AMissionTracker::IsMissionFiltered)
		.def("ToggleMissionFiltered", &AMissionTracker::ToggleMissionFiltered)
		.def("SetMissionStatus", &AMissionTracker::SetMissionStatus)
		.def("StaticSetMissionDirectorParticle", [](AMissionTracker &self , class AActor* MissionDirectorActor) { class UParticleSystemComponent** pyMissionParticle = 0 ;   self.StaticSetMissionDirectorParticle(MissionDirectorActor, pyMissionParticle); return py::make_tuple(*pyMissionParticle); })
		;
	py::class_< UMovementComponent, UActorComponent >(m, "UMovementComponent")
		.def("Init", &UMovementComponent::Init)
		;
	py::class_< UDrunkenBaseComponent, UMovementComponent >(m, "UDrunkenBaseComponent")
		.def_property("bInitialized", [](UDrunkenBaseComponent &self){return self.bInitialized;}, [](UDrunkenBaseComponent &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_readwrite("StartApproachDistance", &UDrunkenBaseComponent::StartApproachDistance)
		.def_readwrite("StartDelayTime", &UDrunkenBaseComponent::StartDelayTime)
		.def_readwrite("EaseInTime", &UDrunkenBaseComponent::EaseInTime)
		.def_readwrite("StartTime", &UDrunkenBaseComponent::StartTime)
		.def_readwrite("RandomNumberSeed", &UDrunkenBaseComponent::RandomNumberSeed)
		.def_readwrite("LastVelocityRotOffset", &UDrunkenBaseComponent::LastVelocityRotOffset, py::return_value_policy::reference)
		.def_readwrite("LastAccelRotOffset", &UDrunkenBaseComponent::LastAccelRotOffset, py::return_value_policy::reference)
		.def("GenerateRandomNumberSeed", &UDrunkenBaseComponent::GenerateRandomNumberSeed)
		.def("SetRandomNumberSeed", &UDrunkenBaseComponent::SetRandomNumberSeed)
		.def("Init", &UDrunkenBaseComponent::Init)
		;
	py::class_< UDrunkenRandomComponent, UDrunkenBaseComponent >(m, "UDrunkenRandomComponent")
		.def_readwrite("PathCorrectionInterval", &UDrunkenRandomComponent::PathCorrectionInterval)
		.def_readwrite("TurnSpeed", &UDrunkenRandomComponent::TurnSpeed)
		.def_readwrite("ApproachTurnSpeed", &UDrunkenRandomComponent::ApproachTurnSpeed)
		.def_readwrite("MaxSpreadAngle", &UDrunkenRandomComponent::MaxSpreadAngle)
		.def_readwrite("MaxDepartureAngle", &UDrunkenRandomComponent::MaxDepartureAngle)
		.def_readwrite("LastUpdateTime", &UDrunkenRandomComponent::LastUpdateTime)
		.def_readwrite("LastDepartureAngle", &UDrunkenRandomComponent::LastDepartureAngle)
		.def_readwrite("LastRotationOffset", &UDrunkenRandomComponent::LastRotationOffset, py::return_value_policy::reference)
		.def_readwrite("TargetRotationOffset", &UDrunkenRandomComponent::TargetRotationOffset, py::return_value_policy::reference)
		;
	py::class_< UDrunkenWaveComponent, UDrunkenBaseComponent >(m, "UDrunkenWaveComponent")
		.def_readwrite("MaxRandomWaveOffsetTime", &UDrunkenWaveComponent::MaxRandomWaveOffsetTime)
		.def_readwrite("Waves", &UDrunkenWaveComponent::Waves, py::return_value_policy::reference)
		.def_readwrite("GlobalWaveScale", &UDrunkenWaveComponent::GlobalWaveScale)
		.def_readwrite("WaveOffsetTime", &UDrunkenWaveComponent::WaveOffsetTime)
		;
	py::class_< UNameListDefinition, UGBXDefinition >(m, "UNameListDefinition")
		.def_readwrite("Names", &UNameListDefinition::Names, py::return_value_policy::reference)
		;
	py::class_< UNPCLoadBalancer, UObject >(m, "UNPCLoadBalancer")
		.def_property("NumberPathingReducedByPlayerCount", [](UNPCLoadBalancer &self){return self.NumberPathingReducedByPlayerCount;}, [](UNPCLoadBalancer &self, bool value){self.NumberPathingReducedByPlayerCount = value ? 1 : 0;})
		.def_readwrite("TheList", &UNPCLoadBalancer::TheList, py::return_value_policy::reference)
		.def_readwrite("LastPathTime", &UNPCLoadBalancer::LastPathTime)
		.def_readwrite("NumberNPCsMoving", &UNPCLoadBalancer::NumberNPCsMoving)
		.def_readwrite("LastUpdateTime", &UNPCLoadBalancer::LastUpdateTime)
		.def_readwrite("MaxNumberPathing", &UNPCLoadBalancer::MaxNumberPathing)
		.def_readwrite("TimeBetweenUpdates", &UNPCLoadBalancer::TimeBetweenUpdates)
		.def("CheckPathing", &UNPCLoadBalancer::CheckPathing)
		.def("WantsToPath", &UNPCLoadBalancer::WantsToPath)
		.def("PathFailed", &UNPCLoadBalancer::PathFailed)
		.def("ClearList", &UNPCLoadBalancer::ClearList)
		.def("OnPerch", &UNPCLoadBalancer::OnPerch)
		.def("IsPathing", &UNPCLoadBalancer::IsPathing)
		.def("CanContinuePath", &UNPCLoadBalancer::CanContinuePath)
		.def("CanStartPath", &UNPCLoadBalancer::CanStartPath)
		;
	py::class_< UPackageAssetLibrary, UGBXDefinition >(m, "UPackageAssetLibrary")
		.def_readwrite("LibraryType", &UPackageAssetLibrary::LibraryType, py::return_value_policy::reference)
		.def_readwrite("Sublibraries", &UPackageAssetLibrary::Sublibraries, py::return_value_policy::reference)
		.def_readwrite("SublibraryLinks", &UPackageAssetLibrary::SublibraryLinks, py::return_value_policy::reference)
		;
	py::class_< UPackageAssetSublibrary, UGBXDefinition >(m, "UPackageAssetSublibrary")
		.def_readwrite("LibraryType", &UPackageAssetSublibrary::LibraryType, py::return_value_policy::reference)
		.def_readwrite("Assets", &UPackageAssetSublibrary::Assets, py::return_value_policy::reference)
		.def_readwrite("AssetPaths", &UPackageAssetSublibrary::AssetPaths, py::return_value_policy::reference)
		.def_readwrite("CachedPackageName", &UPackageAssetSublibrary::CachedPackageName, py::return_value_policy::reference)
		;
	py::class_< UPassengerCameraDefinition, UGBXDefinition >(m, "UPassengerCameraDefinition")
		.def_property("DoNotLerpToThisSeat", [](UPassengerCameraDefinition &self){return self.DoNotLerpToThisSeat;}, [](UPassengerCameraDefinition &self, bool value){self.DoNotLerpToThisSeat = value ? 1 : 0;})
		.def_property("bRotateCameraUnderVehicle", [](UPassengerCameraDefinition &self){return self.bRotateCameraUnderVehicle;}, [](UPassengerCameraDefinition &self, bool value){self.bRotateCameraUnderVehicle = value ? 1 : 0;})
		.def_property("bSnapCameraYaw", [](UPassengerCameraDefinition &self){return self.bSnapCameraYaw;}, [](UPassengerCameraDefinition &self, bool value){self.bSnapCameraYaw = value ? 1 : 0;})
		.def_property("bSnapCameraPitch", [](UPassengerCameraDefinition &self){return self.bSnapCameraPitch;}, [](UPassengerCameraDefinition &self, bool value){self.bSnapCameraPitch = value ? 1 : 0;})
		.def_property("bScaleDistanceWithSpeed", [](UPassengerCameraDefinition &self){return self.bScaleDistanceWithSpeed;}, [](UPassengerCameraDefinition &self, bool value){self.bScaleDistanceWithSpeed = value ? 1 : 0;})
		.def_readwrite("AfterburnerHandlingCamera", &UPassengerCameraDefinition::AfterburnerHandlingCamera)
		.def_readwrite("CameraModifierSpeed", &UPassengerCameraDefinition::CameraModifierSpeed)
		.def_readwrite("CameraRollSmoothingSpeed", &UPassengerCameraDefinition::CameraRollSmoothingSpeed)
		.def_readwrite("LerpStyle", &UPassengerCameraDefinition::LerpStyle)
		.def_readwrite("CameraTarget", &UPassengerCameraDefinition::CameraTarget)
		.def_readwrite("CameraBehaviorOnEntry", &UPassengerCameraDefinition::CameraBehaviorOnEntry)
		.def_readwrite("BaseCameraPosition", &UPassengerCameraDefinition::BaseCameraPosition, py::return_value_policy::reference)
		.def_readwrite("CameraOffset", &UPassengerCameraDefinition::CameraOffset)
		.def_readwrite("ForcedCameraRotation", &UPassengerCameraDefinition::ForcedCameraRotation, py::return_value_policy::reference)
		.def_readwrite("CameraPitchUpOffset", &UPassengerCameraDefinition::CameraPitchUpOffset)
		.def_readwrite("CameraPitchDownOffset", &UPassengerCameraDefinition::CameraPitchDownOffset)
		.def_readwrite("ViewPitchMin", &UPassengerCameraDefinition::ViewPitchMin)
		.def_readwrite("ViewPitchMax", &UPassengerCameraDefinition::ViewPitchMax)
		.def_readwrite("ViewYawLimitFromTurretFacing", &UPassengerCameraDefinition::ViewYawLimitFromTurretFacing)
		.def_readwrite("CameraSnapDelay", &UPassengerCameraDefinition::CameraSnapDelay)
		.def_readwrite("CameraSnapSpeed", &UPassengerCameraDefinition::CameraSnapSpeed)
		.def_readwrite("CameraFastScale", &UPassengerCameraDefinition::CameraFastScale)
		.def_readwrite("RotationRateYaw", &UPassengerCameraDefinition::RotationRateYaw)
		.def_readwrite("RotationRatePitch", &UPassengerCameraDefinition::RotationRatePitch)
		.def_readwrite("LookForwardDist", &UPassengerCameraDefinition::LookForwardDist)
		;
	py::class_< UPawnRelevanceUtility, UObject >(m, "UPawnRelevanceUtility")
		;
	py::class_< UPawnRelevanceUtilityCaching, UPawnRelevanceUtility >(m, "UPawnRelevanceUtilityCaching")
		.def_property("CachingEnabled", [](UPawnRelevanceUtilityCaching &self){return self.CachingEnabled;}, [](UPawnRelevanceUtilityCaching &self, bool value){self.CachingEnabled = value ? 1 : 0;})
		.def_readwrite("MaxCacheTime", &UPawnRelevanceUtilityCaching::MaxCacheTime)
		.def_readwrite("DistanceClose", &UPawnRelevanceUtilityCaching::DistanceClose)
		.def_readwrite("DistanceMed", &UPawnRelevanceUtilityCaching::DistanceMed)
		.def_readwrite("CacheFreshnessTimeClose", &UPawnRelevanceUtilityCaching::CacheFreshnessTimeClose)
		.def_readwrite("CacheFreshnessTimeMed", &UPawnRelevanceUtilityCaching::CacheFreshnessTimeMed)
		.def_readwrite("CacheFreshnessTimeFar", &UPawnRelevanceUtilityCaching::CacheFreshnessTimeFar)
		.def_readwrite("CacheFreshnessTimePlayer", &UPawnRelevanceUtilityCaching::CacheFreshnessTimePlayer)
		.def_readwrite("CacheTimeFudgeFactorClose", &UPawnRelevanceUtilityCaching::CacheTimeFudgeFactorClose)
		.def_readwrite("CacheTimeFudgeFactorMed", &UPawnRelevanceUtilityCaching::CacheTimeFudgeFactorMed)
		.def_readwrite("CacheTimeFudgeFactorFar", &UPawnRelevanceUtilityCaching::CacheTimeFudgeFactorFar)
		.def_readwrite("HasMovedDistThreshold", &UPawnRelevanceUtilityCaching::HasMovedDistThreshold)
		.def_readwrite("HasMovedDistThresholdRelevant", &UPawnRelevanceUtilityCaching::HasMovedDistThresholdRelevant)
		.def_readwrite("CachedRelevance", &UPawnRelevanceUtilityCaching::CachedRelevance, py::return_value_policy::reference)
		;
	py::class_< UPawnRelevanceUtilityFixedCost, UPawnRelevanceUtilityCaching >(m, "UPawnRelevanceUtilityFixedCost")
		.def_readwrite("CloseDistanceSquared", &UPawnRelevanceUtilityFixedCost::CloseDistanceSquared)
		.def_readwrite("MedDistanceSquared", &UPawnRelevanceUtilityFixedCost::MedDistanceSquared)
		.def_readwrite("MaxLineChecksPerFrame", &UPawnRelevanceUtilityFixedCost::MaxLineChecksPerFrame)
		.def_readwrite("Buckets", &UPawnRelevanceUtilityFixedCost::Buckets, py::return_value_policy::reference)
		.def_readwrite("MedAccumulatedTime", &UPawnRelevanceUtilityFixedCost::MedAccumulatedTime)
		.def_readwrite("FarAccumulatedTime", &UPawnRelevanceUtilityFixedCost::FarAccumulatedTime)
		.def_readwrite("SkipUpdateForTime", &UPawnRelevanceUtilityFixedCost::SkipUpdateForTime)
		.def("SetMaxLineChecks", &UPawnRelevanceUtilityFixedCost::SetMaxLineChecks)
		.def("SetBucket", &UPawnRelevanceUtilityFixedCost::SetBucket)
		.def("ShowBucketSettings", &UPawnRelevanceUtilityFixedCost::ShowBucketSettings)
		.def("PrintBuckets", &UPawnRelevanceUtilityFixedCost::PrintBuckets)
		;
	py::class_< UPerchDefinition, UGBXDefinition >(m, "UPerchDefinition")
		.def_property("bUseCollision", [](UPerchDefinition &self){return self.bUseCollision;}, [](UPerchDefinition &self, bool value){self.bUseCollision = value ? 1 : 0;})
		.def_property("bRotateYawOnly", [](UPerchDefinition &self){return self.bRotateYawOnly;}, [](UPerchDefinition &self, bool value){self.bRotateYawOnly = value ? 1 : 0;})
		.def_property("bOptimizeMemory", [](UPerchDefinition &self){return self.bOptimizeMemory;}, [](UPerchDefinition &self, bool value){self.bOptimizeMemory = value ? 1 : 0;})
		.def_property("bCheckForPlayerInRange", [](UPerchDefinition &self){return self.bCheckForPlayerInRange;}, [](UPerchDefinition &self, bool value){self.bCheckForPlayerInRange = value ? 1 : 0;})
		.def_property("bCombatPerch", [](UPerchDefinition &self){return self.bCombatPerch;}, [](UPerchDefinition &self, bool value){self.bCombatPerch = value ? 1 : 0;})
		.def_property("bDynamicLightEnvironment", [](UPerchDefinition &self){return self.bDynamicLightEnvironment;}, [](UPerchDefinition &self, bool value){self.bDynamicLightEnvironment = value ? 1 : 0;})
		.def_property("bCastShadows", [](UPerchDefinition &self){return self.bCastShadows;}, [](UPerchDefinition &self, bool value){self.bCastShadows = value ? 1 : 0;})
		.def_property("bUseBooleanEnvironmentShadowing", [](UPerchDefinition &self){return self.bUseBooleanEnvironmentShadowing;}, [](UPerchDefinition &self, bool value){self.bUseBooleanEnvironmentShadowing = value ? 1 : 0;})
		.def_property("bDynamic", [](UPerchDefinition &self){return self.bDynamic;}, [](UPerchDefinition &self, bool value){self.bDynamic = value ? 1 : 0;})
		.def_property("bSynthesizeSHLight", [](UPerchDefinition &self){return self.bSynthesizeSHLight;}, [](UPerchDefinition &self, bool value){self.bSynthesizeSHLight = value ? 1 : 0;})
		.def_property("bShadowFromEnvironment", [](UPerchDefinition &self){return self.bShadowFromEnvironment;}, [](UPerchDefinition &self, bool value){self.bShadowFromEnvironment = value ? 1 : 0;})
		.def_property("bAffectedBySmallDynamicLights", [](UPerchDefinition &self){return self.bAffectedBySmallDynamicLights;}, [](UPerchDefinition &self, bool value){self.bAffectedBySmallDynamicLights = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBodyInfoProvider", &UPerchDefinition::VfTable_IIBodyInfoProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorProvider", &UPerchDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIAnimProvider", &UPerchDefinition::VfTable_IIAnimProvider, py::return_value_policy::reference)
		.def_readwrite("LoopTime", &UPerchDefinition::LoopTime, py::return_value_policy::reference)
		.def_readwrite("CooldownTime", &UPerchDefinition::CooldownTime, py::return_value_policy::reference)
		.def_readwrite("AnimMap", &UPerchDefinition::AnimMap, py::return_value_policy::reference)
		.def_readwrite("CanUseExpression", &UPerchDefinition::CanUseExpression, py::return_value_policy::reference)
		.def_readwrite("LerpTime", &UPerchDefinition::LerpTime)
		.def_readwrite("AdditionalOffsetScale", &UPerchDefinition::AdditionalOffsetScale)
		.def_readwrite("PlayerInRangeCheckFrequency", &UPerchDefinition::PlayerInRangeCheckFrequency)
		.def_readwrite("PlayerInRangeRadius", &UPerchDefinition::PlayerInRangeRadius)
		.def_readwrite("PlayerInRangeCooldown", &UPerchDefinition::PlayerInRangeCooldown)
		.def_readwrite("CombatProjectile", &UPerchDefinition::CombatProjectile, py::return_value_policy::reference)
		.def_readwrite("BodyComposition", &UPerchDefinition::BodyComposition, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UPerchDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def_readwrite("LightingBoundsScale", &UPerchDefinition::LightingBoundsScale)
		.def_readwrite("NumVolumeVisibilitySamples", &UPerchDefinition::NumVolumeVisibilitySamples)
		.def_readwrite("ModShadowFadeoutExponent", &UPerchDefinition::ModShadowFadeoutExponent)
		.def_readwrite("ModShadowFadeoutTime", &UPerchDefinition::ModShadowFadeoutTime)
		.def_readwrite("AmbientGlow", &UPerchDefinition::AmbientGlow, py::return_value_policy::reference)
		.def_readwrite("AmbientShadowSourceDirection", &UPerchDefinition::AmbientShadowSourceDirection, py::return_value_policy::reference)
		.def_readwrite("AmbientShadowColor", &UPerchDefinition::AmbientShadowColor, py::return_value_policy::reference)
		.def_readwrite("DominantShadowTransitionStartDistance", &UPerchDefinition::DominantShadowTransitionStartDistance)
		.def_readwrite("DominantShadowTransitionEndDistance", &UPerchDefinition::DominantShadowTransitionEndDistance)
		.def("OnPlayerInRange", &UPerchDefinition::OnPlayerInRange)
		.def("OnFinished", &UPerchDefinition::OnFinished)
		.def("OnStopAnim", &UPerchDefinition::OnStopAnim)
		.def("OnIdleAnim", &UPerchDefinition::OnIdleAnim)
		.def("OnStartAnim", &UPerchDefinition::OnStartAnim)
		.def("SetBehaviorProviderDefinition", &UPerchDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UPerchDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		.def("GetAnims", &UPerchDefinition::GetAnims)
		.def("CanUse", &UPerchDefinition::CanUse)
		.def("GetPerchData", &UPerchDefinition::GetPerchData)
		.def("Supports", &UPerchDefinition::Supports)
		;
	py::class_< UPerchEditorComponent, UPrimitiveComponent >(m, "UPerchEditorComponent")
		;
	py::class_< UPhysicsJumpConnection, UObject >(m, "UPhysicsJumpConnection")
		.def_readwrite("Source", &UPhysicsJumpConnection::Source, py::return_value_policy::reference)
		.def_readwrite("Destination", &UPhysicsJumpConnection::Destination, py::return_value_policy::reference)
		.def_readwrite("Speed", &UPhysicsJumpConnection::Speed)
		.def_readwrite("Angle", &UPhysicsJumpConnection::Angle)
		.def_readwrite("Velocity", &UPhysicsJumpConnection::Velocity, py::return_value_policy::reference)
		;
	py::class_< APhysicsJumpNode, APathNode >(m, "APhysicsJumpNode")
		.def_property("bLimitUsage", [](APhysicsJumpNode &self){return self.bLimitUsage;}, [](APhysicsJumpNode &self, bool value){self.bLimitUsage = value ? 1 : 0;})
		.def_property("bEnabled", [](APhysicsJumpNode &self){return self.bEnabled;}, [](APhysicsJumpNode &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_readwrite("VfTable_IIGBXNavMeshSpecialMove", &APhysicsJumpNode::VfTable_IIGBXNavMeshSpecialMove, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIGBXNavMeshSeed", &APhysicsJumpNode::VfTable_IIGBXNavMeshSeed, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIGBXNavMeshBuildEvents", &APhysicsJumpNode::VfTable_IIGBXNavMeshBuildEvents, py::return_value_policy::reference)
		.def_readwrite("VfTable_FTickableObject", &APhysicsJumpNode::VfTable_FTickableObject, py::return_value_policy::reference)
		.def_readwrite("Connections", &APhysicsJumpNode::Connections, py::return_value_policy::reference)
		.def_readwrite("OverrideJumpSMD", &APhysicsJumpNode::OverrideJumpSMD, py::return_value_policy::reference)
		.def_readwrite("JumpRadius", &APhysicsJumpNode::JumpRadius)
		.def_readwrite("AllowedTags", &APhysicsJumpNode::AllowedTags, py::return_value_policy::reference)
		.def("OnToggle", &APhysicsJumpNode::OnToggle)
		.def("GetRotation", &APhysicsJumpNode::GetRotation, py::return_value_policy::reference)
		.def("GetStartRotation", &APhysicsJumpNode::GetStartRotation, py::return_value_policy::reference)
		.def("GetEndRotation", &APhysicsJumpNode::GetEndRotation, py::return_value_policy::reference)
		.def("GetEndLocation", &APhysicsJumpNode::GetEndLocation, py::return_value_policy::reference)
		.def("GetStartLocation", &APhysicsJumpNode::GetStartLocation, py::return_value_policy::reference)
		.def("GetLocation", &APhysicsJumpNode::GetLocation, py::return_value_policy::reference)
		.def("GetPrimaryCollision", &APhysicsJumpNode::GetPrimaryCollision, py::return_value_policy::reference)
		.def("GetJumpDefFromBody", &APhysicsJumpNode::GetJumpDefFromBody, py::return_value_policy::reference)
		.def("RemoveJumpDestination", &APhysicsJumpNode::RemoveJumpDestination)
		.def("AddJumpDestination", &APhysicsJumpNode::AddJumpDestination)
		.def("GetJumpIndex", &APhysicsJumpNode::GetJumpIndex)
		;
	py::class_< UPhysicsJumpNodeEditorComponent, UPrimitiveComponent >(m, "UPhysicsJumpNodeEditorComponent")
		;
	py::class_< APlayerBlockingVolume, ABlockingVolume >(m, "APlayerBlockingVolume")
		.def("StopsProjectile", &APlayerBlockingVolume::StopsProjectile)
		;
	py::class_< AExecuteBlockingVolume, APlayerBlockingVolume >(m, "AExecuteBlockingVolume")
		.def("StopsProjectile", &AExecuteBlockingVolume::StopsProjectile)
		;
	py::class_< UPlayerChallengeListDefinition, UGBXDefinition >(m, "UPlayerChallengeListDefinition")
		.def_readwrite("PlayerChallenges", &UPlayerChallengeListDefinition::PlayerChallenges, py::return_value_policy::reference)
		;
	py::class_< UPlayerClassAttributeValueResolver, UAttributeValueResolver >(m, "UPlayerClassAttributeValueResolver")
		.def_readwrite("PlayerClassId", &UPlayerClassAttributeValueResolver::PlayerClassId, py::return_value_policy::reference)
		;
	py::class_< UPlayerClassCountAttributeValueResolver, UAttributeValueResolver >(m, "UPlayerClassCountAttributeValueResolver")
		.def_readwrite("PlayerClassId", &UPlayerClassCountAttributeValueResolver::PlayerClassId, py::return_value_policy::reference)
		.def("ResetPlayerClassCountOverride", &UPlayerClassCountAttributeValueResolver::ResetPlayerClassCountOverride)
		.def("SetPlayerClassCountOverride", &UPlayerClassCountAttributeValueResolver::SetPlayerClassCountOverride)
		;
	py::class_< UPlayerClassIdentifierDefinition, UGBXDefinition >(m, "UPlayerClassIdentifierDefinition")
		.def_readwrite("VfTable_IIDlcLicensableObject", &UPlayerClassIdentifierDefinition::VfTable_IIDlcLicensableObject, py::return_value_policy::reference)
		.def_readwrite("ClassName", &UPlayerClassIdentifierDefinition::ClassName, py::return_value_policy::reference)
		.def_readwrite("LocalizedClassName", &UPlayerClassIdentifierDefinition::LocalizedClassName, py::return_value_policy::reference)
		.def_readwrite("LocalizedClassNameNonCaps", &UPlayerClassIdentifierDefinition::LocalizedClassNameNonCaps, py::return_value_policy::reference)
		.def_readwrite("StatPlayerFirstSkillPoint", &UPlayerClassIdentifierDefinition::StatPlayerFirstSkillPoint, py::return_value_policy::reference)
		.def_readwrite("DlcCharacterDef", &UPlayerClassIdentifierDefinition::DlcCharacterDef, py::return_value_policy::reference)
		.def_readwrite("ClassDropInitializationDefinition", &UPlayerClassIdentifierDefinition::ClassDropInitializationDefinition, py::return_value_policy::reference)
		.def_readwrite("CommonClassMods", &UPlayerClassIdentifierDefinition::CommonClassMods, py::return_value_policy::reference)
		.def_readwrite("UncommonClassMods", &UPlayerClassIdentifierDefinition::UncommonClassMods, py::return_value_policy::reference)
		.def_readwrite("RareClassMods", &UPlayerClassIdentifierDefinition::RareClassMods, py::return_value_policy::reference)
		.def_readwrite("VeryRareClassMods", &UPlayerClassIdentifierDefinition::VeryRareClassMods, py::return_value_policy::reference)
		.def_readwrite("LegendaryClassMods", &UPlayerClassIdentifierDefinition::LegendaryClassMods, py::return_value_policy::reference)
		.def_readwrite("SlayerOfTerramorphousClassMods", &UPlayerClassIdentifierDefinition::SlayerOfTerramorphousClassMods, py::return_value_policy::reference)
		.def_readwrite("AsterClassMods", &UPlayerClassIdentifierDefinition::AsterClassMods, py::return_value_policy::reference)
		.def_readwrite("LobeliaClassMods", &UPlayerClassIdentifierDefinition::LobeliaClassMods, py::return_value_policy::reference)
		.def_readwrite("CharacterCustomizations", &UPlayerClassIdentifierDefinition::CharacterCustomizations, py::return_value_policy::reference)
		.def("GetDownloadableContentDefinition", &UPlayerClassIdentifierDefinition::GetDownloadableContentDefinition, py::return_value_policy::reference)
		;
	py::class_< UPlayerControllerAttributeContextResolver, UAttributeContextResolver >(m, "UPlayerControllerAttributeContextResolver")
		;
	py::class_< UPlayerEventProviderDefinition, UGBXDefinition >(m, "UPlayerEventProviderDefinition")
		.def_readwrite("VfTable_IIBehaviorProvider", &UPlayerEventProviderDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIConstructObject", &UPlayerEventProviderDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UPlayerEventProviderDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def("OnPlayerEvent", &UPlayerEventProviderDefinition::OnPlayerEvent)
		.def("SetBehaviorProviderDefinition", &UPlayerEventProviderDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UPlayerEventProviderDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< AWillowGameInfo, AGearboxGameInfo >(m, "AWillowGameInfo")
		.def_property("bWeaponStay", [](AWillowGameInfo &self){return self.bWeaponStay;}, [](AWillowGameInfo &self, bool value){self.bWeaponStay = value ? 1 : 0;})
		.def_property("bDemoMode", [](AWillowGameInfo &self){return self.bDemoMode;}, [](AWillowGameInfo &self, bool value){self.bDemoMode = value ? 1 : 0;})
		.def_property("bPIESpawnInVehicle", [](AWillowGameInfo &self){return self.bPIESpawnInVehicle;}, [](AWillowGameInfo &self, bool value){self.bPIESpawnInVehicle = value ? 1 : 0;})
		.def_property("bConsoleServer", [](AWillowGameInfo &self){return self.bConsoleServer;}, [](AWillowGameInfo &self, bool value){self.bConsoleServer = value ? 1 : 0;})
		.def_property("bResurrectAllPlayersWhenOneDies", [](AWillowGameInfo &self){return self.bResurrectAllPlayersWhenOneDies;}, [](AWillowGameInfo &self, bool value){self.bResurrectAllPlayersWhenOneDies = value ? 1 : 0;})
		.def_property("bBossesRegenHealthOnReset", [](AWillowGameInfo &self){return self.bBossesRegenHealthOnReset;}, [](AWillowGameInfo &self, bool value){self.bBossesRegenHealthOnReset = value ? 1 : 0;})
		.def_property("bEnemiesForgetDownedPlayers", [](AWillowGameInfo &self){return self.bEnemiesForgetDownedPlayers;}, [](AWillowGameInfo &self, bool value){self.bEnemiesForgetDownedPlayers = value ? 1 : 0;})
		.def_property("bEnemiesCannotDoCloseAttacksOnDownedPlayers", [](AWillowGameInfo &self){return self.bEnemiesCannotDoCloseAttacksOnDownedPlayers;}, [](AWillowGameInfo &self, bool value){self.bEnemiesCannotDoCloseAttacksOnDownedPlayers = value ? 1 : 0;})
		.def_property("bDlcTravelFailureReceived", [](AWillowGameInfo &self){return self.bDlcTravelFailureReceived;}, [](AWillowGameInfo &self, bool value){self.bDlcTravelFailureReceived = value ? 1 : 0;})
		.def_property("HardcoreMode", [](AWillowGameInfo &self){return self.HardcoreMode;}, [](AWillowGameInfo &self, bool value){self.HardcoreMode = value ? 1 : 0;})
		.def_property("bIgnoreFriendlyFire", [](AWillowGameInfo &self){return self.bIgnoreFriendlyFire;}, [](AWillowGameInfo &self, bool value){self.bIgnoreFriendlyFire = value ? 1 : 0;})
		.def_property("bIgnoreNPCFriendlyFire", [](AWillowGameInfo &self){return self.bIgnoreNPCFriendlyFire;}, [](AWillowGameInfo &self, bool value){self.bIgnoreNPCFriendlyFire = value ? 1 : 0;})
		.def_property("bFromSeamlessTravel", [](AWillowGameInfo &self){return self.bFromSeamlessTravel;}, [](AWillowGameInfo &self, bool value){self.bFromSeamlessTravel = value ? 1 : 0;})
		.def_readwrite("VfTable_IIDesignerAttributeProvider", &AWillowGameInfo::VfTable_IIDesignerAttributeProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIAIInterface", &AWillowGameInfo::VfTable_IIAIInterface, py::return_value_policy::reference)
		.def_readwrite("AdjustedDifficulty", &AWillowGameInfo::AdjustedDifficulty)
		.def_readwrite("PIESpawnInVehicleName", &AWillowGameInfo::PIESpawnInVehicleName, py::return_value_policy::reference)
		.def_readwrite("LastPlayerStartSpot", &AWillowGameInfo::LastPlayerStartSpot, py::return_value_policy::reference)
		.def_readwrite("LastStartSpot", &AWillowGameInfo::LastStartSpot, py::return_value_policy::reference)
		.def_readwrite("VehicleList", &AWillowGameInfo::VehicleList, py::return_value_policy::reference)
		.def_readwrite("MyGlobals", &AWillowGameInfo::MyGlobals, py::return_value_policy::reference)
		.def_readwrite("GlobalSkillManager", &AWillowGameInfo::GlobalSkillManager, py::return_value_policy::reference)
		.def_readwrite("GlobalPlayerInteractionManager", &AWillowGameInfo::GlobalPlayerInteractionManager, py::return_value_policy::reference)
		.def_readwrite("GlobalChallengeManager", &AWillowGameInfo::GlobalChallengeManager, py::return_value_policy::reference)
		.def_readwrite("GlobalCombatMusicManager", &AWillowGameInfo::GlobalCombatMusicManager, py::return_value_policy::reference)
		.def_readwrite("GlobalPlayerStatsNotifier", &AWillowGameInfo::GlobalPlayerStatsNotifier, py::return_value_policy::reference)
		.def_readwrite("GlobalBlackMarketUpgradeManager", &AWillowGameInfo::GlobalBlackMarketUpgradeManager, py::return_value_policy::reference)
		.def_readwrite("DesignerAttributes", &AWillowGameInfo::DesignerAttributes, py::return_value_policy::reference)
		.def_readwrite("ReturnTeleporter", &AWillowGameInfo::ReturnTeleporter, py::return_value_policy::reference)
		.def_readwrite("PersonalTeleporter", &AWillowGameInfo::PersonalTeleporter, py::return_value_policy::reference)
		.def_readwrite("TeleporterDestinationName", &AWillowGameInfo::TeleporterDestinationName, py::return_value_policy::reference)
		.def_readwrite("PlayerObservers", &AWillowGameInfo::PlayerObservers, py::return_value_policy::reference)
		.def_readwrite("MapChangeInitiated", &AWillowGameInfo::MapChangeInitiated, py::return_value_policy::reference)
		.def_readwrite("MapChangePlayerDown", &AWillowGameInfo::MapChangePlayerDown, py::return_value_policy::reference)
		.def_readwrite("MapChangePlayerInMenu", &AWillowGameInfo::MapChangePlayerInMenu, py::return_value_policy::reference)
		.def_readwrite("MapChangeYouAreInMenu", &AWillowGameInfo::MapChangeYouAreInMenu, py::return_value_policy::reference)
		.def_readwrite("MapChangeMissingDLC", &AWillowGameInfo::MapChangeMissingDLC, py::return_value_policy::reference)
		.def_readwrite("MapChangeNeedInstallMissingDLC", &AWillowGameInfo::MapChangeNeedInstallMissingDLC, py::return_value_policy::reference)
		.def_readwrite("MapChangeUpsellMissingDLC", &AWillowGameInfo::MapChangeUpsellMissingDLC, py::return_value_policy::reference)
		.def_readwrite("MapChangeCountdown", &AWillowGameInfo::MapChangeCountdown, py::return_value_policy::reference)
		.def_readwrite("MapChangeCanceledPlayerDown", &AWillowGameInfo::MapChangeCanceledPlayerDown, py::return_value_policy::reference)
		.def_readwrite("MapChangeCanceledPlayerMenu", &AWillowGameInfo::MapChangeCanceledPlayerMenu, py::return_value_policy::reference)
		.def_readwrite("MapChangePlayerIsSaving", &AWillowGameInfo::MapChangePlayerIsSaving, py::return_value_policy::reference)
		.def_readwrite("MapChangeCanceledPlayerIsSaving", &AWillowGameInfo::MapChangeCanceledPlayerIsSaving, py::return_value_policy::reference)
		.def_readwrite("MapChangePlayerJoining", &AWillowGameInfo::MapChangePlayerJoining, py::return_value_policy::reference)
		.def_readwrite("MapChangeUnknownPlayerJoining", &AWillowGameInfo::MapChangeUnknownPlayerJoining, py::return_value_policy::reference)
		.def_readwrite("MapChangeCanceledPlayerJoining", &AWillowGameInfo::MapChangeCanceledPlayerJoining, py::return_value_policy::reference)
		.def_readwrite("MapChangeCanceledUnknownPlayerJoining", &AWillowGameInfo::MapChangeCanceledUnknownPlayerJoining, py::return_value_policy::reference)
		.def_readwrite("MapChangePlayerDueling", &AWillowGameInfo::MapChangePlayerDueling, py::return_value_policy::reference)
		.def_readwrite("MapChangeCanceledPlayerDueling", &AWillowGameInfo::MapChangeCanceledPlayerDueling, py::return_value_policy::reference)
		.def_readwrite("MapChangePlayerRespawn", &AWillowGameInfo::MapChangePlayerRespawn, py::return_value_policy::reference)
		.def_readwrite("MapChangeCanceledPlayerRespawn", &AWillowGameInfo::MapChangeCanceledPlayerRespawn, py::return_value_policy::reference)
		.def_readwrite("TravelCountdownTime", &AWillowGameInfo::TravelCountdownTime)
		.def_readwrite("TravelPostCountdownTime", &AWillowGameInfo::TravelPostCountdownTime)
		.def_readwrite("TravelBehavior", &AWillowGameInfo::TravelBehavior, py::return_value_policy::reference)
		.def_readwrite("TravelEventInterface", &AWillowGameInfo::TravelEventInterface, py::return_value_policy::reference)
		.def_readwrite("TravelStationDef", &AWillowGameInfo::TravelStationDef, py::return_value_policy::reference)
		.def_readwrite("TravelInstigator", &AWillowGameInfo::TravelInstigator, py::return_value_policy::reference)
		.def_readwrite("NewShopInventory", &AWillowGameInfo::NewShopInventory, py::return_value_policy::reference)
		.def_readwrite("SecondsUntilShopsReset", &AWillowGameInfo::SecondsUntilShopsReset)
		.def_readwrite("ShopTimerRate", &AWillowGameInfo::ShopTimerRate)
		.def_readwrite("ShopTimerRateBaseValue", &AWillowGameInfo::ShopTimerRateBaseValue)
		.def_readwrite("ShopTimerRateModifierStack", &AWillowGameInfo::ShopTimerRateModifierStack, py::return_value_policy::reference)
		.def_readwrite("LastShopResetTime", &AWillowGameInfo::LastShopResetTime)
		.def_readwrite("SecondsUntilShopTimerResend", &AWillowGameInfo::SecondsUntilShopTimerResend)
		.def_readwrite("NewShopInventoryDisplayTime", &AWillowGameInfo::NewShopInventoryDisplayTime)
		.def_readwrite("NewShopInventoryDisplayColor", &AWillowGameInfo::NewShopInventoryDisplayColor, py::return_value_policy::reference)
		.def_readwrite("RecordedDialogEvents", &AWillowGameInfo::RecordedDialogEvents, py::return_value_policy::reference)
		.def_readwrite("AIBlackboards", &AWillowGameInfo::AIBlackboards, py::return_value_policy::reference)
		.def_readwrite("StartGameTimer", &AWillowGameInfo::StartGameTimer)
		.def_readwrite("StartGameState", &AWillowGameInfo::StartGameState)
		.def_readwrite("PlayersThatHaveSeenTheCharacterSelect", &AWillowGameInfo::PlayersThatHaveSeenTheCharacterSelect, py::return_value_policy::reference)
		.def_readwrite("PlayersThatHaveSelectedACharacter", &AWillowGameInfo::PlayersThatHaveSelectedACharacter, py::return_value_policy::reference)
		.def_readwrite("PlayersThatHaveReceivedAPawn", &AWillowGameInfo::PlayersThatHaveReceivedAPawn, py::return_value_policy::reference)
		.def_readwrite("CharacterSelectTimeInSeconds", &AWillowGameInfo::CharacterSelectTimeInSeconds)
		.def_readwrite("CharacterSelectQuickStartTimeInSeconds", &AWillowGameInfo::CharacterSelectQuickStartTimeInSeconds)
		.def_readwrite("NextNameListIndex", &AWillowGameInfo::NextNameListIndex)
		.def("GetNameListIndex", &AWillowGameInfo::GetNameListIndex)
		.def("DriverLeftVehicle", &AWillowGameInfo::DriverLeftVehicle)
		.def("DriverEnteredVehicle", &AWillowGameInfo::DriverEnteredVehicle)
		.def("ClientsShouldSeeLobby", &AWillowGameInfo::ClientsShouldSeeLobby)
		.def("UpdateBestNextHosts", &AWillowGameInfo::UpdateBestNextHosts)
		.def("UpdateTookDamageFromEnemyStats", &AWillowGameInfo::UpdateTookDamageFromEnemyStats)
		.def("UpdateWaypoints", &AWillowGameInfo::UpdateWaypoints)
		.def("CheckAllClientsLoaded", &AWillowGameInfo::CheckAllClientsLoaded)
		.def("eventPostSeamlessTravel", &AWillowGameInfo::eventPostSeamlessTravel)
		.def("eventGetSeamlessTravelActorList", &AWillowGameInfo::eventGetSeamlessTravelActorList)
		.def("GenericPlayerInitialization", &AWillowGameInfo::GenericPlayerInitialization)
		.def("TellClientsToSetSessionInviteFlags", &AWillowGameInfo::TellClientsToSetSessionInviteFlags)
		.def("PlayerRemoved", &AWillowGameInfo::PlayerRemoved)
		.def("PlayerAdded", &AWillowGameInfo::PlayerAdded)
		.def("PlayerReceivedPawn", &AWillowGameInfo::PlayerReceivedPawn)
		.def("PlayerSelectedCharacter", &AWillowGameInfo::PlayerSelectedCharacter)
		.def("PlayerOpenedCharacterSelect", &AWillowGameInfo::PlayerOpenedCharacterSelect)
		.def("HandlePublicGame", &AWillowGameInfo::HandlePublicGame)
		.def("TestStartGame", &AWillowGameInfo::TestStartGame)
		.def("EndStartGame", &AWillowGameInfo::EndStartGame)
		.def("BeginStartGame", &AWillowGameInfo::BeginStartGame)
		.def("ClearStartGameTimer", &AWillowGameInfo::ClearStartGameTimer)
		.def("UpdateStartGameTimer", &AWillowGameInfo::UpdateStartGameTimer)
		.def("SetStartGameTimer", &AWillowGameInfo::SetStartGameTimer)
		.def("UpdateStartGameState", &AWillowGameInfo::UpdateStartGameState)
		.def("StartNewGame", &AWillowGameInfo::StartNewGame)
		.def("RegisterServer", &AWillowGameInfo::RegisterServer)
		.def("IsHardcoreMode", &AWillowGameInfo::IsHardcoreMode)
		.def("SetHardcoreMode", &AWillowGameInfo::SetHardcoreMode)
		.def("CleanAIBlackBoards", &AWillowGameInfo::CleanAIBlackBoards)
		.def("GetAIBlackboard", &AWillowGameInfo::GetAIBlackboard, py::return_value_policy::reference)
		.def("InitSequence", &AWillowGameInfo::InitSequence)
		.def("GetAllegiance", &AWillowGameInfo::GetAllegiance, py::return_value_policy::reference)
		.def("GetAIDefinition", &AWillowGameInfo::GetAIDefinition, py::return_value_policy::reference)
		.def("GetAIComponent", &AWillowGameInfo::GetAIComponent, py::return_value_policy::reference)
		.def("GetAIParent", &AWillowGameInfo::GetAIParent, py::return_value_policy::reference)
		.def("GetAILocation", &AWillowGameInfo::GetAILocation, py::return_value_policy::reference)
		.def("GetAIActor", &AWillowGameInfo::GetAIActor, py::return_value_policy::reference)
		.def("CanTickAI", &AWillowGameInfo::CanTickAI)
		.def("CatchupInitialColiseumStat", &AWillowGameInfo::CatchupInitialColiseumStat)
		.def("ConditionallyConfigureColiseum", &AWillowGameInfo::ConditionallyConfigureColiseum)
		.def("PublishColiseumStatDeltaForPlayer", &AWillowGameInfo::PublishColiseumStatDeltaForPlayer)
		.def("PublishColiseumStatDeltas", &AWillowGameInfo::PublishColiseumStatDeltas)
		.def("RemoveColiseumStatCacheForPlayer", &AWillowGameInfo::RemoveColiseumStatCacheForPlayer)
		.def("InitColiseumStatArray", &AWillowGameInfo::InitColiseumStatArray)
		.def("FinishInitializingColiseumStatCache", &AWillowGameInfo::FinishInitializingColiseumStatCache)
		.def("InitColiseumStatCacheForPlayer", &AWillowGameInfo::InitColiseumStatCacheForPlayer)
		.def("ClearColiseumStatCache", &AWillowGameInfo::ClearColiseumStatCache)
		.def("ShouldRestartPlayerAfterLogin", &AWillowGameInfo::ShouldRestartPlayerAfterLogin)
		.def("SetRestartPlayerAfterLogin", &AWillowGameInfo::SetRestartPlayerAfterLogin)
		.def("ShouldInitializeStartupTeleporterAttribute", &AWillowGameInfo::ShouldInitializeStartupTeleporterAttribute)
		.def("SetStartupTeleporterAttributeInitialization", &AWillowGameInfo::SetStartupTeleporterAttributeInitialization)
		.def("PlayerResetShop", &AWillowGameInfo::PlayerResetShop)
		.def("RemoveWaypointComponent", &AWillowGameInfo::RemoveWaypointComponent)
		.def("AddWaypointComponent", &AWillowGameInfo::AddWaypointComponent)
		.def("ClearRemainingProjectiles", &AWillowGameInfo::ClearRemainingProjectiles)
		.def("TravelPostCountdownInProcess", &AWillowGameInfo::TravelPostCountdownInProcess)
		.def("TravelCountdownInProcess", &AWillowGameInfo::TravelCountdownInProcess)
		.def("ClearTravelData", &AWillowGameInfo::ClearTravelData)
		.def("TravelPostCountdown", &AWillowGameInfo::TravelPostCountdown)
		.def("TravelCountdown", &AWillowGameInfo::TravelCountdown)
		.def("InitiateTravel", &AWillowGameInfo::InitiateTravel)
		.def("CanAllPlayersTravelToDlcDestination", &AWillowGameInfo::CanAllPlayersTravelToDlcDestination)
		.def("GetDlcCannotTravelPlayerList", &AWillowGameInfo::GetDlcCannotTravelPlayerList, py::return_value_policy::reference)
		.def("TravelToFastTravelStation", &AWillowGameInfo::TravelToFastTravelStation)
		.def("TeleportToFinalDestinationAfterLoad", &AWillowGameInfo::TeleportToFinalDestinationAfterLoad)
		.def("TravelToRealDestinationLevel", &AWillowGameInfo::TravelToRealDestinationLevel)
		.def("CommitTravelToNewLevel", &AWillowGameInfo::CommitTravelToNewLevel)
		.def("TravelToStation", &AWillowGameInfo::TravelToStation)
		.def("eventCheckMapChangeConditions", &AWillowGameInfo::eventCheckMapChangeConditions)
		.def("TryFireInstigatorImpatientVO", &AWillowGameInfo::TryFireInstigatorImpatientVO)
		.def("FireInstigatorImpatientVO", &AWillowGameInfo::FireInstigatorImpatientVO)
		.def("ShouldSpawnAtStartSpot", &AWillowGameInfo::ShouldSpawnAtStartSpot)
		.def("eventEndGameHack", &AWillowGameInfo::eventEndGameHack)
		.def("DelayedEndGame", &AWillowGameInfo::DelayedEndGame)
		.def("InitGameReplicationInfo", &AWillowGameInfo::InitGameReplicationInfo)
		.def("eventPostCommitMapChange", &AWillowGameInfo::eventPostCommitMapChange)
		.def("PlayerLeftGameNotification", &AWillowGameInfo::PlayerLeftGameNotification)
		.def("PlayerEnteredGameNotification", &AWillowGameInfo::PlayerEnteredGameNotification)
		.def("UpdatePlayerObservers", &AWillowGameInfo::UpdatePlayerObservers)
		.def("RemovePlayerObserver", &AWillowGameInfo::RemovePlayerObserver)
		.def("AddPlayerObserver", &AWillowGameInfo::AddPlayerObserver)
		.def("SpawnDefaultPawnFor", &AWillowGameInfo::SpawnDefaultPawnFor, py::return_value_policy::reference)
		.def("InitiatePlayerPawnDataLoad", &AWillowGameInfo::InitiatePlayerPawnDataLoad)
		.def("ResurrectAllPlayers", &AWillowGameInfo::ResurrectAllPlayers)
		.def("HandlePlayerDeathResurrection", &AWillowGameInfo::HandlePlayerDeathResurrection)
		.def("AllowCheats", &AWillowGameInfo::AllowCheats)
		.def("ResetAI", &AWillowGameInfo::ResetAI)
		.def("ShouldCensorContent", &AWillowGameInfo::ShouldCensorContent)
		.def("IsShippingBuild", &AWillowGameInfo::IsShippingBuild)
		.def("IsEditor", &AWillowGameInfo::IsEditor)
		.def("GetBlackMarketUpgradeManager", &AWillowGameInfo::GetBlackMarketUpgradeManager, py::return_value_policy::reference)
		.def("GetPlayerStatsNotifier", &AWillowGameInfo::GetPlayerStatsNotifier, py::return_value_policy::reference)
		.def("GetCombatMusicManager", &AWillowGameInfo::GetCombatMusicManager, py::return_value_policy::reference)
		.def("GetChallengeManager", &AWillowGameInfo::GetChallengeManager, py::return_value_policy::reference)
		.def("GetPlayerInteractionManager", &AWillowGameInfo::GetPlayerInteractionManager, py::return_value_policy::reference)
		.def("GetSkillManager", &AWillowGameInfo::GetSkillManager, py::return_value_policy::reference)
		.def("eventLogin", &AWillowGameInfo::eventLogin, py::return_value_policy::reference)
		.def("ActivateVehicleFactory", &AWillowGameInfo::ActivateVehicleFactory)
		.def("RegisterVehicle", &AWillowGameInfo::RegisterVehicle)
		.def("ShouldRespawn", &AWillowGameInfo::ShouldRespawn)
		.def("AwardCombatExperience", &AWillowGameInfo::AwardCombatExperience)
		.def("Killed", &AWillowGameInfo::Killed)
		.def("InitializeStartupTeleporterAttribute", &AWillowGameInfo::InitializeStartupTeleporterAttribute)
		.def("SetInitialTeleportDestination", &AWillowGameInfo::SetInitialTeleportDestination)
		.def("FindPlayerStart", &AWillowGameInfo::FindPlayerStart, py::return_value_policy::reference)
		.def("RatePlayerStart", &AWillowGameInfo::RatePlayerStart)
		.def("DecodeEvent", &AWillowGameInfo::DecodeEvent, py::return_value_policy::reference)
		.def("RestartPlayer", &AWillowGameInfo::RestartPlayer)
		.def("SyncKismetSetProperties", &AWillowGameInfo::SyncKismetSetProperties)
		.def("EndGame", &AWillowGameInfo::EndGame)
		.def("StartMatch", &AWillowGameInfo::StartMatch)
		.def("Logout", &AWillowGameInfo::Logout)
		.def("eventPostLogin", &AWillowGameInfo::eventPostLogin)
		.def("DiscardInventory", &AWillowGameInfo::DiscardInventory)
		.def("ShouldPawnDropWeaponOnDeath", &AWillowGameInfo::ShouldPawnDropWeaponOnDeath)
		.def("ApplyGlobalPlayerMovementSettings", &AWillowGameInfo::ApplyGlobalPlayerMovementSettings)
		.def("SetPlayerDefaults", &AWillowGameInfo::SetPlayerDefaults)
		.def("eventGetInstancedDesignerAttribute", &AWillowGameInfo::eventGetInstancedDesignerAttribute, py::return_value_policy::reference)
		.def("CreateDesignerAttribute", &AWillowGameInfo::CreateDesignerAttribute, py::return_value_policy::reference)
		.def("eventInitGame", &AWillowGameInfo::eventInitGame)
		.def("PostBeginPlay", &AWillowGameInfo::PostBeginPlay)
		.def("PreBeginPlay", &AWillowGameInfo::PreBeginPlay)
		;
	py::class_< UPlayerInteractionManager, UObject >(m, "UPlayerInteractionManager")
		.def_readwrite("Interactions", &UPlayerInteractionManager::Interactions, py::return_value_policy::reference)
		.def_readwrite("TickDelay", &UPlayerInteractionManager::TickDelay)
		.def_readwrite("TimeToTick", &UPlayerInteractionManager::TimeToTick)
		.def("GetInteractionPlayers", &UPlayerInteractionManager::GetInteractionPlayers)
		.def("IsInInteraction", &UPlayerInteractionManager::IsInInteraction)
		.def("GetServerForPlayer", &UPlayerInteractionManager::GetServerForPlayer, py::return_value_policy::reference)
		.def("GetInstigator", &UPlayerInteractionManager::GetInstigator, py::return_value_policy::reference)
		.def("RelayMessage", &UPlayerInteractionManager::RelayMessage)
		.def("StartInteraction", &UPlayerInteractionManager::StartInteraction)
		;
	py::class_< UPlayerInteractionServer, UObject >(m, "UPlayerInteractionServer")
		.def_property("bIsDone", [](UPlayerInteractionServer &self){return self.bIsDone;}, [](UPlayerInteractionServer &self, bool value){self.bIsDone = value ? 1 : 0;})
		.def_readwrite("TimeoutTime", &UPlayerInteractionServer::TimeoutTime)
		.def("IsValid", &UPlayerInteractionServer::IsValid)
		.def("CanReceiveMessages", &UPlayerInteractionServer::CanReceiveMessages)
		.def("MarkDone", &UPlayerInteractionServer::MarkDone)
		.def("eventHandleInteractionEnded", &UPlayerInteractionServer::eventHandleInteractionEnded)
		.def("BroadcastMessage", &UPlayerInteractionServer::BroadcastMessage)
		.def("SendMessage", &UPlayerInteractionServer::SendMessage)
		.def("UsesClientType", &UPlayerInteractionServer::UsesClientType)
		.def("HandleMessage", &UPlayerInteractionServer::HandleMessage)
		.def("GetClientType", &UPlayerInteractionServer::GetClientType, py::return_value_policy::reference)
		.def("GetInitialMessageForPlayer", &UPlayerInteractionServer::GetInitialMessageForPlayer)
		.def("initialize", &UPlayerInteractionServer::initialize)
		;
	py::class_< UVehicleSeatSwap_PlayerInteractionServer, UPlayerInteractionServer >(m, "UVehicleSeatSwap_PlayerInteractionServer")
		.def_readwrite("PlayerVehicle", &UVehicleSeatSwap_PlayerInteractionServer::PlayerVehicle, py::return_value_policy::reference)
		.def_readwrite("RequestedSeat", &UVehicleSeatSwap_PlayerInteractionServer::RequestedSeat)
		.def("IsValid", &UVehicleSeatSwap_PlayerInteractionServer::IsValid)
		.def("initialize", &UVehicleSeatSwap_PlayerInteractionServer::initialize)
		.def("GetClientType", &UVehicleSeatSwap_PlayerInteractionServer::GetClientType, py::return_value_policy::reference)
		.def("GetInitialMessageForPlayer", &UVehicleSeatSwap_PlayerInteractionServer::GetInitialMessageForPlayer)
		.def("HandleMessage", &UVehicleSeatSwap_PlayerInteractionServer::HandleMessage)
		;
	py::class_< APlayerKillVolume, AVolume >(m, "APlayerKillVolume")
		.def_property("bKillPlayers", [](APlayerKillVolume &self){return self.bKillPlayers;}, [](APlayerKillVolume &self, bool value){self.bKillPlayers = value ? 1 : 0;})
		.def_property("bKillAIPawns", [](APlayerKillVolume &self){return self.bKillAIPawns;}, [](APlayerKillVolume &self, bool value){self.bKillAIPawns = value ? 1 : 0;})
		.def_property("bInstaKill", [](APlayerKillVolume &self){return self.bInstaKill;}, [](APlayerKillVolume &self, bool value){self.bInstaKill = value ? 1 : 0;})
		.def("KillAIPawn", &APlayerKillVolume::KillAIPawn)
		.def("GetBestKillerFor", &APlayerKillVolume::GetBestKillerFor, py::return_value_policy::reference)
		.def("eventTouch", &APlayerKillVolume::eventTouch)
		;
	py::class_< UPlayerNameIdentifierDefinition, UGBXDefinition >(m, "UPlayerNameIdentifierDefinition")
		.def_property("IsDefaultNewCharacter", [](UPlayerNameIdentifierDefinition &self){return self.IsDefaultNewCharacter;}, [](UPlayerNameIdentifierDefinition &self, bool value){self.IsDefaultNewCharacter = value ? 1 : 0;})
		.def_property("GFxActionSkillHasBar", [](UPlayerNameIdentifierDefinition &self){return self.GFxActionSkillHasBar;}, [](UPlayerNameIdentifierDefinition &self, bool value){self.GFxActionSkillHasBar = value ? 1 : 0;})
		.def_property("GFxActionSkillHasFade", [](UPlayerNameIdentifierDefinition &self){return self.GFxActionSkillHasFade;}, [](UPlayerNameIdentifierDefinition &self, bool value){self.GFxActionSkillHasFade = value ? 1 : 0;})
		.def_property("GFxActionSkillDeferTimeToSkill", [](UPlayerNameIdentifierDefinition &self){return self.GFxActionSkillDeferTimeToSkill;}, [](UPlayerNameIdentifierDefinition &self, bool value){self.GFxActionSkillDeferTimeToSkill = value ? 1 : 0;})
		.def_property("GFxActionSkillGuideCanBeHidden", [](UPlayerNameIdentifierDefinition &self){return self.GFxActionSkillGuideCanBeHidden;}, [](UPlayerNameIdentifierDefinition &self, bool value){self.GFxActionSkillGuideCanBeHidden = value ? 1 : 0;})
		.def_readwrite("CharacterName", &UPlayerNameIdentifierDefinition::CharacterName, py::return_value_policy::reference)
		.def_readwrite("LocalizedCharacterName", &UPlayerNameIdentifierDefinition::LocalizedCharacterName, py::return_value_policy::reference)
		.def_readwrite("LocalizedCharacterDescription", &UPlayerNameIdentifierDefinition::LocalizedCharacterDescription, py::return_value_policy::reference)
		.def_readwrite("LocalizedActionSkillDescription", &UPlayerNameIdentifierDefinition::LocalizedActionSkillDescription, py::return_value_policy::reference)
		.def_readwrite("LocalizedPreferredWeaponDescription", &UPlayerNameIdentifierDefinition::LocalizedPreferredWeaponDescription, py::return_value_policy::reference)
		.def_readwrite("XlastCharacterIdOffset", &UPlayerNameIdentifierDefinition::XlastCharacterIdOffset)
		.def_readwrite("CharacterClassId", &UPlayerNameIdentifierDefinition::CharacterClassId, py::return_value_policy::reference)
		.def_readwrite("DefaultSaveGame", &UPlayerNameIdentifierDefinition::DefaultSaveGame, py::return_value_policy::reference)
		.def_readwrite("UISortOrder", &UPlayerNameIdentifierDefinition::UISortOrder)
		.def_readwrite("StatusMenuGFxPortrait", &UPlayerNameIdentifierDefinition::StatusMenuGFxPortrait, py::return_value_policy::reference)
		.def_readwrite("PlayerRegistrationPortraitName", &UPlayerNameIdentifierDefinition::PlayerRegistrationPortraitName, py::return_value_policy::reference)
		.def_readwrite("CharacterSelectionGFxMovieId", &UPlayerNameIdentifierDefinition::CharacterSelectionGFxMovieId)
		.def_readwrite("CharacterSelectionGFxMovieVarString", &UPlayerNameIdentifierDefinition::CharacterSelectionGFxMovieVarString, py::return_value_policy::reference)
		.def_readwrite("CharacterIconSwfMovie", &UPlayerNameIdentifierDefinition::CharacterIconSwfMovie, py::return_value_policy::reference)
		.def_readwrite("CoopCharacterIconSwfMovie", &UPlayerNameIdentifierDefinition::CoopCharacterIconSwfMovie, py::return_value_policy::reference)
		.def_readwrite("ScaleformSkillLeftBranchName", &UPlayerNameIdentifierDefinition::ScaleformSkillLeftBranchName, py::return_value_policy::reference)
		.def_readwrite("ScaleformSkillMiddleBranchName", &UPlayerNameIdentifierDefinition::ScaleformSkillMiddleBranchName, py::return_value_policy::reference)
		.def_readwrite("ScaleformSkillRightBranchName", &UPlayerNameIdentifierDefinition::ScaleformSkillRightBranchName, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillBarPath", &UPlayerNameIdentifierDefinition::GFxActionSkillBarPath, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillStartPath", &UPlayerNameIdentifierDefinition::GFxActionSkillStartPath, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillStartString", &UPlayerNameIdentifierDefinition::GFxActionSkillStartString, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillStartExternalClip", &UPlayerNameIdentifierDefinition::GFxActionSkillStartExternalClip, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillFadeGotoAndPlayString", &UPlayerNameIdentifierDefinition::GFxActionSkillFadeGotoAndPlayString, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillFadeString", &UPlayerNameIdentifierDefinition::GFxActionSkillFadeString, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillPortrait", &UPlayerNameIdentifierDefinition::GFxActionSkillPortrait, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillTooltipPath", &UPlayerNameIdentifierDefinition::GFxActionSkillTooltipPath, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillActivateTooltipValue", &UPlayerNameIdentifierDefinition::GFxActionSkillActivateTooltipValue, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillDisableTooltipValue", &UPlayerNameIdentifierDefinition::GFxActionSkillDisableTooltipValue, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillTooltipStringPath", &UPlayerNameIdentifierDefinition::GFxActionSkillTooltipStringPath, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillTooltipString", &UPlayerNameIdentifierDefinition::GFxActionSkillTooltipString, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillEnablePath", &UPlayerNameIdentifierDefinition::GFxActionSkillEnablePath, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillEnableValue", &UPlayerNameIdentifierDefinition::GFxActionSkillEnableValue, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillDisablePath", &UPlayerNameIdentifierDefinition::GFxActionSkillDisablePath, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillDisableValue", &UPlayerNameIdentifierDefinition::GFxActionSkillDisableValue, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillGuideHideGotoAndPlayString", &UPlayerNameIdentifierDefinition::GFxActionSkillGuideHideGotoAndPlayString, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillGuideHideStart", &UPlayerNameIdentifierDefinition::GFxActionSkillGuideHideStart, py::return_value_policy::reference)
		.def_readwrite("GFxActionSkillGuideHideResume", &UPlayerNameIdentifierDefinition::GFxActionSkillGuideHideResume, py::return_value_policy::reference)
		.def("eventGetCoopCharacterIconSwfMoviePath", &UPlayerNameIdentifierDefinition::eventGetCoopCharacterIconSwfMoviePath, py::return_value_policy::reference)
		.def("eventGetCharacterIconSwfMoviePath", &UPlayerNameIdentifierDefinition::eventGetCharacterIconSwfMoviePath, py::return_value_policy::reference)
		.def("eventGetPortraitSwfMoviePath", &UPlayerNameIdentifierDefinition::eventGetPortraitSwfMoviePath, py::return_value_policy::reference)
		;
	py::class_< UPlayerReplicationInfoAttributeContextResolver, UAttributeContextResolver >(m, "UPlayerReplicationInfoAttributeContextResolver")
		;
	py::class_< UPlayerSaveGame, UObject >(m, "UPlayerSaveGame")
		.def_property("bReceivedDefaultWeapon", [](UPlayerSaveGame &self){return self.bReceivedDefaultWeapon;}, [](UPlayerSaveGame &self, bool value){self.bReceivedDefaultWeapon = value ? 1 : 0;})
		.def_property("bIsBadassModeSaveGame", [](UPlayerSaveGame &self){return self.bIsBadassModeSaveGame;}, [](UPlayerSaveGame &self, bool value){self.bIsBadassModeSaveGame = value ? 1 : 0;})
		.def_property("bIsDlcPlayerClass", [](UPlayerSaveGame &self){return self.bIsDlcPlayerClass;}, [](UPlayerSaveGame &self, bool value){self.bIsDlcPlayerClass = value ? 1 : 0;})
		.def_property("bShowNewPlaythroughNotification", [](UPlayerSaveGame &self){return self.bShowNewPlaythroughNotification;}, [](UPlayerSaveGame &self, bool value){self.bShowNewPlaythroughNotification = value ? 1 : 0;})
		.def_property("bAwesomeSkillDisabled", [](UPlayerSaveGame &self){return self.bAwesomeSkillDisabled;}, [](UPlayerSaveGame &self, bool value){self.bAwesomeSkillDisabled = value ? 1 : 0;})
		.def_readwrite("UIPreferences", &UPlayerSaveGame::UIPreferences, py::return_value_policy::reference)
		.def_readwrite("PlayerClassDefinition", &UPlayerSaveGame::PlayerClassDefinition, py::return_value_policy::reference)
		.def_readwrite("ExpLevel", &UPlayerSaveGame::ExpLevel)
		.def_readwrite("ExpPoints", &UPlayerSaveGame::ExpPoints)
		.def_readwrite("GeneralSkillPoints", &UPlayerSaveGame::GeneralSkillPoints)
		.def_readwrite("SpecialistSkillPoints", &UPlayerSaveGame::SpecialistSkillPoints)
		.def_readwrite("PlaythroughsCompleted", &UPlayerSaveGame::PlaythroughsCompleted)
		.def_readwrite("SkillData", &UPlayerSaveGame::SkillData, py::return_value_policy::reference)
		.def_readwrite("ResourceData", &UPlayerSaveGame::ResourceData, py::return_value_policy::reference)
		.def_readwrite("ItemData", &UPlayerSaveGame::ItemData, py::return_value_policy::reference)
		.def_readwrite("UnloadableDlcItemData", &UPlayerSaveGame::UnloadableDlcItemData, py::return_value_policy::reference)
		.def_readwrite("InventorySlotData", &UPlayerSaveGame::InventorySlotData, py::return_value_policy::reference)
		.def_readwrite("WeaponData", &UPlayerSaveGame::WeaponData, py::return_value_policy::reference)
		.def_readwrite("UnloadableDlcWeaponData", &UPlayerSaveGame::UnloadableDlcWeaponData, py::return_value_policy::reference)
		.def_readwrite("MissionPlaythroughs", &UPlayerSaveGame::MissionPlaythroughs, py::return_value_policy::reference)
		.def_readwrite("StatsData", &UPlayerSaveGame::StatsData, py::return_value_policy::reference)
		.def_readwrite("VisitedTeleporters", &UPlayerSaveGame::VisitedTeleporters, py::return_value_policy::reference)
		.def_readwrite("LastVisitedTeleporter", &UPlayerSaveGame::LastVisitedTeleporter, py::return_value_policy::reference)
		.def_readwrite("SaveGameId", &UPlayerSaveGame::SaveGameId)
		.def_readwrite("SaveVersion", &UPlayerSaveGame::SaveVersion)
		.def_readwrite("PlotMissionNumber", &UPlayerSaveGame::PlotMissionNumber)
		.def_readwrite("ActiveMissionNumber", &UPlayerSaveGame::ActiveMissionNumber)
		.def_readwrite("UsedMarketingCodes", &UPlayerSaveGame::UsedMarketingCodes, py::return_value_policy::reference)
		.def_readwrite("MarketingCodesNeedingNotification", &UPlayerSaveGame::MarketingCodesNeedingNotification, py::return_value_policy::reference)
		.def_readwrite("TotalPlayTime", &UPlayerSaveGame::TotalPlayTime)
		.def_readwrite("LastSavedDate", &UPlayerSaveGame::LastSavedDate, py::return_value_policy::reference)
		.def_readwrite("DLCExpansionData", &UPlayerSaveGame::DLCExpansionData, py::return_value_policy::reference)
		.def_readwrite("ChallengeList", &UPlayerSaveGame::ChallengeList, py::return_value_policy::reference)
		.def_readwrite("UnloadableDlcChallengeList", &UPlayerSaveGame::UnloadableDlcChallengeList, py::return_value_policy::reference)
		.def_readwrite("RegionGameStages", &UPlayerSaveGame::RegionGameStages, py::return_value_policy::reference)
		.def_readwrite("UnloadableDlcRegionGameStages", &UPlayerSaveGame::UnloadableDlcRegionGameStages, py::return_value_policy::reference)
		.def_readwrite("WorldDiscoveryList", &UPlayerSaveGame::WorldDiscoveryList, py::return_value_policy::reference)
		.def_readwrite("BlackMarketUpgrades", &UPlayerSaveGame::BlackMarketUpgrades, py::return_value_policy::reference)
		.def_readwrite("SaveGuid", &UPlayerSaveGame::SaveGuid, py::return_value_policy::reference)
		.def_readwrite("LevelChallengeUnlocks", &UPlayerSaveGame::LevelChallengeUnlocks, py::return_value_policy::reference)
		.def_readwrite("OneOffLevelChallengeCompletion", &UPlayerSaveGame::OneOffLevelChallengeCompletion, py::return_value_policy::reference)
		.def_readwrite("MaxBankSlots", &UPlayerSaveGame::MaxBankSlots)
		.def_readwrite("BankSlots", &UPlayerSaveGame::BankSlots, py::return_value_policy::reference)
		.def_readwrite("NumChallengePrestiges", &UPlayerSaveGame::NumChallengePrestiges)
		.def_readwrite("LockoutList", &UPlayerSaveGame::LockoutList, py::return_value_policy::reference)
		.def_readwrite("UnloadableDlcLockoutList", &UPlayerSaveGame::UnloadableDlcLockoutList, py::return_value_policy::reference)
		.def_readwrite("DLCPlayerClassPackageId", &UPlayerSaveGame::DLCPlayerClassPackageId)
		.def_readwrite("FullyExploredAreas", &UPlayerSaveGame::FullyExploredAreas, py::return_value_policy::reference)
		.def_readwrite("NumGoldenKeysNotified", &UPlayerSaveGame::NumGoldenKeysNotified)
		.def_readwrite("LastPlaythroughNumber", &UPlayerSaveGame::LastPlaythroughNumber)
		.def_readwrite("QueuedTrainingMessages", &UPlayerSaveGame::QueuedTrainingMessages, py::return_value_policy::reference)
		.def_readwrite("NumOverpowerLevelsUnlocked", &UPlayerSaveGame::NumOverpowerLevelsUnlocked)
		.def_readwrite("LastOverpowerChoice", &UPlayerSaveGame::LastOverpowerChoice)
		.def_readwrite("ChosenVehicleCustomizations", &UPlayerSaveGame::ChosenVehicleCustomizations, py::return_value_policy::reference)
		;
	py::class_< UPlayerSkillAttributeValueResolver, UAttributeValueResolver >(m, "UPlayerSkillAttributeValueResolver")
		.def_readwrite("AssociatedSkill", &UPlayerSkillAttributeValueResolver::AssociatedSkill, py::return_value_policy::reference)
		;
#endif
	py::class_< AWillowPlayerController, AGearboxPlayerController >(m, "AWillowPlayerController")
		.def_property("bCenteredWeaponFire", [](AWillowPlayerController &self){return self.bCenteredWeaponFire;}, [](AWillowPlayerController &self, bool value){self.bCenteredWeaponFire = value ? 1 : 0;})
		.def_property("bIsTyping", [](AWillowPlayerController &self){return self.bIsTyping;}, [](AWillowPlayerController &self, bool value){self.bIsTyping = value ? 1 : 0;})
		.def_property("bBehindView", [](AWillowPlayerController &self){return self.bBehindView;}, [](AWillowPlayerController &self, bool value){self.bBehindView = value ? 1 : 0;})
		.def_property("bAlwaysLookDownCamera", [](AWillowPlayerController &self){return self.bAlwaysLookDownCamera;}, [](AWillowPlayerController &self, bool value){self.bAlwaysLookDownCamera = value ? 1 : 0;})
		.def_property("bViewingThirdPersonMenu", [](AWillowPlayerController &self){return self.bViewingThirdPersonMenu;}, [](AWillowPlayerController &self, bool value){self.bViewingThirdPersonMenu = value ? 1 : 0;})
		.def_property("bSuppressingThirdPersonMenu", [](AWillowPlayerController &self){return self.bSuppressingThirdPersonMenu;}, [](AWillowPlayerController &self, bool value){self.bSuppressingThirdPersonMenu = value ? 1 : 0;})
		.def_property("bMayUpdateHealthGainStat", [](AWillowPlayerController &self){return self.bMayUpdateHealthGainStat;}, [](AWillowPlayerController &self, bool value){self.bMayUpdateHealthGainStat = value ? 1 : 0;})
		.def_property("bDemiGodMode", [](AWillowPlayerController &self){return self.bDemiGodMode;}, [](AWillowPlayerController &self, bool value){self.bDemiGodMode = value ? 1 : 0;})
		.def_property("bHLQNoClipMode", [](AWillowPlayerController &self){return self.bHLQNoClipMode;}, [](AWillowPlayerController &self, bool value){self.bHLQNoClipMode = value ? 1 : 0;})
		.def_property("HLQPlayerMoving", [](AWillowPlayerController &self){return self.HLQPlayerMoving;}, [](AWillowPlayerController &self, bool value){self.HLQPlayerMoving = value ? 1 : 0;})
		.def_property("bLandingShake", [](AWillowPlayerController &self){return self.bLandingShake;}, [](AWillowPlayerController &self, bool value){self.bLandingShake = value ? 1 : 0;})
		.def_property("bHideAmmoOnHUD", [](AWillowPlayerController &self){return self.bHideAmmoOnHUD;}, [](AWillowPlayerController &self, bool value){self.bHideAmmoOnHUD = value ? 1 : 0;})
		.def_property("bHideCompassOnHUD", [](AWillowPlayerController &self){return self.bHideCompassOnHUD;}, [](AWillowPlayerController &self, bool value){self.bHideCompassOnHUD = value ? 1 : 0;})
		.def_property("bHideSkillsOnHUD", [](AWillowPlayerController &self){return self.bHideSkillsOnHUD;}, [](AWillowPlayerController &self, bool value){self.bHideSkillsOnHUD = value ? 1 : 0;})
		.def_property("bHideXPOnHUD", [](AWillowPlayerController &self){return self.bHideXPOnHUD;}, [](AWillowPlayerController &self, bool value){self.bHideXPOnHUD = value ? 1 : 0;})
		.def_property("HasStartedVehicleCameraAction", [](AWillowPlayerController &self){return self.HasStartedVehicleCameraAction;}, [](AWillowPlayerController &self, bool value){self.HasStartedVehicleCameraAction = value ? 1 : 0;})
		.def_property("bSuspendHUDReInitOnPossession", [](AWillowPlayerController &self){return self.bSuspendHUDReInitOnPossession;}, [](AWillowPlayerController &self, bool value){self.bSuspendHUDReInitOnPossession = value ? 1 : 0;})
		.def_property("bInitialSpawn", [](AWillowPlayerController &self){return self.bInitialSpawn;}, [](AWillowPlayerController &self, bool value){self.bInitialSpawn = value ? 1 : 0;})
		.def_property("bRespawnFromClassChange", [](AWillowPlayerController &self){return self.bRespawnFromClassChange;}, [](AWillowPlayerController &self, bool value){self.bRespawnFromClassChange = value ? 1 : 0;})
		.def_property("bLoadingCharacterPackageForClassSwitch", [](AWillowPlayerController &self){return self.bLoadingCharacterPackageForClassSwitch;}, [](AWillowPlayerController &self, bool value){self.bLoadingCharacterPackageForClassSwitch = value ? 1 : 0;})
		.def_property("bPerformingMeleeAttack", [](AWillowPlayerController &self){return self.bPerformingMeleeAttack;}, [](AWillowPlayerController &self, bool value){self.bPerformingMeleeAttack = value ? 1 : 0;})
		.def_property("bThrowingGrenade", [](AWillowPlayerController &self){return self.bThrowingGrenade;}, [](AWillowPlayerController &self, bool value){self.bThrowingGrenade = value ? 1 : 0;})
		.def_property("bPerformingSharedWeaponAction", [](AWillowPlayerController &self){return self.bPerformingSharedWeaponAction;}, [](AWillowPlayerController &self, bool value){self.bPerformingSharedWeaponAction = value ? 1 : 0;})
		.def_property("bConsoleController", [](AWillowPlayerController &self){return self.bConsoleController;}, [](AWillowPlayerController &self, bool value){self.bConsoleController = value ? 1 : 0;})
		.def_property("bDebugMeleeSkill", [](AWillowPlayerController &self){return self.bDebugMeleeSkill;}, [](AWillowPlayerController &self, bool value){self.bDebugMeleeSkill = value ? 1 : 0;})
		.def_property("bDisableEchoVideos", [](AWillowPlayerController &self){return self.bDisableEchoVideos;}, [](AWillowPlayerController &self, bool value){self.bDisableEchoVideos = value ? 1 : 0;})
		.def_property("ShouldDisplaySkillTooltip", [](AWillowPlayerController &self){return self.ShouldDisplaySkillTooltip;}, [](AWillowPlayerController &self, bool value){self.ShouldDisplaySkillTooltip = value ? 1 : 0;})
		.def_property("bIsShopping", [](AWillowPlayerController &self){return self.bIsShopping;}, [](AWillowPlayerController &self, bool value){self.bIsShopping = value ? 1 : 0;})
		.def_property("SummedDamageOnlyAffectedShield", [](AWillowPlayerController &self){return self.SummedDamageOnlyAffectedShield;}, [](AWillowPlayerController &self, bool value){self.SummedDamageOnlyAffectedShield = value ? 1 : 0;})
		.def_property("bHUDDamageIndicatorAdded", [](AWillowPlayerController &self){return self.bHUDDamageIndicatorAdded;}, [](AWillowPlayerController &self, bool value){self.bHUDDamageIndicatorAdded = value ? 1 : 0;})
		.def_property("bShowBasicPlayerDebugInfo", [](AWillowPlayerController &self){return self.bShowBasicPlayerDebugInfo;}, [](AWillowPlayerController &self, bool value){self.bShowBasicPlayerDebugInfo = value ? 1 : 0;})
		.def_property("bDebugDisplayActorInfo", [](AWillowPlayerController &self){return self.bDebugDisplayActorInfo;}, [](AWillowPlayerController &self, bool value){self.bDebugDisplayActorInfo = value ? 1 : 0;})
		.def_property("bDebugDisplayLocked", [](AWillowPlayerController &self){return self.bDebugDisplayLocked;}, [](AWillowPlayerController &self, bool value){self.bDebugDisplayLocked = value ? 1 : 0;})
		.def_property("bShowDenInfo", [](AWillowPlayerController &self){return self.bShowDenInfo;}, [](AWillowPlayerController &self, bool value){self.bShowDenInfo = value ? 1 : 0;})
		.def_property("bMainMenu_HostGame", [](AWillowPlayerController &self){return self.bMainMenu_HostGame;}, [](AWillowPlayerController &self, bool value){self.bMainMenu_HostGame = value ? 1 : 0;})
		.def_property("bMainMenu_SplitScreen", [](AWillowPlayerController &self){return self.bMainMenu_SplitScreen;}, [](AWillowPlayerController &self, bool value){self.bMainMenu_SplitScreen = value ? 1 : 0;})
		.def_property("bWasActionSkillRunning", [](AWillowPlayerController &self){return self.bWasActionSkillRunning;}, [](AWillowPlayerController &self, bool value){self.bWasActionSkillRunning = value ? 1 : 0;})
		.def_property("bWasHealthy", [](AWillowPlayerController &self){return self.bWasHealthy;}, [](AWillowPlayerController &self, bool value){self.bWasHealthy = value ? 1 : 0;})
		.def_property("bWasCinematic", [](AWillowPlayerController &self){return self.bWasCinematic;}, [](AWillowPlayerController &self, bool value){self.bWasCinematic = value ? 1 : 0;})
		.def_property("bReadyForCommit", [](AWillowPlayerController &self){return self.bReadyForCommit;}, [](AWillowPlayerController &self, bool value){self.bReadyForCommit = value ? 1 : 0;})
		.def_property("bReadyForPlay", [](AWillowPlayerController &self){return self.bReadyForPlay;}, [](AWillowPlayerController &self, bool value){self.bReadyForPlay = value ? 1 : 0;})
		.def_property("bTeleporterRestricted", [](AWillowPlayerController &self){return self.bTeleporterRestricted;}, [](AWillowPlayerController &self, bool value){self.bTeleporterRestricted = value ? 1 : 0;})
		.def_property("bWeaponsRestricted", [](AWillowPlayerController &self){return self.bWeaponsRestricted;}, [](AWillowPlayerController &self, bool value){self.bWeaponsRestricted = value ? 1 : 0;})
		.def_property("bPendingZoom", [](AWillowPlayerController &self){return self.bPendingZoom;}, [](AWillowPlayerController &self, bool value){self.bPendingZoom = value ? 1 : 0;})
		.def_property("bDoDOFOnReload", [](AWillowPlayerController &self){return self.bDoDOFOnReload;}, [](AWillowPlayerController &self, bool value){self.bDoDOFOnReload = value ? 1 : 0;})
		.def_property("bViewPointDirty", [](AWillowPlayerController &self){return self.bViewPointDirty;}, [](AWillowPlayerController &self, bool value){self.bViewPointDirty = value ? 1 : 0;})
		.def_property("bFireDelay", [](AWillowPlayerController &self){return self.bFireDelay;}, [](AWillowPlayerController &self, bool value){self.bFireDelay = value ? 1 : 0;})
		.def_property("bEnableGamepadWalkRunMovement", [](AWillowPlayerController &self){return self.bEnableGamepadWalkRunMovement;}, [](AWillowPlayerController &self, bool value){self.bEnableGamepadWalkRunMovement = value ? 1 : 0;})
		.def_property("bKickSplitPlayerForInvite", [](AWillowPlayerController &self){return self.bKickSplitPlayerForInvite;}, [](AWillowPlayerController &self, bool value){self.bKickSplitPlayerForInvite = value ? 1 : 0;})
		.def_property("bSwappedControllerIdsForInvite", [](AWillowPlayerController &self){return self.bSwappedControllerIdsForInvite;}, [](AWillowPlayerController &self, bool value){self.bSwappedControllerIdsForInvite = value ? 1 : 0;})
		.def_property("bIsTargetingSomething", [](AWillowPlayerController &self){return self.bIsTargetingSomething;}, [](AWillowPlayerController &self, bool value){self.bIsTargetingSomething = value ? 1 : 0;})
		.def_property("bWaitingForSaveGameId", [](AWillowPlayerController &self){return self.bWaitingForSaveGameId;}, [](AWillowPlayerController &self, bool value){self.bWaitingForSaveGameId = value ? 1 : 0;})
		.def_property("bWantsToShowPauseMenu", [](AWillowPlayerController &self){return self.bWantsToShowPauseMenu;}, [](AWillowPlayerController &self, bool value){self.bWantsToShowPauseMenu = value ? 1 : 0;})
		.def_property("bWantsToSprint", [](AWillowPlayerController &self){return self.bWantsToSprint;}, [](AWillowPlayerController &self, bool value){self.bWantsToSprint = value ? 1 : 0;})
		.def_property("bClientIsSprinting", [](AWillowPlayerController &self){return self.bClientIsSprinting;}, [](AWillowPlayerController &self, bool value){self.bClientIsSprinting = value ? 1 : 0;})
		.def_property("bInSprintState", [](AWillowPlayerController &self){return self.bInSprintState;}, [](AWillowPlayerController &self, bool value){self.bInSprintState = value ? 1 : 0;})
		.def_property("bPressedSprint", [](AWillowPlayerController &self){return self.bPressedSprint;}, [](AWillowPlayerController &self, bool value){self.bPressedSprint = value ? 1 : 0;})
		.def_property("bSaveGameLoaded", [](AWillowPlayerController &self){return self.bSaveGameLoaded;}, [](AWillowPlayerController &self, bool value){self.bSaveGameLoaded = value ? 1 : 0;})
		.def_property("bAllowWeaponsRestriction", [](AWillowPlayerController &self){return self.bAllowWeaponsRestriction;}, [](AWillowPlayerController &self, bool value){self.bAllowWeaponsRestriction = value ? 1 : 0;})
		.def_property("bSaveBeforeInviteJoin", [](AWillowPlayerController &self){return self.bSaveBeforeInviteJoin;}, [](AWillowPlayerController &self, bool value){self.bSaveBeforeInviteJoin = value ? 1 : 0;})
		.def_property("bRemoveSplitPlayerAfterSave", [](AWillowPlayerController &self){return self.bRemoveSplitPlayerAfterSave;}, [](AWillowPlayerController &self, bool value){self.bRemoveSplitPlayerAfterSave = value ? 1 : 0;})
		.def_property("bCurrentEchoPSCDesiredVisibility", [](AWillowPlayerController &self){return self.bCurrentEchoPSCDesiredVisibility;}, [](AWillowPlayerController &self, bool value){self.bCurrentEchoPSCDesiredVisibility = value ? 1 : 0;})
		.def_property("bCanPlaySkidImpact", [](AWillowPlayerController &self){return self.bCanPlaySkidImpact;}, [](AWillowPlayerController &self, bool value){self.bCanPlaySkidImpact = value ? 1 : 0;})
		.def_property("bAwaitingPS3LoadGame", [](AWillowPlayerController &self){return self.bAwaitingPS3LoadGame;}, [](AWillowPlayerController &self, bool value){self.bAwaitingPS3LoadGame = value ? 1 : 0;})
		.def_property("bAwaitingPS3ImportGame", [](AWillowPlayerController &self){return self.bAwaitingPS3ImportGame;}, [](AWillowPlayerController &self, bool value){self.bAwaitingPS3ImportGame = value ? 1 : 0;})
		.def_property("bHasBeenTeleportedOnce", [](AWillowPlayerController &self){return self.bHasBeenTeleportedOnce;}, [](AWillowPlayerController &self, bool value){self.bHasBeenTeleportedOnce = value ? 1 : 0;})
		.def_property("bAwaitingRespawnDontSetCinematicMode", [](AWillowPlayerController &self){return self.bAwaitingRespawnDontSetCinematicMode;}, [](AWillowPlayerController &self, bool value){self.bAwaitingRespawnDontSetCinematicMode = value ? 1 : 0;})
		.def_property("bHideTeleportTunnel", [](AWillowPlayerController &self){return self.bHideTeleportTunnel;}, [](AWillowPlayerController &self, bool value){self.bHideTeleportTunnel = value ? 1 : 0;})
		.def_property("bReceivedDefaultWeapon", [](AWillowPlayerController &self){return self.bReceivedDefaultWeapon;}, [](AWillowPlayerController &self, bool value){self.bReceivedDefaultWeapon = value ? 1 : 0;})
		.def_property("bDisplayTradeIcon", [](AWillowPlayerController &self){return self.bDisplayTradeIcon;}, [](AWillowPlayerController &self, bool value){self.bDisplayTradeIcon = value ? 1 : 0;})
		.def_property("bDisplayTradeDisabledIcon", [](AWillowPlayerController &self){return self.bDisplayTradeDisabledIcon;}, [](AWillowPlayerController &self, bool value){self.bDisplayTradeDisabledIcon = value ? 1 : 0;})
		.def_property("bShowCoopRangeDebug", [](AWillowPlayerController &self){return self.bShowCoopRangeDebug;}, [](AWillowPlayerController &self, bool value){self.bShowCoopRangeDebug = value ? 1 : 0;})
		.def_property("bAutoAimEnabled", [](AWillowPlayerController &self){return self.bAutoAimEnabled;}, [](AWillowPlayerController &self, bool value){self.bAutoAimEnabled = value ? 1 : 0;})
		.def_property("bMouseAutoAimEnabled", [](AWillowPlayerController &self){return self.bMouseAutoAimEnabled;}, [](AWillowPlayerController &self, bool value){self.bMouseAutoAimEnabled = value ? 1 : 0;})
		.def_property("bShowingQuickSelectMenu", [](AWillowPlayerController &self){return self.bShowingQuickSelectMenu;}, [](AWillowPlayerController &self, bool value){self.bShowingQuickSelectMenu = value ? 1 : 0;})
		.def_property("bCrouchToggle", [](AWillowPlayerController &self){return self.bCrouchToggle;}, [](AWillowPlayerController &self, bool value){self.bCrouchToggle = value ? 1 : 0;})
		.def_property("bZoomToggle", [](AWillowPlayerController &self){return self.bZoomToggle;}, [](AWillowPlayerController &self, bool value){self.bZoomToggle = value ? 1 : 0;})
		.def_property("bUseDriftCameraLock", [](AWillowPlayerController &self){return self.bUseDriftCameraLock;}, [](AWillowPlayerController &self, bool value){self.bUseDriftCameraLock = value ? 1 : 0;})
		.def_property("bUseInvertedReverseSteering", [](AWillowPlayerController &self){return self.bUseInvertedReverseSteering;}, [](AWillowPlayerController &self, bool value){self.bUseInvertedReverseSteering = value ? 1 : 0;})
		.def_property("bTradingDisabled", [](AWillowPlayerController &self){return self.bTradingDisabled;}, [](AWillowPlayerController &self, bool value){self.bTradingDisabled = value ? 1 : 0;})
		.def_property("bItemRotationNew", [](AWillowPlayerController &self){return self.bItemRotationNew;}, [](AWillowPlayerController &self, bool value){self.bItemRotationNew = value ? 1 : 0;})
		.def_property("bGunzerkingAutoSwitch", [](AWillowPlayerController &self){return self.bGunzerkingAutoSwitch;}, [](AWillowPlayerController &self, bool value){self.bGunzerkingAutoSwitch = value ? 1 : 0;})
		.def_property("bStartFireZeroWasGunzerking", [](AWillowPlayerController &self){return self.bStartFireZeroWasGunzerking;}, [](AWillowPlayerController &self, bool value){self.bStartFireZeroWasGunzerking = value ? 1 : 0;})
		.def_property("bStartFireOneWasGunzerking", [](AWillowPlayerController &self){return self.bStartFireOneWasGunzerking;}, [](AWillowPlayerController &self, bool value){self.bStartFireOneWasGunzerking = value ? 1 : 0;})
		.def_property("bStartFireZeroBeforeGunzerking", [](AWillowPlayerController &self){return self.bStartFireZeroBeforeGunzerking;}, [](AWillowPlayerController &self, bool value){self.bStartFireZeroBeforeGunzerking = value ? 1 : 0;})
		.def_property("bAbsoluteMinimap", [](AWillowPlayerController &self){return self.bAbsoluteMinimap;}, [](AWillowPlayerController &self, bool value){self.bAbsoluteMinimap = value ? 1 : 0;})
		.def_property("bPreferVerticalSplit", [](AWillowPlayerController &self){return self.bPreferVerticalSplit;}, [](AWillowPlayerController &self, bool value){self.bPreferVerticalSplit = value ? 1 : 0;})
		.def_property("bDisableUISway", [](AWillowPlayerController &self){return self.bDisableUISway;}, [](AWillowPlayerController &self, bool value){self.bDisableUISway = value ? 1 : 0;})
		.def_property("bMissionWeaponHelpContextualPromptEnabled", [](AWillowPlayerController &self){return self.bMissionWeaponHelpContextualPromptEnabled;}, [](AWillowPlayerController &self, bool value){self.bMissionWeaponHelpContextualPromptEnabled = value ? 1 : 0;})
		.def_property("bShowUndiscoveredMissions", [](AWillowPlayerController &self){return self.bShowUndiscoveredMissions;}, [](AWillowPlayerController &self, bool value){self.bShowUndiscoveredMissions = value ? 1 : 0;})
		.def_property("bResurrectAll", [](AWillowPlayerController &self){return self.bResurrectAll;}, [](AWillowPlayerController &self, bool value){self.bResurrectAll = value ? 1 : 0;})
		.def_property("bDisplayedCancel", [](AWillowPlayerController &self){return self.bDisplayedCancel;}, [](AWillowPlayerController &self, bool value){self.bDisplayedCancel = value ? 1 : 0;})
		.def_property("bResultsScreenOpen", [](AWillowPlayerController &self){return self.bResultsScreenOpen;}, [](AWillowPlayerController &self, bool value){self.bResultsScreenOpen = value ? 1 : 0;})
		.def_property("bShowDelayedRewardForAllMissions", [](AWillowPlayerController &self){return self.bShowDelayedRewardForAllMissions;}, [](AWillowPlayerController &self, bool value){self.bShowDelayedRewardForAllMissions = value ? 1 : 0;})
		.def_property("bSuppressCoopLevelUpDing", [](AWillowPlayerController &self){return self.bSuppressCoopLevelUpDing;}, [](AWillowPlayerController &self, bool value){self.bSuppressCoopLevelUpDing = value ? 1 : 0;})
		.def_property("bUseRealTimeForWeaponZoom", [](AWillowPlayerController &self){return self.bUseRealTimeForWeaponZoom;}, [](AWillowPlayerController &self, bool value){self.bUseRealTimeForWeaponZoom = value ? 1 : 0;})
		.def_property("bAllowPerShotForceFeedback", [](AWillowPlayerController &self){return self.bAllowPerShotForceFeedback;}, [](AWillowPlayerController &self, bool value){self.bAllowPerShotForceFeedback = value ? 1 : 0;})
		.def_property("bHardcoreCharacter", [](AWillowPlayerController &self){return self.bHardcoreCharacter;}, [](AWillowPlayerController &self, bool value){self.bHardcoreCharacter = value ? 1 : 0;})
		.def_property("bAwaitingFastForwardPrompt", [](AWillowPlayerController &self){return self.bAwaitingFastForwardPrompt;}, [](AWillowPlayerController &self, bool value){self.bAwaitingFastForwardPrompt = value ? 1 : 0;})
		.def_property("bWantsToDisableLoadingMovie", [](AWillowPlayerController &self){return self.bWantsToDisableLoadingMovie;}, [](AWillowPlayerController &self, bool value){self.bWantsToDisableLoadingMovie = value ? 1 : 0;})
		.def_property("bPlayingTeleporterSound", [](AWillowPlayerController &self){return self.bPlayingTeleporterSound;}, [](AWillowPlayerController &self, bool value){self.bPlayingTeleporterSound = value ? 1 : 0;})
		.def_property("bLastLoadPlayer", [](AWillowPlayerController &self){return self.bLastLoadPlayer;}, [](AWillowPlayerController &self, bool value){self.bLastLoadPlayer = value ? 1 : 0;})
		.def_property("bLastUpdatePRI", [](AWillowPlayerController &self){return self.bLastUpdatePRI;}, [](AWillowPlayerController &self, bool value){self.bLastUpdatePRI = value ? 1 : 0;})
		.def_property("bWaitingForAsyncCharacterLoad", [](AWillowPlayerController &self){return self.bWaitingForAsyncCharacterLoad;}, [](AWillowPlayerController &self, bool value){self.bWaitingForAsyncCharacterLoad = value ? 1 : 0;})
		.def_property("bReturningToMenu", [](AWillowPlayerController &self){return self.bReturningToMenu;}, [](AWillowPlayerController &self, bool value){self.bReturningToMenu = value ? 1 : 0;})
		.def_property("bCustomizationUnlocksInitialized", [](AWillowPlayerController &self){return self.bCustomizationUnlocksInitialized;}, [](AWillowPlayerController &self, bool value){self.bCustomizationUnlocksInitialized = value ? 1 : 0;})
		.def_property("bAsyncInProgress", [](AWillowPlayerController &self){return self.bAsyncInProgress;}, [](AWillowPlayerController &self, bool value){self.bAsyncInProgress = value ? 1 : 0;})
		.def_property("bHostLanGame", [](AWillowPlayerController &self){return self.bHostLanGame;}, [](AWillowPlayerController &self, bool value){self.bHostLanGame = value ? 1 : 0;})
		.def_property("bUserNetworkOperation", [](AWillowPlayerController &self){return self.bUserNetworkOperation;}, [](AWillowPlayerController &self, bool value){self.bUserNetworkOperation = value ? 1 : 0;})
		.def_property("bRestoringNetwork", [](AWillowPlayerController &self){return self.bRestoringNetwork;}, [](AWillowPlayerController &self, bool value){self.bRestoringNetwork = value ? 1 : 0;})
		.def_property("bNonBlockingRestore", [](AWillowPlayerController &self){return self.bNonBlockingRestore;}, [](AWillowPlayerController &self, bool value){self.bNonBlockingRestore = value ? 1 : 0;})
		.def_property("bEnteredEasterEggCode", [](AWillowPlayerController &self){return self.bEnteredEasterEggCode;}, [](AWillowPlayerController &self, bool value){self.bEnteredEasterEggCode = value ? 1 : 0;})
		.def_property("bEnabledEasterEggOption", [](AWillowPlayerController &self){return self.bEnabledEasterEggOption;}, [](AWillowPlayerController &self, bool value){self.bEnabledEasterEggOption = value ? 1 : 0;})
		.def_property("bConsumeSparkGoldenKeyAfterProfileWrite", [](AWillowPlayerController &self){return self.bConsumeSparkGoldenKeyAfterProfileWrite;}, [](AWillowPlayerController &self, bool value){self.bConsumeSparkGoldenKeyAfterProfileWrite = value ? 1 : 0;})
		.def_property("bHasSeenGoldenKeyMessageThisSession", [](AWillowPlayerController &self){return self.bHasSeenGoldenKeyMessageThisSession;}, [](AWillowPlayerController &self, bool value){self.bHasSeenGoldenKeyMessageThisSession = value ? 1 : 0;})
		.def_property("bShowNewPlaythroughNotification", [](AWillowPlayerController &self){return self.bShowNewPlaythroughNotification;}, [](AWillowPlayerController &self, bool value){self.bShowNewPlaythroughNotification = value ? 1 : 0;})
		.def_property("bShowAlmostNewPlaythroughNotification", [](AWillowPlayerController &self){return self.bShowAlmostNewPlaythroughNotification;}, [](AWillowPlayerController &self, bool value){self.bShowAlmostNewPlaythroughNotification = value ? 1 : 0;})
		.def_property("bAwesomeSkillDisabled", [](AWillowPlayerController &self){return self.bAwesomeSkillDisabled;}, [](AWillowPlayerController &self, bool value){self.bAwesomeSkillDisabled = value ? 1 : 0;})
		.def_property("bWriteProfileNextTick", [](AWillowPlayerController &self){return self.bWriteProfileNextTick;}, [](AWillowPlayerController &self, bool value){self.bWriteProfileNextTick = value ? 1 : 0;})
		.def_property("bUpdateOnlineGameSettingsNextTick", [](AWillowPlayerController &self){return self.bUpdateOnlineGameSettingsNextTick;}, [](AWillowPlayerController &self, bool value){self.bUpdateOnlineGameSettingsNextTick = value ? 1 : 0;})
		.def_property("bUpdatingOnlineGameSettings", [](AWillowPlayerController &self){return self.bUpdatingOnlineGameSettings;}, [](AWillowPlayerController &self, bool value){self.bUpdatingOnlineGameSettings = value ? 1 : 0;})
		.def_property("bSetOnlineStatusNextTick", [](AWillowPlayerController &self){return self.bSetOnlineStatusNextTick;}, [](AWillowPlayerController &self, bool value){self.bSetOnlineStatusNextTick = value ? 1 : 0;})
		.def_property("bDownloadingPatcherFiles", [](AWillowPlayerController &self){return self.bDownloadingPatcherFiles;}, [](AWillowPlayerController &self, bool value){self.bDownloadingPatcherFiles = value ? 1 : 0;})
		.def_property("bBoundaryWarningEnabled", [](AWillowPlayerController &self){return self.bBoundaryWarningEnabled;}, [](AWillowPlayerController &self, bool value){self.bBoundaryWarningEnabled = value ? 1 : 0;})
		.def_property("bCloseHUDNextTick", [](AWillowPlayerController &self){return self.bCloseHUDNextTick;}, [](AWillowPlayerController &self, bool value){self.bCloseHUDNextTick = value ? 1 : 0;})
		.def_property("bTextureMovieIsPaused", [](AWillowPlayerController &self){return self.bTextureMovieIsPaused;}, [](AWillowPlayerController &self, bool value){self.bTextureMovieIsPaused = value ? 1 : 0;})
		.def_property("bStopgapBlockForDeferredMovies", [](AWillowPlayerController &self){return self.bStopgapBlockForDeferredMovies;}, [](AWillowPlayerController &self, bool value){self.bStopgapBlockForDeferredMovies = value ? 1 : 0;})
		.def_property("OverpowerChoiceValuePendingSave", [](AWillowPlayerController &self){return self.OverpowerChoiceValuePendingSave;}, [](AWillowPlayerController &self, bool value){self.OverpowerChoiceValuePendingSave = value ? 1 : 0;})
		.def_readwrite("VfTable_IIUpdatePostProcessOverride", &AWillowPlayerController::VfTable_IIUpdatePostProcessOverride, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIControllerLocator", &AWillowPlayerController::VfTable_IIControllerLocator, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIPlayerBehavior", &AWillowPlayerController::VfTable_IIPlayerBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIPlayerMaster", &AWillowPlayerController::VfTable_IIPlayerMaster, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIScreenParticle", &AWillowPlayerController::VfTable_IIScreenParticle, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIResourcePoolOwner", &AWillowPlayerController::VfTable_IIResourcePoolOwner, py::return_value_policy::reference)
		.def_readwrite("VfTable_IISkillTreeListener", &AWillowPlayerController::VfTable_IISkillTreeListener, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIFlagProvider", &AWillowPlayerController::VfTable_IIFlagProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIStreamingDataEvent", &AWillowPlayerController::VfTable_IIStreamingDataEvent, py::return_value_policy::reference)
		.def_readwrite("VfTable_FCallbackEventDevice", &AWillowPlayerController::VfTable_FCallbackEventDevice, py::return_value_policy::reference)
		.def_readwrite("QuickSaveFileName", &AWillowPlayerController::QuickSaveFileName, py::return_value_policy::reference)
		.def_readwrite("SaveGameFilePrefix", &AWillowPlayerController::SaveGameFilePrefix, py::return_value_policy::reference)
		.def_readwrite("GraveyardFileName", &AWillowPlayerController::GraveyardFileName, py::return_value_policy::reference)
		.def_readwrite("SparkStatFlushIntervalSeconds", &AWillowPlayerController::SparkStatFlushIntervalSeconds)
		.def_readwrite("PlayerLocationSparkPulseIntervalSeconds", &AWillowPlayerController::PlayerLocationSparkPulseIntervalSeconds)
		.def_readwrite("WeaponHandPreference", &AWillowPlayerController::WeaponHandPreference)
		.def_readwrite("WeaponHand", &AWillowPlayerController::WeaponHand)
		.def_readwrite("PendingTransactionStatus", &AWillowPlayerController::PendingTransactionStatus)
		.def_readwrite("NextResistedAttackEventIndex", &AWillowPlayerController::NextResistedAttackEventIndex)
		.def_readwrite("OldestResistedAttackEventIndex", &AWillowPlayerController::OldestResistedAttackEventIndex)
		.def_readwrite("ActiveWeaponSlot", &AWillowPlayerController::ActiveWeaponSlot)
		.def_readwrite("OffHandWeaponSlot", &AWillowPlayerController::OffHandWeaponSlot)
		.def_readwrite("LastActiveStatusMenuScreen", &AWillowPlayerController::LastActiveStatusMenuScreen)
		.def_readwrite("QuickAccessScreen", &AWillowPlayerController::QuickAccessScreen)
		.def_readwrite("ContextualPromptScreen", &AWillowPlayerController::ContextualPromptScreen)
		.def_readwrite("RetryPromptScreen", &AWillowPlayerController::RetryPromptScreen)
		.def_readwrite("LastMissionSortType", &AWillowPlayerController::LastMissionSortType)
		.def_readwrite("CurrentOnlineMessageType", &AWillowPlayerController::CurrentOnlineMessageType)
		.def_readwrite("HealthStatAccumulator", &AWillowPlayerController::HealthStatAccumulator)
		.def_readwrite("HLQPlayerMoveTime", &AWillowPlayerController::HLQPlayerMoveTime)
		.def_readwrite("FirstPersonAkSwitch", &AWillowPlayerController::FirstPersonAkSwitch, py::return_value_policy::reference)
		.def_readwrite("ThirdPersonAkSwitch", &AWillowPlayerController::ThirdPersonAkSwitch, py::return_value_policy::reference)
		.def_readwrite("AutoAimStrategy", &AWillowPlayerController::AutoAimStrategy, py::return_value_policy::reference)
		.def_readwrite("LastCameraTimeStamp", &AWillowPlayerController::LastCameraTimeStamp)
		.def_readwrite("MatineeCameraClass", &AWillowPlayerController::MatineeCameraClass, py::return_value_policy::reference)
		.def_readwrite("CalcViewActor", &AWillowPlayerController::CalcViewActor, py::return_value_policy::reference)
		.def_readwrite("CalcViewPawn", &AWillowPlayerController::CalcViewPawn, py::return_value_policy::reference)
		.def_readwrite("CalcViewActorLocation", &AWillowPlayerController::CalcViewActorLocation, py::return_value_policy::reference)
		.def_readwrite("CalcViewPawnEyeHeight", &AWillowPlayerController::CalcViewPawnEyeHeight)
		.def_readwrite("CalcViewLocation", &AWillowPlayerController::CalcViewLocation, py::return_value_policy::reference)
		.def_readwrite("CalcViewRotation", &AWillowPlayerController::CalcViewRotation, py::return_value_policy::reference)
		.def_readwrite("CameraRotFixedView", &AWillowPlayerController::CameraRotFixedView, py::return_value_policy::reference)
		.def_readwrite("LastVehicleSeatIndex", &AWillowPlayerController::LastVehicleSeatIndex)
		.def_readwrite("LastVehicleFOV", &AWillowPlayerController::LastVehicleFOV)
		.def_readwrite("CameraAnimPlayer", &AWillowPlayerController::CameraAnimPlayer, py::return_value_policy::reference)
		.def_readwrite("CameraAnimSeqPlayer", &AWillowPlayerController::CameraAnimSeqPlayer, py::return_value_policy::reference)
		.def_readwrite("CameraAnimOffset", &AWillowPlayerController::CameraAnimOffset, py::return_value_policy::reference)
		.def_readwrite("CameraAnimRot", &AWillowPlayerController::CameraAnimRot, py::return_value_policy::reference)
		.def_readwrite("MyWillowPawn", &AWillowPlayerController::MyWillowPawn, py::return_value_policy::reference)
		.def_readwrite("DefaultPlayerCharacterClassName", &AWillowPlayerController::DefaultPlayerCharacterClassName, py::return_value_policy::reference)
		.def_readwrite("PlayerClass", &AWillowPlayerController::PlayerClass, py::return_value_policy::reference)
		.def_readwrite("ExpPool", &AWillowPlayerController::ExpPool, py::return_value_policy::reference)
		.def_readwrite("SkillCooldownPool", &AWillowPlayerController::SkillCooldownPool, py::return_value_policy::reference)
		.def_readwrite("MeleeSkillCooldownPool", &AWillowPlayerController::MeleeSkillCooldownPool, py::return_value_policy::reference)
		.def_readwrite("PlayerSkillTree", &AWillowPlayerController::PlayerSkillTree, py::return_value_policy::reference)
		.def_readwrite("InteractionClient", &AWillowPlayerController::InteractionClient, py::return_value_policy::reference)
		.def_readwrite("CurrentInstantHitCriticalHitBonus", &AWillowPlayerController::CurrentInstantHitCriticalHitBonus)
		.def_readwrite("CurrentInstantHitCriticalHitBonusBaseValue", &AWillowPlayerController::CurrentInstantHitCriticalHitBonusBaseValue)
		.def_readwrite("CurrentInstantHitCriticalHitBonusModifierStack", &AWillowPlayerController::CurrentInstantHitCriticalHitBonusModifierStack, py::return_value_policy::reference)
		.def_readwrite("CurrentMeleeCriticalHitBonus", &AWillowPlayerController::CurrentMeleeCriticalHitBonus)
		.def_readwrite("CurrentMeleeCriticalHitBonusBaseValue", &AWillowPlayerController::CurrentMeleeCriticalHitBonusBaseValue)
		.def_readwrite("CurrentMeleeCriticalHitBonusModifierStack", &AWillowPlayerController::CurrentMeleeCriticalHitBonusModifierStack, py::return_value_policy::reference)
		.def_readwrite("ExpScaleForCriticalHitKills", &AWillowPlayerController::ExpScaleForCriticalHitKills)
		.def_readwrite("ExpScaleForCriticalHitKillsBaseValue", &AWillowPlayerController::ExpScaleForCriticalHitKillsBaseValue)
		.def_readwrite("ExpScaleForCriticalHitKillsModifierStack", &AWillowPlayerController::ExpScaleForCriticalHitKillsModifierStack, py::return_value_policy::reference)
		.def_readwrite("AttackUnsuspectingTargetDamageModifier", &AWillowPlayerController::AttackUnsuspectingTargetDamageModifier)
		.def_readwrite("AttackUnsuspectingTargetDamageModifierBaseValue", &AWillowPlayerController::AttackUnsuspectingTargetDamageModifierBaseValue)
		.def_readwrite("AttackUnsuspectingTargetDamageModifierModifierStack", &AWillowPlayerController::AttackUnsuspectingTargetDamageModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("MeleeAttackTargetFromBehindDamageModifier", &AWillowPlayerController::MeleeAttackTargetFromBehindDamageModifier)
		.def_readwrite("MeleeAttackTargetFromBehindDamageModifierBaseValue", &AWillowPlayerController::MeleeAttackTargetFromBehindDamageModifierBaseValue)
		.def_readwrite("MeleeAttackTargetFromBehindDamageModifierModifierStack", &AWillowPlayerController::MeleeAttackTargetFromBehindDamageModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("AttackInjuredMeleeDamageModifier", &AWillowPlayerController::AttackInjuredMeleeDamageModifier)
		.def_readwrite("AttackInjuredMeleeDamageModifierBaseValue", &AWillowPlayerController::AttackInjuredMeleeDamageModifierBaseValue)
		.def_readwrite("AttackInjuredMeleeDamageModifierModifierStack", &AWillowPlayerController::AttackInjuredMeleeDamageModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("ConvertDamageToHealingPercent", &AWillowPlayerController::ConvertDamageToHealingPercent)
		.def_readwrite("ConvertDamageToHealingPercentBaseValue", &AWillowPlayerController::ConvertDamageToHealingPercentBaseValue)
		.def_readwrite("ConvertDamageToHealingPercentModifierStack", &AWillowPlayerController::ConvertDamageToHealingPercentModifierStack, py::return_value_policy::reference)
		.def_readwrite("PendingHealAmount", &AWillowPlayerController::PendingHealAmount)
		.def_readwrite("TargetMinHealthDamageBoostPercent", &AWillowPlayerController::TargetMinHealthDamageBoostPercent)
		.def_readwrite("TargetMinHealthDamageBoostPercentBaseValue", &AWillowPlayerController::TargetMinHealthDamageBoostPercentBaseValue)
		.def_readwrite("TargetMinHealthDamageBoostPercentModifierStack", &AWillowPlayerController::TargetMinHealthDamageBoostPercentModifierStack, py::return_value_policy::reference)
		.def_readwrite("TargetOverMinHealthGunDamageMultiplier", &AWillowPlayerController::TargetOverMinHealthGunDamageMultiplier)
		.def_readwrite("TargetOverMinHealthGunDamageMultiplierBaseValue", &AWillowPlayerController::TargetOverMinHealthGunDamageMultiplierBaseValue)
		.def_readwrite("TargetOverMinHealthGunDamageMultiplierModifierStack", &AWillowPlayerController::TargetOverMinHealthGunDamageMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("DamageReturnPercent", &AWillowPlayerController::DamageReturnPercent)
		.def_readwrite("DamageReturnPercentBaseValue", &AWillowPlayerController::DamageReturnPercentBaseValue)
		.def_readwrite("DamageReturnPercentModifierStack", &AWillowPlayerController::DamageReturnPercentModifierStack, py::return_value_policy::reference)
		.def_readwrite("FirstShotInClipBonusModifier", &AWillowPlayerController::FirstShotInClipBonusModifier)
		.def_readwrite("FirstShotInClipBonusModifierBaseValue", &AWillowPlayerController::FirstShotInClipBonusModifierBaseValue)
		.def_readwrite("FirstShotInClipBonusModifierModifierStack", &AWillowPlayerController::FirstShotInClipBonusModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("LastShotInClipBonusModifier", &AWillowPlayerController::LastShotInClipBonusModifier)
		.def_readwrite("LastShotInClipBonusModifierBaseValue", &AWillowPlayerController::LastShotInClipBonusModifierBaseValue)
		.def_readwrite("LastShotInClipBonusModifierModifierStack", &AWillowPlayerController::LastShotInClipBonusModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("CurrentTouchedPickupable", &AWillowPlayerController::CurrentTouchedPickupable, py::return_value_policy::reference)
		.def_readwrite("CurrentSeenPickupable", &AWillowPlayerController::CurrentSeenPickupable, py::return_value_policy::reference)
		.def_readwrite("CurrentUsableObject", &AWillowPlayerController::CurrentUsableObject, py::return_value_policy::reference)
		.def_readwrite("ActiveShop", &AWillowPlayerController::ActiveShop, py::return_value_policy::reference)
		.def_readwrite("FocusObject", &AWillowPlayerController::FocusObject, py::return_value_policy::reference)
		.def_readwrite("FocusFOVAngle", &AWillowPlayerController::FocusFOVAngle)
		.def_readwrite("FocusCamReturnTime", &AWillowPlayerController::FocusCamReturnTime)
		.def_readwrite("FocusCamRot", &AWillowPlayerController::FocusCamRot, py::return_value_policy::reference)
		.def_readwrite("FocusCamLoc", &AWillowPlayerController::FocusCamLoc, py::return_value_policy::reference)
		.def_readwrite("FocusCamTimestamp", &AWillowPlayerController::FocusCamTimestamp)
		.def_readwrite("LastTauntAnimTime", &AWillowPlayerController::LastTauntAnimTime)
		.def_readwrite("SummedDamageDirection", &AWillowPlayerController::SummedDamageDirection, py::return_value_policy::reference)
		.def_readwrite("DebugTraceHitActor", &AWillowPlayerController::DebugTraceHitActor, py::return_value_policy::reference)
		.def_readwrite("DebugTraceHitActorSubLevel", &AWillowPlayerController::DebugTraceHitActorSubLevel, py::return_value_policy::reference)
		.def_readwrite("DebugTraceDistanceUnits", &AWillowPlayerController::DebugTraceDistanceUnits)
		.def_readwrite("MainMenu_MapName", &AWillowPlayerController::MainMenu_MapName, py::return_value_policy::reference)
		.def_readwrite("MainMenu_NumPlayers", &AWillowPlayerController::MainMenu_NumPlayers)
		.def_readwrite("MainMenu_CurrentPlayer", &AWillowPlayerController::MainMenu_CurrentPlayer)
		.def_readwrite("SplitscreenJoinCompleteDelegates", &AWillowPlayerController::SplitscreenJoinCompleteDelegates, py::return_value_policy::reference)
		.def_readwrite("QueuedTrainingMessages", &AWillowPlayerController::QueuedTrainingMessages, py::return_value_policy::reference)
		.def_readwrite("PendingQueuedTrainingMessages", &AWillowPlayerController::PendingQueuedTrainingMessages, py::return_value_policy::reference)
		.def_readwrite("LastTrainingMessagePostponeTime", &AWillowPlayerController::LastTrainingMessagePostponeTime)
		.def_readwrite("FOVModifierSpeed", &AWillowPlayerController::FOVModifierSpeed)
		.def_readwrite("FOVModifierSpeedBaseValue", &AWillowPlayerController::FOVModifierSpeedBaseValue)
		.def_readwrite("FOVModifierSpeedModifierStack", &AWillowPlayerController::FOVModifierSpeedModifierStack, py::return_value_policy::reference)
		.def_readwrite("CachedFOVAngle", &AWillowPlayerController::CachedFOVAngle)
		.def_readwrite("LastFOVAngleUpdateTime", &AWillowPlayerController::LastFOVAngleUpdateTime)
		.def_readwrite("FOVAspectRatioScalar_View", &AWillowPlayerController::FOVAspectRatioScalar_View)
		.def_readwrite("FOVAspectRatioScalar_Fore", &AWillowPlayerController::FOVAspectRatioScalar_Fore)
		.def_readwrite("FOVScalar_VertSplit_View", &AWillowPlayerController::FOVScalar_VertSplit_View)
		.def_readwrite("FOVScalar_VertSplit_Fore", &AWillowPlayerController::FOVScalar_VertSplit_Fore)
		.def_readwrite("FOVScalar_HorzSplit_View", &AWillowPlayerController::FOVScalar_HorzSplit_View)
		.def_readwrite("FOVScalar_HorzSplit_Fore", &AWillowPlayerController::FOVScalar_HorzSplit_Fore)
		.def_readwrite("WillowAIDebugCam", &AWillowPlayerController::WillowAIDebugCam, py::return_value_policy::reference)
		.def_readwrite("PainRot", &AWillowPlayerController::PainRot, py::return_value_policy::reference)
		.def_readwrite("DesiredPainRot", &AWillowPlayerController::DesiredPainRot, py::return_value_policy::reference)
		.def_readwrite("PainOffset", &AWillowPlayerController::PainOffset, py::return_value_policy::reference)
		.def_readwrite("DesiredPainOffset", &AWillowPlayerController::DesiredPainOffset, py::return_value_policy::reference)
		.def_readwrite("PainFOV", &AWillowPlayerController::PainFOV)
		.def_readwrite("DesiredPainFOV", &AWillowPlayerController::DesiredPainFOV)
		.def_readwrite("PainEndTime", &AWillowPlayerController::PainEndTime)
		.def_readwrite("LastPawn", &AWillowPlayerController::LastPawn, py::return_value_policy::reference)
		.def_readwrite("PostProcessOverlayList", &AWillowPlayerController::PostProcessOverlayList, py::return_value_policy::reference)
		.def_readwrite("PostProcessDurationMultiplier", &AWillowPlayerController::PostProcessDurationMultiplier)
		.def_readwrite("LastLevelUpTime", &AWillowPlayerController::LastLevelUpTime)
		.def_readwrite("LastLevelUpSoundTime", &AWillowPlayerController::LastLevelUpSoundTime)
		.def_readwrite("LastProjectileDefinition", &AWillowPlayerController::LastProjectileDefinition, py::return_value_policy::reference)
		.def_readwrite("TargetVerticalKickAmt", &AWillowPlayerController::TargetVerticalKickAmt)
		.def_readwrite("CurrentVerticalKickAmt", &AWillowPlayerController::CurrentVerticalKickAmt)
		.def_readwrite("TargetHorizontalKickAmt", &AWillowPlayerController::TargetHorizontalKickAmt)
		.def_readwrite("CurrentHorizontalKickAmt", &AWillowPlayerController::CurrentHorizontalKickAmt)
		.def_readwrite("LastWeaponKickTime", &AWillowPlayerController::LastWeaponKickTime)
		.def_readwrite("CurrentWanderAccuracy", &AWillowPlayerController::CurrentWanderAccuracy)
		.def_readwrite("WanderingPatternOscillatorPosition", &AWillowPlayerController::WanderingPatternOscillatorPosition)
		.def_readwrite("WanderingSmoothInDuration", &AWillowPlayerController::WanderingSmoothInDuration)
		.def_readwrite("WanderingSmoothInTimeRemaining", &AWillowPlayerController::WanderingSmoothInTimeRemaining)
		.def_readwrite("LastWanderingTime", &AWillowPlayerController::LastWanderingTime)
		.def_readwrite("UberDOFEffect", &AWillowPlayerController::UberDOFEffect, py::return_value_policy::reference)
		.def_readwrite("InitialDOFFocusDistance", &AWillowPlayerController::InitialDOFFocusDistance)
		.def_readwrite("PostProcessChainRecords", &AWillowPlayerController::PostProcessChainRecords, py::return_value_policy::reference)
		.def_readwrite("LostShieldHealthParamName", &AWillowPlayerController::LostShieldHealthParamName, py::return_value_policy::reference)
		.def_readwrite("LostShieldMaterialInstanceConstant", &AWillowPlayerController::LostShieldMaterialInstanceConstant, py::return_value_policy::reference)
		.def_readwrite("RcpWeaponSpread", &AWillowPlayerController::RcpWeaponSpread)
		.def_readwrite("CurrentWeaponAmmoRegenerationMultiplier", &AWillowPlayerController::CurrentWeaponAmmoRegenerationMultiplier)
		.def_readwrite("CurrentWeaponAmmoRegenerationMultiplierBaseValue", &AWillowPlayerController::CurrentWeaponAmmoRegenerationMultiplierBaseValue)
		.def_readwrite("CurrentWeaponAmmoRegenerationMultiplierModifierStack", &AWillowPlayerController::CurrentWeaponAmmoRegenerationMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("PlayerMovementType", &AWillowPlayerController::PlayerMovementType)
		.def_readwrite("PlayerStats", &AWillowPlayerController::PlayerStats, py::return_value_policy::reference)
		.def_readwrite("InstanceState", &AWillowPlayerController::InstanceState, py::return_value_policy::reference)
		.def_readwrite("SavedInviteControllerId", &AWillowPlayerController::SavedInviteControllerId)
		.def_readwrite("SavedInviteSearchResult", &AWillowPlayerController::SavedInviteSearchResult, py::return_value_policy::reference)
		.def_readwrite("CurrentActionSkillTarget", &AWillowPlayerController::CurrentActionSkillTarget, py::return_value_policy::reference)
		.def_readwrite("InputContextSelector", &AWillowPlayerController::InputContextSelector, py::return_value_policy::reference)
		.def_readwrite("ScorpioDamageTypeSelector", &AWillowPlayerController::ScorpioDamageTypeSelector)
		.def_readwrite("ScorpioDamageTypeSelectorBaseValue", &AWillowPlayerController::ScorpioDamageTypeSelectorBaseValue)
		.def_readwrite("ScorpioDamageTypeSelectorModifierStack", &AWillowPlayerController::ScorpioDamageTypeSelectorModifierStack, py::return_value_policy::reference)
		.def_readwrite("SaveGameName", &AWillowPlayerController::SaveGameName, py::return_value_policy::reference)
		.def_readwrite("SaveGameFileId", &AWillowPlayerController::SaveGameFileId)
		.def_readwrite("LastStationSaveTime", &AWillowPlayerController::LastStationSaveTime)
		.def_readwrite("RecentKillHistory", &AWillowPlayerController::RecentKillHistory, py::return_value_policy::reference)
		.def_readwrite("CurrKillingSpree", &AWillowPlayerController::CurrKillingSpree)
		.def_readwrite("ProfileMenuDlg", &AWillowPlayerController::ProfileMenuDlg, py::return_value_policy::reference)
		.def_readwrite("LastUsedWeapon", &AWillowPlayerController::LastUsedWeapon, py::return_value_policy::reference)
		.def_readwrite("LoadedCharPlayTime", &AWillowPlayerController::LoadedCharPlayTime)
		.def_readwrite("LastLoadedSaveGame", &AWillowPlayerController::LastLoadedSaveGame, py::return_value_policy::reference)
		.def_readwrite("SaveStartTime", &AWillowPlayerController::SaveStartTime)
		.def_readwrite("PlayersToSave", &AWillowPlayerController::PlayersToSave, py::return_value_policy::reference)
		.def_readwrite("MinSaveDuration", &AWillowPlayerController::MinSaveDuration)
		.def_readwrite("SavingDlg", &AWillowPlayerController::SavingDlg, py::return_value_policy::reference)
		.def_readwrite("PS3WritingProfileDlg", &AWillowPlayerController::PS3WritingProfileDlg, py::return_value_policy::reference)
		.def_readwrite("ControllerRemovedDlg", &AWillowPlayerController::ControllerRemovedDlg, py::return_value_policy::reference)
		.def_readwrite("LoadedLevelsList", &AWillowPlayerController::LoadedLevelsList, py::return_value_policy::reference)
		.def_readwrite("KillSkillTimeRemaining", &AWillowPlayerController::KillSkillTimeRemaining)
		.def_readwrite("DurationOfLastKillSkillActivation", &AWillowPlayerController::DurationOfLastKillSkillActivation)
		.def_readwrite("PickupsHiddenWhileInStatusMenu", &AWillowPlayerController::PickupsHiddenWhileInStatusMenu, py::return_value_policy::reference)
		.def_readwrite("CurrentEchoActor", &AWillowPlayerController::CurrentEchoActor, py::return_value_policy::reference)
		.def_readwrite("CurrentEchoEmote", &AWillowPlayerController::CurrentEchoEmote, py::return_value_policy::reference)
		.def_readwrite("CurrentEchoMovie", &AWillowPlayerController::CurrentEchoMovie, py::return_value_policy::reference)
		.def_readwrite("CurrentEchoParticleSystem", &AWillowPlayerController::CurrentEchoParticleSystem, py::return_value_policy::reference)
		.def_readwrite("CurrentEchoPSC", &AWillowPlayerController::CurrentEchoPSC, py::return_value_policy::reference)
		.def_readwrite("CurrentEchoPSCFadeStartTime", &AWillowPlayerController::CurrentEchoPSCFadeStartTime)
		.def_readwrite("CurrentEchoVideoMovie", &AWillowPlayerController::CurrentEchoVideoMovie, py::return_value_policy::reference)
		.def_readwrite("CurrentEchoOpacity", &AWillowPlayerController::CurrentEchoOpacity)
		.def_readwrite("EchoPSCFadeTime", &AWillowPlayerController::EchoPSCFadeTime)
		.def_readwrite("MeleeHealthStealPercent", &AWillowPlayerController::MeleeHealthStealPercent)
		.def_readwrite("MeleeHealthStealPercentBaseValue", &AWillowPlayerController::MeleeHealthStealPercentBaseValue)
		.def_readwrite("MeleeHealthStealPercentModifierStack", &AWillowPlayerController::MeleeHealthStealPercentModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedBulletHealingModifier", &AWillowPlayerController::InstigatedBulletHealingModifier)
		.def_readwrite("InstigatedBulletHealingModifierBaseValue", &AWillowPlayerController::InstigatedBulletHealingModifierBaseValue)
		.def_readwrite("InstigatedBulletHealingModifierModifierStack", &AWillowPlayerController::InstigatedBulletHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedMeleeHealingModifier", &AWillowPlayerController::InstigatedMeleeHealingModifier)
		.def_readwrite("InstigatedMeleeHealingModifierBaseValue", &AWillowPlayerController::InstigatedMeleeHealingModifierBaseValue)
		.def_readwrite("InstigatedMeleeHealingModifierModifierStack", &AWillowPlayerController::InstigatedMeleeHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedGrenadeHealingModifier", &AWillowPlayerController::InstigatedGrenadeHealingModifier)
		.def_readwrite("InstigatedGrenadeHealingModifierBaseValue", &AWillowPlayerController::InstigatedGrenadeHealingModifierBaseValue)
		.def_readwrite("InstigatedGrenadeHealingModifierModifierStack", &AWillowPlayerController::InstigatedGrenadeHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedRocketHealingModifier", &AWillowPlayerController::InstigatedRocketHealingModifier)
		.def_readwrite("InstigatedRocketHealingModifierBaseValue", &AWillowPlayerController::InstigatedRocketHealingModifierBaseValue)
		.def_readwrite("InstigatedRocketHealingModifierModifierStack", &AWillowPlayerController::InstigatedRocketHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedStatusEffectHealingModifier", &AWillowPlayerController::InstigatedStatusEffectHealingModifier)
		.def_readwrite("InstigatedStatusEffectHealingModifierBaseValue", &AWillowPlayerController::InstigatedStatusEffectHealingModifierBaseValue)
		.def_readwrite("InstigatedStatusEffectHealingModifierModifierStack", &AWillowPlayerController::InstigatedStatusEffectHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedSkillHealingModifier", &AWillowPlayerController::InstigatedSkillHealingModifier)
		.def_readwrite("InstigatedSkillHealingModifierBaseValue", &AWillowPlayerController::InstigatedSkillHealingModifierBaseValue)
		.def_readwrite("InstigatedSkillHealingModifierModifierStack", &AWillowPlayerController::InstigatedSkillHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("ReceivedBulletHealingModifier", &AWillowPlayerController::ReceivedBulletHealingModifier)
		.def_readwrite("ReceivedBulletHealingModifierBaseValue", &AWillowPlayerController::ReceivedBulletHealingModifierBaseValue)
		.def_readwrite("ReceivedBulletHealingModifierModifierStack", &AWillowPlayerController::ReceivedBulletHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("ReceivedMeleeHealingModifier", &AWillowPlayerController::ReceivedMeleeHealingModifier)
		.def_readwrite("ReceivedMeleeHealingModifierBaseValue", &AWillowPlayerController::ReceivedMeleeHealingModifierBaseValue)
		.def_readwrite("ReceivedMeleeHealingModifierModifierStack", &AWillowPlayerController::ReceivedMeleeHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("ReceivedGrenadeHealingModifier", &AWillowPlayerController::ReceivedGrenadeHealingModifier)
		.def_readwrite("ReceivedGrenadeHealingModifierBaseValue", &AWillowPlayerController::ReceivedGrenadeHealingModifierBaseValue)
		.def_readwrite("ReceivedGrenadeHealingModifierModifierStack", &AWillowPlayerController::ReceivedGrenadeHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("ReceivedRocketHealingModifier", &AWillowPlayerController::ReceivedRocketHealingModifier)
		.def_readwrite("ReceivedRocketHealingModifierBaseValue", &AWillowPlayerController::ReceivedRocketHealingModifierBaseValue)
		.def_readwrite("ReceivedRocketHealingModifierModifierStack", &AWillowPlayerController::ReceivedRocketHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("ReceivedStatusEffectHealingModifier", &AWillowPlayerController::ReceivedStatusEffectHealingModifier)
		.def_readwrite("ReceivedStatusEffectHealingModifierBaseValue", &AWillowPlayerController::ReceivedStatusEffectHealingModifierBaseValue)
		.def_readwrite("ReceivedStatusEffectHealingModifierModifierStack", &AWillowPlayerController::ReceivedStatusEffectHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("ReceivedSkillHealingModifier", &AWillowPlayerController::ReceivedSkillHealingModifier)
		.def_readwrite("ReceivedSkillHealingModifierBaseValue", &AWillowPlayerController::ReceivedSkillHealingModifierBaseValue)
		.def_readwrite("ReceivedSkillHealingModifierModifierStack", &AWillowPlayerController::ReceivedSkillHealingModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedBulletShieldRestoreModifier", &AWillowPlayerController::InstigatedBulletShieldRestoreModifier)
		.def_readwrite("InstigatedBulletShieldRestoreModifierBaseValue", &AWillowPlayerController::InstigatedBulletShieldRestoreModifierBaseValue)
		.def_readwrite("InstigatedBulletShieldRestoreModifierModifierStack", &AWillowPlayerController::InstigatedBulletShieldRestoreModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedMeleeShieldRestoreModifier", &AWillowPlayerController::InstigatedMeleeShieldRestoreModifier)
		.def_readwrite("InstigatedMeleeShieldRestoreModifierBaseValue", &AWillowPlayerController::InstigatedMeleeShieldRestoreModifierBaseValue)
		.def_readwrite("InstigatedMeleeShieldRestoreModifierModifierStack", &AWillowPlayerController::InstigatedMeleeShieldRestoreModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedGrenadeShieldRestoreModifier", &AWillowPlayerController::InstigatedGrenadeShieldRestoreModifier)
		.def_readwrite("InstigatedGrenadeShieldRestoreModifierBaseValue", &AWillowPlayerController::InstigatedGrenadeShieldRestoreModifierBaseValue)
		.def_readwrite("InstigatedGrenadeShieldRestoreModifierModifierStack", &AWillowPlayerController::InstigatedGrenadeShieldRestoreModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedRocketShieldRestoreModifier", &AWillowPlayerController::InstigatedRocketShieldRestoreModifier)
		.def_readwrite("InstigatedRocketShieldRestoreModifierBaseValue", &AWillowPlayerController::InstigatedRocketShieldRestoreModifierBaseValue)
		.def_readwrite("InstigatedRocketShieldRestoreModifierModifierStack", &AWillowPlayerController::InstigatedRocketShieldRestoreModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedStatusEffectShieldRestoreModifier", &AWillowPlayerController::InstigatedStatusEffectShieldRestoreModifier)
		.def_readwrite("InstigatedStatusEffectShieldRestoreModifierBaseValue", &AWillowPlayerController::InstigatedStatusEffectShieldRestoreModifierBaseValue)
		.def_readwrite("InstigatedStatusEffectShieldRestoreModifierModifierStack", &AWillowPlayerController::InstigatedStatusEffectShieldRestoreModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedSkillShieldRestoreModifier", &AWillowPlayerController::InstigatedSkillShieldRestoreModifier)
		.def_readwrite("InstigatedSkillShieldRestoreModifierBaseValue", &AWillowPlayerController::InstigatedSkillShieldRestoreModifierBaseValue)
		.def_readwrite("InstigatedSkillShieldRestoreModifierModifierStack", &AWillowPlayerController::InstigatedSkillShieldRestoreModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("LastKillExcessDamageDealt", &AWillowPlayerController::LastKillExcessDamageDealt)
		.def_readwrite("LastKillExcessDamageDealtBaseValue", &AWillowPlayerController::LastKillExcessDamageDealtBaseValue)
		.def_readwrite("LastKillExcessDamageDealtModifierStack", &AWillowPlayerController::LastKillExcessDamageDealtModifierStack, py::return_value_policy::reference)
		.def_readwrite("ShakeOffsetLength", &AWillowPlayerController::ShakeOffsetLength)
		.def_readwrite("ShakeRotLength", &AWillowPlayerController::ShakeRotLength)
		.def_readwrite("ShakeFOVLength", &AWillowPlayerController::ShakeFOVLength)
		.def_readwrite("PresenceUpdateInterval", &AWillowPlayerController::PresenceUpdateInterval)
		.def_readwrite("CurrentLunge", &AWillowPlayerController::CurrentLunge, py::return_value_policy::reference)
		.def_readwrite("LungeSpeedModifier", &AWillowPlayerController::LungeSpeedModifier, py::return_value_policy::reference)
		.def_readwrite("MaxLungeDistance", &AWillowPlayerController::MaxLungeDistance)
		.def_readwrite("MaxLungeDistanceBaseValue", &AWillowPlayerController::MaxLungeDistanceBaseValue)
		.def_readwrite("MaxLungeDistanceModifierStack", &AWillowPlayerController::MaxLungeDistanceModifierStack, py::return_value_policy::reference)
		.def_readwrite("SprintModifiers", &AWillowPlayerController::SprintModifiers, py::return_value_policy::reference)
		.def_readwrite("SprintFOVAngle", &AWillowPlayerController::SprintFOVAngle)
		.def_readwrite("SprintDesiredFOV", &AWillowPlayerController::SprintDesiredFOV)
		.def_readwrite("CurrentLurch", &AWillowPlayerController::CurrentLurch, py::return_value_policy::reference)
		.def_readwrite("CurrentLurchPos", &AWillowPlayerController::CurrentLurchPos)
		.def_readwrite("ActualCurrentLurchLoc", &AWillowPlayerController::ActualCurrentLurchLoc)
		.def_readwrite("ActualCurrentLurchRot", &AWillowPlayerController::ActualCurrentLurchRot)
		.def_readwrite("ActualCurrentLurchRotRoll", &AWillowPlayerController::ActualCurrentLurchRotRoll)
		.def_readwrite("ConnectedVSSTerminal", &AWillowPlayerController::ConnectedVSSTerminal, py::return_value_policy::reference)
		.def_readwrite("VSSSlotIndexForDelayedTeleport", &AWillowPlayerController::VSSSlotIndexForDelayedTeleport)
		.def_readwrite("TheVSSUIMovie", &AWillowPlayerController::TheVSSUIMovie, py::return_value_policy::reference)
		.def_readwrite("CurrentStreamingDebugPage", &AWillowPlayerController::CurrentStreamingDebugPage)
		.def_readwrite("ScreenParticleRecords", &AWillowPlayerController::ScreenParticleRecords, py::return_value_policy::reference)
		.def_readwrite("ActivatedTeleportersList", &AWillowPlayerController::ActivatedTeleportersList, py::return_value_policy::reference)
		.def_readwrite("LastVisitedTeleporter", &AWillowPlayerController::LastVisitedTeleporter, py::return_value_policy::reference)
		.def_readwrite("LastTouchedStationPath", &AWillowPlayerController::LastTouchedStationPath, py::return_value_policy::reference)
		.def_readwrite("HoldingCellScreenParticleModifiers", &AWillowPlayerController::HoldingCellScreenParticleModifiers, py::return_value_policy::reference)
		.def_readwrite("HoldingCellMaterialInterface", &AWillowPlayerController::HoldingCellMaterialInterface, py::return_value_policy::reference)
		.def_readwrite("HoldingCellMatParamName", &AWillowPlayerController::HoldingCellMatParamName, py::return_value_policy::reference)
		.def_readwrite("MissionPlaythroughs", &AWillowPlayerController::MissionPlaythroughs, py::return_value_policy::reference)
		.def_readwrite("DLCExpansionData", &AWillowPlayerController::DLCExpansionData, py::return_value_policy::reference)
		.def_readwrite("LoadingMovieShutoffTime", &AWillowPlayerController::LoadingMovieShutoffTime)
		.def_readwrite("UsableObjectUpdateTime", &AWillowPlayerController::UsableObjectUpdateTime)
		.def_readwrite("CachedUsableObject", &AWillowPlayerController::CachedUsableObject, py::return_value_policy::reference)
		.def_readwrite("CachedUsableHitComponent", &AWillowPlayerController::CachedUsableHitComponent, py::return_value_policy::reference)
		.def_readwrite("UsableObjectUpdateRate", &AWillowPlayerController::UsableObjectUpdateRate)
		.def_readwrite("CachedTradeProxy", &AWillowPlayerController::CachedTradeProxy, py::return_value_policy::reference)
		.def_readwrite("GFxUIManager", &AWillowPlayerController::GFxUIManager, py::return_value_policy::reference)
		.def_readwrite("PauseMenuDefinition", &AWillowPlayerController::PauseMenuDefinition, py::return_value_policy::reference)
		.def_readwrite("LobbyMovieDefinition", &AWillowPlayerController::LobbyMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("BinkLoadingMovieName", &AWillowPlayerController::BinkLoadingMovieName, py::return_value_policy::reference)
		.def_readwrite("ScaleformLoadingMovieName", &AWillowPlayerController::ScaleformLoadingMovieName, py::return_value_policy::reference)
		.def_readwrite("PercentChanceInstigatedBulletDmgIgnoresShields", &AWillowPlayerController::PercentChanceInstigatedBulletDmgIgnoresShields)
		.def_readwrite("PercentChanceInstigatedBulletDmgIgnoresShieldsBaseValue", &AWillowPlayerController::PercentChanceInstigatedBulletDmgIgnoresShieldsBaseValue)
		.def_readwrite("PercentChanceInstigatedBulletDmgIgnoresShieldsModifierStack", &AWillowPlayerController::PercentChanceInstigatedBulletDmgIgnoresShieldsModifierStack, py::return_value_policy::reference)
		.def_readwrite("PlayerPreferredCharacterName", &AWillowPlayerController::PlayerPreferredCharacterName, py::return_value_policy::reference)
		.def_readwrite("PlayerPreferredPrimaryColor", &AWillowPlayerController::PlayerPreferredPrimaryColor, py::return_value_policy::reference)
		.def_readwrite("PlayerPreferredSecondaryColor", &AWillowPlayerController::PlayerPreferredSecondaryColor, py::return_value_policy::reference)
		.def_readwrite("PlayerPreferredTertiaryColor", &AWillowPlayerController::PlayerPreferredTertiaryColor, py::return_value_policy::reference)
		.def_readwrite("CurrentPlayerRecentDamageEventIndex", &AWillowPlayerController::CurrentPlayerRecentDamageEventIndex)
		.def_readwrite("MinTimeBetweenResistFeedback", &AWillowPlayerController::MinTimeBetweenResistFeedback)
		.def_readwrite("CoopRange", &AWillowPlayerController::CoopRange)
		.def_readwrite("LastZoomTime", &AWillowPlayerController::LastZoomTime)
		.def_readwrite("DeadTime", &AWillowPlayerController::DeadTime)
		.def_readwrite("HUDScaleX", &AWillowPlayerController::HUDScaleX)
		.def_readwrite("HUDScaleY", &AWillowPlayerController::HUDScaleY)
		.def_readwrite("HUDScaleE", &AWillowPlayerController::HUDScaleE)
		.def_readwrite("ContextualPromptContextObject", &AWillowPlayerController::ContextualPromptContextObject, py::return_value_policy::reference)
		.def_readwrite("BackpackSortPreferenceIndex", &AWillowPlayerController::BackpackSortPreferenceIndex)
		.def_readwrite("RetryContextObject", &AWillowPlayerController::RetryContextObject, py::return_value_policy::reference)
		.def_readwrite("RetryContextString", &AWillowPlayerController::RetryContextString, py::return_value_policy::reference)
		.def_readwrite("RetryDuration", &AWillowPlayerController::RetryDuration)
		.def_readwrite("ContextualPromptDuration", &AWillowPlayerController::ContextualPromptDuration)
		.def_readwrite("MissionRestrictionTextDuration", &AWillowPlayerController::MissionRestrictionTextDuration)
		.def_readwrite("ReviveTarget", &AWillowPlayerController::ReviveTarget, py::return_value_policy::reference)
		.def_readwrite("ActionSkillTime", &AWillowPlayerController::ActionSkillTime)
		.def_readwrite("IsSkillListeningForMeleeOverrideEvent", &AWillowPlayerController::IsSkillListeningForMeleeOverrideEvent)
		.def_readwrite("IsSkillListeningForMeleeOverrideEventBaseValue", &AWillowPlayerController::IsSkillListeningForMeleeOverrideEventBaseValue)
		.def_readwrite("IsSkillListeningForMeleeOverrideEventModifierStack", &AWillowPlayerController::IsSkillListeningForMeleeOverrideEventModifierStack, py::return_value_policy::reference)
		.def_readwrite("IsSkillListeningForThrowGrenadeOverrideEvent", &AWillowPlayerController::IsSkillListeningForThrowGrenadeOverrideEvent)
		.def_readwrite("IsSkillListeningForThrowGrenadeOverrideEventBaseValue", &AWillowPlayerController::IsSkillListeningForThrowGrenadeOverrideEventBaseValue)
		.def_readwrite("IsSkillListeningForThrowGrenadeOverrideEventModifierStack", &AWillowPlayerController::IsSkillListeningForThrowGrenadeOverrideEventModifierStack, py::return_value_policy::reference)
		.def_readwrite("CanThrowGrenadesWhileInDownState", &AWillowPlayerController::CanThrowGrenadesWhileInDownState)
		.def_readwrite("CanThrowGrenadesWhileInDownStateBaseValue", &AWillowPlayerController::CanThrowGrenadesWhileInDownStateBaseValue)
		.def_readwrite("CanThrowGrenadesWhileInDownStateModifierStack", &AWillowPlayerController::CanThrowGrenadesWhileInDownStateModifierStack, py::return_value_policy::reference)
		.def_readwrite("LastKnownAmmoCount_RepeaterPistol", &AWillowPlayerController::LastKnownAmmoCount_RepeaterPistol)
		.def_readwrite("LastKnownAmmoCount_RevolverPistol", &AWillowPlayerController::LastKnownAmmoCount_RevolverPistol)
		.def_readwrite("LastKnownAmmoCount_SMG", &AWillowPlayerController::LastKnownAmmoCount_SMG)
		.def_readwrite("LastKnownAmmoCount_CombatRifle", &AWillowPlayerController::LastKnownAmmoCount_CombatRifle)
		.def_readwrite("LastKnownAmmoCount_Shotgun", &AWillowPlayerController::LastKnownAmmoCount_Shotgun)
		.def_readwrite("LastKnownAmmoCount_SniperRifle", &AWillowPlayerController::LastKnownAmmoCount_SniperRifle)
		.def_readwrite("LastKnownAmmoCount_RocketLauncher", &AWillowPlayerController::LastKnownAmmoCount_RocketLauncher)
		.def_readwrite("LastKnownAmmoCount_Grenades", &AWillowPlayerController::LastKnownAmmoCount_Grenades)
		.def_readwrite("UsedMarketingCodes", &AWillowPlayerController::UsedMarketingCodes, py::return_value_policy::reference)
		.def_readwrite("MarketingCodesNeedingNotification", &AWillowPlayerController::MarketingCodesNeedingNotification, py::return_value_policy::reference)
		.def_readwrite("SavedCameraActorForVoGMatinee", &AWillowPlayerController::SavedCameraActorForVoGMatinee, py::return_value_policy::reference)
		.def_readwrite("VoGMovieDuration", &AWillowPlayerController::VoGMovieDuration)
		.def_readwrite("SkillPointsChangedDelegates", &AWillowPlayerController::SkillPointsChangedDelegates, py::return_value_policy::reference)
		.def_readwrite("ClientLoadingMovieShutoffDelay", &AWillowPlayerController::ClientLoadingMovieShutoffDelay)
		.def_readwrite("TransitionEntryLocation", &AWillowPlayerController::TransitionEntryLocation, py::return_value_policy::reference)
		.def_readwrite("NoCancelConnectingDlg", &AWillowPlayerController::NoCancelConnectingDlg, py::return_value_policy::reference)
		.def_readwrite("ConnectingDlg", &AWillowPlayerController::ConnectingDlg, py::return_value_policy::reference)
		.def_readwrite("ConnectingDialogRefreshTime", &AWillowPlayerController::ConnectingDialogRefreshTime)
		.def_readwrite("ConnectionTimeout", &AWillowPlayerController::ConnectionTimeout)
		.def_readwrite("ConnectionDuration", &AWillowPlayerController::ConnectionDuration)
		.def_readwrite("OneSecond", &AWillowPlayerController::OneSecond, py::return_value_policy::reference)
		.def_readwrite("MoreThanOneSecond", &AWillowPlayerController::MoreThanOneSecond, py::return_value_policy::reference)
		.def_readwrite("InviteDlg", &AWillowPlayerController::InviteDlg, py::return_value_policy::reference)
		.def_readwrite("ColiseumGameOverDlg", &AWillowPlayerController::ColiseumGameOverDlg, py::return_value_policy::reference)
		.def_readwrite("ExpPointsLoadedFromSavedGame", &AWillowPlayerController::ExpPointsLoadedFromSavedGame)
		.def_readwrite("ExpLevelLoadedFromSavedGame", &AWillowPlayerController::ExpLevelLoadedFromSavedGame)
		.def_readwrite("currentFriendsList", &AWillowPlayerController::currentFriendsList, py::return_value_policy::reference)
		.def_readwrite("RegionGameStages", &AWillowPlayerController::RegionGameStages, py::return_value_policy::reference)
		.def_readwrite("UnloadableDlcRegionGameStages", &AWillowPlayerController::UnloadableDlcRegionGameStages, py::return_value_policy::reference)
		.def_readwrite("UnloadableDlcWeaponData", &AWillowPlayerController::UnloadableDlcWeaponData, py::return_value_policy::reference)
		.def_readwrite("UnloadableDlcItemData", &AWillowPlayerController::UnloadableDlcItemData, py::return_value_policy::reference)
		.def_readwrite("ControllerChangeRetryTime", &AWillowPlayerController::ControllerChangeRetryTime)
		.def_readwrite("CurrentThirdPersonMenuCamLoc", &AWillowPlayerController::CurrentThirdPersonMenuCamLoc, py::return_value_policy::reference)
		.def_readwrite("CurrentThirdPersonMenuCamRot", &AWillowPlayerController::CurrentThirdPersonMenuCamRot, py::return_value_policy::reference)
		.def_readwrite("CurrentThirdPersonMenuCamFOV", &AWillowPlayerController::CurrentThirdPersonMenuCamFOV)
		.def_readwrite("UnclaimedRewards", &AWillowPlayerController::UnclaimedRewards, py::return_value_policy::reference)
		.def_readwrite("PlayerStandIns", &AWillowPlayerController::PlayerStandIns, py::return_value_policy::reference)
		.def_readwrite("TaggedGFxMovies", &AWillowPlayerController::TaggedGFxMovies, py::return_value_policy::reference)
		.def_readwrite("TrackedChallenges", &AWillowPlayerController::TrackedChallenges, py::return_value_policy::reference)
		.def_readwrite("LocalChallengeDataCache", &AWillowPlayerController::LocalChallengeDataCache, py::return_value_policy::reference)
		.def_readwrite("UnloadableDlcChallengeList", &AWillowPlayerController::UnloadableDlcChallengeList, py::return_value_policy::reference)
		.def_readwrite("DefaultMapName", &AWillowPlayerController::DefaultMapName, py::return_value_policy::reference)
		.def_readwrite("PlayingEchoId", &AWillowPlayerController::PlayingEchoId)
		.def_readwrite("CurrentThirdPersonMovie", &AWillowPlayerController::CurrentThirdPersonMovie, py::return_value_policy::reference)
		.def_readwrite("DynamicFlagDefinitions", &AWillowPlayerController::DynamicFlagDefinitions, py::return_value_policy::reference)
		.def_readwrite("DynamicFlags", &AWillowPlayerController::DynamicFlags, py::return_value_policy::reference)
		.def_readwrite("TradeManager", &AWillowPlayerController::TradeManager, py::return_value_policy::reference)
		.def_readwrite("DiscoveredWorldAreas", &AWillowPlayerController::DiscoveredWorldAreas, py::return_value_policy::reference)
		.def_readwrite("FullyExploredAreas", &AWillowPlayerController::FullyExploredAreas, py::return_value_policy::reference)
		.def_readwrite("TinnitusStrength", &AWillowPlayerController::TinnitusStrength)
		.def_readwrite("CurrentPrimaryStatusEffect", &AWillowPlayerController::CurrentPrimaryStatusEffect, py::return_value_policy::reference)
		.def_readwrite("CachedGraveyardSaveData", &AWillowPlayerController::CachedGraveyardSaveData, py::return_value_policy::reference)
		.def_readwrite("UBMKilledByMessage", &AWillowPlayerController::UBMKilledByMessage, py::return_value_policy::reference)
		.def_readwrite("NoPreferredManufacturer", &AWillowPlayerController::NoPreferredManufacturer, py::return_value_policy::reference)
		.def_readwrite("NoPreferredWeaponType", &AWillowPlayerController::NoPreferredWeaponType, py::return_value_policy::reference)
		.def_readwrite("UBMDefaultKilledByAIMessage", &AWillowPlayerController::UBMDefaultKilledByAIMessage, py::return_value_policy::reference)
		.def_readwrite("UBMDefaultKilledByMessage", &AWillowPlayerController::UBMDefaultKilledByMessage, py::return_value_policy::reference)
		.def_readwrite("UBMSuicideMessage", &AWillowPlayerController::UBMSuicideMessage, py::return_value_policy::reference)
		.def_readwrite("PreProfileWriteSaveDuration", &AWillowPlayerController::PreProfileWriteSaveDuration)
		.def_readwrite("BadassPoints", &AWillowPlayerController::BadassPoints)
		.def_readwrite("BadassPointsSpent", &AWillowPlayerController::BadassPointsSpent)
		.def_readwrite("BadassTokensAvailable", &AWillowPlayerController::BadassTokensAvailable)
		.def_readwrite("BadassTokensEarned", &AWillowPlayerController::BadassTokensEarned)
		.def_readwrite("BadassBonusTokens", &AWillowPlayerController::BadassBonusTokens)
		.def_readwrite("BadassTokensDue", &AWillowPlayerController::BadassTokensDue)
		.def_readwrite("BadassRewardsEarned", &AWillowPlayerController::BadassRewardsEarned, py::return_value_policy::reference)
		.def_readwrite("BadassRewardsToOfferNext", &AWillowPlayerController::BadassRewardsToOfferNext, py::return_value_policy::reference)
		.def_readwrite("CustomWaypointLocation", &AWillowPlayerController::CustomWaypointLocation, py::return_value_policy::reference)
		.def_readwrite("LastKnownLocation", &AWillowPlayerController::LastKnownLocation, py::return_value_policy::reference)
		.def_readwrite("TimeSinceLastLocationStatUpdate", &AWillowPlayerController::TimeSinceLastLocationStatUpdate)
		.def_readwrite("BufferedLocationDelta", &AWillowPlayerController::BufferedLocationDelta)
		.def_readwrite("BufferedVehicleLocationDelta", &AWillowPlayerController::BufferedVehicleLocationDelta)
		.def_readwrite("CurrentSprintDistance", &AWillowPlayerController::CurrentSprintDistance)
		.def_readwrite("DefaultSaveGameString", &AWillowPlayerController::DefaultSaveGameString, py::return_value_policy::reference)
		.def_readwrite("IntroMovieName", &AWillowPlayerController::IntroMovieName, py::return_value_policy::reference)
		.def_readwrite("WaitTimeToDisableLoadingMovie", &AWillowPlayerController::WaitTimeToDisableLoadingMovie)
		.def_readwrite("OnlineMessageMovie", &AWillowPlayerController::OnlineMessageMovie, py::return_value_policy::reference)
		.def_readwrite("TextChatMovie", &AWillowPlayerController::TextChatMovie, py::return_value_policy::reference)
		.def_readwrite("VOVolumePlayInfo", &AWillowPlayerController::VOVolumePlayInfo, py::return_value_policy::reference)
		.def_readwrite("SFXVolumePlayInfo", &AWillowPlayerController::SFXVolumePlayInfo, py::return_value_policy::reference)
		.def_readwrite("MusicVolumePlayInfo", &AWillowPlayerController::MusicVolumePlayInfo, py::return_value_policy::reference)
		.def_readwrite("TeleporterSoundInfo", &AWillowPlayerController::TeleporterSoundInfo, py::return_value_policy::reference)
		.def_readwrite("TravelToSearchClass", &AWillowPlayerController::TravelToSearchClass, py::return_value_policy::reference)
		.def_readwrite("SaveGameLoadedDelegates", &AWillowPlayerController::SaveGameLoadedDelegates, py::return_value_policy::reference)
		.def_readwrite("BlackMarketUpgrades", &AWillowPlayerController::BlackMarketUpgrades, py::return_value_policy::reference)
		.def_readwrite("SaveGameReplicationChannel", &AWillowPlayerController::SaveGameReplicationChannel, py::return_value_policy::reference)
		.def_readwrite("PendingReplicatedSaveGame", &AWillowPlayerController::PendingReplicatedSaveGame, py::return_value_policy::reference)
		.def_readwrite("SendingSaveGameDlg", &AWillowPlayerController::SendingSaveGameDlg, py::return_value_policy::reference)
		.def_readwrite("ClientExpectedResourcePools", &AWillowPlayerController::ClientExpectedResourcePools, py::return_value_policy::reference)
		.def_readwrite("ReadingWillowOneSavesDlg", &AWillowPlayerController::ReadingWillowOneSavesDlg, py::return_value_policy::reference)
		.def_readwrite("LoadingDynamicCharacterPackageDialog", &AWillowPlayerController::LoadingDynamicCharacterPackageDialog, py::return_value_policy::reference)
		.def_readwrite("CurrentSpectatorPoint", &AWillowPlayerController::CurrentSpectatorPoint, py::return_value_policy::reference)
		.def_readwrite("CustomizationUnlocks", &AWillowPlayerController::CustomizationUnlocks, py::return_value_policy::reference)
		.def_readwrite("UnlockedCustomizationCountMap", &AWillowPlayerController::UnlockedCustomizationCountMap, py::return_value_policy::reference)
		.def_readwrite("LockoutList", &AWillowPlayerController::LockoutList, py::return_value_policy::reference)
		.def_readwrite("UnloadableDlcLockoutList", &AWillowPlayerController::UnloadableDlcLockoutList, py::return_value_policy::reference)
		.def_readwrite("ClientLockoutTimeAdjust", &AWillowPlayerController::ClientLockoutTimeAdjust)
		.def_readwrite("EasterEgg1", &AWillowPlayerController::EasterEgg1)
		.def_readwrite("EasterEgg2", &AWillowPlayerController::EasterEgg2)
		.def_readwrite("EasterEgg3", &AWillowPlayerController::EasterEgg3)
		.def_readwrite("EasterEgg4", &AWillowPlayerController::EasterEgg4)
		.def_readwrite("EasterEgg5", &AWillowPlayerController::EasterEgg5)
		.def_readwrite("EasterEgg6", &AWillowPlayerController::EasterEgg6)
		.def_readwrite("EasterEgg7", &AWillowPlayerController::EasterEgg7)
		.def_readwrite("EasterEgg8", &AWillowPlayerController::EasterEgg8)
		.def_readwrite("EasterEgg9", &AWillowPlayerController::EasterEgg9)
		.def_readwrite("EasterEgg10", &AWillowPlayerController::EasterEgg10)
		.def_readwrite("LevelChallengeUnlocks", &AWillowPlayerController::LevelChallengeUnlocks, py::return_value_policy::reference)
		.def_readwrite("OneOffLevelChallengeCompletion", &AWillowPlayerController::OneOffLevelChallengeCompletion, py::return_value_policy::reference)
		.def_readwrite("NumChallengePrestiges", &AWillowPlayerController::NumChallengePrestiges)
		.def_readwrite("PendingClassSwitchDefinition", &AWillowPlayerController::PendingClassSwitchDefinition, py::return_value_policy::reference)
		.def_readwrite("PendingClassSwitchPawnArchetype", &AWillowPlayerController::PendingClassSwitchPawnArchetype, py::return_value_policy::reference)
		.def_readwrite("SavedMapScaleVal", &AWillowPlayerController::SavedMapScaleVal)
		.def_readwrite("SavedSkillTreeSkill", &AWillowPlayerController::SavedSkillTreeSkill, py::return_value_policy::reference)
		.def_readwrite("SavedBranchNavPref", &AWillowPlayerController::SavedBranchNavPref)
		.def_readwrite("SavedCellNavPref", &AWillowPlayerController::SavedCellNavPref)
		.def_readwrite("NumQuickSlotsFlourished", &AWillowPlayerController::NumQuickSlotsFlourished)
		.def_readwrite("NumGoldenKeysNotified", &AWillowPlayerController::NumGoldenKeysNotified)
		.def_readwrite("ViewWanderingIndex", &AWillowPlayerController::ViewWanderingIndex, py::return_value_policy::reference)
		.def_readwrite("ViewWanderingPercent", &AWillowPlayerController::ViewWanderingPercent, py::return_value_policy::reference)
		.def_readwrite("TotalViewWanderingPersistence", &AWillowPlayerController::TotalViewWanderingPersistence)
		.def_readwrite("PauseTicker", &AWillowPlayerController::PauseTicker, py::return_value_policy::reference)
		.def_readwrite("OfflineWarningDlg", &AWillowPlayerController::OfflineWarningDlg, py::return_value_policy::reference)
		.def_readwrite("DownloadPatcherFileName", &AWillowPlayerController::DownloadPatcherFileName, py::return_value_policy::reference)
		.def_readwrite("DownloadPatcherFilesTimeout", &AWillowPlayerController::DownloadPatcherFilesTimeout)
		.def_readwrite("DownloadPatcherFilesCompleteDelegates", &AWillowPlayerController::DownloadPatcherFilesCompleteDelegates, py::return_value_policy::reference)
		.def_readwrite("CurrentCrossTitleTitleIdIndex", &AWillowPlayerController::CurrentCrossTitleTitleIdIndex)
		.def_readwrite("RemoteNumGoldenKeysAvailable", &AWillowPlayerController::RemoteNumGoldenKeysAvailable)
		.def_readwrite("RemoteNumGoldenKeysEarned", &AWillowPlayerController::RemoteNumGoldenKeysEarned)
		.def_readwrite("PendingClientTrainingMessages", &AWillowPlayerController::PendingClientTrainingMessages, py::return_value_policy::reference)
		.def_readwrite("CachedMissionDefForChapterHeader", &AWillowPlayerController::CachedMissionDefForChapterHeader, py::return_value_policy::reference)
		.def_readwrite("PressStartMovie", &AWillowPlayerController::PressStartMovie, py::return_value_policy::reference)
		.def_readwrite("TitleFileCache", &AWillowPlayerController::TitleFileCache, py::return_value_policy::reference)
		.def_readwrite("IsReReadingProfile", &AWillowPlayerController::IsReReadingProfile)
		.def_readwrite("PendingMissionRewardsForOtherPlaythroughs", &AWillowPlayerController::PendingMissionRewardsForOtherPlaythroughs, py::return_value_policy::reference)
		.def_readwrite("MaxBackpackSlotsLoadedFromSavegame", &AWillowPlayerController::MaxBackpackSlotsLoadedFromSavegame)
		.def_readwrite("MaxBankSlotsLoadedFromSavegame", &AWillowPlayerController::MaxBankSlotsLoadedFromSavegame)
		.def_readwrite("ShiftAuthorizedCustomizations", &AWillowPlayerController::ShiftAuthorizedCustomizations, py::return_value_policy::reference)
		.def_readwrite("MeleeSelfChance", &AWillowPlayerController::MeleeSelfChance)
		.def_readwrite("MeleeSelfChanceBaseValue", &AWillowPlayerController::MeleeSelfChanceBaseValue)
		.def_readwrite("MeleeSelfChanceModifierStack", &AWillowPlayerController::MeleeSelfChanceModifierStack, py::return_value_policy::reference)
		.def_readwrite("KillSkillDurationMultiplier", &AWillowPlayerController::KillSkillDurationMultiplier)
		.def_readwrite("KillSkillDurationMultiplierBaseValue", &AWillowPlayerController::KillSkillDurationMultiplierBaseValue)
		.def_readwrite("KillSkillDurationMultiplierModifierStack", &AWillowPlayerController::KillSkillDurationMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("PlayerHasPlayedInPlaythroughThree", &AWillowPlayerController::PlayerHasPlayedInPlaythroughThree)
		.def_readwrite("UseSprintFOV", &AWillowPlayerController::UseSprintFOV)
		.def_readwrite("LilacWeaponsRestrictionActive", &AWillowPlayerController::LilacWeaponsRestrictionActive)
		.def_readwrite("SkillDefinitionForInjuredStrings", &AWillowPlayerController::SkillDefinitionForInjuredStrings, py::return_value_policy::reference)
		.def_readwrite("OverpowerChoiceValue", &AWillowPlayerController::OverpowerChoiceValue)
		.def_readwrite("ChosenVehicleCustomizations", &AWillowPlayerController::ChosenVehicleCustomizations, py::return_value_policy::reference)
		.def_readwrite("LastUpsellOfferId", &AWillowPlayerController::LastUpsellOfferId)
		.def_readwrite("__OnDownloadPatcherFilesComplete__Delegate", &AWillowPlayerController::__OnDownloadPatcherFilesComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__PreProfileWriteSaveComplete__Delegate", &AWillowPlayerController::__PreProfileWriteSaveComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSkillGradeChanged__Delegate", &AWillowPlayerController::__OnSkillGradeChanged__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSkillPointsChanged__Delegate", &AWillowPlayerController::__OnSkillPointsChanged__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSkillTreeReset__Delegate", &AWillowPlayerController::__OnSkillTreeReset__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSaveGameLoaded__Delegate", &AWillowPlayerController::__OnSaveGameLoaded__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnLoadLastSaveGameComplete__Delegate", &AWillowPlayerController::__OnLoadLastSaveGameComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSplitscreenJoinComplete__Delegate", &AWillowPlayerController::__OnSplitscreenJoinComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnCheckSaveGamesAvailableComplete__Delegate", &AWillowPlayerController::__OnCheckSaveGamesAvailableComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnDeviceSelectionProcessComplete__Delegate", &AWillowPlayerController::__OnDeviceSelectionProcessComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnStartupDeviceSelectionComplete__Delegate", &AWillowPlayerController::__OnStartupDeviceSelectionComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSaveComplete__Delegate", &AWillowPlayerController::__OnSaveComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnButtonClicked__Delegate", &AWillowPlayerController::__OnButtonClicked__Delegate, py::return_value_policy::reference)
		.def("ClientIncrementOverpowerLevel", &AWillowPlayerController::ClientIncrementOverpowerLevel)
		.def("ServerIncrementOverpowerLevel", &AWillowPlayerController::ServerIncrementOverpowerLevel)
		.def("SetVehicleCustomizationForModule", &AWillowPlayerController::SetVehicleCustomizationForModule)
		.def("GetVehicleCustomizationForModule", &AWillowPlayerController::GetVehicleCustomizationForModule, py::return_value_policy::reference)
		.def("GetMaximumPossibleOverpowerModifier", &AWillowPlayerController::GetMaximumPossibleOverpowerModifier)
		.def("GetMaximumPossiblePlayerLevelCap", &AWillowPlayerController::GetMaximumPossiblePlayerLevelCap)
		.def("QueuePullThePinNotification", &AWillowPlayerController::QueuePullThePinNotification)
		.def("SetSkillDefinitionForInjuredStrings", &AWillowPlayerController::SetSkillDefinitionForInjuredStrings)
		.def("PopulateGameMissionDataFromSavegame", &AWillowPlayerController::PopulateGameMissionDataFromSavegame)
		.def("ResetInfiniteVaultHunterPlaythrough", &AWillowPlayerController::ResetInfiniteVaultHunterPlaythrough)
		.def("GetInjuredDefinition", &AWillowPlayerController::GetInjuredDefinition, py::return_value_policy::reference)
		.def("IsAutoAimEnabled", &AWillowPlayerController::IsAutoAimEnabled)
		.def("ClientUnregisterPlayerWithSession", &AWillowPlayerController::ClientUnregisterPlayerWithSession)
		.def("SetBackpackSortPreference", &AWillowPlayerController::SetBackpackSortPreference)
		.def("GetBackpackSortPreference", &AWillowPlayerController::GetBackpackSortPreference)
		.def("ResetFocusCam", &AWillowPlayerController::ResetFocusCam)
		.def("TranslateLevelToBaseName", &AWillowPlayerController::TranslateLevelToBaseName, py::return_value_policy::reference)
		.def("PS3UseCircleToAccept", &AWillowPlayerController::PS3UseCircleToAccept)
		.def("eventTakeDamage", &AWillowPlayerController::eventTakeDamage)
		.def("AllowTextMessage", &AWillowPlayerController::AllowTextMessage)
		.def("eventIsGuestLogin", &AWillowPlayerController::eventIsGuestLogin)
		.def("Behavior_QueuePersonalEcho", &AWillowPlayerController::Behavior_QueuePersonalEcho)
		.def("ClientShowCustomizationFanfare", &AWillowPlayerController::ClientShowCustomizationFanfare)
		.def("eventTryCustomizationFanfare", &AWillowPlayerController::eventTryCustomizationFanfare)
		.def("HandleBadassSkillActivation", &AWillowPlayerController::HandleBadassSkillActivation)
		.def("ServerSetBadassSkillDisabled", &AWillowPlayerController::ServerSetBadassSkillDisabled)
		.def("SetBadassSkillDisabled", &AWillowPlayerController::SetBadassSkillDisabled)
		.def("ToggleBadassSkill", &AWillowPlayerController::ToggleBadassSkill)
		.def("IsBadassSkillDisabled", &AWillowPlayerController::IsBadassSkillDisabled)
		.def("ClearDownloadPatcherFilesCompleteDelegate", &AWillowPlayerController::ClearDownloadPatcherFilesCompleteDelegate)
		.def("AddDownloadPatcherFilesCompleteDelegate", &AWillowPlayerController::AddDownloadPatcherFilesCompleteDelegate)
		.def("DownloadPatcherFilesComplete", &AWillowPlayerController::DownloadPatcherFilesComplete)
		.def("OnDownloadedPatcherFile", &AWillowPlayerController::OnDownloadedPatcherFile)
		.def("HandleDownloadPatcherFileResponse", &AWillowPlayerController::HandleDownloadPatcherFileResponse)
		.def("DownloadPatcherFiles", &AWillowPlayerController::DownloadPatcherFiles)
		.def("TryShowNewPlaythroughNotification", &AWillowPlayerController::TryShowNewPlaythroughNotification)
		.def("ClearBlackMarketInventory", &AWillowPlayerController::ClearBlackMarketInventory)
		.def("ClientNotifyNewGameStarted", &AWillowPlayerController::ClientNotifyNewGameStarted)
		.def("InitializeViewWanderingFor", &AWillowPlayerController::InitializeViewWanderingFor)
		.def("OnGoldenKeyNotificationDismissed", &AWillowPlayerController::OnGoldenKeyNotificationDismissed)
		.def("CheckNotifyNewGoldenKeys", &AWillowPlayerController::CheckNotifyNewGoldenKeys)
		.def("CheckForGoldenKeys", &AWillowPlayerController::CheckForGoldenKeys)
		.def("WriteGoldenKeyListToProfile", &AWillowPlayerController::WriteGoldenKeyListToProfile)
		.def("GatherGoldenKeysFromDlc", &AWillowPlayerController::GatherGoldenKeysFromDlc)
		.def("GetAllAcquiredGoldenKeyData", &AWillowPlayerController::GetAllAcquiredGoldenKeyData, py::return_value_policy::reference)
		.def("GetNextUnspentGoldenKey", &AWillowPlayerController::GetNextUnspentGoldenKey, py::return_value_policy::reference)
		.def("AddGoldenKeysFromSource", &AWillowPlayerController::AddGoldenKeysFromSource)
		.def("GetNumGoldenKeysAcquired", &AWillowPlayerController::GetNumGoldenKeysAcquired)
		.def("GetNumGoldenKeysAvailable", &AWillowPlayerController::GetNumGoldenKeysAvailable)
		.def("eventSpendGoldenKey", &AWillowPlayerController::eventSpendGoldenKey)
		.def("ExecFor", &AWillowPlayerController::ExecFor)
		.def("PreviousGamePlayersThanked", &AWillowPlayerController::PreviousGamePlayersThanked)
		.def("UnlockCustomizationListFromKeyedPool", &AWillowPlayerController::UnlockCustomizationListFromKeyedPool)
		.def("UnlockLoyalCustomerCustomizations", &AWillowPlayerController::UnlockLoyalCustomerCustomizations)
		.def("EndGetNumCrossTitleSaveGames", &AWillowPlayerController::EndGetNumCrossTitleSaveGames)
		.def("BeginGetNumCrossTitleSaveGames", &AWillowPlayerController::BeginGetNumCrossTitleSaveGames)
		.def("GetAlternateTitleIds", &AWillowPlayerController::GetAlternateTitleIds, py::return_value_policy::reference)
		.def("NewsRetrieved", &AWillowPlayerController::NewsRetrieved)
		.def("TryConsumeSparkGoldenKey", &AWillowPlayerController::TryConsumeSparkGoldenKey)
		.def("OnEntitlementsUpdated", &AWillowPlayerController::OnEntitlementsUpdated)
		.def("OnSparkEmergencyMessageUpdated", &AWillowPlayerController::OnSparkEmergencyMessageUpdated)
		.def("ResetMOTD", &AWillowPlayerController::ResetMOTD)
		.def("OnSparkInitialized", &AWillowPlayerController::OnSparkInitialized)
		.def("ServerSkipMatinee", &AWillowPlayerController::ServerSkipMatinee)
		.def("SkipMatinee", &AWillowPlayerController::SkipMatinee)
		.def("KillEnemies", &AWillowPlayerController::KillEnemies)
		.def("OnPetNoLongerTargetedByAI", &AWillowPlayerController::OnPetNoLongerTargetedByAI)
		.def("OnPetTargetedByAI", &AWillowPlayerController::OnPetTargetedByAI)
		.def("DeveloperDemigod", &AWillowPlayerController::DeveloperDemigod)
		.def("ServerDeveloperDemigod", &AWillowPlayerController::ServerDeveloperDemigod)
		.def("DeveloperLoaded", &AWillowPlayerController::DeveloperLoaded)
		.def("ServerDeveloperLoaded", &AWillowPlayerController::ServerDeveloperLoaded)
		.def("DeveloperSpawnAwesomeItems", &AWillowPlayerController::DeveloperSpawnAwesomeItems)
		.def("eventServerDeveloperSpawnAwesomeItems", &AWillowPlayerController::eventServerDeveloperSpawnAwesomeItems)
		.def("ServerDeveloperKillEnemies", &AWillowPlayerController::ServerDeveloperKillEnemies)
		.def("DeveloperUnlockAllCustomizations", &AWillowPlayerController::DeveloperUnlockAllCustomizations)
		.def("DeveloperUnlockAnAchievement", &AWillowPlayerController::DeveloperUnlockAnAchievement)
		.def("ReadAchievements", &AWillowPlayerController::ReadAchievements)
		.def("GetAchievementDetails", &AWillowPlayerController::GetAchievementDetails)
		.def("eventShowMissionWeaponTraining", &AWillowPlayerController::eventShowMissionWeaponTraining)
		.def("Behavior_Destroy", &AWillowPlayerController::Behavior_Destroy)
		.def("SaveQueuedTrainingMessageData", &AWillowPlayerController::SaveQueuedTrainingMessageData)
		.def("ApplyQueuedTrainingMessageData", &AWillowPlayerController::ApplyQueuedTrainingMessageData)
		.def("ServerComputeLockoutTimeAdjust", &AWillowPlayerController::ServerComputeLockoutTimeAdjust)
		.def("eventClientSetLockout", &AWillowPlayerController::eventClientSetLockout)
		.def("ComputeLockoutTimeAdjust", &AWillowPlayerController::ComputeLockoutTimeAdjust)
		.def("SetLockout", &AWillowPlayerController::SetLockout)
		.def("SaveLockoutData", &AWillowPlayerController::SaveLockoutData)
		.def("ApplyLockoutData", &AWillowPlayerController::ApplyLockoutData)
		.def("eventClientStartFade", &AWillowPlayerController::eventClientStartFade)
		.def("OnCameraFade", &AWillowPlayerController::OnCameraFade)
		.def("FlushNetDriver", &AWillowPlayerController::FlushNetDriver)
		.def("ClientHostLeavingGame", &AWillowPlayerController::ClientHostLeavingGame)
		.def("NotifyHostLeavingGame", &AWillowPlayerController::NotifyHostLeavingGame)
		.def("DisplaySubtitle", &AWillowPlayerController::DisplaySubtitle)
		.def("ClearTrackedChallenges", &AWillowPlayerController::ClearTrackedChallenges)
		.def("eventUntrackChallenge", &AWillowPlayerController::eventUntrackChallenge)
		.def("UpdateLcdWatchedChallenges", &AWillowPlayerController::UpdateLcdWatchedChallenges)
		.def("TrackChallenge", &AWillowPlayerController::TrackChallenge)
		.def("GetCurrentChallengeLevel", &AWillowPlayerController::GetCurrentChallengeLevel)
		.def("TrackChallengeToggle", &AWillowPlayerController::TrackChallengeToggle)
		.def("IsTrackedChallenge", &AWillowPlayerController::IsTrackedChallenge)
		.def("FindTrackedChallengeIndex", &AWillowPlayerController::FindTrackedChallengeIndex)
		.def("GetRestoreNetworkType", &AWillowPlayerController::GetRestoreNetworkType)
		.def("OnCausePlayerDeath", &AWillowPlayerController::OnCausePlayerDeath)
		.def("eventCausePlayerDeath", &AWillowPlayerController::eventCausePlayerDeath)
		.def("UnregisterPlayerStandIn", &AWillowPlayerController::UnregisterPlayerStandIn)
		.def("RegisterPlayerStandIn", &AWillowPlayerController::RegisterPlayerStandIn)
		.def("ClientToggleTelescopeOverlay", &AWillowPlayerController::ClientToggleTelescopeOverlay)
		.def("ClientCloseProjectedMenus", &AWillowPlayerController::ClientCloseProjectedMenus)
		.def("ConditionalShowHUDForAllPlayers", &AWillowPlayerController::ConditionalShowHUDForAllPlayers)
		.def("HideAsyncCharacterLoadDialog", &AWillowPlayerController::HideAsyncCharacterLoadDialog)
		.def("ShowAsyncCharacterLoadDialog", &AWillowPlayerController::ShowAsyncCharacterLoadDialog)
		.def("NotifyReadyToLoadPendingSavegame", &AWillowPlayerController::NotifyReadyToLoadPendingSavegame)
		.def("ClearWaitingForAsyncCharacterLoadAndHideBusyDialog", &AWillowPlayerController::ClearWaitingForAsyncCharacterLoadAndHideBusyDialog)
		.def("SetWaitingForAsyncCharacterLoadAndShowBusyDialog", &AWillowPlayerController::SetWaitingForAsyncCharacterLoadAndShowBusyDialog)
		.def("AreAnyPlayersWaitingOnAsyncCharacterLoad", &AWillowPlayerController::AreAnyPlayersWaitingOnAsyncCharacterLoad)
		.def("eventRunStreamingDataEvent", &AWillowPlayerController::eventRunStreamingDataEvent)
		.def("SetPendingClassSwitch", &AWillowPlayerController::SetPendingClassSwitch)
		.def("ErrorDialogClicked", &AWillowPlayerController::ErrorDialogClicked)
		.def("AreAllPlayersLoggedIn", &AWillowPlayerController::AreAllPlayersLoggedIn)
		.def("PromptAndKickNonLocalPlayers", &AWillowPlayerController::PromptAndKickNonLocalPlayers)
		.def("ShowServerBrowser", &AWillowPlayerController::ShowServerBrowser)
		.def("eventNotifyUIRefresh", &AWillowPlayerController::eventNotifyUIRefresh)
		.def("OnDestroyGameForSystemLinkComplete", &AWillowPlayerController::OnDestroyGameForSystemLinkComplete)
		.def("TransitionToSystemLink", &AWillowPlayerController::TransitionToSystemLink)
		.def("OnKickNetworkedPlayersForSystemLink_Confirm", &AWillowPlayerController::OnKickNetworkedPlayersForSystemLink_Confirm)
		.def("NotifyUIAddSplitPlayer", &AWillowPlayerController::NotifyUIAddSplitPlayer)
		.def("NotifyUIClearPendingSplitJoin", &AWillowPlayerController::NotifyUIClearPendingSplitJoin)
		.def("AttemptSystemLinkTransition", &AWillowPlayerController::AttemptSystemLinkTransition)
		.def("EndUpdatingSession", &AWillowPlayerController::EndUpdatingSession)
		.def("BeginUpdatingSession", &AWillowPlayerController::BeginUpdatingSession)
		.def("OnPurchaseCanceled", &AWillowPlayerController::OnPurchaseCanceled)
		.def("OnPurchaseRequest", &AWillowPlayerController::OnPurchaseRequest)
		.def("OnOfflineWarning_Clicked", &AWillowPlayerController::OnOfflineWarning_Clicked)
		.def("CheckChatDisabled", &AWillowPlayerController::CheckChatDisabled)
		.def("OnCreateGameComplete", &AWillowPlayerController::OnCreateGameComplete)
		.def("OnDestroySystemLinkForInternetGameComplete", &AWillowPlayerController::OnDestroySystemLinkForInternetGameComplete)
		.def("DestroyOnlineGameWithDelegate", &AWillowPlayerController::DestroyOnlineGameWithDelegate)
		.def("TransitionToInternetGame", &AWillowPlayerController::TransitionToInternetGame)
		.def("OnKickNetworkedPlayersForInternetGame_Confirm", &AWillowPlayerController::OnKickNetworkedPlayersForInternetGame_Confirm)
		.def("AttemptInternetTransition", &AWillowPlayerController::AttemptInternetTransition)
		.def("CheckCanCreateOnlineGame", &AWillowPlayerController::CheckCanCreateOnlineGame)
		.def("CheckCanCreateLanGame", &AWillowPlayerController::CheckCanCreateLanGame)
		.def("DownloadCompatibilityPack", &AWillowPlayerController::DownloadCompatibilityPack)
		.def("OnDialogClickDownloadCompatibilityPack", &AWillowPlayerController::OnDialogClickDownloadCompatibilityPack)
		.def("OnDialogClickShowLogin", &AWillowPlayerController::OnDialogClickShowLogin)
		.def("OnDestroyGameForOfflineComplete", &AWillowPlayerController::OnDestroyGameForOfflineComplete)
		.def("TransitionToOffline", &AWillowPlayerController::TransitionToOffline)
		.def("OnKickNetworkedPlayersForOffline_Confirm", &AWillowPlayerController::OnKickNetworkedPlayersForOffline_Confirm)
		.def("AttemptOfflineTransition", &AWillowPlayerController::AttemptOfflineTransition)
		.def("OnUpdateComplete", &AWillowPlayerController::OnUpdateComplete)
		.def("AttemptInternetInviteTypeTransition", &AWillowPlayerController::AttemptInternetInviteTypeTransition)
		.def("CheckCanUpdateInviteType", &AWillowPlayerController::CheckCanUpdateInviteType)
		.def("CheckMatchmakingEnabled", &AWillowPlayerController::CheckMatchmakingEnabled)
		.def("IsPublicModeDisabled", &AWillowPlayerController::IsPublicModeDisabled)
		.def("IsMatchmakingDisabled", &AWillowPlayerController::IsMatchmakingDisabled)
		.def("AttemptNetworkTransition", &AWillowPlayerController::AttemptNetworkTransition)
		.def("eventClientSetViewTarget", &AWillowPlayerController::eventClientSetViewTarget)
		.def("ServerViewPrevSpectatorPoint", &AWillowPlayerController::ServerViewPrevSpectatorPoint)
		.def("ViewPrevSpectatorPoint", &AWillowPlayerController::ViewPrevSpectatorPoint)
		.def("ServerViewNextSpectatorPoint", &AWillowPlayerController::ServerViewNextSpectatorPoint)
		.def("ViewNextSpectatorPoint", &AWillowPlayerController::ViewNextSpectatorPoint)
		.def("ServerViewFirstSpectatorPoint", &AWillowPlayerController::ServerViewFirstSpectatorPoint)
		.def("ViewFirstSpectatorPoint", &AWillowPlayerController::ViewFirstSpectatorPoint)
		.def("ClientShowGenericRevive", &AWillowPlayerController::ClientShowGenericRevive)
		.def("GetAWillowMind", &AWillowPlayerController::GetAWillowMind, py::return_value_policy::reference)
		.def("GetAWillowPlayerController", &AWillowPlayerController::GetAWillowPlayerController, py::return_value_policy::reference)
		.def("GetABaseController", &AWillowPlayerController::GetABaseController, py::return_value_policy::reference)
		.def("eventPreClientTravel", &AWillowPlayerController::eventPreClientTravel)
		.def("eventGetSeamlessTravelActorList", &AWillowPlayerController::eventGetSeamlessTravelActorList)
		.def("eventClientForceCancelMapChange", &AWillowPlayerController::eventClientForceCancelMapChange)
		.def("CinematicAutoSkip", &AWillowPlayerController::CinematicAutoSkip)
		.def("ToggleCinematicAutoSkip", &AWillowPlayerController::ToggleCinematicAutoSkip)
		.def("SetCinematicAutoSkip", &AWillowPlayerController::SetCinematicAutoSkip)
		.def("DumpBlackMarketUpgrades", &AWillowPlayerController::DumpBlackMarketUpgrades)
		.def("ClientBlackMarketUpgradePurchased", &AWillowPlayerController::ClientBlackMarketUpgradePurchased)
		.def("ServerPurchaseBlackMarketUpgrade", &AWillowPlayerController::ServerPurchaseBlackMarketUpgrade)
		.def("PurchaseBlackMarketUpgrade", &AWillowPlayerController::PurchaseBlackMarketUpgrade)
		.def("LookupBlackMarketUpgradeIndex", &AWillowPlayerController::LookupBlackMarketUpgradeIndex)
		.def("IncBlackMarketUpgrade", &AWillowPlayerController::IncBlackMarketUpgrade)
		.def("GetBlackMarketUpgrade", &AWillowPlayerController::GetBlackMarketUpgrade)
		.def("VerifyBlackMarketUpgradesLength", &AWillowPlayerController::VerifyBlackMarketUpgradesLength)
		.def("UnregisteredControllerButtonPress", &AWillowPlayerController::UnregisteredControllerButtonPress)
		.def("HasAnyInviteDialogsOpen", &AWillowPlayerController::HasAnyInviteDialogsOpen)
		.def("DebugEnablePCSplitscreen", &AWillowPlayerController::DebugEnablePCSplitscreen)
		.def("OnJoinTravelToSessionComplete", &AWillowPlayerController::OnJoinTravelToSessionComplete)
		.def("OnDestroyForTravelComplete", &AWillowPlayerController::OnDestroyForTravelComplete)
		.def("StopLoopingSound", &AWillowPlayerController::StopLoopingSound)
		.def("IsSoundPlaying", &AWillowPlayerController::IsSoundPlaying)
		.def("StopMusicVolumeSound", &AWillowPlayerController::StopMusicVolumeSound)
		.def("PlayMusicVolumeSound", &AWillowPlayerController::PlayMusicVolumeSound)
		.def("StopSFXVolumeSound", &AWillowPlayerController::StopSFXVolumeSound)
		.def("PlaySFXVolumeSound", &AWillowPlayerController::PlaySFXVolumeSound)
		.def("StopVOVolumeSound", &AWillowPlayerController::StopVOVolumeSound)
		.def("PlayVOVolumeSound", &AWillowPlayerController::PlayVOVolumeSound)
		.def("HideGameMessage", &AWillowPlayerController::HideGameMessage)
		.def("ClientDisplayWaitingMessage", &AWillowPlayerController::ClientDisplayWaitingMessage)
		.def("DisplayGameMessage", &AWillowPlayerController::DisplayGameMessage)
		.def("PushToTalkStop", &AWillowPlayerController::PushToTalkStop)
		.def("PushToTalkStart", &AWillowPlayerController::PushToTalkStart)
		.def("StartTextChat", &AWillowPlayerController::StartTextChat)
		.def("GetTextChatMovie", &AWillowPlayerController::GetTextChatMovie, py::return_value_policy::reference)
		.def("GetOnlineMessageMovie", &AWillowPlayerController::GetOnlineMessageMovie, py::return_value_policy::reference)
		.def("ClientKickedPartyKill", &AWillowPlayerController::ClientKickedPartyKill)
		.def("CheckStat", &AWillowPlayerController::CheckStat)
		.def("CheckNotifyPlaythroughThree", &AWillowPlayerController::CheckNotifyPlaythroughThree)
		.def("ShowPlaythrough3Message", &AWillowPlayerController::ShowPlaythrough3Message)
		.def("ClientGenericPlayerInitialization", &AWillowPlayerController::ClientGenericPlayerInitialization)
		.def("TryRegisterStandIns", &AWillowPlayerController::TryRegisterStandIns)
		.def("SharedPlayerInitialization", &AWillowPlayerController::SharedPlayerInitialization)
		.def("CreateSaveGameReplicationChannel", &AWillowPlayerController::CreateSaveGameReplicationChannel)
		.def("GenericPlayerInitialization", &AWillowPlayerController::GenericPlayerInitialization)
		.def("OnFastForward_Clicked", &AWillowPlayerController::OnFastForward_Clicked)
		.def("CanPromptForFastForward", &AWillowPlayerController::CanPromptForFastForward)
		.def("eventIsFastForwardPromptValid", &AWillowPlayerController::eventIsFastForwardPromptValid)
		.def("eventTryPromptForFastForward", &AWillowPlayerController::eventTryPromptForFastForward)
		.def("UpdateHUDMinimapRadius", &AWillowPlayerController::UpdateHUDMinimapRadius)
		.def("TurnOffCinematicMode", &AWillowPlayerController::TurnOffCinematicMode)
		.def("UpdateMissionWeaponRestrictionContextualPrompt", &AWillowPlayerController::UpdateMissionWeaponRestrictionContextualPrompt)
		.def("eventClearContextualPromptScreen", &AWillowPlayerController::eventClearContextualPromptScreen)
		.def("HideContextualPrompt", &AWillowPlayerController::HideContextualPrompt)
		.def("eventShowContextualPromptEx", &AWillowPlayerController::eventShowContextualPromptEx)
		.def("eventShowContextualPrompt", &AWillowPlayerController::eventShowContextualPrompt)
		.def("RetryContextualPrompt", &AWillowPlayerController::RetryContextualPrompt)
		.def("TestContextualPrompt", &AWillowPlayerController::TestContextualPrompt)
		.def("ServerIncrementStatByValue", &AWillowPlayerController::ServerIncrementStatByValue)
		.def("ServerIncrementStat", &AWillowPlayerController::ServerIncrementStat)
		.def("ConditionalIncrementTechWeaponPickedUpStat", &AWillowPlayerController::ConditionalIncrementTechWeaponPickedUpStat)
		.def("IncrementUsedItemStat", &AWillowPlayerController::IncrementUsedItemStat)
		.def("NotifyShotStatus", &AWillowPlayerController::NotifyShotStatus)
		.def("OnUpdateOnlineGameComplete", &AWillowPlayerController::OnUpdateOnlineGameComplete)
		.def("ClientSetSessionInviteFlags", &AWillowPlayerController::ClientSetSessionInviteFlags)
		.def("CharacterSelected", &AWillowPlayerController::CharacterSelected)
		.def("ServerPlayerSelectedCharacter", &AWillowPlayerController::ServerPlayerSelectedCharacter)
		.def("ServerPlayerOpenedCharacterSelect", &AWillowPlayerController::ServerPlayerOpenedCharacterSelect)
		.def("CheckIntroMovieComplete", &AWillowPlayerController::CheckIntroMovieComplete)
		.def("ClientPlayIntroMovie", &AWillowPlayerController::ClientPlayIntroMovie)
		.def("GetHUDMovie", &AWillowPlayerController::GetHUDMovie, py::return_value_policy::reference)
		.def("NotifyInviteFailed", &AWillowPlayerController::NotifyInviteFailed)
		.def("NotifyNeedsCompatibilityContent", &AWillowPlayerController::NotifyNeedsCompatibilityContent)
		.def("NotifyNotEnoughSpaceInInvite", &AWillowPlayerController::NotifyNotEnoughSpaceInInvite)
		.def("NotifyNotAllPlayersCanJoinInvite", &AWillowPlayerController::NotifyNotAllPlayersCanJoinInvite)
		.def("HandleInviteFailure", &AWillowPlayerController::HandleInviteFailure)
		.def("GetSkillGradeByDef", &AWillowPlayerController::GetSkillGradeByDef)
		.def("GetBadassRewardsString", &AWillowPlayerController::GetBadassRewardsString, py::return_value_policy::reference)
		.def("GetBadassSkillPresentedValue", &AWillowPlayerController::GetBadassSkillPresentedValue, py::return_value_policy::reference)
		.def("GetBadassSkillActualValue", &AWillowPlayerController::GetBadassSkillActualValue)
		.def("GetBadassRewardsEarned", &AWillowPlayerController::GetBadassRewardsEarned)
		.def("SetBadassRewardsEarned", &AWillowPlayerController::SetBadassRewardsEarned)
		.def("eventServerSetBadassRewardsEarned", &AWillowPlayerController::eventServerSetBadassRewardsEarned)
		.def("ServerAwardBadassReward", &AWillowPlayerController::ServerAwardBadassReward)
		.def("AwardBadassReward", &AWillowPlayerController::AwardBadassReward)
		.def("GetBadassReward", &AWillowPlayerController::GetBadassReward, py::return_value_policy::reference)
		.def("GetBadassRewardCount", &AWillowPlayerController::GetBadassRewardCount)
		.def("ResetBadass", &AWillowPlayerController::ResetBadass)
		.def("BadassRanksPerToken", &AWillowPlayerController::BadassRanksPerToken)
		.def("eventTokensDue", &AWillowPlayerController::eventTokensDue)
		.def("GetBadassPointsForNextRank", &AWillowPlayerController::GetBadassPointsForNextRank)
		.def("GetBadassPointsForCurrentRank", &AWillowPlayerController::GetBadassPointsForCurrentRank)
		.def("GetBadassPointsForRank", &AWillowPlayerController::GetBadassPointsForRank)
		.def("GetBadassRankForPointsSpent", &AWillowPlayerController::GetBadassRankForPointsSpent)
		.def("eventGetBadassPointsPerRank", &AWillowPlayerController::eventGetBadassPointsPerRank)
		.def("GetNumUniqueBadassRewardsEarned", &AWillowPlayerController::GetNumUniqueBadassRewardsEarned)
		.def("GetBadassTokensSpent", &AWillowPlayerController::GetBadassTokensSpent)
		.def("SpendBadassTokens", &AWillowPlayerController::SpendBadassTokens)
		.def("AddBadassTokens", &AWillowPlayerController::AddBadassTokens)
		.def("eventAdjustBadassPoints", &AWillowPlayerController::eventAdjustBadassPoints)
		.def("AdjustBadassPointsSpent", &AWillowPlayerController::AdjustBadassPointsSpent)
		.def("SetBadassPoints", &AWillowPlayerController::SetBadassPoints)
		.def("eventSetBadassPointsSpent", &AWillowPlayerController::eventSetBadassPointsSpent)
		.def("GetBadassTokensAvailable", &AWillowPlayerController::GetBadassTokensAvailable)
		.def("GetBadassPointsSpent", &AWillowPlayerController::GetBadassPointsSpent)
		.def("eventGetBadassPoints", &AWillowPlayerController::eventGetBadassPoints)
		.def("GetBadassPointsCostOfNextRank", &AWillowPlayerController::GetBadassPointsCostOfNextRank)
		.def("GetBadassPointsSpentOnNextRank", &AWillowPlayerController::GetBadassPointsSpentOnNextRank)
		.def("GetBadassPointsAvailable", &AWillowPlayerController::GetBadassPointsAvailable)
		.def("GetBadassRank", &AWillowPlayerController::GetBadassRank)
		.def("eventClientYouNeedThisPackage", &AWillowPlayerController::eventClientYouNeedThisPackage)
		.def("eventServerUpdateOnDemandPackageStatus", &AWillowPlayerController::eventServerUpdateOnDemandPackageStatus)
		.def("ClientWhatPackagesHaveYou", &AWillowPlayerController::ClientWhatPackagesHaveYou)
		.def("RetryChapterHeader", &AWillowPlayerController::RetryChapterHeader)
		.def("ClientShowChapterHeader", &AWillowPlayerController::ClientShowChapterHeader)
		.def("ServerShowChapterHeader", &AWillowPlayerController::ServerShowChapterHeader)
		.def("ServerClearCustomizations", &AWillowPlayerController::ServerClearCustomizations)
		.def("ClearCustomizations", &AWillowPlayerController::ClearCustomizations)
		.def("WriteCustomizationUnlocksToProfile", &AWillowPlayerController::WriteCustomizationUnlocksToProfile)
		.def("ReadCustomizationUnlocksFromProfile", &AWillowPlayerController::ReadCustomizationUnlocksFromProfile)
		.def("WriteStashToProfile", &AWillowPlayerController::WriteStashToProfile)
		.def("FillEmptyStorageBuffer", &AWillowPlayerController::FillEmptyStorageBuffer)
		.def("CopyToStorageBuffer", &AWillowPlayerController::CopyToStorageBuffer)
		.def("ReadStashFromProfile", &AWillowPlayerController::ReadStashFromProfile)
		.def("CopyFromStorageBuffer", &AWillowPlayerController::CopyFromStorageBuffer)
		.def("OnChestOpened", &AWillowPlayerController::OnChestOpened)
		.def("OnChestClosing", &AWillowPlayerController::OnChestClosing)
		.def("CanDrop", &AWillowPlayerController::CanDrop)
		.def("OnStandInSaveGameLoaded", &AWillowPlayerController::OnStandInSaveGameLoaded)
		.def("OnUpdatePropertyFOVAngle", &AWillowPlayerController::OnUpdatePropertyFOVAngle)
		.def("ReactToPrimaryStatusEffect", &AWillowPlayerController::ReactToPrimaryStatusEffect)
		.def("DebugDiscoverAllAreasInCurrentMap", &AWillowPlayerController::DebugDiscoverAllAreasInCurrentMap)
		.def("eventServerAwardExperienceForWorldDiscovery", &AWillowPlayerController::eventServerAwardExperienceForWorldDiscovery)
		.def("eventHandleWorldDiscoveryCompletion", &AWillowPlayerController::eventHandleWorldDiscoveryCompletion)
		.def("eventClientSetCurrentMapFullyExplored", &AWillowPlayerController::eventClientSetCurrentMapFullyExplored)
		.def("CheckForExplorationAchievements", &AWillowPlayerController::CheckForExplorationAchievements)
		.def("HandleWorldAreaDiscovery", &AWillowPlayerController::HandleWorldAreaDiscovery)
		.def("TEST_ServerPrintInv", &AWillowPlayerController::TEST_ServerPrintInv)
		.def("SellAllTrash", &AWillowPlayerController::SellAllTrash)
		.def("ClientTradeFinished", &AWillowPlayerController::ClientTradeFinished)
		.def("ServerRequestTrade", &AWillowPlayerController::ServerRequestTrade)
		.def("eventCanBeginTrade", &AWillowPlayerController::eventCanBeginTrade)
		.def("GetTradePartnerPRI", &AWillowPlayerController::GetTradePartnerPRI, py::return_value_policy::reference)
		.def("GetTradePartner", &AWillowPlayerController::GetTradePartner, py::return_value_policy::reference)
		.def("AttemptTrade", &AWillowPlayerController::AttemptTrade)
		.def("eventActionSkillCooldownComplete", &AWillowPlayerController::eventActionSkillCooldownComplete)
		.def("SetUseRealTimeForWeaponZoom", &AWillowPlayerController::SetUseRealTimeForWeaponZoom)
		.def("SetWindowTitle", &AWillowPlayerController::SetWindowTitle)
		.def("ChangeWindowTitle", &AWillowPlayerController::ChangeWindowTitle)
		.def("GetThirdPersonMovie", &AWillowPlayerController::GetThirdPersonMovie, py::return_value_policy::reference)
		.def("WantsThirdPersonMenu", &AWillowPlayerController::WantsThirdPersonMenu)
		.def("HandleSkillTreeReset", &AWillowPlayerController::HandleSkillTreeReset)
		.def("NotifyDamageDealt", &AWillowPlayerController::NotifyDamageDealt)
		.def("ClientShowVSSInUseMessage", &AWillowPlayerController::ClientShowVSSInUseMessage)
		.def("eventRouteCallToSetVehicleFamily", &AWillowPlayerController::eventRouteCallToSetVehicleFamily)
		.def("RouteCallToServerChangeSeat", &AWillowPlayerController::RouteCallToServerChangeSeat)
		.def("TrySeatSwapClient", &AWillowPlayerController::TrySeatSwapClient)
		.def("ClientUpdatePosition", &AWillowPlayerController::ClientUpdatePosition)
		.def("PlayUIAkEvent", &AWillowPlayerController::PlayUIAkEvent)
		.def("RefreshBalanceDataFromMissionCompletion", &AWillowPlayerController::RefreshBalanceDataFromMissionCompletion)
		.def("ResetGameStageForRegion", &AWillowPlayerController::ResetGameStageForRegion)
		.def("GetWillowPlayerPawn", &AWillowPlayerController::GetWillowPlayerPawn, py::return_value_policy::reference)
		.def("SetGameStageForRegion", &AWillowPlayerController::SetGameStageForRegion)
		.def("GetGameStageFromRegion", &AWillowPlayerController::GetGameStageFromRegion)
		.def("NavMeshWalking", &AWillowPlayerController::NavMeshWalking)
		.def("ServerDebugActionSkill", &AWillowPlayerController::ServerDebugActionSkill)
		.def("DebugActionSkill", &AWillowPlayerController::DebugActionSkill)
		.def("ServerResetCooldown", &AWillowPlayerController::ServerResetCooldown)
		.def("ResetCooldown", &AWillowPlayerController::ResetCooldown)
		.def("ToggleMeleeSkillDebug", &AWillowPlayerController::ToggleMeleeSkillDebug)
		.def("DebugMeleeSkill", &AWillowPlayerController::DebugMeleeSkill)
		.def("ServerResetMeleeCooldown", &AWillowPlayerController::ServerResetMeleeCooldown)
		.def("ResetMeleeCooldown", &AWillowPlayerController::ResetMeleeCooldown)
		.def("eventClientReceiveChallenge", &AWillowPlayerController::eventClientReceiveChallenge)
		.def("ChallengeExistsInChallengeList", &AWillowPlayerController::ChallengeExistsInChallengeList)
		.def("CompleteChallengeIfConditionsMet", &AWillowPlayerController::CompleteChallengeIfConditionsMet)
		.def("eventReceiveChallenge", &AWillowPlayerController::eventReceiveChallenge)
		.def("SelectInputContext", &AWillowPlayerController::SelectInputContext)
		.def("UpdateInputContext", &AWillowPlayerController::UpdateInputContext)
		.def("AltSaveGameLoaded", &AWillowPlayerController::AltSaveGameLoaded)
		.def("LoadAltSaveGame", &AWillowPlayerController::LoadAltSaveGame)
		.def("ReadCrossTitleSaveGamesComplete", &AWillowPlayerController::ReadCrossTitleSaveGamesComplete)
		.def("ReadNextCrossTitleSaveGameList", &AWillowPlayerController::ReadNextCrossTitleSaveGameList)
		.def("ReadCrossTitleSaveGameList", &AWillowPlayerController::ReadCrossTitleSaveGameList)
		.def("GetAltSaveGameList", &AWillowPlayerController::GetAltSaveGameList)
		.def("SortMarketplaceContentByOfferId", &AWillowPlayerController::SortMarketplaceContentByOfferId)
		.def("IsStationToUninstalledDlc", &AWillowPlayerController::IsStationToUninstalledDlc)
		.def("ServerInitClientFlags", &AWillowPlayerController::ServerInitClientFlags)
		.def("ClientFlagSet", &AWillowPlayerController::ClientFlagSet)
		.def("NotifyDesignerAttribute", &AWillowPlayerController::NotifyDesignerAttribute)
		.def("ServerSendInitialColiseumStat", &AWillowPlayerController::ServerSendInitialColiseumStat)
		.def("ClientCatchUpColiseumOverlay", &AWillowPlayerController::ClientCatchUpColiseumOverlay)
		.def("ClientAnnouncePenaltyBox", &AWillowPlayerController::ClientAnnouncePenaltyBox)
		.def("OnColiseumAnnouncePenaltyBox", &AWillowPlayerController::OnColiseumAnnouncePenaltyBox)
		.def("ClientCloseCertificateScreen", &AWillowPlayerController::ClientCloseCertificateScreen)
		.def("ServerCertificateClosed", &AWillowPlayerController::ServerCertificateClosed)
		.def("ClientColiseumAwardCertificate", &AWillowPlayerController::ClientColiseumAwardCertificate)
		.def("ClientCloseResultsScreen", &AWillowPlayerController::ClientCloseResultsScreen)
		.def("ServerResultsScreenClosed", &AWillowPlayerController::ServerResultsScreenClosed)
		.def("ClientShowColiseumDefeatedScreen", &AWillowPlayerController::ClientShowColiseumDefeatedScreen)
		.def("ClientShowColiseumVictoryScreen", &AWillowPlayerController::ClientShowColiseumVictoryScreen)
		.def("ClientPublishColiseumStatDelta", &AWillowPlayerController::ClientPublishColiseumStatDelta)
		.def("ShowColiseumDefeatedScreen", &AWillowPlayerController::ShowColiseumDefeatedScreen)
		.def("ShowColiseumVictoryScreen", &AWillowPlayerController::ShowColiseumVictoryScreen)
		.def("IsEveryoneSignedIn", &AWillowPlayerController::IsEveryoneSignedIn)
		.def("ClientColiseumNotify", &AWillowPlayerController::ClientColiseumNotify)
		.def("ClientRuleAnnounce", &AWillowPlayerController::ClientRuleAnnounce)
		.def("ClientRoundAnnounce", &AWillowPlayerController::ClientRoundAnnounce)
		.def("BeginRoundAnnounce", &AWillowPlayerController::BeginRoundAnnounce)
		.def("ClientStartColiseumTimer", &AWillowPlayerController::ClientStartColiseumTimer)
		.def("ClientCloseColiseumOverlay", &AWillowPlayerController::ClientCloseColiseumOverlay)
		.def("ClientUpdateColiseumRule", &AWillowPlayerController::ClientUpdateColiseumRule)
		.def("GetBankUpgradeSlots", &AWillowPlayerController::GetBankUpgradeSlots)
		.def("GetFullInventory", &AWillowPlayerController::GetFullInventory)
		.def("SaveScreenShotOfItemCard", &AWillowPlayerController::SaveScreenShotOfItemCard)
		.def("FastAI", &AWillowPlayerController::FastAI)
		.def("OnConnectionFailed_Click", &AWillowPlayerController::OnConnectionFailed_Click)
		.def("OnConnectionCancel_Click", &AWillowPlayerController::OnConnectionCancel_Click)
		.def("OnConnectionFailed", &AWillowPlayerController::OnConnectionFailed)
		.def("ClearInviteDelegates", &AWillowPlayerController::ClearInviteDelegates)
		.def("UpdateConnecting", &AWillowPlayerController::UpdateConnecting)
		.def("SetRemainingConnectionDuration", &AWillowPlayerController::SetRemainingConnectionDuration)
		.def("HideConnectingDialog", &AWillowPlayerController::HideConnectingDialog)
		.def("ShowConnectingDialog", &AWillowPlayerController::ShowConnectingDialog)
		.def("PlaySpecialHUDSound", &AWillowPlayerController::PlaySpecialHUDSound)
		.def("CanAllPlayersPlayOnline", &AWillowPlayerController::CanAllPlayersPlayOnline)
		.def("ClientReceiveInteractiveObjectDefinition_HACK", &AWillowPlayerController::ClientReceiveInteractiveObjectDefinition_HACK)
		.def("ServerSendInteractiveObjectDefinition_HACK", &AWillowPlayerController::ServerSendInteractiveObjectDefinition_HACK)
		.def("IsInactiveController", &AWillowPlayerController::IsInactiveController)
		.def("OnConfirmKickPlayersForInvite", &AWillowPlayerController::OnConfirmKickPlayersForInvite)
		.def("OnKickNetworkedPlayersForInvite_Confirm", &AWillowPlayerController::OnKickNetworkedPlayersForInvite_Confirm)
		.def("OnConfirmPS3Controller", &AWillowPlayerController::OnConfirmPS3Controller)
		.def("OnGameInviteAcceptedCheckController", &AWillowPlayerController::OnGameInviteAcceptedCheckController)
		.def("GameHasNonLocalPlayers", &AWillowPlayerController::GameHasNonLocalPlayers)
		.def("NonPrimaryOnGameInviteAccepted", &AWillowPlayerController::NonPrimaryOnGameInviteAccepted)
		.def("InnerOnGameInviteAcceptedP", &AWillowPlayerController::InnerOnGameInviteAcceptedP)
		.def("NeedsCompatibilityContent", &AWillowPlayerController::NeedsCompatibilityContent)
		.def("PreInviteSaveAllPlayersComplete", &AWillowPlayerController::PreInviteSaveAllPlayersComplete)
		.def("OnDownloadPatcherFilesForInvite", &AWillowPlayerController::OnDownloadPatcherFilesForInvite)
		.def("PostDlcRefreshForInvite", &AWillowPlayerController::PostDlcRefreshForInvite)
		.def("OnUninstalledDlcInvite_Click", &AWillowPlayerController::OnUninstalledDlcInvite_Click)
		.def("DlcRefreshCompleteFromBusy", &AWillowPlayerController::DlcRefreshCompleteFromBusy)
		.def("OnGameInviteAcceptedP", &AWillowPlayerController::OnGameInviteAcceptedP)
		.def("DlcPreInviteRefreshCompleteCorruptConent", &AWillowPlayerController::DlcPreInviteRefreshCompleteCorruptConent)
		.def("DlcPreInviteRefreshComplete", &AWillowPlayerController::DlcPreInviteRefreshComplete)
		.def("ShowCorruptDlcOkBox", &AWillowPlayerController::ShowCorruptDlcOkBox)
		.def("OnButtonClicked", &AWillowPlayerController::OnButtonClicked)
		.def("NotifyGameInviteProcessingStarted", &AWillowPlayerController::NotifyGameInviteProcessingStarted)
		.def("SetResurrectionRule", &AWillowPlayerController::SetResurrectionRule)
		.def("AllPlayersSaved", &AWillowPlayerController::AllPlayersSaved)
		.def("SaveNextPlayer", &AWillowPlayerController::SaveNextPlayer)
		.def("SavePlayer", &AWillowPlayerController::SavePlayer)
		.def("SaveAllPlayers", &AWillowPlayerController::SaveAllPlayers)
		.def("OnSaveComplete", &AWillowPlayerController::OnSaveComplete)
		.def("UnpauseEcho", &AWillowPlayerController::UnpauseEcho)
		.def("PauseEcho", &AWillowPlayerController::PauseEcho)
		.def("SetPause", &AWillowPlayerController::SetPause)
		.def("SetTextureMoviePauseState", &AWillowPlayerController::SetTextureMoviePauseState)
		.def("VerifySkillRespec_Clicked", &AWillowPlayerController::VerifySkillRespec_Clicked)
		.def("VerifySkillRespec", &AWillowPlayerController::VerifySkillRespec)
		.def("OnInviteJoinComplete", &AWillowPlayerController::OnInviteJoinComplete)
		.def("InstantJoinOnlineGame", &AWillowPlayerController::InstantJoinOnlineGame)
		.def("OnDestroyForInviteComplete", &AWillowPlayerController::OnDestroyForInviteComplete)
		.def("CanSaveGame", &AWillowPlayerController::CanSaveGame)
		.def("ResetPlayerInputToDefault", &AWillowPlayerController::ResetPlayerInputToDefault)
		.def("UpdateHUDCachedXPValue", &AWillowPlayerController::UpdateHUDCachedXPValue)
		.def("TestTrainingText", &AWillowPlayerController::TestTrainingText)
		.def("GetMissionDescriptionForUI", &AWillowPlayerController::GetMissionDescriptionForUI, py::return_value_policy::reference)
		.def("SystemIsSetToKOROrJPNLocale", &AWillowPlayerController::SystemIsSetToKOROrJPNLocale)
		.def("CanUnpauseExternalUI", &AWillowPlayerController::CanUnpauseExternalUI)
		.def("UpdateAmmoCounts", &AWillowPlayerController::UpdateAmmoCounts)
		.def("ListFriends", &AWillowPlayerController::ListFriends)
		.def("msg", &AWillowPlayerController::msg)
		.def("ForceUnloadStreamingLevels", &AWillowPlayerController::ForceUnloadStreamingLevels)
		.def("OnJoinGameComplete", &AWillowPlayerController::OnJoinGameComplete)
		.def("JoinFriendGame", &AWillowPlayerController::JoinFriendGame)
		.def("IsPlayerInMyGame", &AWillowPlayerController::IsPlayerInMyGame)
		.def("GetFriendByName", &AWillowPlayerController::GetFriendByName)
		.def("eventTeamMessage", &AWillowPlayerController::eventTeamMessage)
		.def("ListNetPackages", &AWillowPlayerController::ListNetPackages)
		.def("ListStations", &AWillowPlayerController::ListStations)
		.def("OnPrimaryPlayerBusyDelay", &AWillowPlayerController::OnPrimaryPlayerBusyDelay)
		.def("GetWaitingForStorageSelectionFailure", &AWillowPlayerController::GetWaitingForStorageSelectionFailure)
		.def("SetWaitingForStorageSelectionFailure", &AWillowPlayerController::SetWaitingForStorageSelectionFailure)
		.def("GetWaitingForStorageSelection", &AWillowPlayerController::GetWaitingForStorageSelection)
		.def("SetWaitingForStorageSelection", &AWillowPlayerController::SetWaitingForStorageSelection)
		.def("GetWantsToShowStorageMenu", &AWillowPlayerController::GetWantsToShowStorageMenu)
		.def("SetWantsToShowStorageMenu", &AWillowPlayerController::SetWantsToShowStorageMenu)
		.def("SetActionSkillTime", &AWillowPlayerController::SetActionSkillTime)
		.def("PreOnGameInviteAccepted", &AWillowPlayerController::PreOnGameInviteAccepted)
		.def("GetPlayerLoot", &AWillowPlayerController::GetPlayerLoot)
		.def("RefreshHUD", &AWillowPlayerController::RefreshHUD)
		.def("KillHUD", &AWillowPlayerController::KillHUD)
		.def("CanSetResourcePoolValues", &AWillowPlayerController::CanSetResourcePoolValues)
		.def("PauseDayCycle", &AWillowPlayerController::PauseDayCycle)
		.def("OnMarkExitedRegion", &AWillowPlayerController::OnMarkExitedRegion)
		.def("OnMarkEnteredRegion", &AWillowPlayerController::OnMarkEnteredRegion)
		.def("ConditionalUnlockViralAchievement", &AWillowPlayerController::ConditionalUnlockViralAchievement)
		.def("CanSpreadViralAchievement", &AWillowPlayerController::CanSpreadViralAchievement)
		.def("NotifyKilledEnemy", &AWillowPlayerController::NotifyKilledEnemy)
		.def("ShouldAllowExternalUIPause", &AWillowPlayerController::ShouldAllowExternalUIPause)
		.def("OnExternalUIChanged", &AWillowPlayerController::OnExternalUIChanged)
		.def("CheckCanPauseFromExternalUINow", &AWillowPlayerController::CheckCanPauseFromExternalUINow)
		.def("MarkLog", &AWillowPlayerController::MarkLog)
		.def("ToggleCoopRangeDebug", &AWillowPlayerController::ToggleCoopRangeDebug)
		.def("eventGetLoginStatus", &AWillowPlayerController::eventGetLoginStatus)
		.def("eventGetFOVAngleForeground", &AWillowPlayerController::eventGetFOVAngleForeground)
		.def("GetActiveOrBestWeapon", &AWillowPlayerController::GetActiveOrBestWeapon, py::return_value_policy::reference)
		.def("ModalGameMenuClosing", &AWillowPlayerController::ModalGameMenuClosing)
		.def("ModalGameMenuOpening", &AWillowPlayerController::ModalGameMenuOpening)
		.def("SetViewDistance", &AWillowPlayerController::SetViewDistance)
		.def("SetGlobalViewDistance", &AWillowPlayerController::SetGlobalViewDistance)
		.def("SetZoomToggle", &AWillowPlayerController::SetZoomToggle)
		.def("SetTradingDisabled", &AWillowPlayerController::SetTradingDisabled)
		.def("SetInvertedReverseSteering", &AWillowPlayerController::SetInvertedReverseSteering)
		.def("SetDriftCameraLock", &AWillowPlayerController::SetDriftCameraLock)
		.def("SetCrouchToggle", &AWillowPlayerController::SetCrouchToggle)
		.def("SetMouseAutoAim", &AWillowPlayerController::SetMouseAutoAim)
		.def("SetAutoAim", &AWillowPlayerController::SetAutoAim)
		.def("eventDisplaySkillPointsPrompt", &AWillowPlayerController::eventDisplaySkillPointsPrompt)
		.def("eventDisplayCompatDlcAvailable", &AWillowPlayerController::eventDisplayCompatDlcAvailable)
		.def("OnSplitJoinDeviceSelectionComplete", &AWillowPlayerController::OnSplitJoinDeviceSelectionComplete)
		.def("StartupLoadLastSaveGameComplete", &AWillowPlayerController::StartupLoadLastSaveGameComplete)
		.def("StartupLoadLastSaveGame", &AWillowPlayerController::StartupLoadLastSaveGame)
		.def("StartupCheckSaveGamesAvailableComplete", &AWillowPlayerController::StartupCheckSaveGamesAvailableComplete)
		.def("StartupDeviceSelectionComplete", &AWillowPlayerController::StartupDeviceSelectionComplete)
		.def("DoStartupDeviceSelection", &AWillowPlayerController::DoStartupDeviceSelection)
		.def("OnStartupDeviceSelectionComplete", &AWillowPlayerController::OnStartupDeviceSelectionComplete)
		.def("NoDeviceSelected_Clicked", &AWillowPlayerController::NoDeviceSelected_Clicked)
		.def("DeviceSelection_GuestLogin_Clicked", &AWillowPlayerController::DeviceSelection_GuestLogin_Clicked)
		.def("DeviceSelection_NotLoggedIn_Clicked", &AWillowPlayerController::DeviceSelection_NotLoggedIn_Clicked)
		.def("SetDoneInitialDeviceSelection", &AWillowPlayerController::SetDoneInitialDeviceSelection)
		.def("HasDoneInitialDeviceSelection", &AWillowPlayerController::HasDoneInitialDeviceSelection)
		.def("DoDeviceSelection", &AWillowPlayerController::DoDeviceSelection)
		.def("DoInitialDeviceSelection", &AWillowPlayerController::DoInitialDeviceSelection)
		.def("TriggerDeviceSelectionProcessCompleteDelegate", &AWillowPlayerController::TriggerDeviceSelectionProcessCompleteDelegate)
		.def("OnDeviceSelectionProcessComplete", &AWillowPlayerController::OnDeviceSelectionProcessComplete)
		.def("eventDeviceSelectionDone", &AWillowPlayerController::eventDeviceSelectionDone)
		.def("ShowStorageDeviceSelector", &AWillowPlayerController::ShowStorageDeviceSelector)
		.def("StorageRemoved_Clicked", &AWillowPlayerController::StorageRemoved_Clicked)
		.def("OnStorageRemovedInputKey", &AWillowPlayerController::OnStorageRemovedInputKey)
		.def("eventDisplayStorageRemovedMenu", &AWillowPlayerController::eventDisplayStorageRemovedMenu)
		.def("IsCurrentStorageDeviceValid", &AWillowPlayerController::IsCurrentStorageDeviceValid)
		.def("SetHasSaveGamesAvailable", &AWillowPlayerController::SetHasSaveGamesAvailable)
		.def("GetHasSaveGamesAvailable", &AWillowPlayerController::GetHasSaveGamesAvailable)
		.def("NotifyStorageDeviceChange", &AWillowPlayerController::NotifyStorageDeviceChange)
		.def("GetStorageDeviceID", &AWillowPlayerController::GetStorageDeviceID)
		.def("ShowDeviceSelection", &AWillowPlayerController::ShowDeviceSelection)
		.def("SetStorageDeviceID", &AWillowPlayerController::SetStorageDeviceID)
		.def("NotifyDeviceSelectComplete", &AWillowPlayerController::NotifyDeviceSelectComplete)
		.def("DeveloperCompleteAllChallengesToLevel", &AWillowPlayerController::DeveloperCompleteAllChallengesToLevel)
		.def("ServerDeveloperCompleteAllChallengesToLevel", &AWillowPlayerController::ServerDeveloperCompleteAllChallengesToLevel)
		.def("DeveloperGiveCurrency", &AWillowPlayerController::DeveloperGiveCurrency)
		.def("ServerDeveloperGiveCurrency", &AWillowPlayerController::ServerDeveloperGiveCurrency)
		.def("DeveloperGiveEridium", &AWillowPlayerController::DeveloperGiveEridium)
		.def("DeveloperGiveCash", &AWillowPlayerController::DeveloperGiveCash)
		.def("DeveloperFreeLevels", &AWillowPlayerController::DeveloperFreeLevels)
		.def("ServerDeveloperFreeLevels", &AWillowPlayerController::ServerDeveloperFreeLevels)
		.def("eventIsDeveloper", &AWillowPlayerController::eventIsDeveloper)
		.def("GetHighestSaveGameComplete", &AWillowPlayerController::GetHighestSaveGameComplete)
		.def("CheckHighestSaveGameIdForSplitScreen", &AWillowPlayerController::CheckHighestSaveGameIdForSplitScreen)
		.def("GetHighestSaveGameId", &AWillowPlayerController::GetHighestSaveGameId)
		.def("AddMissionPlaythrough", &AWillowPlayerController::AddMissionPlaythrough)
		.def("AddPlaythrough", &AWillowPlayerController::AddPlaythrough)
		.def("eventGetSplitscreenIndex", &AWillowPlayerController::eventGetSplitscreenIndex)
		.def("GetCurrentPlaythrough", &AWillowPlayerController::GetCurrentPlaythrough)
		.def("OnPlaythroughAlmostComplete", &AWillowPlayerController::OnPlaythroughAlmostComplete)
		.def("OnPlaythroughCompleted", &AWillowPlayerController::OnPlaythroughCompleted)
		.def("GetCharacterDefaultNameFromClassDefinition", &AWillowPlayerController::GetCharacterDefaultNameFromClassDefinition, py::return_value_policy::reference)
		.def("GetCharacterClassDefaultName", &AWillowPlayerController::GetCharacterClassDefaultName, py::return_value_policy::reference)
		.def("GetPlayerUIColorPreference", &AWillowPlayerController::GetPlayerUIColorPreference)
		.def("GetPlayerUINamePreference", &AWillowPlayerController::GetPlayerUINamePreference)
		.def("GetPlayerUIPreferences", &AWillowPlayerController::GetPlayerUIPreferences)
		.def("ApplyPreferredColors", &AWillowPlayerController::ApplyPreferredColors)
		.def("ServerApplyPreferredColors", &AWillowPlayerController::ServerApplyPreferredColors)
		.def("SetPlayerUIPreferences", &AWillowPlayerController::SetPlayerUIPreferences)
		.def("SetPlayerUINamePreference", &AWillowPlayerController::SetPlayerUINamePreference)
		.def("UnregisterSkillTreeResetDelegate", &AWillowPlayerController::UnregisterSkillTreeResetDelegate)
		.def("RegisterSkillTreeResetDelegate", &AWillowPlayerController::RegisterSkillTreeResetDelegate)
		.def("FireSkillPointsChangedDelegates", &AWillowPlayerController::FireSkillPointsChangedDelegates)
		.def("UnregisterSkillPointsChangedDelegate", &AWillowPlayerController::UnregisterSkillPointsChangedDelegate)
		.def("RegisterSkillPointsChangedDelegate", &AWillowPlayerController::RegisterSkillPointsChangedDelegate)
		.def("UnregisterSkillGradeChangedDelegate", &AWillowPlayerController::UnregisterSkillGradeChangedDelegate)
		.def("RegisterSkillGradeChangedDelegate", &AWillowPlayerController::RegisterSkillGradeChangedDelegate)
		.def("eventServerTeleportPlayerToStation", &AWillowPlayerController::eventServerTeleportPlayerToStation)
		.def("eventTeleportPlayerToStation", &AWillowPlayerController::eventTeleportPlayerToStation)
		.def("ClientReturnToTitleScreen", &AWillowPlayerController::ClientReturnToTitleScreen)
		.def("EnableListenServer", &AWillowPlayerController::EnableListenServer)
		.def("CreateListenServer", &AWillowPlayerController::CreateListenServer)
		.def("eventCreateLanGame", &AWillowPlayerController::eventCreateLanGame)
		.def("eventCreateOnlineGame", &AWillowPlayerController::eventCreateOnlineGame)
		.def("eventCreateOnlineOrLanGame", &AWillowPlayerController::eventCreateOnlineOrLanGame)
		.def("CreateGame", &AWillowPlayerController::CreateGame)
		.def("ClientSetRestartPlayerAfterLogin", &AWillowPlayerController::ClientSetRestartPlayerAfterLogin)
		.def("openlArg", &AWillowPlayerController::openlArg)
		.def("openl", &AWillowPlayerController::openl)
		.def("GFxMenuClosed", &AWillowPlayerController::GFxMenuClosed)
		.def("GFxMenuOpened", &AWillowPlayerController::GFxMenuOpened)
		.def("eventUpdateClassModNamePart", &AWillowPlayerController::eventUpdateClassModNamePart)
		.def("EquipWeaponFromSlot", &AWillowPlayerController::EquipWeaponFromSlot)
		.def("GetInventoryLists", &AWillowPlayerController::GetInventoryLists)
		.def("FixAllItemsList", &AWillowPlayerController::FixAllItemsList)
		.def("CanKillSkillIconsBeDisplayedFromVehicles", &AWillowPlayerController::CanKillSkillIconsBeDisplayedFromVehicles)
		.def("ToggleKillSkillsDisplay", &AWillowPlayerController::ToggleKillSkillsDisplay)
		.def("ForceKillSkillsOff", &AWillowPlayerController::ForceKillSkillsOff)
		.def("eventUpdateKillSkills", &AWillowPlayerController::eventUpdateKillSkills)
		.def("TickTargets", &AWillowPlayerController::TickTargets)
		.def("NotifyInstinctSkillAction", &AWillowPlayerController::NotifyInstinctSkillAction)
		.def("CanResetActionSkill", &AWillowPlayerController::CanResetActionSkill)
		.def("ResetActionSkill", &AWillowPlayerController::ResetActionSkill)
		.def("Behavior_ResetActionSkillCooldown", &AWillowPlayerController::Behavior_ResetActionSkillCooldown)
		.def("ConditionalResetInterruptedActionSkill", &AWillowPlayerController::ConditionalResetInterruptedActionSkill)
		.def("ResetSkillCooldown", &AWillowPlayerController::ResetSkillCooldown)
		.def("GetSkillCooldownTimeRemaining", &AWillowPlayerController::GetSkillCooldownTimeRemaining)
		.def("GetSkillCooldownTime", &AWillowPlayerController::GetSkillCooldownTime)
		.def("StartActiveSkillCooldown", &AWillowPlayerController::StartActiveSkillCooldown)
		.def("GetPreferredWeaponType", &AWillowPlayerController::GetPreferredWeaponType, py::return_value_policy::reference)
		.def("eventClientFindPlayMovie", &AWillowPlayerController::eventClientFindPlayMovie)
		.def("GetPlayerMasterPlayerController", &AWillowPlayerController::GetPlayerMasterPlayerController, py::return_value_policy::reference)
		.def("IsActionSkillCoolingDown", &AWillowPlayerController::IsActionSkillCoolingDown)
		.def("IsActionSkillOnCooldown", &AWillowPlayerController::IsActionSkillOnCooldown)
		.def("GetReplicatedInstanceDataState", &AWillowPlayerController::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &AWillowPlayerController::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &AWillowPlayerController::DestroyOwnedInstanceData)
		.def("eventRemoveInstanceDataObject", &AWillowPlayerController::eventRemoveInstanceDataObject)
		.def("eventRemoveInstanceData", &AWillowPlayerController::eventRemoveInstanceData)
		.def("eventGetInstanceData", &AWillowPlayerController::eventGetInstanceData)
		.def("SetInstanceData", &AWillowPlayerController::SetInstanceData)
		.def("GetInstanceDataPawn", &AWillowPlayerController::GetInstanceDataPawn, py::return_value_policy::reference)
		.def("IncreaseStatForAllPlayers", &AWillowPlayerController::IncreaseStatForAllPlayers)
		.def("ServerUnlockAchievementForAllPlayers", &AWillowPlayerController::ServerUnlockAchievementForAllPlayers)
		.def("Behavior_UnlockAchievementForAllPlayers", &AWillowPlayerController::Behavior_UnlockAchievementForAllPlayers)
		.def("Behavior_UnlockAchievement", &AWillowPlayerController::Behavior_UnlockAchievement)
		.def("ApplySkidCameraLurch", &AWillowPlayerController::ApplySkidCameraLurch)
		.def("EndSprint", &AWillowPlayerController::EndSprint)
		.def("BeginSprint", &AWillowPlayerController::BeginSprint)
		.def("CalculateInverseFlexibleFOVModifier", &AWillowPlayerController::CalculateInverseFlexibleFOVModifier)
		.def("CalculateInverseFlexibleFOV", &AWillowPlayerController::CalculateInverseFlexibleFOV)
		.def("CalculateFlexibleFOVModifier", &AWillowPlayerController::CalculateFlexibleFOVModifier)
		.def("CalculateFlexibleFOV", &AWillowPlayerController::CalculateFlexibleFOV)
		.def("GetVerticalDefaultDefaultFOV", &AWillowPlayerController::GetVerticalDefaultDefaultFOV)
		.def("GetDefaultDefaultFOV", &AWillowPlayerController::GetDefaultDefaultFOV)
		.def("eventGetUnmodifiedFOVAngle", &AWillowPlayerController::eventGetUnmodifiedFOVAngle)
		.def("DisplayStationDiscoveryIfNecessary", &AWillowPlayerController::DisplayStationDiscoveryIfNecessary)
		.def("SaveAtStationIfNecessary", &AWillowPlayerController::SaveAtStationIfNecessary)
		.def("ClientNotifySomeoneTouchedStation", &AWillowPlayerController::ClientNotifySomeoneTouchedStation)
		.def("Behavior_RegisterStationDefinition", &AWillowPlayerController::Behavior_RegisterStationDefinition)
		.def("Behavior_RegisterStation", &AWillowPlayerController::Behavior_RegisterStation)
		.def("RegisterStationForPlayer", &AWillowPlayerController::RegisterStationForPlayer)
		.def("IsStationDiscovered", &AWillowPlayerController::IsStationDiscovered)
		.def("eventRegisterStation", &AWillowPlayerController::eventRegisterStation)
		.def("FindActiveStationsForLevel", &AWillowPlayerController::FindActiveStationsForLevel)
		.def("eventFindInitiallyActiveStations", &AWillowPlayerController::eventFindInitiallyActiveStations)
		.def("StopMovie", &AWillowPlayerController::StopMovie)
		.def("PlayMovie", &AWillowPlayerController::PlayMovie)
		.def("ServerSendMessageToPlayers", &AWillowPlayerController::ServerSendMessageToPlayers)
		.def("Behavior_SendMessageToPlayers", &AWillowPlayerController::Behavior_SendMessageToPlayers)
		.def("eventReceiveLocalizedAmmoMessage", &AWillowPlayerController::eventReceiveLocalizedAmmoMessage)
		.def("eventReceiveLocalizedCreditMessage", &AWillowPlayerController::eventReceiveLocalizedCreditMessage)
		.def("eventReceiveLocalizedItemMessage", &AWillowPlayerController::eventReceiveLocalizedItemMessage)
		.def("eventReceiveLocalizedWeaponMessage", &AWillowPlayerController::eventReceiveLocalizedWeaponMessage)
		.def("eventReceiveLocalizedTrainingDefinitionMessage", &AWillowPlayerController::eventReceiveLocalizedTrainingDefinitionMessage)
		.def("CheckPendingClientTrainingMessages", &AWillowPlayerController::CheckPendingClientTrainingMessages)
		.def("QueueClientTrainingMessage", &AWillowPlayerController::QueueClientTrainingMessage)
		.def("CanReceiveTrainingMessage", &AWillowPlayerController::CanReceiveTrainingMessage)
		.def("eventReceiveLocalizedInventoryRefreshMessage", &AWillowPlayerController::eventReceiveLocalizedInventoryRefreshMessage)
		.def("eventWarmupPause", &AWillowPlayerController::eventWarmupPause)
		.def("CanUnpauseWarmup", &AWillowPlayerController::CanUnpauseWarmup)
		.def("SetLoadingMovieSkipEnabled", &AWillowPlayerController::SetLoadingMovieSkipEnabled)
		.def("eventClientPlayBinkMovie", &AWillowPlayerController::eventClientPlayBinkMovie)
		.def("eventWillowClientDisableLoadingMovie", &AWillowPlayerController::eventWillowClientDisableLoadingMovie)
		.def("eventWillowClientShowLoadingMovie", &AWillowPlayerController::eventWillowClientShowLoadingMovie)
		.def("WillowShowLoadingMovie", &AWillowPlayerController::WillowShowLoadingMovie)
		.def("InitializeGFxUIManager", &AWillowPlayerController::InitializeGFxUIManager)
		.def("ClientCloseLobby", &AWillowPlayerController::ClientCloseLobby)
		.def("StartActionSkill", &AWillowPlayerController::StartActionSkill)
		.def("TryOpenCharacterSelectUI", &AWillowPlayerController::TryOpenCharacterSelectUI)
		.def("ClientNotifyPostinitialize", &AWillowPlayerController::ClientNotifyPostinitialize)
		.def("ClientSetHUD", &AWillowPlayerController::ClientSetHUD)
		.def("IsCurrentLevelInTheGame", &AWillowPlayerController::IsCurrentLevelInTheGame)
		.def("ClientGFxStopMovie", &AWillowPlayerController::ClientGFxStopMovie)
		.def("ClientGFxPlayMovie", &AWillowPlayerController::ClientGFxPlayMovie)
		.def("ClientGFxChangeState", &AWillowPlayerController::ClientGFxChangeState)
		.def("ReadSaveGamesComplete", &AWillowPlayerController::ReadSaveGamesComplete)
		.def("LoadGameFromLoadInfo", &AWillowPlayerController::LoadGameFromLoadInfo)
		.def("GetSaveGameList", &AWillowPlayerController::GetSaveGameList)
		.def("CheckSaveGamesAvailableCompleted", &AWillowPlayerController::CheckSaveGamesAvailableCompleted)
		.def("ReadSaveGameListComplete", &AWillowPlayerController::ReadSaveGameListComplete)
		.def("CheckPS3ReadSaveGameListComplete", &AWillowPlayerController::CheckPS3ReadSaveGameListComplete)
		.def("CheckSaveGamesAvailable", &AWillowPlayerController::CheckSaveGamesAvailable)
		.def("OnCheckSaveGamesAvailableComplete", &AWillowPlayerController::OnCheckSaveGamesAvailableComplete)
		.def("ClientDamageShake", &AWillowPlayerController::ClientDamageShake)
		.def("UpdateVisibilityOfAllActiveScreenParticles", &AWillowPlayerController::UpdateVisibilityOfAllActiveScreenParticles)
		.def("ScreenParticlesShouldBeVisible", &AWillowPlayerController::ScreenParticlesShouldBeVisible)
		.def("SetUpVoGScreenParticle", &AWillowPlayerController::SetUpVoGScreenParticle)
		.def("eventHideScreenParticle", &AWillowPlayerController::eventHideScreenParticle)
		.def("ApplyScreenParticleModifiers", &AWillowPlayerController::ApplyScreenParticleModifiers)
		.def("FindScreenParticleRecordIndexByTag", &AWillowPlayerController::FindScreenParticleRecordIndexByTag)
		.def("FindScreenParticleRecordIndexByTemplate", &AWillowPlayerController::FindScreenParticleRecordIndexByTemplate)
		.def("OnScreenParticleSystemFinished", &AWillowPlayerController::OnScreenParticleSystemFinished)
		.def("eventShowScreenParticle", &AWillowPlayerController::eventShowScreenParticle)
		.def("TickScreenParticleModifiers", &AWillowPlayerController::TickScreenParticleModifiers)
		.def("NotifyTargetedActionSkillImpact", &AWillowPlayerController::NotifyTargetedActionSkillImpact)
		.def("NotifyPetKilledEnemy", &AWillowPlayerController::NotifyPetKilledEnemy)
		.def("NotifyActionSkillRunTime", &AWillowPlayerController::NotifyActionSkillRunTime)
		.def("eventClientUnlockAvatarAward", &AWillowPlayerController::eventClientUnlockAvatarAward)
		.def("eventClientUnlockAchievement", &AWillowPlayerController::eventClientUnlockAchievement)
		.def("OnUnlockAchievement", &AWillowPlayerController::OnUnlockAchievement)
		.def("UnPauseGFxMovie", &AWillowPlayerController::UnPauseGFxMovie)
		.def("PauseGFxMovie", &AWillowPlayerController::PauseGFxMovie)
		.def("CloseGfxMovie", &AWillowPlayerController::CloseGfxMovie)
		.def("StartPausedGfxMovie", &AWillowPlayerController::StartPausedGfxMovie)
		.def("PlayGfxMovie", &AWillowPlayerController::PlayGfxMovie)
		.def("PlayGfxMovieDefinition", &AWillowPlayerController::PlayGfxMovieDefinition)
		.def("eventServerTryToTeleportToVehicle", &AWillowPlayerController::eventServerTryToTeleportToVehicle)
		.def("EnsureWeaponsUp", &AWillowPlayerController::EnsureWeaponsUp)
		.def("DelayedTeleportToVehicle", &AWillowPlayerController::DelayedTeleportToVehicle)
		.def("eventDespawnVehicleFromConnectedVehicleSpawnStationTerminal", &AWillowPlayerController::eventDespawnVehicleFromConnectedVehicleSpawnStationTerminal)
		.def("eventSpawnVehicleFromConnectedVehicleSpawnStationTerminal", &AWillowPlayerController::eventSpawnVehicleFromConnectedVehicleSpawnStationTerminal)
		.def("eventServerStopUsingVehicleSpawnStationTerminal", &AWillowPlayerController::eventServerStopUsingVehicleSpawnStationTerminal)
		.def("StopUsingVehicleSpawnStationTerminal", &AWillowPlayerController::StopUsingVehicleSpawnStationTerminal)
		.def("StartUsingVehicleSpawnStationTerminal", &AWillowPlayerController::StartUsingVehicleSpawnStationTerminal)
		.def("OutOfDuelBounds", &AWillowPlayerController::OutOfDuelBounds)
		.def("SetDuelingEnabled", &AWillowPlayerController::SetDuelingEnabled)
		.def("SetHearOptionalPlayerVO", &AWillowPlayerController::SetHearOptionalPlayerVO)
		.def("EnterStartState", &AWillowPlayerController::EnterStartState)
		.def("HasCachedSaveGame", &AWillowPlayerController::HasCachedSaveGame)
		.def("eventGetCachedSaveGame", &AWillowPlayerController::eventGetCachedSaveGame, py::return_value_policy::reference)
		.def("ClearRestartPlayerAfterLoginForAllLocalPlayers", &AWillowPlayerController::ClearRestartPlayerAfterLoginForAllLocalPlayers)
		.def("OnDestroyGameForReturnToTitleComplete", &AWillowPlayerController::OnDestroyGameForReturnToTitleComplete)
		.def("OnEndGameForReturnToTitleComplete", &AWillowPlayerController::OnEndGameForReturnToTitleComplete)
		.def("ReturnToTitleScreenAfterSave", &AWillowPlayerController::ReturnToTitleScreenAfterSave)
		.def("ReturnToTitleScreen", &AWillowPlayerController::ReturnToTitleScreen)
		.def("ClearGameInviteDelegates", &AWillowPlayerController::ClearGameInviteDelegates)
		.def("GetGamePlayerIndex", &AWillowPlayerController::GetGamePlayerIndex)
		.def("NotifyLoginChange", &AWillowPlayerController::NotifyLoginChange)
		.def("NotifyUILoginStatusChange", &AWillowPlayerController::NotifyUILoginStatusChange)
		.def("OnDownloadPatcherFilesBeforeRestore", &AWillowPlayerController::OnDownloadPatcherFilesBeforeRestore)
		.def("HandleLoginStatusChange", &AWillowPlayerController::HandleLoginStatusChange)
		.def("NotifyLoginStatusChange", &AWillowPlayerController::NotifyLoginStatusChange)
		.def("HandleSignInChange", &AWillowPlayerController::HandleSignInChange)
		.def("CleanUpPlayerForTitleScreen", &AWillowPlayerController::CleanUpPlayerForTitleScreen)
		.def("GetNumCompletedMissions", &AWillowPlayerController::GetNumCompletedMissions)
		.def("UpdateWillowProperties", &AWillowPlayerController::UpdateWillowProperties)
		.def("UpdateWillowContexts", &AWillowPlayerController::UpdateWillowContexts)
		.def("InnerSetOnlineStatus", &AWillowPlayerController::InnerSetOnlineStatus)
		.def("ClientSetOnlineStatus", &AWillowPlayerController::ClientSetOnlineStatus)
		.def("ClientSetOnlineStatusAllPlayers", &AWillowPlayerController::ClientSetOnlineStatusAllPlayers)
		.def("IsCurrentGameFull", &AWillowPlayerController::IsCurrentGameFull)
		.def("GetNumPlayers", &AWillowPlayerController::GetNumPlayers)
		.def("OnStopCameraAnim", &AWillowPlayerController::OnStopCameraAnim)
		.def("OnPlayCameraAnim", &AWillowPlayerController::OnPlayCameraAnim)
		.def("WillowClientStopCameraAnim", &AWillowPlayerController::WillowClientStopCameraAnim)
		.def("eventWillowClientPlayCameraAnim", &AWillowPlayerController::eventWillowClientPlayCameraAnim)
		.def("StopAnimSeqCameraAnim", &AWillowPlayerController::StopAnimSeqCameraAnim)
		.def("PlayAnimSeqCameraAnim", &AWillowPlayerController::PlayAnimSeqCameraAnim)
		.def("StopCameraAnim", &AWillowPlayerController::StopCameraAnim)
		.def("PlayCameraAnim", &AWillowPlayerController::PlayCameraAnim)
		.def("TeleportPlayersToTravelStation", &AWillowPlayerController::TeleportPlayersToTravelStation)
		.def("FindTravelStationByDefinition", &AWillowPlayerController::FindTravelStationByDefinition, py::return_value_policy::reference)
		.def("TeleportPlayersToStation", &AWillowPlayerController::TeleportPlayersToStation)
		.def("UpdatePlayerName", &AWillowPlayerController::UpdatePlayerName)
		.def("ServerSetPlayerName", &AWillowPlayerController::ServerSetPlayerName)
		.def("ServerSetIsGuest", &AWillowPlayerController::ServerSetIsGuest)
		.def("RegisterCustomPlayerDataStores", &AWillowPlayerController::RegisterCustomPlayerDataStores)
		.def("InvertMouseLook", &AWillowPlayerController::InvertMouseLook)
		.def("InvertGamepadLook", &AWillowPlayerController::InvertGamepadLook)
		.def("GetProfileSettingInt", &AWillowPlayerController::GetProfileSettingInt)
		.def("SetProfileSettingInt", &AWillowPlayerController::SetProfileSettingInt)
		.def("ClientHandleKickedForNotHavingDlc", &AWillowPlayerController::ClientHandleKickedForNotHavingDlc)
		.def("ClientHandleKicked", &AWillowPlayerController::ClientHandleKicked)
		.def("eventClientWasKicked", &AWillowPlayerController::eventClientWasKicked)
		.def("OnGameInviteAccepted", &AWillowPlayerController::OnGameInviteAccepted)
		.def("GetConnectionFailureNoticeMsg", &AWillowPlayerController::GetConnectionFailureNoticeMsg, py::return_value_policy::reference)
		.def("NotifyUILinkLost", &AWillowPlayerController::NotifyUILinkLost)
		.def("NotifyLinkStatusChange", &AWillowPlayerController::NotifyLinkStatusChange)
		.def("eventReceivedPlayer", &AWillowPlayerController::eventReceivedPlayer)
		.def("PostControllerIdChange", &AWillowPlayerController::PostControllerIdChange)
		.def("PreControllerIdChange", &AWillowPlayerController::PreControllerIdChange)
		.def("ClearOnlineDelegates", &AWillowPlayerController::ClearOnlineDelegates)
		.def("eventGetCharacterSelectMovie", &AWillowPlayerController::eventGetCharacterSelectMovie, py::return_value_policy::reference)
		.def("GetFrontendMovie", &AWillowPlayerController::GetFrontendMovie, py::return_value_policy::reference)
		.def("UpdateLastNewOfferVersion", &AWillowPlayerController::UpdateLastNewOfferVersion)
		.def("AreNewOffersAvailable", &AWillowPlayerController::AreNewOffersAvailable)
		.def("HasSeasonPassContentToInstall", &AWillowPlayerController::HasSeasonPassContentToInstall)
		.def("RegisterOnlineDelegates", &AWillowPlayerController::RegisterOnlineDelegates)
		.def("OnSentGameInvite", &AWillowPlayerController::OnSentGameInvite)
		.def("OnReceivedNewProfile", &AWillowPlayerController::OnReceivedNewProfile)
		.def("TryUpdateProfileCounts", &AWillowPlayerController::TryUpdateProfileCounts)
		.def("OnReadProfileSettingsComplete", &AWillowPlayerController::OnReadProfileSettingsComplete)
		.def("SetAudioGroupVolumesFromProfile", &AWillowPlayerController::SetAudioGroupVolumesFromProfile)
		.def("SetAudioProfileAkRtpc", &AWillowPlayerController::SetAudioProfileAkRtpc)
		.def("UpdateFOVAspectRatioScalar", &AWillowPlayerController::UpdateFOVAspectRatioScalar)
		.def("SetVerticalSplit", &AWillowPlayerController::SetVerticalSplit)
		.def("SetSplitDirectionFromProfile", &AWillowPlayerController::SetSplitDirectionFromProfile)
		.def("SetPlayerFOVFromProfile", &AWillowPlayerController::SetPlayerFOVFromProfile)
		.def("SetGammaFromProfile", &AWillowPlayerController::SetGammaFromProfile)
		.def("HidePS3WritingProfileDialog", &AWillowPlayerController::HidePS3WritingProfileDialog)
		.def("ShowPS3WritingProfileDialog", &AWillowPlayerController::ShowPS3WritingProfileDialog)
		.def("CheckDeferredOperations", &AWillowPlayerController::CheckDeferredOperations)
		.def("SetCheckDeferredOperations", &AWillowPlayerController::SetCheckDeferredOperations)
		.def("eventSetNeedsProfileWrite", &AWillowPlayerController::eventSetNeedsProfileWrite)
		.def("eventGetNeedsProfileWrite", &AWillowPlayerController::eventGetNeedsProfileWrite)
		.def("SetHUDScaleFromProfile", &AWillowPlayerController::SetHUDScaleFromProfile)
		.def("GetPercentToNextToken", &AWillowPlayerController::GetPercentToNextToken)
		.def("SetupBadassInfo", &AWillowPlayerController::SetupBadassInfo)
		.def("ServerUnpackBadassRewardsEarned", &AWillowPlayerController::ServerUnpackBadassRewardsEarned)
		.def("GetBadassRewardsToOfferNext", &AWillowPlayerController::GetBadassRewardsToOfferNext)
		.def("HasEverCalculatedBadassRewardsToOffer", &AWillowPlayerController::HasEverCalculatedBadassRewardsToOffer)
		.def("CalculateBadassRewardGradeBaseline", &AWillowPlayerController::CalculateBadassRewardGradeBaseline)
		.def("CalculateNextBadassRewardsToOffer", &AWillowPlayerController::CalculateNextBadassRewardsToOffer)
		.def("UnpackBadassRewardArray", &AWillowPlayerController::UnpackBadassRewardArray)
		.def("PackBadassRewardArray", &AWillowPlayerController::PackBadassRewardArray)
		.def("ServerSetInvertedReverseSteering", &AWillowPlayerController::ServerSetInvertedReverseSteering)
		.def("ServerSetTradingDisabled", &AWillowPlayerController::ServerSetTradingDisabled)
		.def("ClientSendProfileSettingsToServer", &AWillowPlayerController::ClientSendProfileSettingsToServer)
		.def("SetSettingsFromProfile", &AWillowPlayerController::SetSettingsFromProfile)
		.def("SetControllerRebinding", &AWillowPlayerController::SetControllerRebinding)
		.def("ApplyControllerRebinding", &AWillowPlayerController::ApplyControllerRebinding)
		.def("SetKeyRebinding", &AWillowPlayerController::SetKeyRebinding)
		.def("ApplyKeyRebinding", &AWillowPlayerController::ApplyKeyRebinding)
		.def("SetControllerPreset", &AWillowPlayerController::SetControllerPreset)
		.def("ApplyControllerPreset", &AWillowPlayerController::ApplyControllerPreset)
		.def("SetupInputDevices", &AWillowPlayerController::SetupInputDevices)
		.def("ClientSetupInputDevices", &AWillowPlayerController::ClientSetupInputDevices)
		.def("OnProfileWriteComplete", &AWillowPlayerController::OnProfileWriteComplete)
		.def("eventWriteProfile", &AWillowPlayerController::eventWriteProfile)
		.def("WriteProfileFor", &AWillowPlayerController::WriteProfileFor)
		.def("SetPlayerMovementType", &AWillowPlayerController::SetPlayerMovementType)
		.def("DirtyViewPoint", &AWillowPlayerController::DirtyViewPoint)
		.def("SetGFxMoviesNeedMatrixUpdate", &AWillowPlayerController::SetGFxMoviesNeedMatrixUpdate)
		.def("eventUpdateScaleformHUDVisibility", &AWillowPlayerController::eventUpdateScaleformHUDVisibility)
		.def("OnToggleHUD", &AWillowPlayerController::OnToggleHUD)
		.def("SetCinematicMode", &AWillowPlayerController::SetCinematicMode)
		.def("ClientSetCinematicMode", &AWillowPlayerController::ClientSetCinematicMode)
		.def("eventSetMapChangeCinematicMode", &AWillowPlayerController::eventSetMapChangeCinematicMode)
		.def("eventGetPlayerBodyPawn", &AWillowPlayerController::eventGetPlayerBodyPawn, py::return_value_policy::reference)
		.def("eventClearHUDMessage", &AWillowPlayerController::eventClearHUDMessage)
		.def("IsTrainingEnabled", &AWillowPlayerController::IsTrainingEnabled)
		.def("eventDisplayTrainingMessage", &AWillowPlayerController::eventDisplayTrainingMessage)
		.def("eventDisplayHUDMessage", &AWillowPlayerController::eventDisplayHUDMessage)
		.def("ClearActivePlayerChallenges", &AWillowPlayerController::ClearActivePlayerChallenges)
		.def("eventHandleTrainingEventDefinition", &AWillowPlayerController::eventHandleTrainingEventDefinition)
		.def("eventTrainingEventComplete", &AWillowPlayerController::eventTrainingEventComplete)
		.def("CanDisplayTrainingMessage", &AWillowPlayerController::CanDisplayTrainingMessage)
		.def("ClearActiveStatListeners", &AWillowPlayerController::ClearActiveStatListeners)
		.def("SaveGameStageData", &AWillowPlayerController::SaveGameStageData)
		.def("ApplyGameStageData", &AWillowPlayerController::ApplyGameStageData)
		.def("OnArrivedInNewLevel", &AWillowPlayerController::OnArrivedInNewLevel)
		.def("PlayerHasChallenge", &AWillowPlayerController::PlayerHasChallenge)
		.def("SaveChallengeData", &AWillowPlayerController::SaveChallengeData)
		.def("OnPrestigeResetChallenges_Clicked", &AWillowPlayerController::OnPrestigeResetChallenges_Clicked)
		.def("TryPrestige", &AWillowPlayerController::TryPrestige)
		.def("GetHighestChallengeLevelIncomplete", &AWillowPlayerController::GetHighestChallengeLevelIncomplete)
		.def("GetHighestChallengeLevelComplete", &AWillowPlayerController::GetHighestChallengeLevelComplete)
		.def("IsChallengeComplete", &AWillowPlayerController::IsChallengeComplete)
		.def("IsChallengeLevelCompleteForValue", &AWillowPlayerController::IsChallengeLevelCompleteForValue)
		.def("IsChallengeLevelComplete", &AWillowPlayerController::IsChallengeLevelComplete)
		.def("CanPrestigeResetChallenges", &AWillowPlayerController::CanPrestigeResetChallenges)
		.def("PrestigeResetChallenges", &AWillowPlayerController::PrestigeResetChallenges)
		.def("eventAddChallengeToLocalCache", &AWillowPlayerController::eventAddChallengeToLocalCache)
		.def("ApplyPlayerChallengeData", &AWillowPlayerController::ApplyPlayerChallengeData)
		.def("ClientResetPlayerChallenges", &AWillowPlayerController::ClientResetPlayerChallenges)
		.def("ServerResetPlayerChallenges", &AWillowPlayerController::ServerResetPlayerChallenges)
		.def("StatsAreReady", &AWillowPlayerController::StatsAreReady)
		.def("ResetStatsListeners", &AWillowPlayerController::ResetStatsListeners)
		.def("RegisterStatListener", &AWillowPlayerController::RegisterStatListener)
		.def("eventClientShowChallengeProgressUpdate", &AWillowPlayerController::eventClientShowChallengeProgressUpdate)
		.def("ShowChallengeProgressUpdate", &AWillowPlayerController::ShowChallengeProgressUpdate)
		.def("CheckForChallengeCompletionAchievement", &AWillowPlayerController::CheckForChallengeCompletionAchievement)
		.def("ClientOnChallengeComplete", &AWillowPlayerController::ClientOnChallengeComplete)
		.def("GetPointsForChallenge", &AWillowPlayerController::GetPointsForChallenge)
		.def("GrantChallengeCompletionItemRewards", &AWillowPlayerController::GrantChallengeCompletionItemRewards)
		.def("eventChallengeCompleted", &AWillowPlayerController::eventChallengeCompleted)
		.def("eventDestroyed", &AWillowPlayerController::eventDestroyed)
		.def("StopTeleporterSound", &AWillowPlayerController::StopTeleporterSound)
		.def("PlayTeleporterSound", &AWillowPlayerController::PlayTeleporterSound)
		.def("eventReleaseHolding", &AWillowPlayerController::eventReleaseHolding)
		.def("TryToTeleportIntoVehicle", &AWillowPlayerController::TryToTeleportIntoVehicle)
		.def("HoldingReleaseTimerExpired", &AWillowPlayerController::HoldingReleaseTimerExpired)
		.def("TeleportPlayerToHoldingCell", &AWillowPlayerController::TeleportPlayerToHoldingCell)
		.def("OnTeleport", &AWillowPlayerController::OnTeleport)
		.def("AllDestinationLevelsAreVisible", &AWillowPlayerController::AllDestinationLevelsAreVisible)
		.def("ClientSetPawnLocation", &AWillowPlayerController::ClientSetPawnLocation)
		.def("NoFailSetPawnLocation", &AWillowPlayerController::NoFailSetPawnLocation)
		.def("TeleportPlayer", &AWillowPlayerController::TeleportPlayer)
		.def("Behavior_SpawnTeleporter", &AWillowPlayerController::Behavior_SpawnTeleporter)
		.def("ServerSpawnTeleporter", &AWillowPlayerController::ServerSpawnTeleporter)
		.def("aa_SetLockEnabled", &AWillowPlayerController::aa_SetLockEnabled)
		.def("aa_SetOnMoveOnly", &AWillowPlayerController::aa_SetOnMoveOnly)
		.def("aa_SetTargetSet", &AWillowPlayerController::aa_SetTargetSet)
		.def("tl_DumpList", &AWillowPlayerController::tl_DumpList)
		.def("Behavior_CameraAnim", &AWillowPlayerController::Behavior_CameraAnim)
		.def("Behavior_ViewShake", &AWillowPlayerController::Behavior_ViewShake)
		.def("Behavior_ForceFeedback", &AWillowPlayerController::Behavior_ForceFeedback)
		.def("IsShotForceFeedbackAllowedByPlayerProfile", &AWillowPlayerController::IsShotForceFeedbackAllowedByPlayerProfile)
		.def("ConsumeProjectileResource", &AWillowPlayerController::ConsumeProjectileResource)
		.def("Behavior_SpawnCurrentProjectile", &AWillowPlayerController::Behavior_SpawnCurrentProjectile, py::return_value_policy::reference)
		.def("Behavior_SetCurrentProjectile", &AWillowPlayerController::Behavior_SetCurrentProjectile)
		.def("GetSpawnInstigator", &AWillowPlayerController::GetSpawnInstigator, py::return_value_policy::reference)
		.def("GetProjectileExpLevelFromPlayerLevel", &AWillowPlayerController::GetProjectileExpLevelFromPlayerLevel)
		.def("GetProjectileExpLevelFromEquipmentLevel", &AWillowPlayerController::GetProjectileExpLevelFromEquipmentLevel)
		.def("CheckReload", &AWillowPlayerController::CheckReload)
		.def("CanThrowGrenade", &AWillowPlayerController::CanThrowGrenade)
		.def("CanAffordGrenadeCost", &AWillowPlayerController::CanAffordGrenadeCost)
		.def("WeaponActionComplete", &AWillowPlayerController::WeaponActionComplete)
		.def("GrenadeThrowComplete", &AWillowPlayerController::GrenadeThrowComplete)
		.def("MeleeAttackComplete", &AWillowPlayerController::MeleeAttackComplete)
		.def("ClientNotifyOutOfGrenades", &AWillowPlayerController::ClientNotifyOutOfGrenades)
		.def("ClientThrowGrenade", &AWillowPlayerController::ClientThrowGrenade)
		.def("ThrowGrenade", &AWillowPlayerController::ThrowGrenade)
		.def("ServerThrowGrenade", &AWillowPlayerController::ServerThrowGrenade)
		.def("ThrowGrenadeSkillOverride", &AWillowPlayerController::ThrowGrenadeSkillOverride)
		.def("CanPerformThrowGrenadeSkill", &AWillowPlayerController::CanPerformThrowGrenadeSkill)
		.def("StartThrowGrenadeSkill", &AWillowPlayerController::StartThrowGrenadeSkill)
		.def("ServerStartThrowGrenadeSkill", &AWillowPlayerController::ServerStartThrowGrenadeSkill)
		.def("Behavior_ThrowGrenade", &AWillowPlayerController::Behavior_ThrowGrenade)
		.def("TestMeleeLunge", &AWillowPlayerController::TestMeleeLunge)
		.def("ProcessViewRotation", &AWillowPlayerController::ProcessViewRotation)
		.def("LungeTowardTarget", &AWillowPlayerController::LungeTowardTarget)
		.def("FindMeleeTarget", &AWillowPlayerController::FindMeleeTarget, py::return_value_policy::reference)
		.def("CanLunge", &AWillowPlayerController::CanLunge)
		.def("DetachMeleeWeaponMesh", &AWillowPlayerController::DetachMeleeWeaponMesh)
		.def("AttachMeleeWeaponMesh", &AWillowPlayerController::AttachMeleeWeaponMesh)
		.def("Behavior_DetachMeleeWeapon", &AWillowPlayerController::Behavior_DetachMeleeWeapon)
		.def("Behavior_AttachMeleeWeapon", &AWillowPlayerController::Behavior_AttachMeleeWeapon)
		.def("MeleeAttack", &AWillowPlayerController::MeleeAttack)
		.def("ServerMeleeSelf", &AWillowPlayerController::ServerMeleeSelf)
		.def("ServerMeleeAttack", &AWillowPlayerController::ServerMeleeAttack)
		.def("NotifyActionSkillOwnerMelee", &AWillowPlayerController::NotifyActionSkillOwnerMelee)
		.def("GetPawnAutoAimTarget", &AWillowPlayerController::GetPawnAutoAimTarget, py::return_value_policy::reference)
		.def("ServerNotifyActionSkillOwnerMelee", &AWillowPlayerController::ServerNotifyActionSkillOwnerMelee)
		.def("Behavior_Melee", &AWillowPlayerController::Behavior_Melee)
		.def("PerformSharedWeaponActions", &AWillowPlayerController::PerformSharedWeaponActions)
		.def("ServerPerformReload", &AWillowPlayerController::ServerPerformReload)
		.def("PerformReload", &AWillowPlayerController::PerformReload)
		.def("Behavior_Reload", &AWillowPlayerController::Behavior_Reload)
		.def("eventCanPerformWeaponAction", &AWillowPlayerController::eventCanPerformWeaponAction)
		.def("DebugProjectiles", &AWillowPlayerController::DebugProjectiles)
		.def("ToggleDebugProjectiles", &AWillowPlayerController::ToggleDebugProjectiles)
		.def("GetCurrentProjectileDefinition", &AWillowPlayerController::GetCurrentProjectileDefinition, py::return_value_policy::reference)
		.def("GetCurrentGrenadeMod", &AWillowPlayerController::GetCurrentGrenadeMod, py::return_value_policy::reference)
		.def("OnWeaponsRestrictedChange", &AWillowPlayerController::OnWeaponsRestrictedChange)
		.def("eventSetWeaponsRestricted", &AWillowPlayerController::eventSetWeaponsRestricted)
		.def("eventToggleWeaponsRestricted", &AWillowPlayerController::eventToggleWeaponsRestricted)
		.def("QueryRestricted", &AWillowPlayerController::QueryRestricted)
		.def("CanHoldWeapon", &AWillowPlayerController::CanHoldWeapon)
		.def("eventSetTeleporterRestricted", &AWillowPlayerController::eventSetTeleporterRestricted)
		.def("eventToggleTeleporterRestricted", &AWillowPlayerController::eventToggleTeleporterRestricted)
		.def("GetOnlineGameSearchDatastore", &AWillowPlayerController::GetOnlineGameSearchDatastore, py::return_value_policy::reference)
		.def("GetOnlineGameSettingsDatastore", &AWillowPlayerController::GetOnlineGameSettingsDatastore, py::return_value_policy::reference)
		.def("GetOnlineGameSettingsViaDatastore", &AWillowPlayerController::GetOnlineGameSettingsViaDatastore, py::return_value_policy::reference)
		.def("CanCommunicate", &AWillowPlayerController::CanCommunicate)
		.def("TriggerSplitscreenJoinCompleteDelegates", &AWillowPlayerController::TriggerSplitscreenJoinCompleteDelegates)
		.def("ClearSplitscreenJoinCompleteDelegate", &AWillowPlayerController::ClearSplitscreenJoinCompleteDelegate)
		.def("AddSplitscreenJoinCompleteDelegate", &AWillowPlayerController::AddSplitscreenJoinCompleteDelegate)
		.def("OnSplitscreenJoinComplete", &AWillowPlayerController::OnSplitscreenJoinComplete)
		.def("SplitScreenLeave", &AWillowPlayerController::SplitScreenLeave)
		.def("CheckForSplitPC", &AWillowPlayerController::CheckForSplitPC)
		.def("ClientSplitScreenJoin", &AWillowPlayerController::ClientSplitScreenJoin)
		.def("ServerSplitScreenJoin", &AWillowPlayerController::ServerSplitScreenJoin)
		.def("SplitScreenJoin", &AWillowPlayerController::SplitScreenJoin)
		.def("ss_func", &AWillowPlayerController::ss_func)
		.def("OnResurrectPlayer", &AWillowPlayerController::OnResurrectPlayer)
		.def("ServerResurrect", &AWillowPlayerController::ServerResurrect)
		.def("Respawn", &AWillowPlayerController::Respawn)
		.def("Resurrect", &AWillowPlayerController::Resurrect)
		.def("UpdateLostShieldEffect", &AWillowPlayerController::UpdateLostShieldEffect)
		.def("EndLostShield", &AWillowPlayerController::EndLostShield)
		.def("BeginLostShield", &AWillowPlayerController::BeginLostShield)
		.def("eventPopPostProcessChain", &AWillowPlayerController::eventPopPostProcessChain)
		.def("ApplyMaterialEffectModifiers", &AWillowPlayerController::ApplyMaterialEffectModifiers)
		.def("PushPostProcessChain", &AWillowPlayerController::PushPostProcessChain)
		.def("FindPostProcessChainRecordIndex", &AWillowPlayerController::FindPostProcessChainRecordIndex)
		.def("ClearPostProcessChains", &AWillowPlayerController::ClearPostProcessChains)
		.def("SendClientInteractionMessage", &AWillowPlayerController::SendClientInteractionMessage)
		.def("SendServerInteractionMessage", &AWillowPlayerController::SendServerInteractionMessage)
		.def("eventEndInteraction", &AWillowPlayerController::eventEndInteraction)
		.def("StartInteraction", &AWillowPlayerController::StartInteraction)
		.def("pip_sendmessage", &AWillowPlayerController::pip_sendmessage)
		.def("UpdatePlayerPostProcessOverlay", &AWillowPlayerController::UpdatePlayerPostProcessOverlay)
		.def("ClearPostProcessOverlayQueue", &AWillowPlayerController::ClearPostProcessOverlayQueue)
		.def("SetupPostProcessOverlay", &AWillowPlayerController::SetupPostProcessOverlay)
		.def("GetPostProcessOverlayIndex", &AWillowPlayerController::GetPostProcessOverlayIndex)
		.def("AddPostProcessOverlay", &AWillowPlayerController::AddPostProcessOverlay)
		.def("GetClassDefinition", &AWillowPlayerController::GetClassDefinition, py::return_value_policy::reference)
		.def("GetWillowAIDebugCam", &AWillowPlayerController::GetWillowAIDebugCam, py::return_value_policy::reference)
		.def("ShouldCheckRemoteControlCheckbox", &AWillowPlayerController::ShouldCheckRemoteControlCheckbox)
		.def("ShowPlayerInfo", &AWillowPlayerController::ShowPlayerInfo)
		.def("AITree", &AWillowPlayerController::AITree)
		.def("ToggleWillowInspectorStats", &AWillowPlayerController::ToggleWillowInspectorStats)
		.def("ToggleAccuracyDebug", &AWillowPlayerController::ToggleAccuracyDebug)
		.def("ToggleTerritoryZones", &AWillowPlayerController::ToggleTerritoryZones)
		.def("AIToggleShowTimers", &AWillowPlayerController::AIToggleShowTimers)
		.def("AIShowNodeReservation", &AWillowPlayerController::AIShowNodeReservation)
		.def("AIDebugSetPawn", &AWillowPlayerController::AIDebugSetPawn)
		.def("AILog", &AWillowPlayerController::AILog)
		.def("ShowRotation", &AWillowPlayerController::ShowRotation)
		.def("AIDebugSetPawnByName", &AWillowPlayerController::AIDebugSetPawnByName)
		.def("debugpawn", &AWillowPlayerController::debugpawn)
		.def("aisetp", &AWillowPlayerController::aisetp)
		.def("NotifyGameUnPaused", &AWillowPlayerController::NotifyGameUnPaused)
		.def("NotifyGamePaused", &AWillowPlayerController::NotifyGamePaused)
		.def("IsTriggerUsable", &AWillowPlayerController::IsTriggerUsable)
		.def("IsTriggerUsableByPlayer", &AWillowPlayerController::IsTriggerUsableByPlayer)
		.def("GetTriggerUseList", &AWillowPlayerController::GetTriggerUseList)
		.def("ShowHUDToolTip", &AWillowPlayerController::ShowHUDToolTip)
		.def("UpdateInteractionIcon", &AWillowPlayerController::UpdateInteractionIcon)
		.def("ClientSetBehindView", &AWillowPlayerController::ClientSetBehindView)
		.def("WillowBehindView", &AWillowPlayerController::WillowBehindView)
		.def("Get3rdPersonAimRotation", &AWillowPlayerController::Get3rdPersonAimRotation, py::return_value_policy::reference)
		.def("LaunchGameFromMainMenuData", &AWillowPlayerController::LaunchGameFromMainMenuData)
		.def("HB", &AWillowPlayerController::HB)
		.def("SetMainMenuHostFlag", &AWillowPlayerController::SetMainMenuHostFlag)
		.def("SetMainMenuCharacterClass", &AWillowPlayerController::SetMainMenuCharacterClass)
		.def("SetAndBroadcastMainMenuCharacterClass", &AWillowPlayerController::SetAndBroadcastMainMenuCharacterClass)
		.def("SetMainMenuSplitScreenFlag", &AWillowPlayerController::SetMainMenuSplitScreenFlag)
		.def("MainMenuResetPlayers", &AWillowPlayerController::MainMenuResetPlayers)
		.def("SetMainMenuMapName", &AWillowPlayerController::SetMainMenuMapName)
		.def("InitAccuracyFromWeapon", &AWillowPlayerController::InitAccuracyFromWeapon)
		.def("GetBaseAccuracy", &AWillowPlayerController::GetBaseAccuracy)
		.def("GetAccuracy", &AWillowPlayerController::GetAccuracy)
		.def("FinalAddHUDDamageIndicator", &AWillowPlayerController::FinalAddHUDDamageIndicator)
		.def("AddHUDDamageIndicator", &AWillowPlayerController::AddHUDDamageIndicator)
		.def("GetNextString", &AWillowPlayerController::GetNextString, py::return_value_policy::reference)
		.def("eventInitInputSystem", &AWillowPlayerController::eventInitInputSystem)
		.def("SetParkedSlip", &AWillowPlayerController::SetParkedSlip)
		.def("SetCMMEnabled", &AWillowPlayerController::SetCMMEnabled)
		.def("SetCMMThreat", &AWillowPlayerController::SetCMMThreat)
		.def("ServerPlayVehicleHorn", &AWillowPlayerController::ServerPlayVehicleHorn)
		.def("PlayVehicleHorn", &AWillowPlayerController::PlayVehicleHorn)
		.def("ClientCloseMenu", &AWillowPlayerController::ClientCloseMenu)
		.def("HideQuickSelectWeaponMenu", &AWillowPlayerController::HideQuickSelectWeaponMenu)
		.def("ShowQuickSelectWeaponMenu", &AWillowPlayerController::ShowQuickSelectWeaponMenu)
		.def("ShowStatusMenu_Logs", &AWillowPlayerController::ShowStatusMenu_Logs)
		.def("ShowStatusMenu_Challenges", &AWillowPlayerController::ShowStatusMenu_Challenges)
		.def("ShowStatusMenu_Skills", &AWillowPlayerController::ShowStatusMenu_Skills)
		.def("ShowStatusMenu_Inventory", &AWillowPlayerController::ShowStatusMenu_Inventory)
		.def("ShowMap", &AWillowPlayerController::ShowMap)
		.def("ServerSetStatusMenuOpen", &AWillowPlayerController::ServerSetStatusMenuOpen)
		.def("SetStatusMenuOpen", &AWillowPlayerController::SetStatusMenuOpen)
		.def("ShowCannotOpenMenu", &AWillowPlayerController::ShowCannotOpenMenu)
		.def("ShowStatusMenu", &AWillowPlayerController::ShowStatusMenu)
		.def("ShowDebugMenu", &AWillowPlayerController::ShowDebugMenu)
		.def("ZoomIfPending", &AWillowPlayerController::ZoomIfPending)
		.def("ClearPendingZoom", &AWillowPlayerController::ClearPendingZoom)
		.def("SetPendingZoom", &AWillowPlayerController::SetPendingZoom)
		.def("IsZoomed", &AWillowPlayerController::IsZoomed)
		.def("ForceUnzoom", &AWillowPlayerController::ForceUnzoom)
		.def("eventGetPlayerViewportClient", &AWillowPlayerController::eventGetPlayerViewportClient, py::return_value_policy::reference)
		.def("ClosePS3ControllerDialog", &AWillowPlayerController::ClosePS3ControllerDialog)
		.def("ShowPS3ControllerDialog", &AWillowPlayerController::ShowPS3ControllerDialog)
		.def("GetUIManager", &AWillowPlayerController::GetUIManager, py::return_value_policy::reference)
		.def("GetPrimaryPlayer", &AWillowPlayerController::GetPrimaryPlayer, py::return_value_policy::reference)
		.def("OnControllerChanged", &AWillowPlayerController::OnControllerChanged)
		.def("CheckControllerChangeStatusAfterDelay", &AWillowPlayerController::CheckControllerChangeStatusAfterDelay)
		.def("RetryControllerDisconnect", &AWillowPlayerController::RetryControllerDisconnect)
		.def("CanShowPauseMenu", &AWillowPlayerController::CanShowPauseMenu)
		.def("IsPauseMenuOpen", &AWillowPlayerController::IsPauseMenuOpen)
		.def("IsLobbyEnabled", &AWillowPlayerController::IsLobbyEnabled)
		.def("EnableLobby", &AWillowPlayerController::EnableLobby)
		.def("IsLobbyMenuOpen", &AWillowPlayerController::IsLobbyMenuOpen)
		.def("HideLobbyUI", &AWillowPlayerController::HideLobbyUI)
		.def("ShowLobbyUI", &AWillowPlayerController::ShowLobbyUI)
		.def("SetLobbyReady", &AWillowPlayerController::SetLobbyReady)
		.def("ServerSetLobbyReady", &AWillowPlayerController::ServerSetLobbyReady)
		.def("ApplySaveGamesBeforeLevelTransition", &AWillowPlayerController::ApplySaveGamesBeforeLevelTransition)
		.def("GFxPauseMenuClosed", &AWillowPlayerController::GFxPauseMenuClosed)
		.def("GFxPauseMenu", &AWillowPlayerController::GFxPauseMenu)
		.def("SetGFxPauseMenuOpenState", &AWillowPlayerController::SetGFxPauseMenuOpenState)
		.def("ShowPauseMenu", &AWillowPlayerController::ShowPauseMenu)
		.def("ShowMenu", &AWillowPlayerController::ShowMenu)
		.def("Pause", &AWillowPlayerController::Pause)
		.def("FixFOV", &AWillowPlayerController::FixFOV)
		.def("AdjustFOV", &AWillowPlayerController::AdjustFOV)
		.def("OnDefaultFOVChanged", &AWillowPlayerController::OnDefaultFOVChanged)
		.def("RemoveSprintFOV", &AWillowPlayerController::RemoveSprintFOV)
		.def("ApplySprintFOV", &AWillowPlayerController::ApplySprintFOV)
		.def("SetPlayerFOV", &AWillowPlayerController::SetPlayerFOV)
		.def("FOV", &AWillowPlayerController::FOV)
		.def("ToHFOV", &AWillowPlayerController::ToHFOV)
		.def("ToVFOV", &AWillowPlayerController::ToVFOV)
		.def("ClientUpdateLevelStreamingStatus", &AWillowPlayerController::ClientUpdateLevelStreamingStatus)
		.def("PreTransitionCleanup", &AWillowPlayerController::PreTransitionCleanup)
		.def("HideHUD", &AWillowPlayerController::HideHUD)
		.def("DisplayHUD", &AWillowPlayerController::DisplayHUD)
		.def("eventUnPressButtons", &AWillowPlayerController::eventUnPressButtons)
		.def("FinishUncrouch", &AWillowPlayerController::FinishUncrouch)
		.def("ClientUnDuck", &AWillowPlayerController::ClientUnDuck)
		.def("CheckJumpOrDuck", &AWillowPlayerController::CheckJumpOrDuck)
		.def("GetAdjustedAimFor", &AWillowPlayerController::GetAdjustedAimFor, py::return_value_policy::reference)
		.def("AimHelpDistance", &AWillowPlayerController::AimHelpDistance)
		.def("AimingHelp", &AWillowPlayerController::AimingHelp)
		.def("ServerToggleEquipInventory", &AWillowPlayerController::ServerToggleEquipInventory)
		.def("ToggleEquipInventory", &AWillowPlayerController::ToggleEquipInventory)
		.def("ClientDisplayPickupFailedMessage", &AWillowPlayerController::ClientDisplayPickupFailedMessage)
		.def("CloneAndGiveToCoopPawns", &AWillowPlayerController::CloneAndGiveToCoopPawns)
		.def("GetCoopPawns", &AWillowPlayerController::GetCoopPawns)
		.def("ShouldUseCoopRange", &AWillowPlayerController::ShouldUseCoopRange)
		.def("PickupPickupable", &AWillowPlayerController::PickupPickupable)
		.def("ServerPickupSomething", &AWillowPlayerController::ServerPickupSomething)
		.def("ServerPickupSpecific", &AWillowPlayerController::ServerPickupSpecific)
		.def("ClientSpawnPickupableMesh", &AWillowPlayerController::ClientSpawnPickupableMesh)
		.def("ServerUpdatePickupFailsFull", &AWillowPlayerController::ServerUpdatePickupFailsFull)
		.def("ServerConditionalThrowPawnEquippedItem", &AWillowPlayerController::ServerConditionalThrowPawnEquippedItem)
		.def("ServerThrowPawnActiveWeapon", &AWillowPlayerController::ServerThrowPawnActiveWeapon)
		.def("PickupSomething", &AWillowPlayerController::PickupSomething)
		.def("AllowReadyAfterPickup", &AWillowPlayerController::AllowReadyAfterPickup)
		.def("HasRoomInInventoryFor", &AWillowPlayerController::HasRoomInInventoryFor)
		.def("eventClearSeenPickupable", &AWillowPlayerController::eventClearSeenPickupable)
		.def("ServerClearSeenPickupable", &AWillowPlayerController::ServerClearSeenPickupable)
		.def("eventSawPickupable", &AWillowPlayerController::eventSawPickupable)
		.def("ServerSawPickupable", &AWillowPlayerController::ServerSawPickupable)
		.def("UnTouchedPickupable", &AWillowPlayerController::UnTouchedPickupable)
		.def("TouchedPickupable", &AWillowPlayerController::TouchedPickupable)
		.def("eventServerDiscoveredCallOutItem", &AWillowPlayerController::eventServerDiscoveredCallOutItem)
		.def("eventDiscoveredCallOutItem", &AWillowPlayerController::eventDiscoveredCallOutItem)
		.def("GetCurrentPickupable", &AWillowPlayerController::GetCurrentPickupable, py::return_value_policy::reference)
		.def("LandingShake", &AWillowPlayerController::LandingShake)
		.def("CheckBulletWhip", &AWillowPlayerController::CheckBulletWhip)
		.def("GetMaxExpLevel", &AWillowPlayerController::GetMaxExpLevel)
		.def("GetExpPoints", &AWillowPlayerController::GetExpPoints)
		.def("GetExpPointsRequiredForLevel", &AWillowPlayerController::GetExpPointsRequiredForLevel)
		.def("UpdateLcdExp", &AWillowPlayerController::UpdateLcdExp)
		.def("OnAllyLevelChange", &AWillowPlayerController::OnAllyLevelChange)
		.def("eventDoLevelUpNotifications", &AWillowPlayerController::eventDoLevelUpNotifications)
		.def("ClientOnExpLevelChange", &AWillowPlayerController::ClientOnExpLevelChange)
		.def("OnExpLevelChange", &AWillowPlayerController::OnExpLevelChange)
		.def("eventExpLevelUp", &AWillowPlayerController::eventExpLevelUp)
		.def("ExpEarn", &AWillowPlayerController::ExpEarn)
		.def("eventScriptAnnounceAmmoGain", &AWillowPlayerController::eventScriptAnnounceAmmoGain)
		.def("eventScriptAnnounceCreditGain", &AWillowPlayerController::eventScriptAnnounceCreditGain)
		.def("ServerAnnounceItemPickup", &AWillowPlayerController::ServerAnnounceItemPickup)
		.def("ServerAnnounceWeaponPickup", &AWillowPlayerController::ServerAnnounceWeaponPickup)
		.def("HandlePickup", &AWillowPlayerController::HandlePickup)
		.def("GetSkillGrade", &AWillowPlayerController::GetSkillGrade)
		.def("eventClientSetSkillGrade", &AWillowPlayerController::eventClientSetSkillGrade)
		.def("ServerSkillSaveGameDataCompleted", &AWillowPlayerController::ServerSkillSaveGameDataCompleted)
		.def("ServerSetSkillSaveGameData", &AWillowPlayerController::ServerSetSkillSaveGameData)
		.def("ServerUpgradeSkill", &AWillowPlayerController::ServerUpgradeSkill)
		.def("eventUpdateSkillsAfterTreeReset", &AWillowPlayerController::eventUpdateSkillsAfterTreeReset)
		.def("CheckSkillActivation", &AWillowPlayerController::CheckSkillActivation)
		.def("GetSkillUpgradeCost", &AWillowPlayerController::GetSkillUpgradeCost)
		.def("eventClientResetSkillTree", &AWillowPlayerController::eventClientResetSkillTree)
		.def("ResetSkillTree", &AWillowPlayerController::ResetSkillTree)
		.def("ClientPurchaseSkillTreeResetFailed", &AWillowPlayerController::ClientPurchaseSkillTreeResetFailed)
		.def("ServerPurchaseSkillTreeReset", &AWillowPlayerController::ServerPurchaseSkillTreeReset)
		.def("GetSkillTreeResetCost", &AWillowPlayerController::GetSkillTreeResetCost)
		.def("ResetMeleeSkillCooldown", &AWillowPlayerController::ResetMeleeSkillCooldown)
		.def("ResetMeleeSkill", &AWillowPlayerController::ResetMeleeSkill)
		.def("eventGetMeleeSkillCooldownTimeRemaining", &AWillowPlayerController::eventGetMeleeSkillCooldownTimeRemaining)
		.def("eventGetMeleeSkillCooldownTime", &AWillowPlayerController::eventGetMeleeSkillCooldownTime)
		.def("StartMeleeSkillCooldown", &AWillowPlayerController::StartMeleeSkillCooldown)
		.def("eventIsMeleeSkillOnCooldown", &AWillowPlayerController::eventIsMeleeSkillOnCooldown)
		.def("CanPerformMeleeSkill", &AWillowPlayerController::CanPerformMeleeSkill)
		.def("StartMeleeSkill", &AWillowPlayerController::StartMeleeSkill)
		.def("ServerStartMeleeSkill", &AWillowPlayerController::ServerStartMeleeSkill)
		.def("ServerStartActionSkillCooldownAbility", &AWillowPlayerController::ServerStartActionSkillCooldownAbility)
		.def("StartActionSkillCooldownAbility", &AWillowPlayerController::StartActionSkillCooldownAbility)
		.def("ServerNotifyActionSkillActiveAbility", &AWillowPlayerController::ServerNotifyActionSkillActiveAbility)
		.def("NotifyActionSkillActiveAbility", &AWillowPlayerController::NotifyActionSkillActiveAbility)
		.def("ServerStartActionSkillActiveAbility", &AWillowPlayerController::ServerStartActionSkillActiveAbility)
		.def("StartActionSkillActiveAbility", &AWillowPlayerController::StartActionSkillActiveAbility)
		.def("ServerStartActionSkill", &AWillowPlayerController::ServerStartActionSkill)
		.def("GetActionSkillDuration", &AWillowPlayerController::GetActionSkillDuration)
		.def("ActionSkillCallback", &AWillowPlayerController::ActionSkillCallback)
		.def("Behavior_GetSkillInstigatorController", &AWillowPlayerController::Behavior_GetSkillInstigatorController, py::return_value_policy::reference)
		.def("Behavior_UpgradeSkill", &AWillowPlayerController::Behavior_UpgradeSkill)
		.def("ServerDeactivateSkill", &AWillowPlayerController::ServerDeactivateSkill)
		.def("Behavior_DeactivateSkill", &AWillowPlayerController::Behavior_DeactivateSkill)
		.def("ServerActivateSkill", &AWillowPlayerController::ServerActivateSkill)
		.def("Behavior_ActivateSkill", &AWillowPlayerController::Behavior_ActivateSkill)
		.def("GetSkillManager", &AWillowPlayerController::GetSkillManager, py::return_value_policy::reference)
		.def("InitPlayerSkillTree", &AWillowPlayerController::InitPlayerSkillTree)
		.def("eventOnPlayerClassChange", &AWillowPlayerController::eventOnPlayerClassChange)
		.def("ApplyCharacterClassStartingValues", &AWillowPlayerController::ApplyCharacterClassStartingValues)
		.def("ApplyCharacterClassDefaults", &AWillowPlayerController::ApplyCharacterClassDefaults)
		.def("ClientNotifyClassChanged", &AWillowPlayerController::ClientNotifyClassChanged)
		.def("RetryClassSwitch", &AWillowPlayerController::RetryClassSwitch)
		.def("eventSwitchPlayerClass", &AWillowPlayerController::eventSwitchPlayerClass)
		.def("eventServerSwitchPlayerClass", &AWillowPlayerController::eventServerSwitchPlayerClass)
		.def("eventServerPlayerSelectClass", &AWillowPlayerController::eventServerPlayerSelectClass)
		.def("PlayerSelectClass", &AWillowPlayerController::PlayerSelectClass)
		.def("InitializeWorldMissionState", &AWillowPlayerController::InitializeWorldMissionState)
		.def("RefreshHUDMissionWidget", &AWillowPlayerController::RefreshHUDMissionWidget)
		.def("FixupPlaythroughTwo", &AWillowPlayerController::FixupPlaythroughTwo)
		.def("ApplyMissionSaveGameData", &AWillowPlayerController::ApplyMissionSaveGameData)
		.def("FixupSavedMissionGameStage", &AWillowPlayerController::FixupSavedMissionGameStage)
		.def("ApplyGatewayDLCStations", &AWillowPlayerController::ApplyGatewayDLCStations)
		.def("ApplyVisitedTeleporterData", &AWillowPlayerController::ApplyVisitedTeleporterData)
		.def("eventReapplyVisitedTeleporterData", &AWillowPlayerController::eventReapplyVisitedTeleporterData)
		.def("GetSavedTravelStation", &AWillowPlayerController::GetSavedTravelStation, py::return_value_policy::reference)
		.def("eventRequestNewStatsChannel", &AWillowPlayerController::eventRequestNewStatsChannel)
		.def("ApplyStatsSaveGameData", &AWillowPlayerController::ApplyStatsSaveGameData)
		.def("ServerSetWeaponSaveGameData", &AWillowPlayerController::ServerSetWeaponSaveGameData)
		.def("ApplyWeaponSaveGameData", &AWillowPlayerController::ApplyWeaponSaveGameData)
		.def("ServerSetInventorySlotSaveGameData", &AWillowPlayerController::ServerSetInventorySlotSaveGameData)
		.def("ApplyInventorySlotSaveGameData", &AWillowPlayerController::ApplyInventorySlotSaveGameData)
		.def("ServerSetItemSaveGameData", &AWillowPlayerController::ServerSetItemSaveGameData)
		.def("ServerItemSaveGameDataCompleted", &AWillowPlayerController::ServerItemSaveGameDataCompleted)
		.def("eventApplyDLCInventorySaveGameData", &AWillowPlayerController::eventApplyDLCInventorySaveGameData)
		.def("ApplyItemSaveGameData", &AWillowPlayerController::ApplyItemSaveGameData)
		.def("ValidateItemDefinition", &AWillowPlayerController::ValidateItemDefinition)
		.def("ValidateWeaponDefinition", &AWillowPlayerController::ValidateWeaponDefinition)
		.def("ApplyInventorySaveGameData", &AWillowPlayerController::ApplyInventorySaveGameData)
		.def("ServerSetResourceSaveGameData", &AWillowPlayerController::ServerSetResourceSaveGameData)
		.def("ApplyResourceSaveGameData", &AWillowPlayerController::ApplyResourceSaveGameData)
		.def("RecalculateAttributeInitializedState", &AWillowPlayerController::RecalculateAttributeInitializedState)
		.def("ConditionalLoadDefaultSaveGame", &AWillowPlayerController::ConditionalLoadDefaultSaveGame)
		.def("eventGetSaveGameNameFromid", &AWillowPlayerController::eventGetSaveGameNameFromid, py::return_value_policy::reference)
		.def("BuildSaveGameNameFromId", &AWillowPlayerController::BuildSaveGameNameFromId)
		.def("ProcessShiftEntitlements", &AWillowPlayerController::ProcessShiftEntitlements)
		.def("GrantShiftProfileEntitlement", &AWillowPlayerController::GrantShiftProfileEntitlement)
		.def("GrantShiftCustomizationEntitlement", &AWillowPlayerController::GrantShiftCustomizationEntitlement)
		.def("GrantShiftItemEntitlement", &AWillowPlayerController::GrantShiftItemEntitlement)
		.def("GrantUnconsumedDemoPerk", &AWillowPlayerController::GrantUnconsumedDemoPerk)
		.def("eventGrantNewMarketingCodeBonuses", &AWillowPlayerController::eventGrantNewMarketingCodeBonuses)
		.def("IsMarketingCodeUnlocked", &AWillowPlayerController::IsMarketingCodeUnlocked)
		.def("eventHasUnlockedCode", &AWillowPlayerController::eventHasUnlockedCode)
		.def("SaveMarketingCodeSaveGameData", &AWillowPlayerController::SaveMarketingCodeSaveGameData)
		.def("ApplyMarketingCodeSaveGameData", &AWillowPlayerController::ApplyMarketingCodeSaveGameData)
		.def("ApplyPlayerSaveGameData", &AWillowPlayerController::ApplyPlayerSaveGameData)
		.def("ApplySkillSaveGameData", &AWillowPlayerController::ApplySkillSaveGameData)
		.def("ApplyVehicleCustomizationData", &AWillowPlayerController::ApplyVehicleCustomizationData)
		.def("ApplyAwesomeSkillSaveGameData", &AWillowPlayerController::ApplyAwesomeSkillSaveGameData)
		.def("SaveAppliedCustomizationData", &AWillowPlayerController::SaveAppliedCustomizationData)
		.def("SaveMissionSaveGameData", &AWillowPlayerController::SaveMissionSaveGameData)
		.def("SaveDiscoveredWorldAreaData", &AWillowPlayerController::SaveDiscoveredWorldAreaData)
		.def("ApplyDiscoveredWorldAreaData", &AWillowPlayerController::ApplyDiscoveredWorldAreaData)
		.def("SaveVisitedTeleporterData", &AWillowPlayerController::SaveVisitedTeleporterData)
		.def("SavePlayerUIPreferences", &AWillowPlayerController::SavePlayerUIPreferences)
		.def("SaveStatsSaveGameData", &AWillowPlayerController::SaveStatsSaveGameData)
		.def("SaveWeaponSaveGameData", &AWillowPlayerController::SaveWeaponSaveGameData)
		.def("SaveInventorySlotSaveGameData", &AWillowPlayerController::SaveInventorySlotSaveGameData)
		.def("ExtractExpansionSavedataFromUnloadableItemData", &AWillowPlayerController::ExtractExpansionSavedataFromUnloadableItemData)
		.def("AddExpansionSavedataToUnloadableItemData", &AWillowPlayerController::AddExpansionSavedataToUnloadableItemData)
		.def("SaveItemSaveGameData", &AWillowPlayerController::SaveItemSaveGameData)
		.def("GetPawnInventoryManager", &AWillowPlayerController::GetPawnInventoryManager, py::return_value_policy::reference)
		.def("GetInventoryPawn", &AWillowPlayerController::GetInventoryPawn, py::return_value_policy::reference)
		.def("SaveResourceSaveGameData", &AWillowPlayerController::SaveResourceSaveGameData)
		.def("SaveSkillSaveGameData", &AWillowPlayerController::SaveSkillSaveGameData)
		.def("SaveVehicleCustomizationData", &AWillowPlayerController::SaveVehicleCustomizationData)
		.def("SaveAwesomeSkillSaveGameData", &AWillowPlayerController::SaveAwesomeSkillSaveGameData)
		.def("SavePlayerSaveGameData", &AWillowPlayerController::SavePlayerSaveGameData)
		.def("ApplyPlayerCustomizationData", &AWillowPlayerController::ApplyPlayerCustomizationData)
		.def("ApplyPlayerUIPreferencesData", &AWillowPlayerController::ApplyPlayerUIPreferencesData)
		.def("IsMissionObjectiveActiveLocal", &AWillowPlayerController::IsMissionObjectiveActiveLocal)
		.def("IsMissionObjectiveCompleteLocal", &AWillowPlayerController::IsMissionObjectiveCompleteLocal)
		.def("LocalMissionDependenciesMet", &AWillowPlayerController::LocalMissionDependenciesMet)
		.def("GetLocalActiveMissionNumber", &AWillowPlayerController::GetLocalActiveMissionNumber)
		.def("GetActivePlotCriticalMissionNumber", &AWillowPlayerController::GetActivePlotCriticalMissionNumber)
		.def("GetActiveMissionNumber", &AWillowPlayerController::GetActiveMissionNumber)
		.def("UpdateOnlineGameSettings", &AWillowPlayerController::UpdateOnlineGameSettings)
		.def("NotifyUpdateOnlineGameComplete", &AWillowPlayerController::NotifyUpdateOnlineGameComplete)
		.def("SetNeedsUpdateOnlineGameSettings", &AWillowPlayerController::SetNeedsUpdateOnlineGameSettings)
		.def("CheckEquipDefaultWeapon", &AWillowPlayerController::CheckEquipDefaultWeapon)
		.def("GrantDefaultWeaponIfEligible", &AWillowPlayerController::GrantDefaultWeaponIfEligible)
		.def("eventClientValidateMissionData", &AWillowPlayerController::eventClientValidateMissionData)
		.def("eventClientReceiveMissionFiltered", &AWillowPlayerController::eventClientReceiveMissionFiltered)
		.def("eventClientReceiveMissionObjective", &AWillowPlayerController::eventClientReceiveMissionObjective)
		.def("eventClientSubObjectiveSetAdvanced", &AWillowPlayerController::eventClientSubObjectiveSetAdvanced)
		.def("eventClientReceiveMissionActiveObjectiveSet", &AWillowPlayerController::eventClientReceiveMissionActiveObjectiveSet)
		.def("eventClientReceiveMissionStatus", &AWillowPlayerController::eventClientReceiveMissionStatus)
		.def("eventClientReceiveMissionData", &AWillowPlayerController::eventClientReceiveMissionData)
		.def("eventSetMissionKickoffHeard", &AWillowPlayerController::eventSetMissionKickoffHeard)
		.def("eventClientReceivedMissionKickoffHeard", &AWillowPlayerController::eventClientReceivedMissionKickoffHeard)
		.def("ServerRequestMissionData", &AWillowPlayerController::ServerRequestMissionData)
		.def("RequestMissionData", &AWillowPlayerController::RequestMissionData)
		.def("LoadBlackMarketUpgrades", &AWillowPlayerController::LoadBlackMarketUpgrades)
		.def("LoadTheBank", &AWillowPlayerController::LoadTheBank)
		.def("ApplyHardcoreMode", &AWillowPlayerController::ApplyHardcoreMode)
		.def("StoreUnloadableDlcContent", &AWillowPlayerController::StoreUnloadableDlcContent)
		.def("eventServerSetRemoteGoldenKeyData", &AWillowPlayerController::eventServerSetRemoteGoldenKeyData)
		.def("eventLoadPlayerSaveGame", &AWillowPlayerController::eventLoadPlayerSaveGame)
		.def("AttemptPostSaveGameCreateFixup", &AWillowPlayerController::AttemptPostSaveGameCreateFixup)
		.def("ConditionalFixWeaponReadyMax", &AWillowPlayerController::ConditionalFixWeaponReadyMax)
		.def("AttemptPreSaveGameLoadFixup", &AWillowPlayerController::AttemptPreSaveGameLoadFixup)
		.def("ClientHideSendingSaveGameDialog", &AWillowPlayerController::ClientHideSendingSaveGameDialog)
		.def("CheckSentFullSaveGame", &AWillowPlayerController::CheckSentFullSaveGame)
		.def("DoReceivedSaveGameValuesMatchExpected", &AWillowPlayerController::DoReceivedSaveGameValuesMatchExpected)
		.def("HasSentFullSaveGame", &AWillowPlayerController::HasSentFullSaveGame)
		.def("ClientShowSendingSaveGameDialog", &AWillowPlayerController::ClientShowSendingSaveGameDialog)
		.def("GetExpLevelLoadedFromSavedGame", &AWillowPlayerController::GetExpLevelLoadedFromSavedGame)
		.def("GetExpPointsLoadedFromSavedGame", &AWillowPlayerController::GetExpPointsLoadedFromSavedGame)
		.def("AttemptReplicateSaveGame", &AWillowPlayerController::AttemptReplicateSaveGame)
		.def("NotifyClosedSaveGameChannel", &AWillowPlayerController::NotifyClosedSaveGameChannel)
		.def("NotifyReceivedSaveGameChannel", &AWillowPlayerController::NotifyReceivedSaveGameChannel)
		.def("ParseWillowOneDLCExpansionData", &AWillowPlayerController::ParseWillowOneDLCExpansionData)
		.def("ApplyDLCExpansionData", &AWillowPlayerController::ApplyDLCExpansionData)
		.def("SaveDLCExpansionData", &AWillowPlayerController::SaveDLCExpansionData)
		.def("ClearPlayerSaveGame", &AWillowPlayerController::ClearPlayerSaveGame)
		.def("WriteLastSavedId", &AWillowPlayerController::WriteLastSavedId)
		.def("ReloadDefaultSaveGame", &AWillowPlayerController::ReloadDefaultSaveGame)
		.def("StartNewPlaySession", &AWillowPlayerController::StartNewPlaySession)
		.def("LoadCachedSaveGame", &AWillowPlayerController::LoadCachedSaveGame)
		.def("ShortServerMove", &AWillowPlayerController::ShortServerMove)
		.def("CallServerMove", &AWillowPlayerController::CallServerMove)
		.def("AdjustCameraScale", &AWillowPlayerController::AdjustCameraScale)
		.def("eventGetClassModString", &AWillowPlayerController::eventGetClassModString, py::return_value_policy::reference)
		.def("eventGetClassModNamePart", &AWillowPlayerController::eventGetClassModNamePart, py::return_value_policy::reference)
		.def("ServerPlayerResetShop", &AWillowPlayerController::ServerPlayerResetShop)
		.def("SetPendingTransactionStatus", &AWillowPlayerController::SetPendingTransactionStatus)
		.def("PlayerBuyBackInventory", &AWillowPlayerController::PlayerBuyBackInventory)
		.def("PlayerSoldItem", &AWillowPlayerController::PlayerSoldItem)
		.def("ClientCongradulatePurchase", &AWillowPlayerController::ClientCongradulatePurchase)
		.def("PurchaseWasMade", &AWillowPlayerController::PurchaseWasMade)
		.def("ClientTriggerDispenseEventForShop", &AWillowPlayerController::ClientTriggerDispenseEventForShop)
		.def("ServerPlayerBoughtItem", &AWillowPlayerController::ServerPlayerBoughtItem)
		.def("PlayerBoughtItem", &AWillowPlayerController::PlayerBoughtItem)
		.def("ServerStoppedShopping", &AWillowPlayerController::ServerStoppedShopping)
		.def("ServerStartedShopping", &AWillowPlayerController::ServerStartedShopping)
		.def("UnHideDroppedPickupsHiddenWhileInStatusMenu", &AWillowPlayerController::UnHideDroppedPickupsHiddenWhileInStatusMenu)
		.def("ServerThrowInventory", &AWillowPlayerController::ServerThrowInventory, py::return_value_policy::reference)
		.def("ThrowInventory", &AWillowPlayerController::ThrowInventory)
		.def("NextWeapon", &AWillowPlayerController::NextWeapon)
		.def("PrevWeapon", &AWillowPlayerController::PrevWeapon)
		.def("ScaleFOV", &AWillowPlayerController::ScaleFOV)
		.def("eventGetFOVAngle", &AWillowPlayerController::eventGetFOVAngle)
		.def("BlendRot", &AWillowPlayerController::BlendRot)
		.def("ReplaceKilledByAIMessageTokens", &AWillowPlayerController::ReplaceKilledByAIMessageTokens)
		.def("GenerateUBMKilledByMessageString", &AWillowPlayerController::GenerateUBMKilledByMessageString)
		.def("GetPreferredWeaponTypeString", &AWillowPlayerController::GetPreferredWeaponTypeString, py::return_value_policy::reference)
		.def("GetPreferredManufacturerString", &AWillowPlayerController::GetPreferredManufacturerString, py::return_value_policy::reference)
		.def("CalculatePercentMissionsComplete", &AWillowPlayerController::CalculatePercentMissionsComplete)
		.def("CalculatePercentChallengesComplete", &AWillowPlayerController::CalculatePercentChallengesComplete)
		.def("PopulateTombstoneData", &AWillowPlayerController::PopulateTombstoneData)
		.def("SetHardcoreMode", &AWillowPlayerController::SetHardcoreMode)
		.def("ClientPermadeath", &AWillowPlayerController::ClientPermadeath)
		.def("Permadeath", &AWillowPlayerController::Permadeath)
		.def("ClearInjuredScreenFadeParticle", &AWillowPlayerController::ClearInjuredScreenFadeParticle)
		.def("ClearInjuredState", &AWillowPlayerController::ClearInjuredState)
		.def("ClearControllerInjuredState", &AWillowPlayerController::ClearControllerInjuredState)
		.def("SetupInjuredState", &AWillowPlayerController::SetupInjuredState)
		.def("SetupControllerInjuredState", &AWillowPlayerController::SetupControllerInjuredState)
		.def("ServerInjuredNoTimeout", &AWillowPlayerController::ServerInjuredNoTimeout)
		.def("SayIdleTimeOut", &AWillowPlayerController::SayIdleTimeOut)
		.def("InjuredNoTimeout", &AWillowPlayerController::InjuredNoTimeout)
		.def("ClientOnRevivedPlayer", &AWillowPlayerController::ClientOnRevivedPlayer)
		.def("Behavior_StopRevive", &AWillowPlayerController::Behavior_StopRevive)
		.def("Behavior_StartRevive", &AWillowPlayerController::Behavior_StartRevive)
		.def("eventServerStopRevive", &AWillowPlayerController::eventServerStopRevive)
		.def("ServerStartRevive", &AWillowPlayerController::ServerStartRevive)
		.def("CanPerformReviveTarget", &AWillowPlayerController::CanPerformReviveTarget)
		.def("SetReviveTarget", &AWillowPlayerController::SetReviveTarget)
		.def("StopAltFire", &AWillowPlayerController::StopAltFire)
		.def("StartAltFire", &AWillowPlayerController::StartAltFire)
		.def("StopFire", &AWillowPlayerController::StopFire)
		.def("PostFireDelay", &AWillowPlayerController::PostFireDelay)
		.def("StartFire", &AWillowPlayerController::StartFire)
		.def("ServerSecondaryUse", &AWillowPlayerController::ServerSecondaryUse)
		.def("ServerUse", &AWillowPlayerController::ServerUse)
		.def("SwitchSeats", &AWillowPlayerController::SwitchSeats)
		.def("UseSecondary", &AWillowPlayerController::UseSecondary)
		.def("Use", &AWillowPlayerController::Use)
		.def("ServerSpectate", &AWillowPlayerController::ServerSpectate)
		.def("QuickLookPlayerMove", &AWillowPlayerController::QuickLookPlayerMove)
		.def("NotifyTakeHit", &AWillowPlayerController::NotifyTakeHit)
		.def("UsingFirstPersonCamera", &AWillowPlayerController::UsingFirstPersonCamera)
		.def("eventResetCameraMode", &AWillowPlayerController::eventResetCameraMode)
		.def("eventClientReset", &AWillowPlayerController::eventClientReset)
		.def("Reset", &AWillowPlayerController::Reset)
		.def("TestViewShake", &AWillowPlayerController::TestViewShake)
		.def("ViewShake", &AWillowPlayerController::ViewShake)
		.def("ClientShakeView", &AWillowPlayerController::ClientShakeView)
		.def("ShakeView", &AWillowPlayerController::ShakeView)
		.def("CameraShake", &AWillowPlayerController::CameraShake)
		.def("AddWeaponKick", &AWillowPlayerController::AddWeaponKick)
		.def("ApplyWanderingAndKick", &AWillowPlayerController::ApplyWanderingAndKick)
		.def("AdjustViewPointForFocusCam", &AWillowPlayerController::AdjustViewPointForFocusCam)
		.def("GetPlayerViewPoint", &AWillowPlayerController::GetPlayerViewPoint)
		.def("eventSpawnCamera", &AWillowPlayerController::eventSpawnCamera)
		.def("SetViewTarget", &AWillowPlayerController::SetViewTarget)
		.def("SetCameraMode", &AWillowPlayerController::SetCameraMode)
		.def("RaiseFirstPersonHands", &AWillowPlayerController::RaiseFirstPersonHands)
		.def("LowerFirstPersonHands", &AWillowPlayerController::LowerFirstPersonHands)
		.def("UpdateForegroundFOV", &AWillowPlayerController::UpdateForegroundFOV)
		.def("SetViewingThirdPersonMenu", &AWillowPlayerController::SetViewingThirdPersonMenu)
		.def("SetBehindView", &AWillowPlayerController::SetBehindView)
		.def("SetContentDebugger", &AWillowPlayerController::SetContentDebugger)
		.def("ClearContentDebugger", &AWillowPlayerController::ClearContentDebugger)
		.def("BehindView", &AWillowPlayerController::BehindView)
		.def("SoakPause", &AWillowPlayerController::SoakPause)
		.def("Typing", &AWillowPlayerController::Typing)
		.def("ServerAcknowledgePossession", &AWillowPlayerController::ServerAcknowledgePossession)
		.def("AcknowledgePossession", &AWillowPlayerController::AcknowledgePossession)
		.def("UnPossess", &AWillowPlayerController::UnPossess)
		.def("Possess", &AWillowPlayerController::Possess)
		.def("GivePawn", &AWillowPlayerController::GivePawn)
		.def("SetHand", &AWillowPlayerController::SetHand)
		.def("ServerSetHand", &AWillowPlayerController::ServerSetHand)
		.def("ServerPlayerPreferences", &AWillowPlayerController::ServerPlayerPreferences)
		.def("NotifyChangedItem", &AWillowPlayerController::NotifyChangedItem)
		.def("eventResetMapChangeTeleportFlags", &AWillowPlayerController::eventResetMapChangeTeleportFlags)
		.def("eventReadyForPlay", &AWillowPlayerController::eventReadyForPlay)
		.def("eventReadyForCommit", &AWillowPlayerController::eventReadyForCommit)
		.def("NotifyChangedWeapon", &AWillowPlayerController::NotifyChangedWeapon)
		.def("TickPostProcessChainModifiers", &AWillowPlayerController::TickPostProcessChainModifiers)
		.def("DrawCoopRangeDebug", &AWillowPlayerController::DrawCoopRangeDebug)
		.def("ClientAddTinnitusSource", &AWillowPlayerController::ClientAddTinnitusSource)
		.def("TriggerTinnitus", &AWillowPlayerController::TriggerTinnitus)
		.def("TriggerTinnitusFromLocation", &AWillowPlayerController::TriggerTinnitusFromLocation)
		.def("ShutDownEchoPSC", &AWillowPlayerController::ShutDownEchoPSC)
		.def("TickEchoPSCOpacity", &AWillowPlayerController::TickEchoPSCOpacity)
		.def("PlayerTick", &AWillowPlayerController::PlayerTick)
		.def("PayForPickupable", &AWillowPlayerController::PayForPickupable)
		.def("CanAffordToPickUpPickupable", &AWillowPlayerController::CanAffordToPickUpPickupable)
		.def("PayForUsedObject", &AWillowPlayerController::PayForUsedObject)
		.def("CanAffordToUseUsableObject", &AWillowPlayerController::CanAffordToUseUsableObject)
		.def("NotifyUnableToAffordPickupable", &AWillowPlayerController::NotifyUnableToAffordPickupable)
		.def("NotifyUnableToAffordUsableObject", &AWillowPlayerController::NotifyUnableToAffordUsableObject)
		.def("ServerExitVehicle", &AWillowPlayerController::ServerExitVehicle)
		.def("ExitVehicle", &AWillowPlayerController::ExitVehicle)
		.def("PerformedSecondaryUseAction", &AWillowPlayerController::PerformedSecondaryUseAction)
		.def("OnClickSpendGoldenKeyToUse", &AWillowPlayerController::OnClickSpendGoldenKeyToUse)
		.def("ServerUseWithoutConfirmation", &AWillowPlayerController::ServerUseWithoutConfirmation)
		.def("ClientShowGoldenKeyUseConfirmationDialog", &AWillowPlayerController::ClientShowGoldenKeyUseConfirmationDialog)
		.def("PerformedUseAction", &AWillowPlayerController::PerformedUseAction)
		.def("FixUpLoadString", &AWillowPlayerController::FixUpLoadString, py::return_value_policy::reference)
		.def("QuickLoad", &AWillowPlayerController::QuickLoad)
		.def("QuickSave", &AWillowPlayerController::QuickSave)
		.def("OnSaveGameComplete", &AWillowPlayerController::OnSaveGameComplete)
		.def("eventSaveGame", &AWillowPlayerController::eventSaveGame)
		.def("SaveGameFor", &AWillowPlayerController::SaveGameFor)
		.def("enum_targetables", &AWillowPlayerController::enum_targetables)
		.def("ClientApplySaveGame", &AWillowPlayerController::ClientApplySaveGame)
		.def("PlayerIsLicensedToSaveGame", &AWillowPlayerController::PlayerIsLicensedToSaveGame)
		.def("FindClassModNamePartInSaveGame", &AWillowPlayerController::FindClassModNamePartInSaveGame, py::return_value_policy::reference)
		.def("UpdatePRIWithSaveGame", &AWillowPlayerController::UpdatePRIWithSaveGame)
		.def("ServerUpdatePRIWithSaveGame", &AWillowPlayerController::ServerUpdatePRIWithSaveGame)
		.def("StaticGetSaveGamePrefix", &AWillowPlayerController::StaticGetSaveGamePrefix, py::return_value_policy::reference)
		.def("OnLoadSaveGame", &AWillowPlayerController::OnLoadSaveGame)
		.def("FinishSaveGameLoad", &AWillowPlayerController::FinishSaveGameLoad)
		.def("NotifySaveGameLoadedDelegates", &AWillowPlayerController::NotifySaveGameLoadedDelegates)
		.def("UnregisterSaveGameLoadedDelegate", &AWillowPlayerController::UnregisterSaveGameLoadedDelegate)
		.def("RegisterSaveGameLoadedDelegate", &AWillowPlayerController::RegisterSaveGameLoadedDelegate)
		.def("OnLoadLastSaveGameComplete", &AWillowPlayerController::OnLoadLastSaveGameComplete)
		.def("OnSaveGameLoaded", &AWillowPlayerController::OnSaveGameLoaded)
		.def("DebugLoadGameFor", &AWillowPlayerController::DebugLoadGameFor)
		.def("DebugLoadGame", &AWillowPlayerController::DebugLoadGame)
		.def("AreSaveGuidsEqual", &AWillowPlayerController::AreSaveGuidsEqual)
		.def("GenerateSaveGameGuid", &AWillowPlayerController::GenerateSaveGameGuid)
		.def("GetLevelForMission", &AWillowPlayerController::GetLevelForMission, py::return_value_policy::reference)
		.def("ServerCompleteMission", &AWillowPlayerController::ServerCompleteMission)
		.def("ServerAcceptMission", &AWillowPlayerController::ServerAcceptMission)
		.def("AcceptMission", &AWillowPlayerController::AcceptMission)
		.def("GetPlayersMissionStatus", &AWillowPlayerController::GetPlayersMissionStatus)
		.def("PopulateMissionDataFromStatus", &AWillowPlayerController::PopulateMissionDataFromStatus, py::return_value_policy::reference)
		.def("UpdateLcdMissionStatus", &AWillowPlayerController::UpdateLcdMissionStatus)
		.def("IsEligibleForMission", &AWillowPlayerController::IsEligibleForMission)
		.def("IsMissionAvailableToTrack", &AWillowPlayerController::IsMissionAvailableToTrack)
		.def("eventUpdateActiveMission", &AWillowPlayerController::eventUpdateActiveMission)
		.def("ServerSetActiveMission", &AWillowPlayerController::ServerSetActiveMission)
		.def("eventGetMissionIndex", &AWillowPlayerController::eventGetMissionIndex)
		.def("NativeGetMissionIndex", &AWillowPlayerController::NativeGetMissionIndex)
		.def("ClientDoMissionStatusFanfare", &AWillowPlayerController::ClientDoMissionStatusFanfare)
		.def("AddMission", &AWillowPlayerController::AddMission)
		.def("eventClientReceiveDecrementedMissionObjective", &AWillowPlayerController::eventClientReceiveDecrementedMissionObjective)
		.def("eventClientReceiveClearedMissionObjective", &AWillowPlayerController::eventClientReceiveClearedMissionObjective)
		.def("eventClientReceiveMissionTimerChanged", &AWillowPlayerController::eventClientReceiveMissionTimerChanged)
		.def("eventClientReceiveMissionTimerStopped", &AWillowPlayerController::eventClientReceiveMissionTimerStopped)
		.def("eventClientReceiveMissionTimerStarted", &AWillowPlayerController::eventClientReceiveMissionTimerStarted)
		.def("eventDecrementMissionObjective", &AWillowPlayerController::eventDecrementMissionObjective)
		.def("eventClearMissionObjective", &AWillowPlayerController::eventClearMissionObjective)
		.def("eventSubObjectiveSetAdvanced", &AWillowPlayerController::eventSubObjectiveSetAdvanced)
		.def("eventUpdateMissionObjective", &AWillowPlayerController::eventUpdateMissionObjective)
		.def("SetPlayersMissionObjectiveProgressToWorldsMissionObjectiveProgress", &AWillowPlayerController::SetPlayersMissionObjectiveProgressToWorldsMissionObjectiveProgress)
		.def("SetPlayersMissionProgressToWorldsMissionProgress", &AWillowPlayerController::SetPlayersMissionProgressToWorldsMissionProgress)
		.def("MissionRewardsReceived", &AWillowPlayerController::MissionRewardsReceived)
		.def("ReceiveItemReward", &AWillowPlayerController::ReceiveItemReward)
		.def("ReceiveWeaponReward", &AWillowPlayerController::ReceiveWeaponReward)
		.def("AcceptOrSaveUnclaimedReward", &AWillowPlayerController::AcceptOrSaveUnclaimedReward)
		.def("eventIsMissionMoviePlaying", &AWillowPlayerController::eventIsMissionMoviePlaying)
		.def("ClientSpawnMissionRewardUI", &AWillowPlayerController::ClientSpawnMissionRewardUI)
		.def("ClientShowNoRewardScreen", &AWillowPlayerController::ClientShowNoRewardScreen)
		.def("ClientUpdateUIMissionList", &AWillowPlayerController::ClientUpdateUIMissionList)
		.def("GetNumRewardChoices", &AWillowPlayerController::GetNumRewardChoices)
		.def("ServerGrantMissionRewards", &AWillowPlayerController::ServerGrantMissionRewards)
		.def("eventUpdateActiveObjectiveSet", &AWillowPlayerController::eventUpdateActiveObjectiveSet)
		.def("CheckAllSideMissionsCompleteAchievement", &AWillowPlayerController::CheckAllSideMissionsCompleteAchievement)
		.def("CheckForSlaughterAchievement", &AWillowPlayerController::CheckForSlaughterAchievement)
		.def("CheckPlaythroughAlmostComplete", &AWillowPlayerController::CheckPlaythroughAlmostComplete)
		.def("IsPlaythroughComplete", &AWillowPlayerController::IsPlaythroughComplete)
		.def("CheckPlaythroughComplete", &AWillowPlayerController::CheckPlaythroughComplete)
		.def("eventUpdateMissionStatus", &AWillowPlayerController::eventUpdateMissionStatus)
		.def("ToggleMissionFiltered", &AWillowPlayerController::ToggleMissionFiltered)
		.def("eventSetMissionFiltered", &AWillowPlayerController::eventSetMissionFiltered)
		.def("eventIsMissionFiltered", &AWillowPlayerController::eventIsMissionFiltered)
		.def("GetWillowGlobals", &AWillowPlayerController::GetWillowGlobals, py::return_value_policy::reference)
		.def("CheckForHolidayTimedMissions", &AWillowPlayerController::CheckForHolidayTimedMissions)
		.def("SpawningProcessComplete", &AWillowPlayerController::SpawningProcessComplete)
		.def("ShouldLoadSaveGameOnSpawn", &AWillowPlayerController::ShouldLoadSaveGameOnSpawn)
		.def("PawnDied", &AWillowPlayerController::PawnDied)
		.def("eventReplicatedEvent", &AWillowPlayerController::eventReplicatedEvent)
		.def("SaveBlackMarketUpgrades", &AWillowPlayerController::SaveBlackMarketUpgrades)
		.def("SaveTheBank", &AWillowPlayerController::SaveTheBank)
		.def("SaveUnloadableDlcContent", &AWillowPlayerController::SaveUnloadableDlcContent)
		.def("eventGeneratePlayerSaveGame", &AWillowPlayerController::eventGeneratePlayerSaveGame, py::return_value_policy::reference)
		.def("eventClientMessage", &AWillowPlayerController::eventClientMessage)
		.def("OnCurrencyChanged", &AWillowPlayerController::OnCurrencyChanged)
		.def("eventInviteFriendByIndex", &AWillowPlayerController::eventInviteFriendByIndex)
		.def("UpdateLcdFriendsList", &AWillowPlayerController::UpdateLcdFriendsList)
		.def("PostSparkEvents", &AWillowPlayerController::PostSparkEvents)
		.def("UpdateSparkLocation", &AWillowPlayerController::UpdateSparkLocation)
		.def("PostSparkStats", &AWillowPlayerController::PostSparkStats)
		.def("SortFriends", &AWillowPlayerController::SortFriends)
		.def("SetSparkTimers", &AWillowPlayerController::SetSparkTimers)
		.def("PostBeginPlay", &AWillowPlayerController::PostBeginPlay)
		.def("ClientPublishCachedSaveGameToPRI", &AWillowPlayerController::ClientPublishCachedSaveGameToPRI)
		.def("eventIsInPublicOnlineGame", &AWillowPlayerController::eventIsInPublicOnlineGame)
		.def("NotifyInitialDeviceSelectionComplete", &AWillowPlayerController::NotifyInitialDeviceSelectionComplete)
		.def("OnLoadLastSaveGame", &AWillowPlayerController::OnLoadLastSaveGame)
		.def("LoadLastSavedSaveGame", &AWillowPlayerController::LoadLastSavedSaveGame)
		.def("RefreshRemotePlayerStandIns", &AWillowPlayerController::RefreshRemotePlayerStandIns)
		.def("GetPrimaryPlayerStandIn", &AWillowPlayerController::GetPrimaryPlayerStandIn, py::return_value_policy::reference)
		.def("eventGetPlayerStandIn", &AWillowPlayerController::eventGetPlayerStandIn, py::return_value_policy::reference)
		.def("PlayPlayerStandInTeleportEffect", &AWillowPlayerController::PlayPlayerStandInTeleportEffect)
		.def("UpdateRemotePlayerStandIn", &AWillowPlayerController::UpdateRemotePlayerStandIn)
		.def("ClearPlayerStandIn", &AWillowPlayerController::ClearPlayerStandIn)
		.def("RefreshPlayerStandIn", &AWillowPlayerController::RefreshPlayerStandIn)
		.def("PrimaryPlayerUsingSavedCharacter", &AWillowPlayerController::PrimaryPlayerUsingSavedCharacter)
		.def("GetOutermostLevelName", &AWillowPlayerController::GetOutermostLevelName, py::return_value_policy::reference)
		.def("ShouldEnterLobbySpectatorMode", &AWillowPlayerController::ShouldEnterLobbySpectatorMode)
		.def("GetPlayerIndex", &AWillowPlayerController::GetPlayerIndex)
		.def("ClientConsoleCommand", &AWillowPlayerController::ClientConsoleCommand)
		.def("eventCheatServerRCon", &AWillowPlayerController::eventCheatServerRCon)
		.def("eventCheatRCon", &AWillowPlayerController::eventCheatRCon)
		.def("ServerRCon", &AWillowPlayerController::ServerRCon)
		.def("RCon", &AWillowPlayerController::RCon)
		.def("RelevanceUtility", &AWillowPlayerController::RelevanceUtility)
		.def("eventClientSetOneOffCompletion", &AWillowPlayerController::eventClientSetOneOffCompletion)
		.def("eventClientSetLevelChallengeUnlockMask", &AWillowPlayerController::eventClientSetLevelChallengeUnlockMask)
		.def("DetectAndRestoreMissingProfileData", &AWillowPlayerController::DetectAndRestoreMissingProfileData)
		.def("CheckHasCompletedOneOffLevelChallenge", &AWillowPlayerController::CheckHasCompletedOneOffLevelChallenge)
		.def("eventServerCompleteChallenge", &AWillowPlayerController::eventServerCompleteChallenge)
		.def("GetNumLevelObjectsFoundFromBitmask", &AWillowPlayerController::GetNumLevelObjectsFoundFromBitmask)
		.def("GetNumLevelObjectsFound", &AWillowPlayerController::GetNumLevelObjectsFound)
		.def("CheckHasCompletedLevelObjectChallengeFromBitmask", &AWillowPlayerController::CheckHasCompletedLevelObjectChallengeFromBitmask)
		.def("CheckHasCompletedLevelObjectChallenge", &AWillowPlayerController::CheckHasCompletedLevelObjectChallenge)
		.def("SetHasUnlockedLevelChallengeObject", &AWillowPlayerController::SetHasUnlockedLevelChallengeObject)
		.def("GetHasUnlockedLevelChallengeObject", &AWillowPlayerController::GetHasUnlockedLevelChallengeObject)
		.def("SynchronizeLocalDataPackagesWithServer", &AWillowPlayerController::SynchronizeLocalDataPackagesWithServer)
		.def("UpdateOnDemandPackageStatus", &AWillowPlayerController::UpdateOnDemandPackageStatus)
		.def("NotifyServerPackageUnloaded", &AWillowPlayerController::NotifyServerPackageUnloaded)
		.def("NotifyServerPackageLoaded", &AWillowPlayerController::NotifyServerPackageLoaded)
		.def("eventClientUnloadOnDemandPackage", &AWillowPlayerController::eventClientUnloadOnDemandPackage)
		.def("eventClientLoadOnDemandPackage", &AWillowPlayerController::eventClientLoadOnDemandPackage)
		.def("HasPlayerEarnedAnySkillPoints", &AWillowPlayerController::HasPlayerEarnedAnySkillPoints)
		.def("StopAnyBinkMovie", &AWillowPlayerController::StopAnyBinkMovie)
		.def("IsBinkMoviePlaying", &AWillowPlayerController::IsBinkMoviePlaying)
		.def("UseScaleformLoadingMovie", &AWillowPlayerController::UseScaleformLoadingMovie)
		.def("IsAnyBinkMoviePlaying", &AWillowPlayerController::IsAnyBinkMoviePlaying)
		.def("IsLoadingMoviePlaying", &AWillowPlayerController::IsLoadingMoviePlaying)
		.def("UnlockPlayerClassAchievementIfConditionsMet", &AWillowPlayerController::UnlockPlayerClassAchievementIfConditionsMet)
		.def("UnlockAchievementIfConditionsMet", &AWillowPlayerController::UnlockAchievementIfConditionsMet)
		.def("SetDataStoreStringValue", &AWillowPlayerController::SetDataStoreStringValue)
		.def("GetDataStoreStringValue", &AWillowPlayerController::GetDataStoreStringValue, py::return_value_policy::reference)
		.def("MarkStationsAsVisited", &AWillowPlayerController::MarkStationsAsVisited)
		.def("NativeFindActiveStation", &AWillowPlayerController::NativeFindActiveStation, py::return_value_policy::reference)
		.def("GetWorldPawn", &AWillowPlayerController::GetWorldPawn, py::return_value_policy::reference)
		.def("OnSkillTreeReset", &AWillowPlayerController::OnSkillTreeReset)
		.def("OnSkillPointsChanged", &AWillowPlayerController::OnSkillPointsChanged)
		.def("OnSkillGradeChanged", &AWillowPlayerController::OnSkillGradeChanged)
		.def("PreProfileWriteSaveComplete", &AWillowPlayerController::PreProfileWriteSaveComplete)
		.def("OnDownloadPatcherFilesComplete", &AWillowPlayerController::OnDownloadPatcherFilesComplete)
		.def("DisplayTrackedChallenges", [](AWillowPlayerController &self , class AHUD* aHUD) { float* pyout_YL = (float*)malloc(sizeof(float)) ; float* pyout_YPos = (float*)malloc(sizeof(float)) ;   self.DisplayTrackedChallenges(aHUD, pyout_YL, pyout_YPos); return py::make_tuple(*pyout_YL, *pyout_YPos); })
		.def("ClientTravelToSession", [](AWillowPlayerController &self , struct FName SessionName, class UClass* SearchClass) { unsigned char* pyPlatformSpecificInfo = (unsigned char*)malloc(sizeof(unsigned char)) ;   self.ClientTravelToSession(SessionName, SearchClass, pyPlatformSpecificInfo); return py::make_tuple(*pyPlatformSpecificInfo); })
		.def("TryPreferredStat", [](AWillowPlayerController &self , struct FName StatId, int MyIdx, struct FName* BestName) { int* pyBestCount = (int*)malloc(sizeof(int)) ; int* pyBestIdx = (int*)malloc(sizeof(int)) ;   self.TryPreferredStat(StatId, MyIdx, pyBestCount, BestName, pyBestIdx); return py::make_tuple(*pyBestCount, *pyBestIdx); })
		.def("GetPreferredManufacturer", [](AWillowPlayerController &self ) { int* pyBestMfgIdx = (int*)malloc(sizeof(int)) ;  struct FName ret =  self.GetPreferredManufacturer(pyBestMfgIdx); return py::make_tuple(ret, *pyBestMfgIdx); })
		.def("DisplayDebugControllers", [](AWillowPlayerController &self , class AHUD* HUD) { float* pyout_YL = (float*)malloc(sizeof(float)) ; float* pyout_YPos = (float*)malloc(sizeof(float)) ;   self.DisplayDebugControllers(HUD, pyout_YL, pyout_YPos); return py::make_tuple(*pyout_YL, *pyout_YPos); })
		.def("DisplayDebugDamageTypeModifiers", [](AWillowPlayerController &self , class AHUD* HUD) { float* pyout_YL = (float*)malloc(sizeof(float)) ; float* pyout_YPos = (float*)malloc(sizeof(float)) ;   self.DisplayDebugDamageTypeModifiers(HUD, pyout_YL, pyout_YPos); return py::make_tuple(*pyout_YL, *pyout_YPos); })
		.def("DisplayDebugProficiencySkills", [](AWillowPlayerController &self , class AHUD* HUD) { float* pyout_YL = (float*)malloc(sizeof(float)) ; float* pyout_YPos = (float*)malloc(sizeof(float)) ;   self.DisplayDebugProficiencySkills(HUD, pyout_YL, pyout_YPos); return py::make_tuple(*pyout_YL, *pyout_YPos); })
		.def("GetAccuracyExtremes", [](AWillowPlayerController &self , unsigned long bOffHand) { float* pyMinAccuracy = (float*)malloc(sizeof(float)) ; float* pyMaxAccuracy = (float*)malloc(sizeof(float)) ; float* pyCurrentAccuracy = (float*)malloc(sizeof(float)) ;   self.GetAccuracyExtremes(bOffHand, pyMinAccuracy, pyMaxAccuracy, pyCurrentAccuracy); return py::make_tuple(*pyMinAccuracy, *pyMaxAccuracy, *pyCurrentAccuracy); })
		.def("DisplayAudioDebug", [](AWillowPlayerController &self , class AHUD* HUD) { float* pyout_YL = (float*)malloc(sizeof(float)) ; float* pyout_YPos = (float*)malloc(sizeof(float)) ;   self.DisplayAudioDebug(HUD, pyout_YL, pyout_YPos); return py::make_tuple(*pyout_YL, *pyout_YPos); })
		.def("DisplayLevelTransitionState", [](AWillowPlayerController &self , class AHUD* HUD) { float* pyout_YL = (float*)malloc(sizeof(float)) ; float* pyout_YPos = (float*)malloc(sizeof(float)) ;   self.DisplayLevelTransitionState(HUD, pyout_YL, pyout_YPos); return py::make_tuple(*pyout_YL, *pyout_YPos); })
		.def("CanShowModalMenu", [](AWillowPlayerController &self ) { unsigned char* pybDisplayFailureWarning = (unsigned char*)malloc(sizeof(unsigned char)) ;  bool ret =  self.CanShowModalMenu(pybDisplayFailureWarning); return py::make_tuple(ret, *pybDisplayFailureWarning); })
		.def("CheckAllControllersConnected", [](AWillowPlayerController &self ) { int* pyDisconnectedId = (int*)malloc(sizeof(int)) ;  bool ret =  self.CheckAllControllersConnected(pyDisconnectedId); return py::make_tuple(ret, *pyDisconnectedId); })
		.def("GetExpPercentToNextLevel", [](AWillowPlayerController &self , float CurrXp) { int* pyPointsTowardLevel = (int*)malloc(sizeof(int)) ; int* pyPointsRequiredTolevel = (int*)malloc(sizeof(int)) ;  float ret =  self.GetExpPercentToNextLevel(CurrXp, pyPointsTowardLevel, pyPointsRequiredTolevel); return py::make_tuple(ret, *pyPointsTowardLevel, *pyPointsRequiredTolevel); })
		.def("ServerSetSaveGameData", [](AWillowPlayerController &self , int ClientExpLevel, int ClientExpPoints, int ClientGeneralSkillPoints, int ClientSpecialistSkillPoints, int PlaythroughsCompleted) { int* pyCurrencyOnHand = (int*)malloc(sizeof(int)) ;   self.ServerSetSaveGameData(ClientExpLevel, ClientExpPoints, ClientGeneralSkillPoints, ClientSpecialistSkillPoints, pyCurrencyOnHand, PlaythroughsCompleted); return py::make_tuple(*pyCurrencyOnHand); })
		.def("IsInTransitionalVehicleState", [](AWillowPlayerController &self ) { float* pyRemainingTime = (float*)malloc(sizeof(float)) ;  bool ret =  self.IsInTransitionalVehicleState(pyRemainingTime); return py::make_tuple(ret, *pyRemainingTime); })
		.def("CalcCamera", [](AWillowPlayerController &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.CalcCamera(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("DoesObjectCostToUse", [](AWillowPlayerController &self , class UIUsable* UsableObject, unsigned char UsabilityType) { unsigned char* pyCurrencyType = (unsigned char*)malloc(sizeof(unsigned char)) ; int* pyCostsAmount = (int*)malloc(sizeof(int)) ;  bool ret =  self.DoesObjectCostToUse(UsableObject, UsabilityType, pyCurrencyType, pyCostsAmount); return py::make_tuple(ret, *pyCurrencyType, *pyCostsAmount); })
		.def("eventLoadGame", [](AWillowPlayerController &self , struct FString args, unsigned long bUpdatePRI, unsigned long bLoadPlayer, unsigned char LoadPlayerBehavior) { class UPlayerSaveGame** pySaveGame = 0 ;  unsigned char ret =  self.eventLoadGame(args, bUpdatePRI, bLoadPlayer, LoadPlayerBehavior, pySaveGame); return py::make_tuple(ret, *pySaveGame); })
		.def("GetPlayerActiveMissionIndex", [](AWillowPlayerController &self , TArray< struct FStatusMenuMissionEligibilityData >* MissionsInProgress) { int* pyActiveMissionIndex = (int*)malloc(sizeof(int)) ;   self.GetPlayerActiveMissionIndex(MissionsInProgress, pyActiveMissionIndex); return py::make_tuple(*pyActiveMissionIndex); })
		.def("GetPlayerAllMissions", [](AWillowPlayerController &self , TArray< struct FStatusMenuMissionEligibilityData >* MissionsInProgress) { int* pyActiveMissionIndex = (int*)malloc(sizeof(int)) ;   self.GetPlayerAllMissions(MissionsInProgress, pyActiveMissionIndex); return py::make_tuple(*pyActiveMissionIndex); })
		.def("UpdateSavegameForPlaythroughCompletion", [](AWillowPlayerController &self ) { class UPlayerSaveGame** pySaveGame = 0 ;   self.UpdateSavegameForPlaythroughCompletion(pySaveGame); return py::make_tuple(*pySaveGame); })
		.def("GetChallengeTotalProgress", [](AWillowPlayerController &self , class UChallengeDefinition* ChalDef) { int* pyCurrentValue = (int*)malloc(sizeof(int)) ; int* pyTargetValue = (int*)malloc(sizeof(int)) ;  bool ret =  self.GetChallengeTotalProgress(ChalDef, pyCurrentValue, pyTargetValue); return py::make_tuple(ret, *pyCurrentValue, *pyTargetValue); })
		.def("GetChallengeCurrentLevelProgress", [](AWillowPlayerController &self , class UChallengeDefinition* ChalDef) { int* pyCurrentValue = (int*)malloc(sizeof(int)) ; int* pyTargetValue = (int*)malloc(sizeof(int)) ; int* pyCurrentLevel = (int*)malloc(sizeof(int)) ;  bool ret =  self.GetChallengeCurrentLevelProgress(ChalDef, pyCurrentValue, pyTargetValue, pyCurrentLevel); return py::make_tuple(ret, *pyCurrentValue, *pyTargetValue, *pyCurrentLevel); })
		;
	py::class_< UPlayerSkillTree, UObject >(m, "UPlayerSkillTree")
		.def_property("bSuppressNotifications", [](UPlayerSkillTree &self){return self.bSuppressNotifications;}, [](UPlayerSkillTree &self, bool value){self.bSuppressNotifications = value ? 1 : 0;})
		.def_property("bInitialized", [](UPlayerSkillTree &self){return self.bInitialized;}, [](UPlayerSkillTree &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_readwrite("SkillTreeRootIndex", &UPlayerSkillTree::SkillTreeRootIndex)
		.def_readwrite("Branches", &UPlayerSkillTree::Branches, py::return_value_policy::reference)
		.def_readwrite("Tiers", &UPlayerSkillTree::Tiers, py::return_value_policy::reference)
		.def_readwrite("Skills", &UPlayerSkillTree::Skills, py::return_value_policy::reference)
		.def_readwrite("SkillTreeListeners", &UPlayerSkillTree::SkillTreeListeners, py::return_value_policy::reference)
		.def("GetSkillPointsSpentInTree", &UPlayerSkillTree::GetSkillPointsSpentInTree)
		.def("UnRegisterListener", &UPlayerSkillTree::UnRegisterListener)
		.def("RegisterListener", &UPlayerSkillTree::RegisterListener)
		.def("Initialize", &UPlayerSkillTree::Initialize)
		.def("UpdateBranchProgression", &UPlayerSkillTree::UpdateBranchProgression)
		.def("InitializeGFxHelper", &UPlayerSkillTree::InitializeGFxHelper)
		.def("InitializeGFxHelper_ActionAbility", &UPlayerSkillTree::InitializeGFxHelper_ActionAbility)
		.def("HasTrainedASkillOfType", &UPlayerSkillTree::HasTrainedASkillOfType)
		.def("GetActionSkill", &UPlayerSkillTree::GetActionSkill, py::return_value_policy::reference)
		.def("ApplySkillSaveGameData", &UPlayerSkillTree::ApplySkillSaveGameData)
		.def("SaveSkillSaveGameData", &UPlayerSkillTree::SaveSkillSaveGameData)
		.def("GetTierLayout", &UPlayerSkillTree::GetTierLayout)
		.def("GetTierState", &UPlayerSkillTree::GetTierState)
		.def("GetBranchState", &UPlayerSkillTree::GetBranchState)
		.def("GetSkillState", &UPlayerSkillTree::GetSkillState)
		.def("DumpTree", &UPlayerSkillTree::DumpTree)
		.def("SetSkillGrade", &UPlayerSkillTree::SetSkillGrade)
		.def("UpgradeSkill", &UPlayerSkillTree::UpgradeSkill)
		.def("AllSkills", [](UPlayerSkillTree &self ) { class USkillDefinition** pySkillDef = 0 ;   self.AllSkills(pySkillDef); return py::make_tuple(*pySkillDef); })
		.def("AllSkillsOfType", [](UPlayerSkillTree &self , unsigned char SkillType) { class USkillDefinition** pySkillDef = 0 ;   self.AllSkillsOfType(SkillType, pySkillDef); return py::make_tuple(*pySkillDef); })
		;
#ifndef _DEBUG
	py::class_< APlayerStandIn, AActor >(m, "APlayerStandIn")
		.def_property("bIsPrimary", [](APlayerStandIn &self){return self.bIsPrimary;}, [](APlayerStandIn &self, bool value){self.bIsPrimary = value ? 1 : 0;})
		.def_property("bDisplayGear", [](APlayerStandIn &self){return self.bDisplayGear;}, [](APlayerStandIn &self, bool value){self.bDisplayGear = value ? 1 : 0;})
		.def_property("bDisplayInForeground", [](APlayerStandIn &self){return self.bDisplayInForeground;}, [](APlayerStandIn &self, bool value){self.bDisplayInForeground = value ? 1 : 0;})
		.def_property("bHasHead", [](APlayerStandIn &self){return self.bHasHead;}, [](APlayerStandIn &self, bool value){self.bHasHead = value ? 1 : 0;})
		.def_property("bHasSkin", [](APlayerStandIn &self){return self.bHasSkin;}, [](APlayerStandIn &self, bool value){self.bHasSkin = value ? 1 : 0;})
		.def_property("bAwaitingCustomizationsForTeleportEffect", [](APlayerStandIn &self){return self.bAwaitingCustomizationsForTeleportEffect;}, [](APlayerStandIn &self, bool value){self.bAwaitingCustomizationsForTeleportEffect = value ? 1 : 0;})
		.def_readwrite("VfTable_IIGearLikenessConsumer", &APlayerStandIn::VfTable_IIGearLikenessConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyCompositionInstance", &APlayerStandIn::VfTable_IIBodyCompositionInstance, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyInfoProvider", &APlayerStandIn::VfTable_IIBodyInfoProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IICustomizable", &APlayerStandIn::VfTable_IICustomizable, py::return_value_policy::reference)
		.def_readwrite("OwningPRI", &APlayerStandIn::OwningPRI, py::return_value_policy::reference)
		.def_readwrite("SaveGame", &APlayerStandIn::SaveGame, py::return_value_policy::reference)
		.def_readwrite("LastDataRequestTimeStamp", &APlayerStandIn::LastDataRequestTimeStamp)
		.def_readwrite("BodyClass", &APlayerStandIn::BodyClass, py::return_value_policy::reference)
		.def_readwrite("PlayerMeshComp", &APlayerStandIn::PlayerMeshComp, py::return_value_policy::reference)
		.def_readwrite("LightEnvironment", &APlayerStandIn::LightEnvironment, py::return_value_policy::reference)
		.def_readwrite("InstanceState", &APlayerStandIn::InstanceState, py::return_value_policy::reference)
		.def_readwrite("Weapon1Data", &APlayerStandIn::Weapon1Data, py::return_value_policy::reference)
		.def_readwrite("Weapon2Data", &APlayerStandIn::Weapon2Data, py::return_value_policy::reference)
		.def_readwrite("ShieldData", &APlayerStandIn::ShieldData, py::return_value_policy::reference)
		.def_readwrite("GrenadeModData", &APlayerStandIn::GrenadeModData, py::return_value_policy::reference)
		.def_readwrite("ClassModData", &APlayerStandIn::ClassModData, py::return_value_policy::reference)
		.def_readwrite("ExtraPlayerMeshOffset", &APlayerStandIn::ExtraPlayerMeshOffset, py::return_value_policy::reference)
		.def_readwrite("ExtraPlayerMeshRotation", &APlayerStandIn::ExtraPlayerMeshRotation, py::return_value_policy::reference)
		.def("SetExtraPlayerMeshRotation", &APlayerStandIn::SetExtraPlayerMeshRotation)
		.def("SetExtraPlayerMeshOffset", &APlayerStandIn::SetExtraPlayerMeshOffset)
		.def("ClearBodyCompositionInstance", &APlayerStandIn::ClearBodyCompositionInstance)
		.def("ApplyPreviewBodyComposition", &APlayerStandIn::ApplyPreviewBodyComposition)
		.def("GetBodyInfoProvider", &APlayerStandIn::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("ChangeInstanceDataSwitch", &APlayerStandIn::ChangeInstanceDataSwitch)
		.def("PostInitBodyComposition", &APlayerStandIn::PostInitBodyComposition)
		.def("PreRemoveBodyComposition", &APlayerStandIn::PreRemoveBodyComposition)
		.def("ShouldRefreshLikenessOf", &APlayerStandIn::ShouldRefreshLikenessOf)
		.def("AssumeLikenessOf", &APlayerStandIn::AssumeLikenessOf)
		.def("eventCloneItemMesh", &APlayerStandIn::eventCloneItemMesh)
		.def("eventCloneWeaponMesh", &APlayerStandIn::eventCloneWeaponMesh)
		.def("InitWeaponMesh", &APlayerStandIn::InitWeaponMesh)
		.def("RefreshGearForRemotePlayer", &APlayerStandIn::RefreshGearForRemotePlayer)
		.def("PlayGearDigistructInEffect", &APlayerStandIn::PlayGearDigistructInEffect)
		.def("HideEquippedGear", &APlayerStandIn::HideEquippedGear)
		.def("eventPlayStandInTeleportEffect", &APlayerStandIn::eventPlayStandInTeleportEffect)
		.def("RemoveAllComponents", &APlayerStandIn::RemoveAllComponents)
		.def("Initialize", &APlayerStandIn::Initialize)
		.def("AllowFallbackToDefaultCustomizations", &APlayerStandIn::AllowFallbackToDefaultCustomizations)
		.def("RefreshCustomizationsOnInstanceData", &APlayerStandIn::RefreshCustomizationsOnInstanceData)
		.def("GetCustomizableName", &APlayerStandIn::GetCustomizableName, py::return_value_policy::reference)
		.def("GetCustomizableInstanceDataSets", &APlayerStandIn::GetCustomizableInstanceDataSets)
		.def("GetDesiredCustomizationOfType", &APlayerStandIn::GetDesiredCustomizationOfType, py::return_value_policy::reference)
		.def("CustomizationApplied", &APlayerStandIn::CustomizationApplied)
		.def("Destroyed", &APlayerStandIn::Destroyed)
		.def("PostBeginPlay", &APlayerStandIn::PostBeginPlay)
		;
	py::class_< UPlayerStatAttributeValueResolver, UAttributeValueResolver >(m, "UPlayerStatAttributeValueResolver")
		.def_readwrite("StatName", &UPlayerStatAttributeValueResolver::StatName, py::return_value_policy::reference)
		;
	py::class_< UPlayThroughCountAttributeValueResolver, UAttributeValueResolver >(m, "UPlayThroughCountAttributeValueResolver")
		.def_readwrite("IncludePlaythroughThree", &UPlayThroughCountAttributeValueResolver::IncludePlaythroughThree)
		;
	py::class_< UPopulationFactoryInteractiveObject, UPopulationFactory >(m, "UPopulationFactoryInteractiveObject")
		.def_property("bSpawnObjectOnGround", [](UPopulationFactoryInteractiveObject &self){return self.bSpawnObjectOnGround;}, [](UPopulationFactoryInteractiveObject &self, bool value){self.bSpawnObjectOnGround = value ? 1 : 0;})
		.def_readwrite("ObjectDefinition", &UPopulationFactoryInteractiveObject::ObjectDefinition, py::return_value_policy::reference)
		.def_readwrite("ObjectBalanceDefinition", &UPopulationFactoryInteractiveObject::ObjectBalanceDefinition, py::return_value_policy::reference)
		.def_readwrite("EnabledBehaviorSets", &UPopulationFactoryInteractiveObject::EnabledBehaviorSets, py::return_value_policy::reference)
		.def_readwrite("AttributeStartingValues", &UPopulationFactoryInteractiveObject::AttributeStartingValues, py::return_value_policy::reference)
		.def("eventGetDescriptionOfFactoryOutput", &UPopulationFactoryInteractiveObject::eventGetDescriptionOfFactoryOutput, py::return_value_policy::reference)
		.def("GetSpawnLocation", &UPopulationFactoryInteractiveObject::GetSpawnLocation, py::return_value_policy::reference)
		.def("CreateInteractiveObject", &UPopulationFactoryInteractiveObject::CreateInteractiveObject, py::return_value_policy::reference)
		.def("eventGetPopulatedInteractiveObjectMemento", &UPopulationFactoryInteractiveObject::eventGetPopulatedInteractiveObjectMemento)
		.def("eventShouldSavePopulationActor", &UPopulationFactoryInteractiveObject::eventShouldSavePopulationActor)
		.def("eventRestoreInteractiveObject", &UPopulationFactoryInteractiveObject::eventRestoreInteractiveObject, py::return_value_policy::reference)
		.def("eventCreatePopulationActor", &UPopulationFactoryInteractiveObject::eventCreatePopulationActor, py::return_value_policy::reference)
		.def("eventGetSpawnVisibilityBounds", &UPopulationFactoryInteractiveObject::eventGetSpawnVisibilityBounds, py::return_value_policy::reference)
		.def("GetActorAllegiance", &UPopulationFactoryInteractiveObject::GetActorAllegiance, py::return_value_policy::reference)
		.def("GetObjectDefinition", &UPopulationFactoryInteractiveObject::GetObjectDefinition, py::return_value_policy::reference)
		;
	py::class_< UPopulationFactoryBlackMarket, UPopulationFactoryInteractiveObject >(m, "UPopulationFactoryBlackMarket")
		.def_readwrite("MarketDefinition", &UPopulationFactoryBlackMarket::MarketDefinition, py::return_value_policy::reference)
		.def("eventShouldSavePopulationActor", &UPopulationFactoryBlackMarket::eventShouldSavePopulationActor)
		.def("CreateInteractiveObject", &UPopulationFactoryBlackMarket::CreateInteractiveObject, py::return_value_policy::reference)
		.def("eventCreatePopulationActor", &UPopulationFactoryBlackMarket::eventCreatePopulationActor, py::return_value_policy::reference)
		;
	py::class_< UPopulationFactoryVendingMachine, UPopulationFactoryInteractiveObject >(m, "UPopulationFactoryVendingMachine")
		.def_property("bOverrideFormOfCurrency", [](UPopulationFactoryVendingMachine &self){return self.bOverrideFormOfCurrency;}, [](UPopulationFactoryVendingMachine &self, bool value){self.bOverrideFormOfCurrency = value ? 1 : 0;})
		.def_readwrite("ShopType", &UPopulationFactoryVendingMachine::ShopType)
		.def_readwrite("FormOfCurrency", &UPopulationFactoryVendingMachine::FormOfCurrency)
		.def_readwrite("CommerceMarkup", &UPopulationFactoryVendingMachine::CommerceMarkup, py::return_value_policy::reference)
		.def_readwrite("LootConfiguration", &UPopulationFactoryVendingMachine::LootConfiguration, py::return_value_policy::reference)
		.def_readwrite("FeaturedItem", &UPopulationFactoryVendingMachine::FeaturedItem, py::return_value_policy::reference)
		.def_readwrite("FixedItemCost", &UPopulationFactoryVendingMachine::FixedItemCost)
		.def_readwrite("FixedFeaturedItemCost", &UPopulationFactoryVendingMachine::FixedFeaturedItemCost)
		.def("eventShouldSavePopulationActor", &UPopulationFactoryVendingMachine::eventShouldSavePopulationActor)
		.def("CreateInteractiveObject", &UPopulationFactoryVendingMachine::CreateInteractiveObject, py::return_value_policy::reference)
		.def("eventCreatePopulationActor", &UPopulationFactoryVendingMachine::eventCreatePopulationActor, py::return_value_policy::reference)
		;
	py::class_< UPopulationFactoryWillowProjectile, UPopulationFactory >(m, "UPopulationFactoryWillowProjectile")
		.def_property("InheritParentVelocity", [](UPopulationFactoryWillowProjectile &self){return self.InheritParentVelocity;}, [](UPopulationFactoryWillowProjectile &self, bool value){self.InheritParentVelocity = value ? 1 : 0;})
		.def_readwrite("AttachmentPointName", &UPopulationFactoryWillowProjectile::AttachmentPointName, py::return_value_policy::reference)
		.def_readwrite("SpawnDirection", &UPopulationFactoryWillowProjectile::SpawnDirection)
		.def_readwrite("ProjectileDefinition", &UPopulationFactoryWillowProjectile::ProjectileDefinition, py::return_value_policy::reference)
		.def_readwrite("RelativeLocation", &UPopulationFactoryWillowProjectile::RelativeLocation, py::return_value_policy::reference)
		.def_readwrite("DirectionConeSize", &UPopulationFactoryWillowProjectile::DirectionConeSize)
		.def("eventGetDescriptionOfFactoryOutput", &UPopulationFactoryWillowProjectile::eventGetDescriptionOfFactoryOutput, py::return_value_policy::reference)
		.def("CreateProjectile", &UPopulationFactoryWillowProjectile::CreateProjectile, py::return_value_policy::reference)
		.def("eventDestroyPopulationActor", &UPopulationFactoryWillowProjectile::eventDestroyPopulationActor)
		.def("eventCreatePopulationActor", &UPopulationFactoryWillowProjectile::eventCreatePopulationActor, py::return_value_policy::reference)
		.def("GetActorAllegiance", &UPopulationFactoryWillowProjectile::GetActorAllegiance, py::return_value_policy::reference)
		;
	py::class_< UPopulationFactoryWillowVehicle, UPopulationFactory >(m, "UPopulationFactoryWillowVehicle")
		.def_readwrite("VehicleBalanceDefinition", &UPopulationFactoryWillowVehicle::VehicleBalanceDefinition, py::return_value_policy::reference)
		.def_readwrite("VehicleArchetype", &UPopulationFactoryWillowVehicle::VehicleArchetype, py::return_value_policy::reference)
		.def_readwrite("SpawnAllegiance", &UPopulationFactoryWillowVehicle::SpawnAllegiance, py::return_value_policy::reference)
		.def_readwrite("TeamNum", &UPopulationFactoryWillowVehicle::TeamNum)
		.def_readwrite("ItemPoolList", &UPopulationFactoryWillowVehicle::ItemPoolList, py::return_value_policy::reference)
		.def_readwrite("ItemPoolIncludedLists", &UPopulationFactoryWillowVehicle::ItemPoolIncludedLists, py::return_value_policy::reference)
		.def_readwrite("DefaultCrew", &UPopulationFactoryWillowVehicle::DefaultCrew, py::return_value_policy::reference)
		.def_readwrite("InitialGunRotations", &UPopulationFactoryWillowVehicle::InitialGunRotations, py::return_value_policy::reference)
		.def_readwrite("BalanceVehicleFor", &UPopulationFactoryWillowVehicle::BalanceVehicleFor)
		.def("eventDestroyPopulationActor", &UPopulationFactoryWillowVehicle::eventDestroyPopulationActor)
		.def("eventGetDescriptionOfFactoryOutput", &UPopulationFactoryWillowVehicle::eventGetDescriptionOfFactoryOutput, py::return_value_policy::reference)
		.def("eventCreatePopulationActor", &UPopulationFactoryWillowVehicle::eventCreatePopulationActor, py::return_value_policy::reference)
		.def("InitializeClone", &UPopulationFactoryWillowVehicle::InitializeClone)
		.def("GetAContextSourceForThePopulationActor", &UPopulationFactoryWillowVehicle::GetAContextSourceForThePopulationActor, py::return_value_policy::reference)
		.def("eventGetSpawnVisibilityBounds", &UPopulationFactoryWillowVehicle::eventGetSpawnVisibilityBounds, py::return_value_policy::reference)
		.def("GetActorAllegiance", &UPopulationFactoryWillowVehicle::GetActorAllegiance, py::return_value_policy::reference)
		.def("eventGetActorSpawnCost", &UPopulationFactoryWillowVehicle::eventGetActorSpawnCost)
		.def("GetVehicleArchetype", &UPopulationFactoryWillowVehicle::GetVehicleArchetype, py::return_value_policy::reference)
		;
	py::class_< APopulationOpportunityDen, APopulationOpportunity >(m, "APopulationOpportunityDen")
		.def_property("bIsCriticalActor", [](APopulationOpportunityDen &self){return self.bIsCriticalActor;}, [](APopulationOpportunityDen &self, bool value){self.bIsCriticalActor = value ? 1 : 0;})
		.def_property("bApplyAspectToChildAI", [](APopulationOpportunityDen &self){return self.bApplyAspectToChildAI;}, [](APopulationOpportunityDen &self, bool value){self.bApplyAspectToChildAI = value ? 1 : 0;})
		.def_property("bOpportunityRadius", [](APopulationOpportunityDen &self){return self.bOpportunityRadius;}, [](APopulationOpportunityDen &self, bool value){self.bOpportunityRadius = value ? 1 : 0;})
		.def_property("bAlwaysSeeInThreatRadius", [](APopulationOpportunityDen &self){return self.bAlwaysSeeInThreatRadius;}, [](APopulationOpportunityDen &self, bool value){self.bAlwaysSeeInThreatRadius = value ? 1 : 0;})
		.def_property("bPatrolDen", [](APopulationOpportunityDen &self){return self.bPatrolDen;}, [](APopulationOpportunityDen &self, bool value){self.bPatrolDen = value ? 1 : 0;})
		.def_property("bNeutral", [](APopulationOpportunityDen &self){return self.bNeutral;}, [](APopulationOpportunityDen &self, bool value){self.bNeutral = value ? 1 : 0;})
		.def_property("bCombatVolumeOnlyLimitsRangedAttacks", [](APopulationOpportunityDen &self){return self.bCombatVolumeOnlyLimitsRangedAttacks;}, [](APopulationOpportunityDen &self, bool value){self.bCombatVolumeOnlyLimitsRangedAttacks = value ? 1 : 0;})
		.def_property("bPlayerHasBeenDetected", [](APopulationOpportunityDen &self){return self.bPlayerHasBeenDetected;}, [](APopulationOpportunityDen &self, bool value){self.bPlayerHasBeenDetected = value ? 1 : 0;})
		.def_property("bKeepLeader", [](APopulationOpportunityDen &self){return self.bKeepLeader;}, [](APopulationOpportunityDen &self, bool value){self.bKeepLeader = value ? 1 : 0;})
		.def_property("bFoundPerches", [](APopulationOpportunityDen &self){return self.bFoundPerches;}, [](APopulationOpportunityDen &self, bool value){self.bFoundPerches = value ? 1 : 0;})
		.def_property("bFoundRallyPoints", [](APopulationOpportunityDen &self){return self.bFoundRallyPoints;}, [](APopulationOpportunityDen &self, bool value){self.bFoundRallyPoints = value ? 1 : 0;})
		.def_readwrite("VfTable_IIAIInterface", &APopulationOpportunityDen::VfTable_IIAIInterface, py::return_value_policy::reference)
		.def_readwrite("MaxActiveActorsIsNormal", &APopulationOpportunityDen::MaxActiveActorsIsNormal)
		.def_readwrite("MaxActiveActorsThreatened", &APopulationOpportunityDen::MaxActiveActorsThreatened)
		.def_readwrite("MaxTotalActorsFormula", &APopulationOpportunityDen::MaxTotalActorsFormula, py::return_value_policy::reference)
		.def_readwrite("ParentEncounter", &APopulationOpportunityDen::ParentEncounter, py::return_value_policy::reference)
		.def_readwrite("ParentEncounterWave", &APopulationOpportunityDen::ParentEncounterWave)
		.def_readwrite("PopulationDef", &APopulationOpportunityDen::PopulationDef, py::return_value_policy::reference)
		.def_readwrite("RespawnDelay", &APopulationOpportunityDen::RespawnDelay)
		.def_readwrite("DetectionVolumes", &APopulationOpportunityDen::DetectionVolumes, py::return_value_policy::reference)
		.def_readwrite("DenHeight", &APopulationOpportunityDen::DenHeight)
		.def_readwrite("SpawnRadius", &APopulationOpportunityDen::SpawnRadius)
		.def_readwrite("PatrolRadius", &APopulationOpportunityDen::PatrolRadius)
		.def_readwrite("ThreatRadius", &APopulationOpportunityDen::ThreatRadius)
		.def_readwrite("SharedThreatDens", &APopulationOpportunityDen::SharedThreatDens, py::return_value_policy::reference)
		.def_readwrite("OverrideAllegiance", &APopulationOpportunityDen::OverrideAllegiance, py::return_value_policy::reference)
		.def_readwrite("CombatVolume", &APopulationOpportunityDen::CombatVolume, py::return_value_policy::reference)
		.def_readwrite("MaxTotalActors", &APopulationOpportunityDen::MaxTotalActors)
		.def_readwrite("Allegiance", &APopulationOpportunityDen::Allegiance, py::return_value_policy::reference)
		.def_readwrite("SpawnedDenMembers", &APopulationOpportunityDen::SpawnedDenMembers, py::return_value_policy::reference)
		.def_readwrite("SpawnData", &APopulationOpportunityDen::SpawnData, py::return_value_policy::reference)
		.def_readwrite("Leader", &APopulationOpportunityDen::Leader, py::return_value_policy::reference)
		.def_readwrite("Perches", &APopulationOpportunityDen::Perches, py::return_value_policy::reference)
		.def_readwrite("CurrentRallyPoint", &APopulationOpportunityDen::CurrentRallyPoint, py::return_value_policy::reference)
		.def_readwrite("RallyPoints", &APopulationOpportunityDen::RallyPoints, py::return_value_policy::reference)
		.def_readwrite("Flag_ShouldRally", &APopulationOpportunityDen::Flag_ShouldRally, py::return_value_policy::reference)
		.def_readwrite("AIComponent", &APopulationOpportunityDen::AIComponent, py::return_value_policy::reference)
		.def_readwrite("TrackedStat", &APopulationOpportunityDen::TrackedStat)
		.def_readwrite("StatValue", &APopulationOpportunityDen::StatValue)
		.def("ApplyPreviewBodyComposition", &APopulationOpportunityDen::ApplyPreviewBodyComposition)
		.def("GetBodyInfoProvider", &APopulationOpportunityDen::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("OnAIAbortMoveToActor", &APopulationOpportunityDen::OnAIAbortMoveToActor)
		.def("OnAICombatVolume", &APopulationOpportunityDen::OnAICombatVolume)
		.def("OnAIScripted", &APopulationOpportunityDen::OnAIScripted)
		.def("OnAIScriptedAnim", &APopulationOpportunityDen::OnAIScriptedAnim)
		.def("OnAIScriptedDeath", &APopulationOpportunityDen::OnAIScriptedDeath)
		.def("OnAIScriptedFollow", &APopulationOpportunityDen::OnAIScriptedFollow)
		.def("OnAIScriptedHold", &APopulationOpportunityDen::OnAIScriptedHold)
		.def("OnAISetItemTossTarget", &APopulationOpportunityDen::OnAISetItemTossTarget)
		.def("OnAIProvoke", &APopulationOpportunityDen::OnAIProvoke)
		.def("RemoveStat", &APopulationOpportunityDen::RemoveStat)
		.def("AddStat", &APopulationOpportunityDen::AddStat)
		.def("InitSequence", &APopulationOpportunityDen::InitSequence)
		.def("GetAIDefinition", &APopulationOpportunityDen::GetAIDefinition, py::return_value_policy::reference)
		.def("GetAIComponent", &APopulationOpportunityDen::GetAIComponent, py::return_value_policy::reference)
		.def("GetAIParent", &APopulationOpportunityDen::GetAIParent, py::return_value_policy::reference)
		.def("GetAILocation", &APopulationOpportunityDen::GetAILocation, py::return_value_policy::reference)
		.def("GetAIActor", &APopulationOpportunityDen::GetAIActor, py::return_value_policy::reference)
		.def("CanTickAI", &APopulationOpportunityDen::CanTickAI)
		.def("TriggerProvokedEvents", &APopulationOpportunityDen::TriggerProvokedEvents)
		.def("SetAllegiance", &APopulationOpportunityDen::SetAllegiance)
		.def("GetAllegiance", &APopulationOpportunityDen::GetAllegiance, py::return_value_policy::reference)
		.def("GetDenMembers", &APopulationOpportunityDen::GetDenMembers)
		.def("eventTriggerKismetDeathEvent", &APopulationOpportunityDen::eventTriggerKismetDeathEvent)
		.def("SpawnedCanAttackVehicles", &APopulationOpportunityDen::SpawnedCanAttackVehicles)
		.def("GetNumSpawned", &APopulationOpportunityDen::GetNumSpawned)
		.def("GetNumAlive", &APopulationOpportunityDen::GetNumAlive)
		.def("GetNumDied", &APopulationOpportunityDen::GetNumDied)
		.def("GetRallyPoint", &APopulationOpportunityDen::GetRallyPoint, py::return_value_policy::reference)
		.def("ChooseNewRallyPoint", &APopulationOpportunityDen::ChooseNewRallyPoint)
		.def("FindRallyPoints", &APopulationOpportunityDen::FindRallyPoints)
		.def("TryToAddPerch", &APopulationOpportunityDen::TryToAddPerch)
		.def("FindPerches", &APopulationOpportunityDen::FindPerches)
		.def("EnableDebugging", &APopulationOpportunityDen::EnableDebugging)
		.def("RespawnKilledActors", &APopulationOpportunityDen::RespawnKilledActors)
		.def("DoSpawning", &APopulationOpportunityDen::DoSpawning)
		.def("PostBeginPlay", &APopulationOpportunityDen::PostBeginPlay)
		;
	py::class_< APopulationOpportunityDen_Dynamic, APopulationOpportunityDen >(m, "APopulationOpportunityDen_Dynamic")
		.def_property("bGetGameStageFromOwner", [](APopulationOpportunityDen_Dynamic &self){return self.bGetGameStageFromOwner;}, [](APopulationOpportunityDen_Dynamic &self, bool value){self.bGetGameStageFromOwner = value ? 1 : 0;})
		.def_readwrite("DynamicPointName", &APopulationOpportunityDen_Dynamic::DynamicPointName, py::return_value_policy::reference)
		.def_readwrite("DynamicPointRadius", &APopulationOpportunityDen_Dynamic::DynamicPointRadius)
		.def("eventDestroyed", &APopulationOpportunityDen_Dynamic::eventDestroyed)
		.def("ApplyPreviewBodyComposition", &APopulationOpportunityDen_Dynamic::ApplyPreviewBodyComposition)
		.def("GetBodyInfoProvider", &APopulationOpportunityDen_Dynamic::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("GetOpportunityGameStage", [](APopulationOpportunityDen_Dynamic &self ) { int* pyGameStage = (int*)malloc(sizeof(int)) ; int* pyAwesomeLevel = (int*)malloc(sizeof(int)) ;  bool ret =  self.GetOpportunityGameStage(pyGameStage, pyAwesomeLevel); return py::make_tuple(ret, *pyGameStage, *pyAwesomeLevel); })
		;
	py::class_< UPopulationOpportunityDenRenderingComponent, UPrimitiveComponent >(m, "UPopulationOpportunityDenRenderingComponent")
		;
	py::class_< UPostureStateExpressionEvaluator, UExpressionEvaluator >(m, "UPostureStateExpressionEvaluator")
		.def_property("bStanding", [](UPostureStateExpressionEvaluator &self){return self.bStanding;}, [](UPostureStateExpressionEvaluator &self, bool value){self.bStanding = value ? 1 : 0;})
		.def_property("bCrouched", [](UPostureStateExpressionEvaluator &self){return self.bCrouched;}, [](UPostureStateExpressionEvaluator &self, bool value){self.bCrouched = value ? 1 : 0;})
		.def_property("bInjured", [](UPostureStateExpressionEvaluator &self){return self.bInjured;}, [](UPostureStateExpressionEvaluator &self, bool value){self.bInjured = value ? 1 : 0;})
		.def_property("bSprinting", [](UPostureStateExpressionEvaluator &self){return self.bSprinting;}, [](UPostureStateExpressionEvaluator &self, bool value){self.bSprinting = value ? 1 : 0;})
		.def("Evaluate", &UPostureStateExpressionEvaluator::Evaluate)
		;
	py::class_< UProjectileBehaviorBase, UBehaviorBase >(m, "UProjectileBehaviorBase")
		;
	py::class_< UProjectileBehavior_Bounce, UProjectileBehaviorBase >(m, "UProjectileBehavior_Bounce")
		.def_readwrite("BounceAkEvent", &UProjectileBehavior_Bounce::BounceAkEvent, py::return_value_policy::reference)
		.def_readwrite("ElasticityScaleFormula", &UProjectileBehavior_Bounce::ElasticityScaleFormula, py::return_value_policy::reference)
		.def_readwrite("HitNormal", &UProjectileBehavior_Bounce::HitNormal, py::return_value_policy::reference)
		.def_readwrite("ElasticityScale", &UProjectileBehavior_Bounce::ElasticityScale)
		.def("ApplyBehaviorToContext", &UProjectileBehavior_Bounce::ApplyBehaviorToContext)
		;
	py::class_< UProjectileDefinition, UGBXDefinition >(m, "UProjectileDefinition")
		.def_property("bAllowRigidBodyImpactEffect", [](UProjectileDefinition &self){return self.bAllowRigidBodyImpactEffect;}, [](UProjectileDefinition &self, bool value){self.bAllowRigidBodyImpactEffect = value ? 1 : 0;})
		.def_property("bUseCustomAimDirection", [](UProjectileDefinition &self){return self.bUseCustomAimDirection;}, [](UProjectileDefinition &self, bool value){self.bUseCustomAimDirection = value ? 1 : 0;})
		.def_property("bAlwaysOrientInDirectionOfMovement", [](UProjectileDefinition &self){return self.bAlwaysOrientInDirectionOfMovement;}, [](UProjectileDefinition &self, bool value){self.bAlwaysOrientInDirectionOfMovement = value ? 1 : 0;})
		.def_property("bReplicateMovement", [](UProjectileDefinition &self){return self.bReplicateMovement;}, [](UProjectileDefinition &self, bool value){self.bReplicateMovement = value ? 1 : 0;})
		.def_property("bInheritVehicleVelocity", [](UProjectileDefinition &self){return self.bInheritVehicleVelocity;}, [](UProjectileDefinition &self, bool value){self.bInheritVehicleVelocity = value ? 1 : 0;})
		.def_property("bIgnoreRigidBodyPawns", [](UProjectileDefinition &self){return self.bIgnoreRigidBodyPawns;}, [](UProjectileDefinition &self, bool value){self.bIgnoreRigidBodyPawns = value ? 1 : 0;})
		.def_property("bTreatVehicleHitsAsTouch", [](UProjectileDefinition &self){return self.bTreatVehicleHitsAsTouch;}, [](UProjectileDefinition &self, bool value){self.bTreatVehicleHitsAsTouch = value ? 1 : 0;})
		.def_property("bCanTouchInstigator", [](UProjectileDefinition &self){return self.bCanTouchInstigator;}, [](UProjectileDefinition &self, bool value){self.bCanTouchInstigator = value ? 1 : 0;})
		.def_property("bCollideActors", [](UProjectileDefinition &self){return self.bCollideActors;}, [](UProjectileDefinition &self, bool value){self.bCollideActors = value ? 1 : 0;})
		.def_property("bStickyProjectilesDontChangeCollisionSize", [](UProjectileDefinition &self){return self.bStickyProjectilesDontChangeCollisionSize;}, [](UProjectileDefinition &self, bool value){self.bStickyProjectilesDontChangeCollisionSize = value ? 1 : 0;})
		.def_property("bSpawnNoCollisionFail", [](UProjectileDefinition &self){return self.bSpawnNoCollisionFail;}, [](UProjectileDefinition &self, bool value){self.bSpawnNoCollisionFail = value ? 1 : 0;})
		.def_property("bClientIgnoreHitAndTouch", [](UProjectileDefinition &self){return self.bClientIgnoreHitAndTouch;}, [](UProjectileDefinition &self, bool value){self.bClientIgnoreHitAndTouch = value ? 1 : 0;})
		.def_property("bAlsoUseZeroExtentTrace", [](UProjectileDefinition &self){return self.bAlsoUseZeroExtentTrace;}, [](UProjectileDefinition &self, bool value){self.bAlsoUseZeroExtentTrace = value ? 1 : 0;})
		.def_property("bCanTakeDirectDamage", [](UProjectileDefinition &self){return self.bCanTakeDirectDamage;}, [](UProjectileDefinition &self, bool value){self.bCanTakeDirectDamage = value ? 1 : 0;})
		.def_property("bCanTakeRadiusDamage", [](UProjectileDefinition &self){return self.bCanTakeRadiusDamage;}, [](UProjectileDefinition &self, bool value){self.bCanTakeRadiusDamage = value ? 1 : 0;})
		.def_property("CanTarget", [](UProjectileDefinition &self){return self.CanTarget;}, [](UProjectileDefinition &self, bool value){self.CanTarget = value ? 1 : 0;})
		.def_property("bWaitForEffects", [](UProjectileDefinition &self){return self.bWaitForEffects;}, [](UProjectileDefinition &self, bool value){self.bWaitForEffects = value ? 1 : 0;})
		.def_property("bTreatProjectileAsEnemy", [](UProjectileDefinition &self){return self.bTreatProjectileAsEnemy;}, [](UProjectileDefinition &self, bool value){self.bTreatProjectileAsEnemy = value ? 1 : 0;})
		.def_property("SmoothHomingReplication", [](UProjectileDefinition &self){return self.SmoothHomingReplication;}, [](UProjectileDefinition &self, bool value){self.SmoothHomingReplication = value ? 1 : 0;})
		.def_property("bHomingRoll", [](UProjectileDefinition &self){return self.bHomingRoll;}, [](UProjectileDefinition &self, bool value){self.bHomingRoll = value ? 1 : 0;})
		.def_property("bHomingCollisionAvoidance", [](UProjectileDefinition &self){return self.bHomingCollisionAvoidance;}, [](UProjectileDefinition &self, bool value){self.bHomingCollisionAvoidance = value ? 1 : 0;})
		.def_property("bStopIfPastTarget", [](UProjectileDefinition &self){return self.bStopIfPastTarget;}, [](UProjectileDefinition &self, bool value){self.bStopIfPastTarget = value ? 1 : 0;})
		.def_property("bAdjustHomingZVelocity", [](UProjectileDefinition &self){return self.bAdjustHomingZVelocity;}, [](UProjectileDefinition &self, bool value){self.bAdjustHomingZVelocity = value ? 1 : 0;})
		.def_property("bRetryIfTargetInvalid", [](UProjectileDefinition &self){return self.bRetryIfTargetInvalid;}, [](UProjectileDefinition &self, bool value){self.bRetryIfTargetInvalid = value ? 1 : 0;})
		.def_property("bCanHomePhaselockedTargets", [](UProjectileDefinition &self){return self.bCanHomePhaselockedTargets;}, [](UProjectileDefinition &self, bool value){self.bCanHomePhaselockedTargets = value ? 1 : 0;})
		.def_property("bAutoAimTarget", [](UProjectileDefinition &self){return self.bAutoAimTarget;}, [](UProjectileDefinition &self, bool value){self.bAutoAimTarget = value ? 1 : 0;})
		.def_property("bDynamicLightEnvironment", [](UProjectileDefinition &self){return self.bDynamicLightEnvironment;}, [](UProjectileDefinition &self, bool value){self.bDynamicLightEnvironment = value ? 1 : 0;})
		.def_property("bCastShadows", [](UProjectileDefinition &self){return self.bCastShadows;}, [](UProjectileDefinition &self, bool value){self.bCastShadows = value ? 1 : 0;})
		.def_property("bUseBooleanEnvironmentShadowing", [](UProjectileDefinition &self){return self.bUseBooleanEnvironmentShadowing;}, [](UProjectileDefinition &self, bool value){self.bUseBooleanEnvironmentShadowing = value ? 1 : 0;})
		.def_property("bDynamic", [](UProjectileDefinition &self){return self.bDynamic;}, [](UProjectileDefinition &self, bool value){self.bDynamic = value ? 1 : 0;})
		.def_property("bSynthesizeSHLight", [](UProjectileDefinition &self){return self.bSynthesizeSHLight;}, [](UProjectileDefinition &self, bool value){self.bSynthesizeSHLight = value ? 1 : 0;})
		.def_property("bShadowFromEnvironment", [](UProjectileDefinition &self){return self.bShadowFromEnvironment;}, [](UProjectileDefinition &self, bool value){self.bShadowFromEnvironment = value ? 1 : 0;})
		.def_property("bAffectedBySmallDynamicLights", [](UProjectileDefinition &self){return self.bAffectedBySmallDynamicLights;}, [](UProjectileDefinition &self, bool value){self.bAffectedBySmallDynamicLights = value ? 1 : 0;})
		.def_property("bDontDestroyIfVisible", [](UProjectileDefinition &self){return self.bDontDestroyIfVisible;}, [](UProjectileDefinition &self, bool value){self.bDontDestroyIfVisible = value ? 1 : 0;})
		.def_property("bAICanAvoid", [](UProjectileDefinition &self){return self.bAICanAvoid;}, [](UProjectileDefinition &self, bool value){self.bAICanAvoid = value ? 1 : 0;})
		.def_property("bIsPossibleHomingTarget", [](UProjectileDefinition &self){return self.bIsPossibleHomingTarget;}, [](UProjectileDefinition &self, bool value){self.bIsPossibleHomingTarget = value ? 1 : 0;})
		.def_readwrite("VfTable_IIConstructObject", &UProjectileDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyInfoProvider", &UProjectileDefinition::VfTable_IIBodyInfoProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorProvider", &UProjectileDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("Mesh", &UProjectileDefinition::Mesh, py::return_value_policy::reference)
		.def_readwrite("AmbientAkEvent", &UProjectileDefinition::AmbientAkEvent, py::return_value_policy::reference)
		.def_readwrite("InFlightEffects", &UProjectileDefinition::InFlightEffects, py::return_value_policy::reference)
		.def_readwrite("InFlightEffectsOverrideContext", &UProjectileDefinition::InFlightEffectsOverrideContext, py::return_value_policy::reference)
		.def_readwrite("InFlightEffectsOverrideName", &UProjectileDefinition::InFlightEffectsOverrideName, py::return_value_policy::reference)
		.def_readwrite("InFlightEffectsScale", &UProjectileDefinition::InFlightEffectsScale)
		.def_readwrite("OverchargedPSCTemplate", &UProjectileDefinition::OverchargedPSCTemplate, py::return_value_policy::reference)
		.def_readwrite("TemporalField", &UProjectileDefinition::TemporalField, py::return_value_policy::reference)
		.def_readwrite("DamageTypeOverrideContext", &UProjectileDefinition::DamageTypeOverrideContext, py::return_value_policy::reference)
		.def_readwrite("DamageTypeOverrideName", &UProjectileDefinition::DamageTypeOverrideName, py::return_value_policy::reference)
		.def_readwrite("DefaultDamageTypeDefinition", &UProjectileDefinition::DefaultDamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("BounceImpact", &UProjectileDefinition::BounceImpact, py::return_value_policy::reference)
		.def_readwrite("BounceImpactAkRtpc", &UProjectileDefinition::BounceImpactAkRtpc, py::return_value_policy::reference)
		.def_readwrite("ExplosionOverrideContext", &UProjectileDefinition::ExplosionOverrideContext, py::return_value_policy::reference)
		.def_readwrite("ExplosionOverrideName", &UProjectileDefinition::ExplosionOverrideName, py::return_value_policy::reference)
		.def_readwrite("DefaultExplosionDefinition", &UProjectileDefinition::DefaultExplosionDefinition, py::return_value_policy::reference)
		.def_readwrite("DamageTypeParameterName", &UProjectileDefinition::DamageTypeParameterName, py::return_value_policy::reference)
		.def_readwrite("RigidBodyImpactEffectThreshold", &UProjectileDefinition::RigidBodyImpactEffectThreshold)
		.def_readwrite("RigidBodyImpactEffectDelay", &UProjectileDefinition::RigidBodyImpactEffectDelay)
		.def_readwrite("CustomAimDirection", &UProjectileDefinition::CustomAimDirection, py::return_value_policy::reference)
		.def_readwrite("UpwardVelocityBonus", &UProjectileDefinition::UpwardVelocityBonus)
		.def_readwrite("SpeedFormula", &UProjectileDefinition::SpeedFormula, py::return_value_policy::reference)
		.def_readwrite("Speed", &UProjectileDefinition::Speed)
		.def_readwrite("PhysicsMode", &UProjectileDefinition::PhysicsMode)
		.def_readwrite("AutoAimProfile", &UProjectileDefinition::AutoAimProfile)
		.def_readwrite("ProjectileType", &UProjectileDefinition::ProjectileType)
		.def_readwrite("AtRestSpeedThreshold", &UProjectileDefinition::AtRestSpeedThreshold)
		.def_readwrite("GravityScaling", &UProjectileDefinition::GravityScaling)
		.def_readwrite("WaveAmp", &UProjectileDefinition::WaveAmp, py::return_value_policy::reference)
		.def_readwrite("WaveFreq", &UProjectileDefinition::WaveFreq, py::return_value_policy::reference)
		.def_readwrite("WavePhase", &UProjectileDefinition::WavePhase, py::return_value_policy::reference)
		.def_readwrite("BulletListenerComponent", &UProjectileDefinition::BulletListenerComponent, py::return_value_policy::reference)
		.def_readwrite("StickyChildSpawnCollisionIgnoreTime", &UProjectileDefinition::StickyChildSpawnCollisionIgnoreTime)
		.def_readwrite("Damage", &UProjectileDefinition::Damage, py::return_value_policy::reference)
		.def_readwrite("DamageRadius", &UProjectileDefinition::DamageRadius, py::return_value_policy::reference)
		.def_readwrite("MomentumTransfer", &UProjectileDefinition::MomentumTransfer, py::return_value_policy::reference)
		.def_readwrite("FuseTime", &UProjectileDefinition::FuseTime, py::return_value_policy::reference)
		.def_readwrite("NumberOfChildProjectiles", &UProjectileDefinition::NumberOfChildProjectiles, py::return_value_policy::reference)
		.def_readwrite("MaxLifespan", &UProjectileDefinition::MaxLifespan)
		.def_readwrite("Allegiance", &UProjectileDefinition::Allegiance, py::return_value_policy::reference)
		.def_readwrite("ViewGuideDistance", &UProjectileDefinition::ViewGuideDistance)
		.def_readwrite("ViewGuideLockOnAngle", &UProjectileDefinition::ViewGuideLockOnAngle)
		.def_readwrite("SearchRadius", &UProjectileDefinition::SearchRadius)
		.def_readwrite("TurningRadius", &UProjectileDefinition::TurningRadius)
		.def_readwrite("TurnThresholdTight", &UProjectileDefinition::TurnThresholdTight)
		.def_readwrite("TurnThresholdWide", &UProjectileDefinition::TurnThresholdWide)
		.def_readwrite("HomingRollAmt", &UProjectileDefinition::HomingRollAmt)
		.def_readwrite("HomingRollSpeed", &UProjectileDefinition::HomingRollSpeed)
		.def_readwrite("HomingThresholds", &UProjectileDefinition::HomingThresholds, py::return_value_policy::reference)
		.def_readwrite("HomingRotationRate", &UProjectileDefinition::HomingRotationRate, py::return_value_policy::reference)
		.def_readwrite("ProjectileClass", &UProjectileDefinition::ProjectileClass, py::return_value_policy::reference)
		.def_readwrite("Resource", &UProjectileDefinition::Resource, py::return_value_policy::reference)
		.def_readwrite("ResourceCost", &UProjectileDefinition::ResourceCost, py::return_value_policy::reference)
		.def_readwrite("ExpPoints", &UProjectileDefinition::ExpPoints)
		.def_readwrite("LightingBoundsScale", &UProjectileDefinition::LightingBoundsScale)
		.def_readwrite("ModShadowFadeoutExponent", &UProjectileDefinition::ModShadowFadeoutExponent)
		.def_readwrite("ModShadowFadeoutTime", &UProjectileDefinition::ModShadowFadeoutTime)
		.def_readwrite("AmbientGlow", &UProjectileDefinition::AmbientGlow, py::return_value_policy::reference)
		.def_readwrite("AmbientShadowSourceDirection", &UProjectileDefinition::AmbientShadowSourceDirection, py::return_value_policy::reference)
		.def_readwrite("AmbientShadowColor", &UProjectileDefinition::AmbientShadowColor, py::return_value_policy::reference)
		.def_readwrite("DominantShadowTransitionStartDistance", &UProjectileDefinition::DominantShadowTransitionStartDistance)
		.def_readwrite("DominantShadowTransitionEndDistance", &UProjectileDefinition::DominantShadowTransitionEndDistance)
		.def_readwrite("AIAvoidRadius", &UProjectileDefinition::AIAvoidRadius)
		.def_readwrite("FlashIconName", &UProjectileDefinition::FlashIconName, py::return_value_policy::reference)
		.def_readwrite("BodyComposition", &UProjectileDefinition::BodyComposition, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UProjectileDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def("SetBehaviorProviderDefinition", &UProjectileDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UProjectileDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		.def("OnHomingTargetChanged", &UProjectileDefinition::OnHomingTargetChanged)
		.def("OnReflected", &UProjectileDefinition::OnReflected)
		.def("OnTouchProximity", &UProjectileDefinition::OnTouchProximity)
		.def("OnHitTheWorld", &UProjectileDefinition::OnHitTheWorld)
		.def("OnHitDamagableObject", &UProjectileDefinition::OnHitDamagableObject)
		.def("OnKilledEnemy", &UProjectileDefinition::OnKilledEnemy)
		.def("OnKilledFriendly", &UProjectileDefinition::OnKilledFriendly)
		.def("OnKilledNeutral", &UProjectileDefinition::OnKilledNeutral)
		.def("OnDamagedNeutral", &UProjectileDefinition::OnDamagedNeutral)
		.def("OnDamagedFriendly", &UProjectileDefinition::OnDamagedFriendly)
		.def("OnDamagedEnemy", &UProjectileDefinition::OnDamagedEnemy)
		.def("OnCounterEvent", &UProjectileDefinition::OnCounterEvent)
		.def("OnTimerEvent", &UProjectileDefinition::OnTimerEvent)
		.def("OnTookDirectOrRadiusDamage", &UProjectileDefinition::OnTookDirectOrRadiusDamage)
		.def("OnTookRadiusDamage", &UProjectileDefinition::OnTookRadiusDamage)
		.def("OnTookDirectDamage", &UProjectileDefinition::OnTookDirectDamage)
		.def("OnComeToRest", &UProjectileDefinition::OnComeToRest)
		.def("OnHitWall", &UProjectileDefinition::OnHitWall)
		.def("OnHitShields", &UProjectileDefinition::OnHitShields)
		.def("OnHitArmor", &UProjectileDefinition::OnHitArmor)
		.def("OnHitFleshOrArmor", &UProjectileDefinition::OnHitFleshOrArmor)
		.def("OnHitFlesh", &UProjectileDefinition::OnHitFlesh)
		.def("OnTouched", &UProjectileDefinition::OnTouched)
		.def("OnHitWater", &UProjectileDefinition::OnHitWater)
		.def("OnExplode", &UProjectileDefinition::OnExplode)
		.def("OnSpawn", &UProjectileDefinition::OnSpawn)
		;
	py::class_< UQSortComparer, UObject >(m, "UQSortComparer")
		;
	py::class_< UInventoryUIStatComparer, UQSortComparer >(m, "UInventoryUIStatComparer")
		.def_property("bSortBestToWorst", [](UInventoryUIStatComparer &self){return self.bSortBestToWorst;}, [](UInventoryUIStatComparer &self, bool value){self.bSortBestToWorst = value ? 1 : 0;})
		.def_readwrite("StatIndex", &UInventoryUIStatComparer::StatIndex)
		;
	py::class_< UQSortAttributeComparer, UQSortComparer >(m, "UQSortAttributeComparer")
		.def_property("bBiggerIsBetter", [](UQSortAttributeComparer &self){return self.bBiggerIsBetter;}, [](UQSortAttributeComparer &self, bool value){self.bBiggerIsBetter = value ? 1 : 0;})
		.def_readwrite("Attribute", &UQSortAttributeComparer::Attribute, py::return_value_policy::reference)
		;
	py::class_< UWeaponTypeComparer, UQSortComparer >(m, "UWeaponTypeComparer")
		;
	py::class_< ARallyPoint, AActor >(m, "ARallyPoint")
		;
	py::class_< URecentDropList, UObject >(m, "URecentDropList")
		.def_readwrite("NextIndex", &URecentDropList::NextIndex)
		.def("Contains", &URecentDropList::Contains)
		.def("Add", &URecentDropList::Add)
		;
	py::class_< UResourcePoolStateAttributeValueResolver, UAttributeValueResolver >(m, "UResourcePoolStateAttributeValueResolver")
		.def_readwrite("PoolState", &UResourcePoolStateAttributeValueResolver::PoolState)
		;
	py::class_< USaveGameChannel, UChannel >(m, "USaveGameChannel")
		;
	py::class_< USeqAct_IsInVolume, USequenceAction >(m, "USeqAct_IsInVolume")
		.def_property("bAllActorsInVolumes", [](USeqAct_IsInVolume &self){return self.bAllActorsInVolumes;}, [](USeqAct_IsInVolume &self, bool value){self.bAllActorsInVolumes = value ? 1 : 0;})
		.def_property("bIsTrue", [](USeqAct_IsInVolume &self){return self.bIsTrue;}, [](USeqAct_IsInVolume &self, bool value){self.bIsTrue = value ? 1 : 0;})
		.def_readwrite("Volumes", &USeqAct_IsInVolume::Volumes, py::return_value_policy::reference)
		.def_readwrite("Actors", &USeqAct_IsInVolume::Actors, py::return_value_policy::reference)
		.def("ActorIsInAnyVolumes", &USeqAct_IsInVolume::ActorIsInAnyVolumes)
		;
	py::class_< USeqAct_SetNameList, USequenceAction >(m, "USeqAct_SetNameList")
		.def_readwrite("SetType", &USeqAct_SetNameList::SetType)
		.def_readwrite("NameListDef", &USeqAct_SetNameList::NameListDef, py::return_value_policy::reference)
		;
	py::class_< USeqEvent_TakeHitRegionDamage, USequenceEvent >(m, "USeqEvent_TakeHitRegionDamage")
		.def_property("UsePercentOfMaxHealthLimit", [](USeqEvent_TakeHitRegionDamage &self){return self.UsePercentOfMaxHealthLimit;}, [](USeqEvent_TakeHitRegionDamage &self, bool value){self.UsePercentOfMaxHealthLimit = value ? 1 : 0;})
		.def_readwrite("MinDamageAmount", &USeqEvent_TakeHitRegionDamage::MinDamageAmount)
		.def_readwrite("DamageThreshold", &USeqEvent_TakeHitRegionDamage::DamageThreshold)
		.def_readwrite("DamageTypes", &USeqEvent_TakeHitRegionDamage::DamageTypes, py::return_value_policy::reference)
		.def_readwrite("DamageTypeDefinitions", &USeqEvent_TakeHitRegionDamage::DamageTypeDefinitions, py::return_value_policy::reference)
		.def_readwrite("IgnoreDamageTypes", &USeqEvent_TakeHitRegionDamage::IgnoreDamageTypes, py::return_value_policy::reference)
		.def_readwrite("IgnoreDamageTypeDefinitions", &USeqEvent_TakeHitRegionDamage::IgnoreDamageTypeDefinitions, py::return_value_policy::reference)
		.def_readwrite("DamageHitRegion", &USeqEvent_TakeHitRegionDamage::DamageHitRegion, py::return_value_policy::reference)
		.def_readwrite("CurrentDamage", &USeqEvent_TakeHitRegionDamage::CurrentDamage)
		.def("Reset", &USeqEvent_TakeHitRegionDamage::Reset)
		.def("HandleDamage", &USeqEvent_TakeHitRegionDamage::HandleDamage)
		.def("IsValidDamageTypeDefinition", &USeqEvent_TakeHitRegionDamage::IsValidDamageTypeDefinition)
		.def("IsValidDamageType", &USeqEvent_TakeHitRegionDamage::IsValidDamageType)
		;
	py::class_< USequenceEventEnableByMission, USequenceEventCustomEnableCondition >(m, "USequenceEventEnableByMission")
		.def_property("bIsObjectiveSpecific", [](USequenceEventEnableByMission &self){return self.bIsObjectiveSpecific;}, [](USequenceEventEnableByMission &self, bool value){self.bIsObjectiveSpecific = value ? 1 : 0;})
		.def_readwrite("VfTable_IIMission", &USequenceEventEnableByMission::VfTable_IIMission, py::return_value_policy::reference)
		.def_readwrite("LinkedMission", &USequenceEventEnableByMission::LinkedMission, py::return_value_policy::reference)
		.def_readwrite("MissionStatesToLinkTo", &USequenceEventEnableByMission::MissionStatesToLinkTo, py::return_value_policy::reference)
		.def_readwrite("LinkedObjective", &USequenceEventEnableByMission::LinkedObjective, py::return_value_policy::reference)
		.def_readwrite("ObjectiveStatesToLinkTo", &USequenceEventEnableByMission::ObjectiveStatesToLinkTo, py::return_value_policy::reference)
		.def_readwrite("ObjectiveSetRestrictions", &USequenceEventEnableByMission::ObjectiveSetRestrictions, py::return_value_policy::reference)
		.def("eventMissionReactionObjectiveComplete", &USequenceEventEnableByMission::eventMissionReactionObjectiveComplete)
		.def("eventMissionReactionObjectiveCleared", &USequenceEventEnableByMission::eventMissionReactionObjectiveCleared)
		.def("eventMissionReactionObjectiveUpdated", &USequenceEventEnableByMission::eventMissionReactionObjectiveUpdated)
		.def("eventMissionReactionObjectiveSetChanged", &USequenceEventEnableByMission::eventMissionReactionObjectiveSetChanged)
		.def("eventMissionReactionStatusChanged", &USequenceEventEnableByMission::eventMissionReactionStatusChanged)
		.def("eventMissionReactionLevelLoad", &USequenceEventEnableByMission::eventMissionReactionLevelLoad)
		;
	py::class_< UShieldResourcePool, UResourcePool >(m, "UShieldResourcePool")
		;
	py::class_< UShopTimerRateValueResolver, UAttributeValueResolver >(m, "UShopTimerRateValueResolver")
		;
#endif
	py::class_< USkill, UObject >(m, "USkill")
		.def_property("bForceRefreshModifiersNextTick", [](USkill &self){return self.bForceRefreshModifiersNextTick;}, [](USkill &self, bool value){self.bForceRefreshModifiersNextTick = value ? 1 : 0;})
		.def_property("bWantsToDeactivate", [](USkill &self){return self.bWantsToDeactivate;}, [](USkill &self, bool value){self.bWantsToDeactivate = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorConsumer", &USkill::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("Definition", &USkill::Definition, py::return_value_policy::reference)
		.def_readwrite("SkillEffects", &USkill::SkillEffects, py::return_value_policy::reference)
		.def_readwrite("Grade", &USkill::Grade)
		.def_readwrite("GradeBaseValue", &USkill::GradeBaseValue)
		.def_readwrite("GradeModifierStack", &USkill::GradeModifierStack, py::return_value_policy::reference)
		.def_readwrite("BonusGradePointsOnExpConversion", &USkill::BonusGradePointsOnExpConversion)
		.def_readwrite("BonusGradePointsOnExpConversionBaseValue", &USkill::BonusGradePointsOnExpConversionBaseValue)
		.def_readwrite("BonusGradePointsOnExpConversionModifierStack", &USkill::BonusGradePointsOnExpConversionModifierStack, py::return_value_policy::reference)
		.def_readwrite("Duration", &USkill::Duration)
		.def_readwrite("DurationBaseValue", &USkill::DurationBaseValue)
		.def_readwrite("DurationModifierStack", &USkill::DurationModifierStack, py::return_value_policy::reference)
		.def_readwrite("Range", &USkill::Range)
		.def_readwrite("RangeBaseValue", &USkill::RangeBaseValue)
		.def_readwrite("RangeModifierStack", &USkill::RangeModifierStack, py::return_value_policy::reference)
		.def_readwrite("StartTime", &USkill::StartTime)
		.def_readwrite("ActivatedTime", &USkill::ActivatedTime)
		.def_readwrite("SkillState", &USkill::SkillState)
		.def_readwrite("NextContextUpdateTime", &USkill::NextContextUpdateTime)
		.def_readwrite("SkillInstigator", &USkill::SkillInstigator, py::return_value_policy::reference)
		.def_readwrite("AdditionalSkillTarget", &USkill::AdditionalSkillTarget, py::return_value_policy::reference)
		.def_readwrite("CachedActionSkill", &USkill::CachedActionSkill, py::return_value_policy::reference)
		.def_readwrite("ConsumerHandle", &USkill::ConsumerHandle, py::return_value_policy::reference)
		.def_readwrite("__OnSkillStateChanged__Delegate", &USkill::__OnSkillStateChanged__Delegate, py::return_value_policy::reference)
		.def("GetBehaviorConsumerHandle", &USkill::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("ForceRefresh", &USkill::ForceRefresh)
		.def("GetGrade", &USkill::GetGrade)
		.def("GetSkillDebug", &USkill::GetSkillDebug)
		.def("eventRunSkillEventResponses", &USkill::eventRunSkillEventResponses)
		.def("NotifySkillDamagedEvent", &USkill::NotifySkillDamagedEvent)
		.def("NotifySkillEvent", &USkill::NotifySkillEvent)
		.def("GetSkillGradeForResponseData", &USkill::GetSkillGradeForResponseData)
		.def("CalculateModifierValueFromDefinitionEffectArray", &USkill::CalculateModifierValueFromDefinitionEffectArray)
		.def("CalculateModifierValue", &USkill::CalculateModifierValue)
		.def("AdjustModifiers", &USkill::AdjustModifiers)
		.def("GetAttributeContexts", &USkill::GetAttributeContexts)
		.def("GetEffectInstigator", &USkill::GetEffectInstigator, py::return_value_policy::reference)
		.def("IsSkillForInstigator", &USkill::IsSkillForInstigator)
		.def("UpdateGrade", &USkill::UpdateGrade)
		.def("CalculateStateBasedOnConstraints", &USkill::CalculateStateBasedOnConstraints)
		.def("GetSkillInstigator", &USkill::GetSkillInstigator, py::return_value_policy::reference)
		.def("GetSkillState", &USkill::GetSkillState)
		.def("eventResume", &USkill::eventResume)
		.def("eventPause", &USkill::eventPause)
		.def("eventDeactivate", &USkill::eventDeactivate)
		.def("eventActivate", &USkill::eventActivate)
		.def("BuildSkillEffects", &USkill::BuildSkillEffects)
		.def("AddSkillEffect", &USkill::AddSkillEffect)
		.def("Initialize", &USkill::Initialize)
		.def("OnSkillStateChanged", &USkill::OnSkillStateChanged)
		;
	py::class_< USkillDefinition, UGBXDefinition >(m, "USkillDefinition")
		.def_property("bAutoUpdateContexts", [](USkillDefinition &self){return self.bAutoUpdateContexts;}, [](USkillDefinition &self, bool value){self.bAutoUpdateContexts = value ? 1 : 0;})
		.def_property("bCanBeToggledOff", [](USkillDefinition &self){return self.bCanBeToggledOff;}, [](USkillDefinition &self, bool value){self.bCanBeToggledOff = value ? 1 : 0;})
		.def_property("bDoNotShiftPastCurrentTime", [](USkillDefinition &self){return self.bDoNotShiftPastCurrentTime;}, [](USkillDefinition &self, bool value){self.bDoNotShiftPastCurrentTime = value ? 1 : 0;})
		.def_property("bSubjectToGradeRules", [](USkillDefinition &self){return self.bSubjectToGradeRules;}, [](USkillDefinition &self, bool value){self.bSubjectToGradeRules = value ? 1 : 0;})
		.def_readwrite("VfTable_IIConstructObject", &USkillDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorProvider", &USkillDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("SkillEffectUpdateIterval", &USkillDefinition::SkillEffectUpdateIterval)
		.def_readwrite("SkillName", &USkillDefinition::SkillName, py::return_value_policy::reference)
		.def_readwrite("SkillDescription", &USkillDefinition::SkillDescription, py::return_value_policy::reference)
		.def_readwrite("ScaleformFrameName", &USkillDefinition::ScaleformFrameName, py::return_value_policy::reference)
		.def_readwrite("SkillType", &USkillDefinition::SkillType)
		.def_readwrite("DurationType", &USkillDefinition::DurationType)
		.def_readwrite("TrackedSkillType", &USkillDefinition::TrackedSkillType)
		.def_readwrite("TrackedSkillHUDSlot", &USkillDefinition::TrackedSkillHUDSlot)
		.def_readwrite("InitialDuration", &USkillDefinition::InitialDuration)
		.def_readwrite("BaseRange", &USkillDefinition::BaseRange)
		.def_readwrite("EffectSourceInstanceDataName", &USkillDefinition::EffectSourceInstanceDataName, py::return_value_policy::reference)
		.def_readwrite("SkillEffectDefinitions", &USkillDefinition::SkillEffectDefinitions, py::return_value_policy::reference)
		.def_readwrite("SkillConstraints", &USkillDefinition::SkillConstraints, py::return_value_policy::reference)
		.def_readwrite("SkillEffectPresentations", &USkillDefinition::SkillEffectPresentations, py::return_value_policy::reference)
		.def_readwrite("ActionSkillArchetype", &USkillDefinition::ActionSkillArchetype, py::return_value_policy::reference)
		.def_readwrite("SkillActivationActions", &USkillDefinition::SkillActivationActions, py::return_value_policy::reference)
		.def_readwrite("SkillDeactivationActions", &USkillDefinition::SkillDeactivationActions, py::return_value_policy::reference)
		.def_readwrite("EventResponses", &USkillDefinition::EventResponses, py::return_value_policy::reference)
		.def_readwrite("DefaultStartingGrade", &USkillDefinition::DefaultStartingGrade)
		.def_readwrite("MaxGrade", &USkillDefinition::MaxGrade)
		.def_readwrite("PlayerLevelRequirement", &USkillDefinition::PlayerLevelRequirement)
		.def_readwrite("SkillIcon", &USkillDefinition::SkillIcon, py::return_value_policy::reference)
		.def_readwrite("CustomStackCount", &USkillDefinition::CustomStackCount, py::return_value_policy::reference)
		.def_readwrite("TrackedActiveSkill", &USkillDefinition::TrackedActiveSkill, py::return_value_policy::reference)
		.def_readwrite("TrackedActiveSkills", &USkillDefinition::TrackedActiveSkills, py::return_value_policy::reference)
		.def_readwrite("SkillClass", &USkillDefinition::SkillClass, py::return_value_policy::reference)
		.def_readwrite("LockedSkillDetailStr", &USkillDefinition::LockedSkillDetailStr, py::return_value_policy::reference)
		.def_readwrite("CustomEvents", &USkillDefinition::CustomEvents, py::return_value_policy::reference)
		.def_readwrite("DamageEvents", &USkillDefinition::DamageEvents, py::return_value_policy::reference)
		.def_readwrite("KillEvents", &USkillDefinition::KillEvents, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &USkillDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def("FireCustomEvent", &USkillDefinition::FireCustomEvent)
		.def("DoesSkillPassMinGradeTest", &USkillDefinition::DoesSkillPassMinGradeTest)
		.def("GetSkillEffectPresentations", &USkillDefinition::GetSkillEffectPresentations)
		.def("GetHumanReadableSkillEffects", &USkillDefinition::GetHumanReadableSkillEffects, py::return_value_policy::reference)
		.def("SetBehaviorProviderDefinition", &USkillDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &USkillDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		.def("OnStatusEffectTypeEnd", &USkillDefinition::OnStatusEffectTypeEnd)
		.def("OnStatusEffectTypeBegin", &USkillDefinition::OnStatusEffectTypeBegin)
		.def("OnMeleeAttack", &USkillDefinition::OnMeleeAttack)
		.def("OnBledOut", &USkillDefinition::OnBledOut)
		.def("OnDownStateEnd", &USkillDefinition::OnDownStateEnd)
		.def("OnDownStateBegin", &USkillDefinition::OnDownStateBegin)
		.def("OnAppliedStatusEffectToEnemy", &USkillDefinition::OnAppliedStatusEffectToEnemy)
		.def("OnDamagedEnemyWithMeleeFromBehind", &USkillDefinition::OnDamagedEnemyWithMeleeFromBehind)
		.def("OnDamagedUnawareEnemy", &USkillDefinition::OnDamagedUnawareEnemy)
		.def("OnActionSkillActiveAbilityActivated", &USkillDefinition::OnActionSkillActiveAbilityActivated)
		.def("OnActionSkillCooldownAbilityActivated", &USkillDefinition::OnActionSkillCooldownAbilityActivated)
		.def("OnPlayerResurrected", &USkillDefinition::OnPlayerResurrected)
		.def("OnPlayerRecoveredFromDownState", &USkillDefinition::OnPlayerRecoveredFromDownState)
		.def("OnPlayerDeathAverted", &USkillDefinition::OnPlayerDeathAverted)
		.def("OnMissedWeaponShot", &USkillDefinition::OnMissedWeaponShot)
		.def("OnDamagedByFriendly", &USkillDefinition::OnDamagedByFriendly)
		.def("OnDamagedByEnemy", &USkillDefinition::OnDamagedByEnemy)
		.def("OnDamagedFriendly", &USkillDefinition::OnDamagedFriendly)
		.def("OnDamagedEnemyExposeDamageSurfaceType", &USkillDefinition::OnDamagedEnemyExposeDamageSurfaceType)
		.def("OnDamagedEnemy", &USkillDefinition::OnDamagedEnemy)
		.def("OnWeaponStartReload", &USkillDefinition::OnWeaponStartReload)
		.def("OnKilledByEnemy", &USkillDefinition::OnKilledByEnemy)
		.def("OnKilledEnemy", &USkillDefinition::OnKilledEnemy)
		.def("OnShieldFull", &USkillDefinition::OnShieldFull)
		.def("OnShieldDepleted", &USkillDefinition::OnShieldDepleted)
		.def("OnShieldDepletedAfterBeingFull", &USkillDefinition::OnShieldDepletedAfterBeingFull)
		.def("OnWeaponSwapped", &USkillDefinition::OnWeaponSwapped)
		.def("OnWeaponManuallyReloaded", &USkillDefinition::OnWeaponManuallyReloaded)
		.def("OnWeaponReloaded", &USkillDefinition::OnWeaponReloaded)
		.def("OnWeaponFired", &USkillDefinition::OnWeaponFired)
		.def("OnWeaponUnzoomed", &USkillDefinition::OnWeaponUnzoomed)
		.def("OnWeaponZoomed", &USkillDefinition::OnWeaponZoomed)
		.def("OnThrowGrenadeOverrideSkillActivated", &USkillDefinition::OnThrowGrenadeOverrideSkillActivated)
		.def("OnMeleeOverrideSkillActivated", &USkillDefinition::OnMeleeOverrideSkillActivated)
		.def("OnResumed", &USkillDefinition::OnResumed)
		.def("OnPaused", &USkillDefinition::OnPaused)
		.def("OnDeactivated", &USkillDefinition::OnDeactivated)
		.def("OnActivated", &USkillDefinition::OnActivated)
		;
#ifndef _DEBUG
	py::class_< USkillExpressionEvaluatorDefinition, UGBXDefinition >(m, "USkillExpressionEvaluatorDefinition")
		.def_readwrite("Evaluator", &USkillExpressionEvaluatorDefinition::Evaluator, py::return_value_policy::reference)
		;
#endif
	py::class_< USkillTreeBranchDefinition, UGBXDefinition >(m, "USkillTreeBranchDefinition")
		.def_readwrite("VfTable_IIConstructObject", &USkillTreeBranchDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("Children", &USkillTreeBranchDefinition::Children, py::return_value_policy::reference)
		.def_readwrite("Tiers", &USkillTreeBranchDefinition::Tiers, py::return_value_policy::reference)
		.def_readwrite("Layout", &USkillTreeBranchDefinition::Layout, py::return_value_policy::reference)
		.def_readwrite("BranchName", &USkillTreeBranchDefinition::BranchName, py::return_value_policy::reference)
		;
	py::class_< USkillTreeBranchLayoutDefinition, UGBXDefinition >(m, "USkillTreeBranchLayoutDefinition")
		.def_readwrite("Tiers", &USkillTreeBranchLayoutDefinition::Tiers, py::return_value_policy::reference)
		;
	py::class_< USkillTreeDefinition, UGBXDefinition >(m, "USkillTreeDefinition")
		.def_readwrite("VfTable_IIConstructObject", &USkillTreeDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("Root", &USkillTreeDefinition::Root, py::return_value_policy::reference)
		;
#ifndef _DEBUG
	py::class_< USpecialMove_FirstPerson, UGearboxAnimDefinition >(m, "USpecialMove_FirstPerson")
		.def_property("bStopWeaponRecoilAnim", [](USpecialMove_FirstPerson &self){return self.bStopWeaponRecoilAnim;}, [](USpecialMove_FirstPerson &self, bool value){self.bStopWeaponRecoilAnim = value ? 1 : 0;})
		.def("GetSMNode", &USpecialMove_FirstPerson::GetSMNode, py::return_value_policy::reference)
		.def("PlayAnim", &USpecialMove_FirstPerson::PlayAnim)
		.def("StopWeaponRecoilAnimImp", &USpecialMove_FirstPerson::StopWeaponRecoilAnimImp)
		.def("StopWeaponRecoilAnim", &USpecialMove_FirstPerson::StopWeaponRecoilAnim)
		.def("eventClientStarted", &USpecialMove_FirstPerson::eventClientStarted)
		.def("GetSkeletalMesh", &USpecialMove_FirstPerson::GetSkeletalMesh, py::return_value_policy::reference)
		;
	py::class_< USpecialMove_FirstPersonDualWieldAction, USpecialMove_FirstPerson >(m, "USpecialMove_FirstPersonDualWieldAction")
		.def_property("bPlayHolsterEquipOnPrimaryHand", [](USpecialMove_FirstPersonDualWieldAction &self){return self.bPlayHolsterEquipOnPrimaryHand;}, [](USpecialMove_FirstPersonDualWieldAction &self, bool value){self.bPlayHolsterEquipOnPrimaryHand = value ? 1 : 0;})
		.def_property("bSyncHolsterEquipWithActionAnim", [](USpecialMove_FirstPersonDualWieldAction &self){return self.bSyncHolsterEquipWithActionAnim;}, [](USpecialMove_FirstPersonDualWieldAction &self, bool value){self.bSyncHolsterEquipWithActionAnim = value ? 1 : 0;})
		.def_property("bDisableDualWieldBlendDuringActionAnim", [](USpecialMove_FirstPersonDualWieldAction &self){return self.bDisableDualWieldBlendDuringActionAnim;}, [](USpecialMove_FirstPersonDualWieldAction &self, bool value){self.bDisableDualWieldBlendDuringActionAnim = value ? 1 : 0;})
		.def_readwrite("OffHandAnimNodeName", &USpecialMove_FirstPersonDualWieldAction::OffHandAnimNodeName, py::return_value_policy::reference)
		.def_readwrite("HolsterAnimName", &USpecialMove_FirstPersonDualWieldAction::HolsterAnimName, py::return_value_policy::reference)
		.def_readwrite("HolsterDuration", &USpecialMove_FirstPersonDualWieldAction::HolsterDuration)
		.def_readwrite("EquipAnimName", &USpecialMove_FirstPersonDualWieldAction::EquipAnimName, py::return_value_policy::reference)
		.def_readwrite("EquipDuration", &USpecialMove_FirstPersonDualWieldAction::EquipDuration)
		.def("GetAnimPlayRateScale", &USpecialMove_FirstPersonDualWieldAction::GetAnimPlayRateScale)
		.def("GetExternalPlayRateScale", &USpecialMove_FirstPersonDualWieldAction::GetExternalPlayRateScale)
		.def("GetSyncToActionLengthPlayRateScale", &USpecialMove_FirstPersonDualWieldAction::GetSyncToActionLengthPlayRateScale)
		.def("StopOffHandAnim", &USpecialMove_FirstPersonDualWieldAction::StopOffHandAnim)
		.def("SetDualWieldWeaponState", &USpecialMove_FirstPersonDualWieldAction::SetDualWieldWeaponState)
		.def("PlayChildAnim", &USpecialMove_FirstPersonDualWieldAction::PlayChildAnim)
		.def("PlayEquipAnim", &USpecialMove_FirstPersonDualWieldAction::PlayEquipAnim)
		.def("PlayActionAnim", &USpecialMove_FirstPersonDualWieldAction::PlayActionAnim)
		.def("PlayAnim", &USpecialMove_FirstPersonDualWieldAction::PlayAnim)
		.def("eventAnimFinished", &USpecialMove_FirstPersonDualWieldAction::eventAnimFinished)
		.def("StopWeaponRecoilAnim", &USpecialMove_FirstPersonDualWieldAction::StopWeaponRecoilAnim)
		.def("GetAnimLength", &USpecialMove_FirstPersonDualWieldAction::GetAnimLength)
		;
	py::class_< USprintDefinition, UGBXDefinition >(m, "USprintDefinition")
		.def_readwrite("FOVModifier", &USprintDefinition::FOVModifier)
		.def_readwrite("EyeHeightModifier", &USprintDefinition::EyeHeightModifier)
		.def_readwrite("BobScalar", &USprintDefinition::BobScalar)
		.def_readwrite("AttributeEffects", &USprintDefinition::AttributeEffects, py::return_value_policy::reference)
		;
	py::class_< UStaggerDefinition, UGBXDefinition >(m, "UStaggerDefinition")
		.def_property("bPrefersOverTheHoodOnVehicleImpact", [](UStaggerDefinition &self){return self.bPrefersOverTheHoodOnVehicleImpact;}, [](UStaggerDefinition &self, bool value){self.bPrefersOverTheHoodOnVehicleImpact = value ? 1 : 0;})
		.def_readwrite("StaggeredPhysicalMaterial", &UStaggerDefinition::StaggeredPhysicalMaterial, py::return_value_policy::reference)
		.def_readwrite("StaggeredGravity", &UStaggerDefinition::StaggeredGravity)
		.def_readwrite("StaggeredRestVelocity", &UStaggerDefinition::StaggeredRestVelocity)
		.def_readwrite("StaggeredRestTimeMin", &UStaggerDefinition::StaggeredRestTimeMin)
		.def_readwrite("StaggeredRestTimeMax", &UStaggerDefinition::StaggeredRestTimeMax)
		.def_readwrite("StaggeredPhysicsBlendOutSpeed", &UStaggerDefinition::StaggeredPhysicsBlendOutSpeed)
		.def_readwrite("StaggeredRestGiveUpTime", &UStaggerDefinition::StaggeredRestGiveUpTime)
		.def_readwrite("VehicleStaggerSpeed", &UStaggerDefinition::VehicleStaggerSpeed)
		.def_readwrite("StaggeredOverHoodMinSpeed", &UStaggerDefinition::StaggeredOverHoodMinSpeed)
		.def_readwrite("MaxStaggerAdjustExtents", &UStaggerDefinition::MaxStaggerAdjustExtents, py::return_value_policy::reference)
		.def_readwrite("StaggeredRecoveryRotation", &UStaggerDefinition::StaggeredRecoveryRotation, py::return_value_policy::reference)
		.def_readwrite("HardFlinchAnimation", &UStaggerDefinition::HardFlinchAnimation, py::return_value_policy::reference)
		.def_readwrite("UnstaggerGiveUpTime", &UStaggerDefinition::UnstaggerGiveUpTime)
		;
	py::class_< UStanceTypeDefinition, UGBXDefinition >(m, "UStanceTypeDefinition")
		.def_property("bCanUseAimOffsets", [](UStanceTypeDefinition &self){return self.bCanUseAimOffsets;}, [](UStanceTypeDefinition &self, bool value){self.bCanUseAimOffsets = value ? 1 : 0;})
		.def_property("bCanUseTurns", [](UStanceTypeDefinition &self){return self.bCanUseTurns;}, [](UStanceTypeDefinition &self, bool value){self.bCanUseTurns = value ? 1 : 0;})
		.def_property("bCanUseJumps", [](UStanceTypeDefinition &self){return self.bCanUseJumps;}, [](UStanceTypeDefinition &self, bool value){self.bCanUseJumps = value ? 1 : 0;})
		.def_property("bCanUseCringes", [](UStanceTypeDefinition &self){return self.bCanUseCringes;}, [](UStanceTypeDefinition &self, bool value){self.bCanUseCringes = value ? 1 : 0;})
		.def_property("bCanUseFlinches", [](UStanceTypeDefinition &self){return self.bCanUseFlinches;}, [](UStanceTypeDefinition &self, bool value){self.bCanUseFlinches = value ? 1 : 0;})
		.def_property("bAllowLeftHandIK", [](UStanceTypeDefinition &self){return self.bAllowLeftHandIK;}, [](UStanceTypeDefinition &self, bool value){self.bAllowLeftHandIK = value ? 1 : 0;})
		.def_property("bCanDodge", [](UStanceTypeDefinition &self){return self.bCanDodge;}, [](UStanceTypeDefinition &self, bool value){self.bCanDodge = value ? 1 : 0;})
		.def_property("bAllowMovementDodges", [](UStanceTypeDefinition &self){return self.bAllowMovementDodges;}, [](UStanceTypeDefinition &self, bool value){self.bAllowMovementDodges = value ? 1 : 0;})
		.def_property("bOverrideFlinches", [](UStanceTypeDefinition &self){return self.bOverrideFlinches;}, [](UStanceTypeDefinition &self, bool value){self.bOverrideFlinches = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorProvider", &UStanceTypeDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("MovementStyle", &UStanceTypeDefinition::MovementStyle)
		.def_readwrite("SpeedScale", &UStanceTypeDefinition::SpeedScale)
		.def_readwrite("RotationScale", &UStanceTypeDefinition::RotationScale)
		.def_readwrite("JumpNodeCostMultiplier", &UStanceTypeDefinition::JumpNodeCostMultiplier)
		.def_readwrite("Turns", &UStanceTypeDefinition::Turns, py::return_value_policy::reference)
		.def_readwrite("AimOffsetName", &UStanceTypeDefinition::AimOffsetName, py::return_value_policy::reference)
		.def_readwrite("FlinchOverrides", &UStanceTypeDefinition::FlinchOverrides, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UStanceTypeDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def("OnExitStance", &UStanceTypeDefinition::OnExitStance)
		.def("OnEnterStance", &UStanceTypeDefinition::OnEnterStance)
		.def("SetBehaviorProviderDefinition", &UStanceTypeDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UStanceTypeDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UStatChannel, UChannel >(m, "UStatChannel")
		;
	py::class_< AStationTeleporterDestination, ATeleporterDestination >(m, "AStationTeleporterDestination")
		.def_property("MoveOwnerOnEditorMove", [](AStationTeleporterDestination &self){return self.MoveOwnerOnEditorMove;}, [](AStationTeleporterDestination &self, bool value){self.MoveOwnerOnEditorMove = value ? 1 : 0;})
		.def_property("OwnerControlsEditorMove", [](AStationTeleporterDestination &self){return self.OwnerControlsEditorMove;}, [](AStationTeleporterDestination &self, bool value){self.OwnerControlsEditorMove = value ? 1 : 0;})
		.def_property("DetachExitPoints", [](AStationTeleporterDestination &self){return self.DetachExitPoints;}, [](AStationTeleporterDestination &self, bool value){self.DetachExitPoints = value ? 1 : 0;})
		.def_property("ExitPointsReplaced", [](AStationTeleporterDestination &self){return self.ExitPointsReplaced;}, [](AStationTeleporterDestination &self, bool value){self.ExitPointsReplaced = value ? 1 : 0;})
		.def_readwrite("ExitPointRadius", &AStationTeleporterDestination::ExitPointRadius)
		.def_readwrite("ExitPointHeight", &AStationTeleporterDestination::ExitPointHeight)
		.def("UpdateExitPointHeights", &AStationTeleporterDestination::UpdateExitPointHeights)
		.def("UpdateExitPointLocations", &AStationTeleporterDestination::UpdateExitPointLocations)
		.def("eventDestroyed", &AStationTeleporterDestination::eventDestroyed)
		;
	py::class_< AStationTeleporterExitPoint, AKeypoint >(m, "AStationTeleporterExitPoint")
		;
	py::class_< AStationTeleporterVehicleExitPoint, AStationTeleporterExitPoint >(m, "AStationTeleporterVehicleExitPoint")
		;
	py::class_< UStatusEffectChanceModifierResolver, UAttributeContextResolver >(m, "UStatusEffectChanceModifierResolver")
		.def("GetAttributeContext", &UStatusEffectChanceModifierResolver::GetAttributeContext, py::return_value_policy::reference)
		;
	py::class_< UStatusEffectDefinition, UGBXDefinition >(m, "UStatusEffectDefinition")
		.def_property("bCanSpread", [](UStatusEffectDefinition &self){return self.bCanSpread;}, [](UStatusEffectDefinition &self, bool value){self.bCanSpread = value ? 1 : 0;})
		.def_property("bDoesDamageOverTime", [](UStatusEffectDefinition &self){return self.bDoesDamageOverTime;}, [](UStatusEffectDefinition &self, bool value){self.bDoesDamageOverTime = value ? 1 : 0;})
		.def_property("bCanReturnToRegion", [](UStatusEffectDefinition &self){return self.bCanReturnToRegion;}, [](UStatusEffectDefinition &self, bool value){self.bCanReturnToRegion = value ? 1 : 0;})
		.def_property("bCanReturnToTarget", [](UStatusEffectDefinition &self){return self.bCanReturnToTarget;}, [](UStatusEffectDefinition &self, bool value){self.bCanReturnToTarget = value ? 1 : 0;})
		.def_property("bIsRegionSpecific", [](UStatusEffectDefinition &self){return self.bIsRegionSpecific;}, [](UStatusEffectDefinition &self, bool value){self.bIsRegionSpecific = value ? 1 : 0;})
		.def_property("bNoStatusEffectChanceFalloff", [](UStatusEffectDefinition &self){return self.bNoStatusEffectChanceFalloff;}, [](UStatusEffectDefinition &self, bool value){self.bNoStatusEffectChanceFalloff = value ? 1 : 0;})
		.def_property("bIsInfiniteDuration", [](UStatusEffectDefinition &self){return self.bIsInfiniteDuration;}, [](UStatusEffectDefinition &self, bool value){self.bIsInfiniteDuration = value ? 1 : 0;})
		.def_readwrite("BaseDuration", &UStatusEffectDefinition::BaseDuration, py::return_value_policy::reference)
		.def_readwrite("BaseSpreadTimeInterval", &UStatusEffectDefinition::BaseSpreadTimeInterval, py::return_value_policy::reference)
		.def_readwrite("BaseSpreadDistanceFromSource", &UStatusEffectDefinition::BaseSpreadDistanceFromSource, py::return_value_policy::reference)
		.def_readwrite("BaseSpreadCap", &UStatusEffectDefinition::BaseSpreadCap, py::return_value_policy::reference)
		.def_readwrite("TargetStatusEffectChanceModifier", &UStatusEffectDefinition::TargetStatusEffectChanceModifier, py::return_value_policy::reference)
		.def_readwrite("TargetStatusEffectDurationModifier", &UStatusEffectDefinition::TargetStatusEffectDurationModifier, py::return_value_policy::reference)
		.def_readwrite("TargetStatusEffectDamageModifier", &UStatusEffectDefinition::TargetStatusEffectDamageModifier, py::return_value_policy::reference)
		.def_readwrite("OnApplication", &UStatusEffectDefinition::OnApplication, py::return_value_policy::reference)
		.def_readwrite("OnDurationBegin", &UStatusEffectDefinition::OnDurationBegin, py::return_value_policy::reference)
		.def_readwrite("OnDurationEnd", &UStatusEffectDefinition::OnDurationEnd, py::return_value_policy::reference)
		.def_readwrite("OnSpreadToTarget", &UStatusEffectDefinition::OnSpreadToTarget, py::return_value_policy::reference)
		.def_readwrite("DamageSurfaceChanceModifiers", &UStatusEffectDefinition::DamageSurfaceChanceModifiers, py::return_value_policy::reference)
		.def_readwrite("StatusEffectType", &UStatusEffectDefinition::StatusEffectType)
		.def_readwrite("DamageTypeDefinition", &UStatusEffectDefinition::DamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("AppliedEffectStatId", &UStatusEffectDefinition::AppliedEffectStatId, py::return_value_policy::reference)
		.def_readwrite("ScreenParticleInit", &UStatusEffectDefinition::ScreenParticleInit, py::return_value_policy::reference)
		;
	py::class_< UStatusEffectExpressionEvaluator, UExpressionEvaluator >(m, "UStatusEffectExpressionEvaluator")
		.def_readwrite("Type", &UStatusEffectExpressionEvaluator::Type)
		.def_readwrite("EffectState", &UStatusEffectExpressionEvaluator::EffectState)
		.def("Evaluate", &UStatusEffectExpressionEvaluator::Evaluate)
		;
	py::class_< AStatusEffectProxyActor, AActor >(m, "AStatusEffectProxyActor")
		.def_readwrite("VfTable_IIStatusEffectTarget", &AStatusEffectProxyActor::VfTable_IIStatusEffectTarget, py::return_value_policy::reference)
		.def("ServerClearStatusEffects", &AStatusEffectProxyActor::ServerClearStatusEffects)
		.def("Behavior_ClearStatusEffects", &AStatusEffectProxyActor::Behavior_ClearStatusEffects)
		.def("CanReceiveStatusEffects", &AStatusEffectProxyActor::CanReceiveStatusEffects)
		.def("ReactToPrimaryStatusEffect", &AStatusEffectProxyActor::ReactToPrimaryStatusEffect)
		.def("GetAttributeContextSource", &AStatusEffectProxyActor::GetAttributeContextSource, py::return_value_policy::reference)
		.def("GetDefaultDamageSurfaceType", &AStatusEffectProxyActor::GetDefaultDamageSurfaceType)
		.def("GetBoundingSphereRadius", &AStatusEffectProxyActor::GetBoundingSphereRadius)
		.def("AttachEmitter", &AStatusEffectProxyActor::AttachEmitter)
		.def("GetDefaultStatusEffectsParticleSystemTemplate", &AStatusEffectProxyActor::GetDefaultStatusEffectsParticleSystemTemplate, py::return_value_policy::reference)
		.def("GetDefaultStatusEffectSockets", &AStatusEffectProxyActor::GetDefaultStatusEffectSockets, py::return_value_policy::reference)
		.def("GetStatusEffectsComponent", &AStatusEffectProxyActor::GetStatusEffectsComponent, py::return_value_policy::reference)
		.def("eventDestroyed", &AStatusEffectProxyActor::eventDestroyed)
		.def("GetHitRegions", [](AStatusEffectProxyActor &self , TArray< class UBodyHitRegionDefinition* >* Regions) { class UBodyHitRegionDefinition** pyDefaultRegion = 0 ;   self.GetHitRegions(Regions, pyDefaultRegion); return py::make_tuple(*pyDefaultRegion); })
		;
	py::class_< UStatusEffectsComponent, UActorComponent >(m, "UStatusEffectsComponent")
		.def_property("bCanApplyStatusEffects", [](UStatusEffectsComponent &self){return self.bCanApplyStatusEffects;}, [](UStatusEffectsComponent &self, bool value){self.bCanApplyStatusEffects = value ? 1 : 0;})
		.def_property("bUseClientEmitterList", [](UStatusEffectsComponent &self){return self.bUseClientEmitterList;}, [](UStatusEffectsComponent &self, bool value){self.bUseClientEmitterList = value ? 1 : 0;})
		.def_property("bUpdateAudio", [](UStatusEffectsComponent &self){return self.bUpdateAudio;}, [](UStatusEffectsComponent &self, bool value){self.bUpdateAudio = value ? 1 : 0;})
		.def_property("bEnabled", [](UStatusEffectsComponent &self){return self.bEnabled;}, [](UStatusEffectsComponent &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_property("bOwnerDied", [](UStatusEffectsComponent &self){return self.bOwnerDied;}, [](UStatusEffectsComponent &self, bool value){self.bOwnerDied = value ? 1 : 0;})
		.def_property("bDebugUsingStatusEffectInspector", [](UStatusEffectsComponent &self){return self.bDebugUsingStatusEffectInspector;}, [](UStatusEffectsComponent &self, bool value){self.bDebugUsingStatusEffectInspector = value ? 1 : 0;})
		.def_property("bStatusEffectsCleared", [](UStatusEffectsComponent &self){return self.bStatusEffectsCleared;}, [](UStatusEffectsComponent &self, bool value){self.bStatusEffectsCleared = value ? 1 : 0;})
		.def_readwrite("OwnerTarget", &UStatusEffectsComponent::OwnerTarget, py::return_value_policy::reference)
		.def_readwrite("BodyConsumptionPercent", &UStatusEffectsComponent::BodyConsumptionPercent)
		.def_readwrite("ActiveStatusEffects", &UStatusEffectsComponent::ActiveStatusEffects, py::return_value_policy::reference)
		.def_readwrite("LastPrimaryStatusEffect", &UStatusEffectsComponent::LastPrimaryStatusEffect, py::return_value_policy::reference)
		.def_readwrite("ActiveEmitters", &UStatusEffectsComponent::ActiveEmitters, py::return_value_policy::reference)
		.def_readwrite("ActiveEffectSounds", &UStatusEffectsComponent::ActiveEffectSounds, py::return_value_policy::reference)
		.def_readwrite("ClientEmitters", &UStatusEffectsComponent::ClientEmitters, py::return_value_policy::reference)
		.def_readwrite("IgniteChanceResistanceModifier", &UStatusEffectsComponent::IgniteChanceResistanceModifier)
		.def_readwrite("IgniteChanceResistanceModifierBaseValue", &UStatusEffectsComponent::IgniteChanceResistanceModifierBaseValue)
		.def_readwrite("IgniteChanceResistanceModifierModifierStack", &UStatusEffectsComponent::IgniteChanceResistanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("ShockChanceResistanceModifier", &UStatusEffectsComponent::ShockChanceResistanceModifier)
		.def_readwrite("ShockChanceResistanceModifierBaseValue", &UStatusEffectsComponent::ShockChanceResistanceModifierBaseValue)
		.def_readwrite("ShockChanceResistanceModifierModifierStack", &UStatusEffectsComponent::ShockChanceResistanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("CorrosiveChanceResistanceModifier", &UStatusEffectsComponent::CorrosiveChanceResistanceModifier)
		.def_readwrite("CorrosiveChanceResistanceModifierBaseValue", &UStatusEffectsComponent::CorrosiveChanceResistanceModifierBaseValue)
		.def_readwrite("CorrosiveChanceResistanceModifierModifierStack", &UStatusEffectsComponent::CorrosiveChanceResistanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("SlowChanceResistanceModifier", &UStatusEffectsComponent::SlowChanceResistanceModifier)
		.def_readwrite("SlowChanceResistanceModifierBaseValue", &UStatusEffectsComponent::SlowChanceResistanceModifierBaseValue)
		.def_readwrite("SlowChanceResistanceModifierModifierStack", &UStatusEffectsComponent::SlowChanceResistanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("AmpChanceResistanceModifier", &UStatusEffectsComponent::AmpChanceResistanceModifier)
		.def_readwrite("AmpChanceResistanceModifierBaseValue", &UStatusEffectsComponent::AmpChanceResistanceModifierBaseValue)
		.def_readwrite("AmpChanceResistanceModifierModifierStack", &UStatusEffectsComponent::AmpChanceResistanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("IgniteDurationResistanceModifier", &UStatusEffectsComponent::IgniteDurationResistanceModifier)
		.def_readwrite("IgniteDurationResistanceModifierBaseValue", &UStatusEffectsComponent::IgniteDurationResistanceModifierBaseValue)
		.def_readwrite("IgniteDurationResistanceModifierModifierStack", &UStatusEffectsComponent::IgniteDurationResistanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("ShockDurationResistanceModifier", &UStatusEffectsComponent::ShockDurationResistanceModifier)
		.def_readwrite("ShockDurationResistanceModifierBaseValue", &UStatusEffectsComponent::ShockDurationResistanceModifierBaseValue)
		.def_readwrite("ShockDurationResistanceModifierModifierStack", &UStatusEffectsComponent::ShockDurationResistanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("CorrosiveDurationResistanceModifier", &UStatusEffectsComponent::CorrosiveDurationResistanceModifier)
		.def_readwrite("CorrosiveDurationResistanceModifierBaseValue", &UStatusEffectsComponent::CorrosiveDurationResistanceModifierBaseValue)
		.def_readwrite("CorrosiveDurationResistanceModifierModifierStack", &UStatusEffectsComponent::CorrosiveDurationResistanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("SlowDurationResistanceModifier", &UStatusEffectsComponent::SlowDurationResistanceModifier)
		.def_readwrite("SlowDurationResistanceModifierBaseValue", &UStatusEffectsComponent::SlowDurationResistanceModifierBaseValue)
		.def_readwrite("SlowDurationResistanceModifierModifierStack", &UStatusEffectsComponent::SlowDurationResistanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("AmpDurationResistanceModifier", &UStatusEffectsComponent::AmpDurationResistanceModifier)
		.def_readwrite("AmpDurationResistanceModifierBaseValue", &UStatusEffectsComponent::AmpDurationResistanceModifierBaseValue)
		.def_readwrite("AmpDurationResistanceModifierModifierStack", &UStatusEffectsComponent::AmpDurationResistanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("OngoingEffects", &UStatusEffectsComponent::OngoingEffects, py::return_value_policy::reference)
		.def_readwrite("DebugPawnMarkerInst", &UStatusEffectsComponent::DebugPawnMarkerInst, py::return_value_policy::reference)
		.def("RemoveDenStat", &UStatusEffectsComponent::RemoveDenStat)
		.def("AddDenStat", &UStatusEffectsComponent::AddDenStat)
		.def("ClearDenStats", &UStatusEffectsComponent::ClearDenStats)
		.def("ConditionalCreateDebugPawnMarkerInst", &UStatusEffectsComponent::ConditionalCreateDebugPawnMarkerInst)
		.def("GetActiveEffectSounds", &UStatusEffectsComponent::GetActiveEffectSounds, py::return_value_policy::reference)
		.def("StopEffectSound", &UStatusEffectsComponent::StopEffectSound)
		.def("StartEffectSound", &UStatusEffectsComponent::StartEffectSound)
		.def("IsTypeActive", &UStatusEffectsComponent::IsTypeActive)
		.def("FillEffectActivityLists", &UStatusEffectsComponent::FillEffectActivityLists)
		.def("eventUpdateAudio", &UStatusEffectsComponent::eventUpdateAudio)
		.def("UnRegisterEmitter", &UStatusEffectsComponent::UnRegisterEmitter)
		.def("RegisterEmitter", &UStatusEffectsComponent::RegisterEmitter)
		.def("EmitterUpdated", &UStatusEffectsComponent::EmitterUpdated)
		.def("OwnerDied", &UStatusEffectsComponent::OwnerDied)
		.def("SetEnabled", &UStatusEffectsComponent::SetEnabled)
		.def("GetNonRegionSpecificEffects", &UStatusEffectsComponent::GetNonRegionSpecificEffects)
		.def("GetRegionSpecificEffects", &UStatusEffectsComponent::GetRegionSpecificEffects)
		.def("GetStatusEffects", &UStatusEffectsComponent::GetStatusEffects)
		.def("eventOnStatusEffectEnd", &UStatusEffectsComponent::eventOnStatusEffectEnd)
		.def("GetEmitterForSocketRegion", &UStatusEffectsComponent::GetEmitterForSocketRegion, py::return_value_policy::reference)
		.def("GetRegionSocketNames", &UStatusEffectsComponent::GetRegionSocketNames, py::return_value_policy::reference)
		.def("eventUpdateRegionData", &UStatusEffectsComponent::eventUpdateRegionData)
		.def("CreateTraceHitInfo", &UStatusEffectsComponent::CreateTraceHitInfo, py::return_value_policy::reference)
		.def("eventApplyStatusEffect", &UStatusEffectsComponent::eventApplyStatusEffect)
		.def("CheatApplyStatusEffect", &UStatusEffectsComponent::CheatApplyStatusEffect)
		.def("IsGuaranteedSpreadEnabled", &UStatusEffectsComponent::IsGuaranteedSpreadEnabled)
		.def("SetGuaranteedSpreadEnabled", &UStatusEffectsComponent::SetGuaranteedSpreadEnabled)
		.def("IsEnableLogSpreadingEnabled", &UStatusEffectsComponent::IsEnableLogSpreadingEnabled)
		.def("IsLogOnlyInspectedTargetsEnabled", &UStatusEffectsComponent::IsLogOnlyInspectedTargetsEnabled)
		.def("IsStatusEffectDebugEnabled", &UStatusEffectsComponent::IsStatusEffectDebugEnabled)
		.def("SetLogOnlyInspectedTargets", &UStatusEffectsComponent::SetLogOnlyInspectedTargets)
		.def("SetEnableLogSpreading", &UStatusEffectsComponent::SetEnableLogSpreading)
		.def("SetEnableLog", &UStatusEffectsComponent::SetEnableLog)
		.def("ToggleStatusEffectDebug", &UStatusEffectsComponent::ToggleStatusEffectDebug)
		.def("ClearAllStatusEffects", &UStatusEffectsComponent::ClearAllStatusEffects)
		.def("IsEnabled", &UStatusEffectsComponent::IsEnabled)
		.def("UpdateBodyConsumptionPercent", &UStatusEffectsComponent::UpdateBodyConsumptionPercent)
		.def("GetRegionStatusEffects", &UStatusEffectsComponent::GetRegionStatusEffects, py::return_value_policy::reference)
		.def("IsAffectedWithStatusEffectFromDamageType", &UStatusEffectsComponent::IsAffectedWithStatusEffectFromDamageType)
		.def("IsAffectedWithStatusEffectType", &UStatusEffectsComponent::IsAffectedWithStatusEffectType)
		.def("RollChanceForStatusEffect", &UStatusEffectsComponent::RollChanceForStatusEffect)
		.def("GetActiveStatusEffectTypes", &UStatusEffectsComponent::GetActiveStatusEffectTypes, py::return_value_policy::reference)
		.def("HasActiveStatusEffects", &UStatusEffectsComponent::HasActiveStatusEffects)
		.def("eventGetMostRecentStatusEffect", &UStatusEffectsComponent::eventGetMostRecentStatusEffect, py::return_value_policy::reference)
		.def("GetMostRecentEffectHitRegion", &UStatusEffectsComponent::GetMostRecentEffectHitRegion, py::return_value_policy::reference)
		.def("IsRegionAffectedWithStatusEffect", [](UStatusEffectsComponent &self , class UBodyHitRegionDefinition* Region, class UStatusEffectDefinition* StatusEffect) { int* pyAffectedIndex = (int*)malloc(sizeof(int)) ;  bool ret =  self.IsRegionAffectedWithStatusEffect(Region, StatusEffect, pyAffectedIndex); return py::make_tuple(ret, *pyAffectedIndex); })
		;
	py::class_< UTargetableAttributeValueResolver, UAttributeValueResolver >(m, "UTargetableAttributeValueResolver")
		.def_readwrite("ValueToResolve", &UTargetableAttributeValueResolver::ValueToResolve)
		;
	py::class_< ATemporalField, AActor >(m, "ATemporalField")
		.def_property("fBlockBullets", [](ATemporalField &self){return self.fBlockBullets;}, [](ATemporalField &self, bool value){self.fBlockBullets = value ? 1 : 0;})
		.def_readwrite("StaticMeshComponent", &ATemporalField::StaticMeshComponent, py::return_value_policy::reference)
		.def_readwrite("SkillEffect", &ATemporalField::SkillEffect, py::return_value_policy::reference)
		.def_readwrite("MyTickMultiplier", &ATemporalField::MyTickMultiplier)
		.def_readwrite("TransitionDistancePercent", &ATemporalField::TransitionDistancePercent)
		.def_readwrite("TouchEffectTemplate", &ATemporalField::TouchEffectTemplate, py::return_value_policy::reference)
		.def("PlayTouchEffect", &ATemporalField::PlayTouchEffect)
		.def("CalculateTickMultiplierForActor", &ATemporalField::CalculateTickMultiplierForActor)
		.def("eventDestroyed", &ATemporalField::eventDestroyed)
		.def("eventUnTouch", &ATemporalField::eventUnTouch)
		.def("eventTouch", &ATemporalField::eventTouch)
		.def("eventPostBeginPlay", &ATemporalField::eventPostBeginPlay)
		.def("GetFieldNormal", &ATemporalField::GetFieldNormal, py::return_value_policy::reference)
		.def("IsTemporalFieldDebugEnabled", &ATemporalField::IsTemporalFieldDebugEnabled)
		.def("ToggleTemporalFieldDebug", &ATemporalField::ToggleTemporalFieldDebug)
		;
	py::class_< UTextMarkupDictionary, UGBXDefinition >(m, "UTextMarkupDictionary")
		.def_property("bInitializedMarkupTags", [](UTextMarkupDictionary &self){return self.bInitializedMarkupTags;}, [](UTextMarkupDictionary &self, bool value){self.bInitializedMarkupTags = value ? 1 : 0;})
		.def_readwrite("Dictionary", &UTextMarkupDictionary::Dictionary, py::return_value_policy::reference)
		.def("ResolveCustomMarkupString", &UTextMarkupDictionary::ResolveCustomMarkupString, py::return_value_policy::reference)
		;
#endif
	py::class_< UTrainingMessageDefinition, UGBXDefinition >(m, "UTrainingMessageDefinition")
		.def_property("PausesGame", [](UTrainingMessageDefinition &self){return self.PausesGame;}, [](UTrainingMessageDefinition &self, bool value){self.PausesGame = value ? 1 : 0;})
		.def_property("bMandatory", [](UTrainingMessageDefinition &self){return self.bMandatory;}, [](UTrainingMessageDefinition &self, bool value){self.bMandatory = value ? 1 : 0;})
		.def_readwrite("StatId", &UTrainingMessageDefinition::StatId, py::return_value_policy::reference)
		.def_readwrite("StatTargetValue", &UTrainingMessageDefinition::StatTargetValue)
		.def_readwrite("Key", &UTrainingMessageDefinition::Key, py::return_value_policy::reference)
		.def_readwrite("TitleKey", &UTrainingMessageDefinition::TitleKey, py::return_value_policy::reference)
		.def_readwrite("HUDInitializationFrame", &UTrainingMessageDefinition::HUDInitializationFrame, py::return_value_policy::reference)
		.def_readwrite("PauseContinueDelay", &UTrainingMessageDefinition::PauseContinueDelay)
		.def_readwrite("ExceptIfStatId", &UTrainingMessageDefinition::ExceptIfStatId, py::return_value_policy::reference)
		.def_readwrite("ExceptIfGreaterThan", &UTrainingMessageDefinition::ExceptIfGreaterThan)
		.def_readwrite("StatusMenuTab", &UTrainingMessageDefinition::StatusMenuTab)
		.def_readwrite("DialogPriority", &UTrainingMessageDefinition::DialogPriority, py::return_value_policy::reference)
		;
#ifndef _DEBUG
	py::class_< UTravelStationDefinition, UGBXDefinition >(m, "UTravelStationDefinition")
		.def_readwrite("StationLevelName", &UTravelStationDefinition::StationLevelName, py::return_value_policy::reference)
		.def_readwrite("PreviousStation", &UTravelStationDefinition::PreviousStation, py::return_value_policy::reference)
		.def_readwrite("DlcExpansion", &UTravelStationDefinition::DlcExpansion, py::return_value_policy::reference)
		.def_readwrite("StationLocation", &UTravelStationDefinition::StationLocation, py::return_value_policy::reference)
		.def_readwrite("StationDisplayImage", &UTravelStationDefinition::StationDisplayImage, py::return_value_policy::reference)
		.def_readwrite("StationDisplayName", &UTravelStationDefinition::StationDisplayName, py::return_value_policy::reference)
		.def_readwrite("MissionDependencies", &UTravelStationDefinition::MissionDependencies, py::return_value_policy::reference)
		.def("StaticGetAccessibleLevelName", &UTravelStationDefinition::StaticGetAccessibleLevelName, py::return_value_policy::reference)
		.def("GetStationLevelName", &UTravelStationDefinition::GetStationLevelName, py::return_value_policy::reference)
		;
	py::class_< UFastTravelStationDefinition, UTravelStationDefinition >(m, "UFastTravelStationDefinition")
		.def_property("bInitiallyActive", [](UFastTravelStationDefinition &self){return self.bInitiallyActive;}, [](UFastTravelStationDefinition &self, bool value){self.bInitiallyActive = value ? 1 : 0;})
		.def_property("bSendOnly", [](UFastTravelStationDefinition &self){return self.bSendOnly;}, [](UFastTravelStationDefinition &self, bool value){self.bSendOnly = value ? 1 : 0;})
		.def_readwrite("StationDescription", &UFastTravelStationDefinition::StationDescription, py::return_value_policy::reference)
		.def_readwrite("StationSign", &UFastTravelStationDefinition::StationSign, py::return_value_policy::reference)
		.def_readwrite("InaccessibleObjective", &UFastTravelStationDefinition::InaccessibleObjective, py::return_value_policy::reference)
		.def_readwrite("AccessibleObjective", &UFastTravelStationDefinition::AccessibleObjective, py::return_value_policy::reference)
		.def_readwrite("AccessibilityTime", &UFastTravelStationDefinition::AccessibilityTime)
		;
	py::class_< ULevelTravelStationDefinition, UTravelStationDefinition >(m, "ULevelTravelStationDefinition")
		.def_property("bIsNonDlcToDlcTransition", [](ULevelTravelStationDefinition &self){return self.bIsNonDlcToDlcTransition;}, [](ULevelTravelStationDefinition &self, bool value){self.bIsNonDlcToDlcTransition = value ? 1 : 0;})
		.def_property("bAllowVehiclesToThisStation", [](ULevelTravelStationDefinition &self){return self.bAllowVehiclesToThisStation;}, [](ULevelTravelStationDefinition &self, bool value){self.bAllowVehiclesToThisStation = value ? 1 : 0;})
		.def_readwrite("DestinationStationDefinition", &ULevelTravelStationDefinition::DestinationStationDefinition, py::return_value_policy::reference)
		.def_readwrite("DisplayName", &ULevelTravelStationDefinition::DisplayName, py::return_value_policy::reference)
		;
	py::class_< UTravelStationNozzleComponent, UPrimitiveComponent >(m, "UTravelStationNozzleComponent")
		;
	py::class_< UTurnDefinition, UGBXDefinition >(m, "UTurnDefinition")
		.def_readwrite("Idle", &UTurnDefinition::Idle, py::return_value_policy::reference)
		.def_readwrite("Moving", &UTurnDefinition::Moving, py::return_value_policy::reference)
		.def_readwrite("TurnCancelTime", &UTurnDefinition::TurnCancelTime)
		.def("UsesMovingTurns", &UTurnDefinition::UsesMovingTurns)
		.def("UsesIdleTurns", &UTurnDefinition::UsesIdleTurns)
		;
	py::class_< UUBMGraveyardSaveData, UObject >(m, "UUBMGraveyardSaveData")
		.def_readwrite("TombstoneList", &UUBMGraveyardSaveData::TombstoneList, py::return_value_policy::reference)
		.def("GetFormattedChallengesComplete", &UUBMGraveyardSaveData::GetFormattedChallengesComplete, py::return_value_policy::reference)
		.def("GetFormattedMissionsComplete", &UUBMGraveyardSaveData::GetFormattedMissionsComplete, py::return_value_policy::reference)
		.def("GetFormattedCharacterLevel", &UUBMGraveyardSaveData::GetFormattedCharacterLevel, py::return_value_policy::reference)
		.def("GetFormattedTotalTimePlayed", &UUBMGraveyardSaveData::GetFormattedTotalTimePlayed, py::return_value_policy::reference)
		.def("GetLatestTombstoneData", &UUBMGraveyardSaveData::GetLatestTombstoneData)
		.def("AddTombstone", &UUBMGraveyardSaveData::AddTombstone)
		;
	py::class_< AVantageNode, APathNode >(m, "AVantageNode")
		.def_property("UseAsGuardPost", [](AVantageNode &self){return self.UseAsGuardPost;}, [](AVantageNode &self, bool value){self.UseAsGuardPost = value ? 1 : 0;})
		.def_readwrite("VantageOnAreas", &AVantageNode::VantageOnAreas, py::return_value_policy::reference)
		.def_readwrite("WeaponTypeFilters", &AVantageNode::WeaponTypeFilters, py::return_value_policy::reference)
		;
	py::class_< UVehicleBalanceDefinition, UBaseBalanceDefinition >(m, "UVehicleBalanceDefinition")
		.def_property("Champion", [](UVehicleBalanceDefinition &self){return self.Champion;}, [](UVehicleBalanceDefinition &self, bool value){self.Champion = value ? 1 : 0;})
		.def_readwrite("VfTable_IIConstructObject", &UVehicleBalanceDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("DefaultVehicle", &UVehicleBalanceDefinition::DefaultVehicle, py::return_value_policy::reference)
		.def_readwrite("DefaultExpLevel", &UVehicleBalanceDefinition::DefaultExpLevel, py::return_value_policy::reference)
		.def_readwrite("Grades", &UVehicleBalanceDefinition::Grades, py::return_value_policy::reference)
		.def("GetArchetypeForGrade", &UVehicleBalanceDefinition::GetArchetypeForGrade, py::return_value_policy::reference)
		.def("GetArchetypeForGameStage", &UVehicleBalanceDefinition::GetArchetypeForGameStage, py::return_value_policy::reference)
		;
	py::class_< AVehicleBlockingVolume, ABlockingVolume >(m, "AVehicleBlockingVolume")
		.def("StopsProjectile", &AVehicleBlockingVolume::StopsProjectile)
		;
	py::class_< UVehicleChoiceModuleGFxObject, UGFxObject >(m, "UVehicleChoiceModuleGFxObject")
		.def_property("CachedAnySeatAvailable", [](UVehicleChoiceModuleGFxObject &self){return self.CachedAnySeatAvailable;}, [](UVehicleChoiceModuleGFxObject &self, bool value){self.CachedAnySeatAvailable = value ? 1 : 0;})
		.def_readwrite("CachedVehicleState", &UVehicleChoiceModuleGFxObject::CachedVehicleState)
		.def_readwrite("SelectedVehicleUIDefinition", &UVehicleChoiceModuleGFxObject::SelectedVehicleUIDefinition, py::return_value_policy::reference)
		.def_readwrite("EquippedVehicleCustomizationDefinition", &UVehicleChoiceModuleGFxObject::EquippedVehicleCustomizationDefinition, py::return_value_policy::reference)
		.def_readwrite("PreviewVehicleCustomizationDefinition", &UVehicleChoiceModuleGFxObject::PreviewVehicleCustomizationDefinition, py::return_value_policy::reference)
		.def("DisableClip", &UVehicleChoiceModuleGFxObject::DisableClip)
		.def("ConfigureVehicleState", &UVehicleChoiceModuleGFxObject::ConfigureVehicleState)
		.def("ConfigureTeleportButton", &UVehicleChoiceModuleGFxObject::ConfigureTeleportButton)
		.def("ConfigureSpawnVehicleButton", &UVehicleChoiceModuleGFxObject::ConfigureSpawnVehicleButton)
		.def("ConfigureSkinTypeButton", &UVehicleChoiceModuleGFxObject::ConfigureSkinTypeButton)
		.def("ConfigureVehicleTypeButton", &UVehicleChoiceModuleGFxObject::ConfigureVehicleTypeButton)
		;
	py::class_< UVehicleClassDefinition, UGBXDefinition >(m, "UVehicleClassDefinition")
		.def_property("AllowAfterburner", [](UVehicleClassDefinition &self){return self.AllowAfterburner;}, [](UVehicleClassDefinition &self, bool value){self.AllowAfterburner = value ? 1 : 0;})
		.def_property("AfterburnerNoThrottleShutoff", [](UVehicleClassDefinition &self){return self.AfterburnerNoThrottleShutoff;}, [](UVehicleClassDefinition &self, bool value){self.AfterburnerNoThrottleShutoff = value ? 1 : 0;})
		.def_property("bAIVehicle", [](UVehicleClassDefinition &self){return self.bAIVehicle;}, [](UVehicleClassDefinition &self, bool value){self.bAIVehicle = value ? 1 : 0;})
		.def_property("bSnapToTarget", [](UVehicleClassDefinition &self){return self.bSnapToTarget;}, [](UVehicleClassDefinition &self, bool value){self.bSnapToTarget = value ? 1 : 0;})
		.def_property("SupportsTraining", [](UVehicleClassDefinition &self){return self.SupportsTraining;}, [](UVehicleClassDefinition &self, bool value){self.SupportsTraining = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorProvider", &UVehicleClassDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UVehicleClassDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def_readwrite("VehicleImpactDamage", &UVehicleClassDefinition::VehicleImpactDamage, py::return_value_policy::reference)
		.def_readwrite("VehicleRunOverDamage", &UVehicleClassDefinition::VehicleRunOverDamage, py::return_value_policy::reference)
		.def_readwrite("VehicleFeedbackDamage", &UVehicleClassDefinition::VehicleFeedbackDamage, py::return_value_policy::reference)
		.def_readwrite("DelayBetweenCollisionDamageDealtToSelf", &UVehicleClassDefinition::DelayBetweenCollisionDamageDealtToSelf)
		.def_readwrite("Seats", &UVehicleClassDefinition::Seats, py::return_value_policy::reference)
		.def_readwrite("SpeedVDamageCurve", &UVehicleClassDefinition::SpeedVDamageCurve, py::return_value_policy::reference)
		.def_readwrite("NormalDamageModifiers", &UVehicleClassDefinition::NormalDamageModifiers, py::return_value_policy::reference)
		.def_readwrite("ExplosiveDamageModifiers", &UVehicleClassDefinition::ExplosiveDamageModifiers, py::return_value_policy::reference)
		.def_readwrite("ShockDamageModifiers", &UVehicleClassDefinition::ShockDamageModifiers, py::return_value_policy::reference)
		.def_readwrite("CorrosiveDamageModifiers", &UVehicleClassDefinition::CorrosiveDamageModifiers, py::return_value_policy::reference)
		.def_readwrite("IncendiaryDamageModifiers", &UVehicleClassDefinition::IncendiaryDamageModifiers, py::return_value_policy::reference)
		.def_readwrite("AmpDamageModifiers", &UVehicleClassDefinition::AmpDamageModifiers, py::return_value_policy::reference)
		.def_readwrite("IgniteResistanceModifiers", &UVehicleClassDefinition::IgniteResistanceModifiers, py::return_value_policy::reference)
		.def_readwrite("ShockResistanceModifiers", &UVehicleClassDefinition::ShockResistanceModifiers, py::return_value_policy::reference)
		.def_readwrite("CorrosiveResistanceModifiers", &UVehicleClassDefinition::CorrosiveResistanceModifiers, py::return_value_policy::reference)
		.def_readwrite("AmpResistanceModifiers", &UVehicleClassDefinition::AmpResistanceModifiers, py::return_value_policy::reference)
		.def_readwrite("DisplayName", &UVehicleClassDefinition::DisplayName, py::return_value_policy::reference)
		.def_readwrite("HealthPoolDefinition", &UVehicleClassDefinition::HealthPoolDefinition, py::return_value_policy::reference)
		.def_readwrite("DeathImpulseScalar", &UVehicleClassDefinition::DeathImpulseScalar, py::return_value_policy::reference)
		.def_readwrite("PlayerShieldDamagePercentOnVehicleDeath", &UVehicleClassDefinition::PlayerShieldDamagePercentOnVehicleDeath)
		.def_readwrite("PlayerHealthDamagePercentOnVehicleDeath", &UVehicleClassDefinition::PlayerHealthDamagePercentOnVehicleDeath)
		.def_readwrite("RestThreshold", &UVehicleClassDefinition::RestThreshold)
		.def_readwrite("AfterburnerSpeed", &UVehicleClassDefinition::AfterburnerSpeed)
		.def_readwrite("AfterburnerForceMagnitude", &UVehicleClassDefinition::AfterburnerForceMagnitude)
		.def_readwrite("AfterburnerActivationSpeed", &UVehicleClassDefinition::AfterburnerActivationSpeed)
		.def_readwrite("AfterburnerMinSpeed", &UVehicleClassDefinition::AfterburnerMinSpeed)
		.def_readwrite("AfterburnerMinSpeedTimeoutDuration", &UVehicleClassDefinition::AfterburnerMinSpeedTimeoutDuration)
		.def_readwrite("AfterburnerCameraShake", &UVehicleClassDefinition::AfterburnerCameraShake, py::return_value_policy::reference)
		.def_readwrite("AfterburnerCameraShakeRepeatTime", &UVehicleClassDefinition::AfterburnerCameraShakeRepeatTime)
		.def_readwrite("AfterburnerBoostTime", &UVehicleClassDefinition::AfterburnerBoostTime)
		.def_readwrite("AfterburnerMaxFOV", &UVehicleClassDefinition::AfterburnerMaxFOV)
		.def_readwrite("AfterburnerImpulseOrigin", &UVehicleClassDefinition::AfterburnerImpulseOrigin, py::return_value_policy::reference)
		.def_readwrite("AfterburnerPoolDefinition", &UVehicleClassDefinition::AfterburnerPoolDefinition, py::return_value_policy::reference)
		.def_readwrite("AfterburnerBrakingBonus", &UVehicleClassDefinition::AfterburnerBrakingBonus)
		.def_readwrite("AfterburnerImpulse", &UVehicleClassDefinition::AfterburnerImpulse, py::return_value_policy::reference)
		.def_readwrite("AfterburnerChassisTorqueScalar", &UVehicleClassDefinition::AfterburnerChassisTorqueScalar)
		.def_readwrite("AfterburnerTorqueBonus", &UVehicleClassDefinition::AfterburnerTorqueBonus)
		.def_readwrite("AfterburnerTorqueDecayRate", &UVehicleClassDefinition::AfterburnerTorqueDecayRate)
		.def_readwrite("AfterburnerRumble", &UVehicleClassDefinition::AfterburnerRumble, py::return_value_policy::reference)
		.def_readwrite("BrakingRumble", &UVehicleClassDefinition::BrakingRumble, py::return_value_policy::reference)
		.def_readwrite("BrakingRumbleScaleAdjustment", &UVehicleClassDefinition::BrakingRumbleScaleAdjustment)
		.def_readwrite("SkidParticleScale", &UVehicleClassDefinition::SkidParticleScale)
		.def_readwrite("SkidParticleScaleDecaySpeed", &UVehicleClassDefinition::SkidParticleScaleDecaySpeed)
		.def_readwrite("SkidParticleMinVehicleSpeed", &UVehicleClassDefinition::SkidParticleMinVehicleSpeed)
		.def_readwrite("FOV", &UVehicleClassDefinition::FOV)
		.def_readwrite("DefaultFOVModifierSpeed", &UVehicleClassDefinition::DefaultFOVModifierSpeed)
		.def_readwrite("AfterburnerOnFOVModifierSpeed", &UVehicleClassDefinition::AfterburnerOnFOVModifierSpeed)
		.def_readwrite("AfterburnerOffFOVModifierSpeed", &UVehicleClassDefinition::AfterburnerOffFOVModifierSpeed)
		.def_readwrite("PlayerSpeed", &UVehicleClassDefinition::PlayerSpeed)
		.def_readwrite("AIPatrolSpeed", &UVehicleClassDefinition::AIPatrolSpeed)
		.def_readwrite("AIPursuitSpeed", &UVehicleClassDefinition::AIPursuitSpeed)
		.def_readwrite("AICatchUpSpeed", &UVehicleClassDefinition::AICatchUpSpeed)
		.def_readwrite("AIMatchDistance", &UVehicleClassDefinition::AIMatchDistance)
		.def_readwrite("AIAdjustDistance", &UVehicleClassDefinition::AIAdjustDistance)
		.def_readwrite("AISpeedModifier", &UVehicleClassDefinition::AISpeedModifier)
		.def_readwrite("AIDirectionModifier", &UVehicleClassDefinition::AIDirectionModifier)
		.def_readwrite("AITargetSpeedLimit", &UVehicleClassDefinition::AITargetSpeedLimit)
		.def_readwrite("TargetableSocket", &UVehicleClassDefinition::TargetableSocket, py::return_value_policy::reference)
		.def_readwrite("DefaultRootRotationMode", &UVehicleClassDefinition::DefaultRootRotationMode)
		.def_readwrite("DefaultRootTranslationMode", &UVehicleClassDefinition::DefaultRootTranslationMode)
		.def_readwrite("RotationRate", &UVehicleClassDefinition::RotationRate, py::return_value_policy::reference)
		.def_readwrite("CrewAnimSetLookupTable", &UVehicleClassDefinition::CrewAnimSetLookupTable, py::return_value_policy::reference)
		.def_readwrite("StatNameFirstTimeUse", &UVehicleClassDefinition::StatNameFirstTimeUse, py::return_value_policy::reference)
		.def("GetSpeedDamageModifier", &UVehicleClassDefinition::GetSpeedDamageModifier)
		.def("GetEjectionVelocity", &UVehicleClassDefinition::GetEjectionVelocity, py::return_value_policy::reference)
		.def("GetSeatIndexFromPrefix", &UVehicleClassDefinition::GetSeatIndexFromPrefix)
		.def("GetEnterAnim", &UVehicleClassDefinition::GetEnterAnim, py::return_value_policy::reference)
		.def("OnReverseLightsDeactivated", &UVehicleClassDefinition::OnReverseLightsDeactivated)
		.def("OnReverseLightsActivated", &UVehicleClassDefinition::OnReverseLightsActivated)
		.def("OnBrakeLightsDeactivated", &UVehicleClassDefinition::OnBrakeLightsDeactivated)
		.def("OnBrakeLightsActivated", &UVehicleClassDefinition::OnBrakeLightsActivated)
		.def("OnHeadlightsDeactivated", &UVehicleClassDefinition::OnHeadlightsDeactivated)
		.def("OnHeadlightsActivated", &UVehicleClassDefinition::OnHeadlightsActivated)
		.def("OnSeatExited", &UVehicleClassDefinition::OnSeatExited)
		.def("OnSeatEntered", &UVehicleClassDefinition::OnSeatEntered)
		.def("OnSpawn", &UVehicleClassDefinition::OnSpawn)
		.def("OnStopHandbrake", &UVehicleClassDefinition::OnStopHandbrake)
		.def("OnStartHandbrake", &UVehicleClassDefinition::OnStartHandbrake)
		.def("OnTurretStoppedRotation", &UVehicleClassDefinition::OnTurretStoppedRotation)
		.def("OnTurretRotated", &UVehicleClassDefinition::OnTurretRotated)
		.def("OnCollision", &UVehicleClassDefinition::OnCollision)
		.def("OnTakeDamage", &UVehicleClassDefinition::OnTakeDamage)
		.def("OnDestroy", &UVehicleClassDefinition::OnDestroy)
		.def("OnKilledBy", &UVehicleClassDefinition::OnKilledBy)
		.def("OnDeath", &UVehicleClassDefinition::OnDeath)
		.def("OnAfterburnerDisengaged", &UVehicleClassDefinition::OnAfterburnerDisengaged)
		.def("OnAfterburnerEngaged", &UVehicleClassDefinition::OnAfterburnerEngaged)
		.def("OnPlayHorn", &UVehicleClassDefinition::OnPlayHorn)
		.def("ProcessSeatEvent", &UVehicleClassDefinition::ProcessSeatEvent)
		.def("GetCollisionDamageTypeForSpeed", &UVehicleClassDefinition::GetCollisionDamageTypeForSpeed, py::return_value_policy::reference)
		.def("SetBehaviorProviderDefinition", &UVehicleClassDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UVehicleClassDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		.def("EvaluateDamageFormula", [](UVehicleClassDefinition &self , class AActor* Target, class AWillowVehicle* Source, struct FCollisionDamageCalculation* Formula, struct FVector* ApplyForce) { float* pyApplyDamage = (float*)malloc(sizeof(float)) ;   self.EvaluateDamageFormula(Target, Source, Formula, ApplyForce, pyApplyDamage); return py::make_tuple(*pyApplyDamage); })
		;
	py::class_< UVehicleCrewAnimSetLookupTable, UObject >(m, "UVehicleCrewAnimSetLookupTable")
		.def_readwrite("Mappings", &UVehicleCrewAnimSetLookupTable::Mappings, py::return_value_policy::reference)
		;
	py::class_< UVehicleFamilyDefinition, UGBXDefinition >(m, "UVehicleFamilyDefinition")
		.def_readwrite("VehicleUIDefinitions", &UVehicleFamilyDefinition::VehicleUIDefinitions, py::return_value_policy::reference)
		.def_readwrite("FamilyName", &UVehicleFamilyDefinition::FamilyName, py::return_value_policy::reference)
		.def_readwrite("VehiclePreviewClip", &UVehicleFamilyDefinition::VehiclePreviewClip, py::return_value_policy::reference)
		.def_readwrite("RequiredMissionCompletionToUnlock", &UVehicleFamilyDefinition::RequiredMissionCompletionToUnlock, py::return_value_policy::reference)
		.def_readwrite("SupportedTags", &UVehicleFamilyDefinition::SupportedTags, py::return_value_policy::reference)
		.def_readwrite("RequiredTags", &UVehicleFamilyDefinition::RequiredTags, py::return_value_policy::reference)
		.def("GetVehiclePreviewMoviePath", &UVehicleFamilyDefinition::GetVehiclePreviewMoviePath, py::return_value_policy::reference)
		;
	py::class_< UVehicleHandlingDefinition, UGBXDefinition >(m, "UVehicleHandlingDefinition")
		.def_property("bWheelSpeedOverride", [](UVehicleHandlingDefinition &self){return self.bWheelSpeedOverride;}, [](UVehicleHandlingDefinition &self, bool value){self.bWheelSpeedOverride = value ? 1 : 0;})
		.def_property("bClampedFrictionModel", [](UVehicleHandlingDefinition &self){return self.bClampedFrictionModel;}, [](UVehicleHandlingDefinition &self, bool value){self.bClampedFrictionModel = value ? 1 : 0;})
		.def_property("bAutoDrive", [](UVehicleHandlingDefinition &self){return self.bAutoDrive;}, [](UVehicleHandlingDefinition &self, bool value){self.bAutoDrive = value ? 1 : 0;})
		.def_property("bStayUpright", [](UVehicleHandlingDefinition &self){return self.bStayUpright;}, [](UVehicleHandlingDefinition &self, bool value){self.bStayUpright = value ? 1 : 0;})
		.def_readwrite("WheelSuspensionStiffness", &UVehicleHandlingDefinition::WheelSuspensionStiffness)
		.def_readwrite("WheelSuspensionDamping", &UVehicleHandlingDefinition::WheelSuspensionDamping)
		.def_readwrite("WheelSuspensionBias", &UVehicleHandlingDefinition::WheelSuspensionBias)
		.def_readwrite("WheelLongExtremumSlip", &UVehicleHandlingDefinition::WheelLongExtremumSlip)
		.def_readwrite("WheelLongExtremumValue", &UVehicleHandlingDefinition::WheelLongExtremumValue)
		.def_readwrite("WheelLongAsymptoteSlip", &UVehicleHandlingDefinition::WheelLongAsymptoteSlip)
		.def_readwrite("WheelLongAsymptoteValue", &UVehicleHandlingDefinition::WheelLongAsymptoteValue)
		.def_readwrite("WheelLatExtremumSlip", &UVehicleHandlingDefinition::WheelLatExtremumSlip)
		.def_readwrite("WheelLatExtremumValue", &UVehicleHandlingDefinition::WheelLatExtremumValue)
		.def_readwrite("WheelLatAsymptoteSlip", &UVehicleHandlingDefinition::WheelLatAsymptoteSlip)
		.def_readwrite("WheelLatAsymptoteValue", &UVehicleHandlingDefinition::WheelLatAsymptoteValue)
		.def_readwrite("WheelInertia", &UVehicleHandlingDefinition::WheelInertia)
		.def_readwrite("AutoDriveSteer", &UVehicleHandlingDefinition::AutoDriveSteer)
		.def_readwrite("COMOffset", &UVehicleHandlingDefinition::COMOffset, py::return_value_policy::reference)
		.def_readwrite("InertiaTensorMultiplier", &UVehicleHandlingDefinition::InertiaTensorMultiplier, py::return_value_policy::reference)
		.def_readwrite("StayUprightRollResistAngle", &UVehicleHandlingDefinition::StayUprightRollResistAngle)
		.def_readwrite("StayUprightPitchResistAngle", &UVehicleHandlingDefinition::StayUprightPitchResistAngle)
		.def_readwrite("StayUprightStiffness", &UVehicleHandlingDefinition::StayUprightStiffness)
		.def_readwrite("StayUprightDamping", &UVehicleHandlingDefinition::StayUprightDamping)
		.def_readwrite("Wheels", &UVehicleHandlingDefinition::Wheels, py::return_value_policy::reference)
		.def_readwrite("HandbrakeFishtailForces", &UVehicleHandlingDefinition::HandbrakeFishtailForces, py::return_value_policy::reference)
		.def_readwrite("FishtailCameraShake", &UVehicleHandlingDefinition::FishtailCameraShake, py::return_value_policy::reference)
		.def_readwrite("FishtailCameraShakeMinVehicleSpeed", &UVehicleHandlingDefinition::FishtailCameraShakeMinVehicleSpeed)
		.def("ApplyDefinitionToVehicle", &UVehicleHandlingDefinition::ApplyDefinitionToVehicle)
		;
	py::class_< UCarVehicleHandlingDefinition, UVehicleHandlingDefinition >(m, "UCarVehicleHandlingDefinition")
		.def_readwrite("ChassisTorqueScale", &UCarVehicleHandlingDefinition::ChassisTorqueScale)
		.def_readwrite("MaxSteerAngleCurve", &UCarVehicleHandlingDefinition::MaxSteerAngleCurve, py::return_value_policy::reference)
		.def_readwrite("SteerSpeed", &UCarVehicleHandlingDefinition::SteerSpeed)
		.def_readwrite("ReverseThrottle", &UCarVehicleHandlingDefinition::ReverseThrottle)
		.def_readwrite("EngineBrakeFactor", &UCarVehicleHandlingDefinition::EngineBrakeFactor)
		.def_readwrite("MaxBrakeTorque", &UCarVehicleHandlingDefinition::MaxBrakeTorque)
		.def_readwrite("StopThreshold", &UCarVehicleHandlingDefinition::StopThreshold)
		.def_readwrite("TorqueVSpeedCurve", &UCarVehicleHandlingDefinition::TorqueVSpeedCurve, py::return_value_policy::reference)
		.def_readwrite("LSDFactor", &UCarVehicleHandlingDefinition::LSDFactor)
		.def_readwrite("ThrottleSpeed", &UCarVehicleHandlingDefinition::ThrottleSpeed)
		.def_readwrite("SlopeMinDriveLimit", &UCarVehicleHandlingDefinition::SlopeMinDriveLimit)
		.def_readwrite("SlopeMaxDriveLimit", &UCarVehicleHandlingDefinition::SlopeMaxDriveLimit)
		.def_readwrite("FrontalCollisionGripFactor", &UCarVehicleHandlingDefinition::FrontalCollisionGripFactor)
		.def_readwrite("InAirUprightTorqueFactor", &UCarVehicleHandlingDefinition::InAirUprightTorqueFactor)
		.def_readwrite("InAirUprightMaxTorque", &UCarVehicleHandlingDefinition::InAirUprightMaxTorque)
		;
	py::class_< UHoverVehicleHandlingDefinition, UCarVehicleHandlingDefinition >(m, "UHoverVehicleHandlingDefinition")
		.def_readwrite("AirTransFriction", &UHoverVehicleHandlingDefinition::AirTransFriction, py::return_value_policy::reference)
		.def_readwrite("AirRotFriction", &UHoverVehicleHandlingDefinition::AirRotFriction)
		.def_readwrite("ForceScalar", &UHoverVehicleHandlingDefinition::ForceScalar, py::return_value_policy::reference)
		.def_readwrite("TorqueScalar", &UHoverVehicleHandlingDefinition::TorqueScalar)
		.def_readwrite("TiltScalar", &UHoverVehicleHandlingDefinition::TiltScalar)
		.def_readwrite("MoveTiltAmount", &UHoverVehicleHandlingDefinition::MoveTiltAmount)
		;
	py::class_< UTankVehicleHandlingDefinition, UCarVehicleHandlingDefinition >(m, "UTankVehicleHandlingDefinition")
		.def_property("bTurnInPlaceOnSteer", [](UTankVehicleHandlingDefinition &self){return self.bTurnInPlaceOnSteer;}, [](UTankVehicleHandlingDefinition &self, bool value){self.bTurnInPlaceOnSteer = value ? 1 : 0;})
		.def_property("bDoStoppedTurns", [](UTankVehicleHandlingDefinition &self){return self.bDoStoppedTurns;}, [](UTankVehicleHandlingDefinition &self, bool value){self.bDoStoppedTurns = value ? 1 : 0;})
		.def_readwrite("MaxEngineTorque", &UTankVehicleHandlingDefinition::MaxEngineTorque)
		.def_readwrite("EngineDamping", &UTankVehicleHandlingDefinition::EngineDamping)
		.def_readwrite("InsideTrackTorqueFactor", &UTankVehicleHandlingDefinition::InsideTrackTorqueFactor)
		.def_readwrite("SteeringLatStiffnessFactor", &UTankVehicleHandlingDefinition::SteeringLatStiffnessFactor)
		.def_readwrite("TurnInPlaceThrottle", &UTankVehicleHandlingDefinition::TurnInPlaceThrottle)
		.def_readwrite("TurnMaxGripReduction", &UTankVehicleHandlingDefinition::TurnMaxGripReduction)
		.def_readwrite("TurnGripScaleRate", &UTankVehicleHandlingDefinition::TurnGripScaleRate)
		.def_readwrite("SteeringThresholdForStoppedTurns", &UTankVehicleHandlingDefinition::SteeringThresholdForStoppedTurns)
		.def_readwrite("EngineDampingOnStoppedTurns", &UTankVehicleHandlingDefinition::EngineDampingOnStoppedTurns)
		;
	py::class_< UChopperVehicleHandlingDefinition, UVehicleHandlingDefinition >(m, "UChopperVehicleHandlingDefinition")
		.def_property("bAllowZThrust", [](UChopperVehicleHandlingDefinition &self){return self.bAllowZThrust;}, [](UChopperVehicleHandlingDefinition &self, bool value){self.bAllowZThrust = value ? 1 : 0;})
		.def_property("bFullThrustOnDirectionChange", [](UChopperVehicleHandlingDefinition &self){return self.bFullThrustOnDirectionChange;}, [](UChopperVehicleHandlingDefinition &self, bool value){self.bFullThrustOnDirectionChange = value ? 1 : 0;})
		.def_property("bShouldCutThrustMaxOnImpact", [](UChopperVehicleHandlingDefinition &self){return self.bShouldCutThrustMaxOnImpact;}, [](UChopperVehicleHandlingDefinition &self, bool value){self.bShouldCutThrustMaxOnImpact = value ? 1 : 0;})
		.def_property("bStabilizeStops", [](UChopperVehicleHandlingDefinition &self){return self.bStabilizeStops;}, [](UChopperVehicleHandlingDefinition &self, bool value){self.bStabilizeStops = value ? 1 : 0;})
		.def_property("bAutoHover", [](UChopperVehicleHandlingDefinition &self){return self.bAutoHover;}, [](UChopperVehicleHandlingDefinition &self, bool value){self.bAutoHover = value ? 1 : 0;})
		.def_readwrite("MaxThrustForce", &UChopperVehicleHandlingDefinition::MaxThrustForce)
		.def_readwrite("MaxReverseForce", &UChopperVehicleHandlingDefinition::MaxReverseForce)
		.def_readwrite("LongDamping", &UChopperVehicleHandlingDefinition::LongDamping)
		.def_readwrite("MaxStrafeForce", &UChopperVehicleHandlingDefinition::MaxStrafeForce)
		.def_readwrite("LatDamping", &UChopperVehicleHandlingDefinition::LatDamping)
		.def_readwrite("DirectionChangeForce", &UChopperVehicleHandlingDefinition::DirectionChangeForce)
		.def_readwrite("MaxRiseForce", &UChopperVehicleHandlingDefinition::MaxRiseForce)
		.def_readwrite("UpDamping", &UChopperVehicleHandlingDefinition::UpDamping)
		.def_readwrite("TurnTorqueFactor", &UChopperVehicleHandlingDefinition::TurnTorqueFactor)
		.def_readwrite("TurnTorqueMax", &UChopperVehicleHandlingDefinition::TurnTorqueMax)
		.def_readwrite("TurnDamping", &UChopperVehicleHandlingDefinition::TurnDamping)
		.def_readwrite("MaxYawRate", &UChopperVehicleHandlingDefinition::MaxYawRate)
		.def_readwrite("PitchTorqueFactor", &UChopperVehicleHandlingDefinition::PitchTorqueFactor)
		.def_readwrite("PitchTorqueMax", &UChopperVehicleHandlingDefinition::PitchTorqueMax)
		.def_readwrite("PitchDamping", &UChopperVehicleHandlingDefinition::PitchDamping)
		.def_readwrite("RollTorqueTurnFactor", &UChopperVehicleHandlingDefinition::RollTorqueTurnFactor)
		.def_readwrite("RollTorqueStrafeFactor", &UChopperVehicleHandlingDefinition::RollTorqueStrafeFactor)
		.def_readwrite("RollTorqueMax", &UChopperVehicleHandlingDefinition::RollTorqueMax)
		.def_readwrite("RollDamping", &UChopperVehicleHandlingDefinition::RollDamping)
		.def_readwrite("StopThreshold", &UChopperVehicleHandlingDefinition::StopThreshold)
		.def_readwrite("MaxRandForce", &UChopperVehicleHandlingDefinition::MaxRandForce)
		.def_readwrite("RandForceInterval", &UChopperVehicleHandlingDefinition::RandForceInterval)
		.def_readwrite("StabilizationForceMultiplier", &UChopperVehicleHandlingDefinition::StabilizationForceMultiplier)
		.def_readwrite("MaxVelocityWhenAdjustingHover", &UChopperVehicleHandlingDefinition::MaxVelocityWhenAdjustingHover)
		.def_readwrite("HoverDeadZone", &UChopperVehicleHandlingDefinition::HoverDeadZone)
		.def_readwrite("RiseAdjustmentInterval", &UChopperVehicleHandlingDefinition::RiseAdjustmentInterval)
		;
	py::class_< AVehicleLifetimeManager, AInfo >(m, "AVehicleLifetimeManager")
		.def_property("Initialized", [](AVehicleLifetimeManager &self){return self.Initialized;}, [](AVehicleLifetimeManager &self, bool value){self.Initialized = value ? 1 : 0;})
		.def_property("VehiclesOccupied", [](AVehicleLifetimeManager &self){return self.VehiclesOccupied;}, [](AVehicleLifetimeManager &self, bool value){self.VehiclesOccupied = value ? 1 : 0;})
		.def_property("VehiclesUnlockedCheat", [](AVehicleLifetimeManager &self){return self.VehiclesUnlockedCheat;}, [](AVehicleLifetimeManager &self, bool value){self.VehiclesUnlockedCheat = value ? 1 : 0;})
		.def_readwrite("NextTickUpdateTime", &AVehicleLifetimeManager::NextTickUpdateTime)
		.def_readwrite("NextCheckUsersTime", &AVehicleLifetimeManager::NextCheckUsersTime)
		.def_readwrite("CurrentVehicleFamily", &AVehicleLifetimeManager::CurrentVehicleFamily, py::return_value_policy::reference)
		.def_readwrite("TerminalDetail", &AVehicleLifetimeManager::TerminalDetail, py::return_value_policy::reference)
		.def_readwrite("AllVehicles", &AVehicleLifetimeManager::AllVehicles, py::return_value_policy::reference)
		.def_readwrite("VehicleUnRegisterList", &AVehicleLifetimeManager::VehicleUnRegisterList, py::return_value_policy::reference)
		.def_readwrite("TickUpdateInterval", &AVehicleLifetimeManager::TickUpdateInterval)
		.def_readwrite("CheckUsersInterval", &AVehicleLifetimeManager::CheckUsersInterval)
		.def("eventReplicatedEvent", &AVehicleLifetimeManager::eventReplicatedEvent)
		.def("NotifySetCinematicMode", &AVehicleLifetimeManager::NotifySetCinematicMode)
		.def("CleanUpPlayerVehicles", &AVehicleLifetimeManager::CleanUpPlayerVehicles)
		.def("InternalAreAnyPlayersUsingVehicles", &AVehicleLifetimeManager::InternalAreAnyPlayersUsingVehicles)
		.def("AreAnyPlayersUsingVehicles", &AVehicleLifetimeManager::AreAnyPlayersUsingVehicles)
		.def("HasVehicleInRegistry", &AVehicleLifetimeManager::HasVehicleInRegistry)
		.def("UnRegisterVehicle", &AVehicleLifetimeManager::UnRegisterVehicle)
		.def("RegisterVehicle", &AVehicleLifetimeManager::RegisterVehicle)
		.def("GetCurrentVehicleFamily", &AVehicleLifetimeManager::GetCurrentVehicleFamily, py::return_value_policy::reference)
		.def("SetCurrentVehicleFamily", &AVehicleLifetimeManager::SetCurrentVehicleFamily)
		.def("IsSpawnStationInUseByOtherThan", &AVehicleLifetimeManager::IsSpawnStationInUseByOtherThan)
		.def("SetSpawnStationInUse", &AVehicleLifetimeManager::SetSpawnStationInUse)
		.def("initialize", &AVehicleLifetimeManager::initialize)
		;
	py::class_< UVehicleSpawnStationVehicleDefinition, UGBXDefinition >(m, "UVehicleSpawnStationVehicleDefinition")
		.def_readwrite("VehicleFactory", &UVehicleSpawnStationVehicleDefinition::VehicleFactory, py::return_value_policy::reference)
		.def_readwrite("VehicleMesh", &UVehicleSpawnStationVehicleDefinition::VehicleMesh, py::return_value_policy::reference)
		.def_readwrite("HeightAbovePlatformToSpawn", &UVehicleSpawnStationVehicleDefinition::HeightAbovePlatformToSpawn)
		.def_readwrite("PostSpawnCoordinatedEffect", &UVehicleSpawnStationVehicleDefinition::PostSpawnCoordinatedEffect, py::return_value_policy::reference)
		.def_readwrite("MyUIDefinition", &UVehicleSpawnStationVehicleDefinition::MyUIDefinition, py::return_value_policy::reference)
		.def_readwrite("LinkedOnDemandPackage", &UVehicleSpawnStationVehicleDefinition::LinkedOnDemandPackage, py::return_value_policy::reference)
		;
	py::class_< AVehicleStandIn, AActor >(m, "AVehicleStandIn")
		.def_readwrite("VfTable_IIBodyCompositionInstance", &AVehicleStandIn::VfTable_IIBodyCompositionInstance, py::return_value_policy::reference)
		.def_readwrite("VfTable_IICustomizable", &AVehicleStandIn::VfTable_IICustomizable, py::return_value_policy::reference)
		.def_readwrite("PreviewMesh", &AVehicleStandIn::PreviewMesh, py::return_value_policy::reference)
		.def_readwrite("DefaultCustomization", &AVehicleStandIn::DefaultCustomization, py::return_value_policy::reference)
		.def_readwrite("CachedCustomization", &AVehicleStandIn::CachedCustomization, py::return_value_policy::reference)
		.def_readwrite("InstanceState", &AVehicleStandIn::InstanceState, py::return_value_policy::reference)
		.def("eventInitiateCustomizationRequest", &AVehicleStandIn::eventInitiateCustomizationRequest)
		.def("eventDestroyed", &AVehicleStandIn::eventDestroyed)
		.def("DestroyPreviewMesh", &AVehicleStandIn::DestroyPreviewMesh)
		.def("CreatePreviewMesh", &AVehicleStandIn::CreatePreviewMesh)
		.def("ClearBodyCompositionInstance", &AVehicleStandIn::ClearBodyCompositionInstance)
		.def("ApplyPreviewBodyComposition", &AVehicleStandIn::ApplyPreviewBodyComposition)
		.def("GetBodyInfoProvider", &AVehicleStandIn::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("ChangeInstanceDataSwitch", &AVehicleStandIn::ChangeInstanceDataSwitch)
		.def("PostInitBodyComposition", &AVehicleStandIn::PostInitBodyComposition)
		.def("PreRemoveBodyComposition", &AVehicleStandIn::PreRemoveBodyComposition)
		.def("AllowFallbackToDefaultCustomizations", &AVehicleStandIn::AllowFallbackToDefaultCustomizations)
		.def("RefreshCustomizationsOnInstanceData", &AVehicleStandIn::RefreshCustomizationsOnInstanceData)
		.def("GetCustomizableName", &AVehicleStandIn::GetCustomizableName, py::return_value_policy::reference)
		.def("GetCustomizableInstanceDataSets", &AVehicleStandIn::GetCustomizableInstanceDataSets)
		.def("GetDesiredCustomizationOfType", &AVehicleStandIn::GetDesiredCustomizationOfType, py::return_value_policy::reference)
		.def("CustomizationApplied", &AVehicleStandIn::CustomizationApplied)
		;
	py::class_< UVehicleWheelDefinition, UGBXDefinition >(m, "UVehicleWheelDefinition")
		.def_readwrite("BoneOffset", &UVehicleWheelDefinition::BoneOffset, py::return_value_policy::reference)
		.def_readwrite("WheelRadius", &UVehicleWheelDefinition::WheelRadius)
		.def_readwrite("SuspensionTravel", &UVehicleWheelDefinition::SuspensionTravel)
		.def_readwrite("SuspensionSpeed", &UVehicleWheelDefinition::SuspensionSpeed)
		.def_readwrite("LongSlipFactor", &UVehicleWheelDefinition::LongSlipFactor)
		.def_readwrite("LatSlipFactor", &UVehicleWheelDefinition::LatSlipFactor)
		.def_readwrite("HandbrakeLongSlipFactor", &UVehicleWheelDefinition::HandbrakeLongSlipFactor)
		.def_readwrite("HandbrakeLatSlipFactor", &UVehicleWheelDefinition::HandbrakeLatSlipFactor)
		.def_readwrite("ParkedSlipFactorLat", &UVehicleWheelDefinition::ParkedSlipFactorLat)
		.def_readwrite("ParkedSlipFactorLong", &UVehicleWheelDefinition::ParkedSlipFactorLong)
		;
	py::class_< UVSSUIDefinition, UGBXDefinition >(m, "UVSSUIDefinition")
		.def_readwrite("VfTable_IIDlcLicensableObject", &UVSSUIDefinition::VfTable_IIDlcLicensableObject, py::return_value_policy::reference)
		.def_readwrite("VehicleFamily", &UVSSUIDefinition::VehicleFamily, py::return_value_policy::reference)
		.def_readwrite("VehicleName", &UVSSUIDefinition::VehicleName, py::return_value_policy::reference)
		.def_readwrite("PathToVSSDefinition", &UVSSUIDefinition::PathToVSSDefinition, py::return_value_policy::reference)
		.def_readwrite("PreferredOrdering", &UVSSUIDefinition::PreferredOrdering)
		.def_readwrite("EligibleUsage", &UVSSUIDefinition::EligibleUsage, py::return_value_policy::reference)
		.def_readwrite("SupportedTags", &UVSSUIDefinition::SupportedTags, py::return_value_policy::reference)
		.def_readwrite("RequiredTags", &UVSSUIDefinition::RequiredTags, py::return_value_policy::reference)
		.def_readwrite("VehicleMaterialBankIndex", &UVSSUIDefinition::VehicleMaterialBankIndex)
		.def_readwrite("VehiclePreviewFrame", &UVSSUIDefinition::VehiclePreviewFrame, py::return_value_policy::reference)
		.def_readwrite("VehiclePreviewClip", &UVSSUIDefinition::VehiclePreviewClip, py::return_value_policy::reference)
		.def_readwrite("RequiredMissionCompletionToUnlock", &UVSSUIDefinition::RequiredMissionCompletionToUnlock, py::return_value_policy::reference)
		.def_readwrite("DlcVehicleDef", &UVSSUIDefinition::DlcVehicleDef, py::return_value_policy::reference)
		.def("GetVehiclePreviewMoviePath", &UVSSUIDefinition::GetVehiclePreviewMoviePath, py::return_value_policy::reference)
		.def("GetDownloadableContentDefinition", &UVSSUIDefinition::GetDownloadableContentDefinition, py::return_value_policy::reference)
		.def("GetHumanReadableVehicleName", &UVSSUIDefinition::GetHumanReadableVehicleName, py::return_value_policy::reference)
		;
	py::class_< UWaypointComponent, UActorComponent >(m, "UWaypointComponent")
		.def_property("bActive", [](UWaypointComponent &self){return self.bActive;}, [](UWaypointComponent &self, bool value){self.bActive = value ? 1 : 0;})
		.def("RemoveWaypoint", &UWaypointComponent::RemoveWaypoint)
		;
	py::class_< ULevelTransitionWaypointComponent, UWaypointComponent >(m, "ULevelTransitionWaypointComponent")
		.def_readwrite("Mission", &ULevelTransitionWaypointComponent::Mission, py::return_value_policy::reference)
		.def_readwrite("MissionLevel", &ULevelTransitionWaypointComponent::MissionLevel, py::return_value_policy::reference)
		.def("RemoveWaypoint", &ULevelTransitionWaypointComponent::RemoveWaypoint)
		;
	py::class_< UMissionDirectiveWaypointComponent, UWaypointComponent >(m, "UMissionDirectiveWaypointComponent")
		.def_readwrite("LinkedMission", &UMissionDirectiveWaypointComponent::LinkedMission, py::return_value_policy::reference)
		.def_readwrite("BranchEnding", &UMissionDirectiveWaypointComponent::BranchEnding)
		.def("RemoveWaypoint", &UMissionDirectiveWaypointComponent::RemoveWaypoint)
		;
	py::class_< UFailableMissionDirectiveWaypointComponent, UMissionDirectiveWaypointComponent >(m, "UFailableMissionDirectiveWaypointComponent")
		;
	py::class_< UMissionObjectiveWaypointComponent, UWaypointComponent >(m, "UMissionObjectiveWaypointComponent")
		.def_readwrite("WaypointInfo", &UMissionObjectiveWaypointComponent::WaypointInfo, py::return_value_policy::reference)
		.def_readwrite("WaypointRadius", &UMissionObjectiveWaypointComponent::WaypointRadius)
		.def("RemoveWaypoint", &UMissionObjectiveWaypointComponent::RemoveWaypoint)
		;
	py::class_< UWeaponAmmoResourceAttributeValueResolver, UAttributeValueResolver >(m, "UWeaponAmmoResourceAttributeValueResolver")
		.def_readwrite("ValueIfNotMatched", &UWeaponAmmoResourceAttributeValueResolver::ValueIfNotMatched, py::return_value_policy::reference)
		.def_readwrite("AmmoResources", &UWeaponAmmoResourceAttributeValueResolver::AmmoResources, py::return_value_policy::reference)
		;
	py::class_< UWeaponGlowEffectDefinition, UGBXDefinition >(m, "UWeaponGlowEffectDefinition")
		.def_readwrite("GlowScaleCurve", &UWeaponGlowEffectDefinition::GlowScaleCurve, py::return_value_policy::reference)
		;
	py::class_< UWeaponPartDefinition, UWillowInventoryPartDefinition >(m, "UWeaponPartDefinition")
		.def_property("bIsSpinningEnabled", [](UWeaponPartDefinition &self){return self.bIsSpinningEnabled;}, [](UWeaponPartDefinition &self, bool value){self.bIsSpinningEnabled = value ? 1 : 0;})
		.def_property("bFlapsEnabled", [](UWeaponPartDefinition &self){return self.bFlapsEnabled;}, [](UWeaponPartDefinition &self, bool value){self.bFlapsEnabled = value ? 1 : 0;})
		.def_property("bOverrideShellCasing", [](UWeaponPartDefinition &self){return self.bOverrideShellCasing;}, [](UWeaponPartDefinition &self, bool value){self.bOverrideShellCasing = value ? 1 : 0;})
		.def_property("bUseWeaponMelee", [](UWeaponPartDefinition &self){return self.bUseWeaponMelee;}, [](UWeaponPartDefinition &self, bool value){self.bUseWeaponMelee = value ? 1 : 0;})
		.def_property("bScoped", [](UWeaponPartDefinition &self){return self.bScoped;}, [](UWeaponPartDefinition &self, bool value){self.bScoped = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorProvider", &UWeaponPartDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("TitleList", &UWeaponPartDefinition::TitleList, py::return_value_policy::reference)
		.def_readwrite("PrefixList", &UWeaponPartDefinition::PrefixList, py::return_value_policy::reference)
		.def_readwrite("CustomDamageTypeDefinition", &UWeaponPartDefinition::CustomDamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("CustomFiringModeDefinition", &UWeaponPartDefinition::CustomFiringModeDefinition, py::return_value_policy::reference)
		.def_readwrite("ExternalAttributeEffects", &UWeaponPartDefinition::ExternalAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("WeaponAttributeEffects", &UWeaponPartDefinition::WeaponAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("ZoomExternalAttributeEffects", &UWeaponPartDefinition::ZoomExternalAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("ZoomWeaponAttributeEffects", &UWeaponPartDefinition::ZoomWeaponAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("WeaponCardAttributes", &UWeaponPartDefinition::WeaponCardAttributes, py::return_value_policy::reference)
		.def_readwrite("CustomPresentations", &UWeaponPartDefinition::CustomPresentations, py::return_value_policy::reference)
		.def_readwrite("PartType", &UWeaponPartDefinition::PartType)
		.def_readwrite("PartVariation", &UWeaponPartDefinition::PartVariation)
		.def_readwrite("NumPhysicalBarrelsToFireFrom", &UWeaponPartDefinition::NumPhysicalBarrelsToFireFrom)
		.def_readwrite("BoneControllers", &UWeaponPartDefinition::BoneControllers, py::return_value_policy::reference)
		.def_readwrite("VisibleAmmoBoneNames", &UWeaponPartDefinition::VisibleAmmoBoneNames, py::return_value_policy::reference)
		.def_readwrite("LeftHandIKHoldName", &UWeaponPartDefinition::LeftHandIKHoldName, py::return_value_policy::reference)
		.def_readwrite("SpinUpDuration", &UWeaponPartDefinition::SpinUpDuration, py::return_value_policy::reference)
		.def_readwrite("SpinDownDuration", &UWeaponPartDefinition::SpinDownDuration, py::return_value_policy::reference)
		.def_readwrite("StartingSpinUpFireIntervalMultiplier", &UWeaponPartDefinition::StartingSpinUpFireIntervalMultiplier)
		.def_readwrite("FlapsExpandDuration", &UWeaponPartDefinition::FlapsExpandDuration, py::return_value_policy::reference)
		.def_readwrite("FlapsCollapseDuration", &UWeaponPartDefinition::FlapsCollapseDuration, py::return_value_policy::reference)
		.def_readwrite("ShellCasingPSCTemplate", &UWeaponPartDefinition::ShellCasingPSCTemplate, py::return_value_policy::reference)
		.def_readwrite("ShellCasingSocket", &UWeaponPartDefinition::ShellCasingSocket, py::return_value_policy::reference)
		.def_readwrite("ScopedShellCasingOffset", &UWeaponPartDefinition::ScopedShellCasingOffset, py::return_value_policy::reference)
		.def_readwrite("OffHandShellCasingRotOffset", &UWeaponPartDefinition::OffHandShellCasingRotOffset, py::return_value_policy::reference)
		.def_readwrite("MuzzleFlashPSTemplates", &UWeaponPartDefinition::MuzzleFlashPSTemplates, py::return_value_policy::reference)
		.def_readwrite("AltMuzzleFlashSockets", &UWeaponPartDefinition::AltMuzzleFlashSockets, py::return_value_policy::reference)
		.def_readwrite("WeaponImpact", &UWeaponPartDefinition::WeaponImpact, py::return_value_policy::reference)
		.def_readwrite("FirstPersonParticle", &UWeaponPartDefinition::FirstPersonParticle, py::return_value_policy::reference)
		.def_readwrite("FirstPersonParticleSocketName", &UWeaponPartDefinition::FirstPersonParticleSocketName, py::return_value_policy::reference)
		.def_readwrite("FirstPersonParticleInstanceDataName", &UWeaponPartDefinition::FirstPersonParticleInstanceDataName, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UWeaponPartDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def_readwrite("ManufacturerDefinitionForScopeMovie", &UWeaponPartDefinition::ManufacturerDefinitionForScopeMovie, py::return_value_policy::reference)
		.def_readwrite("ZoomedFOVLerpPct", &UWeaponPartDefinition::ZoomedFOVLerpPct)
		.def_readwrite("SightFXCrosshairMaterial", &UWeaponPartDefinition::SightFXCrosshairMaterial, py::return_value_policy::reference)
		.def_readwrite("SightFXCrosshairParamName", &UWeaponPartDefinition::SightFXCrosshairParamName, py::return_value_policy::reference)
		.def_readwrite("SightFXCrosshairRefractionParamName", &UWeaponPartDefinition::SightFXCrosshairRefractionParamName, py::return_value_policy::reference)
		.def("OnAbortReload", &UWeaponPartDefinition::OnAbortReload)
		.def("OnZoomOut", &UWeaponPartDefinition::OnZoomOut)
		.def("OnZoomIn", &UWeaponPartDefinition::OnZoomIn)
		.def("OnUnequip", &UWeaponPartDefinition::OnUnequip)
		.def("OnEquip", &UWeaponPartDefinition::OnEquip)
		.def("OnCreate", &UWeaponPartDefinition::OnCreate)
		.def("SetBehaviorProviderDefinition", &UWeaponPartDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UWeaponPartDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UWeaponNamePartDefinition, UWeaponPartDefinition >(m, "UWeaponNamePartDefinition")
		.def_property("bNameIsUnique", [](UWeaponNamePartDefinition &self){return self.bNameIsUnique;}, [](UWeaponNamePartDefinition &self, bool value){self.bNameIsUnique = value ? 1 : 0;})
		.def_readwrite("PartName", &UWeaponNamePartDefinition::PartName, py::return_value_policy::reference)
		.def_readwrite("Expressions", &UWeaponNamePartDefinition::Expressions, py::return_value_policy::reference)
		.def_readwrite("MinExpLevelRequirement", &UWeaponNamePartDefinition::MinExpLevelRequirement)
		.def_readwrite("MaxExpLevelRequirement", &UWeaponNamePartDefinition::MaxExpLevelRequirement)
		.def_readwrite("Priority", &UWeaponNamePartDefinition::Priority)
		;
	py::class_< UWeaponPartListDefinition, UGBXDefinition >(m, "UWeaponPartListDefinition")
		.def_readwrite("VfTable_IIConstructObject", &UWeaponPartListDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("WeightedParts", &UWeaponPartListDefinition::WeightedParts, py::return_value_policy::reference)
		.def_readwrite("ConsolidatedAttributeInitData", &UWeaponPartListDefinition::ConsolidatedAttributeInitData, py::return_value_policy::reference)
		;
	py::class_< UWeaponTypeAttributeValueResolver, UAttributeValueResolver >(m, "UWeaponTypeAttributeValueResolver")
		.def_readwrite("ValueIfNotMatched", &UWeaponTypeAttributeValueResolver::ValueIfNotMatched, py::return_value_policy::reference)
		.def_readwrite("WeaponTypes", &UWeaponTypeAttributeValueResolver::WeaponTypes, py::return_value_policy::reference)
		;
	py::class_< UWeaponTypeDefinition, UWillowInventoryDefinition >(m, "UWeaponTypeDefinition")
		.def_property("bUseOverheatBehavior", [](UWeaponTypeDefinition &self){return self.bUseOverheatBehavior;}, [](UWeaponTypeDefinition &self, bool value){self.bUseOverheatBehavior = value ? 1 : 0;})
		.def_property("bRemoveBaseAccuracyFromRecoilScale", [](UWeaponTypeDefinition &self){return self.bRemoveBaseAccuracyFromRecoilScale;}, [](UWeaponTypeDefinition &self, bool value){self.bRemoveBaseAccuracyFromRecoilScale = value ? 1 : 0;})
		.def_property("AltFireRespectsPrimaryFireInterval", [](UWeaponTypeDefinition &self){return self.AltFireRespectsPrimaryFireInterval;}, [](UWeaponTypeDefinition &self, bool value){self.AltFireRespectsPrimaryFireInterval = value ? 1 : 0;})
		.def_property("bAlternativeKickEnabled", [](UWeaponTypeDefinition &self){return self.bAlternativeKickEnabled;}, [](UWeaponTypeDefinition &self, bool value){self.bAlternativeKickEnabled = value ? 1 : 0;})
		.def_property("bMuzzleFlashPSCLoops", [](UWeaponTypeDefinition &self){return self.bMuzzleFlashPSCLoops;}, [](UWeaponTypeDefinition &self, bool value){self.bMuzzleFlashPSCLoops = value ? 1 : 0;})
		.def_property("bTypeNameIsFullName", [](UWeaponTypeDefinition &self){return self.bTypeNameIsFullName;}, [](UWeaponTypeDefinition &self, bool value){self.bTypeNameIsFullName = value ? 1 : 0;})
		.def_property("bDisableReloadMessages", [](UWeaponTypeDefinition &self){return self.bDisableReloadMessages;}, [](UWeaponTypeDefinition &self, bool value){self.bDisableReloadMessages = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorProvider", &UWeaponTypeDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIConstructObject", &UWeaponTypeDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("WeaponType", &UWeaponTypeDefinition::WeaponType)
		.def_readwrite("BarrelSpinMode", &UWeaponTypeDefinition::BarrelSpinMode)
		.def_readwrite("InventoryGroup", &UWeaponTypeDefinition::InventoryGroup)
		.def_readwrite("WeaponLockType", &UWeaponTypeDefinition::WeaponLockType)
		.def_readwrite("ScaleformFrameName", &UWeaponTypeDefinition::ScaleformFrameName, py::return_value_policy::reference)
		.def_readwrite("ScaleformDLCClip", &UWeaponTypeDefinition::ScaleformDLCClip, py::return_value_policy::reference)
		.def_readwrite("AmmoResource", &UWeaponTypeDefinition::AmmoResource, py::return_value_policy::reference)
		.def_readwrite("StartingAmmoCount", &UWeaponTypeDefinition::StartingAmmoCount)
		.def_readwrite("MaxStoredAmmo", &UWeaponTypeDefinition::MaxStoredAmmo)
		.def_readwrite("ShotCost", &UWeaponTypeDefinition::ShotCost)
		.def_readwrite("ClipSize", &UWeaponTypeDefinition::ClipSize)
		.def_readwrite("AmmoRegenerationRate", &UWeaponTypeDefinition::AmmoRegenerationRate)
		.def_readwrite("RegenRate", &UWeaponTypeDefinition::RegenRate)
		.def_readwrite("OverheatRegenDelay", &UWeaponTypeDefinition::OverheatRegenDelay)
		.def_readwrite("FireRegenDelay", &UWeaponTypeDefinition::FireRegenDelay)
		.def_readwrite("InstantHitDamage", &UWeaponTypeDefinition::InstantHitDamage, py::return_value_policy::reference)
		.def_readwrite("InstantHitDamageType", &UWeaponTypeDefinition::InstantHitDamageType, py::return_value_policy::reference)
		.def_readwrite("DefaultDamageTypeDefinition", &UWeaponTypeDefinition::DefaultDamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("InstantHitMomentum", &UWeaponTypeDefinition::InstantHitMomentum, py::return_value_policy::reference)
		.def_readwrite("ProjectilesPerShot", &UWeaponTypeDefinition::ProjectilesPerShot)
		.def_readwrite("MeleeDamage", &UWeaponTypeDefinition::MeleeDamage, py::return_value_policy::reference)
		.def_readwrite("NormalizedInstantHitDamage", &UWeaponTypeDefinition::NormalizedInstantHitDamage, py::return_value_policy::reference)
		.def_readwrite("NormalizedMeleeDamage", &UWeaponTypeDefinition::NormalizedMeleeDamage, py::return_value_policy::reference)
		.def_readwrite("BaseStatusEffectChanceModifier", &UWeaponTypeDefinition::BaseStatusEffectChanceModifier, py::return_value_policy::reference)
		.def_readwrite("StatusEffectDamage", &UWeaponTypeDefinition::StatusEffectDamage, py::return_value_policy::reference)
		.def_readwrite("Spread", &UWeaponTypeDefinition::Spread)
		.def_readwrite("PerShotAccuracyImpulse", &UWeaponTypeDefinition::PerShotAccuracyImpulse)
		.def_readwrite("BodyWeaponHoldName", &UWeaponTypeDefinition::BodyWeaponHoldName, py::return_value_policy::reference)
		.def_readwrite("WeaponAnimSet", &UWeaponTypeDefinition::WeaponAnimSet, py::return_value_policy::reference)
		.def_readwrite("WeaponAnimTree", &UWeaponTypeDefinition::WeaponAnimTree, py::return_value_policy::reference)
		.def_readwrite("WeaponIdleAnimations", &UWeaponTypeDefinition::WeaponIdleAnimations, py::return_value_policy::reference)
		.def_readwrite("WeaponFireAnimations", &UWeaponTypeDefinition::WeaponFireAnimations, py::return_value_policy::reference)
		.def_readwrite("WeaponReloadAnimations", &UWeaponTypeDefinition::WeaponReloadAnimations, py::return_value_policy::reference)
		.def_readwrite("WeaponEquipAnimations", &UWeaponTypeDefinition::WeaponEquipAnimations, py::return_value_policy::reference)
		.def_readwrite("WeaponPutDownAnimations", &UWeaponTypeDefinition::WeaponPutDownAnimations, py::return_value_policy::reference)
		.def_readwrite("AnimNodeSlotName", &UWeaponTypeDefinition::AnimNodeSlotName, py::return_value_policy::reference)
		.def_readwrite("OffHandAnimNodeSlotName", &UWeaponTypeDefinition::OffHandAnimNodeSlotName, py::return_value_policy::reference)
		.def_readwrite("WeaponGrabAnimation", &UWeaponTypeDefinition::WeaponGrabAnimation, py::return_value_policy::reference)
		.def_readwrite("MinFireAnimDuration", &UWeaponTypeDefinition::MinFireAnimDuration)
		.def_readwrite("AnimThresholdValues", &UWeaponTypeDefinition::AnimThresholdValues, py::return_value_policy::reference)
		.def_readwrite("RecoilAnimScaleCurve", &UWeaponTypeDefinition::RecoilAnimScaleCurve, py::return_value_policy::reference)
		.def_readwrite("ZoomedRecoilAnimScale", &UWeaponTypeDefinition::ZoomedRecoilAnimScale)
		.def_readwrite("DefaultFiringModeDefinition", &UWeaponTypeDefinition::DefaultFiringModeDefinition, py::return_value_policy::reference)
		.def_readwrite("Range", &UWeaponTypeDefinition::Range)
		.def_readwrite("FireRate", &UWeaponTypeDefinition::FireRate)
		.def_readwrite("FireOffset", &UWeaponTypeDefinition::FireOffset, py::return_value_policy::reference)
		.def_readwrite("FiringForceFeedback", &UWeaponTypeDefinition::FiringForceFeedback, py::return_value_policy::reference)
		.def_readwrite("ProjectileBaseValues", &UWeaponTypeDefinition::ProjectileBaseValues, py::return_value_policy::reference)
		.def_readwrite("ExtraShotDelay", &UWeaponTypeDefinition::ExtraShotDelay, py::return_value_policy::reference)
		.def_readwrite("ShortFireIntervalModPower", &UWeaponTypeDefinition::ShortFireIntervalModPower)
		.def_readwrite("LongFireIntervalModPower", &UWeaponTypeDefinition::LongFireIntervalModPower)
		.def_readwrite("BurstInterval", &UWeaponTypeDefinition::BurstInterval)
		.def_readwrite("AutomaticBurstCount", &UWeaponTypeDefinition::AutomaticBurstCount)
		.def_readwrite("BurstShotAccuracyImpulseScale", &UWeaponTypeDefinition::BurstShotAccuracyImpulseScale)
		.def_readwrite("ReloadTime", &UWeaponTypeDefinition::ReloadTime)
		.def_readwrite("ReloadCompletePercent", &UWeaponTypeDefinition::ReloadCompletePercent)
		.def_readwrite("ReloadDOFKernelSize", &UWeaponTypeDefinition::ReloadDOFKernelSize)
		.def_readwrite("ReloadDOFZoomRate", &UWeaponTypeDefinition::ReloadDOFZoomRate)
		.def_readwrite("ReloadDOFInnerRadius", &UWeaponTypeDefinition::ReloadDOFInnerRadius)
		.def_readwrite("ReloadDOFFocusDistance", &UWeaponTypeDefinition::ReloadDOFFocusDistance)
		.def_readwrite("EquipTime", &UWeaponTypeDefinition::EquipTime)
		.def_readwrite("PutDownTime", &UWeaponTypeDefinition::PutDownTime)
		.def_readwrite("GrabEquipTime", &UWeaponTypeDefinition::GrabEquipTime)
		.def_readwrite("LeadingSpeed", &UWeaponTypeDefinition::LeadingSpeed)
		.def_readwrite("ViewModelLeadPivotName", &UWeaponTypeDefinition::ViewModelLeadPivotName, py::return_value_policy::reference)
		.def_readwrite("ViewModelRotationOriginOffset", &UWeaponTypeDefinition::ViewModelRotationOriginOffset, py::return_value_policy::reference)
		.def_readwrite("ViewModelRotationAmt", &UWeaponTypeDefinition::ViewModelRotationAmt)
		.def_readwrite("ViewModelTranslationAmt", &UWeaponTypeDefinition::ViewModelTranslationAmt)
		.def_readwrite("LeadingZoomedScale", &UWeaponTypeDefinition::LeadingZoomedScale)
		.def_readwrite("ZoomedEndFOV", &UWeaponTypeDefinition::ZoomedEndFOV)
		.def_readwrite("ZoomedRate", &UWeaponTypeDefinition::ZoomedRate)
		.def_readwrite("BobDamping", &UWeaponTypeDefinition::BobDamping)
		.def_readwrite("MaxPitchLead", &UWeaponTypeDefinition::MaxPitchLead)
		.def_readwrite("MaxYawLead", &UWeaponTypeDefinition::MaxYawLead)
		.def_readwrite("PlayerViewOffset", &UWeaponTypeDefinition::PlayerViewOffset, py::return_value_policy::reference)
		.def_readwrite("FirstPersonMeshFOV", &UWeaponTypeDefinition::FirstPersonMeshFOV)
		.def_readwrite("ZoomSocketPreferred", &UWeaponTypeDefinition::ZoomSocketPreferred, py::return_value_policy::reference)
		.def_readwrite("ZoomSocketFallback", &UWeaponTypeDefinition::ZoomSocketFallback, py::return_value_policy::reference)
		.def_readwrite("FrontScopeSocket", &UWeaponTypeDefinition::FrontScopeSocket, py::return_value_policy::reference)
		.def_readwrite("FrontSightSocket", &UWeaponTypeDefinition::FrontSightSocket, py::return_value_policy::reference)
		.def_readwrite("RearSightSocket", &UWeaponTypeDefinition::RearSightSocket, py::return_value_policy::reference)
		.def_readwrite("ZoomTime", &UWeaponTypeDefinition::ZoomTime)
		.def_readwrite("FractalWanderSpeed", &UWeaponTypeDefinition::FractalWanderSpeed)
		.def_readwrite("FractalWanderLacunarity", &UWeaponTypeDefinition::FractalWanderLacunarity)
		.def_readwrite("FractalWanderPersistence", &UWeaponTypeDefinition::FractalWanderPersistence)
		.def_readwrite("FractalWanderDiscWidth", &UWeaponTypeDefinition::FractalWanderDiscWidth)
		.def_readwrite("FractalWanderDiscHeight", &UWeaponTypeDefinition::FractalWanderDiscHeight)
		.def_readwrite("ZoomWanderSmoothingSpeed", &UWeaponTypeDefinition::ZoomWanderSmoothingSpeed)
		.def_readwrite("ZoomWanderSmoothInTime_OnZoom", &UWeaponTypeDefinition::ZoomWanderSmoothInTime_OnZoom)
		.def_readwrite("ZoomWanderSmoothInTime_OnFire", &UWeaponTypeDefinition::ZoomWanderSmoothInTime_OnFire)
		.def_readwrite("ScopedMuzzleFlashOffset", &UWeaponTypeDefinition::ScopedMuzzleFlashOffset, py::return_value_policy::reference)
		.def_readwrite("BoneToHideOnMesh", &UWeaponTypeDefinition::BoneToHideOnMesh, py::return_value_policy::reference)
		.def_readwrite("AdditionalBoneToHideOnMesh", &UWeaponTypeDefinition::AdditionalBoneToHideOnMesh, py::return_value_policy::reference)
		.def_readwrite("WeaponKickSpeed", &UWeaponTypeDefinition::WeaponKickSpeed)
		.def_readwrite("WeaponKickRecoveryTime", &UWeaponTypeDefinition::WeaponKickRecoveryTime)
		.def_readwrite("WeaponKickZoomMultiplier", &UWeaponTypeDefinition::WeaponKickZoomMultiplier)
		.def_readwrite("WeaponKickUp", &UWeaponTypeDefinition::WeaponKickUp)
		.def_readwrite("WeaponKickDown", &UWeaponTypeDefinition::WeaponKickDown)
		.def_readwrite("MinimumVerticalPercentage", &UWeaponTypeDefinition::MinimumVerticalPercentage)
		.def_readwrite("WeaponKickLeft", &UWeaponTypeDefinition::WeaponKickLeft)
		.def_readwrite("WeaponKickRight", &UWeaponTypeDefinition::WeaponKickRight)
		.def_readwrite("MinimumHorizontalPercentage", &UWeaponTypeDefinition::MinimumHorizontalPercentage)
		.def_readwrite("AlternativeWeaponKick", &UWeaponTypeDefinition::AlternativeWeaponKick, py::return_value_policy::reference)
		.def_readwrite("DOFKernelSize", &UWeaponTypeDefinition::DOFKernelSize)
		.def_readwrite("DOFZoomRate", &UWeaponTypeDefinition::DOFZoomRate)
		.def_readwrite("DOFInnerRadius", &UWeaponTypeDefinition::DOFInnerRadius)
		.def_readwrite("EffectSocket", &UWeaponTypeDefinition::EffectSocket, py::return_value_policy::reference)
		.def_readwrite("MuzzleFlashDuration", &UWeaponTypeDefinition::MuzzleFlashDuration)
		.def_readwrite("MuzzleFlashPSTemplates", &UWeaponTypeDefinition::MuzzleFlashPSTemplates, py::return_value_policy::reference)
		.def_readwrite("MuzzleFlashLightTemplate", &UWeaponTypeDefinition::MuzzleFlashLightTemplate, py::return_value_policy::reference)
		.def_readwrite("MuzzleFlashSocket", &UWeaponTypeDefinition::MuzzleFlashSocket, py::return_value_policy::reference)
		.def_readwrite("FireShake", &UWeaponTypeDefinition::FireShake, py::return_value_policy::reference)
		.def_readwrite("MeleeCameraAnim", &UWeaponTypeDefinition::MeleeCameraAnim, py::return_value_policy::reference)
		.def_readwrite("TracerTemplate", &UWeaponTypeDefinition::TracerTemplate, py::return_value_policy::reference)
		.def_readwrite("TracerColor", &UWeaponTypeDefinition::TracerColor, py::return_value_policy::reference)
		.def_readwrite("TracerColorParameterName", &UWeaponTypeDefinition::TracerColorParameterName, py::return_value_policy::reference)
		.def_readwrite("DroppedImpact", &UWeaponTypeDefinition::DroppedImpact, py::return_value_policy::reference)
		.def_readwrite("ShellCasingPSCTemplate", &UWeaponTypeDefinition::ShellCasingPSCTemplate, py::return_value_policy::reference)
		.def_readwrite("ShellCasingSocket", &UWeaponTypeDefinition::ShellCasingSocket, py::return_value_policy::reference)
		.def_readwrite("ScopedShellCasingOffset", &UWeaponTypeDefinition::ScopedShellCasingOffset, py::return_value_policy::reference)
		.def_readwrite("OffHandShellCasingRotOffset", &UWeaponTypeDefinition::OffHandShellCasingRotOffset, py::return_value_policy::reference)
		.def_readwrite("GlowScaleMaterialParamName", &UWeaponTypeDefinition::GlowScaleMaterialParamName, py::return_value_policy::reference)
		.def_readwrite("MaxGlowImpulseScale", &UWeaponTypeDefinition::MaxGlowImpulseScale)
		.def_readwrite("GlowImpulseDecayDelay", &UWeaponTypeDefinition::GlowImpulseDecayDelay)
		.def_readwrite("GlowImpulseDecayRate", &UWeaponTypeDefinition::GlowImpulseDecayRate)
		.def_readwrite("FiringGlowImpulse", &UWeaponTypeDefinition::FiringGlowImpulse)
		.def_readwrite("InventoryWeight", &UWeaponTypeDefinition::InventoryWeight)
		.def_readwrite("FireSounds", &UWeaponTypeDefinition::FireSounds, py::return_value_policy::reference)
		.def_readwrite("FireTailSounds", &UWeaponTypeDefinition::FireTailSounds, py::return_value_policy::reference)
		.def_readwrite("EquipSounds", &UWeaponTypeDefinition::EquipSounds, py::return_value_policy::reference)
		.def_readwrite("PutDownSounds", &UWeaponTypeDefinition::PutDownSounds, py::return_value_policy::reference)
		.def_readwrite("DryFireSounds", &UWeaponTypeDefinition::DryFireSounds, py::return_value_policy::reference)
		.def_readwrite("BarrelStartSpinningUpSounds", &UWeaponTypeDefinition::BarrelStartSpinningUpSounds, py::return_value_policy::reference)
		.def_readwrite("BarrelStopSpinningUpSounds", &UWeaponTypeDefinition::BarrelStopSpinningUpSounds, py::return_value_policy::reference)
		.def_readwrite("BarrelFullySpunUpSounds", &UWeaponTypeDefinition::BarrelFullySpunUpSounds, py::return_value_policy::reference)
		.def_readwrite("MagazineStartSpinningUpSounds", &UWeaponTypeDefinition::MagazineStartSpinningUpSounds, py::return_value_policy::reference)
		.def_readwrite("MagazineStopSpinningUpSounds", &UWeaponTypeDefinition::MagazineStopSpinningUpSounds, py::return_value_policy::reference)
		.def_readwrite("MagazineFullySpunUpSounds", &UWeaponTypeDefinition::MagazineFullySpunUpSounds, py::return_value_policy::reference)
		.def_readwrite("LockRequiredTime", &UWeaponTypeDefinition::LockRequiredTime)
		.def_readwrite("LockCoolDownTime", &UWeaponTypeDefinition::LockCoolDownTime)
		.def_readwrite("LockRequiredDotProduct", &UWeaponTypeDefinition::LockRequiredDotProduct)
		.def_readwrite("LockAttemptStartedAkEvent", &UWeaponTypeDefinition::LockAttemptStartedAkEvent, py::return_value_policy::reference)
		.def_readwrite("LockAcquiredAkEvent", &UWeaponTypeDefinition::LockAcquiredAkEvent, py::return_value_policy::reference)
		.def_readwrite("LockLostAkEvent", &UWeaponTypeDefinition::LockLostAkEvent, py::return_value_policy::reference)
		.def_readwrite("AIAimError", &UWeaponTypeDefinition::AIAimError)
		.def_readwrite("AIBurstCount", &UWeaponTypeDefinition::AIBurstCount, py::return_value_policy::reference)
		.def_readwrite("AIBurstDelay", &UWeaponTypeDefinition::AIBurstDelay, py::return_value_policy::reference)
		.def_readwrite("Typename", &UWeaponTypeDefinition::Typename, py::return_value_policy::reference)
		.def_readwrite("TitleList", &UWeaponTypeDefinition::TitleList, py::return_value_policy::reference)
		.def_readwrite("PrefixList", &UWeaponTypeDefinition::PrefixList, py::return_value_policy::reference)
		.def_readwrite("ExternalAttributeEffects", &UWeaponTypeDefinition::ExternalAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("WeaponAttributeEffects", &UWeaponTypeDefinition::WeaponAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("ZoomExternalAttributeEffects", &UWeaponTypeDefinition::ZoomExternalAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("ZoomWeaponAttributeEffects", &UWeaponTypeDefinition::ZoomWeaponAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("WeaponCardAttributes", &UWeaponTypeDefinition::WeaponCardAttributes, py::return_value_policy::reference)
		.def_readwrite("CustomPresentations", &UWeaponTypeDefinition::CustomPresentations, py::return_value_policy::reference)
		.def_readwrite("GestaltMesh", &UWeaponTypeDefinition::GestaltMesh, py::return_value_policy::reference)
		.def_readwrite("AttachmentData", &UWeaponTypeDefinition::AttachmentData, py::return_value_policy::reference)
		.def_readwrite("BodyParts", &UWeaponTypeDefinition::BodyParts, py::return_value_policy::reference)
		.def_readwrite("GripParts", &UWeaponTypeDefinition::GripParts, py::return_value_policy::reference)
		.def_readwrite("BarrelParts", &UWeaponTypeDefinition::BarrelParts, py::return_value_policy::reference)
		.def_readwrite("SightParts", &UWeaponTypeDefinition::SightParts, py::return_value_policy::reference)
		.def_readwrite("StockParts", &UWeaponTypeDefinition::StockParts, py::return_value_policy::reference)
		.def_readwrite("ElementalParts", &UWeaponTypeDefinition::ElementalParts, py::return_value_policy::reference)
		.def_readwrite("Accessory1Parts", &UWeaponTypeDefinition::Accessory1Parts, py::return_value_policy::reference)
		.def_readwrite("Accessory2Parts", &UWeaponTypeDefinition::Accessory2Parts, py::return_value_policy::reference)
		.def_readwrite("MaterialParts", &UWeaponTypeDefinition::MaterialParts, py::return_value_policy::reference)
		.def_readwrite("WeaponImpact", &UWeaponTypeDefinition::WeaponImpact, py::return_value_policy::reference)
		.def_readwrite("CrosshairFrame", &UWeaponTypeDefinition::CrosshairFrame, py::return_value_policy::reference)
		.def_readwrite("MaxDistSqr", &UWeaponTypeDefinition::MaxDistSqr)
		.def_readwrite("MaxAngleCos", &UWeaponTypeDefinition::MaxAngleCos)
		.def_readwrite("BonusToCurrentTargetScore", &UWeaponTypeDefinition::BonusToCurrentTargetScore)
		.def_readwrite("UpdateRate", &UWeaponTypeDefinition::UpdateRate)
		.def_readwrite("MaintainTargetTime", &UWeaponTypeDefinition::MaintainTargetTime)
		.def_readwrite("VantageTagNames", &UWeaponTypeDefinition::VantageTagNames, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UWeaponTypeDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def("OnProjectileFired", &UWeaponTypeDefinition::OnProjectileFired)
		.def("OnTargetLockAcquired", &UWeaponTypeDefinition::OnTargetLockAcquired)
		.def("OnAltFireTriggered", &UWeaponTypeDefinition::OnAltFireTriggered)
		.def("OnZoomOut", &UWeaponTypeDefinition::OnZoomOut)
		.def("OnZoomIn", &UWeaponTypeDefinition::OnZoomIn)
		.def("OnUnequip", &UWeaponTypeDefinition::OnUnequip)
		.def("OnEquip", &UWeaponTypeDefinition::OnEquip)
		.def("OnCreate", &UWeaponTypeDefinition::OnCreate)
		.def("GetWeaponTypeName", &UWeaponTypeDefinition::GetWeaponTypeName, py::return_value_policy::reference)
		.def("GetHolsteredGearLikenessType", &UWeaponTypeDefinition::GetHolsteredGearLikenessType)
		.def("GetHolsteredWeaponSizeType", &UWeaponTypeDefinition::GetHolsteredWeaponSizeType)
		.def("SetBehaviorProviderDefinition", &UWeaponTypeDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UWeaponTypeDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UWillowAIMoveNodePathComponent, UPrimitiveComponent >(m, "UWillowAIMoveNodePathComponent")
		;
	py::class_< UWillowAkComponent, UAkComponent >(m, "UWillowAkComponent")
		.def_readwrite("DistanceRTPCRefCount", &UWillowAkComponent::DistanceRTPCRefCount)
		.def_readwrite("SpeedRTPCRefCount", &UWillowAkComponent::SpeedRTPCRefCount)
		.def_readwrite("ApproachSpeedRTPCRefCount", &UWillowAkComponent::ApproachSpeedRTPCRefCount)
		.def_readwrite("CustomVelocity", &UWillowAkComponent::CustomVelocity, py::return_value_policy::reference)
		;
	py::class_< UWillowAnimDefinition, UGearboxAnimDefinition >(m, "UWillowAnimDefinition")
		.def_property("bAllowLeftHandIK", [](UWillowAnimDefinition &self){return self.bAllowLeftHandIK;}, [](UWillowAnimDefinition &self, bool value){self.bAllowLeftHandIK = value ? 1 : 0;})
		.def_property("bStopAI", [](UWillowAnimDefinition &self){return self.bStopAI;}, [](UWillowAnimDefinition &self, bool value){self.bStopAI = value ? 1 : 0;})
		.def_property("bStopMovement", [](UWillowAnimDefinition &self){return self.bStopMovement;}, [](UWillowAnimDefinition &self, bool value){self.bStopMovement = value ? 1 : 0;})
		.def_property("bStopHeadLook", [](UWillowAnimDefinition &self){return self.bStopHeadLook;}, [](UWillowAnimDefinition &self, bool value){self.bStopHeadLook = value ? 1 : 0;})
		.def_readwrite("InstanceDataName", &UWillowAnimDefinition::InstanceDataName, py::return_value_policy::reference)
		.def("GetSMNode", &UWillowAnimDefinition::GetSMNode, py::return_value_policy::reference)
		.def("eventClientFinished", &UWillowAnimDefinition::eventClientFinished)
		.def("eventClientStarted", &UWillowAnimDefinition::eventClientStarted)
		.def("eventServerFinished", &UWillowAnimDefinition::eventServerFinished)
		.def("eventServerStarted", &UWillowAnimDefinition::eventServerStarted)
		.def("eventAuthorityCanPlay", &UWillowAnimDefinition::eventAuthorityCanPlay)
		;
	py::class_< USpecialMove_Cringe, UWillowAnimDefinition >(m, "USpecialMove_Cringe")
		.def_readwrite("CringeAnim", &USpecialMove_Cringe::CringeAnim, py::return_value_policy::reference)
		.def_readwrite("CringeTime", &USpecialMove_Cringe::CringeTime)
		.def("PlayAnim", &USpecialMove_Cringe::PlayAnim)
		;
	py::class_< USpecialMove_Motion, UWillowAnimDefinition >(m, "USpecialMove_Motion")
		;
	py::class_< USpecialMove_Cloak, USpecialMove_Motion >(m, "USpecialMove_Cloak")
		.def_property("bCloak", [](USpecialMove_Cloak &self){return self.bCloak;}, [](USpecialMove_Cloak &self, bool value){self.bCloak = value ? 1 : 0;})
		.def_property("bSetAtStart", [](USpecialMove_Cloak &self){return self.bSetAtStart;}, [](USpecialMove_Cloak &self, bool value){self.bSetAtStart = value ? 1 : 0;})
		.def("eventClientFinished", &USpecialMove_Cloak::eventClientFinished)
		.def("eventClientStarted", &USpecialMove_Cloak::eventClientStarted)
		;
	py::class_< USpecialMove_Dodge, USpecialMove_Motion >(m, "USpecialMove_Dodge")
		;
	py::class_< USpecialMove_PhysicsJump, USpecialMove_Motion >(m, "USpecialMove_PhysicsJump")
		.def_property("bInvalidateLandingSpotForCombat", [](USpecialMove_PhysicsJump &self){return self.bInvalidateLandingSpotForCombat;}, [](USpecialMove_PhysicsJump &self, bool value){self.bInvalidateLandingSpotForCombat = value ? 1 : 0;})
		.def_readwrite("AnimIdle", &USpecialMove_PhysicsJump::AnimIdle, py::return_value_policy::reference)
		.def_readwrite("AnimLand", &USpecialMove_PhysicsJump::AnimLand, py::return_value_policy::reference)
		.def_readwrite("BodyTag", &USpecialMove_PhysicsJump::BodyTag, py::return_value_policy::reference)
		.def("PlayLand", &USpecialMove_PhysicsJump::PlayLand)
		.def("PlayIdle", &USpecialMove_PhysicsJump::PlayIdle)
		.def("GetIdleLength", &USpecialMove_PhysicsJump::GetIdleLength)
		.def("NextEdgeIsJump", &USpecialMove_PhysicsJump::NextEdgeIsJump)
		.def("GetJumpIndex", &USpecialMove_PhysicsJump::GetJumpIndex)
		.def("eventAnimFinished", &USpecialMove_PhysicsJump::eventAnimFinished)
		.def("eventClientFinished", &USpecialMove_PhysicsJump::eventClientFinished)
		.def("eventClientStarted", &USpecialMove_PhysicsJump::eventClientStarted)
		.def("eventServerFinished", &USpecialMove_PhysicsJump::eventServerFinished)
		.def("eventServerStarted", &USpecialMove_PhysicsJump::eventServerStarted)
		.def("OnStartLand", &USpecialMove_PhysicsJump::OnStartLand)
		.def("OnStartIdle", &USpecialMove_PhysicsJump::OnStartIdle)
		;
	py::class_< USpecialMove_Turn, USpecialMove_Motion >(m, "USpecialMove_Turn")
		;
	py::class_< USpecialMove_Perch, UWillowAnimDefinition >(m, "USpecialMove_Perch")
		;
	py::class_< USpecialMove_PerchLoop, UWillowAnimDefinition >(m, "USpecialMove_PerchLoop")
		;
	py::class_< USpecialMove_PerchRandomLoop, USpecialMove_PerchLoop >(m, "USpecialMove_PerchRandomLoop")
		.def_readwrite("RandomList", &USpecialMove_PerchRandomLoop::RandomList, py::return_value_policy::reference)
		.def("Contains", &USpecialMove_PerchRandomLoop::Contains)
		.def("GetSMDToPlay", &USpecialMove_PerchRandomLoop::GetSMDToPlay, py::return_value_policy::reference)
		;
	py::class_< USpecialMove_PhaseLock, UWillowAnimDefinition >(m, "USpecialMove_PhaseLock")
		.def("eventClientFinished", &USpecialMove_PhaseLock::eventClientFinished)
		.def("eventServerFinished", &USpecialMove_PhaseLock::eventServerFinished)
		.def("eventServerStarted", &USpecialMove_PhaseLock::eventServerStarted)
		.def("eventAuthorityCanPlay", &USpecialMove_PhaseLock::eventAuthorityCanPlay)
		;
	py::class_< USpecialMove_PopulationPoint, UWillowAnimDefinition >(m, "USpecialMove_PopulationPoint")
		;
	py::class_< USpecialMove_Spawned, UWillowAnimDefinition >(m, "USpecialMove_Spawned")
		.def_readwrite("StretchyStartTime", &USpecialMove_Spawned::StretchyStartTime)
		.def_readwrite("StretchyEndTime", &USpecialMove_Spawned::StretchyEndTime)
		.def("eventClientFinished", &USpecialMove_Spawned::eventClientFinished)
		.def("eventClientStarted", &USpecialMove_Spawned::eventClientStarted)
		.def("eventServerFinished", &USpecialMove_Spawned::eventServerFinished)
		.def("eventServerStarted", &USpecialMove_Spawned::eventServerStarted)
		;
	py::class_< USpecialMove_Vehicle, UWillowAnimDefinition >(m, "USpecialMove_Vehicle")
		.def_readwrite("TransitionType", &USpecialMove_Vehicle::TransitionType)
		.def_readwrite("CameraLerpKeyFrames", &USpecialMove_Vehicle::CameraLerpKeyFrames, py::return_value_policy::reference)
		.def("PlayAnim", &USpecialMove_Vehicle::PlayAnim)
		.def("eventAuthorityCanPlay", &USpecialMove_Vehicle::eventAuthorityCanPlay)
		;
	py::class_< UWillowAnimNode_Simple, UAnimNodeAdditiveBlending >(m, "UWillowAnimNode_Simple")
		.def_property("bAdditive", [](UWillowAnimNode_Simple &self){return self.bAdditive;}, [](UWillowAnimNode_Simple &self, bool value){self.bAdditive = value ? 1 : 0;})
		.def_property("bMirror", [](UWillowAnimNode_Simple &self){return self.bMirror;}, [](UWillowAnimNode_Simple &self, bool value){self.bMirror = value ? 1 : 0;})
		.def_property("bDominant", [](UWillowAnimNode_Simple &self){return self.bDominant;}, [](UWillowAnimNode_Simple &self, bool value){self.bDominant = value ? 1 : 0;})
		.def_readwrite("SimpleAnimName", &UWillowAnimNode_Simple::SimpleAnimName, py::return_value_policy::reference)
		.def_readwrite("BlendInTime", &UWillowAnimNode_Simple::BlendInTime)
		.def_readwrite("BlendOutTime", &UWillowAnimNode_Simple::BlendOutTime)
		.def_readwrite("PlayRate", &UWillowAnimNode_Simple::PlayRate)
		.def_readwrite("Style", &UWillowAnimNode_Simple::Style)
		.def_readwrite("MyTree", &UWillowAnimNode_Simple::MyTree, py::return_value_policy::reference)
		.def_readwrite("LinkTree", &UWillowAnimNode_Simple::LinkTree, py::return_value_policy::reference)
		.def_readwrite("LinkName", &UWillowAnimNode_Simple::LinkName, py::return_value_policy::reference)
		.def_readwrite("SeqNode", &UWillowAnimNode_Simple::SeqNode, py::return_value_policy::reference)
		.def_readwrite("CachedAnimPlayer", &UWillowAnimNode_Simple::CachedAnimPlayer, py::return_value_policy::reference)
		.def("SetBlendTarget", &UWillowAnimNode_Simple::SetBlendTarget)
		.def("PlayingSimpleAnim", &UWillowAnimNode_Simple::PlayingSimpleAnim)
		.def("GetSimpleAnimIndex", &UWillowAnimNode_Simple::GetSimpleAnimIndex)
		.def("StopSimpleAnim", &UWillowAnimNode_Simple::StopSimpleAnim)
		.def("PlaySimpleAnim", &UWillowAnimNode_Simple::PlaySimpleAnim)
		.def("UpdateSimpleAnims", &UWillowAnimNode_Simple::UpdateSimpleAnims)
		.def("UncacheSimpleAnims", &UWillowAnimNode_Simple::UncacheSimpleAnims)
		.def("CacheSimpleAnims", &UWillowAnimNode_Simple::CacheSimpleAnims)
		.def("Stop", &UWillowAnimNode_Simple::Stop)
		.def("Play", &UWillowAnimNode_Simple::Play)
		;
	py::class_< UWillowAnimTreeFactory, UFactory >(m, "UWillowAnimTreeFactory")
		;
	py::class_< UWillowAutoAimProfileDefinition, UGBXDefinition >(m, "UWillowAutoAimProfileDefinition")
		.def_readwrite("MagnetismMin", &UWillowAutoAimProfileDefinition::MagnetismMin)
		.def_readwrite("MagnetismMax", &UWillowAutoAimProfileDefinition::MagnetismMax)
		.def_readwrite("MaxRotationH", &UWillowAutoAimProfileDefinition::MaxRotationH)
		.def_readwrite("MaxRotationV", &UWillowAutoAimProfileDefinition::MaxRotationV)
		.def_readwrite("LockStrengthH", &UWillowAutoAimProfileDefinition::LockStrengthH)
		.def_readwrite("LockStrengthV", &UWillowAutoAimProfileDefinition::LockStrengthV)
		;
	py::class_< UWillowAutoAimStrategy, UObject >(m, "UWillowAutoAimStrategy")
		.def_property("bCanAcquireLock", [](UWillowAutoAimStrategy &self){return self.bCanAcquireLock;}, [](UWillowAutoAimStrategy &self, bool value){self.bCanAcquireLock = value ? 1 : 0;})
		.def_property("bAdjustOnMoveOnly", [](UWillowAutoAimStrategy &self){return self.bAdjustOnMoveOnly;}, [](UWillowAutoAimStrategy &self, bool value){self.bAdjustOnMoveOnly = value ? 1 : 0;})
		.def_property("bIsWithinWorldSpaceRadius_InstantaneousTarget", [](UWillowAutoAimStrategy &self){return self.bIsWithinWorldSpaceRadius_InstantaneousTarget;}, [](UWillowAutoAimStrategy &self, bool value){self.bIsWithinWorldSpaceRadius_InstantaneousTarget = value ? 1 : 0;})
		.def_property("bIsWithinWorldSpaceRadius_LockedTarget", [](UWillowAutoAimStrategy &self){return self.bIsWithinWorldSpaceRadius_LockedTarget;}, [](UWillowAutoAimStrategy &self, bool value){self.bIsWithinWorldSpaceRadius_LockedTarget = value ? 1 : 0;})
		.def_property("bComputedTargetLastFrame", [](UWillowAutoAimStrategy &self){return self.bComputedTargetLastFrame;}, [](UWillowAutoAimStrategy &self, bool value){self.bComputedTargetLastFrame = value ? 1 : 0;})
		.def_property("bSnappedToTarget", [](UWillowAutoAimStrategy &self){return self.bSnappedToTarget;}, [](UWillowAutoAimStrategy &self, bool value){self.bSnappedToTarget = value ? 1 : 0;})
		.def_property("bIgnoreCloakAbility", [](UWillowAutoAimStrategy &self){return self.bIgnoreCloakAbility;}, [](UWillowAutoAimStrategy &self, bool value){self.bIgnoreCloakAbility = value ? 1 : 0;})
		.def_readwrite("DataDefinition", &UWillowAutoAimStrategy::DataDefinition, py::return_value_policy::reference)
		.def_readwrite("CurrentFrame", &UWillowAutoAimStrategy::CurrentFrame)
		.def_readwrite("LastFrame", &UWillowAutoAimStrategy::LastFrame)
		.def_readwrite("SustainStartTime", &UWillowAutoAimStrategy::SustainStartTime)
		.def_readwrite("AcquireStartTime", &UWillowAutoAimStrategy::AcquireStartTime)
		.def_readwrite("InstantaneousTarget", &UWillowAutoAimStrategy::InstantaneousTarget, py::return_value_policy::reference)
		.def_readwrite("LastInstantaneousTarget", &UWillowAutoAimStrategy::LastInstantaneousTarget, py::return_value_policy::reference)
		.def_readwrite("LockedTarget", &UWillowAutoAimStrategy::LockedTarget, py::return_value_policy::reference)
		.def_readwrite("PrevProfile", &UWillowAutoAimStrategy::PrevProfile, py::return_value_policy::reference)
		.def_readwrite("CurrentProfile", &UWillowAutoAimStrategy::CurrentProfile, py::return_value_policy::reference)
		.def_readwrite("TargetSet", &UWillowAutoAimStrategy::TargetSet)
		.def("SetTargetSet", &UWillowAutoAimStrategy::SetTargetSet)
		.def("SetAdjustOnMoveOnly", &UWillowAutoAimStrategy::SetAdjustOnMoveOnly)
		.def("SetLockingEnabled", &UWillowAutoAimStrategy::SetLockingEnabled)
		.def("GetLogMagnetismRange", &UWillowAutoAimStrategy::GetLogMagnetismRange)
		.def("eventDrawAutoAimDebug", &UWillowAutoAimStrategy::eventDrawAutoAimDebug)
		.def("GetPreferredTarget", &UWillowAutoAimStrategy::GetPreferredTarget, py::return_value_policy::reference)
		.def("ModifyInput", [](UWillowAutoAimStrategy &self , class AWillowPlayerController* InPlayer) { float* pyaTurn = (float*)malloc(sizeof(float)) ; float* pyaLookUp = (float*)malloc(sizeof(float)) ; float* pyaForward = (float*)malloc(sizeof(float)) ; float* pyaStrafe = (float*)malloc(sizeof(float)) ;   self.ModifyInput(InPlayer, pyaTurn, pyaLookUp, pyaForward, pyaStrafe); return py::make_tuple(*pyaTurn, *pyaLookUp, *pyaForward, *pyaStrafe); })
		;
	py::class_< UWillowAutoAimStrategyDefinition, UGBXDefinition >(m, "UWillowAutoAimStrategyDefinition")
		.def_readwrite("MaxTargetDistance", &UWillowAutoAimStrategyDefinition::MaxTargetDistance)
		.def_readwrite("MinTargetDistance", &UWillowAutoAimStrategyDefinition::MinTargetDistance)
		.def_readwrite("RadiusMultiplier", &UWillowAutoAimStrategyDefinition::RadiusMultiplier)
		.def_readwrite("SustainTime", &UWillowAutoAimStrategyDefinition::SustainTime)
		.def_readwrite("AcquireTime", &UWillowAutoAimStrategyDefinition::AcquireTime)
		.def_readwrite("ChangeTime", &UWillowAutoAimStrategyDefinition::ChangeTime)
		.def_readwrite("MaxSnapAngle", &UWillowAutoAimStrategyDefinition::MaxSnapAngle)
		.def_readwrite("DistanceOffset", &UWillowAutoAimStrategyDefinition::DistanceOffset)
		.def_readwrite("Profiles", &UWillowAutoAimStrategyDefinition::Profiles, py::return_value_policy::reference)
		.def_readwrite("DefaultProfile", &UWillowAutoAimStrategyDefinition::DefaultProfile, py::return_value_policy::reference)
		.def("GetProfileDefinition", &UWillowAutoAimStrategyDefinition::GetProfileDefinition, py::return_value_policy::reference)
		;
	py::class_< UWillowCalloutDefinition, UGearboxCalloutDefinition >(m, "UWillowCalloutDefinition")
		.def_readwrite("DialogEvent", &UWillowCalloutDefinition::DialogEvent, py::return_value_policy::reference)
		;
	py::class_< UWillowCharacterClassDefinition, UCharacterClassDefinition >(m, "UWillowCharacterClassDefinition")
		.def_property("bCountsTowardDamageAndKillStats", [](UWillowCharacterClassDefinition &self){return self.bCountsTowardDamageAndKillStats;}, [](UWillowCharacterClassDefinition &self, bool value){self.bCountsTowardDamageAndKillStats = value ? 1 : 0;})
		.def_property("bTreatAsVehicleForStats", [](UWillowCharacterClassDefinition &self){return self.bTreatAsVehicleForStats;}, [](UWillowCharacterClassDefinition &self, bool value){self.bTreatAsVehicleForStats = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBehaviorProvider", &UWillowCharacterClassDefinition::VfTable_IIBehaviorProvider, py::return_value_policy::reference)
		.def_readwrite("AttributeParentClass", &UWillowCharacterClassDefinition::AttributeParentClass, py::return_value_policy::reference)
		.def_readwrite("AttributeStartingValues", &UWillowCharacterClassDefinition::AttributeStartingValues, py::return_value_policy::reference)
		.def_readwrite("DesignerFlagStartingValues", &UWillowCharacterClassDefinition::DesignerFlagStartingValues, py::return_value_policy::reference)
		.def_readwrite("AttributeStartingValuesNew", &UWillowCharacterClassDefinition::AttributeStartingValuesNew, py::return_value_policy::reference)
		.def_readwrite("BaseCommerceMarkup", &UWillowCharacterClassDefinition::BaseCommerceMarkup, py::return_value_policy::reference)
		.def_readwrite("EligibleUsage", &UWillowCharacterClassDefinition::EligibleUsage, py::return_value_policy::reference)
		.def_readwrite("KilledStatID", &UWillowCharacterClassDefinition::KilledStatID, py::return_value_policy::reference)
		.def_readwrite("KilledCriticalStatID", &UWillowCharacterClassDefinition::KilledCriticalStatID, py::return_value_policy::reference)
		.def_readwrite("RanOverStatID", &UWillowCharacterClassDefinition::RanOverStatID, py::return_value_policy::reference)
		.def_readwrite("KillByWeaponStatList", &UWillowCharacterClassDefinition::KillByWeaponStatList, py::return_value_policy::reference)
		.def_readwrite("KillByDamageTypeStatList", &UWillowCharacterClassDefinition::KillByDamageTypeStatList, py::return_value_policy::reference)
		.def_readwrite("KillByWeaponDamageStatList", &UWillowCharacterClassDefinition::KillByWeaponDamageStatList, py::return_value_policy::reference)
		.def_readwrite("LevelUpKillStat", &UWillowCharacterClassDefinition::LevelUpKillStat, py::return_value_policy::reference)
		.def_readwrite("BaseIgniteChanceResistanceModifier", &UWillowCharacterClassDefinition::BaseIgniteChanceResistanceModifier, py::return_value_policy::reference)
		.def_readwrite("BaseShockChanceResistanceModifier", &UWillowCharacterClassDefinition::BaseShockChanceResistanceModifier, py::return_value_policy::reference)
		.def_readwrite("BaseCorrosiveChanceResistanceModifier", &UWillowCharacterClassDefinition::BaseCorrosiveChanceResistanceModifier, py::return_value_policy::reference)
		.def_readwrite("BaseSlowChanceResistanceModifier", &UWillowCharacterClassDefinition::BaseSlowChanceResistanceModifier, py::return_value_policy::reference)
		.def_readwrite("BaseAmpChanceResistanceModifier", &UWillowCharacterClassDefinition::BaseAmpChanceResistanceModifier, py::return_value_policy::reference)
		.def_readwrite("BaseIgniteDurationResistanceModifier", &UWillowCharacterClassDefinition::BaseIgniteDurationResistanceModifier, py::return_value_policy::reference)
		.def_readwrite("BaseShockDurationResistanceModifier", &UWillowCharacterClassDefinition::BaseShockDurationResistanceModifier, py::return_value_policy::reference)
		.def_readwrite("BaseCorrosiveDurationResistanceModifier", &UWillowCharacterClassDefinition::BaseCorrosiveDurationResistanceModifier, py::return_value_policy::reference)
		.def_readwrite("BaseSlowDurationResistanceModifier", &UWillowCharacterClassDefinition::BaseSlowDurationResistanceModifier, py::return_value_policy::reference)
		.def_readwrite("BaseAmpDurationResistanceModifier", &UWillowCharacterClassDefinition::BaseAmpDurationResistanceModifier, py::return_value_policy::reference)
		.def_readwrite("BehaviorProviderDefinition", &UWillowCharacterClassDefinition::BehaviorProviderDefinition, py::return_value_policy::reference)
		.def_readwrite("RevivalHealthMultiplier", &UWillowCharacterClassDefinition::RevivalHealthMultiplier)
		.def_readwrite("CharacterInjuredDefinition", &UWillowCharacterClassDefinition::CharacterInjuredDefinition, py::return_value_policy::reference)
		.def("SetBehaviorProviderDefinition", &UWillowCharacterClassDefinition::SetBehaviorProviderDefinition)
		.def("GetBehaviorProviderDefinition", &UWillowCharacterClassDefinition::GetBehaviorProviderDefinition, py::return_value_policy::reference)
		;
	py::class_< UPlayerClassDefinition, UWillowCharacterClassDefinition >(m, "UPlayerClassDefinition")
		.def_property("bNeedsDualWieldInventoryGuides", [](UPlayerClassDefinition &self){return self.bNeedsDualWieldInventoryGuides;}, [](UPlayerClassDefinition &self, bool value){self.bNeedsDualWieldInventoryGuides = value ? 1 : 0;})
		.def_property("bMeleeSkillUsesSharedWeaponAction", [](UPlayerClassDefinition &self){return self.bMeleeSkillUsesSharedWeaponAction;}, [](UPlayerClassDefinition &self, bool value){self.bMeleeSkillUsesSharedWeaponAction = value ? 1 : 0;})
		.def_readwrite("VfTable_IIConstructObject", &UPlayerClassDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("PawnArchetypePath", &UPlayerClassDefinition::PawnArchetypePath, py::return_value_policy::reference)
		.def_readwrite("SkillTreePath", &UPlayerClassDefinition::SkillTreePath, py::return_value_policy::reference)
		.def_readwrite("InitialFOVModifierSpeed", &UPlayerClassDefinition::InitialFOVModifierSpeed)
		.def_readwrite("InitialEyeHeightModifierSpeed", &UPlayerClassDefinition::InitialEyeHeightModifierSpeed)
		.def_readwrite("GotFirstSkillPointStatID", &UPlayerClassDefinition::GotFirstSkillPointStatID, py::return_value_policy::reference)
		.def_readwrite("MaximumCoDependentDamageReturnRange", &UPlayerClassDefinition::MaximumCoDependentDamageReturnRange)
		.def_readwrite("ActionSkillAvailableAkEvent", &UPlayerClassDefinition::ActionSkillAvailableAkEvent, py::return_value_policy::reference)
		.def_readwrite("ExperiencePoolDefinition", &UPlayerClassDefinition::ExperiencePoolDefinition, py::return_value_policy::reference)
		.def_readwrite("SkillCooldownPoolDefinition", &UPlayerClassDefinition::SkillCooldownPoolDefinition, py::return_value_policy::reference)
		.def_readwrite("MeleeSkillCooldownPoolDefinition", &UPlayerClassDefinition::MeleeSkillCooldownPoolDefinition, py::return_value_policy::reference)
		.def_readwrite("OnLevelUp", &UPlayerClassDefinition::OnLevelUp, py::return_value_policy::reference)
		.def_readwrite("OnLevelUpNaturally", &UPlayerClassDefinition::OnLevelUpNaturally, py::return_value_policy::reference)
		.def_readwrite("BulletReflectionParticle", &UPlayerClassDefinition::BulletReflectionParticle, py::return_value_policy::reference)
		.def_readwrite("GFxUIManagerDefinition", &UPlayerClassDefinition::GFxUIManagerDefinition, py::return_value_policy::reference)
		.def_readwrite("CharacterSelectUIPrimaryStandInOffset", &UPlayerClassDefinition::CharacterSelectUIPrimaryStandInOffset, py::return_value_policy::reference)
		.def_readwrite("CharacterSelectUIPrimaryStandInRotation", &UPlayerClassDefinition::CharacterSelectUIPrimaryStandInRotation, py::return_value_policy::reference)
		.def_readwrite("CharacterSelectUISplitStandInOffset", &UPlayerClassDefinition::CharacterSelectUISplitStandInOffset, py::return_value_policy::reference)
		.def_readwrite("CharacterSelectUISplitStandInRotation", &UPlayerClassDefinition::CharacterSelectUISplitStandInRotation, py::return_value_policy::reference)
		.def_readwrite("LowHealthPercent", &UPlayerClassDefinition::LowHealthPercent)
		.def_readwrite("OnLowHealth", &UPlayerClassDefinition::OnLowHealth, py::return_value_policy::reference)
		.def_readwrite("OnLowHealthRecover", &UPlayerClassDefinition::OnLowHealthRecover, py::return_value_policy::reference)
		.def_readwrite("CharacterNameId", &UPlayerClassDefinition::CharacterNameId, py::return_value_policy::reference)
		.def_readwrite("InputContexts", &UPlayerClassDefinition::InputContexts, py::return_value_policy::reference)
		.def_readwrite("InputContextSelector", &UPlayerClassDefinition::InputContextSelector, py::return_value_policy::reference)
		.def_readwrite("InputDeviceCollection", &UPlayerClassDefinition::InputDeviceCollection, py::return_value_policy::reference)
		.def_readwrite("SprintSettings", &UPlayerClassDefinition::SprintSettings, py::return_value_policy::reference)
		.def_readwrite("FocusDef", &UPlayerClassDefinition::FocusDef, py::return_value_policy::reference)
		.def_readwrite("ExtraClipPostTranslate", &UPlayerClassDefinition::ExtraClipPostTranslate, py::return_value_policy::reference)
		.def_readwrite("TradeInteractionDefinition", &UPlayerClassDefinition::TradeInteractionDefinition, py::return_value_policy::reference)
		.def_readwrite("CharacterInjuredDefinitionOverride", &UPlayerClassDefinition::CharacterInjuredDefinitionOverride, py::return_value_policy::reference)
		.def_readwrite("PlayerClassAchievementData", &UPlayerClassDefinition::PlayerClassAchievementData, py::return_value_policy::reference)
		.def_readwrite("InjuredDefOverridePath", &UPlayerClassDefinition::InjuredDefOverridePath, py::return_value_policy::reference)
		.def("ShouldUnlockPlayerClassAchievement", &UPlayerClassDefinition::ShouldUnlockPlayerClassAchievement, py::return_value_policy::reference)
		;
	py::class_< UWillowClanDefinition, UGBXDefinition >(m, "UWillowClanDefinition")
		.def_readwrite("MaterialMap", &UWillowClanDefinition::MaterialMap, py::return_value_policy::reference)
		.def_readwrite("SwitchData", &UWillowClanDefinition::SwitchData, py::return_value_policy::reference)
		.def("ChangeObjectMaterials", &UWillowClanDefinition::ChangeObjectMaterials)
		;
	py::class_< UWillowCustomizationManager, UObject >(m, "UWillowCustomizationManager")
		.def_property("bRequestingImmediateGC", [](UWillowCustomizationManager &self){return self.bRequestingImmediateGC;}, [](UWillowCustomizationManager &self, bool value){self.bRequestingImmediateGC = value ? 1 : 0;})
		.def_readwrite("VfTable_FCallbackEventDevice", &UWillowCustomizationManager::VfTable_FCallbackEventDevice, py::return_value_policy::reference)
		.def_readwrite("PendingCustomizations", &UWillowCustomizationManager::PendingCustomizations, py::return_value_policy::reference)
		.def_readwrite("NumHeadsLoadedSinceLastGC", &UWillowCustomizationManager::NumHeadsLoadedSinceLastGC)
		.def_readwrite("AllCustomizations", &UWillowCustomizationManager::AllCustomizations, py::return_value_policy::reference)
		.def_readwrite("LoadedProductsCustomizationInfos", &UWillowCustomizationManager::LoadedProductsCustomizationInfos, py::return_value_policy::reference)
		.def_readwrite("CustomizationSizes", &UWillowCustomizationManager::CustomizationSizes, py::return_value_policy::reference)
		.def("eventEvaluateCustomizationChangedStat", &UWillowCustomizationManager::eventEvaluateCustomizationChangedStat)
		.def("SetCustomizationSeen", &UWillowCustomizationManager::SetCustomizationSeen)
		.def("SetCustomizationLocked", &UWillowCustomizationManager::SetCustomizationLocked)
		.def("GetLoadedCustomizationData", &UWillowCustomizationManager::GetLoadedCustomizationData, py::return_value_policy::reference)
		.def("InitializePlayerPawn", &UWillowCustomizationManager::InitializePlayerPawn)
		.def("ReleaseUnusedCustomizationData", &UWillowCustomizationManager::ReleaseUnusedCustomizationData)
		.def("ReleaseCustomizationData", &UWillowCustomizationManager::ReleaseCustomizationData)
		.def("InitiateCustomizationRequest", &UWillowCustomizationManager::InitiateCustomizationRequest)
		.def("UpdatePRILocalCustomizationArrays", &UWillowCustomizationManager::UpdatePRILocalCustomizationArrays)
		.def("PlayerCustomizationsUpdated", &UWillowCustomizationManager::PlayerCustomizationsUpdated)
		.def("IsCustomizationUnlocked", [](UWillowCustomizationManager &self , class UCustomizationDefinition* Definition, class AWillowPlayerController* Controller) { int* pyIsNew = (int*)malloc(sizeof(int)) ;  bool ret =  self.IsCustomizationUnlocked(Definition, Controller, pyIsNew); return py::make_tuple(ret, *pyIsNew); })
		;
	py::class_< AWillowDamageArea, AActor >(m, "AWillowDamageArea")
		.def_property("bCanDamageFriendlies", [](AWillowDamageArea &self){return self.bCanDamageFriendlies;}, [](AWillowDamageArea &self, bool value){self.bCanDamageFriendlies = value ? 1 : 0;})
		.def_property("bEnabled", [](AWillowDamageArea &self){return self.bEnabled;}, [](AWillowDamageArea &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_property("bApplyBeams", [](AWillowDamageArea &self){return self.bApplyBeams;}, [](AWillowDamageArea &self, bool value){self.bApplyBeams = value ? 1 : 0;})
		.def_property("bBarrelSource", [](AWillowDamageArea &self){return self.bBarrelSource;}, [](AWillowDamageArea &self, bool value){self.bBarrelSource = value ? 1 : 0;})
		.def_property("bPlantSource", [](AWillowDamageArea &self){return self.bPlantSource;}, [](AWillowDamageArea &self, bool value){self.bPlantSource = value ? 1 : 0;})
		.def_property("bForceTouchingUpdate", [](AWillowDamageArea &self){return self.bForceTouchingUpdate;}, [](AWillowDamageArea &self, bool value){self.bForceTouchingUpdate = value ? 1 : 0;})
		.def_readwrite("CollisionPrimitiveType", &AWillowDamageArea::CollisionPrimitiveType)
		.def_readwrite("DamagePerSecond", &AWillowDamageArea::DamagePerSecond, py::return_value_policy::reference)
		.def_readwrite("StatusEffectDamage", &AWillowDamageArea::StatusEffectDamage, py::return_value_policy::reference)
		.def_readwrite("StatusEffectChance", &AWillowDamageArea::StatusEffectChance, py::return_value_policy::reference)
		.def_readwrite("DamageSource", &AWillowDamageArea::DamageSource, py::return_value_policy::reference)
		.def_readwrite("DamageTypeDefinition", &AWillowDamageArea::DamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("ImpactDefinition", &AWillowDamageArea::ImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("DamageTickFrequency", &AWillowDamageArea::DamageTickFrequency)
		.def_readwrite("DamageTickTime", &AWillowDamageArea::DamageTickTime)
		.def_readwrite("BeamSourceSocket", &AWillowDamageArea::BeamSourceSocket, py::return_value_policy::reference)
		.def_readwrite("BeamTargetSocket", &AWillowDamageArea::BeamTargetSocket, py::return_value_policy::reference)
		.def_readwrite("BeamFiringMode", &AWillowDamageArea::BeamFiringMode, py::return_value_policy::reference)
		.def_readwrite("BeamTargets", &AWillowDamageArea::BeamTargets, py::return_value_policy::reference)
		.def_readwrite("BarrelSourceTime", &AWillowDamageArea::BarrelSourceTime)
		.def_readwrite("PlantSourceTime", &AWillowDamageArea::PlantSourceTime)
		.def("eventDestroyed", &AWillowDamageArea::eventDestroyed)
		.def("OnToggle", &AWillowDamageArea::OnToggle)
		.def("DisableArea", &AWillowDamageArea::DisableArea)
		.def("EnableArea", &AWillowDamageArea::EnableArea)
		.def("IsEnabled", &AWillowDamageArea::IsEnabled)
		.def("eventGetLightProjectileManager", &AWillowDamageArea::eventGetLightProjectileManager, py::return_value_policy::reference)
		.def("GetControllerResponsibleForDamage", &AWillowDamageArea::GetControllerResponsibleForDamage, py::return_value_policy::reference)
		.def("GetInstigator", &AWillowDamageArea::GetInstigator, py::return_value_policy::reference)
		.def("GetStatusEffectChanceModifier", &AWillowDamageArea::GetStatusEffectChanceModifier)
		.def("GetStatusEffectBaseChanceModifier", &AWillowDamageArea::GetStatusEffectBaseChanceModifier)
		.def("GetStatusEffectBaseDamage", &AWillowDamageArea::GetStatusEffectBaseDamage)
		;
	py::class_< UWillowDamagePipeline, UDamagePipeline >(m, "UWillowDamagePipeline")
		.def_property("bCanReflect", [](UWillowDamagePipeline &self){return self.bCanReflect;}, [](UWillowDamagePipeline &self, bool value){self.bCanReflect = value ? 1 : 0;})
		.def_readwrite("WillowDamageTypeDef", &UWillowDamagePipeline::WillowDamageTypeDef, py::return_value_policy::reference)
		.def_readwrite("WillowImpactDefinition", &UWillowDamagePipeline::WillowImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("DamageInstigator", &UWillowDamagePipeline::DamageInstigator, py::return_value_policy::reference)
		.def_readwrite("HitLocation", &UWillowDamagePipeline::HitLocation, py::return_value_policy::reference)
		.def_readwrite("HitMomentum", &UWillowDamagePipeline::HitMomentum, py::return_value_policy::reference)
		.def_readwrite("HitInfo", &UWillowDamagePipeline::HitInfo, py::return_value_policy::reference)
		.def_readwrite("DamageSource", &UWillowDamagePipeline::DamageSource, py::return_value_policy::reference)
		.def_readwrite("Globals", &UWillowDamagePipeline::Globals, py::return_value_policy::reference)
		.def_readwrite("GlobalsDef", &UWillowDamagePipeline::GlobalsDef, py::return_value_policy::reference)
		.def_readwrite("WorldInfo", &UWillowDamagePipeline::WorldInfo, py::return_value_policy::reference)
		.def_readwrite("WGRI", &UWillowDamagePipeline::WGRI, py::return_value_policy::reference)
		.def_readwrite("DamagedActor", &UWillowDamagePipeline::DamagedActor, py::return_value_policy::reference)
		.def_readwrite("DamagedPawnBase", &UWillowDamagePipeline::DamagedPawnBase, py::return_value_policy::reference)
		.def_readwrite("DamagedIO", &UWillowDamagePipeline::DamagedIO, py::return_value_policy::reference)
		.def_readwrite("DamagedPawn", &UWillowDamagePipeline::DamagedPawn, py::return_value_policy::reference)
		.def_readwrite("DamagedAIPawn", &UWillowDamagePipeline::DamagedAIPawn, py::return_value_policy::reference)
		.def_readwrite("DamageInstigatorWPC", &UWillowDamagePipeline::DamageInstigatorWPC, py::return_value_policy::reference)
		.def_readwrite("HitRegionDef", &UWillowDamagePipeline::HitRegionDef, py::return_value_policy::reference)
		.def_readwrite("DamageableInt", &UWillowDamagePipeline::DamageableInt, py::return_value_policy::reference)
		.def_readwrite("HitRegionConsumerInt", &UWillowDamagePipeline::HitRegionConsumerInt, py::return_value_policy::reference)
		.def_readwrite("ProtectableInt", &UWillowDamagePipeline::ProtectableInt, py::return_value_policy::reference)
		.def_readwrite("DamagedReflectableInt", &UWillowDamagePipeline::DamagedReflectableInt, py::return_value_policy::reference)
		.def_readwrite("InstigatorReflectableInt", &UWillowDamagePipeline::InstigatorReflectableInt, py::return_value_policy::reference)
		.def_readwrite("DamagedTargetableInt", &UWillowDamagePipeline::DamagedTargetableInt, py::return_value_policy::reference)
		.def_readwrite("InstigatorTargetableInt", &UWillowDamagePipeline::InstigatorTargetableInt, py::return_value_policy::reference)
		.def_readwrite("BulletFromClipType", &UWillowDamagePipeline::BulletFromClipType)
		.def_readwrite("TakingRadiusDamageOnHitRegions", &UWillowDamagePipeline::TakingRadiusDamageOnHitRegions, py::return_value_policy::reference)
		.def_readwrite("ResistDamageReductionThreshold", &UWillowDamagePipeline::ResistDamageReductionThreshold)
		.def("eventKillPlayer", &UWillowDamagePipeline::eventKillPlayer)
		.def("GetWouldBeHealedSomehowByFriendlyFire", &UWillowDamagePipeline::GetWouldBeHealedSomehowByFriendlyFire)
		.def("SetAlwaysCrit", &UWillowDamagePipeline::SetAlwaysCrit)
		.def("IsAlwaysCritCheatActive", &UWillowDamagePipeline::IsAlwaysCritCheatActive)
		.def("SetTakingRadiusDamageOnHitRegions", &UWillowDamagePipeline::SetTakingRadiusDamageOnHitRegions)
		.def("SetBulletClipType", &UWillowDamagePipeline::SetBulletClipType)
		.def("SetCanReflect", &UWillowDamagePipeline::SetCanReflect)
		.def("ResetToDefaults", &UWillowDamagePipeline::ResetToDefaults)
		.def("ConvertDamageToHealing", &UWillowDamagePipeline::ConvertDamageToHealing)
		.def("AdjustDamage", &UWillowDamagePipeline::AdjustDamage, py::return_value_policy::reference)
		.def("DamageDealtSkillEventsTriggered", [](UWillowDamagePipeline &self ) { unsigned char* pySkillEvent = (unsigned char*)malloc(sizeof(unsigned char)) ;   self.DamageDealtSkillEventsTriggered(pySkillEvent); return py::make_tuple(*pySkillEvent); })
		.def("DamageTakenSkillEventsTriggered", [](UWillowDamagePipeline &self ) { unsigned char* pySkillEvent = (unsigned char*)malloc(sizeof(unsigned char)) ;   self.DamageTakenSkillEventsTriggered(pySkillEvent); return py::make_tuple(*pySkillEvent); })
		;
	py::class_< UWillowDamageType, UDamageType >(m, "UWillowDamageType")
		.def_property("bDirectDamage", [](UWillowDamageType &self){return self.bDirectDamage;}, [](UWillowDamageType &self, bool value){self.bDirectDamage = value ? 1 : 0;})
		.def_property("bSeversHead", [](UWillowDamageType &self){return self.bSeversHead;}, [](UWillowDamageType &self, bool value){self.bSeversHead = value ? 1 : 0;})
		.def_property("bCauseConvulsions", [](UWillowDamageType &self){return self.bCauseConvulsions;}, [](UWillowDamageType &self, bool value){self.bCauseConvulsions = value ? 1 : 0;})
		.def_property("bUseTearOffMomentum", [](UWillowDamageType &self){return self.bUseTearOffMomentum;}, [](UWillowDamageType &self, bool value){self.bUseTearOffMomentum = value ? 1 : 0;})
		.def_property("bThrowRagdoll", [](UWillowDamageType &self){return self.bThrowRagdoll;}, [](UWillowDamageType &self, bool value){self.bThrowRagdoll = value ? 1 : 0;})
		.def_property("bLeaveBodyEffect", [](UWillowDamageType &self){return self.bLeaveBodyEffect;}, [](UWillowDamageType &self, bool value){self.bLeaveBodyEffect = value ? 1 : 0;})
		.def_property("bBulletHit", [](UWillowDamageType &self){return self.bBulletHit;}, [](UWillowDamageType &self, bool value){self.bBulletHit = value ? 1 : 0;})
		.def_property("bVehicleHit", [](UWillowDamageType &self){return self.bVehicleHit;}, [](UWillowDamageType &self, bool value){self.bVehicleHit = value ? 1 : 0;})
		.def_property("bCausesBlood", [](UWillowDamageType &self){return self.bCausesBlood;}, [](UWillowDamageType &self, bool value){self.bCausesBlood = value ? 1 : 0;})
		.def_readwrite("GibPerterbation", &UWillowDamageType::GibPerterbation)
		.def_readwrite("DamageWeaponClass", &UWillowDamageType::DamageWeaponClass, py::return_value_policy::reference)
		.def_readwrite("DamageWeaponFireMode", &UWillowDamageType::DamageWeaponFireMode)
		.def_readwrite("UBMKilledByMessageString", &UWillowDamageType::UBMKilledByMessageString, py::return_value_policy::reference)
		.def("PawnTornOff", &UWillowDamageType::PawnTornOff)
		.def("SpawnHitEffect", &UWillowDamageType::SpawnHitEffect)
		;
	py::class_< UWillowDamageSource, UWillowDamageType >(m, "UWillowDamageSource")
		.def("CanDamageSourceBeAbsorbedByShields", &UWillowDamageSource::CanDamageSourceBeAbsorbedByShields)
		.def("ShouldDamageSourcePenetrateShields", &UWillowDamageSource::ShouldDamageSourcePenetrateShields)
		.def("GetAmmoTheftAmounts", [](UWillowDamageSource &self , class UClass* DamageSource, class AController* DamageInstigator, class AController* DamageReceiver) { int* pyInstigatedDamageAmmoTheftAmount = (int*)malloc(sizeof(int)) ; int* pyReceivedDamageAmmoTheftAmount = (int*)malloc(sizeof(int)) ;   self.GetAmmoTheftAmounts(DamageSource, DamageInstigator, DamageReceiver, pyInstigatedDamageAmmoTheftAmount, pyReceivedDamageAmmoTheftAmount); return py::make_tuple(*pyInstigatedDamageAmmoTheftAmount, *pyReceivedDamageAmmoTheftAmount); })
		;
	py::class_< UWillowDmgSource_Bullet, UWillowDamageSource >(m, "UWillowDmgSource_Bullet")
		;
	py::class_< UWillowDmgSource_MachineGun, UWillowDmgSource_Bullet >(m, "UWillowDmgSource_MachineGun")
		;
	py::class_< UWillowDmgSource_Pistol, UWillowDmgSource_Bullet >(m, "UWillowDmgSource_Pistol")
		;
	py::class_< UWillowDmgSource_Shotgun, UWillowDmgSource_Bullet >(m, "UWillowDmgSource_Shotgun")
		;
	py::class_< UWillowDmgSource_Sniper, UWillowDmgSource_Bullet >(m, "UWillowDmgSource_Sniper")
		;
	py::class_< UWillowDmgSource_SubMachineGun, UWillowDmgSource_Bullet >(m, "UWillowDmgSource_SubMachineGun")
		;
	py::class_< UWillowDmgSource_CustomCrate, UWillowDamageSource >(m, "UWillowDmgSource_CustomCrate")
		;
	py::class_< UWillowDmgSource_Grenade, UWillowDamageSource >(m, "UWillowDmgSource_Grenade")
		;
	py::class_< UWillowDmgSource_Melee, UWillowDamageSource >(m, "UWillowDmgSource_Melee")
		;
	py::class_< UWillowDmgSource_Rocket, UWillowDamageSource >(m, "UWillowDmgSource_Rocket")
		;
	py::class_< UWillowDmgSource_Shield, UWillowDamageSource >(m, "UWillowDmgSource_Shield")
		;
	py::class_< UWillowDmgSource_ShieldNova, UWillowDmgSource_Shield >(m, "UWillowDmgSource_ShieldNova")
		;
	py::class_< UWillowDmgSource_ShieldSpike, UWillowDmgSource_Shield >(m, "UWillowDmgSource_ShieldSpike")
		;
	py::class_< UWillowDmgSource_Skill, UWillowDamageSource >(m, "UWillowDmgSource_Skill")
		;
	py::class_< UWillowDmgSource_Skill_IgnoreIOs, UWillowDmgSource_Skill >(m, "UWillowDmgSource_Skill_IgnoreIOs")
		;
	py::class_< UWillowDmgSource_StatusEffect, UWillowDamageSource >(m, "UWillowDmgSource_StatusEffect")
		;
	py::class_< UWillowDmgSource_VehicleRanInto, UWillowDamageSource >(m, "UWillowDmgSource_VehicleRanInto")
		;
	py::class_< UWillowDmgSource_VehicleRanOver, UWillowDamageSource >(m, "UWillowDmgSource_VehicleRanOver")
		;
	py::class_< UWillowDamageTypeDefinition, UDamageTypeDefinition >(m, "UWillowDamageTypeDefinition")
		.def_property("bNoBlood", [](UWillowDamageTypeDefinition &self){return self.bNoBlood;}, [](UWillowDamageTypeDefinition &self, bool value){self.bNoBlood = value ? 1 : 0;})
		.def_property("bNoPlayerFeedback", [](UWillowDamageTypeDefinition &self){return self.bNoPlayerFeedback;}, [](UWillowDamageTypeDefinition &self, bool value){self.bNoPlayerFeedback = value ? 1 : 0;})
		.def_property("bNoAlliedPlayerFeedback", [](UWillowDamageTypeDefinition &self){return self.bNoAlliedPlayerFeedback;}, [](UWillowDamageTypeDefinition &self, bool value){self.bNoAlliedPlayerFeedback = value ? 1 : 0;})
		.def_property("bUseStatusEffectInstigatorModifiersForDamage", [](UWillowDamageTypeDefinition &self){return self.bUseStatusEffectInstigatorModifiersForDamage;}, [](UWillowDamageTypeDefinition &self, bool value){self.bUseStatusEffectInstigatorModifiersForDamage = value ? 1 : 0;})
		.def_property("bApplyUpwardMomentum", [](UWillowDamageTypeDefinition &self){return self.bApplyUpwardMomentum;}, [](UWillowDamageTypeDefinition &self, bool value){self.bApplyUpwardMomentum = value ? 1 : 0;})
		.def_property("bCauseHardFlinch", [](UWillowDamageTypeDefinition &self){return self.bCauseHardFlinch;}, [](UWillowDamageTypeDefinition &self, bool value){self.bCauseHardFlinch = value ? 1 : 0;})
		.def_readwrite("FleshDamageModifier", &UWillowDamageTypeDefinition::FleshDamageModifier, py::return_value_policy::reference)
		.def_readwrite("ArmorDamageModifier", &UWillowDamageTypeDefinition::ArmorDamageModifier, py::return_value_policy::reference)
		.def_readwrite("ShieldDamageModifier", &UWillowDamageTypeDefinition::ShieldDamageModifier, py::return_value_policy::reference)
		.def_readwrite("CharacterDamageTypeModifierAttribute", &UWillowDamageTypeDefinition::CharacterDamageTypeModifierAttribute, py::return_value_policy::reference)
		.def_readwrite("OnProjectileSpawn", &UWillowDamageTypeDefinition::OnProjectileSpawn, py::return_value_policy::reference)
		.def_readwrite("StatusEffect", &UWillowDamageTypeDefinition::StatusEffect, py::return_value_policy::reference)
		.def_readwrite("DamageColor", &UWillowDamageTypeDefinition::DamageColor, py::return_value_policy::reference)
		.def_readwrite("HUDDamageColor", &UWillowDamageTypeDefinition::HUDDamageColor, py::return_value_policy::reference)
		.def_readwrite("DamageType", &UWillowDamageTypeDefinition::DamageType)
		.def_readwrite("UpwardMomentumScale", &UWillowDamageTypeDefinition::UpwardMomentumScale)
		.def_readwrite("RigidBodyMomentumScale", &UWillowDamageTypeDefinition::RigidBodyMomentumScale)
		.def_readwrite("FleshMomentumModifier", &UWillowDamageTypeDefinition::FleshMomentumModifier, py::return_value_policy::reference)
		.def_readwrite("ArmorMomentumModifier", &UWillowDamageTypeDefinition::ArmorMomentumModifier, py::return_value_policy::reference)
		.def_readwrite("ShieldMomentumModifier", &UWillowDamageTypeDefinition::ShieldMomentumModifier, py::return_value_policy::reference)
		.def_readwrite("WeaponCardPresentations", &UWillowDamageTypeDefinition::WeaponCardPresentations, py::return_value_policy::reference)
		.def_readwrite("MaxDamageRadius", &UWillowDamageTypeDefinition::MaxDamageRadius)
		.def_readwrite("MinDamageRadius", &UWillowDamageTypeDefinition::MinDamageRadius)
		.def_readwrite("MinDamagePercent", &UWillowDamageTypeDefinition::MinDamagePercent)
		.def_readwrite("HardFlinchPercent", &UWillowDamageTypeDefinition::HardFlinchPercent)
		.def_readwrite("DamageDealtStatId", &UWillowDamageTypeDefinition::DamageDealtStatId, py::return_value_policy::reference)
		.def_readwrite("DamageLanguageId", &UWillowDamageTypeDefinition::DamageLanguageId)
		.def("eventDisplayRecentDamageForPlayer", &UWillowDamageTypeDefinition::eventDisplayRecentDamageForPlayer)
		.def("HasPlayerRecentDamageFlags", &UWillowDamageTypeDefinition::HasPlayerRecentDamageFlags)
		.def("CalcRadiusDamageScale", &UWillowDamageTypeDefinition::CalcRadiusDamageScale)
		.def("GetMinDamagePercent", &UWillowDamageTypeDefinition::GetMinDamagePercent)
		.def("GetMinDamageRadius", &UWillowDamageTypeDefinition::GetMinDamageRadius)
		.def("GetMaxDamageRadius", &UWillowDamageTypeDefinition::GetMaxDamageRadius)
		.def("GetPawnDamageTypeModifier", &UWillowDamageTypeDefinition::GetPawnDamageTypeModifier)
		.def("GetSurfaceDamageTypeModifier", &UWillowDamageTypeDefinition::GetSurfaceDamageTypeModifier)
		.def("GetSurfaceMomentumTypeModifier", &UWillowDamageTypeDefinition::GetSurfaceMomentumTypeModifier)
		.def("GetRigidBodyMomentumScale", &UWillowDamageTypeDefinition::GetRigidBodyMomentumScale)
		.def("GetUpwardMomentumScale", &UWillowDamageTypeDefinition::GetUpwardMomentumScale)
		.def("ApplyUpwardMomentum", &UWillowDamageTypeDefinition::ApplyUpwardMomentum)
		.def("GetDamageTypeModifiers", [](UWillowDamageTypeDefinition &self , class UWillowDamageTypeDefinition* DamageTypeDefinition, class AController* DamageInstigator) { float* pyDamageInstigatorModifier = (float*)malloc(sizeof(float)) ;   self.GetDamageTypeModifiers(DamageTypeDefinition, DamageInstigator, pyDamageInstigatorModifier); return py::make_tuple(*pyDamageInstigatorModifier); })
		;
	py::class_< UWillowDeclarations, UObject >(m, "UWillowDeclarations")
		;
	py::class_< UWillowDialogAct_MissionSwitch, UGearboxDialogAction >(m, "UWillowDialogAct_MissionSwitch")
		.def_readwrite("TrackedState", &UWillowDialogAct_MissionSwitch::TrackedState)
		.def_readwrite("MissionDefinition", &UWillowDialogAct_MissionSwitch::MissionDefinition, py::return_value_policy::reference)
		.def("eventActivate", &UWillowDialogAct_MissionSwitch::eventActivate)
		;
	py::class_< UWillowDialogAct_RandomBranch, UGearboxDialogAction >(m, "UWillowDialogAct_RandomBranch")
		.def_readwrite("Chances", &UWillowDialogAct_RandomBranch::Chances, py::return_value_policy::reference)
		.def_readwrite("QuietTimeMin", &UWillowDialogAct_RandomBranch::QuietTimeMin)
		.def_readwrite("QuietTimeMax", &UWillowDialogAct_RandomBranch::QuietTimeMax)
		.def_readwrite("Mode", &UWillowDialogAct_RandomBranch::Mode)
		.def_readwrite("AvoidRepeatingLastNPlayed", &UWillowDialogAct_RandomBranch::AvoidRepeatingLastNPlayed)
		.def_readwrite("NextFireTime", &UWillowDialogAct_RandomBranch::NextFireTime)
		.def_readwrite("DisableIndices", &UWillowDialogAct_RandomBranch::DisableIndices, py::return_value_policy::reference)
		.def("eventActivate", &UWillowDialogAct_RandomBranch::eventActivate)
		;
	py::class_< UWillowDialogAct_Talk, UGearboxDialogAct_Talk >(m, "UWillowDialogAct_Talk")
		.def_property("bEnableNoMatch", [](UWillowDialogAct_Talk &self){return self.bEnableNoMatch;}, [](UWillowDialogAct_Talk &self, bool value){self.bEnableNoMatch = value ? 1 : 0;})
		.def_readwrite("Emote", &UWillowDialogAct_Talk::Emote, py::return_value_policy::reference)
		.def("eventActivate", &UWillowDialogAct_Talk::eventActivate)
		.def("eventTalkFinished", &UWillowDialogAct_Talk::eventTalkFinished)
		.def("eventTalkStarted", &UWillowDialogAct_Talk::eventTalkStarted)
		;
	py::class_< UWillowDialogAct_Trigger, UGearboxDialogAct_Trigger >(m, "UWillowDialogAct_Trigger")
		;
	py::class_< AWillowDialogEchoActor, AActor >(m, "AWillowDialogEchoActor")
		.def_readwrite("VfTable_IGearboxDialogInterface", &AWillowDialogEchoActor::VfTable_IGearboxDialogInterface, py::return_value_policy::reference)
		.def_readwrite("NameTag", &AWillowDialogEchoActor::NameTag, py::return_value_policy::reference)
		.def_readwrite("DialogComponent", &AWillowDialogEchoActor::DialogComponent, py::return_value_policy::reference)
		.def_readwrite("DialogReplicatedData", &AWillowDialogEchoActor::DialogReplicatedData, py::return_value_policy::reference)
		.def("SetDialogNameTag", &AWillowDialogEchoActor::SetDialogNameTag)
		.def("GetReplicatedDialogData", &AWillowDialogEchoActor::GetReplicatedDialogData, py::return_value_policy::reference)
		.def("SetReplicatedDialogData", &AWillowDialogEchoActor::SetReplicatedDialogData)
		.def("GetDialogGroups", &AWillowDialogEchoActor::GetDialogGroups)
		.def("GetDialogComponent", &AWillowDialogEchoActor::GetDialogComponent, py::return_value_policy::reference)
		.def("GetDialogNameTag", &AWillowDialogEchoActor::GetDialogNameTag, py::return_value_policy::reference)
		.def("GetActor", &AWillowDialogEchoActor::GetActor, py::return_value_policy::reference)
		.def("CanTalk", &AWillowDialogEchoActor::CanTalk)
		.def("eventServerDialog_TriggerEvent", &AWillowDialogEchoActor::eventServerDialog_TriggerEvent)
		.def("eventReplicatedEvent", &AWillowDialogEchoActor::eventReplicatedEvent)
		;
	py::class_< UWillowDialogEmoteDefinition, UGBXDefinition >(m, "UWillowDialogEmoteDefinition")
		;
	py::class_< UWillowDialogEventTag, UGearboxDialogEventTag >(m, "UWillowDialogEventTag")
		.def_property("bIsEchoEvent", [](UWillowDialogEventTag &self){return self.bIsEchoEvent;}, [](UWillowDialogEventTag &self, bool value){self.bIsEchoEvent = value ? 1 : 0;})
		.def_property("bDoesNotOverrideSamePriority", [](UWillowDialogEventTag &self){return self.bDoesNotOverrideSamePriority;}, [](UWillowDialogEventTag &self, bool value){self.bDoesNotOverrideSamePriority = value ? 1 : 0;})
		.def_property("bMultiplayerOnly", [](UWillowDialogEventTag &self){return self.bMultiplayerOnly;}, [](UWillowDialogEventTag &self, bool value){self.bMultiplayerOnly = value ? 1 : 0;})
		.def_property("bOncePerSession", [](UWillowDialogEventTag &self){return self.bOncePerSession;}, [](UWillowDialogEventTag &self, bool value){self.bOncePerSession = value ? 1 : 0;})
		;
	py::class_< UWillowDialogEventTagSpecialized, UWillowDialogEventTag >(m, "UWillowDialogEventTagSpecialized")
		.def_readwrite("SpecializationOfEventTag", &UWillowDialogEventTagSpecialized::SpecializationOfEventTag, py::return_value_policy::reference)
		.def_readwrite("SpecializationForOtherNameTags", &UWillowDialogEventTagSpecialized::SpecializationForOtherNameTags, py::return_value_policy::reference)
		;
	py::class_< UWillowDialogGlobalsDefinition, UGearboxDialogGlobalsDefinition >(m, "UWillowDialogGlobalsDefinition")
		.def_readwrite("DefaultTemplateGroup", &UWillowDialogGlobalsDefinition::DefaultTemplateGroup, py::return_value_policy::reference)
		.def_readwrite("DET_Jump", &UWillowDialogGlobalsDefinition::DET_Jump, py::return_value_policy::reference)
		.def_readwrite("DET_JumpLand", &UWillowDialogGlobalsDefinition::DET_JumpLand, py::return_value_policy::reference)
		.def_readwrite("DET_KilledChampion", &UWillowDialogGlobalsDefinition::DET_KilledChampion, py::return_value_policy::reference)
		.def_readwrite("DET_SkillKill", &UWillowDialogGlobalsDefinition::DET_SkillKill, py::return_value_policy::reference)
		.def_readwrite("KillStreakTargetScore", &UWillowDialogGlobalsDefinition::KillStreakTargetScore)
		.def_readwrite("KillPointValue", &UWillowDialogGlobalsDefinition::KillPointValue)
		.def_readwrite("DefaultKillScoreDecayRate", &UWillowDialogGlobalsDefinition::DefaultKillScoreDecayRate)
		.def_readwrite("LastKillTimeVDecayRate", &UWillowDialogGlobalsDefinition::LastKillTimeVDecayRate, py::return_value_policy::reference)
		.def_readwrite("DET_KillStreak", &UWillowDialogGlobalsDefinition::DET_KillStreak, py::return_value_policy::reference)
		.def_readwrite("DET_ChallengeCompleted", &UWillowDialogGlobalsDefinition::DET_ChallengeCompleted, py::return_value_policy::reference)
		.def_readwrite("DET_JoinedGame", &UWillowDialogGlobalsDefinition::DET_JoinedGame, py::return_value_policy::reference)
		.def_readwrite("DET_SeatSwap", &UWillowDialogGlobalsDefinition::DET_SeatSwap, py::return_value_policy::reference)
		.def_readwrite("DET_VehicleCatchAir", &UWillowDialogGlobalsDefinition::DET_VehicleCatchAir, py::return_value_policy::reference)
		.def_readwrite("VehicleCatchAirHangTime", &UWillowDialogGlobalsDefinition::VehicleCatchAirHangTime)
		.def_readwrite("DET_KilledEnemyVehicle", &UWillowDialogGlobalsDefinition::DET_KilledEnemyVehicle, py::return_value_policy::reference)
		.def_readwrite("DET_VehicleLowHealth", &UWillowDialogGlobalsDefinition::DET_VehicleLowHealth, py::return_value_policy::reference)
		.def_readwrite("VehicleLowHealthThreshold", &UWillowDialogGlobalsDefinition::VehicleLowHealthThreshold)
		.def_readwrite("DET_VehicleFlipped", &UWillowDialogGlobalsDefinition::DET_VehicleFlipped, py::return_value_policy::reference)
		.def_readwrite("DET_RanOverEnemy", &UWillowDialogGlobalsDefinition::DET_RanOverEnemy, py::return_value_policy::reference)
		.def_readwrite("RanOverEnemyMinVelocity", &UWillowDialogGlobalsDefinition::RanOverEnemyMinVelocity)
		.def_readwrite("DET_HitPlayerVehicle", &UWillowDialogGlobalsDefinition::DET_HitPlayerVehicle, py::return_value_policy::reference)
		.def_readwrite("DET_VehicleSpawn", &UWillowDialogGlobalsDefinition::DET_VehicleSpawn, py::return_value_policy::reference)
		.def_readwrite("DET_CriticalHitKill", &UWillowDialogGlobalsDefinition::DET_CriticalHitKill, py::return_value_policy::reference)
		.def_readwrite("DET_CriticalHit", &UWillowDialogGlobalsDefinition::DET_CriticalHit, py::return_value_policy::reference)
		.def_readwrite("DET_OutOfAmmo", &UWillowDialogGlobalsDefinition::DET_OutOfAmmo, py::return_value_policy::reference)
		.def_readwrite("DET_Reloading", &UWillowDialogGlobalsDefinition::DET_Reloading, py::return_value_policy::reference)
		.def_readwrite("WeaponMinRarityLevel", &UWillowDialogGlobalsDefinition::WeaponMinRarityLevel)
		.def_readwrite("DET_RareWeaponEquipped", &UWillowDialogGlobalsDefinition::DET_RareWeaponEquipped, py::return_value_policy::reference)
		.def_readwrite("DET_PlayerIdle", &UWillowDialogGlobalsDefinition::DET_PlayerIdle, py::return_value_policy::reference)
		.def_readwrite("IdleTimeOut", &UWillowDialogGlobalsDefinition::IdleTimeOut)
		.def_readwrite("DET_PlayerDown", &UWillowDialogGlobalsDefinition::DET_PlayerDown, py::return_value_policy::reference)
		.def_readwrite("DET_Death", &UWillowDialogGlobalsDefinition::DET_Death, py::return_value_policy::reference)
		.def_readwrite("DET_DeathByFire", &UWillowDialogGlobalsDefinition::DET_DeathByFire, py::return_value_policy::reference)
		.def_readwrite("DET_DeathByShock", &UWillowDialogGlobalsDefinition::DET_DeathByShock, py::return_value_policy::reference)
		.def_readwrite("DET_Damaged", &UWillowDialogGlobalsDefinition::DET_Damaged, py::return_value_policy::reference)
		.def_readwrite("DET_DamagedCritical", &UWillowDialogGlobalsDefinition::DET_DamagedCritical, py::return_value_policy::reference)
		.def_readwrite("DET_ShieldDown", &UWillowDialogGlobalsDefinition::DET_ShieldDown, py::return_value_policy::reference)
		.def_readwrite("DET_PlayerDownReact", &UWillowDialogGlobalsDefinition::DET_PlayerDownReact, py::return_value_policy::reference)
		.def_readwrite("DET_PlayerDeadReact", &UWillowDialogGlobalsDefinition::DET_PlayerDeadReact, py::return_value_policy::reference)
		.def_readwrite("DET_GrenadeReact", &UWillowDialogGlobalsDefinition::DET_GrenadeReact, py::return_value_policy::reference)
		.def_readwrite("HealedPlayerReviveTriggerValue", &UWillowDialogGlobalsDefinition::HealedPlayerReviveTriggerValue)
		.def_readwrite("DET_HealedPlayer", &UWillowDialogGlobalsDefinition::DET_HealedPlayer, py::return_value_policy::reference)
		.def_readwrite("NPCDialogGroups", &UWillowDialogGlobalsDefinition::NPCDialogGroups, py::return_value_policy::reference)
		.def_readwrite("DET_PlayerLingeringInMenu", &UWillowDialogGlobalsDefinition::DET_PlayerLingeringInMenu, py::return_value_policy::reference)
		.def_readwrite("DET_GenericDismissal", &UWillowDialogGlobalsDefinition::DET_GenericDismissal, py::return_value_policy::reference)
		.def_readwrite("DET_OnUse_AllMissionsInProgress", &UWillowDialogGlobalsDefinition::DET_OnUse_AllMissionsInProgress, py::return_value_policy::reference)
		.def_readwrite("DET_OnUse_MissionComplete", &UWillowDialogGlobalsDefinition::DET_OnUse_MissionComplete, py::return_value_policy::reference)
		.def_readwrite("DET_OnUse_MissionsAvailable", &UWillowDialogGlobalsDefinition::DET_OnUse_MissionsAvailable, py::return_value_policy::reference)
		.def_readwrite("DET_OnUse_NoMissions", &UWillowDialogGlobalsDefinition::DET_OnUse_NoMissions, py::return_value_policy::reference)
		.def_readwrite("DET_MissionTurnedIn", &UWillowDialogGlobalsDefinition::DET_MissionTurnedIn, py::return_value_policy::reference)
		.def_readwrite("DET_Provoked", &UWillowDialogGlobalsDefinition::DET_Provoked, py::return_value_policy::reference)
		.def_readwrite("DET_Unprovoked", &UWillowDialogGlobalsDefinition::DET_Unprovoked, py::return_value_policy::reference)
		.def_readwrite("DET_Dodge", &UWillowDialogGlobalsDefinition::DET_Dodge, py::return_value_policy::reference)
		.def_readwrite("DET_ReacquireTarget", &UWillowDialogGlobalsDefinition::DET_ReacquireTarget, py::return_value_policy::reference)
		.def_readwrite("OnStartEchoCallBehaviors", &UWillowDialogGlobalsDefinition::OnStartEchoCallBehaviors, py::return_value_policy::reference)
		.def_readwrite("OnStopEchoCallBehaviors", &UWillowDialogGlobalsDefinition::OnStopEchoCallBehaviors, py::return_value_policy::reference)
		.def_readwrite("EchoScreenParticleModifiers", &UWillowDialogGlobalsDefinition::EchoScreenParticleModifiers, py::return_value_policy::reference)
		.def_readwrite("DET_IncomingChampion", &UWillowDialogGlobalsDefinition::DET_IncomingChampion, py::return_value_policy::reference)
		.def_readwrite("MapOpenTriggerTime", &UWillowDialogGlobalsDefinition::MapOpenTriggerTime)
		.def_readwrite("DET_MapOpenRemark", &UWillowDialogGlobalsDefinition::DET_MapOpenRemark, py::return_value_policy::reference)
		.def_readwrite("SkillsOpenTriggerTime", &UWillowDialogGlobalsDefinition::SkillsOpenTriggerTime)
		.def_readwrite("DET_SkillPointToSpend", &UWillowDialogGlobalsDefinition::DET_SkillPointToSpend, py::return_value_policy::reference)
		.def_readwrite("ComparisonOpenTriggerTime", &UWillowDialogGlobalsDefinition::ComparisonOpenTriggerTime)
		.def_readwrite("DET_CompareItems", &UWillowDialogGlobalsDefinition::DET_CompareItems, py::return_value_policy::reference)
		.def_readwrite("TravelBlockedActorDistance", &UWillowDialogGlobalsDefinition::TravelBlockedActorDistance)
		.def_readwrite("DET_TravelBlocked", &UWillowDialogGlobalsDefinition::DET_TravelBlocked, py::return_value_policy::reference)
		.def_readwrite("DET_Taunt", &UWillowDialogGlobalsDefinition::DET_Taunt, py::return_value_policy::reference)
		.def_readwrite("ActivePlotMissionMinPriority", &UWillowDialogGlobalsDefinition::ActivePlotMissionMinPriority, py::return_value_policy::reference)
		.def_readwrite("ActiveSideMissionMinPriority", &UWillowDialogGlobalsDefinition::ActiveSideMissionMinPriority, py::return_value_policy::reference)
		.def_readwrite("ActiveMissionMinPriorityStart", &UWillowDialogGlobalsDefinition::ActiveMissionMinPriorityStart, py::return_value_policy::reference)
		.def_readwrite("SideMissionKickoffPriority", &UWillowDialogGlobalsDefinition::SideMissionKickoffPriority, py::return_value_policy::reference)
		.def("TriggerTemplateEvent", &UWillowDialogGlobalsDefinition::TriggerTemplateEvent)
		.def("StaticTriggerTemplateEvent", &UWillowDialogGlobalsDefinition::StaticTriggerTemplateEvent)
		.def("Get", &UWillowDialogGlobalsDefinition::Get, py::return_value_policy::reference)
		;
	py::class_< UWillowDialogManager, UGearboxDialogManager >(m, "UWillowDialogManager")
		.def_readwrite("EchoActor", &UWillowDialogManager::EchoActor, py::return_value_policy::reference)
		.def_readwrite("EchoEmote", &UWillowDialogManager::EchoEmote, py::return_value_policy::reference)
		.def_readwrite("PureEchoActors", &UWillowDialogManager::PureEchoActors, py::return_value_policy::reference)
		.def_readwrite("QueuedPersonalEcho", &UWillowDialogManager::QueuedPersonalEcho, py::return_value_policy::reference)
		.def("PlayPersonalEchoLog", &UWillowDialogManager::PlayPersonalEchoLog)
		.def("IsMissionKickoffPlaying", &UWillowDialogManager::IsMissionKickoffPlaying)
		.def("GetPriorityForEchoActor", &UWillowDialogManager::GetPriorityForEchoActor)
		.def("Cleanup", &UWillowDialogManager::Cleanup)
		.def("PlayEchoDialog", &UWillowDialogManager::PlayEchoDialog)
		;
	py::class_< UWillowDialogNameTag, UGearboxDialogNameTag >(m, "UWillowDialogNameTag")
		.def_readwrite("CallerName", &UWillowDialogNameTag::CallerName, py::return_value_policy::reference)
		.def_readwrite("DefaultEchoPortrait", &UWillowDialogNameTag::DefaultEchoPortrait, py::return_value_policy::reference)
		.def_readwrite("EmotePortraits", &UWillowDialogNameTag::EmotePortraits, py::return_value_policy::reference)
		.def_readwrite("EmoteStances", &UWillowDialogNameTag::EmoteStances, py::return_value_policy::reference)
		.def_readwrite("DlcExpansion", &UWillowDialogNameTag::DlcExpansion, py::return_value_policy::reference)
		.def("EndStance", &UWillowDialogNameTag::EndStance)
		.def("BeginStance", &UWillowDialogNameTag::BeginStance)
		.def("StaticHideEchoPortrait", &UWillowDialogNameTag::StaticHideEchoPortrait)
		.def("StaticShowEchoPortrait", &UWillowDialogNameTag::StaticShowEchoPortrait)
		;
	py::class_< UWillowDialogVar_InstanceData, UGearboxDialogVariable >(m, "UWillowDialogVar_InstanceData")
		.def_readwrite("InstanceDataName", &UWillowDialogVar_InstanceData::InstanceDataName, py::return_value_policy::reference)
		;
	py::class_< UWillowDialogVar_Passenger, UGearboxDialogVariable >(m, "UWillowDialogVar_Passenger")
		;
	py::class_< UWillowDownloadableContentManager, UDownloadableContentManager >(m, "UWillowDownloadableContentManager")
		.def_readwrite("ContentPackages", &UWillowDownloadableContentManager::ContentPackages, py::return_value_policy::reference)
		.def_readwrite("AllContent", &UWillowDownloadableContentManager::AllContent, py::return_value_policy::reference)
		.def_readwrite("Expansions", &UWillowDownloadableContentManager::Expansions, py::return_value_policy::reference)
		.def_readwrite("Characters", &UWillowDownloadableContentManager::Characters, py::return_value_policy::reference)
		.def_readwrite("Vehicles", &UWillowDownloadableContentManager::Vehicles, py::return_value_policy::reference)
		.def_readwrite("Items", &UWillowDownloadableContentManager::Items, py::return_value_policy::reference)
		.def_readwrite("Customizations", &UWillowDownloadableContentManager::Customizations, py::return_value_policy::reference)
		.def_readwrite("AssetLibraries", &UWillowDownloadableContentManager::AssetLibraries, py::return_value_policy::reference)
		.def_readwrite("AsyncPackageLoadsPending", &UWillowDownloadableContentManager::AsyncPackageLoadsPending)
		.def_readwrite("DlcFullyLoadedPackageReferencers", &UWillowDownloadableContentManager::DlcFullyLoadedPackageReferencers, py::return_value_policy::reference)
		.def_readwrite("CurrentInstallState", &UWillowDownloadableContentManager::CurrentInstallState)
		.def_readwrite("LoadedPackages", &UWillowDownloadableContentManager::LoadedPackages, py::return_value_policy::reference)
		.def_readwrite("CachedCompatibilityInfo", &UWillowDownloadableContentManager::CachedCompatibilityInfo, py::return_value_policy::reference)
		.def_readwrite("CachedSimplePackageLicenseInfo", &UWillowDownloadableContentManager::CachedSimplePackageLicenseInfo, py::return_value_policy::reference)
		.def_readwrite("SeasonPassOfferIds", &UWillowDownloadableContentManager::SeasonPassOfferIds, py::return_value_policy::reference)
		.def_readwrite("SeasonPassPackageCounts", &UWillowDownloadableContentManager::SeasonPassPackageCounts, py::return_value_policy::reference)
		.def_readwrite("NewOfferVersion", &UWillowDownloadableContentManager::NewOfferVersion)
		.def_readwrite("NewOfferIds", &UWillowDownloadableContentManager::NewOfferIds, py::return_value_policy::reference)
		.def_readwrite("DLCMissions", &UWillowDownloadableContentManager::DLCMissions, py::return_value_policy::reference)
		.def_readwrite("OnlineCompatibilityInfo", &UWillowDownloadableContentManager::OnlineCompatibilityInfo, py::return_value_policy::reference)
		.def_readwrite("CompatibilityContentInstallInterval", &UWillowDownloadableContentManager::CompatibilityContentInstallInterval)
		.def_readwrite("NextDlcContentInstallNotificationTimeRemaining", &UWillowDownloadableContentManager::NextDlcContentInstallNotificationTimeRemaining)
		.def_readwrite("GoldenKeyCollection", &UWillowDownloadableContentManager::GoldenKeyCollection, py::return_value_policy::reference)
		.def_readwrite("DownloadableBalanceModifiers", &UWillowDownloadableContentManager::DownloadableBalanceModifiers, py::return_value_policy::reference)
		.def_readwrite("TaggedDLC", &UWillowDownloadableContentManager::TaggedDLC, py::return_value_policy::reference)
		.def_readwrite("FastTravelAccessibilityTimes", &UWillowDownloadableContentManager::FastTravelAccessibilityTimes, py::return_value_policy::reference)
		.def_readwrite("CachedExtendedLicenseInfo", &UWillowDownloadableContentManager::CachedExtendedLicenseInfo, py::return_value_policy::reference)
		.def("GetSeasonPassPackageCount", &UWillowDownloadableContentManager::GetSeasonPassPackageCount)
		.def("HasSeasonPassContentToInstall", &UWillowDownloadableContentManager::HasSeasonPassContentToInstall)
		.def("HasFutureSeasonPassContentToInstall", &UWillowDownloadableContentManager::HasFutureSeasonPassContentToInstall)
		.def("GetNumberOfLicensedLevelCapUpgrades", &UWillowDownloadableContentManager::GetNumberOfLicensedLevelCapUpgrades)
		.def("GetGoldenKeys", &UWillowDownloadableContentManager::GetGoldenKeys, py::return_value_policy::reference)
		.def("AddGoldenKey", &UWillowDownloadableContentManager::AddGoldenKey)
		.def("StaticIsMarketplaceOfferType", &UWillowDownloadableContentManager::StaticIsMarketplaceOfferType)
		.def("GetCompatibilityPackOfferId", &UWillowDownloadableContentManager::GetCompatibilityPackOfferId)
		.def("GetCompatibilityPackInstalledState", &UWillowDownloadableContentManager::GetCompatibilityPackInstalledState, py::return_value_policy::reference)
		.def("NeedsCompatibilityPack", &UWillowDownloadableContentManager::NeedsCompatibilityPack)
		.def("HasCompatibilityData", &UWillowDownloadableContentManager::HasCompatibilityData)
		.def("ResetDlcCompatInstallRemindTimer", &UWillowDownloadableContentManager::ResetDlcCompatInstallRemindTimer)
		.def("TriggerRefreshComplete", &UWillowDownloadableContentManager::TriggerRefreshComplete)
		.def("IsNewOffer", &UWillowDownloadableContentManager::IsNewOffer)
		.def("GetFreeOfferAssociatedWithPaidOffer", &UWillowDownloadableContentManager::GetFreeOfferAssociatedWithPaidOffer)
		.def("StaticGetDlcContentIdForCurrentMap", &UWillowDownloadableContentManager::StaticGetDlcContentIdForCurrentMap, py::return_value_policy::reference)
		.def("StaticGetDlcContentIdForMap", &UWillowDownloadableContentManager::StaticGetDlcContentIdForMap, py::return_value_policy::reference)
		.def("ValidateInstalledContentReachability", &UWillowDownloadableContentManager::ValidateInstalledContentReachability)
		.def("GetDownloadableContentDefinitionFromDlcContentId", &UWillowDownloadableContentManager::GetDownloadableContentDefinitionFromDlcContentId, py::return_value_policy::reference)
		.def("GetDownloadableContentDefinitionFromId", &UWillowDownloadableContentManager::GetDownloadableContentDefinitionFromId, py::return_value_policy::reference)
		.def("GetDownloadablePackageDefinitionFromId", &UWillowDownloadableContentManager::GetDownloadablePackageDefinitionFromId, py::return_value_policy::reference)
		.def("GetDownloadablePackageDefinitionFromDLCName", &UWillowDownloadableContentManager::GetDownloadablePackageDefinitionFromDLCName, py::return_value_policy::reference)
		.def("GetDlcIniPath", &UWillowDownloadableContentManager::GetDlcIniPath, py::return_value_policy::reference)
		.def("IsContentInstalled", &UWillowDownloadableContentManager::IsContentInstalled)
		.def("IsContentLicensed", &UWillowDownloadableContentManager::IsContentLicensed)
		.def("IsPackageFullyInstalled", &UWillowDownloadableContentManager::IsPackageFullyInstalled)
		.def("IsPackageFullyLicensed", &UWillowDownloadableContentManager::IsPackageFullyLicensed)
		.def("FindExpansionForMap", &UWillowDownloadableContentManager::FindExpansionForMap, py::return_value_policy::reference)
		.def("FindMatchingDlcLevelTravelDestination", &UWillowDownloadableContentManager::FindMatchingDlcLevelTravelDestination, py::return_value_policy::reference)
		.def("OfferBelongsToSeasonPass", [](UWillowDownloadableContentManager &self , int OfferId) { int* pySeasonPassOfferId = (int*)malloc(sizeof(int)) ;  bool ret =  self.OfferBelongsToSeasonPass(OfferId, pySeasonPassOfferId); return py::make_tuple(ret, *pySeasonPassOfferId); })
		;
	py::class_< AWillowDynamicNavMeshConnectionPoint, ANavigationPoint >(m, "AWillowDynamicNavMeshConnectionPoint")
		.def_property("bIsOnValidNavMesh", [](AWillowDynamicNavMeshConnectionPoint &self){return self.bIsOnValidNavMesh;}, [](AWillowDynamicNavMeshConnectionPoint &self, bool value){self.bIsOnValidNavMesh = value ? 1 : 0;})
		.def_property("bEnabled", [](AWillowDynamicNavMeshConnectionPoint &self){return self.bEnabled;}, [](AWillowDynamicNavMeshConnectionPoint &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_readwrite("VfTable_IIGBXNavMeshSpecialMove", &AWillowDynamicNavMeshConnectionPoint::VfTable_IIGBXNavMeshSpecialMove, py::return_value_policy::reference)
		.def_readwrite("Connections", &AWillowDynamicNavMeshConnectionPoint::Connections, py::return_value_policy::reference)
		.def_readwrite("PointsThatConnectToMe", &AWillowDynamicNavMeshConnectionPoint::PointsThatConnectToMe, py::return_value_policy::reference)
		.def_readwrite("PositionOnNavMesh", &AWillowDynamicNavMeshConnectionPoint::PositionOnNavMesh, py::return_value_policy::reference)
		.def("OnToggle", &AWillowDynamicNavMeshConnectionPoint::OnToggle)
		;
	py::class_< UWillowDynamicNavMeshConnectionPointRenderingComponent, UPrimitiveComponent >(m, "UWillowDynamicNavMeshConnectionPointRenderingComponent")
		.def_readwrite("ConnectionValidColor", &UWillowDynamicNavMeshConnectionPointRenderingComponent::ConnectionValidColor, py::return_value_policy::reference)
		.def_readwrite("ConnectionInvalidColor", &UWillowDynamicNavMeshConnectionPointRenderingComponent::ConnectionInvalidColor, py::return_value_policy::reference)
		;
	py::class_< AWillowDynamicPathBlockingVolume, AVolume >(m, "AWillowDynamicPathBlockingVolume")
		.def_property("bEnabled", [](AWillowDynamicPathBlockingVolume &self){return self.bEnabled;}, [](AWillowDynamicPathBlockingVolume &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_readwrite("VfTable_IIGBXNavMeshObstacle", &AWillowDynamicPathBlockingVolume::VfTable_IIGBXNavMeshObstacle, py::return_value_policy::reference)
		.def_readwrite("BlockedAllegiances", &AWillowDynamicPathBlockingVolume::BlockedAllegiances, py::return_value_policy::reference)
		.def("OnToggle", &AWillowDynamicPathBlockingVolume::OnToggle)
		;
	py::class_< UWillowEffectCoordinator, UObject >(m, "UWillowEffectCoordinator")
		.def_readwrite("SupportedEffects", &UWillowEffectCoordinator::SupportedEffects, py::return_value_policy::reference)
		.def_readwrite("ManagedParticlesReserveLength", &UWillowEffectCoordinator::ManagedParticlesReserveLength)
		.def_readwrite("ManagedAudioReserveLength", &UWillowEffectCoordinator::ManagedAudioReserveLength)
		.def_readwrite("ExternalComponentsReserveLength", &UWillowEffectCoordinator::ExternalComponentsReserveLength)
		.def_readwrite("Processes", &UWillowEffectCoordinator::Processes, py::return_value_policy::reference)
		.def_readwrite("ExternalComponents", &UWillowEffectCoordinator::ExternalComponents, py::return_value_policy::reference)
		.def_readwrite("ManagedParticles", &UWillowEffectCoordinator::ManagedParticles, py::return_value_policy::reference)
		.def_readwrite("ManagedAudio", &UWillowEffectCoordinator::ManagedAudio, py::return_value_policy::reference)
		.def_readwrite("ManagedAudioFreeList", &UWillowEffectCoordinator::ManagedAudioFreeList, py::return_value_policy::reference)
		.def_readwrite("ManagedParticlesFreeList", &UWillowEffectCoordinator::ManagedParticlesFreeList, py::return_value_policy::reference)
		.def_readwrite("ExternalComponentsFreeList", &UWillowEffectCoordinator::ExternalComponentsFreeList, py::return_value_policy::reference)
		.def_readwrite("__OnEffectComplete__Delegate", &UWillowEffectCoordinator::__OnEffectComplete__Delegate, py::return_value_policy::reference)
		.def("StaticHandleReplicatedEffect", &UWillowEffectCoordinator::StaticHandleReplicatedEffect)
		.def("HasEffect", &UWillowEffectCoordinator::HasEffect)
		.def("PopEffect", &UWillowEffectCoordinator::PopEffect)
		.def("PushEffect", &UWillowEffectCoordinator::PushEffect)
		.def("PopMutex", &UWillowEffectCoordinator::PopMutex)
		.def("PopAllEffects", &UWillowEffectCoordinator::PopAllEffects)
		.def("OnEffectComplete", &UWillowEffectCoordinator::OnEffectComplete)
		.def("GetBaseMaterials", [](UWillowEffectCoordinator &self , class UMeshComponent* Mesh, TArray< class UMaterialInterface* >* MaterialResult) { int* pyCurrentBaseIndex = (int*)malloc(sizeof(int)) ;   self.GetBaseMaterials(Mesh, MaterialResult, pyCurrentBaseIndex); return py::make_tuple(*pyCurrentBaseIndex); })
		;
	py::class_< AWillowElevator, AInterpActor >(m, "AWillowElevator")
		.def_property("bEnabled", [](AWillowElevator &self){return self.bEnabled;}, [](AWillowElevator &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_property("bMoving", [](AWillowElevator &self){return self.bMoving;}, [](AWillowElevator &self, bool value){self.bMoving = value ? 1 : 0;})
		.def_readwrite("FloorIndex", &AWillowElevator::FloorIndex)
		.def_readwrite("DestFloorIndex", &AWillowElevator::DestFloorIndex)
		.def_readwrite("InitialFloorIndex", &AWillowElevator::InitialFloorIndex)
		.def_readwrite("Floors", &AWillowElevator::Floors, py::return_value_policy::reference)
		.def_readwrite("Buttons", &AWillowElevator::Buttons, py::return_value_policy::reference)
		.def("ButtonsGoToInUseState", &AWillowElevator::ButtonsGoToInUseState)
		.def("eventButtonsGoToEnabledState", &AWillowElevator::eventButtonsGoToEnabledState)
		.def("OnToggle", &AWillowElevator::OnToggle)
		.def("SetDestFloorIndex", &AWillowElevator::SetDestFloorIndex)
		.def("eventButtonPushed", &AWillowElevator::eventButtonPushed)
		.def("TryGoToInitialState", &AWillowElevator::TryGoToInitialState)
		.def("ChildEncroachingOn", &AWillowElevator::ChildEncroachingOn)
		.def("PostBeginPlay", &AWillowElevator::PostBeginPlay)
		;
	py::class_< UWillowElevatorRenderingComponent, UPrimitiveComponent >(m, "UWillowElevatorRenderingComponent")
		;
	py::class_< AWillowEmitter, AEmitter >(m, "AWillowEmitter")
		.def_property("bOwnerNoSeeEmitter", [](AWillowEmitter &self){return self.bOwnerNoSeeEmitter;}, [](AWillowEmitter &self, bool value){self.bOwnerNoSeeEmitter = value ? 1 : 0;})
		.def_readwrite("NetCullDistanceSquared", &AWillowEmitter::NetCullDistanceSquared)
		.def("SetOwnerNoSeeEmitter", &AWillowEmitter::SetOwnerNoSeeEmitter)
		.def("eventReplicatedEvent", &AWillowEmitter::eventReplicatedEvent)
		;
	py::class_< AStatusEffectReplicatedEmitter, AWillowEmitter >(m, "AStatusEffectReplicatedEmitter")
		.def_property("bIgnite", [](AStatusEffectReplicatedEmitter &self){return self.bIgnite;}, [](AStatusEffectReplicatedEmitter &self, bool value){self.bIgnite = value ? 1 : 0;})
		.def_property("bCorrosive", [](AStatusEffectReplicatedEmitter &self){return self.bCorrosive;}, [](AStatusEffectReplicatedEmitter &self, bool value){self.bCorrosive = value ? 1 : 0;})
		.def_property("bShock", [](AStatusEffectReplicatedEmitter &self){return self.bShock;}, [](AStatusEffectReplicatedEmitter &self, bool value){self.bShock = value ? 1 : 0;})
		.def_property("bAmp", [](AStatusEffectReplicatedEmitter &self){return self.bAmp;}, [](AStatusEffectReplicatedEmitter &self, bool value){self.bAmp = value ? 1 : 0;})
		.def_property("bSlow", [](AStatusEffectReplicatedEmitter &self){return self.bSlow;}, [](AStatusEffectReplicatedEmitter &self, bool value){self.bSlow = value ? 1 : 0;})
		.def_property("bHealing", [](AStatusEffectReplicatedEmitter &self){return self.bHealing;}, [](AStatusEffectReplicatedEmitter &self, bool value){self.bHealing = value ? 1 : 0;})
		.def_readwrite("EmitterTemplate", &AStatusEffectReplicatedEmitter::EmitterTemplate, py::return_value_policy::reference)
		.def_readwrite("ServerLifeSpan", &AStatusEffectReplicatedEmitter::ServerLifeSpan)
		.def_readwrite("RandomTTL", &AStatusEffectReplicatedEmitter::RandomTTL)
		.def_readwrite("AccumulatedTime", &AStatusEffectReplicatedEmitter::AccumulatedTime)
		.def_readwrite("BaseTarget", &AStatusEffectReplicatedEmitter::BaseTarget, py::return_value_policy::reference)
		.def("eventTearOff", &AStatusEffectReplicatedEmitter::eventTearOff)
		.def("ChooseRandomTTL", &AStatusEffectReplicatedEmitter::ChooseRandomTTL)
		.def("eventBaseChange", &AStatusEffectReplicatedEmitter::eventBaseChange)
		.def("eventTornOff", &AStatusEffectReplicatedEmitter::eventTornOff)
		.def("eventSetTemplate", &AStatusEffectReplicatedEmitter::eventSetTemplate)
		.def("IsEnabled", &AStatusEffectReplicatedEmitter::IsEnabled)
		.def("GetParameterName", &AStatusEffectReplicatedEmitter::GetParameterName, py::return_value_policy::reference)
		.def("ResetDistributionForEffect", &AStatusEffectReplicatedEmitter::ResetDistributionForEffect)
		.def("eventUpdateDistributions", &AStatusEffectReplicatedEmitter::eventUpdateDistributions)
		.def("GetEffectCount", &AStatusEffectReplicatedEmitter::GetEffectCount)
		.def("UpdateEffect", &AStatusEffectReplicatedEmitter::UpdateEffect)
		.def("eventReplicatedEvent", &AStatusEffectReplicatedEmitter::eventReplicatedEvent)
		.def("PostBeginPlay", &AStatusEffectReplicatedEmitter::PostBeginPlay)
		;
	py::class_< UWillowExperiencePipeline, UObject >(m, "UWillowExperiencePipeline")
		.def("AwardCombatExperienceToParty", &UWillowExperiencePipeline::AwardCombatExperienceToParty)
		.def("CalculateExperiencePointsForKill", &UWillowExperiencePipeline::CalculateExperiencePointsForKill)
		;
	py::class_< UWillowExposureUtilityStrategy, UExposureUtilityStrategy >(m, "UWillowExposureUtilityStrategy")
		;
	py::class_< UWillowForcedReachSpec, UForcedReachSpec >(m, "UWillowForcedReachSpec")
		.def("eventDoSpecialMove", &UWillowForcedReachSpec::eventDoSpecialMove)
		;
	py::class_< UWillowGameEngine, UGearboxEngine >(m, "UWillowGameEngine")
		.def_property("bPauseLostFocusWindowed", [](UWillowGameEngine &self){return self.bPauseLostFocusWindowed;}, [](UWillowGameEngine &self, bool value){self.bPauseLostFocusWindowed = value ? 1 : 0;})
		.def_property("bWasPaused", [](UWillowGameEngine &self){return self.bWasPaused;}, [](UWillowGameEngine &self, bool value){self.bWasPaused = value ? 1 : 0;})
		.def_property("bIsTickingCIV", [](UWillowGameEngine &self){return self.bIsTickingCIV;}, [](UWillowGameEngine &self, bool value){self.bIsTickingCIV = value ? 1 : 0;})
		.def_property("bCIVEnabled", [](UWillowGameEngine &self){return self.bCIVEnabled;}, [](UWillowGameEngine &self, bool value){self.bCIVEnabled = value ? 1 : 0;})
		.def_readwrite("VfTable_ISparkUpdateCallback", &UWillowGameEngine::VfTable_ISparkUpdateCallback, py::return_value_policy::reference)
		.def_readwrite("SourceMapName", &UWillowGameEngine::SourceMapName, py::return_value_policy::reference)
		.def_readwrite("DestMapName", &UWillowGameEngine::DestMapName, py::return_value_policy::reference)
		.def_readwrite("LastNonFakeEntrySourceMapName", &UWillowGameEngine::LastNonFakeEntrySourceMapName, py::return_value_policy::reference)
		.def_readwrite("LevelChangeState", &UWillowGameEngine::LevelChangeState)
		.def_readwrite("FullyLoadedIniPackages", &UWillowGameEngine::FullyLoadedIniPackages, py::return_value_policy::reference)
		.def_readwrite("TimeBetweenCIVTicks", &UWillowGameEngine::TimeBetweenCIVTicks)
		.def_readwrite("LastCIVCheckTime", &UWillowGameEngine::LastCIVCheckTime)
		.def_readwrite("OverlappedCIV", &UWillowGameEngine::OverlappedCIV, py::return_value_policy::reference)
		.def("FastTravelIsAccessibleForTime", &UWillowGameEngine::FastTravelIsAccessibleForTime)
		.def("CheckCIV", &UWillowGameEngine::CheckCIV)
		.def("eventGetTransitionLandmark", &UWillowGameEngine::eventGetTransitionLandmark, py::return_value_policy::reference)
		.def("eventTeleportPlayer", &UWillowGameEngine::eventTeleportPlayer)
		.def("eventUnpauseForLevelLoad", &UWillowGameEngine::eventUnpauseForLevelLoad)
		.def("eventPauseForLevelLoad", &UWillowGameEngine::eventPauseForLevelLoad)
		.def("CanUnpause", &UWillowGameEngine::CanUnpause)
		;
	py::class_< AWillowCoopGameInfo, AWillowGameInfo >(m, "AWillowCoopGameInfo")
		.def_property("bSomeoneJustJoined", [](AWillowCoopGameInfo &self){return self.bSomeoneJustJoined;}, [](AWillowCoopGameInfo &self, bool value){self.bSomeoneJustJoined = value ? 1 : 0;})
		.def_readwrite("Teams", &AWillowCoopGameInfo::Teams, py::return_value_policy::reference)
		.def("InitializeTeams", &AWillowCoopGameInfo::InitializeTeams)
		.def("eventGetSeamlessTravelActorList", &AWillowCoopGameInfo::eventGetSeamlessTravelActorList)
		.def("eventPostSeamlessTravel", &AWillowCoopGameInfo::eventPostSeamlessTravel)
		.def("DisableFakePauseFor", &AWillowCoopGameInfo::DisableFakePauseFor)
		.def("OverrideCanUnpauseInternalUI", &AWillowCoopGameInfo::OverrideCanUnpauseInternalUI)
		.def("ProcessLeviathanPlayerLeft", &AWillowCoopGameInfo::ProcessLeviathanPlayerLeft)
		.def("ProcessLeviathanPlayerJoined", &AWillowCoopGameInfo::ProcessLeviathanPlayerJoined)
		.def("GetLeviathanPlayerType", &AWillowCoopGameInfo::GetLeviathanPlayerType)
		.def("UpdatePartyLeader", &AWillowCoopGameInfo::UpdatePartyLeader)
		.def("Logout", &AWillowCoopGameInfo::Logout)
		.def("eventPostLogin", &AWillowCoopGameInfo::eventPostLogin)
		.def("AllowPausing", &AWillowCoopGameInfo::AllowPausing)
		.def("IsHumanControlled", &AWillowCoopGameInfo::IsHumanControlled)
		.def("eventShouldOverrideDamageTypeForHealing", &AWillowCoopGameInfo::eventShouldOverrideDamageTypeForHealing)
		.def("eventGetHealingDamageTypeDefinition", &AWillowCoopGameInfo::eventGetHealingDamageTypeDefinition, py::return_value_policy::reference)
		.def("ConvertDamageToHealing", &AWillowCoopGameInfo::ConvertDamageToHealing)
		.def("IsFriendlyFire", &AWillowCoopGameInfo::IsFriendlyFire)
		.def("ChangeTeam", &AWillowCoopGameInfo::ChangeTeam)
		.def("PickTeam", &AWillowCoopGameInfo::PickTeam)
		.def("CreateTeam", &AWillowCoopGameInfo::CreateTeam)
		.def("eventHandleSeamlessTravelPlayer", [](AWillowCoopGameInfo &self ) { class AController** pyC = 0 ;   self.eventHandleSeamlessTravelPlayer(pyC); return py::make_tuple(*pyC); })
		.def("ReduceDamage", [](AWillowCoopGameInfo &self , class APawn* injured, class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class UIDamageCauser* DamageCauser, class UDamagePipeline* Pipeline, struct FVector* Momentum) { float* pyDamage = (float*)malloc(sizeof(float)) ;   self.ReduceDamage(injured, InstigatedBy, HitLocation, DamageType, DamageCauser, Pipeline, pyDamage, Momentum); return py::make_tuple(*pyDamage); })
		;
	py::class_< AWillowGameReplicationInfo, AGameReplicationInfo >(m, "AWillowGameReplicationInfo")
		.def_property("HardcoreMode", [](AWillowGameReplicationInfo &self){return self.HardcoreMode;}, [](AWillowGameReplicationInfo &self, bool value){self.HardcoreMode = value ? 1 : 0;})
		.def_property("bHasBossBar", [](AWillowGameReplicationInfo &self){return self.bHasBossBar;}, [](AWillowGameReplicationInfo &self, bool value){self.bHasBossBar = value ? 1 : 0;})
		.def_property("ReplicatedBossHasShield", [](AWillowGameReplicationInfo &self){return self.ReplicatedBossHasShield;}, [](AWillowGameReplicationInfo &self, bool value){self.ReplicatedBossHasShield = value ? 1 : 0;})
		.def_property("DisplayedBossHasShield", [](AWillowGameReplicationInfo &self){return self.DisplayedBossHasShield;}, [](AWillowGameReplicationInfo &self, bool value){self.DisplayedBossHasShield = value ? 1 : 0;})
		.def_property("bPlayersSoundLikeJack", [](AWillowGameReplicationInfo &self){return self.bPlayersSoundLikeJack;}, [](AWillowGameReplicationInfo &self, bool value){self.bPlayersSoundLikeJack = value ? 1 : 0;})
		.def_readwrite("RadarMgr", &AWillowGameReplicationInfo::RadarMgr, py::return_value_policy::reference)
		.def_readwrite("ActiveRespawnCheckpointTeleportActor", &AWillowGameReplicationInfo::ActiveRespawnCheckpointTeleportActor, py::return_value_policy::reference)
		.def_readwrite("CachedBossHasShield", &AWillowGameReplicationInfo::CachedBossHasShield)
		.def_readwrite("MatchmakingState", &AWillowGameReplicationInfo::MatchmakingState)
		.def_readwrite("StartGameState", &AWillowGameReplicationInfo::StartGameState)
		.def_readwrite("FastTravelLocations", &AWillowGameReplicationInfo::FastTravelLocations, py::return_value_policy::reference)
		.def_readwrite("TimeOfDay", &AWillowGameReplicationInfo::TimeOfDay)
		.def_readwrite("DayNightCycleRate", &AWillowGameReplicationInfo::DayNightCycleRate)
		.def_readwrite("DayNightCycleRateBaseValue", &AWillowGameReplicationInfo::DayNightCycleRateBaseValue)
		.def_readwrite("DayNightCycleRateModifierStack", &AWillowGameReplicationInfo::DayNightCycleRateModifierStack, py::return_value_policy::reference)
		.def_readwrite("SecondsUntilShopsReset", &AWillowGameReplicationInfo::SecondsUntilShopsReset)
		.def_readwrite("ShopTimerRate", &AWillowGameReplicationInfo::ShopTimerRate)
		.def_readwrite("bAnyPlayerAttemptedFastTravel", &AWillowGameReplicationInfo::bAnyPlayerAttemptedFastTravel)
		.def_readwrite("bAnyPlayerEnteredVehicle", &AWillowGameReplicationInfo::bAnyPlayerEnteredVehicle)
		.def_readwrite("CurrentPlaythrough", &AWillowGameReplicationInfo::CurrentPlaythrough)
		.def_readwrite("PlaythroughOverride", &AWillowGameReplicationInfo::PlaythroughOverride)
		.def_readwrite("ReplicatedClientFlags", &AWillowGameReplicationInfo::ReplicatedClientFlags, py::return_value_policy::reference)
		.def_readwrite("MissionTracker", &AWillowGameReplicationInfo::MissionTracker, py::return_value_policy::reference)
		.def_readwrite("StartGameTimer", &AWillowGameReplicationInfo::StartGameTimer)
		.def_readwrite("BossPawn", &AWillowGameReplicationInfo::BossPawn, py::return_value_policy::reference)
		.def_readwrite("BossName", &AWillowGameReplicationInfo::BossName, py::return_value_policy::reference)
		.def_readwrite("BossLevel", &AWillowGameReplicationInfo::BossLevel)
		.def_readwrite("ReplicatedBossHealth", &AWillowGameReplicationInfo::ReplicatedBossHealth)
		.def_readwrite("ReplicatedBossShield", &AWillowGameReplicationInfo::ReplicatedBossShield)
		.def_readwrite("CachedBossHealth", &AWillowGameReplicationInfo::CachedBossHealth)
		.def_readwrite("CachedBossShield", &AWillowGameReplicationInfo::CachedBossShield)
		.def_readwrite("DisplayedBossHealth", &AWillowGameReplicationInfo::DisplayedBossHealth)
		.def_readwrite("DisplayedBossShield", &AWillowGameReplicationInfo::DisplayedBossShield)
		.def_readwrite("PlayerRemovedDelegates", &AWillowGameReplicationInfo::PlayerRemovedDelegates, py::return_value_policy::reference)
		.def_readwrite("PlayerNameUpdatedDelegates", &AWillowGameReplicationInfo::PlayerNameUpdatedDelegates, py::return_value_policy::reference)
		.def_readwrite("PlayerUidUpdatedDelegates", &AWillowGameReplicationInfo::PlayerUidUpdatedDelegates, py::return_value_policy::reference)
		.def_readwrite("PlayerCharacterClassUpdatedDelegates", &AWillowGameReplicationInfo::PlayerCharacterClassUpdatedDelegates, py::return_value_policy::reference)
		.def_readwrite("PlayerExpLevelUpdatedDelegates", &AWillowGameReplicationInfo::PlayerExpLevelUpdatedDelegates, py::return_value_policy::reference)
		.def_readwrite("OverpowerLevelModifier", &AWillowGameReplicationInfo::OverpowerLevelModifier)
		.def_readwrite("MatchmakingStateChangedDelegates", &AWillowGameReplicationInfo::MatchmakingStateChangedDelegates, py::return_value_policy::reference)
		.def_readwrite("MenuMatinee", &AWillowGameReplicationInfo::MenuMatinee, py::return_value_policy::reference)
		.def_readwrite("MusicAkState", &AWillowGameReplicationInfo::MusicAkState, py::return_value_policy::reference)
		.def_readwrite("NameListDef", &AWillowGameReplicationInfo::NameListDef, py::return_value_policy::reference)
		.def_readwrite("__OnPlayerRemoved__Delegate", &AWillowGameReplicationInfo::__OnPlayerRemoved__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnPlayerNameUpdated__Delegate", &AWillowGameReplicationInfo::__OnPlayerNameUpdated__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnPlayerUidUpdated__Delegate", &AWillowGameReplicationInfo::__OnPlayerUidUpdated__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnPlayerCharacterClassUpdated__Delegate", &AWillowGameReplicationInfo::__OnPlayerCharacterClassUpdated__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnPlayerExpLevelUpdated__Delegate", &AWillowGameReplicationInfo::__OnPlayerExpLevelUpdated__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnMatchmakingStateChanged__Delegate", &AWillowGameReplicationInfo::__OnMatchmakingStateChanged__Delegate, py::return_value_policy::reference)
		.def("NotifyPlaythroughChanged", &AWillowGameReplicationInfo::NotifyPlaythroughChanged)
		.def("NotifyMatchmakingStateChanged", &AWillowGameReplicationInfo::NotifyMatchmakingStateChanged)
		.def("ClearMatchmakingStateChangedDelegate", &AWillowGameReplicationInfo::ClearMatchmakingStateChangedDelegate)
		.def("AddMatchmakingStateChangedDelegate", &AWillowGameReplicationInfo::AddMatchmakingStateChangedDelegate)
		.def("OnMatchmakingStateChanged", &AWillowGameReplicationInfo::OnMatchmakingStateChanged)
		.def("IsNighttime", &AWillowGameReplicationInfo::IsNighttime)
		.def("IsDaytime", &AWillowGameReplicationInfo::IsDaytime)
		.def("ClearNPCAllies", &AWillowGameReplicationInfo::ClearNPCAllies)
		.def("UpdateNPCAlliesInfo", &AWillowGameReplicationInfo::UpdateNPCAlliesInfo)
		.def("FindAvailableNPCAllySlot", &AWillowGameReplicationInfo::FindAvailableNPCAllySlot)
		.def("FindNPCAllyIndex", &AWillowGameReplicationInfo::FindNPCAllyIndex)
		.def("InitNPCAlly", &AWillowGameReplicationInfo::InitNPCAlly)
		.def("UpdateBossBarInfo", &AWillowGameReplicationInfo::UpdateBossBarInfo)
		.def("InitBossBar", &AWillowGameReplicationInfo::InitBossBar)
		.def("NotifyPlayerExpLevelUpdated", &AWillowGameReplicationInfo::NotifyPlayerExpLevelUpdated)
		.def("TriggerPlayerExpLevelUpdatedDelegates", &AWillowGameReplicationInfo::TriggerPlayerExpLevelUpdatedDelegates)
		.def("ClearPlayerExpLevelUpdatedDelegate", &AWillowGameReplicationInfo::ClearPlayerExpLevelUpdatedDelegate)
		.def("AddPlayerExpLevelUpdatedDelegate", &AWillowGameReplicationInfo::AddPlayerExpLevelUpdatedDelegate)
		.def("OnPlayerExpLevelUpdated", &AWillowGameReplicationInfo::OnPlayerExpLevelUpdated)
		.def("NotifyPlayerCharacterClassUpdated", &AWillowGameReplicationInfo::NotifyPlayerCharacterClassUpdated)
		.def("TriggerPlayerCharacterClassUpdatedDelegates", &AWillowGameReplicationInfo::TriggerPlayerCharacterClassUpdatedDelegates)
		.def("ClearPlayerCharacterClassUpdatedDelegate", &AWillowGameReplicationInfo::ClearPlayerCharacterClassUpdatedDelegate)
		.def("AddPlayerCharacterClassUpdatedDelegate", &AWillowGameReplicationInfo::AddPlayerCharacterClassUpdatedDelegate)
		.def("OnPlayerCharacterClassUpdated", &AWillowGameReplicationInfo::OnPlayerCharacterClassUpdated)
		.def("NotifyPlayerUidUpdated", &AWillowGameReplicationInfo::NotifyPlayerUidUpdated)
		.def("TriggerPlayerUidUpdatedDelegates", &AWillowGameReplicationInfo::TriggerPlayerUidUpdatedDelegates)
		.def("ClearPlayerUidUpdatedDelegate", &AWillowGameReplicationInfo::ClearPlayerUidUpdatedDelegate)
		.def("AddPlayerUidUpdatedDelegate", &AWillowGameReplicationInfo::AddPlayerUidUpdatedDelegate)
		.def("OnPlayerUidUpdated", &AWillowGameReplicationInfo::OnPlayerUidUpdated)
		.def("NotifyPlayerNameUpdated", &AWillowGameReplicationInfo::NotifyPlayerNameUpdated)
		.def("TriggerPlayerNameUpdatedDelegates", &AWillowGameReplicationInfo::TriggerPlayerNameUpdatedDelegates)
		.def("ClearPlayerNameUpdatedDelegate", &AWillowGameReplicationInfo::ClearPlayerNameUpdatedDelegate)
		.def("AddPlayerNameUpdatedDelegate", &AWillowGameReplicationInfo::AddPlayerNameUpdatedDelegate)
		.def("OnPlayerNameUpdated", &AWillowGameReplicationInfo::OnPlayerNameUpdated)
		.def("RemovePRI", &AWillowGameReplicationInfo::RemovePRI)
		.def("AddPRI", &AWillowGameReplicationInfo::AddPRI)
		.def("TriggerPlayerRemovedDelegates", &AWillowGameReplicationInfo::TriggerPlayerRemovedDelegates)
		.def("ClearPlayerRemovedDelegate", &AWillowGameReplicationInfo::ClearPlayerRemovedDelegate)
		.def("AddPlayerRemovedDelegate", &AWillowGameReplicationInfo::AddPlayerRemovedDelegate)
		.def("OnPlayerRemoved", &AWillowGameReplicationInfo::OnPlayerRemoved)
		.def("ClientFlagGet", &AWillowGameReplicationInfo::ClientFlagGet)
		.def("ClientFlagSet", &AWillowGameReplicationInfo::ClientFlagSet)
		.def("ClientInitClientFlags", &AWillowGameReplicationInfo::ClientInitClientFlags)
		.def("InitClientFlags", &AWillowGameReplicationInfo::InitClientFlags)
		.def("IsStationInList", &AWillowGameReplicationInfo::IsStationInList)
		.def("AddFastTravelLocation", &AWillowGameReplicationInfo::AddFastTravelLocation)
		.def("InColiseumGameplayMap", &AWillowGameReplicationInfo::InColiseumGameplayMap)
		.def("CacheMenuMatinee", &AWillowGameReplicationInfo::CacheMenuMatinee)
		.def("PostBeginPlay", &AWillowGameReplicationInfo::PostBeginPlay)
		.def("GetDuelGlobals", &AWillowGameReplicationInfo::GetDuelGlobals, py::return_value_policy::reference)
		.def("UpdateJackVoiceModulation", &AWillowGameReplicationInfo::UpdateJackVoiceModulation)
		.def("SetPlayersSoundLikeJack", &AWillowGameReplicationInfo::SetPlayersSoundLikeJack)
		.def("NotifyMissionTrackerCinematicModeChanged", &AWillowGameReplicationInfo::NotifyMissionTrackerCinematicModeChanged)
		.def("eventReplicatedEvent", &AWillowGameReplicationInfo::eventReplicatedEvent)
		.def("ClearFastTravelLocations", &AWillowGameReplicationInfo::ClearFastTravelLocations)
		.def("GetCurrPlaythrough", &AWillowGameReplicationInfo::GetCurrPlaythrough)
		.def("SetPlaythroughOverride", &AWillowGameReplicationInfo::SetPlaythroughOverride)
		.def("SetCurrentPlaythrough", &AWillowGameReplicationInfo::SetCurrentPlaythrough)
		;
	py::class_< UWillowGameViewportClient, UGameViewportClient >(m, "UWillowGameViewportClient")
		.def_property("bCheckedEntry", [](UWillowGameViewportClient &self){return self.bCheckedEntry;}, [](UWillowGameViewportClient &self, bool value){self.bCheckedEntry = value ? 1 : 0;})
		.def_property("bMainMenuMousePressed", [](UWillowGameViewportClient &self){return self.bMainMenuMousePressed;}, [](UWillowGameViewportClient &self, bool value){self.bMainMenuMousePressed = value ? 1 : 0;})
		.def_readwrite("ViewportUI", &UWillowGameViewportClient::ViewportUI, py::return_value_policy::reference)
		.def_readwrite("LoadBackground", &UWillowGameViewportClient::LoadBackground, py::return_value_policy::reference)
		.def_readwrite("LoadingImage", &UWillowGameViewportClient::LoadingImage, py::return_value_policy::reference)
		.def_readwrite("SubtitleProfileDefault", &UWillowGameViewportClient::SubtitleProfileDefault, py::return_value_policy::reference)
		.def_readwrite("SubtitleProfileSplitScreenVertical", &UWillowGameViewportClient::SubtitleProfileSplitScreenVertical, py::return_value_policy::reference)
		.def_readwrite("SubtitleProfileSplitScreenHorizontal", &UWillowGameViewportClient::SubtitleProfileSplitScreenHorizontal, py::return_value_policy::reference)
		.def_readwrite("SubtitleProfileCinematic", &UWillowGameViewportClient::SubtitleProfileCinematic, py::return_value_policy::reference)
		.def("eventTick", &UWillowGameViewportClient::eventTick)
		.def("TryNotifyDeviceSelectionComplete", &UWillowGameViewportClient::TryNotifyDeviceSelectionComplete)
		.def("DeviceSelectionDone", &UWillowGameViewportClient::DeviceSelectionDone)
		.def("NotifyDeviceSelectionStarted", &UWillowGameViewportClient::NotifyDeviceSelectionStarted)
		.def("SetPCSplitscreenEnabled", &UWillowGameViewportClient::SetPCSplitscreenEnabled)
		.def("IsPCSplitscreenEnabled", &UWillowGameViewportClient::IsPCSplitscreenEnabled)
		.def("PlatformSupportsSplitscreen", &UWillowGameViewportClient::PlatformSupportsSplitscreen)
		.def("OnEndGameForReturnToTitleComplete", &UWillowGameViewportClient::OnEndGameForReturnToTitleComplete)
		.def("ReturnToTitleScreenNoPC", &UWillowGameViewportClient::ReturnToTitleScreenNoPC)
		.def("NotifyConnectionError", &UWillowGameViewportClient::NotifyConnectionError)
		.def("ShouldIgnoreNetworkErrors", &UWillowGameViewportClient::ShouldIgnoreNetworkErrors)
		.def("IsWidescreen", &UWillowGameViewportClient::IsWidescreen)
		.def("SplitScreenLeave", &UWillowGameViewportClient::SplitScreenLeave)
		.def("CanSplitScreenLeave", &UWillowGameViewportClient::CanSplitScreenLeave)
		.def("eventUpdateSplitscreenConfiguration", &UWillowGameViewportClient::eventUpdateSplitscreenConfiguration)
		.def("eventSplitScreenJoin", &UWillowGameViewportClient::eventSplitScreenJoin, py::return_value_policy::reference)
		.def("CanSplitScreenJoin", &UWillowGameViewportClient::CanSplitScreenJoin)
		.def("RenderHeader", &UWillowGameViewportClient::RenderHeader)
		.def("eventPostRender", &UWillowGameViewportClient::eventPostRender)
		.def("eventGameSessionEnded", &UWillowGameViewportClient::eventGameSessionEnded)
		.def("AreHudMoviesVisible", &UWillowGameViewportClient::AreHudMoviesVisible)
		.def("eventGetSubtitleRegion", &UWillowGameViewportClient::eventGetSubtitleRegion)
		.def("UpdateActiveSplitscreenType", &UWillowGameViewportClient::UpdateActiveSplitscreenType)
		.def("eventSetSplitscreenConfiguration", &UWillowGameViewportClient::eventSetSplitscreenConfiguration)
		.def("HasLoginStateChanged", &UWillowGameViewportClient::HasLoginStateChanged)
		.def("SaveLoginState", &UWillowGameViewportClient::SaveLoginState)
		.def("InitializeCurrentLoginState", &UWillowGameViewportClient::InitializeCurrentLoginState)
		.def("NotifyLoginChanged", &UWillowGameViewportClient::NotifyLoginChanged)
		.def("RemovedDlcDependantMU", &UWillowGameViewportClient::RemovedDlcDependantMU)
		.def("RemovedDlcDependantMUFrontend", &UWillowGameViewportClient::RemovedDlcDependantMUFrontend)
		.def("TryNotifyStorageDeviceChanged", &UWillowGameViewportClient::TryNotifyStorageDeviceChanged)
		.def("NotifyStorageDeviceChange", &UWillowGameViewportClient::NotifyStorageDeviceChange)
		.def("ReturnToTitleForDlcInstall_Clicked", &UWillowGameViewportClient::ReturnToTitleForDlcInstall_Clicked)
		.def("RegisterMarketingUnlocksFromDlc", &UWillowGameViewportClient::RegisterMarketingUnlocksFromDlc)
		.def("NotifyDlcRefreshComplete", &UWillowGameViewportClient::NotifyDlcRefreshComplete)
		.def("eventRemovePlayer", &UWillowGameViewportClient::eventRemovePlayer)
		.def("eventCreatePlayer", &UWillowGameViewportClient::eventCreatePlayer, py::return_value_policy::reference)
		.def("InputAxis", &UWillowGameViewportClient::InputAxis)
		.def("InputKey", &UWillowGameViewportClient::InputKey)
		.def("eventDlcManagerCreatedInit", &UWillowGameViewportClient::eventDlcManagerCreatedInit)
		.def("eventInit", &UWillowGameViewportClient::eventInit)
		.def("OpenMapMenu", &UWillowGameViewportClient::OpenMapMenu)
		;
	py::class_< UWillowGlobals, UGearboxGlobals >(m, "UWillowGlobals")
		.def_property("bEnableSpeech", [](UWillowGlobals &self){return self.bEnableSpeech;}, [](UWillowGlobals &self, bool value){self.bEnableSpeech = value ? 1 : 0;})
		.def_property("bIsDefaultWorldBodyAvailable", [](UWillowGlobals &self){return self.bIsDefaultWorldBodyAvailable;}, [](UWillowGlobals &self, bool value){self.bIsDefaultWorldBodyAvailable = value ? 1 : 0;})
		.def_property("LoadingMovieShouldPlayToEnd", [](UWillowGlobals &self){return self.LoadingMovieShouldPlayToEnd;}, [](UWillowGlobals &self, bool value){self.LoadingMovieShouldPlayToEnd = value ? 1 : 0;})
		.def_property("bClassDropsInitialized", [](UWillowGlobals &self){return self.bClassDropsInitialized;}, [](UWillowGlobals &self, bool value){self.bClassDropsInitialized = value ? 1 : 0;})
		.def_readwrite("PlayerClassIdentifiers", &UWillowGlobals::PlayerClassIdentifiers, py::return_value_policy::reference)
		.def_readwrite("PlayerNameIdentifiers", &UWillowGlobals::PlayerNameIdentifiers, py::return_value_policy::reference)
		.def_readwrite("DefaultWorldBodyStandIn", &UWillowGlobals::DefaultWorldBodyStandIn, py::return_value_policy::reference)
		.def_readwrite("DamagePipelinePool", &UWillowGlobals::DamagePipelinePool, py::return_value_policy::reference)
		.def_readwrite("AutoAimDefinition", &UWillowGlobals::AutoAimDefinition, py::return_value_policy::reference)
		.def_readwrite("PlayerTrainingMessages", &UWillowGlobals::PlayerTrainingMessages, py::return_value_policy::reference)
		.def_readwrite("DefaultGlobalsDefinitionName", &UWillowGlobals::DefaultGlobalsDefinitionName, py::return_value_policy::reference)
		.def_readwrite("MasterFastTravelStationList", &UWillowGlobals::MasterFastTravelStationList, py::return_value_policy::reference)
		.def_readwrite("MasterLevelDependencyList", &UWillowGlobals::MasterLevelDependencyList, py::return_value_policy::reference)
		.def_readwrite("TheRelevanceUtility", &UWillowGlobals::TheRelevanceUtility, py::return_value_policy::reference)
		.def_readwrite("TheRelevanceUtilityClass", &UWillowGlobals::TheRelevanceUtilityClass, py::return_value_policy::reference)
		.def_readwrite("ClientInteractiveObjects", &UWillowGlobals::ClientInteractiveObjects, py::return_value_policy::reference)
		.def_readwrite("LoadingMovieExceptions", &UWillowGlobals::LoadingMovieExceptions, py::return_value_policy::reference)
		.def_readwrite("TheLCDHelper", &UWillowGlobals::TheLCDHelper, py::return_value_policy::reference)
		.def_readwrite("TheEffectsCoordinator", &UWillowGlobals::TheEffectsCoordinator, py::return_value_policy::reference)
		.def_readwrite("TheObstacleUtility", &UWillowGlobals::TheObstacleUtility, py::return_value_policy::reference)
		.def_readwrite("TheCustomizationManager", &UWillowGlobals::TheCustomizationManager, py::return_value_policy::reference)
		.def_readwrite("ThePlayerPawnDataManager", &UWillowGlobals::ThePlayerPawnDataManager, py::return_value_policy::reference)
		.def_readwrite("PersistentLevelSFXBank", &UWillowGlobals::PersistentLevelSFXBank, py::return_value_policy::reference)
		.def_readwrite("PersistentLevelVoiceBank", &UWillowGlobals::PersistentLevelVoiceBank, py::return_value_policy::reference)
		.def_readwrite("ActiveHomingProjectileList", &UWillowGlobals::ActiveHomingProjectileList, py::return_value_policy::reference)
		.def_readwrite("PickupList", &UWillowGlobals::PickupList, py::return_value_policy::reference)
		.def_readwrite("TheVehicleLifetimeManager", &UWillowGlobals::TheVehicleLifetimeManager, py::return_value_policy::reference)
		.def_readwrite("AggregatedVehicleCrewAnimSetTable", &UWillowGlobals::AggregatedVehicleCrewAnimSetTable, py::return_value_policy::reference)
		.def_readwrite("BoundaryTurretList", &UWillowGlobals::BoundaryTurretList, py::return_value_policy::reference)
		.def_readwrite("TheNPCLoadBalancer", &UWillowGlobals::TheNPCLoadBalancer, py::return_value_policy::reference)
		.def_readwrite("TheDamageOverTimeManager", &UWillowGlobals::TheDamageOverTimeManager, py::return_value_policy::reference)
		.def_readwrite("SpectatorPointList", &UWillowGlobals::SpectatorPointList, py::return_value_policy::reference)
		.def_readwrite("KnownCurrencies", &UWillowGlobals::KnownCurrencies, py::return_value_policy::reference)
		.def_readwrite("AssLibMan", &UWillowGlobals::AssLibMan, py::return_value_policy::reference)
		.def_readwrite("LegacyPlayerClassIdentifiers", &UWillowGlobals::LegacyPlayerClassIdentifiers, py::return_value_policy::reference)
		.def_readwrite("PlayThroughBasedBalanceModifiers", &UWillowGlobals::PlayThroughBasedBalanceModifiers, py::return_value_policy::reference)
		.def("FindCurrencies", &UWillowGlobals::FindCurrencies)
		.def("FindCurrenciesIn", &UWillowGlobals::FindCurrenciesIn)
		.def("AddBoundaryTurret", &UWillowGlobals::AddBoundaryTurret)
		.def("GetDamageOverTimeManager", &UWillowGlobals::GetDamageOverTimeManager, py::return_value_policy::reference)
		.def("GetNPCLoadBalancer", &UWillowGlobals::GetNPCLoadBalancer, py::return_value_policy::reference)
		.def("GetCurrentGameReleaseDef", &UWillowGlobals::GetCurrentGameReleaseDef, py::return_value_policy::reference)
		.def("GetLocalizedDamageType", &UWillowGlobals::GetLocalizedDamageType, py::return_value_policy::reference)
		.def("GetLocalizedDamageCauser", &UWillowGlobals::GetLocalizedDamageCauser, py::return_value_policy::reference)
		.def("CheckIfSpawnWillFail", &UWillowGlobals::CheckIfSpawnWillFail)
		.def("PresetGetCaption", &UWillowGlobals::PresetGetCaption, py::return_value_policy::reference)
		.def("ApplyControllerPreset", &UWillowGlobals::ApplyControllerPreset)
		.def("GetPrevSpectatorPoint", &UWillowGlobals::GetPrevSpectatorPoint, py::return_value_policy::reference)
		.def("GetNextSpectatorPoint", &UWillowGlobals::GetNextSpectatorPoint, py::return_value_policy::reference)
		.def("GetFirstSpectatorPoint", &UWillowGlobals::GetFirstSpectatorPoint, py::return_value_policy::reference)
		.def("RemoveSpectatorPoint", &UWillowGlobals::RemoveSpectatorPoint)
		.def("AddSpectatorPoint", &UWillowGlobals::AddSpectatorPoint)
		.def("RemovePickup", &UWillowGlobals::RemovePickup)
		.def("AddPickup", &UWillowGlobals::AddPickup)
		.def("RemoveActiveHomingProjectile", &UWillowGlobals::RemoveActiveHomingProjectile)
		.def("AddActiveHomingProjectile", &UWillowGlobals::AddActiveHomingProjectile)
		.def("GetTimeOfDayDominantDirectionalLightComponent", &UWillowGlobals::GetTimeOfDayDominantDirectionalLightComponent, py::return_value_policy::reference)
		.def("ResolveCustomMarkupString", &UWillowGlobals::ResolveCustomMarkupString, py::return_value_policy::reference)
		.def("GetVehicleLifetimeManager", &UWillowGlobals::GetVehicleLifetimeManager, py::return_value_policy::reference)
		.def("GetPlayerPawnDataManager", &UWillowGlobals::GetPlayerPawnDataManager, py::return_value_policy::reference)
		.def("GetCustomizationManager", &UWillowGlobals::GetCustomizationManager, py::return_value_policy::reference)
		.def("GetUISortedValidPlayerNameIdentifiers", &UWillowGlobals::GetUISortedValidPlayerNameIdentifiers)
		.def("GetDefaultPlayerSaveGame", &UWillowGlobals::GetDefaultPlayerSaveGame, py::return_value_policy::reference)
		.def("GetPlayerNameIdentifierDefinition", &UWillowGlobals::GetPlayerNameIdentifierDefinition, py::return_value_policy::reference)
		.def("GetPlayerClassIdentifierDefinition", &UWillowGlobals::GetPlayerClassIdentifierDefinition, py::return_value_policy::reference)
		.def("GetPlayerChallenges", &UWillowGlobals::GetPlayerChallenges, py::return_value_policy::reference)
		.def("GetTheLCDHelper", &UWillowGlobals::GetTheLCDHelper, py::return_value_policy::reference)
		.def("ToggleUnlockCode", &UWillowGlobals::ToggleUnlockCode)
		.def("IsCodeUnlocked", &UWillowGlobals::IsCodeUnlocked)
		.def("SetLoadingMovieFinished", &UWillowGlobals::SetLoadingMovieFinished)
		.def("GetPawnRelevanceUtility", &UWillowGlobals::GetPawnRelevanceUtility, py::return_value_policy::reference)
		.def("GetLevelDependencyList", &UWillowGlobals::GetLevelDependencyList, py::return_value_policy::reference)
		.def("GetFastTravelStationsLookup", &UWillowGlobals::GetFastTravelStationsLookup, py::return_value_policy::reference)
		.def("GetEffectCoordinator", &UWillowGlobals::GetEffectCoordinator, py::return_value_policy::reference)
		.def("GetGlobalFallingDamageScale", &UWillowGlobals::GetGlobalFallingDamageScale)
		.def("GetGlobalAIRocketWeaponDamageScale", &UWillowGlobals::GetGlobalAIRocketWeaponDamageScale)
		.def("GetGlobalAIAssaultWeaponDamageScale", &UWillowGlobals::GetGlobalAIAssaultWeaponDamageScale)
		.def("GetGlobalAISniperWeaponDamageScale", &UWillowGlobals::GetGlobalAISniperWeaponDamageScale)
		.def("GetGlobalAISmgWeaponDamageScale", &UWillowGlobals::GetGlobalAISmgWeaponDamageScale)
		.def("GetGlobalAIShotgunWeaponDamageScale", &UWillowGlobals::GetGlobalAIShotgunWeaponDamageScale)
		.def("GetGlobalAIPistolWeaponDamageScale", &UWillowGlobals::GetGlobalAIPistolWeaponDamageScale)
		.def("GetGlobalAIWeaponDamageScale", &UWillowGlobals::GetGlobalAIWeaponDamageScale)
		.def("GetGlobalAIDamageScale", &UWillowGlobals::GetGlobalAIDamageScale)
		.def("GetGlobalsDefinition", &UWillowGlobals::GetGlobalsDefinition, py::return_value_policy::reference)
		.def("ReleaseDamagePipelineObject", &UWillowGlobals::ReleaseDamagePipelineObject)
		.def("GetDamagePipelineObject", &UWillowGlobals::GetDamagePipelineObject, py::return_value_policy::reference)
		.def("CreateWorldBodyStandIn", &UWillowGlobals::CreateWorldBodyStandIn, py::return_value_policy::reference)
		.def("GetWillowSaveGameManager", &UWillowGlobals::GetWillowSaveGameManager, py::return_value_policy::reference)
		.def("GetWillowGlobals", &UWillowGlobals::GetWillowGlobals, py::return_value_policy::reference)
		.def("RemoveInteractiveObject", &UWillowGlobals::RemoveInteractiveObject)
		.def("AddInteractiveObject", &UWillowGlobals::AddInteractiveObject)
		.def("DeleteWorldBodyStandIn", [](UWillowGlobals &self ) { class UWorldBody** pyStandIn = 0 ;   self.DeleteWorldBodyStandIn(pyStandIn); return py::make_tuple(*pyStandIn); })
		;
	py::class_< AWillowHUD, AHUD >(m, "AWillowHUD")
		.def_property("bPawnInspectorUsesAIDebugCam", [](AWillowHUD &self){return self.bPawnInspectorUsesAIDebugCam;}, [](AWillowHUD &self, bool value){self.bPawnInspectorUsesAIDebugCam = value ? 1 : 0;})
		.def_property("bShowDlcVersionErrors", [](AWillowHUD &self){return self.bShowDlcVersionErrors;}, [](AWillowHUD &self, bool value){self.bShowDlcVersionErrors = value ? 1 : 0;})
		.def_property("bShowDlcNeedsEnumerationError", [](AWillowHUD &self){return self.bShowDlcNeedsEnumerationError;}, [](AWillowHUD &self, bool value){self.bShowDlcNeedsEnumerationError = value ? 1 : 0;})
		.def_property("bShowBros", [](AWillowHUD &self){return self.bShowBros;}, [](AWillowHUD &self, bool value){self.bShowBros = value ? 1 : 0;})
		.def_property("bShowBuildInfo", [](AWillowHUD &self){return self.bShowBuildInfo;}, [](AWillowHUD &self, bool value){self.bShowBuildInfo = value ? 1 : 0;})
		.def_property("bShowHUDRestoreValue", [](AWillowHUD &self){return self.bShowHUDRestoreValue;}, [](AWillowHUD &self, bool value){self.bShowHUDRestoreValue = value ? 1 : 0;})
		.def_property("bAIInspectorEnabled", [](AWillowHUD &self){return self.bAIInspectorEnabled;}, [](AWillowHUD &self, bool value){self.bAIInspectorEnabled = value ? 1 : 0;})
		.def_property("bStatusEffectInspectorEnabled", [](AWillowHUD &self){return self.bStatusEffectInspectorEnabled;}, [](AWillowHUD &self, bool value){self.bStatusEffectInspectorEnabled = value ? 1 : 0;})
		.def_property("bShowHosEnabled", [](AWillowHUD &self){return self.bShowHosEnabled;}, [](AWillowHUD &self, bool value){self.bShowHosEnabled = value ? 1 : 0;})
		.def_property("bShowViewModelAnimDebug", [](AWillowHUD &self){return self.bShowViewModelAnimDebug;}, [](AWillowHUD &self, bool value){self.bShowViewModelAnimDebug = value ? 1 : 0;})
		.def_property("bShowConnectionWarning", [](AWillowHUD &self){return self.bShowConnectionWarning;}, [](AWillowHUD &self, bool value){self.bShowConnectionWarning = value ? 1 : 0;})
		.def_property("bAutoAimDebugEnabled", [](AWillowHUD &self){return self.bAutoAimDebugEnabled;}, [](AWillowHUD &self, bool value){self.bAutoAimDebugEnabled = value ? 1 : 0;})
		.def_readwrite("DlcVersionErrorDisplayDuration", &AWillowHUD::DlcVersionErrorDisplayDuration)
		.def_readwrite("DlcVersionErrorDisplayStartTime", &AWillowHUD::DlcVersionErrorDisplayStartTime)
		.def_readwrite("PlayerInfoHeight", &AWillowHUD::PlayerInfoHeight)
		.def_readwrite("PlayerInfoMaxDist", &AWillowHUD::PlayerInfoMaxDist)
		.def_readwrite("PawnOwner", &AWillowHUD::PawnOwner, py::return_value_policy::reference)
		.def_readwrite("SavedLookAtInventory", &AWillowHUD::SavedLookAtInventory, py::return_value_policy::reference)
		.def_readwrite("CachedBestPickup", &AWillowHUD::CachedBestPickup, py::return_value_policy::reference)
		.def_readwrite("CachedHoverPickup", &AWillowHUD::CachedHoverPickup, py::return_value_policy::reference)
		.def_readwrite("ClientSavedPickup", &AWillowHUD::ClientSavedPickup, py::return_value_policy::reference)
		.def_readwrite("ClosestPickup", &AWillowHUD::ClosestPickup, py::return_value_policy::reference)
		.def_readwrite("HoverParticleComponent", &AWillowHUD::HoverParticleComponent, py::return_value_policy::reference)
		.def_readwrite("PendingKillHoverComponents", &AWillowHUD::PendingKillHoverComponents, py::return_value_policy::reference)
		.def_readwrite("PickupItemCard", &AWillowHUD::PickupItemCard, py::return_value_policy::reference)
		.def_readwrite("PickupParticleComponent", &AWillowHUD::PickupParticleComponent, py::return_value_policy::reference)
		.def_readwrite("BuildNumber", &AWillowHUD::BuildNumber, py::return_value_policy::reference)
		.def_readwrite("BuildTag", &AWillowHUD::BuildTag, py::return_value_policy::reference)
		.def_readwrite("BuildChangelist", &AWillowHUD::BuildChangelist, py::return_value_policy::reference)
		.def_readwrite("BuildInfoXOffset", &AWillowHUD::BuildInfoXOffset)
		.def_readwrite("BuildInfoYOffset", &AWillowHUD::BuildInfoYOffset)
		.def_readwrite("WPlayerOwner", &AWillowHUD::WPlayerOwner, py::return_value_policy::reference)
		.def_readwrite("WPRI", &AWillowHUD::WPRI, py::return_value_policy::reference)
		.def_readwrite("HUDDef", &AWillowHUD::HUDDef, py::return_value_policy::reference)
		.def_readwrite("CurrentTargetable", &AWillowHUD::CurrentTargetable, py::return_value_policy::reference)
		.def_readwrite("LastPreferredTargetable", &AWillowHUD::LastPreferredTargetable, py::return_value_policy::reference)
		.def_readwrite("HealthBarFadeStartTime", &AWillowHUD::HealthBarFadeStartTime)
		.def_readwrite("LastAutogunTargetLocation", &AWillowHUD::LastAutogunTargetLocation, py::return_value_policy::reference)
		.def_readwrite("InspectAIOutputStartingXPos", &AWillowHUD::InspectAIOutputStartingXPos)
		.def_readwrite("InspectAIOutputStartingYPos", &AWillowHUD::InspectAIOutputStartingYPos)
		.def_readwrite("InspectAIOutputIndentSize", &AWillowHUD::InspectAIOutputIndentSize)
		.def_readwrite("InspectAIMaxFlagOutputLineSize", &AWillowHUD::InspectAIMaxFlagOutputLineSize)
		.def_readwrite("InspectAIRulesColor", &AWillowHUD::InspectAIRulesColor, py::return_value_policy::reference)
		.def_readwrite("InspectAITimersColor", &AWillowHUD::InspectAITimersColor, py::return_value_policy::reference)
		.def_readwrite("InspectAITargetsColor", &AWillowHUD::InspectAITargetsColor, py::return_value_policy::reference)
		.def_readwrite("InspectAIFlagIsTrueColor", &AWillowHUD::InspectAIFlagIsTrueColor, py::return_value_policy::reference)
		.def_readwrite("InspectAIFlagIsFalseColor", &AWillowHUD::InspectAIFlagIsFalseColor, py::return_value_policy::reference)
		.def_readwrite("InspectStatusEffectOutputStartingXPos", &AWillowHUD::InspectStatusEffectOutputStartingXPos)
		.def_readwrite("InspectStatusEffectOutputStartingYPos", &AWillowHUD::InspectStatusEffectOutputStartingYPos)
		.def_readwrite("InspectStatusEffectOutputIndentSize", &AWillowHUD::InspectStatusEffectOutputIndentSize)
		.def_readwrite("InspectStatusEffectTypeName", &AWillowHUD::InspectStatusEffectTypeName, py::return_value_policy::reference)
		.def_readwrite("ShowHosColor", &AWillowHUD::ShowHosColor, py::return_value_policy::reference)
		.def_readwrite("DangerousIconDifference", &AWillowHUD::DangerousIconDifference)
		.def_readwrite("ImpossibleEnemyDifference", &AWillowHUD::ImpossibleEnemyDifference)
		.def_readwrite("HUDMovie", &AWillowHUD::HUDMovie, py::return_value_policy::reference)
		.def_readwrite("WeaponScopeMovie", &AWillowHUD::WeaponScopeMovie, py::return_value_policy::reference)
		.def_readwrite("StatusMenuExMovie", &AWillowHUD::StatusMenuExMovie, py::return_value_policy::reference)
		.def_readwrite("SavingMatInst", &AWillowHUD::SavingMatInst, py::return_value_policy::reference)
		.def_readwrite("ConnectionMatInst", &AWillowHUD::ConnectionMatInst, py::return_value_policy::reference)
		.def_readwrite("SavingMat", &AWillowHUD::SavingMat, py::return_value_policy::reference)
		.def_readwrite("ConnectionMat", &AWillowHUD::ConnectionMat, py::return_value_policy::reference)
		.def_readwrite("SaveDuration", &AWillowHUD::SaveDuration)
		.def_readwrite("SaveStartTime", &AWillowHUD::SaveStartTime)
		.def_readwrite("FadeStartTime", &AWillowHUD::FadeStartTime)
		.def_readwrite("FadeDuration", &AWillowHUD::FadeDuration)
		.def_readwrite("RespawnDialogString", &AWillowHUD::RespawnDialogString, py::return_value_policy::reference)
		.def_readwrite("RespawnDialogFeeWaivedString", &AWillowHUD::RespawnDialogFeeWaivedString, py::return_value_policy::reference)
		.def_readwrite("RespawnDialogTitleString", &AWillowHUD::RespawnDialogTitleString, py::return_value_policy::reference)
		.def_readwrite("RespawnDialogOtherDiedString", &AWillowHUD::RespawnDialogOtherDiedString, py::return_value_policy::reference)
		.def_readwrite("RespawnDialogOtherDiedFeeWaivedString", &AWillowHUD::RespawnDialogOtherDiedFeeWaivedString, py::return_value_policy::reference)
		.def_readwrite("RespawnDialogUnknownPlayerString", &AWillowHUD::RespawnDialogUnknownPlayerString, py::return_value_policy::reference)
		.def_readwrite("ScreenFadeStartTime", &AWillowHUD::ScreenFadeStartTime)
		.def_readwrite("ScreenFadeDuration", &AWillowHUD::ScreenFadeDuration)
		.def_readwrite("ScreenFadeStartOpacity", &AWillowHUD::ScreenFadeStartOpacity)
		.def_readwrite("ScreenFadeOpacity", &AWillowHUD::ScreenFadeOpacity)
		.def_readwrite("ScreenFadeColor", &AWillowHUD::ScreenFadeColor, py::return_value_policy::reference)
		.def_readwrite("DuelCountdownString", &AWillowHUD::DuelCountdownString, py::return_value_policy::reference)
		.def_readwrite("DuelOutOfBoundsString", &AWillowHUD::DuelOutOfBoundsString, py::return_value_policy::reference)
		.def_readwrite("DefaultMessageDuration", &AWillowHUD::DefaultMessageDuration)
		.def_readwrite("DeathStringPistol", &AWillowHUD::DeathStringPistol, py::return_value_policy::reference)
		.def_readwrite("DeathStringShotgun", &AWillowHUD::DeathStringShotgun, py::return_value_policy::reference)
		.def_readwrite("DeathStringSMG", &AWillowHUD::DeathStringSMG, py::return_value_policy::reference)
		.def_readwrite("DeathStringSniperRifle", &AWillowHUD::DeathStringSniperRifle, py::return_value_policy::reference)
		.def_readwrite("DeathStringRocketLauncher", &AWillowHUD::DeathStringRocketLauncher, py::return_value_policy::reference)
		.def_readwrite("DeathStringAssaultRifle", &AWillowHUD::DeathStringAssaultRifle, py::return_value_policy::reference)
		.def_readwrite("DeathStringFragGrenade", &AWillowHUD::DeathStringFragGrenade, py::return_value_policy::reference)
		.def_readwrite("DeathStringProteanGrenade", &AWillowHUD::DeathStringProteanGrenade, py::return_value_policy::reference)
		.def_readwrite("DeathStringIncindiaryDamage", &AWillowHUD::DeathStringIncindiaryDamage, py::return_value_policy::reference)
		.def_readwrite("DeathStringShockDamage", &AWillowHUD::DeathStringShockDamage, py::return_value_policy::reference)
		.def_readwrite("DeathStringExplosiveDamage", &AWillowHUD::DeathStringExplosiveDamage, py::return_value_policy::reference)
		.def_readwrite("DeathStringCorrosiveDamage", &AWillowHUD::DeathStringCorrosiveDamage, py::return_value_policy::reference)
		.def_readwrite("DeathStringImpactDamage", &AWillowHUD::DeathStringImpactDamage, py::return_value_policy::reference)
		.def_readwrite("DeathStringSuicide", &AWillowHUD::DeathStringSuicide, py::return_value_policy::reference)
		.def_readwrite("DeathStringUnknown", &AWillowHUD::DeathStringUnknown, py::return_value_policy::reference)
		.def_readwrite("DeathStringFallDamage", &AWillowHUD::DeathStringFallDamage, py::return_value_policy::reference)
		.def_readwrite("SavingMaterialScale", &AWillowHUD::SavingMaterialScale)
		.def_readwrite("ConnectionMaterialScale", &AWillowHUD::ConnectionMaterialScale)
		.def_readwrite("ConnectionWarningStartTime", &AWillowHUD::ConnectionWarningStartTime)
		.def_readwrite("SavingIconXOffset", &AWillowHUD::SavingIconXOffset)
		.def_readwrite("SavingIconYOffset", &AWillowHUD::SavingIconYOffset)
		.def_readwrite("MaxNumPickups", &AWillowHUD::MaxNumPickups)
		.def_readwrite("PendingWeaponCardDisplayTime", &AWillowHUD::PendingWeaponCardDisplayTime)
		.def_readwrite("ActiveEquippedCardType", &AWillowHUD::ActiveEquippedCardType)
		.def_readwrite("ActivePickupCardType", &AWillowHUD::ActivePickupCardType)
		.def_readwrite("DebugMarkerMat", &AWillowHUD::DebugMarkerMat, py::return_value_policy::reference)
		.def_readwrite("CurrentPickupIcon", &AWillowHUD::CurrentPickupIcon, py::return_value_policy::reference)
		.def_readwrite("ColiseumOverlayMovie", &AWillowHUD::ColiseumOverlayMovie, py::return_value_policy::reference)
		.def_readwrite("QueuedChallengeNotifications", &AWillowHUD::QueuedChallengeNotifications, py::return_value_policy::reference)
		.def_readwrite("QueuedInitFrame", &AWillowHUD::QueuedInitFrame, py::return_value_policy::reference)
		.def_readwrite("PlayedInitFrames", &AWillowHUD::PlayedInitFrames, py::return_value_policy::reference)
		.def_readwrite("QueuedPullThePinNotification", &AWillowHUD::QueuedPullThePinNotification, py::return_value_policy::reference)
		.def("ShowChallengeWidget", &AWillowHUD::ShowChallengeWidget)
		.def("ShowIpAddress", &AWillowHUD::ShowIpAddress)
		.def("LevelTimer", &AWillowHUD::LevelTimer)
		.def("AutoAimDebug", &AWillowHUD::AutoAimDebug)
		.def("eventAmmoAbsorbed", &AWillowHUD::eventAmmoAbsorbed)
		.def("eventColiseumWantsSuppressHUD", &AWillowHUD::eventColiseumWantsSuppressHUD)
		.def("GetPlayingColiseumOverlayMovie", &AWillowHUD::GetPlayingColiseumOverlayMovie, py::return_value_policy::reference)
		.def("ColiseumNotify", &AWillowHUD::ColiseumNotify)
		.def("RuleAnnounce", &AWillowHUD::RuleAnnounce)
		.def("RoundAnnounce", &AWillowHUD::RoundAnnounce)
		.def("BeginRoundAnnounce", &AWillowHUD::BeginRoundAnnounce)
		.def("StartColiseumTimer", &AWillowHUD::StartColiseumTimer)
		.def("CloseColiseumOverlay", &AWillowHUD::CloseColiseumOverlay)
		.def("UpdateColiseumRule", &AWillowHUD::UpdateColiseumRule)
		.def("OnColiseumOverlayClosing", &AWillowHUD::OnColiseumOverlayClosing)
		.def("OnColiseumOverlayOpening", &AWillowHUD::OnColiseumOverlayOpening)
		.def("eventOnLostFocusPause", &AWillowHUD::eventOnLostFocusPause)
		.def("CanPauseOnLostFocus", &AWillowHUD::CanPauseOnLostFocus)
		.def("DrawAlwaysOnTopItems", &AWillowHUD::DrawAlwaysOnTopItems)
		.def("SetConnectionProblem", &AWillowHUD::SetConnectionProblem)
		.def("SetCanPickupItem", &AWillowHUD::SetCanPickupItem)
		.def("StartFade", &AWillowHUD::StartFade)
		.def("FadeOut", &AWillowHUD::FadeOut)
		.def("FadeIn", &AWillowHUD::FadeIn)
		.def("NotifySavingComplete", &AWillowHUD::NotifySavingComplete)
		.def("NotifySavingStarted", &AWillowHUD::NotifySavingStarted)
		.def("ToggleHUD", &AWillowHUD::ToggleHUD)
		.def("ShowTargetAnimDebug", &AWillowHUD::ShowTargetAnimDebug)
		.def("ShowAnimDebugFP", &AWillowHUD::ShowAnimDebugFP)
		.def("ShowRespawnDialog", &AWillowHUD::ShowRespawnDialog)
		.def("eventCloseStatusMenu", &AWillowHUD::eventCloseStatusMenu)
		.def("TryFakePauseInSinglePlayer", &AWillowHUD::TryFakePauseInSinglePlayer)
		.def("RunStatusMenu", &AWillowHUD::RunStatusMenu)
		.def("PlayStatusMovie", &AWillowHUD::PlayStatusMovie)
		.def("CloseHUDMovie", &AWillowHUD::CloseHUDMovie)
		.def("OpenHUDMovie", &AWillowHUD::OpenHUDMovie)
		.def("_OpenHUDMovie", &AWillowHUD::_OpenHUDMovie)
		.def("AddPostRenderedActor", &AWillowHUD::AddPostRenderedActor)
		.def("RemovePostRenderedActor", &AWillowHUD::RemovePostRenderedActor)
		.def("eventDrawShowIos", &AWillowHUD::eventDrawShowIos)
		.def("eventDrawShowHos", &AWillowHUD::eventDrawShowHos)
		.def("eventGetWeaponScopeMovie", &AWillowHUD::eventGetWeaponScopeMovie, py::return_value_policy::reference)
		.def("eventGetHUDMovie", &AWillowHUD::eventGetHUDMovie, py::return_value_policy::reference)
		.def("DisplayTargetPopupInfo", &AWillowHUD::DisplayTargetPopupInfo)
		.def("UpdatePickupParticles", &AWillowHUD::UpdatePickupParticles)
		.def("PostRenderDebug", &AWillowHUD::PostRenderDebug)
		.def("DrawSpectatorHud", &AWillowHUD::DrawSpectatorHud)
		.def("DrawEngineHUD", &AWillowHUD::DrawEngineHUD)
		.def("ScaleY", &AWillowHUD::ScaleY)
		.def("ScaleX43", &AWillowHUD::ScaleX43)
		.def("ScaleX", &AWillowHUD::ScaleX)
		.def("GetColorForExpLevel", &AWillowHUD::GetColorForExpLevel, py::return_value_policy::reference)
		.def("ShowPickupCard", &AWillowHUD::ShowPickupCard)
		.def("GetPickupCardLocation", &AWillowHUD::GetPickupCardLocation, py::return_value_policy::reference)
		.def("DetachPickupHoverPSys", &AWillowHUD::DetachPickupHoverPSys)
		.def("AttachPickupHoverPSys", &AWillowHUD::AttachPickupHoverPSys)
		.def("DrawItemFeedbackInfo", &AWillowHUD::DrawItemFeedbackInfo)
		.def("DrawDebugFeedbackForPickup", &AWillowHUD::DrawDebugFeedbackForPickup)
		.def("eventDrawBuildInfo", &AWillowHUD::eventDrawBuildInfo)
		.def("DrawHUD", &AWillowHUD::DrawHUD)
		.def("eventDoStartupDrawHUD", &AWillowHUD::eventDoStartupDrawHUD)
		.def("DrawDamageIndicator", &AWillowHUD::DrawDamageIndicator)
		.def("BuildInfo", &AWillowHUD::BuildInfo)
		.def("DrawbShowHUDIsFalseHUD", &AWillowHUD::DrawbShowHUDIsFalseHUD)
		.def("SetWPRI", &AWillowHUD::SetWPRI)
		.def("eventDestroyed", &AWillowHUD::eventDestroyed)
		.def("CreateWeaponScopeMovie", &AWillowHUD::CreateWeaponScopeMovie)
		.def("CreateHUDMovie", &AWillowHUD::CreateHUDMovie)
		.def("PostBeginPlay", &AWillowHUD::PostBeginPlay)
		.def("InitHud", &AWillowHUD::InitHud)
		.def("ClearCustomMessage", &AWillowHUD::ClearCustomMessage)
		.def("DisplayCustomMessage", &AWillowHUD::DisplayCustomMessage)
		.def("LoadBuildInfo", &AWillowHUD::LoadBuildInfo)
		.def("eventShowInspectedStatusEffectTarget", [](AWillowHUD &self , class UIStatusEffectTarget* Target, struct FVector PlayerCameraPosition, struct FVector PlayerCameraDirection) { float* pyYPos = (float*)malloc(sizeof(float)) ;   self.eventShowInspectedStatusEffectTarget(Target, PlayerCameraPosition, PlayerCameraDirection, pyYPos); return py::make_tuple(*pyYPos); })
		.def("eventShowInspectedAI", [](AWillowHUD &self , class AWillowAIPawn* AIPawnToInspect, struct FVector PlayerCameraPosition, struct FVector PlayerCameraDirection) { float* pyYPos = (float*)malloc(sizeof(float)) ;   self.eventShowInspectedAI(AIPawnToInspect, PlayerCameraPosition, PlayerCameraDirection, pyYPos); return py::make_tuple(*pyYPos); })
		.def("GetItemHoverBounds", [](AWillowHUD &self , class AActor* Pickup) { float* pyX = (float*)malloc(sizeof(float)) ; float* pyY = (float*)malloc(sizeof(float)) ; float* pyXL = (float*)malloc(sizeof(float)) ; float* pyYL = (float*)malloc(sizeof(float)) ;   self.GetItemHoverBounds(Pickup, pyX, pyY, pyXL, pyYL); return py::make_tuple(*pyX, *pyY, *pyXL, *pyYL); })
		;
	py::class_< UWillowImpactDefinition, UImpactDefinition >(m, "UWillowImpactDefinition")
		.def_readwrite("FallbackEffect", &UWillowImpactDefinition::FallbackEffect, py::return_value_policy::reference)
		.def_readwrite("Usage", &UWillowImpactDefinition::Usage)
		.def_readwrite("Parent", &UWillowImpactDefinition::Parent, py::return_value_policy::reference)
		.def_readwrite("AlternateImpactDefinition", &UWillowImpactDefinition::AlternateImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("UnconditionalResponse", &UWillowImpactDefinition::UnconditionalResponse, py::return_value_policy::reference)
		.def_readwrite("ImpactAkEvent", &UWillowImpactDefinition::ImpactAkEvent, py::return_value_policy::reference)
		.def("HandleRigidBodyImpact", &UWillowImpactDefinition::HandleRigidBodyImpact)
		;
	py::class_< UWillowExplosionImpactDefinition, UWillowImpactDefinition >(m, "UWillowExplosionImpactDefinition")
		;
	py::class_< AWillowInteractiveObject, AActor >(m, "AWillowInteractiveObject")
		.def_property("bSetPrimaryUsabilityByMissionDirectives", [](AWillowInteractiveObject &self){return self.bSetPrimaryUsabilityByMissionDirectives;}, [](AWillowInteractiveObject &self, bool value){self.bSetPrimaryUsabilityByMissionDirectives = value ? 1 : 0;})
		.def_property("bShouldBeTargetable", [](AWillowInteractiveObject &self){return self.bShouldBeTargetable;}, [](AWillowInteractiveObject &self, bool value){self.bShouldBeTargetable = value ? 1 : 0;})
		.def_property("bTakeDamageCausedByRadiusDamage", [](AWillowInteractiveObject &self){return self.bTakeDamageCausedByRadiusDamage;}, [](AWillowInteractiveObject &self, bool value){self.bTakeDamageCausedByRadiusDamage = value ? 1 : 0;})
		.def_property("bHasBeenKilled", [](AWillowInteractiveObject &self){return self.bHasBeenKilled;}, [](AWillowInteractiveObject &self, bool value){self.bHasBeenKilled = value ? 1 : 0;})
		.def_property("bDead", [](AWillowInteractiveObject &self){return self.bDead;}, [](AWillowInteractiveObject &self, bool value){self.bDead = value ? 1 : 0;})
		.def_property("bInitialized", [](AWillowInteractiveObject &self){return self.bInitialized;}, [](AWillowInteractiveObject &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_property("MoveOwnerOnEditorMove", [](AWillowInteractiveObject &self){return self.MoveOwnerOnEditorMove;}, [](AWillowInteractiveObject &self, bool value){self.MoveOwnerOnEditorMove = value ? 1 : 0;})
		.def_property("OwnerControlsEditorMove", [](AWillowInteractiveObject &self){return self.OwnerControlsEditorMove;}, [](AWillowInteractiveObject &self, bool value){self.OwnerControlsEditorMove = value ? 1 : 0;})
		.def_property("bWaitingForInteractiveObjectDefinition", [](AWillowInteractiveObject &self){return self.bWaitingForInteractiveObjectDefinition;}, [](AWillowInteractiveObject &self, bool value){self.bWaitingForInteractiveObjectDefinition = value ? 1 : 0;})
		.def_property("bBeingHealed", [](AWillowInteractiveObject &self){return self.bBeingHealed;}, [](AWillowInteractiveObject &self, bool value){self.bBeingHealed = value ? 1 : 0;})
		.def_property("bNonCheatGodMode", [](AWillowInteractiveObject &self){return self.bNonCheatGodMode;}, [](AWillowInteractiveObject &self, bool value){self.bNonCheatGodMode = value ? 1 : 0;})
		.def_property("bActiveObstacle", [](AWillowInteractiveObject &self){return self.bActiveObstacle;}, [](AWillowInteractiveObject &self, bool value){self.bActiveObstacle = value ? 1 : 0;})
		.def_property("bCurrentlyThrottled", [](AWillowInteractiveObject &self){return self.bCurrentlyThrottled;}, [](AWillowInteractiveObject &self, bool value){self.bCurrentlyThrottled = value ? 1 : 0;})
		.def_readwrite("VfTable_IITimerBehavior", &AWillowInteractiveObject::VfTable_IITimerBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IICustomEvent", &AWillowInteractiveObject::VfTable_IICustomEvent, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIKilledBehavior", &AWillowInteractiveObject::VfTable_IIKilledBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIInstanceData", &AWillowInteractiveObject::VfTable_IIInstanceData, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIStatusEffectTarget", &AWillowInteractiveObject::VfTable_IIStatusEffectTarget, py::return_value_policy::reference)
		.def_readwrite("VfTable_IITargetable", &AWillowInteractiveObject::VfTable_IITargetable, py::return_value_policy::reference)
		.def_readwrite("VfTable_ISpecialMoveInterface", &AWillowInteractiveObject::VfTable_ISpecialMoveInterface, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDynamicObstacle", &AWillowInteractiveObject::VfTable_IIDynamicObstacle, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIMapDisplayInfo", &AWillowInteractiveObject::VfTable_IIMapDisplayInfo, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDesignerAttributeProvider", &AWillowInteractiveObject::VfTable_IIDesignerAttributeProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDamageSurface", &AWillowInteractiveObject::VfTable_IIDamageSurface, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIUsable", &AWillowInteractiveObject::VfTable_IIUsable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBalancedActor", &AWillowInteractiveObject::VfTable_IIBalancedActor, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIMissionDirector", &AWillowInteractiveObject::VfTable_IIMissionDirector, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIMissionObjective", &AWillowInteractiveObject::VfTable_IIMissionObjective, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIGFxActorMovie", &AWillowInteractiveObject::VfTable_IIGFxActorMovie, py::return_value_policy::reference)
		.def_readwrite("VfTable_IILootable", &AWillowInteractiveObject::VfTable_IILootable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDamageable", &AWillowInteractiveObject::VfTable_IIDamageable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorConsumer", &AWillowInteractiveObject::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyCompositionInstance", &AWillowInteractiveObject::VfTable_IIBodyCompositionInstance, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIFocusable", &AWillowInteractiveObject::VfTable_IIFocusable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIHitRegionConsumer", &AWillowInteractiveObject::VfTable_IIHitRegionConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IISimpleAnimPlayer", &AWillowInteractiveObject::VfTable_IISimpleAnimPlayer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IGearboxDialogInterface", &AWillowInteractiveObject::VfTable_IGearboxDialogInterface, py::return_value_policy::reference)
		.def_readwrite("VfTable_IILevelChallengeObject", &AWillowInteractiveObject::VfTable_IILevelChallengeObject, py::return_value_policy::reference)
		.def_readwrite("InteractiveObjectDefinition", &AWillowInteractiveObject::InteractiveObjectDefinition, py::return_value_policy::reference)
		.def_readwrite("Allegiance", &AWillowInteractiveObject::Allegiance, py::return_value_policy::reference)
		.def_readwrite("EnabledBehaviorSets", &AWillowInteractiveObject::EnabledBehaviorSets, py::return_value_policy::reference)
		.def_readwrite("CylinderComponent", &AWillowInteractiveObject::CylinderComponent, py::return_value_policy::reference)
		.def_readwrite("ObjectMesh", &AWillowInteractiveObject::ObjectMesh, py::return_value_policy::reference)
		.def_readwrite("CompassIcon", &AWillowInteractiveObject::CompassIcon)
		.def_readwrite("NumberInChallengeGroup", &AWillowInteractiveObject::NumberInChallengeGroup)
		.def_readwrite("WarriorFade", &AWillowInteractiveObject::WarriorFade)
		.def_readwrite("LightEnvironment", &AWillowInteractiveObject::LightEnvironment, py::return_value_policy::reference)
		.def_readwrite("AllegianceParent", &AWillowInteractiveObject::AllegianceParent, py::return_value_policy::reference)
		.def_readwrite("AllegianceChildren", &AWillowInteractiveObject::AllegianceChildren, py::return_value_policy::reference)
		.def_readwrite("NumAICurrentlyTargeting", &AWillowInteractiveObject::NumAICurrentlyTargeting)
		.def_readwrite("ReplicatedState", &AWillowInteractiveObject::ReplicatedState, py::return_value_policy::reference)
		.def_readwrite("ConsumerHandle", &AWillowInteractiveObject::ConsumerHandle, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorEvent", &AWillowInteractiveObject::ReplicatedBehaviorEvent, py::return_value_policy::reference)
		.def_readwrite("InstanceState", &AWillowInteractiveObject::InstanceState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedCFX", &AWillowInteractiveObject::ReplicatedCFX, py::return_value_policy::reference)
		.def_readwrite("ManuallyBalanceToRegionDef", &AWillowInteractiveObject::ManuallyBalanceToRegionDef, py::return_value_policy::reference)
		.def_readwrite("ExpLevel", &AWillowInteractiveObject::ExpLevel)
		.def_readwrite("GameStage", &AWillowInteractiveObject::GameStage)
		.def_readwrite("AwesomeLevel", &AWillowInteractiveObject::AwesomeLevel)
		.def_readwrite("BalanceDefinitionState", &AWillowInteractiveObject::BalanceDefinitionState, py::return_value_policy::reference)
		.def_readwrite("InteractiveObjectTimers", &AWillowInteractiveObject::InteractiveObjectTimers, py::return_value_policy::reference)
		.def_readwrite("LastMaxHealth", &AWillowInteractiveObject::LastMaxHealth)
		.def_readwrite("LastHealth", &AWillowInteractiveObject::LastHealth)
		.def_readwrite("MaxHealth", &AWillowInteractiveObject::MaxHealth)
		.def_readwrite("MaxHealthBaseValue", &AWillowInteractiveObject::MaxHealthBaseValue)
		.def_readwrite("MaxHealthModifierStack", &AWillowInteractiveObject::MaxHealthModifierStack, py::return_value_policy::reference)
		.def_readwrite("Health", &AWillowInteractiveObject::Health)
		.def_readwrite("AttributeStartingValues", &AWillowInteractiveObject::AttributeStartingValues, py::return_value_policy::reference)
		.def_readwrite("DesignerAttributes", &AWillowInteractiveObject::DesignerAttributes, py::return_value_policy::reference)
		.def_readwrite("AlwaysRelevantDistanceSquared", &AWillowInteractiveObject::AlwaysRelevantDistanceSquared)
		.def_readwrite("StatusEffectComp", &AWillowInteractiveObject::StatusEffectComp, py::return_value_policy::reference)
		.def_readwrite("Directives", &AWillowInteractiveObject::Directives, py::return_value_policy::reference)
		.def_readwrite("MissionDirectorParticle", &AWillowInteractiveObject::MissionDirectorParticle, py::return_value_policy::reference)
		.def_readwrite("ObjectiveBit", &AWillowInteractiveObject::ObjectiveBit)
		.def_readwrite("AnnouncedMissions", &AWillowInteractiveObject::AnnouncedMissions, py::return_value_policy::reference)
		.def_readwrite("AssociatedStationDefinitionName", &AWillowInteractiveObject::AssociatedStationDefinitionName, py::return_value_policy::reference)
		.def_readwrite("Loot", &AWillowInteractiveObject::Loot, py::return_value_policy::reference)
		.def_readwrite("MaxDrawDistanceOverride", &AWillowInteractiveObject::MaxDrawDistanceOverride)
		.def_readwrite("LastDamagedByController", &AWillowInteractiveObject::LastDamagedByController, py::return_value_policy::reference)
		.def_readwrite("HitRegionHealthScaleAttribute", &AWillowInteractiveObject::HitRegionHealthScaleAttribute)
		.def_readwrite("HitRegionHealthScaleAttributeBaseValue", &AWillowInteractiveObject::HitRegionHealthScaleAttributeBaseValue)
		.def_readwrite("HitRegionHealthScaleAttributeModifierStack", &AWillowInteractiveObject::HitRegionHealthScaleAttributeModifierStack, py::return_value_policy::reference)
		.def_readwrite("MyHitRegionHelper", &AWillowInteractiveObject::MyHitRegionHelper, py::return_value_policy::reference)
		.def_readwrite("SMComponent", &AWillowInteractiveObject::SMComponent, py::return_value_policy::reference)
		.def_readwrite("ReplicatedSMData", &AWillowInteractiveObject::ReplicatedSMData, py::return_value_policy::reference)
		.def_readwrite("SimpleAnimState", &AWillowInteractiveObject::SimpleAnimState)
		.def_readwrite("RepSimpleAnimState", &AWillowInteractiveObject::RepSimpleAnimState)
		.def_readwrite("SimpleAnimInfo", &AWillowInteractiveObject::SimpleAnimInfo, py::return_value_policy::reference)
		.def_readwrite("LightProjMgr", &AWillowInteractiveObject::LightProjMgr, py::return_value_policy::reference)
		.def_readwrite("SoundGroup", &AWillowInteractiveObject::SoundGroup, py::return_value_policy::reference)
		.def_readwrite("TargetPatsy", &AWillowInteractiveObject::TargetPatsy, py::return_value_policy::reference)
		.def_readwrite("DialogComponent", &AWillowInteractiveObject::DialogComponent, py::return_value_policy::reference)
		.def_readwrite("DialogReplicatedData", &AWillowInteractiveObject::DialogReplicatedData, py::return_value_policy::reference)
		.def_readwrite("CurrentNameTag", &AWillowInteractiveObject::CurrentNameTag, py::return_value_policy::reference)
		.def_readwrite("LastUsedComponent", &AWillowInteractiveObject::LastUsedComponent, py::return_value_policy::reference)
		.def_readwrite("SkelUpdateTime", &AWillowInteractiveObject::SkelUpdateTime)
		.def_readwrite("LastThrottleCheck", &AWillowInteractiveObject::LastThrottleCheck)
		.def_readwrite("AssociatedChallenge", &AWillowInteractiveObject::AssociatedChallenge, py::return_value_policy::reference)
		.def_readwrite("RepObjectMeshScale", &AWillowInteractiveObject::RepObjectMeshScale)
		.def("OnPlayerClosedMissionUI", &AWillowInteractiveObject::OnPlayerClosedMissionUI)
		.def("OnPlayerOpenedMissionUI", &AWillowInteractiveObject::OnPlayerOpenedMissionUI)
		.def("eventGetMapDisplayName", &AWillowInteractiveObject::eventGetMapDisplayName, py::return_value_policy::reference)
		.def("eventGetMapDisplayHeader", &AWillowInteractiveObject::eventGetMapDisplayHeader, py::return_value_policy::reference)
		.def("GetObstacleInfo", &AWillowInteractiveObject::GetObstacleInfo)
		.def("GetObstacleActor", &AWillowInteractiveObject::GetObstacleActor, py::return_value_policy::reference)
		.def("GetMagnetData", &AWillowInteractiveObject::GetMagnetData)
		.def("SetObstacleVelocity", &AWillowInteractiveObject::SetObstacleVelocity)
		.def("CanAvoidObstacle", &AWillowInteractiveObject::CanAvoidObstacle)
		.def("CanAvoidObstacles", &AWillowInteractiveObject::CanAvoidObstacles)
		.def("SetObstacleActive", &AWillowInteractiveObject::SetObstacleActive)
		.def("IsObstacleActive", &AWillowInteractiveObject::IsObstacleActive)
		.def("SetDialogNameTag", &AWillowInteractiveObject::SetDialogNameTag)
		.def("eventServerDialog_TriggerEvent", &AWillowInteractiveObject::eventServerDialog_TriggerEvent)
		.def("GetReplicatedDialogData", &AWillowInteractiveObject::GetReplicatedDialogData, py::return_value_policy::reference)
		.def("SetReplicatedDialogData", &AWillowInteractiveObject::SetReplicatedDialogData)
		.def("GetDialogGroups", &AWillowInteractiveObject::GetDialogGroups)
		.def("GetDialogComponent", &AWillowInteractiveObject::GetDialogComponent, py::return_value_policy::reference)
		.def("GetDialogNameTag", &AWillowInteractiveObject::GetDialogNameTag, py::return_value_policy::reference)
		.def("CanTalk", &AWillowInteractiveObject::CanTalk)
		.def("TouchDenied", &AWillowInteractiveObject::TouchDenied)
		.def("SetPatsy", &AWillowInteractiveObject::SetPatsy)
		.def("GetPatsy", &AWillowInteractiveObject::GetPatsy, py::return_value_policy::reference)
		.def("IsBeingHealed", &AWillowInteractiveObject::IsBeingHealed)
		.def("SetBeingHealed", &AWillowInteractiveObject::SetBeingHealed)
		.def("GetControllerResponsibleForDamage", &AWillowInteractiveObject::GetControllerResponsibleForDamage, py::return_value_policy::reference)
		.def("GetInstigator", &AWillowInteractiveObject::GetInstigator, py::return_value_policy::reference)
		.def("SetInteractionIcon", &AWillowInteractiveObject::SetInteractionIcon)
		.def("HasAnyMissionsForPlayer", &AWillowInteractiveObject::HasAnyMissionsForPlayer)
		.def("GetMissionDirectorLocation", &AWillowInteractiveObject::GetMissionDirectorLocation, py::return_value_policy::reference)
		.def("GetAllDirectorData", &AWillowInteractiveObject::GetAllDirectorData)
		.def("GetLightProjMgrFor", &AWillowInteractiveObject::GetLightProjMgrFor, py::return_value_policy::reference)
		.def("NotifyTakeHit", &AWillowInteractiveObject::NotifyTakeHit)
		.def("eventServerSpecialMove_StopAny", &AWillowInteractiveObject::eventServerSpecialMove_StopAny)
		.def("eventServerSpecialMove_Stop", &AWillowInteractiveObject::eventServerSpecialMove_Stop)
		.def("eventServerSpecialMove_Queue", &AWillowInteractiveObject::eventServerSpecialMove_Queue)
		.def("eventServerSpecialMove_Play", &AWillowInteractiveObject::eventServerSpecialMove_Play)
		.def("SetReplicatedSMData", &AWillowInteractiveObject::SetReplicatedSMData)
		.def("GetDefaultRootMotionRotationMode", &AWillowInteractiveObject::GetDefaultRootMotionRotationMode)
		.def("GetDefaultRootMotionMode", &AWillowInteractiveObject::GetDefaultRootMotionMode)
		.def("GetSkelMesh", &AWillowInteractiveObject::GetSkelMesh, py::return_value_policy::reference)
		.def("GetSMComponent", &AWillowInteractiveObject::GetSMComponent, py::return_value_policy::reference)
		.def("GetActor", &AWillowInteractiveObject::GetActor, py::return_value_policy::reference)
		.def("GetFocusScreenOffset", &AWillowInteractiveObject::GetFocusScreenOffset, py::return_value_policy::reference)
		.def("GetFocusRadius", &AWillowInteractiveObject::GetFocusRadius)
		.def("GetFocusLocation", &AWillowInteractiveObject::GetFocusLocation, py::return_value_policy::reference)
		.def("EndFocus", &AWillowInteractiveObject::EndFocus)
		.def("BeginFocus", &AWillowInteractiveObject::BeginFocus)
		.def("GetIntrinsicArmor", &AWillowInteractiveObject::GetIntrinsicArmor)
		.def("OnShieldDepleted", &AWillowInteractiveObject::OnShieldDepleted)
		.def("SetShieldStrength", &AWillowInteractiveObject::SetShieldStrength)
		.def("GetMaxShieldStrength", &AWillowInteractiveObject::GetMaxShieldStrength)
		.def("GetShieldStrength", &AWillowInteractiveObject::GetShieldStrength)
		.def("NotifyDamageTaken", &AWillowInteractiveObject::NotifyDamageTaken)
		.def("WillLootableBeResetOnLevelLoad", &AWillowInteractiveObject::WillLootableBeResetOnLevelLoad)
		.def("PlayHit", &AWillowInteractiveObject::PlayHit)
		.def("ResetHitRegionHealth", &AWillowInteractiveObject::ResetHitRegionHealth)
		.def("PlayHealingReaction", &AWillowInteractiveObject::PlayHealingReaction)
		.def("HealDamageOnHitRegion", &AWillowInteractiveObject::HealDamageOnHitRegion)
		.def("PlayDamageReaction", &AWillowInteractiveObject::PlayDamageReaction)
		.def("ReplicateDamageEffect", &AWillowInteractiveObject::ReplicateDamageEffect)
		.def("GetMaxHealth", &AWillowInteractiveObject::GetMaxHealth)
		.def("GetHealth", &AWillowInteractiveObject::GetHealth)
		.def("AddDamageToHitRegion", &AWillowInteractiveObject::AddDamageToHitRegion)
		.def("GetHitRegionForTakenDamage", &AWillowInteractiveObject::GetHitRegionForTakenDamage, py::return_value_policy::reference)
		.def("AddMissionLoot", &AWillowInteractiveObject::AddMissionLoot)
		.def("GetDroppedLoot", &AWillowInteractiveObject::GetDroppedLoot)
		.def("GetAttachedLoot", &AWillowInteractiveObject::GetAttachedLoot)
		.def("ServerClearStatusEffects", &AWillowInteractiveObject::ServerClearStatusEffects)
		.def("Behavior_ClearStatusEffects", &AWillowInteractiveObject::Behavior_ClearStatusEffects)
		.def("SetMorphNodeWeight", &AWillowInteractiveObject::SetMorphNodeWeight)
		.def("UpdateTargetableState", &AWillowInteractiveObject::UpdateTargetableState)
		.def("Behavior_RegisterTargetable", &AWillowInteractiveObject::Behavior_RegisterTargetable)
		.def("GetHumanReadableName", &AWillowInteractiveObject::GetHumanReadableName, py::return_value_policy::reference)
		.def("eventGetTargetName", &AWillowInteractiveObject::eventGetTargetName)
		.def("GetAutoAimProfile", &AWillowInteractiveObject::GetAutoAimProfile)
		.def("GetMagnetismRange", &AWillowInteractiveObject::GetMagnetismRange)
		.def("GetMagnetismOrigin", &AWillowInteractiveObject::GetMagnetismOrigin, py::return_value_policy::reference)
		.def("IsAutoAimTarget", &AWillowInteractiveObject::IsAutoAimTarget)
		.def("GetTargetingModifier", &AWillowInteractiveObject::GetTargetingModifier)
		.def("HasHomingTargetComponents", &AWillowInteractiveObject::HasHomingTargetComponents)
		.def("IsValidHomingTarget", &AWillowInteractiveObject::IsValidHomingTarget)
		.def("Behavior_SetCanTarget", &AWillowInteractiveObject::Behavior_SetCanTarget)
		.def("ShowSelfAsTarget", &AWillowInteractiveObject::ShowSelfAsTarget)
		.def("GetTargetableIsHidden", &AWillowInteractiveObject::GetTargetableIsHidden)
		.def("GetTargetableLocation", &AWillowInteractiveObject::GetTargetableLocation, py::return_value_policy::reference)
		.def("CanSnapZoom", &AWillowInteractiveObject::CanSnapZoom)
		.def("GetSnapLocation", &AWillowInteractiveObject::GetSnapLocation, py::return_value_policy::reference)
		.def("IsTargetableProxy", &AWillowInteractiveObject::IsTargetableProxy)
		.def("IsTargetable", &AWillowInteractiveObject::IsTargetable)
		.def("GetOpinion", &AWillowInteractiveObject::GetOpinion)
		.def("SetAllegiance", &AWillowInteractiveObject::SetAllegiance)
		.def("GetDefaultAllegiance", &AWillowInteractiveObject::GetDefaultAllegiance, py::return_value_policy::reference)
		.def("GetObjectAllegiance", &AWillowInteractiveObject::GetObjectAllegiance, py::return_value_policy::reference)
		.def("IsSameAllegiance", &AWillowInteractiveObject::IsSameAllegiance)
		.def("IsNeutral", &AWillowInteractiveObject::IsNeutral)
		.def("IsFriendly", &AWillowInteractiveObject::IsFriendly)
		.def("IsEnemy", &AWillowInteractiveObject::IsEnemy)
		.def("GFx_NotifyMovieDestroy", &AWillowInteractiveObject::GFx_NotifyMovieDestroy)
		.def("GFx_NotifyMovieCreate", &AWillowInteractiveObject::GFx_NotifyMovieCreate)
		.def("GFx_GetMovieActor", &AWillowInteractiveObject::GFx_GetMovieActor, py::return_value_policy::reference)
		.def("GetReplicatedInstanceDataState", &AWillowInteractiveObject::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &AWillowInteractiveObject::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &AWillowInteractiveObject::DestroyOwnedInstanceData)
		.def("eventDestroyed", &AWillowInteractiveObject::eventDestroyed)
		.def("CleanupKilledInteractiveObject", &AWillowInteractiveObject::CleanupKilledInteractiveObject)
		.def("eventGetObjectiveBit", &AWillowInteractiveObject::eventGetObjectiveBit)
		.def("eventDeactivateMissionDirectorParticle", &AWillowInteractiveObject::eventDeactivateMissionDirectorParticle)
		.def("eventSetMissionDirectorParticle", &AWillowInteractiveObject::eventSetMissionDirectorParticle)
		.def("eventMissionStatusChanged", &AWillowInteractiveObject::eventMissionStatusChanged)
		.def("SetMissionDirectivesUsability", &AWillowInteractiveObject::SetMissionDirectivesUsability)
		.def("OnPlayerTurnedInMission", &AWillowInteractiveObject::OnPlayerTurnedInMission)
		.def("OnPlayerAcceptedMission", &AWillowInteractiveObject::OnPlayerAcceptedMission)
		.def("GetInProgressMissions", &AWillowInteractiveObject::GetInProgressMissions)
		.def("GetRedeemableMissions", &AWillowInteractiveObject::GetRedeemableMissions)
		.def("GetEligibleMissions", &AWillowInteractiveObject::GetEligibleMissions)
		.def("eventAddMissionDirective", &AWillowInteractiveObject::eventAddMissionDirective)
		.def("RegisterMissionDirector", &AWillowInteractiveObject::RegisterMissionDirector)
		.def("NotifyUserCouldNotAffordAttemptedUse", &AWillowInteractiveObject::NotifyUserCouldNotAffordAttemptedUse)
		.def("UseObject", &AWillowInteractiveObject::UseObject)
		.def("eventGetInstanceData", &AWillowInteractiveObject::eventGetInstanceData)
		.def("eventRemoveInstanceDataObject", &AWillowInteractiveObject::eventRemoveInstanceDataObject)
		.def("eventRemoveInstanceData", &AWillowInteractiveObject::eventRemoveInstanceData)
		.def("SetInstanceData", &AWillowInteractiveObject::SetInstanceData)
		.def("eventGetInstancedDesignerAttribute", &AWillowInteractiveObject::eventGetInstancedDesignerAttribute, py::return_value_policy::reference)
		.def("CreateDesignerAttribute", &AWillowInteractiveObject::CreateDesignerAttribute, py::return_value_policy::reference)
		.def("InitializeAttributeStartingValues", &AWillowInteractiveObject::InitializeAttributeStartingValues)
		.def("Behavior_ChangeUsabilityCost", &AWillowInteractiveObject::Behavior_ChangeUsabilityCost)
		.def("eventGetUsability", &AWillowInteractiveObject::eventGetUsability)
		.def("SetUsabilityForComponent", &AWillowInteractiveObject::SetUsabilityForComponent)
		.def("eventSetUsability", &AWillowInteractiveObject::eventSetUsability)
		.def("Behavior_ChangeUsability", &AWillowInteractiveObject::Behavior_ChangeUsability)
		.def("Behavior_Killed", &AWillowInteractiveObject::Behavior_Killed)
		.def("Behavior_CauseRadiusDamage", &AWillowInteractiveObject::Behavior_CauseRadiusDamage)
		.def("Behavior_CauseDamage", &AWillowInteractiveObject::Behavior_CauseDamage)
		.def("TakeRadiusDamage", &AWillowInteractiveObject::TakeRadiusDamage)
		.def("DeadInteractiveObjectCleanup", &AWillowInteractiveObject::DeadInteractiveObjectCleanup)
		.def("StartDeadInteractiveObjectCleanupTimer", &AWillowInteractiveObject::StartDeadInteractiveObjectCleanupTimer)
		.def("KilledBy", &AWillowInteractiveObject::KilledBy)
		.def("eventHandleHealthDepleted", &AWillowInteractiveObject::eventHandleHealthDepleted)
		.def("IsFullyArmored", &AWillowInteractiveObject::IsFullyArmored)
		.def("GetDamageSurfaceTypeFromHit", &AWillowInteractiveObject::GetDamageSurfaceTypeFromHit)
		.def("GetDefaultDamageSurfaceType", &AWillowInteractiveObject::GetDefaultDamageSurfaceType)
		.def("AdjustMomentumForSurfaceType", &AWillowInteractiveObject::AdjustMomentumForSurfaceType)
		.def("GetLastDamagedByController", &AWillowInteractiveObject::GetLastDamagedByController, py::return_value_policy::reference)
		.def("eventTakeDamage", &AWillowInteractiveObject::eventTakeDamage)
		.def("GetNonCheatGodMode", &AWillowInteractiveObject::GetNonCheatGodMode)
		.def("SetNonCheatGodMode", &AWillowInteractiveObject::SetNonCheatGodMode)
		.def("eventRunCustomEvent", &AWillowInteractiveObject::eventRunCustomEvent)
		.def("eventOnTimerEvent", &AWillowInteractiveObject::eventOnTimerEvent)
		.def("SetTimerState", &AWillowInteractiveObject::SetTimerState)
		.def("GetTimerState", &AWillowInteractiveObject::GetTimerState)
		.def("GetTimeSeconds", &AWillowInteractiveObject::GetTimeSeconds)
		.def("EvaluateAttributeInitialization", &AWillowInteractiveObject::EvaluateAttributeInitialization)
		.def("GetMesh", &AWillowInteractiveObject::GetMesh, py::return_value_policy::reference)
		.def("FindAnimNode", &AWillowInteractiveObject::FindAnimNode, py::return_value_policy::reference)
		.def("SetRotationRate", &AWillowInteractiveObject::SetRotationRate)
		.def("GetCollisionRadius", &AWillowInteractiveObject::GetCollisionRadius)
		.def("ConditionalReactToUse", &AWillowInteractiveObject::ConditionalReactToUse)
		.def("UsedBy", &AWillowInteractiveObject::UsedBy)
		.def("IsComponentUsable", &AWillowInteractiveObject::IsComponentUsable)
		.def("eventUnTouch", &AWillowInteractiveObject::eventUnTouch)
		.def("eventTouch", &AWillowInteractiveObject::eventTouch)
		.def("InitializeRelevanceDistance", &AWillowInteractiveObject::InitializeRelevanceDistance)
		.def("InitializeTickGroup", &AWillowInteractiveObject::InitializeTickGroup)
		.def("InitializeFromDefinition", &AWillowInteractiveObject::InitializeFromDefinition)
		.def("ClearBodyCompositionInstance", &AWillowInteractiveObject::ClearBodyCompositionInstance)
		.def("GetBodyInfoProvider", &AWillowInteractiveObject::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("ApplyPreviewBodyComposition", &AWillowInteractiveObject::ApplyPreviewBodyComposition)
		.def("ChangeInstanceDataSwitch", &AWillowInteractiveObject::ChangeInstanceDataSwitch)
		.def("PostInitBodyComposition", &AWillowInteractiveObject::PostInitBodyComposition)
		.def("PreRemoveBodyComposition", &AWillowInteractiveObject::PreRemoveBodyComposition)
		.def("InitializeRBPhys", &AWillowInteractiveObject::InitializeRBPhys)
		.def("TerminateRBPhys", &AWillowInteractiveObject::TerminateRBPhys)
		.def("SetCompassIcon", &AWillowInteractiveObject::SetCompassIcon)
		.def("ConditionalAddToCompass", &AWillowInteractiveObject::ConditionalAddToCompass)
		.def("eventTornOff", &AWillowInteractiveObject::eventTornOff)
		.def("ApplyBalanceDefinitionCustomizations", &AWillowInteractiveObject::ApplyBalanceDefinitionCustomizations)
		.def("InitializeBalanceDefinitionState", &AWillowInteractiveObject::InitializeBalanceDefinitionState)
		.def("eventReplicatedEvent", &AWillowInteractiveObject::eventReplicatedEvent)
		.def("ReceiveDefinition", &AWillowInteractiveObject::ReceiveDefinition)
		.def("ResendDefinition", &AWillowInteractiveObject::ResendDefinition)
		.def("CanResendDefinition", &AWillowInteractiveObject::CanResendDefinition)
		.def("TryAddToPostRenderedActorsList", &AWillowInteractiveObject::TryAddToPostRenderedActorsList)
		.def("PostBeginPlay", &AWillowInteractiveObject::PostBeginPlay)
		.def("SetOverrideProgressNumber", &AWillowInteractiveObject::SetOverrideProgressNumber)
		.def("SetOverrideAssociatedChallenge", &AWillowInteractiveObject::SetOverrideAssociatedChallenge)
		.def("GetProgressNumber", &AWillowInteractiveObject::GetProgressNumber)
		.def("GetAssociatedChallenge", &AWillowInteractiveObject::GetAssociatedChallenge, py::return_value_policy::reference)
		.def("ApplyMaxDrawDistanceOverride", &AWillowInteractiveObject::ApplyMaxDrawDistanceOverride)
		.def("SetMaxDrawDistanceOverride", &AWillowInteractiveObject::SetMaxDrawDistanceOverride)
		.def("UpdateCollideAsEncroacher", &AWillowInteractiveObject::UpdateCollideAsEncroacher)
		.def("SetCollisionOnComponentFromCollisionType", &AWillowInteractiveObject::SetCollisionOnComponentFromCollisionType)
		.def("SetCollisionFromCollisionType", &AWillowInteractiveObject::SetCollisionFromCollisionType)
		.def("GetBehaviorConsumerHandle", &AWillowInteractiveObject::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("ProcessBehaviorSetsFlags", &AWillowInteractiveObject::ProcessBehaviorSetsFlags)
		.def("GetBalancedActorTypeIdentifier", &AWillowInteractiveObject::GetBalancedActorTypeIdentifier, py::return_value_policy::reference)
		.def("SetExpLevel", &AWillowInteractiveObject::SetExpLevel)
		.def("SetAwesomeLevel", &AWillowInteractiveObject::SetAwesomeLevel)
		.def("SetGameStage", &AWillowInteractiveObject::SetGameStage)
		.def("GetExpLevelForEquip", &AWillowInteractiveObject::GetExpLevelForEquip)
		.def("GetExpLevel", &AWillowInteractiveObject::GetExpLevel)
		.def("GetAwesomeLevel", &AWillowInteractiveObject::GetAwesomeLevel)
		.def("GetGameStage", &AWillowInteractiveObject::GetGameStage)
		.def("CanReceiveStatusEffects", &AWillowInteractiveObject::CanReceiveStatusEffects)
		.def("ReactToPrimaryStatusEffect", &AWillowInteractiveObject::ReactToPrimaryStatusEffect)
		.def("GetAttributeContextSource", &AWillowInteractiveObject::GetAttributeContextSource, py::return_value_policy::reference)
		.def("GetBoundingSphereRadius", &AWillowInteractiveObject::GetBoundingSphereRadius)
		.def("AttachEmitter", &AWillowInteractiveObject::AttachEmitter)
		.def("GetDefaultStatusEffectsParticleSystemTemplate", &AWillowInteractiveObject::GetDefaultStatusEffectsParticleSystemTemplate, py::return_value_policy::reference)
		.def("GetDefaultStatusEffectSockets", &AWillowInteractiveObject::GetDefaultStatusEffectSockets, py::return_value_policy::reference)
		.def("GetStatusEffectsComponent", &AWillowInteractiveObject::GetStatusEffectsComponent, py::return_value_policy::reference)
		.def("SetInfoBarVisibility", &AWillowInteractiveObject::SetInfoBarVisibility)
		.def("HideTargetInfoOnHud", &AWillowInteractiveObject::HideTargetInfoOnHud)
		.def("HackHealthDisplay", &AWillowInteractiveObject::HackHealthDisplay)
		.def("IsChampion", &AWillowInteractiveObject::IsChampion)
		.def("IsBoss", &AWillowInteractiveObject::IsBoss)
		.def("DoesTargetableTakeDamage", &AWillowInteractiveObject::DoesTargetableTakeDamage)
		.def("DisplayParentInfo", &AWillowInteractiveObject::DisplayParentInfo)
		.def("GetAllBarInfo", &AWillowInteractiveObject::GetAllBarInfo)
		.def("GetTargetableActor", &AWillowInteractiveObject::GetTargetableActor, py::return_value_policy::reference)
		.def("ShieldAbsorbedAmmo", [](AWillowInteractiveObject &self , class UClass* DamageSource, class UWillowDamageTypeDefinition* DamageTypeDef) { float* pyDamagePercentToAbsorb = (float*)malloc(sizeof(float)) ;  bool ret =  self.ShieldAbsorbedAmmo(DamageSource, DamageTypeDef, pyDamagePercentToAbsorb); return py::make_tuple(ret, *pyDamagePercentToAbsorb); })
		.def("GetHitRegionHealthValues", [](AWillowInteractiveObject &self , class UBodyHitRegionDefinition* HitRegion) { float* pyoutHealth = (float*)malloc(sizeof(float)) ; float* pyoutMaxHealth = (float*)malloc(sizeof(float)) ;   self.GetHitRegionHealthValues(HitRegion, pyoutHealth, pyoutMaxHealth); return py::make_tuple(*pyoutHealth, *pyoutMaxHealth); })
		.def("ReduceInteractiveObjectDamage", [](AWillowInteractiveObject &self , class AController* InstigatedBy) { float* pyDamage = (float*)malloc(sizeof(float)) ;   self.ReduceInteractiveObjectDamage(InstigatedBy, pyDamage); return py::make_tuple(*pyDamage); })
		.def("GetHitRegions", [](AWillowInteractiveObject &self , TArray< class UBodyHitRegionDefinition* >* Regions) { class UBodyHitRegionDefinition** pyDefaultRegion = 0 ;   self.GetHitRegions(Regions, pyDefaultRegion); return py::make_tuple(*pyDefaultRegion); })
		.def("GetExpInfo", [](AWillowInteractiveObject &self ) { int* pyExpLevelValue = (int*)malloc(sizeof(int)) ;   self.GetExpInfo(pyExpLevelValue); return py::make_tuple(*pyExpLevelValue); })
		;
	py::class_< ATravelStation, AWillowInteractiveObject >(m, "ATravelStation")
		.def_property("DetachTeleporter", [](ATravelStation &self){return self.DetachTeleporter;}, [](ATravelStation &self, bool value){self.DetachTeleporter = value ? 1 : 0;})
		.def_property("DetachTeleportInteraction", [](ATravelStation &self){return self.DetachTeleportInteraction;}, [](ATravelStation &self, bool value){self.DetachTeleportInteraction = value ? 1 : 0;})
		.def_property("bShouldBeActive", [](ATravelStation &self){return self.bShouldBeActive;}, [](ATravelStation &self, bool value){self.bShouldBeActive = value ? 1 : 0;})
		.def_property("bIsCurrentlyActive", [](ATravelStation &self){return self.bIsCurrentlyActive;}, [](ATravelStation &self, bool value){self.bIsCurrentlyActive = value ? 1 : 0;})
		.def_property("bHasActiveState", [](ATravelStation &self){return self.bHasActiveState;}, [](ATravelStation &self, bool value){self.bHasActiveState = value ? 1 : 0;})
		.def_property("bFastTravelEnabled", [](ATravelStation &self){return self.bFastTravelEnabled;}, [](ATravelStation &self, bool value){self.bFastTravelEnabled = value ? 1 : 0;})
		.def_readwrite("VfTable_IIMission", &ATravelStation::VfTable_IIMission, py::return_value_policy::reference)
		.def_readwrite("StationAntennaLight", &ATravelStation::StationAntennaLight, py::return_value_policy::reference)
		.def_readwrite("TeleportDest", &ATravelStation::TeleportDest, py::return_value_policy::reference)
		.def_readwrite("TeleportDestOffset", &ATravelStation::TeleportDestOffset, py::return_value_policy::reference)
		.def_readwrite("TravelStationActivationOffset", &ATravelStation::TravelStationActivationOffset, py::return_value_policy::reference)
		.def_readwrite("DebugDescription", &ATravelStation::DebugDescription, py::return_value_policy::reference)
		.def_readwrite("DebugGameStageRegion", &ATravelStation::DebugGameStageRegion, py::return_value_policy::reference)
		.def_readwrite("TouchVolumes", &ATravelStation::TouchVolumes, py::return_value_policy::reference)
		.def_readwrite("TouchRadius", &ATravelStation::TouchRadius)
		.def_readwrite("StationTouchRadius", &ATravelStation::StationTouchRadius)
		.def_readwrite("StationTouchHeight", &ATravelStation::StationTouchHeight)
		.def_readwrite("Nozzle1SocketName", &ATravelStation::Nozzle1SocketName, py::return_value_policy::reference)
		.def_readwrite("Nozzle2SocketName", &ATravelStation::Nozzle2SocketName, py::return_value_policy::reference)
		.def_readwrite("Nozzle3SocketName", &ATravelStation::Nozzle3SocketName, py::return_value_policy::reference)
		.def_readwrite("Nozzle4SocketName", &ATravelStation::Nozzle4SocketName, py::return_value_policy::reference)
		.def("CanResurrectHere", &ATravelStation::CanResurrectHere)
		.def("eventSetUsability", &ATravelStation::eventSetUsability)
		.def("eventAddLevelTransitionWaypoint", &ATravelStation::eventAddLevelTransitionWaypoint, py::return_value_policy::reference)
		.def("FindTravelStation", &ATravelStation::FindTravelStation, py::return_value_policy::reference)
		.def("SetFastTravelDebug", &ATravelStation::SetFastTravelDebug)
		.def("IsFastTravelEnabled", &ATravelStation::IsFastTravelEnabled)
		.def("eventMissionReactionObjectiveCleared", &ATravelStation::eventMissionReactionObjectiveCleared)
		.def("eventMissionReactionObjectiveUpdated", &ATravelStation::eventMissionReactionObjectiveUpdated)
		.def("eventMissionReactionObjectiveSetChanged", &ATravelStation::eventMissionReactionObjectiveSetChanged)
		.def("eventMissionReactionObjectiveComplete", &ATravelStation::eventMissionReactionObjectiveComplete)
		.def("eventMissionReactionStatusChanged", &ATravelStation::eventMissionReactionStatusChanged)
		.def("eventMissionReactionLevelLoad", &ATravelStation::eventMissionReactionLevelLoad)
		.def("GetInstanceData", &ATravelStation::GetInstanceData)
		.def("ReplacePreviouslyActivatedStation", &ATravelStation::ReplacePreviouslyActivatedStation)
		.def("eventSetStationActivatedState", &ATravelStation::eventSetStationActivatedState)
		.def("TouchDenied", &ATravelStation::TouchDenied)
		.def("GetTravelStationDefinition", &ATravelStation::GetTravelStationDefinition, py::return_value_policy::reference)
		.def("InitializeFromDefinition", &ATravelStation::InitializeFromDefinition)
		.def("eventPostBeginPlay", &ATravelStation::eventPostBeginPlay)
		.def("eventReplicatedEvent", &ATravelStation::eventReplicatedEvent)
		.def("UpdateCollideAsEncroacher", &ATravelStation::UpdateCollideAsEncroacher)
		;
	py::class_< AFastTravelStation, ATravelStation >(m, "AFastTravelStation")
		.def_readwrite("TravelDefinition", &AFastTravelStation::TravelDefinition, py::return_value_policy::reference)
		.def("CanResurrectHere", &AFastTravelStation::CanResurrectHere)
		.def("eventGetMapDisplayName", &AFastTravelStation::eventGetMapDisplayName, py::return_value_policy::reference)
		.def("GetHumanReadableName", &AFastTravelStation::GetHumanReadableName, py::return_value_policy::reference)
		.def("GetIsRegistered", &AFastTravelStation::GetIsRegistered)
		.def("GetTravelStationDefinition", &AFastTravelStation::GetTravelStationDefinition, py::return_value_policy::reference)
		;
	py::class_< ALevelTravelStation, ATravelStation >(m, "ALevelTravelStation")
		.def_readwrite("TravelDefinition", &ALevelTravelStation::TravelDefinition, py::return_value_policy::reference)
		.def_readwrite("WaypointExceptions", &ALevelTravelStation::WaypointExceptions, py::return_value_policy::reference)
		.def_readwrite("LevelTravelMapDisplayName", &ALevelTravelStation::LevelTravelMapDisplayName, py::return_value_policy::reference)
		.def("GetDestinationMapName", &ALevelTravelStation::GetDestinationMapName, py::return_value_policy::reference)
		.def("eventGetMapDisplayName", &ALevelTravelStation::eventGetMapDisplayName, py::return_value_policy::reference)
		.def("GetHumanReadableName", &ALevelTravelStation::GetHumanReadableName, py::return_value_policy::reference)
		.def("GetDlcDestination", &ALevelTravelStation::GetDlcDestination, py::return_value_policy::reference)
		.def("eventPostBeginPlay", &ALevelTravelStation::eventPostBeginPlay)
		.def("GetTravelStationDefinition", &ALevelTravelStation::GetTravelStationDefinition, py::return_value_policy::reference)
		;
	py::class_< AResurrectTravelStation, ATravelStation >(m, "AResurrectTravelStation")
		.def("CanResurrectHere", &AResurrectTravelStation::CanResurrectHere)
		;
	py::class_< AVehicleSpawnStationPlatform, AWillowInteractiveObject >(m, "AVehicleSpawnStationPlatform")
		.def_readwrite("StationSlot", &AVehicleSpawnStationPlatform::StationSlot)
		.def_readwrite("CachedVSSVehicleDefinition", &AVehicleSpawnStationPlatform::CachedVSSVehicleDefinition, py::return_value_policy::reference)
		.def_readwrite("SeatOccupiedFlags", &AVehicleSpawnStationPlatform::SeatOccupiedFlags)
		.def("SetInteractionIcon", &AVehicleSpawnStationPlatform::SetInteractionIcon)
		.def("TriggerKismetVehicleSpawnEvents", &AVehicleSpawnStationPlatform::TriggerKismetVehicleSpawnEvents)
		.def("SpawnVehicle", &AVehicleSpawnStationPlatform::SpawnVehicle)
		.def("Behavior_SpawnVehicle", &AVehicleSpawnStationPlatform::Behavior_SpawnVehicle)
		.def("StartSpawnProcess", &AVehicleSpawnStationPlatform::StartSpawnProcess)
		.def("UsedBy", &AVehicleSpawnStationPlatform::UsedBy)
		.def("TryToTeleportToVehicle", &AVehicleSpawnStationPlatform::TryToTeleportToVehicle)
		.def("IsActorSpawnedVehicle", &AVehicleSpawnStationPlatform::IsActorSpawnedVehicle)
		.def("SetSeatOccupied", &AVehicleSpawnStationPlatform::SetSeatOccupied)
		;
	py::class_< AVehicleSpawnStationTerminal, AWillowInteractiveObject >(m, "AVehicleSpawnStationTerminal")
		.def("eventDespawnVehicle", &AVehicleSpawnStationTerminal::eventDespawnVehicle)
		.def("SpawnVehicle", &AVehicleSpawnStationTerminal::SpawnVehicle)
		.def("StopUsing", &AVehicleSpawnStationTerminal::StopUsing)
		.def("UsedBy", &AVehicleSpawnStationTerminal::UsedBy)
		.def("ActivatedForPlayerUse", &AVehicleSpawnStationTerminal::ActivatedForPlayerUse)
		.def("UnlockForOtherUsers", &AVehicleSpawnStationTerminal::UnlockForOtherUsers)
		.def("LockOutOtherUsers", &AVehicleSpawnStationTerminal::LockOutOtherUsers)
		.def("eventPostBeginPlay", &AVehicleSpawnStationTerminal::eventPostBeginPlay)
		;
	py::class_< AWillowElevatorButton, AWillowInteractiveObject >(m, "AWillowElevatorButton")
		.def_property("bGlowing", [](AWillowElevatorButton &self){return self.bGlowing;}, [](AWillowElevatorButton &self, bool value){self.bGlowing = value ? 1 : 0;})
		.def_readwrite("Usage", &AWillowElevatorButton::Usage)
		.def_readwrite("ButtonState", &AWillowElevatorButton::ButtonState)
		.def_readwrite("CallFloor", &AWillowElevatorButton::CallFloor)
		.def_readwrite("BehaviorSetName_Enabled", &AWillowElevatorButton::BehaviorSetName_Enabled, py::return_value_policy::reference)
		.def_readwrite("BehaviorSetName_Disabled", &AWillowElevatorButton::BehaviorSetName_Disabled, py::return_value_policy::reference)
		.def_readwrite("BehaviorSetName_InUse", &AWillowElevatorButton::BehaviorSetName_InUse, py::return_value_policy::reference)
		.def_readwrite("BehaviorSetName_EnabledButUseless", &AWillowElevatorButton::BehaviorSetName_EnabledButUseless, py::return_value_policy::reference)
		.def_readwrite("BehaviorSetName_Enabled_Glowing", &AWillowElevatorButton::BehaviorSetName_Enabled_Glowing, py::return_value_policy::reference)
		.def_readwrite("BehaviorSetName_Disabled_Glowing", &AWillowElevatorButton::BehaviorSetName_Disabled_Glowing, py::return_value_policy::reference)
		.def_readwrite("BehaviorSetName_InUse_Glowing", &AWillowElevatorButton::BehaviorSetName_InUse_Glowing, py::return_value_policy::reference)
		.def_readwrite("BehaviorSetName_EnabledButUseless_Glowing", &AWillowElevatorButton::BehaviorSetName_EnabledButUseless_Glowing, py::return_value_policy::reference)
		.def_readwrite("AssociatedElevators", &AWillowElevatorButton::AssociatedElevators, py::return_value_policy::reference)
		.def("UpdateState", &AWillowElevatorButton::UpdateState)
		.def("CanBeUsedForAnyAssociatedElevator", &AWillowElevatorButton::CanBeUsedForAnyAssociatedElevator)
		.def("UseObject", &AWillowElevatorButton::UseObject)
		;
	py::class_< AWillowInteractiveSwitch, AWillowInteractiveObject >(m, "AWillowInteractiveSwitch")
		.def_readwrite("OnBehaviorSetName", &AWillowInteractiveSwitch::OnBehaviorSetName, py::return_value_policy::reference)
		.def_readwrite("NotAllPlayersNearBehaviorSetName", &AWillowInteractiveSwitch::NotAllPlayersNearBehaviorSetName, py::return_value_policy::reference)
		.def_readwrite("OffBehaviorSetName", &AWillowInteractiveSwitch::OffBehaviorSetName, py::return_value_policy::reference)
		.def_readwrite("AllActorsInVolumes", &AWillowInteractiveSwitch::AllActorsInVolumes, py::return_value_policy::reference)
		.def_readwrite("TouchingPlayers", &AWillowInteractiveSwitch::TouchingPlayers, py::return_value_policy::reference)
		.def_readwrite("TouchingVehicles", &AWillowInteractiveSwitch::TouchingVehicles, py::return_value_policy::reference)
		.def_readwrite("NumberOfTouchingPlayers", &AWillowInteractiveSwitch::NumberOfTouchingPlayers)
		.def_readwrite("OffIcon", &AWillowInteractiveSwitch::OffIcon)
		.def_readwrite("NotAllPlayersNearIcon", &AWillowInteractiveSwitch::NotAllPlayersNearIcon)
		.def_readwrite("OffIconDef", &AWillowInteractiveSwitch::OffIconDef, py::return_value_policy::reference)
		.def_readwrite("NotAllPlayersNearIconDef", &AWillowInteractiveSwitch::NotAllPlayersNearIconDef, py::return_value_policy::reference)
		.def_readwrite("CurrentIcon", &AWillowInteractiveSwitch::CurrentIcon, py::return_value_policy::reference)
		.def("SetInteractionIcon", &AWillowInteractiveSwitch::SetInteractionIcon)
		.def("PlayerLeftGame", &AWillowInteractiveSwitch::PlayerLeftGame)
		.def("PlayerEnteredGame", &AWillowInteractiveSwitch::PlayerEnteredGame)
		.def("SetCurrentIcon", &AWillowInteractiveSwitch::SetCurrentIcon)
		.def("eventSetInitialState", &AWillowInteractiveSwitch::eventSetInitialState)
		.def("PostBeginPlay", &AWillowInteractiveSwitch::PostBeginPlay)
		;
	py::class_< AWillowPropObject, AWillowInteractiveObject >(m, "AWillowPropObject")
		.def("PostBeginPlay", &AWillowPropObject::PostBeginPlay)
		;
	py::class_< AWillowVendingMachineBase, AWillowInteractiveObject >(m, "AWillowVendingMachineBase")
		.def_property("bOverrideFormOfCurrency", [](AWillowVendingMachineBase &self){return self.bOverrideFormOfCurrency;}, [](AWillowVendingMachineBase &self, bool value){self.bOverrideFormOfCurrency = value ? 1 : 0;})
		.def_readwrite("VfTable_IIShop", &AWillowVendingMachineBase::VfTable_IIShop, py::return_value_policy::reference)
		.def_readwrite("ShopType", &AWillowVendingMachineBase::ShopType)
		.def_readwrite("FormOfCurrency", &AWillowVendingMachineBase::FormOfCurrency)
		.def_readwrite("FixedItemCost", &AWillowVendingMachineBase::FixedItemCost)
		.def_readwrite("FixedFeaturedItemCost", &AWillowVendingMachineBase::FixedFeaturedItemCost)
		.def("eventDestroyed", &AWillowVendingMachineBase::eventDestroyed)
		.def("GetResetCost", &AWillowVendingMachineBase::GetResetCost)
		.def("ClearInventory", &AWillowVendingMachineBase::ClearInventory)
		.def("eventResetInventory", &AWillowVendingMachineBase::eventResetInventory)
		.def("PlayerBuyBackItem", &AWillowVendingMachineBase::PlayerBuyBackItem)
		.def("PlayerBuyItem", &AWillowVendingMachineBase::PlayerBuyItem)
		.def("PlayerSellItem", &AWillowVendingMachineBase::PlayerSellItem)
		.def("GetFeaturedItem", &AWillowVendingMachineBase::GetFeaturedItem, py::return_value_policy::reference)
		.def("GetBuyBackList", &AWillowVendingMachineBase::GetBuyBackList)
		.def("GetInventoryList", &AWillowVendingMachineBase::GetInventoryList)
		.def("GetItemStatus", &AWillowVendingMachineBase::GetItemStatus)
		.def("NotifyBasedPickupRemoved", &AWillowVendingMachineBase::NotifyBasedPickupRemoved)
		.def("RemoveSoldInventory", &AWillowVendingMachineBase::RemoveSoldInventory)
		.def("GetWeaponList", &AWillowVendingMachineBase::GetWeaponList)
		.def("GetItemList", &AWillowVendingMachineBase::GetItemList)
		.def("GetSellingPriceForInventory", &AWillowVendingMachineBase::GetSellingPriceForInventory)
		.def("GetCurrencyTypeInventoryIsSoldIn", &AWillowVendingMachineBase::GetCurrencyTypeInventoryIsSoldIn)
		.def("GetShopType", &AWillowVendingMachineBase::GetShopType)
		;
	py::class_< AWillowVendingMachine, AWillowVendingMachineBase >(m, "AWillowVendingMachine")
		.def_readwrite("FeaturedItem", &AWillowVendingMachine::FeaturedItem, py::return_value_policy::reference)
		.def_readwrite("FeaturedItemPickup", &AWillowVendingMachine::FeaturedItemPickup, py::return_value_policy::reference)
		.def_readwrite("FeaturedItemPickupAttachmentPoint", &AWillowVendingMachine::FeaturedItemPickupAttachmentPoint, py::return_value_policy::reference)
		.def_readwrite("LastInventoryResetTime", &AWillowVendingMachine::LastInventoryResetTime)
		.def_readwrite("CommerceMarkup", &AWillowVendingMachine::CommerceMarkup, py::return_value_policy::reference)
		.def_readwrite("InventoryConfigurationName", &AWillowVendingMachine::InventoryConfigurationName, py::return_value_policy::reference)
		.def_readwrite("FeaturedItemCommerceMarkup", &AWillowVendingMachine::FeaturedItemCommerceMarkup, py::return_value_policy::reference)
		.def_readwrite("FeaturedItemConfigurationName", &AWillowVendingMachine::FeaturedItemConfigurationName, py::return_value_policy::reference)
		.def_readwrite("FeaturedItemGameStage", &AWillowVendingMachine::FeaturedItemGameStage, py::return_value_policy::reference)
		.def_readwrite("FeaturedItemAwesomeLevel", &AWillowVendingMachine::FeaturedItemAwesomeLevel, py::return_value_policy::reference)
		.def("PlayerBuyItem", &AWillowVendingMachine::PlayerBuyItem)
		.def("NotifyBasedPickupRemoved", &AWillowVendingMachine::NotifyBasedPickupRemoved)
		.def("eventGetInstanceData", &AWillowVendingMachine::eventGetInstanceData)
		.def("eventSetFeaturedItem", &AWillowVendingMachine::eventSetFeaturedItem)
		.def("ClearInventory", &AWillowVendingMachine::ClearInventory)
		.def("eventResetInventory", &AWillowVendingMachine::eventResetInventory)
		.def("GetFeaturedItem", &AWillowVendingMachine::GetFeaturedItem, py::return_value_policy::reference)
		.def("GetInventoryList", &AWillowVendingMachine::GetInventoryList)
		.def("RemoveSoldInventory", &AWillowVendingMachine::RemoveSoldInventory)
		.def("GetWeaponList", &AWillowVendingMachine::GetWeaponList)
		.def("GetItemList", &AWillowVendingMachine::GetItemList)
		.def("GetSellingPriceForInventory", &AWillowVendingMachine::GetSellingPriceForInventory)
		.def("GenerateInventory", &AWillowVendingMachine::GenerateInventory)
		;
	py::class_< AWillowVendingMachineBlackMarket, AWillowVendingMachineBase >(m, "AWillowVendingMachineBlackMarket")
		.def_readwrite("DefinitionData", &AWillowVendingMachineBlackMarket::DefinitionData, py::return_value_policy::reference)
		.def("PlayerBuyItem", &AWillowVendingMachineBlackMarket::PlayerBuyItem)
		.def("GetRarityLevelForUpgradeLevel", &AWillowVendingMachineBlackMarket::GetRarityLevelForUpgradeLevel)
		.def("BuildUpgradeItemForPlayer", &AWillowVendingMachineBlackMarket::BuildUpgradeItemForPlayer, py::return_value_policy::reference)
		.def("GetFeaturedItem", &AWillowVendingMachineBlackMarket::GetFeaturedItem, py::return_value_policy::reference)
		.def("GetInventoryList", &AWillowVendingMachineBlackMarket::GetInventoryList)
		.def("RemoveSoldInventory", &AWillowVendingMachineBlackMarket::RemoveSoldInventory)
		.def("GetWeaponList", &AWillowVendingMachineBlackMarket::GetWeaponList)
		.def("GetItemList", &AWillowVendingMachineBlackMarket::GetItemList)
		.def("StaticGetSellingPriceForBlackMarketInventory", &AWillowVendingMachineBlackMarket::StaticGetSellingPriceForBlackMarketInventory)
		.def("GetSellingPriceForInventory", &AWillowVendingMachineBlackMarket::GetSellingPriceForInventory)
		.def("CreateNecessaryBlackMarketItems", [](AWillowVendingMachineBlackMarket &self , class AWillowPlayerController* WPC) { class AWillowInventoryManager** pyInvManager = 0 ;   self.CreateNecessaryBlackMarketItems(WPC, pyInvManager); return py::make_tuple(*pyInvManager); })
		;
	py::class_< UWillowInteractiveSwitchRenderingComponent, UPrimitiveComponent >(m, "UWillowInteractiveSwitchRenderingComponent")
		;
	py::class_< AWillowInventoryManager, AInventoryManager >(m, "AWillowInventoryManager")
		.def_property("bAutoSwitchWeaponOnPickup", [](AWillowInventoryManager &self){return self.bAutoSwitchWeaponOnPickup;}, [](AWillowInventoryManager &self, bool value){self.bAutoSwitchWeaponOnPickup = value ? 1 : 0;})
		.def_property("bLimitedInventory", [](AWillowInventoryManager &self){return self.bLimitedInventory;}, [](AWillowInventoryManager &self, bool value){self.bLimitedInventory = value ? 1 : 0;})
		.def_readwrite("InventorySlotMax_Misc", &AWillowInventoryManager::InventorySlotMax_Misc)
		.def_readwrite("WeaponReadyMax", &AWillowInventoryManager::WeaponReadyMax)
		.def_readwrite("WeaponReadyMaxBaseValue", &AWillowInventoryManager::WeaponReadyMaxBaseValue)
		.def_readwrite("WeaponReadyMaxModifierStack", &AWillowInventoryManager::WeaponReadyMaxModifierStack, py::return_value_policy::reference)
		.def_readwrite("ItemChain", &AWillowInventoryManager::ItemChain, py::return_value_policy::reference)
		.def_readwrite("Backpack", &AWillowInventoryManager::Backpack, py::return_value_policy::reference)
		.def_readwrite("BackpackInventoryCount", &AWillowInventoryManager::BackpackInventoryCount)
		.def_readwrite("BackpackInventoryBeingEquipped", &AWillowInventoryManager::BackpackInventoryBeingEquipped, py::return_value_policy::reference)
		.def_readwrite("EquippedInventoryGoingToBackpack", &AWillowInventoryManager::EquippedInventoryGoingToBackpack, py::return_value_policy::reference)
		.def_readwrite("EquippedWeaponBeingSwapped", &AWillowInventoryManager::EquippedWeaponBeingSwapped, py::return_value_policy::reference)
		.def_readwrite("OtherEquippedWeaponBeingSwapped", &AWillowInventoryManager::OtherEquippedWeaponBeingSwapped, py::return_value_policy::reference)
		.def_readwrite("BuybackInventory", &AWillowInventoryManager::BuybackInventory, py::return_value_policy::reference)
		.def_readwrite("BlackMarketItemList", &AWillowInventoryManager::BlackMarketItemList, py::return_value_policy::reference)
		.def_readwrite("BlackMarketFeaturedItem", &AWillowInventoryManager::BlackMarketFeaturedItem, py::return_value_policy::reference)
		.def_readwrite("TheBank", &AWillowInventoryManager::TheBank, py::return_value_policy::reference)
		.def_readwrite("TheStash", &AWillowInventoryManager::TheStash, py::return_value_policy::reference)
		.def_readwrite("LastAdjustTime", &AWillowInventoryManager::LastAdjustTime)
		.def_readwrite("LastItemAdjustTime", &AWillowInventoryManager::LastItemAdjustTime)
		.def_readwrite("PendingQuickSlot", &AWillowInventoryManager::PendingQuickSlot)
		.def_readwrite("RecentStuff", &AWillowInventoryManager::RecentStuff, py::return_value_policy::reference)
		.def("InternalSetCurrentWeapon", &AWillowInventoryManager::InternalSetCurrentWeapon)
		.def("GetEquippedAnalogue", &AWillowInventoryManager::GetEquippedAnalogue, py::return_value_policy::reference)
		.def("GetBlackMarketFeaturedItem", &AWillowInventoryManager::GetBlackMarketFeaturedItem, py::return_value_policy::reference)
		.def("AddBlackMarketFeaturedItem", &AWillowInventoryManager::AddBlackMarketFeaturedItem)
		.def("GetBlackMarketItemList", &AWillowInventoryManager::GetBlackMarketItemList)
		.def("AddBlackMarketItem", &AWillowInventoryManager::AddBlackMarketItem)
		.def("ClearBlackMarketInventory", &AWillowInventoryManager::ClearBlackMarketInventory)
		.def("ClientRemoveStoredItem", &AWillowInventoryManager::ClientRemoveStoredItem)
		.def("ClientRemoveStoredWeapon", &AWillowInventoryManager::ClientRemoveStoredWeapon)
		.def("ClientStoreItem", &AWillowInventoryManager::ClientStoreItem)
		.def("ClientStoreWeapon", &AWillowInventoryManager::ClientStoreWeapon)
		.def("ClientSetBankSlots", &AWillowInventoryManager::ClientSetBankSlots)
		.def("PrintAllInventory", &AWillowInventoryManager::PrintAllInventory)
		.def("SellAllTrash", &AWillowInventoryManager::SellAllTrash)
		.def("eventRemoveMissionWeapons", &AWillowInventoryManager::eventRemoveMissionWeapons)
		.def("ClientRemoveMissionWeapons", &AWillowInventoryManager::ClientRemoveMissionWeapons)
		.def("ClientWeaponSet", &AWillowInventoryManager::ClientWeaponSet)
		.def("IsInventoryItemInInventory", &AWillowInventoryManager::IsInventoryItemInInventory)
		.def("EquipWeaponFromSlot", &AWillowInventoryManager::EquipWeaponFromSlot)
		.def("RecordItemToInventoryEventForWeapon", &AWillowInventoryManager::RecordItemToInventoryEventForWeapon)
		.def("TranslateWeaponSlotToInventorySlot", &AWillowInventoryManager::TranslateWeaponSlotToInventorySlot)
		.def("SafelySetQuickSlot", &AWillowInventoryManager::SafelySetQuickSlot)
		.def("AssignNextAvailableDefaultQuickSlot", &AWillowInventoryManager::AssignNextAvailableDefaultQuickSlot)
		.def("GetCurrentClassMod", &AWillowInventoryManager::GetCurrentClassMod, py::return_value_policy::reference)
		.def("SortInventory", &AWillowInventoryManager::SortInventory)
		.def("SortItems", &AWillowInventoryManager::SortItems)
		.def("SortWeapons", &AWillowInventoryManager::SortWeapons)
		.def("DiscardInventory", &AWillowInventoryManager::DiscardInventory)
		.def("eventHandlePickupQuery", &AWillowInventoryManager::eventHandlePickupQuery)
		.def("eventCopyInventory", &AWillowInventoryManager::eventCopyInventory)
		.def("FillWeaponSwitchSlots", &AWillowInventoryManager::FillWeaponSwitchSlots)
		.def("NextWeapon", &AWillowInventoryManager::NextWeapon)
		.def("PrevWeapon", &AWillowInventoryManager::PrevWeapon)
		.def("SwitchToBestWeapon", &AWillowInventoryManager::SwitchToBestWeapon)
		.def("ShouldSwitchToBestWeapon", &AWillowInventoryManager::ShouldSwitchToBestWeapon)
		.def("ReloadWeapon", &AWillowInventoryManager::ReloadWeapon)
		.def("ChangedWeapon", &AWillowInventoryManager::ChangedWeapon)
		.def("CancelWeaponChange", &AWillowInventoryManager::CancelWeaponChange)
		.def("ServerPlayerBuyBackInventory", &AWillowInventoryManager::ServerPlayerBuyBackInventory)
		.def("PlayerBuyBackItem", &AWillowInventoryManager::PlayerBuyBackItem)
		.def("ServerPlayerSoldItem", &AWillowInventoryManager::ServerPlayerSoldItem)
		.def("ServerPlayerSoldBackpackItem", &AWillowInventoryManager::ServerPlayerSoldBackpackItem)
		.def("PlayerSoldItem", &AWillowInventoryManager::PlayerSoldItem)
		.def("ServerThrowItemFromBackpack", &AWillowInventoryManager::ServerThrowItemFromBackpack)
		.def("ServerThrowWeaponFromBackpack", &AWillowInventoryManager::ServerThrowWeaponFromBackpack)
		.def("ThrowBackpackInventory", &AWillowInventoryManager::ThrowBackpackInventory)
		.def("ServerReadyWeaponFromBackpack", &AWillowInventoryManager::ServerReadyWeaponFromBackpack)
		.def("ServerReadyItemFromBackpack", &AWillowInventoryManager::ServerReadyItemFromBackpack)
		.def("ReadyBackpackInventory", &AWillowInventoryManager::ReadyBackpackInventory)
		.def("SendEquipLocThingToBackpack", &AWillowInventoryManager::SendEquipLocThingToBackpack)
		.def("SendSlottedThingToBackpack", &AWillowInventoryManager::SendSlottedThingToBackpack)
		.def("ServerSwitchQuickSlot", &AWillowInventoryManager::ServerSwitchQuickSlot)
		.def("SwitchQuickSlot", &AWillowInventoryManager::SwitchQuickSlot)
		.def("GetWeaponInSlot", &AWillowInventoryManager::GetWeaponInSlot, py::return_value_policy::reference)
		.def("OnDroppedInventory", &AWillowInventoryManager::OnDroppedInventory)
		.def("ClientOnDroppedInventory", &AWillowInventoryManager::ClientOnDroppedInventory)
		.def("ClientConditionalIncrementPickupStats", &AWillowInventoryManager::ClientConditionalIncrementPickupStats)
		.def("ServerIncrementItemPickedUpStats", &AWillowInventoryManager::ServerIncrementItemPickedUpStats)
		.def("CheckItemAgainstBackpackInventoryBeingEquipped", &AWillowInventoryManager::CheckItemAgainstBackpackInventoryBeingEquipped)
		.def("ServerIncrementWeaponPickedUpStats", &AWillowInventoryManager::ServerIncrementWeaponPickedUpStats)
		.def("CheckWeaponAgainstEquippedWeaponsBeingSwapped", &AWillowInventoryManager::CheckWeaponAgainstEquippedWeaponsBeingSwapped)
		.def("CheckWeaponAgainstBackpackInventoryBeingEquipped", &AWillowInventoryManager::CheckWeaponAgainstBackpackInventoryBeingEquipped)
		.def("InventoryTransitionInProgress", &AWillowInventoryManager::InventoryTransitionInProgress)
		.def("IncPlayerRarityStat", &AWillowInventoryManager::IncPlayerRarityStat)
		.def("GetMatchedSetRarity", &AWillowInventoryManager::GetMatchedSetRarity)
		.def("OnEquipped", &AWillowInventoryManager::OnEquipped)
		.def("IsRecent", &AWillowInventoryManager::IsRecent)
		.def("RemoveInventoryFromBackpack", &AWillowInventoryManager::RemoveInventoryFromBackpack)
		.def("AddInventoryToBackpack", &AWillowInventoryManager::AddInventoryToBackpack)
		.def("ClientAddItemToBackpack", &AWillowInventoryManager::ClientAddItemToBackpack)
		.def("ClientAddWeaponToBackpack", &AWillowInventoryManager::ClientAddWeaponToBackpack)
		.def("GiveStoredAmmoBeforeGoingToBackpack", &AWillowInventoryManager::GiveStoredAmmoBeforeGoingToBackpack)
		.def("eventAddClientSideInventoryToBackpackInventory", &AWillowInventoryManager::eventAddClientSideInventoryToBackpackInventory)
		.def("AddBackpackItemFromDefinitionData", &AWillowInventoryManager::AddBackpackItemFromDefinitionData)
		.def("AddBackpackWeaponFromDefinitionData", &AWillowInventoryManager::AddBackpackWeaponFromDefinitionData)
		.def("AddBackpackInventory", &AWillowInventoryManager::AddBackpackInventory)
		.def("InternalAddBackpackInventory", &AWillowInventoryManager::InternalAddBackpackInventory)
		.def("InventoryUnreadied", &AWillowInventoryManager::InventoryUnreadied)
		.def("ServerUpdateBackpackInventoryCount", &AWillowInventoryManager::ServerUpdateBackpackInventoryCount)
		.def("UpdateBackpackInventoryCount", &AWillowInventoryManager::UpdateBackpackInventoryCount)
		.def("UpdatePawnGearLikenessComponents", &AWillowInventoryManager::UpdatePawnGearLikenessComponents)
		.def("SetHolsteredWeapon", &AWillowInventoryManager::SetHolsteredWeapon)
		.def("ReplaceHolsteredWeapon", &AWillowInventoryManager::ReplaceHolsteredWeapon)
		.def("FindBestHolsteredWeapon", &AWillowInventoryManager::FindBestHolsteredWeapon, py::return_value_policy::reference)
		.def("InventoryReadied", &AWillowInventoryManager::InventoryReadied)
		.def("RemoveFromInventory", &AWillowInventoryManager::RemoveFromInventory)
		.def("HasRoomInInventoryFor", &AWillowInventoryManager::HasRoomInInventoryFor)
		.def("GetEmptyBackpackSlots", &AWillowInventoryManager::GetEmptyBackpackSlots)
		.def("InventoryShouldBeReadiedWhenEquipped", &AWillowInventoryManager::InventoryShouldBeReadiedWhenEquipped)
		.def("GiveGrenadeToPlayer", &AWillowInventoryManager::GiveGrenadeToPlayer)
		.def("GiveGrenadeToPlayerIfGrenadeMod", &AWillowInventoryManager::GiveGrenadeToPlayerIfGrenadeMod)
		.def("AddInventory", &AWillowInventoryManager::AddInventory)
		.def("GetOwningPlayerController", &AWillowInventoryManager::GetOwningPlayerController, py::return_value_policy::reference)
		.def("eventGetItemList", &AWillowInventoryManager::eventGetItemList)
		.def("eventGetWeaponList", &AWillowInventoryManager::eventGetWeaponList)
		.def("eventUnreadyExcessWeapons", &AWillowInventoryManager::eventUnreadyExcessWeapons)
		.def("SetWeaponReadyMax", &AWillowInventoryManager::SetWeaponReadyMax)
		.def("SetupForPlayer", &AWillowInventoryManager::SetupForPlayer)
		.def("SetupFor", &AWillowInventoryManager::SetupFor)
		.def("eventReplicatedEvent", &AWillowInventoryManager::eventReplicatedEvent)
		.def("GetWeaponReadyMax", &AWillowInventoryManager::GetWeaponReadyMax)
		.def("CountReadiedWeapons", &AWillowInventoryManager::CountReadiedWeapons)
		.def("SetInventoryMaxSize", &AWillowInventoryManager::SetInventoryMaxSize)
		.def("GetUnreadiedInventoryMaxSize", &AWillowInventoryManager::GetUnreadiedInventoryMaxSize)
		.def("CountUnreadiedInventory", &AWillowInventoryManager::CountUnreadiedInventory)
		.def("FindLeastValuableWeapon", &AWillowInventoryManager::FindLeastValuableWeapon, py::return_value_policy::reference)
		.def("FindLeastValuableItem", &AWillowInventoryManager::FindLeastValuableItem, py::return_value_policy::reference)
		.def("GetEquippedWeapons", [](AWillowInventoryManager &self ) { class AWillowWeapon** pyUpThing = 0 ; class AWillowWeapon** pyDownThing = 0 ; class AWillowWeapon** pyLeftThing = 0 ; class AWillowWeapon** pyRightThing = 0 ;   self.GetEquippedWeapons(pyUpThing, pyDownThing, pyLeftThing, pyRightThing); return py::make_tuple(*pyUpThing, *pyDownThing, *pyLeftThing, *pyRightThing); })
		.def("ItemActors", [](AWillowInventoryManager &self , class UClass* BaseClass, unsigned long bOnlyReadied) { class AInventory** pyInv = 0 ;   self.ItemActors(BaseClass, bOnlyReadied, pyInv); return py::make_tuple(*pyInv); })
		;
	py::class_< UWillowInventoryStorage, UObject >(m, "UWillowInventoryStorage")
		.def_property("ChestIsOpen", [](UWillowInventoryStorage &self){return self.ChestIsOpen;}, [](UWillowInventoryStorage &self, bool value){self.ChestIsOpen = value ? 1 : 0;})
		.def_readwrite("MaxSlots", &UWillowInventoryStorage::MaxSlots)
		.def_readwrite("ChestSlots", &UWillowInventoryStorage::ChestSlots)
		.def_readwrite("TheChest", &UWillowInventoryStorage::TheChest, py::return_value_policy::reference)
		.def_readwrite("UnloadableInventory", &UWillowInventoryStorage::UnloadableInventory, py::return_value_policy::reference)
		.def("SetMaxSlots", &UWillowInventoryStorage::SetMaxSlots)
		.def("PrintLog", &UWillowInventoryStorage::PrintLog)
		.def("IsOpen", &UWillowInventoryStorage::IsOpen)
		.def("GetList", &UWillowInventoryStorage::GetList)
		.def("PutItem", &UWillowInventoryStorage::PutItem)
		.def("PutWeapon", &UWillowInventoryStorage::PutWeapon)
		.def("GetInternal", &UWillowInventoryStorage::GetInternal)
		.def("Get", &UWillowInventoryStorage::Get)
		.def("PutInternal", &UWillowInventoryStorage::PutInternal)
		.def("Put", &UWillowInventoryStorage::Put)
		.def("RemoveWeaponsByDef", &UWillowInventoryStorage::RemoveWeaponsByDef)
		.def("RemoveItemsByDef", &UWillowInventoryStorage::RemoveItemsByDef)
		.def("AddWeaponFromDef", &UWillowInventoryStorage::AddWeaponFromDef)
		.def("AddItemFromDef", &UWillowInventoryStorage::AddItemFromDef)
		.def("Swap", &UWillowInventoryStorage::Swap)
		.def("Close", &UWillowInventoryStorage::Close)
		.def("Open", &UWillowInventoryStorage::Open)
		.def("Reset", &UWillowInventoryStorage::Reset)
		.def("SetSlotCount", &UWillowInventoryStorage::SetSlotCount)
		.def("AddSlots", &UWillowInventoryStorage::AddSlots)
		.def("GetSizeIncludingUnloadable", &UWillowInventoryStorage::GetSizeIncludingUnloadable)
		.def("GetUnloadableCount", &UWillowInventoryStorage::GetUnloadableCount)
		.def("GetMaxSize", &UWillowInventoryStorage::GetMaxSize)
		.def("GetSize", &UWillowInventoryStorage::GetSize)
		;
	py::class_< AWillowItem, AWillowInventory >(m, "AWillowItem")
		.def_property("bSelectRandomPartsOnInitialization", [](AWillowItem &self){return self.bSelectRandomPartsOnInitialization;}, [](AWillowItem &self, bool value){self.bSelectRandomPartsOnInitialization = value ? 1 : 0;})
		.def_readwrite("VfTable_IIInstanceData", &AWillowItem::VfTable_IIInstanceData, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIMissionInventory", &AWillowItem::VfTable_IIMissionInventory, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorConsumer", &AWillowItem::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIItemCardable", &AWillowItem::VfTable_IIItemCardable, py::return_value_policy::reference)
		.def_readwrite("DefinitionData", &AWillowItem::DefinitionData, py::return_value_policy::reference)
		.def_readwrite("PartListCollection", &AWillowItem::PartListCollection, py::return_value_policy::reference)
		.def_readwrite("HUDMaterialInstance", &AWillowItem::HUDMaterialInstance, py::return_value_policy::reference)
		.def_readwrite("Mesh", &AWillowItem::Mesh, py::return_value_policy::reference)
		.def_readwrite("ItemSkeletalMesh", &AWillowItem::ItemSkeletalMesh, py::return_value_policy::reference)
		.def_readwrite("ItemStaticMesh", &AWillowItem::ItemStaticMesh, py::return_value_policy::reference)
		.def_readwrite("ItemMaterial", &AWillowItem::ItemMaterial, py::return_value_policy::reference)
		.def_readwrite("ExternalAttributeModifiers", &AWillowItem::ExternalAttributeModifiers, py::return_value_policy::reference)
		.def_readwrite("PartExternalAttributeModifiers", &AWillowItem::PartExternalAttributeModifiers, py::return_value_policy::reference)
		.def_readwrite("ItemAttributeModifiers", &AWillowItem::ItemAttributeModifiers, py::return_value_policy::reference)
		.def_readwrite("ItemCardModifierStats", &AWillowItem::ItemCardModifierStats, py::return_value_policy::reference)
		.def_readwrite("UIStatModifiers", &AWillowItem::UIStatModifiers, py::return_value_policy::reference)
		.def_readwrite("InstanceDataState", &AWillowItem::InstanceDataState, py::return_value_policy::reference)
		.def_readwrite("ConsumerHandle", &AWillowItem::ConsumerHandle, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorConsumerState", &AWillowItem::ReplicatedBehaviorConsumerState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorEvent", &AWillowItem::ReplicatedBehaviorEvent, py::return_value_policy::reference)
		.def("IsUsefulToThisPlayer", &AWillowItem::IsUsefulToThisPlayer)
		.def("CheckDefMatch", &AWillowItem::CheckDefMatch)
		.def("SerialNumberMatchesDef", &AWillowItem::SerialNumberMatchesDef)
		.def("CreateItemFromSerialNumber", &AWillowItem::CreateItemFromSerialNumber, py::return_value_policy::reference)
		.def("UnpackSerialNumber", &AWillowItem::UnpackSerialNumber)
		.def("PackSerialNumber", &AWillowItem::PackSerialNumber, py::return_value_policy::reference)
		.def("CreateSerialNumber", &AWillowItem::CreateSerialNumber, py::return_value_policy::reference)
		.def("DefinitionFromHashString", &AWillowItem::DefinitionFromHashString)
		.def("GetHashString", &AWillowItem::GetHashString, py::return_value_policy::reference)
		.def("CreateItemFromDef", &AWillowItem::CreateItemFromDef, py::return_value_policy::reference)
		.def("eventGetCategoryKey", &AWillowItem::eventGetCategoryKey, py::return_value_policy::reference)
		.def("CreateItemFromMemento", &AWillowItem::CreateItemFromMemento, py::return_value_policy::reference)
		.def("GetMemento", &AWillowItem::GetMemento, py::return_value_policy::reference)
		.def("GetModelName", &AWillowItem::GetModelName, py::return_value_policy::reference)
		.def("GetItemCardTopSectionString", &AWillowItem::GetItemCardTopSectionString)
		.def("eventGetRainGrenadeIcon", &AWillowItem::eventGetRainGrenadeIcon, py::return_value_policy::reference)
		.def("eventGetTechIconFrame", &AWillowItem::eventGetTechIconFrame)
		.def("eventGetInstanceData", &AWillowItem::eventGetInstanceData)
		.def("GetReplicatedInstanceDataState", &AWillowItem::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &AWillowItem::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &AWillowItem::DestroyOwnedInstanceData)
		.def("eventRemoveInstanceDataObject", &AWillowItem::eventRemoveInstanceDataObject)
		.def("eventRemoveInstanceData", &AWillowItem::eventRemoveInstanceData)
		.def("SetInstanceData", &AWillowItem::SetInstanceData)
		.def("GetDroppedImpactDefinition", &AWillowItem::GetDroppedImpactDefinition, py::return_value_policy::reference)
		.def("GetItemDebug", &AWillowItem::GetItemDebug)
		.def("eventLogInventoryDebug", &AWillowItem::eventLogInventoryDebug)
		.def("FormatFunStatsText", &AWillowItem::FormatFunStatsText, py::return_value_policy::reference)
		.def("GenerateFunStatsText", &AWillowItem::GenerateFunStatsText, py::return_value_policy::reference)
		.def("GetInventoryStatTextData", &AWillowItem::GetInventoryStatTextData)
		.def("GetInventoryStatNumberData", &AWillowItem::GetInventoryStatNumberData)
		.def("CacheItemCard", &AWillowItem::CacheItemCard)
		.def("CompareUIStat", &AWillowItem::CompareUIStat)
		.def("CanBeUsedBy", &AWillowItem::CanBeUsedBy)
		.def("eventTranslateUseFailure", &AWillowItem::eventTranslateUseFailure)
		.def("GenerateHumanReadableNameFromDefinitionParts", &AWillowItem::GenerateHumanReadableNameFromDefinitionParts, py::return_value_policy::reference)
		.def("GenerateHumanReadableNameFromDefinition", &AWillowItem::GenerateHumanReadableNameFromDefinition, py::return_value_policy::reference)
		.def("eventGetInventoryCardString", &AWillowItem::eventGetInventoryCardString, py::return_value_policy::reference)
		.def("eventGetShortHumanReadableName", &AWillowItem::eventGetShortHumanReadableName, py::return_value_policy::reference)
		.def("GenerateHumanReadableName", &AWillowItem::GenerateHumanReadableName, py::return_value_policy::reference)
		.def("GetPresentationDefinition", &AWillowItem::GetPresentationDefinition, py::return_value_policy::reference)
		.def("GetLocalString", &AWillowItem::GetLocalString, py::return_value_policy::reference)
		.def("ServerReselectItem", &AWillowItem::ServerReselectItem)
		.def("DenyPickupQuery", &AWillowItem::DenyPickupQuery)
		.def("CreateClone", &AWillowItem::CreateClone, py::return_value_policy::reference)
		.def("DropFrom", &AWillowItem::DropFrom, py::return_value_policy::reference)
		.def("GivenTo", &AWillowItem::GivenTo)
		.def("eventIsPlayerRestricted", &AWillowItem::eventIsPlayerRestricted)
		.def("RemoveFromShop", &AWillowItem::RemoveFromShop)
		.def("GetProjectileDefinition", &AWillowItem::GetProjectileDefinition, py::return_value_policy::reference)
		.def("UpdateUIStateModifierCompareValues", &AWillowItem::UpdateUIStateModifierCompareValues)
		.def("GetAttributePresentationOverride", &AWillowItem::GetAttributePresentationOverride, py::return_value_policy::reference)
		.def("InitUIStats", &AWillowItem::InitUIStats)
		.def("RemoveAllPartExternalAttributeEffects", &AWillowItem::RemoveAllPartExternalAttributeEffects)
		.def("RemoveAllExternalAttributeEffects", &AWillowItem::RemoveAllExternalAttributeEffects)
		.def("ApplyAllExternalAttributeEffects", &AWillowItem::ApplyAllExternalAttributeEffects)
		.def("RemoveAllItemAttributeEffects", &AWillowItem::RemoveAllItemAttributeEffects)
		.def("ApplyNamePartItemAttributeEffects", &AWillowItem::ApplyNamePartItemAttributeEffects)
		.def("ApplyAllItemAttributeEffects", &AWillowItem::ApplyAllItemAttributeEffects)
		.def("DeactivateAttributeSlotSkill", &AWillowItem::DeactivateAttributeSlotSkill)
		.def("ActivateAttributeSlotSkill", &AWillowItem::ActivateAttributeSlotSkill)
		.def("ComputeValueOfParts", &AWillowItem::ComputeValueOfParts)
		.def("StaticCalculateItemRarityLevel", &AWillowItem::StaticCalculateItemRarityLevel)
		.def("CalculateItemRarityLevel", &AWillowItem::CalculateItemRarityLevel)
		.def("IsAllPartsDebugEnabled", &AWillowItem::IsAllPartsDebugEnabled)
		.def("ToggleAllPartsDebug", &AWillowItem::ToggleAllPartsDebug)
		.def("SelectNamePartFromList", &AWillowItem::SelectNamePartFromList, py::return_value_policy::reference)
		.def("ChooseRandomNameParts", &AWillowItem::ChooseRandomNameParts)
		.def("ChooseRandomParts", &AWillowItem::ChooseRandomParts)
		.def("ChoosePartListCollection", &AWillowItem::ChoosePartListCollection)
		.def("ClonePrimaryMesh", &AWillowItem::ClonePrimaryMesh, py::return_value_policy::reference)
		.def("AttachMeshToPickup", &AWillowItem::AttachMeshToPickup)
		.def("PickupDisassociated", &AWillowItem::PickupDisassociated)
		.def("PickupAssociated", &AWillowItem::PickupAssociated)
		.def("InitMeshes", &AWillowItem::InitMeshes)
		.def("eventInitConstructPreview", &AWillowItem::eventInitConstructPreview, py::return_value_policy::reference)
		.def("BuildItemMaterial", &AWillowItem::BuildItemMaterial, py::return_value_policy::reference)
		.def("BuildCompositeMesh", &AWillowItem::BuildCompositeMesh, py::return_value_policy::reference)
		.def("ClientInitializeFromItemDefinition", &AWillowItem::ClientInitializeFromItemDefinition)
		.def("ValidateDefinitions", &AWillowItem::ValidateDefinitions)
		.def("RecomputeAttributeBaseValues", &AWillowItem::RecomputeAttributeBaseValues)
		.def("CalculateItemBaseValues", &AWillowItem::CalculateItemBaseValues)
		.def("InitializeInternal", &AWillowItem::InitializeInternal)
		.def("eventInitializeFromDefinitionData", &AWillowItem::eventInitializeFromDefinitionData)
		.def("eventInitializeInventory", &AWillowItem::eventInitializeInventory)
		.def("CheckItemAgainstBackpackInventoryBeingEquipped", &AWillowItem::CheckItemAgainstBackpackInventoryBeingEquipped)
		.def("eventReplicatedEvent", &AWillowItem::eventReplicatedEvent)
		.def("IsEquipped", &AWillowItem::IsEquipped)
		.def("eventGetEquipmentLocation", &AWillowItem::eventGetEquipmentLocation)
		.def("OnPickupDisassociated", &AWillowItem::OnPickupDisassociated)
		.def("OnPickupAssociated", &AWillowItem::OnPickupAssociated)
		.def("OnCreate", &AWillowItem::OnCreate)
		.def("GetBehaviorConsumerHandle", &AWillowItem::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("CanCompareUIStat", [](AWillowItem &self ) { class UAttributeDefinition** pyAttrib = 0 ; class UAttributeDefinition** pyCompareAttrib = 0 ; class AWillowInventory** pyCompareItem = 0 ;  bool ret =  self.CanCompareUIStat(pyAttrib, pyCompareAttrib, pyCompareItem); return py::make_tuple(ret, *pyAttrib, *pyCompareAttrib, *pyCompareItem); })
		.def("eventCloneAppearance", [](AWillowItem &self , class AActor* CloneOwner, class USkeletalMeshComponent* ClonedPrimaryMeshComponent, TArray< class UPrimitiveComponent* >* ClonedComponentsAttachedToPrimaryMesh) { class UMaterialInstance** pyClonedMeshMaterial = 0 ;   self.eventCloneAppearance(CloneOwner, ClonedPrimaryMeshComponent, ClonedComponentsAttachedToPrimaryMesh, pyClonedMeshMaterial); return py::make_tuple(*pyClonedMeshMaterial); })
		.def("AllParts", [](AWillowItem &self , unsigned long bIncludeNameParts, struct FItemDefinitionData* DefData) { class UItemPartDefinition** pyPart = 0 ;   self.AllParts(bIncludeNameParts, DefData, pyPart); return py::make_tuple(*pyPart); })
		;
	py::class_< AWillowEquipAbleItem, AWillowItem >(m, "AWillowEquipAbleItem")
		.def("CanBeUsedBy", &AWillowEquipAbleItem::CanBeUsedBy)
		.def("ItemEquipped", &AWillowEquipAbleItem::ItemEquipped)
		.def("ItemUnequipped", &AWillowEquipAbleItem::ItemUnequipped)
		.def("Unreadied", &AWillowEquipAbleItem::Unreadied)
		.def("Readied", &AWillowEquipAbleItem::Readied)
		.def("IsEquipped", &AWillowEquipAbleItem::IsEquipped)
		.def("ItemRemovedFromInvManager", &AWillowEquipAbleItem::ItemRemovedFromInvManager)
		.def("SetElementalFrame", &AWillowEquipAbleItem::SetElementalFrame)
		.def("ClientInitializeFromItemDefinition", &AWillowEquipAbleItem::ClientInitializeFromItemDefinition)
		.def("OnUnequipped", &AWillowEquipAbleItem::OnUnequipped)
		.def("OnEquipped", &AWillowEquipAbleItem::OnEquipped)
		;
	py::class_< AWillowArtifact, AWillowEquipAbleItem >(m, "AWillowArtifact")
		.def("GetItemCardTopSectionString", &AWillowArtifact::GetItemCardTopSectionString)
		.def("GetAttributePresentationOverride", &AWillowArtifact::GetAttributePresentationOverride, py::return_value_policy::reference)
		.def("SetElementalFrame", &AWillowArtifact::SetElementalFrame)
		.def("ValidateDefinitions", &AWillowArtifact::ValidateDefinitions)
		.def("GetEquippedStat", &AWillowArtifact::GetEquippedStat, py::return_value_policy::reference)
		.def("eventGetEquipmentLocation", &AWillowArtifact::eventGetEquipmentLocation)
		;
	py::class_< AWillowClassMod, AWillowEquipAbleItem >(m, "AWillowClassMod")
		.def_readwrite("ClassRequirementMetString", &AWillowClassMod::ClassRequirementMetString, py::return_value_policy::reference)
		.def_readwrite("ClassRequirementNotMetString", &AWillowClassMod::ClassRequirementNotMetString, py::return_value_policy::reference)
		.def("GetItemCardTopSectionString", &AWillowClassMod::GetItemCardTopSectionString)
		.def("GetInventoryStatNumberData", &AWillowClassMod::GetInventoryStatNumberData)
		.def("GetHolsteredGearLikenessType", &AWillowClassMod::GetHolsteredGearLikenessType)
		.def("GetAttributePresentationOverride", &AWillowClassMod::GetAttributePresentationOverride, py::return_value_policy::reference)
		.def("eventGetClassModIconLabel", &AWillowClassMod::eventGetClassModIconLabel)
		.def("ValidateDefinitions", &AWillowClassMod::ValidateDefinitions)
		.def("GetEquippedStat", &AWillowClassMod::GetEquippedStat, py::return_value_policy::reference)
		.def("eventGetEquipmentLocation", &AWillowClassMod::eventGetEquipmentLocation)
		.def("IsModifyingSkill", [](AWillowClassMod &self , class USkillDefinition* SkillDef) { int* pyAmount = (int*)malloc(sizeof(int)) ;  bool ret =  self.IsModifyingSkill(SkillDef, pyAmount); return py::make_tuple(ret, *pyAmount); })
		;
	py::class_< AWillowGrenadeMod, AWillowEquipAbleItem >(m, "AWillowGrenadeMod")
		.def_property("bGrenadeStored", [](AWillowGrenadeMod &self){return self.bGrenadeStored;}, [](AWillowGrenadeMod &self, bool value){self.bGrenadeStored = value ? 1 : 0;})
		.def_property("bStorageSet", [](AWillowGrenadeMod &self){return self.bStorageSet;}, [](AWillowGrenadeMod &self, bool value){self.bStorageSet = value ? 1 : 0;})
		.def_readwrite("GrenadeDamage", &AWillowGrenadeMod::GrenadeDamage)
		.def_readwrite("GrenadeDamageBaseValue", &AWillowGrenadeMod::GrenadeDamageBaseValue)
		.def_readwrite("GrenadeDamageModifierStack", &AWillowGrenadeMod::GrenadeDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("BlastRadius", &AWillowGrenadeMod::BlastRadius)
		.def_readwrite("BlastRadiusBaseValue", &AWillowGrenadeMod::BlastRadiusBaseValue)
		.def_readwrite("BlastRadiusModifierStack", &AWillowGrenadeMod::BlastRadiusModifierStack, py::return_value_policy::reference)
		.def_readwrite("FuseTime", &AWillowGrenadeMod::FuseTime)
		.def_readwrite("FuseTimeBaseValue", &AWillowGrenadeMod::FuseTimeBaseValue)
		.def_readwrite("FuseTimeModifierStack", &AWillowGrenadeMod::FuseTimeModifierStack, py::return_value_policy::reference)
		.def_readwrite("NumberOfChildProjectiles", &AWillowGrenadeMod::NumberOfChildProjectiles)
		.def_readwrite("NumberOfChildProjectilesBaseValue", &AWillowGrenadeMod::NumberOfChildProjectilesBaseValue)
		.def_readwrite("NumberOfChildProjectilesModifierStack", &AWillowGrenadeMod::NumberOfChildProjectilesModifierStack, py::return_value_policy::reference)
		.def_readwrite("BaseStatusEffectChanceModifier", &AWillowGrenadeMod::BaseStatusEffectChanceModifier)
		.def_readwrite("BaseStatusEffectChanceModifierBaseValue", &AWillowGrenadeMod::BaseStatusEffectChanceModifierBaseValue)
		.def_readwrite("BaseStatusEffectChanceModifierModifierStack", &AWillowGrenadeMod::BaseStatusEffectChanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("StatusEffectChanceModifier", &AWillowGrenadeMod::StatusEffectChanceModifier)
		.def_readwrite("StatusEffectChanceModifierBaseValue", &AWillowGrenadeMod::StatusEffectChanceModifierBaseValue)
		.def_readwrite("StatusEffectChanceModifierModifierStack", &AWillowGrenadeMod::StatusEffectChanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("StatusEffectDamage", &AWillowGrenadeMod::StatusEffectDamage)
		.def_readwrite("StatusEffectDamageBaseValue", &AWillowGrenadeMod::StatusEffectDamageBaseValue)
		.def_readwrite("StatusEffectDamageModifierStack", &AWillowGrenadeMod::StatusEffectDamageModifierStack, py::return_value_policy::reference)
		.def("GetItemCardTopSectionString", &AWillowGrenadeMod::GetItemCardTopSectionString)
		.def("eventGetCategoryKey", &AWillowGrenadeMod::eventGetCategoryKey, py::return_value_policy::reference)
		.def("eventSetGrenadeStorage", &AWillowGrenadeMod::eventSetGrenadeStorage)
		.def("RemoveFromShop", &AWillowGrenadeMod::RemoveFromShop)
		.def("CreatePickup", &AWillowGrenadeMod::CreatePickup, py::return_value_policy::reference)
		.def("GetPickup", &AWillowGrenadeMod::GetPickup, py::return_value_policy::reference)
		.def("GetHolsteredGearLikenessType", &AWillowGrenadeMod::GetHolsteredGearLikenessType)
		.def("GetAttributePresentationOverride", &AWillowGrenadeMod::GetAttributePresentationOverride, py::return_value_policy::reference)
		.def("CanAIUse", &AWillowGrenadeMod::CanAIUse)
		.def("GetProjectileDefinition", &AWillowGrenadeMod::GetProjectileDefinition, py::return_value_policy::reference)
		.def("Init", &AWillowGrenadeMod::Init)
		.def("SpawnProjectile", &AWillowGrenadeMod::SpawnProjectile, py::return_value_policy::reference)
		.def("SetElementalFrame", &AWillowGrenadeMod::SetElementalFrame)
		.def("ValidateDefinitions", &AWillowGrenadeMod::ValidateDefinitions)
		.def("GetEquippedStat", &AWillowGrenadeMod::GetEquippedStat, py::return_value_policy::reference)
		.def("eventGetEquipmentLocation", &AWillowGrenadeMod::eventGetEquipmentLocation)
		.def("OnGrenadeKilledEnemy", &AWillowGrenadeMod::OnGrenadeKilledEnemy)
		.def("OnGrenadeKilledFriendly", &AWillowGrenadeMod::OnGrenadeKilledFriendly)
		.def("OnGrenadeKilledNeutral", &AWillowGrenadeMod::OnGrenadeKilledNeutral)
		.def("OnGrenadeDamagedNeutral", &AWillowGrenadeMod::OnGrenadeDamagedNeutral)
		.def("OnGrenadeDamagedFriendly", &AWillowGrenadeMod::OnGrenadeDamagedFriendly)
		.def("OnGrenadeDamagedEnemy", &AWillowGrenadeMod::OnGrenadeDamagedEnemy)
		.def("OnGrenadeExploded", &AWillowGrenadeMod::OnGrenadeExploded)
		.def("OnGrenadeSpawned", &AWillowGrenadeMod::OnGrenadeSpawned)
		;
	py::class_< AWillowShield, AWillowEquipAbleItem >(m, "AWillowShield")
		.def_property("bPrimed", [](AWillowShield &self){return self.bPrimed;}, [](AWillowShield &self, bool value){self.bPrimed = value ? 1 : 0;})
		.def_readwrite("PercentChanceToAbsorbAmmo", &AWillowShield::PercentChanceToAbsorbAmmo)
		.def_readwrite("PercentChanceToAbsorbAmmoBaseValue", &AWillowShield::PercentChanceToAbsorbAmmoBaseValue)
		.def_readwrite("PercentChanceToAbsorbAmmoModifierStack", &AWillowShield::PercentChanceToAbsorbAmmoModifierStack, py::return_value_policy::reference)
		.def_readwrite("PercentDamageToNegateWhenAmmoAbsorbed", &AWillowShield::PercentDamageToNegateWhenAmmoAbsorbed)
		.def_readwrite("PercentDamageToNegateWhenAmmoAbsorbedBaseValue", &AWillowShield::PercentDamageToNegateWhenAmmoAbsorbedBaseValue)
		.def_readwrite("PercentDamageToNegateWhenAmmoAbsorbedModifierStack", &AWillowShield::PercentDamageToNegateWhenAmmoAbsorbedModifierStack, py::return_value_policy::reference)
		.def_readwrite("GenericStatusEffectDamageModifier", &AWillowShield::GenericStatusEffectDamageModifier)
		.def_readwrite("GenericStatusEffectDamageModifierBaseValue", &AWillowShield::GenericStatusEffectDamageModifierBaseValue)
		.def_readwrite("GenericStatusEffectDamageModifierModifierStack", &AWillowShield::GenericStatusEffectDamageModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("NovaCorrosiveExplosionSize", &AWillowShield::NovaCorrosiveExplosionSize)
		.def_readwrite("NovaCorrosiveExplosionSizeBaseValue", &AWillowShield::NovaCorrosiveExplosionSizeBaseValue)
		.def_readwrite("NovaCorrosiveExplosionSizeModifierStack", &AWillowShield::NovaCorrosiveExplosionSizeModifierStack, py::return_value_policy::reference)
		.def_readwrite("NovaExplosiveExplosionSize", &AWillowShield::NovaExplosiveExplosionSize)
		.def_readwrite("NovaExplosiveExplosionSizeBaseValue", &AWillowShield::NovaExplosiveExplosionSizeBaseValue)
		.def_readwrite("NovaExplosiveExplosionSizeModifierStack", &AWillowShield::NovaExplosiveExplosionSizeModifierStack, py::return_value_policy::reference)
		.def_readwrite("NovaFireExplosionSize", &AWillowShield::NovaFireExplosionSize)
		.def_readwrite("NovaFireExplosionSizeBaseValue", &AWillowShield::NovaFireExplosionSizeBaseValue)
		.def_readwrite("NovaFireExplosionSizeModifierStack", &AWillowShield::NovaFireExplosionSizeModifierStack, py::return_value_policy::reference)
		.def_readwrite("NovaShockExplosionSize", &AWillowShield::NovaShockExplosionSize)
		.def_readwrite("NovaShockExplosionSizeBaseValue", &AWillowShield::NovaShockExplosionSizeBaseValue)
		.def_readwrite("NovaShockExplosionSizeModifierStack", &AWillowShield::NovaShockExplosionSizeModifierStack, py::return_value_policy::reference)
		.def_readwrite("NovaCorrosiveExplosionDamage", &AWillowShield::NovaCorrosiveExplosionDamage)
		.def_readwrite("NovaCorrosiveExplosionDamageBaseValue", &AWillowShield::NovaCorrosiveExplosionDamageBaseValue)
		.def_readwrite("NovaCorrosiveExplosionDamageModifierStack", &AWillowShield::NovaCorrosiveExplosionDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("NovaExplosiveExplosionDamage", &AWillowShield::NovaExplosiveExplosionDamage)
		.def_readwrite("NovaExplosiveExplosionDamageBaseValue", &AWillowShield::NovaExplosiveExplosionDamageBaseValue)
		.def_readwrite("NovaExplosiveExplosionDamageModifierStack", &AWillowShield::NovaExplosiveExplosionDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("NovaFireExplosionDamage", &AWillowShield::NovaFireExplosionDamage)
		.def_readwrite("NovaFireExplosionDamageBaseValue", &AWillowShield::NovaFireExplosionDamageBaseValue)
		.def_readwrite("NovaFireExplosionDamageModifierStack", &AWillowShield::NovaFireExplosionDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("NovaShockExplosionDamage", &AWillowShield::NovaShockExplosionDamage)
		.def_readwrite("NovaShockExplosionDamageBaseValue", &AWillowShield::NovaShockExplosionDamageBaseValue)
		.def_readwrite("NovaShockExplosionDamageModifierStack", &AWillowShield::NovaShockExplosionDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("SpikeCorrosiveDamage", &AWillowShield::SpikeCorrosiveDamage)
		.def_readwrite("SpikeCorrosiveDamageBaseValue", &AWillowShield::SpikeCorrosiveDamageBaseValue)
		.def_readwrite("SpikeCorrosiveDamageModifierStack", &AWillowShield::SpikeCorrosiveDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("SpikeExplosiveDamage", &AWillowShield::SpikeExplosiveDamage)
		.def_readwrite("SpikeExplosiveDamageBaseValue", &AWillowShield::SpikeExplosiveDamageBaseValue)
		.def_readwrite("SpikeExplosiveDamageModifierStack", &AWillowShield::SpikeExplosiveDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("SpikeFireDamage", &AWillowShield::SpikeFireDamage)
		.def_readwrite("SpikeFireDamageBaseValue", &AWillowShield::SpikeFireDamageBaseValue)
		.def_readwrite("SpikeFireDamageModifierStack", &AWillowShield::SpikeFireDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("SpikeShockDamage", &AWillowShield::SpikeShockDamage)
		.def_readwrite("SpikeShockDamageBaseValue", &AWillowShield::SpikeShockDamageBaseValue)
		.def_readwrite("SpikeShockDamageModifierStack", &AWillowShield::SpikeShockDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("RoidMeleeDamage", &AWillowShield::RoidMeleeDamage)
		.def_readwrite("RoidMeleeDamageBaseValue", &AWillowShield::RoidMeleeDamageBaseValue)
		.def_readwrite("RoidMeleeDamageModifierStack", &AWillowShield::RoidMeleeDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("PercentChanceToSpawnBoosterItem", &AWillowShield::PercentChanceToSpawnBoosterItem)
		.def_readwrite("PercentChanceToSpawnBoosterItemBaseValue", &AWillowShield::PercentChanceToSpawnBoosterItemBaseValue)
		.def_readwrite("PercentChanceToSpawnBoosterItemModifierStack", &AWillowShield::PercentChanceToSpawnBoosterItemModifierStack, py::return_value_policy::reference)
		.def_readwrite("ImpactDamageBonus", &AWillowShield::ImpactDamageBonus)
		.def_readwrite("ImpactDamageBonusBaseValue", &AWillowShield::ImpactDamageBonusBaseValue)
		.def_readwrite("ImpactDamageBonusModifierStack", &AWillowShield::ImpactDamageBonusModifierStack, py::return_value_policy::reference)
		.def_readwrite("PercentShieldToConsumeOnImpactProc", &AWillowShield::PercentShieldToConsumeOnImpactProc)
		.def_readwrite("PercentShieldToConsumeOnImpactProcBaseValue", &AWillowShield::PercentShieldToConsumeOnImpactProcBaseValue)
		.def_readwrite("PercentShieldToConsumeOnImpactProcModifierStack", &AWillowShield::PercentShieldToConsumeOnImpactProcModifierStack, py::return_value_policy::reference)
		.def_readwrite("ShieldDef", &AWillowShield::ShieldDef, py::return_value_policy::reference)
		.def_readwrite("DamageResistanceType", &AWillowShield::DamageResistanceType, py::return_value_policy::reference)
		.def_readwrite("ShieldCapacitySlotGradeMinusRarity", &AWillowShield::ShieldCapacitySlotGradeMinusRarity)
		.def_readwrite("ShieldCapacitySlotGradeMinusRarityBaseValue", &AWillowShield::ShieldCapacitySlotGradeMinusRarityBaseValue)
		.def_readwrite("ShieldCapacitySlotGradeMinusRarityModifierStack", &AWillowShield::ShieldCapacitySlotGradeMinusRarityModifierStack, py::return_value_policy::reference)
		.def_readwrite("ShieldRechargeRateSlotGradeMinusRarity", &AWillowShield::ShieldRechargeRateSlotGradeMinusRarity)
		.def_readwrite("ShieldRechargeRateSlotGradeMinusRarityBaseValue", &AWillowShield::ShieldRechargeRateSlotGradeMinusRarityBaseValue)
		.def_readwrite("ShieldRechargeRateSlotGradeMinusRarityModifierStack", &AWillowShield::ShieldRechargeRateSlotGradeMinusRarityModifierStack, py::return_value_policy::reference)
		.def_readwrite("ShieldRechargeDelaySlotGradeMinusRarity", &AWillowShield::ShieldRechargeDelaySlotGradeMinusRarity)
		.def_readwrite("ShieldRechargeDelaySlotGradeMinusRarityBaseValue", &AWillowShield::ShieldRechargeDelaySlotGradeMinusRarityBaseValue)
		.def_readwrite("ShieldRechargeDelaySlotGradeMinusRarityModifierStack", &AWillowShield::ShieldRechargeDelaySlotGradeMinusRarityModifierStack, py::return_value_policy::reference)
		.def_readwrite("ShieldSpecialSlotGradeMinusRarity", &AWillowShield::ShieldSpecialSlotGradeMinusRarity)
		.def_readwrite("ShieldSpecialSlotGradeMinusRarityBaseValue", &AWillowShield::ShieldSpecialSlotGradeMinusRarityBaseValue)
		.def_readwrite("ShieldSpecialSlotGradeMinusRarityModifierStack", &AWillowShield::ShieldSpecialSlotGradeMinusRarityModifierStack, py::return_value_policy::reference)
		.def("GetHolsteredGearLikenessType", &AWillowShield::GetHolsteredGearLikenessType)
		.def("GetItemCardTopSectionString", &AWillowShield::GetItemCardTopSectionString)
		.def("GetAttributePresentationOverride", &AWillowShield::GetAttributePresentationOverride, py::return_value_policy::reference)
		.def("ValidateDefinitions", &AWillowShield::ValidateDefinitions)
		.def("GetEquippedStat", &AWillowShield::GetEquippedStat, py::return_value_policy::reference)
		.def("eventGetEquipmentLocation", &AWillowShield::eventGetEquipmentLocation)
		.def("eventSetDamageResistanceType", &AWillowShield::eventSetDamageResistanceType)
		.def("ShieldTriggered", &AWillowShield::ShieldTriggered)
		.def("eventShieldPrimedStateChanged", &AWillowShield::eventShieldPrimedStateChanged)
		.def("ItemUnequipped", &AWillowShield::ItemUnequipped)
		.def("ItemEquipped", &AWillowShield::ItemEquipped)
		.def("ClientInitializeFromItemDefinition", &AWillowShield::ClientInitializeFromItemDefinition)
		.def("eventReplicatedEvent", &AWillowShield::eventReplicatedEvent)
		.def("IsSameShieldTypeAs", [](AWillowShield &self ) { class AWillowShield** pyCompareShield = 0 ;  bool ret =  self.IsSameShieldTypeAs(pyCompareShield); return py::make_tuple(ret, *pyCompareShield); })
		.def("CanCompareUIStat", [](AWillowShield &self ) { class UAttributeDefinition** pyAttrib = 0 ; class UAttributeDefinition** pyCompareAttrib = 0 ; class AWillowInventory** pyCompareItem = 0 ;  bool ret =  self.CanCompareUIStat(pyAttrib, pyCompareAttrib, pyCompareItem); return py::make_tuple(ret, *pyAttrib, *pyCompareAttrib, *pyCompareItem); })
		.def("TryAbsorbingAmmo", [](AWillowShield &self , class UObject* DamageSource, class UWillowDamageTypeDefinition* DamageType) { float* pyPercentDamageToAbsorb = (float*)malloc(sizeof(float)) ;  bool ret =  self.TryAbsorbingAmmo(DamageSource, DamageType, pyPercentDamageToAbsorb); return py::make_tuple(ret, *pyPercentDamageToAbsorb); })
		;
	py::class_< AWillowUsableItem, AWillowItem >(m, "AWillowUsableItem")
		.def_readwrite("VfTable_IIMissionObjective", &AWillowUsableItem::VfTable_IIMissionObjective, py::return_value_policy::reference)
		.def_readwrite("ObjectiveBit", &AWillowUsableItem::ObjectiveBit)
		.def("GetAttributePresentationOverride", &AWillowUsableItem::GetAttributePresentationOverride, py::return_value_policy::reference)
		.def("ConsumeItem", &AWillowUsableItem::ConsumeItem)
		.def("TryConsume", &AWillowUsableItem::TryConsume)
		.def("Consume", &AWillowUsableItem::Consume)
		.def("Readied", &AWillowUsableItem::Readied)
		.def("GetOwningPlayerController", &AWillowUsableItem::GetOwningPlayerController, py::return_value_policy::reference)
		.def("HandleOnUsed", &AWillowUsableItem::HandleOnUsed)
		.def("GivenTo", &AWillowUsableItem::GivenTo)
		.def("CanBeReadiedOnPickup", &AWillowUsableItem::CanBeReadiedOnPickup)
		.def("HandlePickupQuery", &AWillowUsableItem::HandlePickupQuery)
		.def("eventIsItemAutoUsedBy", &AWillowUsableItem::eventIsItemAutoUsedBy)
		.def("eventGetObjectiveBit", &AWillowUsableItem::eventGetObjectiveBit)
		.def("ValidateDefinition", &AWillowUsableItem::ValidateDefinition)
		.def("OnUsed", &AWillowUsableItem::OnUsed)
		;
	py::class_< AWillowMissionItem, AWillowUsableItem >(m, "AWillowMissionItem")
		.def_readwrite("PickupFailsafe", &AWillowMissionItem::PickupFailsafe, py::return_value_policy::reference)
		.def_readwrite("MissionItemString", &AWillowMissionItem::MissionItemString, py::return_value_policy::reference)
		.def("FormatFunStatsText", &AWillowMissionItem::FormatFunStatsText, py::return_value_policy::reference)
		.def("GenerateFunStatsText", &AWillowMissionItem::GenerateFunStatsText, py::return_value_policy::reference)
		.def("GetItemCardTopSectionString", &AWillowMissionItem::GetItemCardTopSectionString)
		.def("PickupAssociated", &AWillowMissionItem::PickupAssociated)
		.def("MissionDenyPickup", &AWillowMissionItem::MissionDenyPickup)
		.def("HandleOnUsed", &AWillowMissionItem::HandleOnUsed)
		.def("CanBeUsedBy", &AWillowMissionItem::CanBeUsedBy)
		.def("ClientInitializeFromItemDefinition", &AWillowMissionItem::ClientInitializeFromItemDefinition)
		.def("ValidateDefinitions", &AWillowMissionItem::ValidateDefinitions)
		;
	py::class_< AWillowUsableCustomizationItem, AWillowUsableItem >(m, "AWillowUsableCustomizationItem")
		.def("IsUsefulToThisPlayer", &AWillowUsableCustomizationItem::IsUsefulToThisPlayer)
		.def("GetItemCardTopSectionString", &AWillowUsableCustomizationItem::GetItemCardTopSectionString)
		.def("InitMeshes", &AWillowUsableCustomizationItem::InitMeshes)
		.def("eventIsItemAutoUsedBy", &AWillowUsableCustomizationItem::eventIsItemAutoUsedBy)
		.def("FormatFunStatsText", &AWillowUsableCustomizationItem::FormatFunStatsText, py::return_value_policy::reference)
		.def("CanBeApplied", &AWillowUsableCustomizationItem::CanBeApplied)
		.def("TryConsume", &AWillowUsableCustomizationItem::TryConsume)
		.def("IsConsumable", &AWillowUsableCustomizationItem::IsConsumable)
		.def("ValidateDefinition", &AWillowUsableCustomizationItem::ValidateDefinition)
		;
	py::class_< UWillowItemTypes, UObject >(m, "UWillowItemTypes")
		;
	py::class_< AWillowLightProjectileManager, AActor >(m, "AWillowLightProjectileManager")
		.def_property("bCreatingReplicatedProjectiles", [](AWillowLightProjectileManager &self){return self.bCreatingReplicatedProjectiles;}, [](AWillowLightProjectileManager &self, bool value){self.bCreatingReplicatedProjectiles = value ? 1 : 0;})
		.def_readwrite("WeaponOwner", &AWillowLightProjectileManager::WeaponOwner, py::return_value_policy::reference)
		.def_readwrite("PawnOwner", &AWillowLightProjectileManager::PawnOwner, py::return_value_policy::reference)
		.def_readwrite("MyProjs", &AWillowLightProjectileManager::MyProjs, py::return_value_policy::reference)
		.def_readwrite("RemovedProjs", &AWillowLightProjectileManager::RemovedProjs, py::return_value_policy::reference)
		.def_readwrite("ReplicatedCutoffTime", &AWillowLightProjectileManager::ReplicatedCutoffTime)
		.def_readwrite("ProjectileCount", &AWillowLightProjectileManager::ProjectileCount)
		.def_readwrite("MyBeams", &AWillowLightProjectileManager::MyBeams, py::return_value_policy::reference)
		.def_readwrite("LastTimeSeconds", &AWillowLightProjectileManager::LastTimeSeconds)
		.def_readwrite("DamageApplicationInterval", &AWillowLightProjectileManager::DamageApplicationInterval)
		.def_readwrite("DeadOwnerCheckTime", &AWillowLightProjectileManager::DeadOwnerCheckTime)
		.def("OnParticleSystemFinished", &AWillowLightProjectileManager::OnParticleSystemFinished)
		.def("eventSpawnOverchargedImpactEffect", &AWillowLightProjectileManager::eventSpawnOverchargedImpactEffect)
		.def("GetReflectionInaccuracyAngle", &AWillowLightProjectileManager::GetReflectionInaccuracyAngle, py::return_value_policy::reference)
		.def("GetReflectionDestination", &AWillowLightProjectileManager::GetReflectionDestination, py::return_value_policy::reference)
		.def("eventCauseBeamRadiusDamage", &AWillowLightProjectileManager::eventCauseBeamRadiusDamage)
		.def("GetBoneNameForBeamLock", &AWillowLightProjectileManager::GetBoneNameForBeamLock, py::return_value_policy::reference)
		.def("DeleteBeamsForSource", &AWillowLightProjectileManager::DeleteBeamsForSource)
		.def("DeleteBeamsFor", &AWillowLightProjectileManager::DeleteBeamsFor)
		.def("DeleteAllBeamsFromWeapon", &AWillowLightProjectileManager::DeleteAllBeamsFromWeapon)
		.def("DeleteAllBeams", &AWillowLightProjectileManager::DeleteAllBeams)
		.def("CleanupProjectiles", &AWillowLightProjectileManager::CleanupProjectiles)
		.def("AddBeam", &AWillowLightProjectileManager::AddBeam)
		.def("AddChildBeam", &AWillowLightProjectileManager::AddChildBeam)
		.def("AddWeaponBeam", &AWillowLightProjectileManager::AddWeaponBeam)
		.def("AddProj", &AWillowLightProjectileManager::AddProj)
		.def("eventDestroyed", &AWillowLightProjectileManager::eventDestroyed)
		;
	py::class_< UWillowLocalMessage, ULocalMessage >(m, "UWillowLocalMessage")
		.def("CloseFontColorTag", &UWillowLocalMessage::CloseFontColorTag, py::return_value_policy::reference)
		.def("OpenFontColorTag", &UWillowLocalMessage::OpenFontColorTag, py::return_value_policy::reference)
		.def("TrimWhitespace", &UWillowLocalMessage::TrimWhitespace, py::return_value_policy::reference)
		;
	py::class_< ULocalInventoryRefreshMessage, UWillowLocalMessage >(m, "ULocalInventoryRefreshMessage")
		.def("ClientInventoryRefresh", &ULocalInventoryRefreshMessage::ClientInventoryRefresh)
		;
	py::class_< ULocalTrainingDefinitionMessage, UWillowLocalMessage >(m, "ULocalTrainingDefinitionMessage")
		.def("ClientTrainingDefinitionReceive", &ULocalTrainingDefinitionMessage::ClientTrainingDefinitionReceive)
		;
	py::class_< ULocalTrainingMessage, UWillowLocalMessage >(m, "ULocalTrainingMessage")
		.def_readwrite("DefaultTrainingMessageColor", &ULocalTrainingMessage::DefaultTrainingMessageColor, py::return_value_policy::reference)
		.def("GetLocalStringForTrainingMessageKey", &ULocalTrainingMessage::GetLocalStringForTrainingMessageKey, py::return_value_policy::reference)
		.def("ClientReceive", &ULocalTrainingMessage::ClientReceive)
		;
	py::class_< UReceivedAmmoMessage, UWillowLocalMessage >(m, "UReceivedAmmoMessage")
		.def_readwrite("ReceivedAmmo", &UReceivedAmmoMessage::ReceivedAmmo, py::return_value_policy::reference)
		.def_readwrite("SelfReceivedAmmo", &UReceivedAmmoMessage::SelfReceivedAmmo, py::return_value_policy::reference)
		.def_readwrite("NumberOfRounds", &UReceivedAmmoMessage::NumberOfRounds, py::return_value_policy::reference)
		.def_readwrite("AmmoFakedRarityLevelForItemColor", &UReceivedAmmoMessage::AmmoFakedRarityLevelForItemColor)
		.def("GetAmmoColor", &UReceivedAmmoMessage::GetAmmoColor, py::return_value_policy::reference)
		.def("GetNumberOfRoundsString", &UReceivedAmmoMessage::GetNumberOfRoundsString, py::return_value_policy::reference)
		.def("GetAmmoString", &UReceivedAmmoMessage::GetAmmoString, py::return_value_policy::reference)
		.def("ClientAmmoReceive", &UReceivedAmmoMessage::ClientAmmoReceive)
		;
	py::class_< UWillowMapInfo, UMapInfo >(m, "UWillowMapInfo")
		.def_readwrite("TacticalMapMovie", &UWillowMapInfo::TacticalMapMovie, py::return_value_policy::reference)
		.def_readwrite("TacticalMapVolume", &UWillowMapInfo::TacticalMapVolume, py::return_value_policy::reference)
		.def_readwrite("FrontEndMovieDef", &UWillowMapInfo::FrontEndMovieDef, py::return_value_policy::reference)
		;
	py::class_< AWillowMissionPickupSpawner, AActor >(m, "AWillowMissionPickupSpawner")
		.def_readwrite("VfTable_IIMission", &AWillowMissionPickupSpawner::VfTable_IIMission, py::return_value_policy::reference)
		.def_readwrite("MissionItemDef", &AWillowMissionPickupSpawner::MissionItemDef, py::return_value_policy::reference)
		.def_readwrite("LinkedAreaWaypoint", &AWillowMissionPickupSpawner::LinkedAreaWaypoint, py::return_value_policy::reference)
		.def_readwrite("ObjectiveBit", &AWillowMissionPickupSpawner::ObjectiveBit)
		.def_readwrite("MissionPickup", &AWillowMissionPickupSpawner::MissionPickup, py::return_value_policy::reference)
		.def_readwrite("Sprite", &AWillowMissionPickupSpawner::Sprite, py::return_value_policy::reference)
		.def("RunPickupEvent", &AWillowMissionPickupSpawner::RunPickupEvent)
		.def("SetPickupStatus", &AWillowMissionPickupSpawner::SetPickupStatus)
		.def("eventMissionReactionObjectiveComplete", &AWillowMissionPickupSpawner::eventMissionReactionObjectiveComplete)
		.def("eventMissionReactionObjectiveCleared", &AWillowMissionPickupSpawner::eventMissionReactionObjectiveCleared)
		.def("eventMissionReactionObjectiveUpdated", &AWillowMissionPickupSpawner::eventMissionReactionObjectiveUpdated)
		.def("eventMissionReactionObjectiveSetChanged", &AWillowMissionPickupSpawner::eventMissionReactionObjectiveSetChanged)
		.def("eventMissionReactionStatusChanged", &AWillowMissionPickupSpawner::eventMissionReactionStatusChanged)
		.def("eventMissionReactionLevelLoad", &AWillowMissionPickupSpawner::eventMissionReactionLevelLoad)
		.def("eventPostBeginPlay", &AWillowMissionPickupSpawner::eventPostBeginPlay)
		;
	py::class_< AWillowMissionPickupFailsafe, AWillowMissionPickupSpawner >(m, "AWillowMissionPickupFailsafe")
		.def_readwrite("LinkedAspect", &AWillowMissionPickupFailsafe::LinkedAspect, py::return_value_policy::reference)
		.def_readwrite("CompletedObjective", &AWillowMissionPickupFailsafe::CompletedObjective, py::return_value_policy::reference)
		.def_readwrite("ObjectiveSet", &AWillowMissionPickupFailsafe::ObjectiveSet, py::return_value_policy::reference)
		.def_readwrite("TimeToTriggerFailsafe", &AWillowMissionPickupFailsafe::TimeToTriggerFailsafe)
		.def_readwrite("MissionItem", &AWillowMissionPickupFailsafe::MissionItem, py::return_value_policy::reference)
		.def("EnactFailsafe", &AWillowMissionPickupFailsafe::EnactFailsafe)
		.def("CheckFailsafe", &AWillowMissionPickupFailsafe::CheckFailsafe)
		.def("SetupFailsafe", &AWillowMissionPickupFailsafe::SetupFailsafe)
		.def("WaitingForActivation", &AWillowMissionPickupFailsafe::WaitingForActivation)
		.def("SetPickup", &AWillowMissionPickupFailsafe::SetPickup)
		.def("SetFailsafePickup", &AWillowMissionPickupFailsafe::SetFailsafePickup)
		.def("SetPickupStatus", &AWillowMissionPickupFailsafe::SetPickupStatus)
		;
	py::class_< UWillowObstacleUtility, UObject >(m, "UWillowObstacleUtility")
		.def_property("bDebug", [](UWillowObstacleUtility &self){return self.bDebug;}, [](UWillowObstacleUtility &self, bool value){self.bDebug = value ? 1 : 0;})
		.def_property("bActive", [](UWillowObstacleUtility &self){return self.bActive;}, [](UWillowObstacleUtility &self, bool value){self.bActive = value ? 1 : 0;})
		.def_readwrite("GridSize", &UWillowObstacleUtility::GridSize)
		.def_readwrite("MaxTime", &UWillowObstacleUtility::MaxTime)
		.def_readwrite("MaxDist", &UWillowObstacleUtility::MaxDist)
		.def_readwrite("LastPointBonus", &UWillowObstacleUtility::LastPointBonus)
		.def_readwrite("Obstacles", &UWillowObstacleUtility::Obstacles, py::return_value_policy::reference)
		.def_readwrite("ObstaclePoints", &UWillowObstacleUtility::ObstaclePoints, py::return_value_policy::reference)
		.def("GetObstacleData", &UWillowObstacleUtility::GetObstacleData, py::return_value_policy::reference)
		.def("IsDebugObstacle", &UWillowObstacleUtility::IsDebugObstacle)
		.def("UnRegisterObstacle", &UWillowObstacleUtility::UnRegisterObstacle)
		.def("RegisterObstacle", &UWillowObstacleUtility::RegisterObstacle)
		;
	py::class_< UWillowOnDemandPackageMarker, UObject >(m, "UWillowOnDemandPackageMarker")
		;
	py::class_< UWillowOnlineGameSettings_DataStore, UUIDataStore_OnlineGameSettings >(m, "UWillowOnlineGameSettings_DataStore")
		.def("GetPlaythrough", &UWillowOnlineGameSettings_DataStore::GetPlaythrough)
		.def("GetLevel", &UWillowOnlineGameSettings_DataStore::GetLevel)
		.def("OnGameCreated", &UWillowOnlineGameSettings_DataStore::OnGameCreated)
		.def("eventCreateGame", &UWillowOnlineGameSettings_DataStore::eventCreateGame)
		;
	py::class_< UWillowPauseTicker, UObject >(m, "UWillowPauseTicker")
		.def_readwrite("VfTable_FTickableObject", &UWillowPauseTicker::VfTable_FTickableObject, py::return_value_policy::reference)
		.def_readwrite("Timers", &UWillowPauseTicker::Timers, py::return_value_policy::reference)
		.def("ClearTimer", &UWillowPauseTicker::ClearTimer)
		.def("IsTimerActive", &UWillowPauseTicker::IsTimerActive)
		.def("SetTimer", &UWillowPauseTicker::SetTimer)
		;
	py::class_< AWillowPawn, AGearboxPawn >(m, "AWillowPawn")
		.def_property("bHasShieldVar", [](AWillowPawn &self){return self.bHasShieldVar;}, [](AWillowPawn &self, bool value){self.bHasShieldVar = value ? 1 : 0;})
		.def_property("bLastHasShieldVar", [](AWillowPawn &self){return self.bLastHasShieldVar;}, [](AWillowPawn &self, bool value){self.bLastHasShieldVar = value ? 1 : 0;})
		.def_property("bFixedView", [](AWillowPawn &self){return self.bFixedView;}, [](AWillowPawn &self, bool value){self.bFixedView = value ? 1 : 0;})
		.def_property("bIsTyping", [](AWillowPawn &self){return self.bIsTyping;}, [](AWillowPawn &self, bool value){self.bIsTyping = value ? 1 : 0;})
		.def_property("bForcedOverlay", [](AWillowPawn &self){return self.bForcedOverlay;}, [](AWillowPawn &self, bool value){self.bForcedOverlay = value ? 1 : 0;})
		.def_property("bIsInvulnerable", [](AWillowPawn &self){return self.bIsInvulnerable;}, [](AWillowPawn &self, bool value){self.bIsInvulnerable = value ? 1 : 0;})
		.def_property("bShieldAbsorb", [](AWillowPawn &self){return self.bShieldAbsorb;}, [](AWillowPawn &self, bool value){self.bShieldAbsorb = value ? 1 : 0;})
		.def_property("bUpdateEyeheight", [](AWillowPawn &self){return self.bUpdateEyeheight;}, [](AWillowPawn &self, bool value){self.bUpdateEyeheight = value ? 1 : 0;})
		.def_property("bWeaponBob", [](AWillowPawn &self){return self.bWeaponBob;}, [](AWillowPawn &self, bool value){self.bWeaponBob = value ? 1 : 0;})
		.def_property("bUsingFootIK", [](AWillowPawn &self){return self.bUsingFootIK;}, [](AWillowPawn &self, bool value){self.bUsingFootIK = value ? 1 : 0;})
		.def_property("bNotifyBeginFalling", [](AWillowPawn &self){return self.bNotifyBeginFalling;}, [](AWillowPawn &self, bool value){self.bNotifyBeginFalling = value ? 1 : 0;})
		.def_property("bNotifyStopFalling", [](AWillowPawn &self){return self.bNotifyStopFalling;}, [](AWillowPawn &self, bool value){self.bNotifyStopFalling = value ? 1 : 0;})
		.def_property("bNotifyBeginWalking", [](AWillowPawn &self){return self.bNotifyBeginWalking;}, [](AWillowPawn &self, bool value){self.bNotifyBeginWalking = value ? 1 : 0;})
		.def_property("bNotifyStopWalking", [](AWillowPawn &self){return self.bNotifyStopWalking;}, [](AWillowPawn &self, bool value){self.bNotifyStopWalking = value ? 1 : 0;})
		.def_property("bShouldRagdollAfterDeathAnim", [](AWillowPawn &self){return self.bShouldRagdollAfterDeathAnim;}, [](AWillowPawn &self, bool value){self.bShouldRagdollAfterDeathAnim = value ? 1 : 0;})
		.def_property("bUnderFullRagdollControl", [](AWillowPawn &self){return self.bUnderFullRagdollControl;}, [](AWillowPawn &self, bool value){self.bUnderFullRagdollControl = value ? 1 : 0;})
		.def_property("bDeathRagdollInitialized", [](AWillowPawn &self){return self.bDeathRagdollInitialized;}, [](AWillowPawn &self, bool value){self.bDeathRagdollInitialized = value ? 1 : 0;})
		.def_property("bBlendingIntoDeathRagdoll", [](AWillowPawn &self){return self.bBlendingIntoDeathRagdoll;}, [](AWillowPawn &self, bool value){self.bBlendingIntoDeathRagdoll = value ? 1 : 0;})
		.def_property("bEquippedWeaponsHidden", [](AWillowPawn &self){return self.bEquippedWeaponsHidden;}, [](AWillowPawn &self, bool value){self.bEquippedWeaponsHidden = value ? 1 : 0;})
		.def_property("bHolsteredWeaponsHidden", [](AWillowPawn &self){return self.bHolsteredWeaponsHidden;}, [](AWillowPawn &self, bool value){self.bHolsteredWeaponsHidden = value ? 1 : 0;})
		.def_property("bHolsteredItemsHidden", [](AWillowPawn &self){return self.bHolsteredItemsHidden;}, [](AWillowPawn &self, bool value){self.bHolsteredItemsHidden = value ? 1 : 0;})
		.def_property("bWeaponParticleAttachmentsHidden", [](AWillowPawn &self){return self.bWeaponParticleAttachmentsHidden;}, [](AWillowPawn &self, bool value){self.bWeaponParticleAttachmentsHidden = value ? 1 : 0;})
		.def_property("bShouldUseAimAtActor", [](AWillowPawn &self){return self.bShouldUseAimAtActor;}, [](AWillowPawn &self, bool value){self.bShouldUseAimAtActor = value ? 1 : 0;})
		.def_property("bShouldUseAimAtVector", [](AWillowPawn &self){return self.bShouldUseAimAtVector;}, [](AWillowPawn &self, bool value){self.bShouldUseAimAtVector = value ? 1 : 0;})
		.def_property("bAlignToSurfaceNormal", [](AWillowPawn &self){return self.bAlignToSurfaceNormal;}, [](AWillowPawn &self, bool value){self.bAlignToSurfaceNormal = value ? 1 : 0;})
		.def_property("bTookCriticalHitThisTick", [](AWillowPawn &self){return self.bTookCriticalHitThisTick;}, [](AWillowPawn &self, bool value){self.bTookCriticalHitThisTick = value ? 1 : 0;})
		.def_property("bWasLastDamageACriticalHit", [](AWillowPawn &self){return self.bWasLastDamageACriticalHit;}, [](AWillowPawn &self, bool value){self.bWasLastDamageACriticalHit = value ? 1 : 0;})
		.def_property("bBeenRunOver", [](AWillowPawn &self){return self.bBeenRunOver;}, [](AWillowPawn &self, bool value){self.bBeenRunOver = value ? 1 : 0;})
		.def_property("bKilledByTechEffect", [](AWillowPawn &self){return self.bKilledByTechEffect;}, [](AWillowPawn &self, bool value){self.bKilledByTechEffect = value ? 1 : 0;})
		.def_property("bExistsDeathSound", [](AWillowPawn &self){return self.bExistsDeathSound;}, [](AWillowPawn &self, bool value){self.bExistsDeathSound = value ? 1 : 0;})
		.def_property("bExistsCriticalHitSound", [](AWillowPawn &self){return self.bExistsCriticalHitSound;}, [](AWillowPawn &self, bool value){self.bExistsCriticalHitSound = value ? 1 : 0;})
		.def_property("bExistsCriticalDeathSound", [](AWillowPawn &self){return self.bExistsCriticalDeathSound;}, [](AWillowPawn &self, bool value){self.bExistsCriticalDeathSound = value ? 1 : 0;})
		.def_property("bExistsRanOverSound", [](AWillowPawn &self){return self.bExistsRanOverSound;}, [](AWillowPawn &self, bool value){self.bExistsRanOverSound = value ? 1 : 0;})
		.def_property("bExistsTechDeathSound", [](AWillowPawn &self){return self.bExistsTechDeathSound;}, [](AWillowPawn &self, bool value){self.bExistsTechDeathSound = value ? 1 : 0;})
		.def_property("bUnderMatineeControl", [](AWillowPawn &self){return self.bUnderMatineeControl;}, [](AWillowPawn &self, bool value){self.bUnderMatineeControl = value ? 1 : 0;})
		.def_property("bUnderMatineeAnimControl", [](AWillowPawn &self){return self.bUnderMatineeAnimControl;}, [](AWillowPawn &self, bool value){self.bUnderMatineeAnimControl = value ? 1 : 0;})
		.def_property("bResetAnimTree", [](AWillowPawn &self){return self.bResetAnimTree;}, [](AWillowPawn &self, bool value){self.bResetAnimTree = value ? 1 : 0;})
		.def_property("FaceFXSpeechPending", [](AWillowPawn &self){return self.FaceFXSpeechPending;}, [](AWillowPawn &self, bool value){self.FaceFXSpeechPending = value ? 1 : 0;})
		.def_property("bAlwaysPostRender", [](AWillowPawn &self){return self.bAlwaysPostRender;}, [](AWillowPawn &self, bool value){self.bAlwaysPostRender = value ? 1 : 0;})
		.def_property("bIsLeaping", [](AWillowPawn &self){return self.bIsLeaping;}, [](AWillowPawn &self, bool value){self.bIsLeaping = value ? 1 : 0;})
		.def_property("bAIDEBUG_MarkCurrentPawn", [](AWillowPawn &self){return self.bAIDEBUG_MarkCurrentPawn;}, [](AWillowPawn &self, bool value){self.bAIDEBUG_MarkCurrentPawn = value ? 1 : 0;})
		.def_property("NoEnemyBehaviorsRun", [](AWillowPawn &self){return self.NoEnemyBehaviorsRun;}, [](AWillowPawn &self, bool value){self.NoEnemyBehaviorsRun = value ? 1 : 0;})
		.def_property("bTargetedBehaviorsRun", [](AWillowPawn &self){return self.bTargetedBehaviorsRun;}, [](AWillowPawn &self, bool value){self.bTargetedBehaviorsRun = value ? 1 : 0;})
		.def_property("bCausePlayerDeath", [](AWillowPawn &self){return self.bCausePlayerDeath;}, [](AWillowPawn &self, bool value){self.bCausePlayerDeath = value ? 1 : 0;})
		.def_property("bPlayerFellIntoPlayerKillVolume", [](AWillowPawn &self){return self.bPlayerFellIntoPlayerKillVolume;}, [](AWillowPawn &self, bool value){self.bPlayerFellIntoPlayerKillVolume = value ? 1 : 0;})
		.def_property("bBeingRevived", [](AWillowPawn &self){return self.bBeingRevived;}, [](AWillowPawn &self, bool value){self.bBeingRevived = value ? 1 : 0;})
		.def_property("bInjuredNoTimeout", [](AWillowPawn &self){return self.bInjuredNoTimeout;}, [](AWillowPawn &self, bool value){self.bInjuredNoTimeout = value ? 1 : 0;})
		.def_property("bIsInInjuredBonusTime", [](AWillowPawn &self){return self.bIsInInjuredBonusTime;}, [](AWillowPawn &self, bool value){self.bIsInInjuredBonusTime = value ? 1 : 0;})
		.def_property("bInjuredHasPausedDueToCinematicMode", [](AWillowPawn &self){return self.bInjuredHasPausedDueToCinematicMode;}, [](AWillowPawn &self, bool value){self.bInjuredHasPausedDueToCinematicMode = value ? 1 : 0;})
		.def_property("bTearOffAfterDeath", [](AWillowPawn &self){return self.bTearOffAfterDeath;}, [](AWillowPawn &self, bool value){self.bTearOffAfterDeath = value ? 1 : 0;})
		.def_property("bGibbed", [](AWillowPawn &self){return self.bGibbed;}, [](AWillowPawn &self, bool value){self.bGibbed = value ? 1 : 0;})
		.def_property("bDidServerGibPawn", [](AWillowPawn &self){return self.bDidServerGibPawn;}, [](AWillowPawn &self, bool value){self.bDidServerGibPawn = value ? 1 : 0;})
		.def_property("bDestroyPawnAfterGoreEffectDeath", [](AWillowPawn &self){return self.bDestroyPawnAfterGoreEffectDeath;}, [](AWillowPawn &self, bool value){self.bDestroyPawnAfterGoreEffectDeath = value ? 1 : 0;})
		.def_property("bFlinching", [](AWillowPawn &self){return self.bFlinching;}, [](AWillowPawn &self, bool value){self.bFlinching = value ? 1 : 0;})
		.def_property("bTakingRadiusDamage", [](AWillowPawn &self){return self.bTakingRadiusDamage;}, [](AWillowPawn &self, bool value){self.bTakingRadiusDamage = value ? 1 : 0;})
		.def_property("bMuteHitSound", [](AWillowPawn &self){return self.bMuteHitSound;}, [](AWillowPawn &self, bool value){self.bMuteHitSound = value ? 1 : 0;})
		.def_property("bDebugActionSkill", [](AWillowPawn &self){return self.bDebugActionSkill;}, [](AWillowPawn &self, bool value){self.bDebugActionSkill = value ? 1 : 0;})
		.def_property("bMeleeWeaponAttached", [](AWillowPawn &self){return self.bMeleeWeaponAttached;}, [](AWillowPawn &self, bool value){self.bMeleeWeaponAttached = value ? 1 : 0;})
		.def_property("bHideAttachedWeapon", [](AWillowPawn &self){return self.bHideAttachedWeapon;}, [](AWillowPawn &self, bool value){self.bHideAttachedWeapon = value ? 1 : 0;})
		.def_property("bBigBoy", [](AWillowPawn &self){return self.bBigBoy;}, [](AWillowPawn &self, bool value){self.bBigBoy = value ? 1 : 0;})
		.def_property("bInjuredSuicide", [](AWillowPawn &self){return self.bInjuredSuicide;}, [](AWillowPawn &self, bool value){self.bInjuredSuicide = value ? 1 : 0;})
		.def_property("bGaveUp", [](AWillowPawn &self){return self.bGaveUp;}, [](AWillowPawn &self, bool value){self.bGaveUp = value ? 1 : 0;})
		.def_property("bAllowProjectilesToCollideWithSkeletalMesh", [](AWillowPawn &self){return self.bAllowProjectilesToCollideWithSkeletalMesh;}, [](AWillowPawn &self, bool value){self.bAllowProjectilesToCollideWithSkeletalMesh = value ? 1 : 0;})
		.def_property("bSwitchingSeats", [](AWillowPawn &self){return self.bSwitchingSeats;}, [](AWillowPawn &self, bool value){self.bSwitchingSeats = value ? 1 : 0;})
		.def_property("bWantsFullLOSTrace", [](AWillowPawn &self){return self.bWantsFullLOSTrace;}, [](AWillowPawn &self, bool value){self.bWantsFullLOSTrace = value ? 1 : 0;})
		.def_property("bInterpYawOnly", [](AWillowPawn &self){return self.bInterpYawOnly;}, [](AWillowPawn &self, bool value){self.bInterpYawOnly = value ? 1 : 0;})
		.def_property("bCanUse", [](AWillowPawn &self){return self.bCanUse;}, [](AWillowPawn &self, bool value){self.bCanUse = value ? 1 : 0;})
		.def_property("bTurning", [](AWillowPawn &self){return self.bTurning;}, [](AWillowPawn &self, bool value){self.bTurning = value ? 1 : 0;})
		.def_property("bSlowTurning", [](AWillowPawn &self){return self.bSlowTurning;}, [](AWillowPawn &self, bool value){self.bSlowTurning = value ? 1 : 0;})
		.def_property("bBeingHealed", [](AWillowPawn &self){return self.bBeingHealed;}, [](AWillowPawn &self, bool value){self.bBeingHealed = value ? 1 : 0;})
		.def_property("bActiveObstacle", [](AWillowPawn &self){return self.bActiveObstacle;}, [](AWillowPawn &self, bool value){self.bActiveObstacle = value ? 1 : 0;})
		.def_property("bRMWantsToMove", [](AWillowPawn &self){return self.bRMWantsToMove;}, [](AWillowPawn &self, bool value){self.bRMWantsToMove = value ? 1 : 0;})
		.def_property("bRMForceStop", [](AWillowPawn &self){return self.bRMForceStop;}, [](AWillowPawn &self, bool value){self.bRMForceStop = value ? 1 : 0;})
		.def_property("bStuck", [](AWillowPawn &self){return self.bStuck;}, [](AWillowPawn &self, bool value){self.bStuck = value ? 1 : 0;})
		.def_readwrite("VfTable_IIInstanceData", &AWillowPawn::VfTable_IIInstanceData, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDesignerAttributeProvider", &AWillowPawn::VfTable_IIDesignerAttributeProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDamageSurface", &AWillowPawn::VfTable_IIDamageSurface, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIFaceFXActor", &AWillowPawn::VfTable_IIFaceFXActor, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIMeleeAttacker", &AWillowPawn::VfTable_IIMeleeAttacker, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyPawn", &AWillowPawn::VfTable_IIBodyPawn, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIStatusEffectTarget", &AWillowPawn::VfTable_IIStatusEffectTarget, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBalancedActor", &AWillowPawn::VfTable_IIBalancedActor, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIShop", &AWillowPawn::VfTable_IIShop, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIHealable", &AWillowPawn::VfTable_IIHealable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIMaterialFadeBehavior", &AWillowPawn::VfTable_IIMaterialFadeBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIConstructObject", &AWillowPawn::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDamageable", &AWillowPawn::VfTable_IIDamageable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIHitRegionConsumer", &AWillowPawn::VfTable_IIHitRegionConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorConsumer", &AWillowPawn::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyInfoProvider", &AWillowPawn::VfTable_IIBodyInfoProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyCompositionInstance", &AWillowPawn::VfTable_IIBodyCompositionInstance, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIGearLikenessConsumer", &AWillowPawn::VfTable_IIGearLikenessConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IINounAttributeProvider", &AWillowPawn::VfTable_IINounAttributeProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIUsable", &AWillowPawn::VfTable_IIUsable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIAnimProvider", &AWillowPawn::VfTable_IIAnimProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IISimpleAnimPlayer", &AWillowPawn::VfTable_IISimpleAnimPlayer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIProjectileReflector", &AWillowPawn::VfTable_IIProjectileReflector, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDynamicObstacle", &AWillowPawn::VfTable_IIDynamicObstacle, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIExtraImpactEffects", &AWillowPawn::VfTable_IIExtraImpactEffects, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIMapDisplayInfo", &AWillowPawn::VfTable_IIMapDisplayInfo, py::return_value_policy::reference)
		.def_readwrite("ShieldArmor", &AWillowPawn::ShieldArmor, py::return_value_policy::reference)
		.def_readwrite("ShieldVar", &AWillowPawn::ShieldVar)
		.def_readwrite("ShieldMaxVar", &AWillowPawn::ShieldMaxVar)
		.def_readwrite("LastShieldVar", &AWillowPawn::LastShieldVar)
		.def_readwrite("LastShieldMaxVar", &AWillowPawn::LastShieldMaxVar)
		.def_readwrite("IntrinsicArmor", &AWillowPawn::IntrinsicArmor)
		.def_readwrite("IntrinsicArmorBaseValue", &AWillowPawn::IntrinsicArmorBaseValue)
		.def_readwrite("IntrinsicArmorModifierStack", &AWillowPawn::IntrinsicArmorModifierStack, py::return_value_policy::reference)
		.def_readwrite("WeaponHand", &AWillowPawn::WeaponHand)
		.def_readwrite("ServerPhysics", &AWillowPawn::ServerPhysics)
		.def_readwrite("HolsteredWeaponSlotUsed", &AWillowPawn::HolsteredWeaponSlotUsed)
		.def_readwrite("CurrentNumOfHolsteredWeaponSlots", &AWillowPawn::CurrentNumOfHolsteredWeaponSlots)
		.def_readwrite("ReplicatedGearHiddenState", &AWillowPawn::ReplicatedGearHiddenState)
		.def_readwrite("SecondWindReason", &AWillowPawn::SecondWindReason)
		.def_readwrite("InjuredState", &AWillowPawn::InjuredState)
		.def_readwrite("InjuredDeadState", &AWillowPawn::InjuredDeadState)
		.def_readwrite("ForceTechDeathIndex", &AWillowPawn::ForceTechDeathIndex)
		.def_readwrite("MeshBodyCompositionIndex", &AWillowPawn::MeshBodyCompositionIndex)
		.def_readwrite("InterpRotMode", &AWillowPawn::InterpRotMode)
		.def_readwrite("InterpContRotMode", &AWillowPawn::InterpContRotMode)
		.def_readwrite("InterpLocMode", &AWillowPawn::InterpLocMode)
		.def_readwrite("InterpRelRotMode", &AWillowPawn::InterpRelRotMode)
		.def_readwrite("InterpRelLocMode", &AWillowPawn::InterpRelLocMode)
		.def_readwrite("bCloaked", &AWillowPawn::bCloaked)
		.def_readwrite("bCloakedReplicated", &AWillowPawn::bCloakedReplicated)
		.def_readwrite("CloakOverride", &AWillowPawn::CloakOverride)
		.def_readwrite("bOvercharged", &AWillowPawn::bOvercharged)
		.def_readwrite("bOverchargedBaseValue", &AWillowPawn::bOverchargedBaseValue)
		.def_readwrite("bOverchargedModifierStack", &AWillowPawn::bOverchargedModifierStack, py::return_value_policy::reference)
		.def_readwrite("HeadMesh", &AWillowPawn::HeadMesh, py::return_value_policy::reference)
		.def_readwrite("LightEnvironment", &AWillowPawn::LightEnvironment, py::return_value_policy::reference)
		.def_readwrite("PawnAmbientSound", &AWillowPawn::PawnAmbientSound, py::return_value_policy::reference)
		.def_readwrite("WeaponAmbientSound", &AWillowPawn::WeaponAmbientSound, py::return_value_policy::reference)
		.def_readwrite("Bob", &AWillowPawn::Bob)
		.def_readwrite("BobBaseValue", &AWillowPawn::BobBaseValue)
		.def_readwrite("BobModifierStack", &AWillowPawn::BobModifierStack, py::return_value_policy::reference)
		.def_readwrite("BobTime", &AWillowPawn::BobTime)
		.def_readwrite("WalkBob", &AWillowPawn::WalkBob, py::return_value_policy::reference)
		.def_readwrite("EyeHeightModifier", &AWillowPawn::EyeHeightModifier)
		.def_readwrite("EyeHeightModifierBaseValue", &AWillowPawn::EyeHeightModifierBaseValue)
		.def_readwrite("EyeHeightModifierModifierStack", &AWillowPawn::EyeHeightModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("EyeHeightModifierSpeed", &AWillowPawn::EyeHeightModifierSpeed)
		.def_readwrite("EyeHeightModifierSpeedBaseValue", &AWillowPawn::EyeHeightModifierSpeedBaseValue)
		.def_readwrite("EyeHeightModifierSpeedModifierStack", &AWillowPawn::EyeHeightModifierSpeedModifierStack, py::return_value_policy::reference)
		.def_readwrite("AppliedEyeHeightModifier", &AWillowPawn::AppliedEyeHeightModifier)
		.def_readwrite("SlopeBoostFriction", &AWillowPawn::SlopeBoostFriction)
		.def_readwrite("FixedViewLoc", &AWillowPawn::FixedViewLoc, py::return_value_policy::reference)
		.def_readwrite("FixedViewRot", &AWillowPawn::FixedViewRot, py::return_value_policy::reference)
		.def_readwrite("CameraScale", &AWillowPawn::CameraScale)
		.def_readwrite("CameraScaleRight", &AWillowPawn::CameraScaleRight)
		.def_readwrite("CameraScaleUp", &AWillowPawn::CameraScaleUp)
		.def_readwrite("CameraScaleStep", &AWillowPawn::CameraScaleStep)
		.def_readwrite("CurrentCameraScale", &AWillowPawn::CurrentCameraScale)
		.def_readwrite("CameraScaleRange", &AWillowPawn::CameraScaleRange, py::return_value_policy::reference)
		.def_readwrite("FreeCameraTargetForwardOffset", &AWillowPawn::FreeCameraTargetForwardOffset)
		.def_readwrite("CurrentFreeCameraTargetForwardOffset", &AWillowPawn::CurrentFreeCameraTargetForwardOffset)
		.def_readwrite("FreeCamTargetForwardOffsetStep", &AWillowPawn::FreeCamTargetForwardOffsetStep)
		.def_readwrite("FreeCamTargetForwardOffsetRange", &AWillowPawn::FreeCamTargetForwardOffsetRange, py::return_value_policy::reference)
		.def_readwrite("Cached3rdPersonCamLoc", &AWillowPawn::Cached3rdPersonCamLoc, py::return_value_policy::reference)
		.def_readwrite("Cached3rdPersonCamRot", &AWillowPawn::Cached3rdPersonCamRot, py::return_value_policy::reference)
		.def_readwrite("OldLocationZ", &AWillowPawn::OldLocationZ)
		.def_readwrite("MeshSlopeOffset", &AWillowPawn::MeshSlopeOffset)
		.def_readwrite("MeshSlopeOffsetPercent", &AWillowPawn::MeshSlopeOffsetPercent)
		.def_readwrite("MaxMeshSlopeOffsetPercent", &AWillowPawn::MaxMeshSlopeOffsetPercent)
		.def_readwrite("CustomGravityScaling", &AWillowPawn::CustomGravityScaling)
		.def_readwrite("CustomGravityScalingBaseValue", &AWillowPawn::CustomGravityScalingBaseValue)
		.def_readwrite("CustomGravityScalingModifierStack", &AWillowPawn::CustomGravityScalingModifierStack, py::return_value_policy::reference)
		.def_readwrite("LastPainSound", &AWillowPawn::LastPainSound)
		.def_readwrite("DeathTime", &AWillowPawn::DeathTime)
		.def_readwrite("LookYaw", &AWillowPawn::LookYaw)
		.def_readwrite("MyDeathDef", &AWillowPawn::MyDeathDef, py::return_value_policy::reference)
		.def_readwrite("CurrentDeathAnimation", &AWillowPawn::CurrentDeathAnimation, py::return_value_policy::reference)
		.def_readwrite("DeathImpactAngle", &AWillowPawn::DeathImpactAngle)
		.def_readwrite("BloodEmitterClass", &AWillowPawn::BloodEmitterClass, py::return_value_policy::reference)
		.def_readwrite("BodyClass", &AWillowPawn::BodyClass, py::return_value_policy::reference)
		.def_readwrite("ShieldColor", &AWillowPawn::ShieldColor, py::return_value_policy::reference)
		.def_readwrite("ShouldBulletsPenetrateEnemies", &AWillowPawn::ShouldBulletsPenetrateEnemies)
		.def_readwrite("BulletPenetratedEnemyDamageScale", &AWillowPawn::BulletPenetratedEnemyDamageScale)
		.def_readwrite("BulletPenetratedEnemyDamageScaleBaseValue", &AWillowPawn::BulletPenetratedEnemyDamageScaleBaseValue)
		.def_readwrite("BulletPenetratedEnemyDamageScaleModifierStack", &AWillowPawn::BulletPenetratedEnemyDamageScaleModifierStack, py::return_value_policy::reference)
		.def_readwrite("BulletReflectionOffEnemyChance", &AWillowPawn::BulletReflectionOffEnemyChance)
		.def_readwrite("BulletReflectionOffEnemyChanceBaseValue", &AWillowPawn::BulletReflectionOffEnemyChanceBaseValue)
		.def_readwrite("BulletReflectionOffEnemyChanceModifierStack", &AWillowPawn::BulletReflectionOffEnemyChanceModifierStack, py::return_value_policy::reference)
		.def_readwrite("BulletReflectedOffEnemyDamageScale", &AWillowPawn::BulletReflectedOffEnemyDamageScale)
		.def_readwrite("BulletReflectedOffEnemyDamageScaleBaseValue", &AWillowPawn::BulletReflectedOffEnemyDamageScaleBaseValue)
		.def_readwrite("BulletReflectedOffEnemyDamageScaleModifierStack", &AWillowPawn::BulletReflectedOffEnemyDamageScaleModifierStack, py::return_value_policy::reference)
		.def_readwrite("BulletReflectionOffSelfChance", &AWillowPawn::BulletReflectionOffSelfChance)
		.def_readwrite("BulletReflectionOffSelfChanceBaseValue", &AWillowPawn::BulletReflectionOffSelfChanceBaseValue)
		.def_readwrite("BulletReflectionOffSelfChanceModifierStack", &AWillowPawn::BulletReflectionOffSelfChanceModifierStack, py::return_value_policy::reference)
		.def_readwrite("BulletReflectedOffSelfDamageScale", &AWillowPawn::BulletReflectedOffSelfDamageScale)
		.def_readwrite("BulletReflectedOffSelfDamageScaleBaseValue", &AWillowPawn::BulletReflectedOffSelfDamageScaleBaseValue)
		.def_readwrite("BulletReflectedOffSelfDamageScaleModifierStack", &AWillowPawn::BulletReflectedOffSelfDamageScaleModifierStack, py::return_value_policy::reference)
		.def_readwrite("BulletReflectedOffSelfDamageTakenScale", &AWillowPawn::BulletReflectedOffSelfDamageTakenScale)
		.def_readwrite("BulletReflectedOffSelfDamageTakenScaleBaseValue", &AWillowPawn::BulletReflectedOffSelfDamageTakenScaleBaseValue)
		.def_readwrite("BulletReflectedOffSelfDamageTakenScaleModifierStack", &AWillowPawn::BulletReflectedOffSelfDamageTakenScaleModifierStack, py::return_value_policy::reference)
		.def_readwrite("BulletRicochetTowardsEnemyChance", &AWillowPawn::BulletRicochetTowardsEnemyChance)
		.def_readwrite("BulletRicochetTowardsEnemyChanceBaseValue", &AWillowPawn::BulletRicochetTowardsEnemyChanceBaseValue)
		.def_readwrite("BulletRicochetTowardsEnemyChanceModifierStack", &AWillowPawn::BulletRicochetTowardsEnemyChanceModifierStack, py::return_value_policy::reference)
		.def_readwrite("BulletRicochetedTowardsEnemyDamageScale", &AWillowPawn::BulletRicochetedTowardsEnemyDamageScale)
		.def_readwrite("BulletRicochetedTowardsEnemyDamageScaleBaseValue", &AWillowPawn::BulletRicochetedTowardsEnemyDamageScaleBaseValue)
		.def_readwrite("BulletRicochetedTowardsEnemyDamageScaleModifierStack", &AWillowPawn::BulletRicochetedTowardsEnemyDamageScaleModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatedMeleeDamageAdded", &AWillowPawn::InstigatedMeleeDamageAdded)
		.def_readwrite("InstigatedMeleeDamageAddedBaseValue", &AWillowPawn::InstigatedMeleeDamageAddedBaseValue)
		.def_readwrite("InstigatedMeleeDamageAddedModifierStack", &AWillowPawn::InstigatedMeleeDamageAddedModifierStack, py::return_value_policy::reference)
		.def_readwrite("PlayerAvertDeathChance", &AWillowPawn::PlayerAvertDeathChance)
		.def_readwrite("PlayerAvertDeathChanceBaseValue", &AWillowPawn::PlayerAvertDeathChanceBaseValue)
		.def_readwrite("PlayerAvertDeathChanceModifierStack", &AWillowPawn::PlayerAvertDeathChanceModifierStack, py::return_value_policy::reference)
		.def_readwrite("FireRateMultiplier", &AWillowPawn::FireRateMultiplier)
		.def_readwrite("WeaponSwapTimeMultiplier", &AWillowPawn::WeaponSwapTimeMultiplier)
		.def_readwrite("WeaponSwapTimeMultiplierBaseValue", &AWillowPawn::WeaponSwapTimeMultiplierBaseValue)
		.def_readwrite("WeaponSwapTimeMultiplierModifierStack", &AWillowPawn::WeaponSwapTimeMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("bReloading", &AWillowPawn::bReloading)
		.def_readwrite("ItemPoolList", &AWillowPawn::ItemPoolList, py::return_value_policy::reference)
		.def_readwrite("Trackers", &AWillowPawn::Trackers, py::return_value_policy::reference)
		.def_readwrite("AimAtActor", &AWillowPawn::AimAtActor, py::return_value_policy::reference)
		.def_readwrite("AimAtVector", &AWillowPawn::AimAtVector, py::return_value_policy::reference)
		.def_readwrite("TakeHitTime", &AWillowPawn::TakeHitTime)
		.def_readwrite("MaxFootstepEffectDistance", &AWillowPawn::MaxFootstepEffectDistance)
		.def_readwrite("LastPainSoundTime", &AWillowPawn::LastPainSoundTime)
		.def_readwrite("LastPainSoundLength", &AWillowPawn::LastPainSoundLength)
		.def_readwrite("NextDotResponseTime", &AWillowPawn::NextDotResponseTime)
		.def_readwrite("SummedPain", &AWillowPawn::SummedPain)
		.def_readwrite("ArmBoneBlend", &AWillowPawn::ArmBoneBlend, py::return_value_policy::reference)
		.def_readwrite("LeftHandIK", &AWillowPawn::LeftHandIK, py::return_value_policy::reference)
		.def_readwrite("LeftHandIKHolds", &AWillowPawn::LeftHandIKHolds, py::return_value_policy::reference)
		.def_readwrite("MatineeInterpGroup", &AWillowPawn::MatineeInterpGroup, py::return_value_policy::reference)
		.def_readwrite("LookAtTarget", &AWillowPawn::LookAtTarget, py::return_value_policy::reference)
		.def_readwrite("LookAtOffset", &AWillowPawn::LookAtOffset, py::return_value_policy::reference)
		.def_readwrite("LookAtSpeedOverride", &AWillowPawn::LookAtSpeedOverride)
		.def_readwrite("AimOffset", &AWillowPawn::AimOffset, py::return_value_policy::reference)
		.def_readwrite("HeadLookAt", &AWillowPawn::HeadLookAt, py::return_value_policy::reference)
		.def_readwrite("LastAnimSetsCount", &AWillowPawn::LastAnimSetsCount)
		.def_readwrite("WeaponAnimSets", &AWillowPawn::WeaponAnimSets, py::return_value_policy::reference)
		.def_readwrite("DesiredMeshYawOffset", &AWillowPawn::DesiredMeshYawOffset)
		.def_readwrite("MeshYawOffset", &AWillowPawn::MeshYawOffset)
		.def_readwrite("LeapGravityScale", &AWillowPawn::LeapGravityScale)
		.def_readwrite("RejuvenateInteraction", &AWillowPawn::RejuvenateInteraction, py::return_value_policy::reference)
		.def_readwrite("SavedInjuredModifiers", &AWillowPawn::SavedInjuredModifiers, py::return_value_policy::reference)
		.def_readwrite("InjuredInteractionProxy", &AWillowPawn::InjuredInteractionProxy, py::return_value_policy::reference)
		.def_readwrite("flInjuredTargetedTime", &AWillowPawn::flInjuredTargetedTime)
		.def_readwrite("InjuredTargetedDurationMultiplier", &AWillowPawn::InjuredTargetedDurationMultiplier)
		.def_readwrite("TimeToBeRevivedMultiplier", &AWillowPawn::TimeToBeRevivedMultiplier)
		.def_readwrite("TimeToBeRevivedMultiplierBaseValue", &AWillowPawn::TimeToBeRevivedMultiplierBaseValue)
		.def_readwrite("TimeToBeRevivedMultiplierModifierStack", &AWillowPawn::TimeToBeRevivedMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("TotalBleedoutTime", &AWillowPawn::TotalBleedoutTime)
		.def_readwrite("SuccessiveBleedoutTimePenalty", &AWillowPawn::SuccessiveBleedoutTimePenalty)
		.def_readwrite("InjuredBaseDelay", &AWillowPawn::InjuredBaseDelay)
		.def_readwrite("InjuredScreenFadeParticleTag", &AWillowPawn::InjuredScreenFadeParticleTag, py::return_value_policy::reference)
		.def_readwrite("InjuredScreenFadeScreenParticleModifiers", &AWillowPawn::InjuredScreenFadeScreenParticleModifiers, py::return_value_policy::reference)
		.def_readwrite("InjuredScreenFadeMaterialInterface", &AWillowPawn::InjuredScreenFadeMaterialInterface, py::return_value_policy::reference)
		.def_readwrite("InjuredScreenFadeMatParamName", &AWillowPawn::InjuredScreenFadeMatParamName, py::return_value_policy::reference)
		.def_readwrite("ReviveTime", &AWillowPawn::ReviveTime)
		.def_readwrite("SavedPostProcessDurationMultiplier", &AWillowPawn::SavedPostProcessDurationMultiplier)
		.def_readwrite("Reviver", &AWillowPawn::Reviver, py::return_value_policy::reference)
		.def_readwrite("InjuredBonusDamageScale", &AWillowPawn::InjuredBonusDamageScale)
		.def_readwrite("InjuredAnimLength", &AWillowPawn::InjuredAnimLength)
		.def_readwrite("MyHitRegionHelper", &AWillowPawn::MyHitRegionHelper, py::return_value_policy::reference)
		.def_readwrite("TargetPriority", &AWillowPawn::TargetPriority)
		.def_readwrite("TargetPriorityBaseValue", &AWillowPawn::TargetPriorityBaseValue)
		.def_readwrite("TargetPriorityModifierStack", &AWillowPawn::TargetPriorityModifierStack, py::return_value_policy::reference)
		.def_readwrite("ActorSpawnCost", &AWillowPawn::ActorSpawnCost)
		.def_readwrite("FlinchStartTime", &AWillowPawn::FlinchStartTime)
		.def_readwrite("StatusEffectComp", &AWillowPawn::StatusEffectComp, py::return_value_policy::reference)
		.def_readwrite("FullRadiusDamageSummary", &AWillowPawn::FullRadiusDamageSummary, py::return_value_policy::reference)
		.def_readwrite("InstanceDataState", &AWillowPawn::InstanceDataState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedInstanceDataState", &AWillowPawn::ReplicatedInstanceDataState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedCFX", &AWillowPawn::ReplicatedCFX, py::return_value_policy::reference)
		.def_readwrite("AttributeStartingValues", &AWillowPawn::AttributeStartingValues, py::return_value_policy::reference)
		.def_readwrite("DesignerAttributes", &AWillowPawn::DesignerAttributes, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBloodSplatter", &AWillowPawn::ReplicatedBloodSplatter, py::return_value_policy::reference)
		.def_readwrite("CommerceMarkup", &AWillowPawn::CommerceMarkup)
		.def_readwrite("MeleeState", &AWillowPawn::MeleeState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedGoreEffect", &AWillowPawn::ReplicatedGoreEffect, py::return_value_policy::reference)
		.def_readwrite("LightProjMgr", &AWillowPawn::LightProjMgr, py::return_value_policy::reference)
		.def_readwrite("OffHandLightProjMgr", &AWillowPawn::OffHandLightProjMgr, py::return_value_policy::reference)
		.def_readwrite("ExtraImpact_FirstShot", &AWillowPawn::ExtraImpact_FirstShot, py::return_value_policy::reference)
		.def_readwrite("ExtraImpact_LastShot", &AWillowPawn::ExtraImpact_LastShot, py::return_value_policy::reference)
		.def_readwrite("OnGround", &AWillowPawn::OnGround)
		.def_readwrite("CurrentPawnSpeed", &AWillowPawn::CurrentPawnSpeed)
		.def_readwrite("VelocityDotProduct", &AWillowPawn::VelocityDotProduct)
		.def_readwrite("AccelerationDotProduct", &AWillowPawn::AccelerationDotProduct)
		.def_readwrite("DeathRagDollMomentum", &AWillowPawn::DeathRagDollMomentum, py::return_value_policy::reference)
		.def_readwrite("DeathHitBoneName", &AWillowPawn::DeathHitBoneName, py::return_value_policy::reference)
		.def_readwrite("RD_NextSlideTime", &AWillowPawn::RD_NextSlideTime)
		.def_readwrite("RD_NextImpactTime", &AWillowPawn::RD_NextImpactTime)
		.def_readwrite("RD_NextImpactAkEventTime", &AWillowPawn::RD_NextImpactAkEventTime)
		.def_readwrite("SprintFootstepCount", &AWillowPawn::SprintFootstepCount)
		.def_readwrite("StrideFootstepCount", &AWillowPawn::StrideFootstepCount)
		.def_readwrite("MyActionSkill", &AWillowPawn::MyActionSkill, py::return_value_policy::reference)
		.def_readwrite("CurrentActionSkillActiveAbilityCount", &AWillowPawn::CurrentActionSkillActiveAbilityCount)
		.def_readwrite("NextActionSkillActiveAbilityTime", &AWillowPawn::NextActionSkillActiveAbilityTime)
		.def_readwrite("CurrentActionSkillCooldownAbilityCount", &AWillowPawn::CurrentActionSkillCooldownAbilityCount)
		.def_readwrite("NextActionSkillCooldownAbilityTime", &AWillowPawn::NextActionSkillCooldownAbilityTime)
		.def_readwrite("MeleeWeaponMesh", &AWillowPawn::MeleeWeaponMesh, py::return_value_policy::reference)
		.def_readwrite("HitRegionHealthScaleAttribute", &AWillowPawn::HitRegionHealthScaleAttribute)
		.def_readwrite("HitRegionHealthScaleAttributeBaseValue", &AWillowPawn::HitRegionHealthScaleAttributeBaseValue)
		.def_readwrite("HitRegionHealthScaleAttributeModifierStack", &AWillowPawn::HitRegionHealthScaleAttributeModifierStack, py::return_value_policy::reference)
		.def_readwrite("RevivalHealthMultiplier", &AWillowPawn::RevivalHealthMultiplier)
		.def_readwrite("RevivalHealthMultiplierBaseValue", &AWillowPawn::RevivalHealthMultiplierBaseValue)
		.def_readwrite("RevivalHealthMultiplierModifierStack", &AWillowPawn::RevivalHealthMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("ForcedShotZMomentum", &AWillowPawn::ForcedShotZMomentum)
		.def_readwrite("ForcedShotZMomentumBaseValue", &AWillowPawn::ForcedShotZMomentumBaseValue)
		.def_readwrite("ForcedShotZMomentumModifierStack", &AWillowPawn::ForcedShotZMomentumModifierStack, py::return_value_policy::reference)
		.def_readwrite("SecondsBeforeConsideringRagdollRemoval", &AWillowPawn::SecondsBeforeConsideringRagdollRemoval)
		.def_readwrite("SecondsBeforeVisibleRagdollRemoval", &AWillowPawn::SecondsBeforeVisibleRagdollRemoval)
		.def_readwrite("SecondsBetweenRagdollRemovalAttempts", &AWillowPawn::SecondsBetweenRagdollRemovalAttempts)
		.def_readwrite("SecondsBeforePhysicsShutsDown", &AWillowPawn::SecondsBeforePhysicsShutsDown)
		.def_readwrite("RBForceSleepTime", &AWillowPawn::RBForceSleepTime)
		.def_readwrite("MatScalarFadeInfo", &AWillowPawn::MatScalarFadeInfo, py::return_value_policy::reference)
		.def_readwrite("MatScalarFadeStartTime", &AWillowPawn::MatScalarFadeStartTime)
		.def_readwrite("MatScalarFadeCurValue", &AWillowPawn::MatScalarFadeCurValue)
		.def_readwrite("MatScalarLastTick", &AWillowPawn::MatScalarLastTick)
		.def_readwrite("MatScalarTickRate", &AWillowPawn::MatScalarTickRate)
		.def_readwrite("ShieldEffectCount", &AWillowPawn::ShieldEffectCount)
		.def_readwrite("BloodEffectCount", &AWillowPawn::BloodEffectCount)
		.def_readwrite("ImpactEffectTimestamp", &AWillowPawn::ImpactEffectTimestamp)
		.def_readwrite("NumSuccessiveInjuries", &AWillowPawn::NumSuccessiveInjuries)
		.def_readwrite("NumSuccessiveInjuriesBaseValue", &AWillowPawn::NumSuccessiveInjuriesBaseValue)
		.def_readwrite("NumSuccessiveInjuriesModifierStack", &AWillowPawn::NumSuccessiveInjuriesModifierStack, py::return_value_policy::reference)
		.def_readwrite("LastInjuryTime", &AWillowPawn::LastInjuryTime)
		.def_readwrite("MostRecentShieldDamageTaken", &AWillowPawn::MostRecentShieldDamageTaken)
		.def_readwrite("TargetPatsy", &AWillowPawn::TargetPatsy, py::return_value_policy::reference)
		.def_readwrite("NumAICurrentlyTargeting", &AWillowPawn::NumAICurrentlyTargeting)
		.def_readwrite("InterpRotTime", &AWillowPawn::InterpRotTime)
		.def_readwrite("InterpRotDiff", &AWillowPawn::InterpRotDiff, py::return_value_policy::reference)
		.def_readwrite("InterpRotElapsedTime", &AWillowPawn::InterpRotElapsedTime)
		.def_readwrite("InterpContRotTime", &AWillowPawn::InterpContRotTime)
		.def_readwrite("InterpContRotDiff", &AWillowPawn::InterpContRotDiff, py::return_value_policy::reference)
		.def_readwrite("InterpContRotElapsedTime", &AWillowPawn::InterpContRotElapsedTime)
		.def_readwrite("InterpLocTime", &AWillowPawn::InterpLocTime)
		.def_readwrite("InterpLocDiff", &AWillowPawn::InterpLocDiff, py::return_value_policy::reference)
		.def_readwrite("InterpLocElapsedTime", &AWillowPawn::InterpLocElapsedTime)
		.def_readwrite("InterpRelRotTime", &AWillowPawn::InterpRelRotTime)
		.def_readwrite("InterpRelRotDiff", &AWillowPawn::InterpRelRotDiff, py::return_value_policy::reference)
		.def_readwrite("InterpRelRotElapsedTime", &AWillowPawn::InterpRelRotElapsedTime)
		.def_readwrite("InterpRelRotStart", &AWillowPawn::InterpRelRotStart, py::return_value_policy::reference)
		.def_readwrite("InterpRelRotGoal", &AWillowPawn::InterpRelRotGoal, py::return_value_policy::reference)
		.def_readwrite("InterpRelLocTime", &AWillowPawn::InterpRelLocTime)
		.def_readwrite("InterpRelLocDiff", &AWillowPawn::InterpRelLocDiff, py::return_value_policy::reference)
		.def_readwrite("InterpRelLocElapsedTime", &AWillowPawn::InterpRelLocElapsedTime)
		.def_readwrite("MissionObjectiveToUpdateOnDeath", &AWillowPawn::MissionObjectiveToUpdateOnDeath, py::return_value_policy::reference)
		.def_readwrite("ConsumerHandle", &AWillowPawn::ConsumerHandle, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorConsumerState", &AWillowPawn::ReplicatedBehaviorConsumerState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorEvent", &AWillowPawn::ReplicatedBehaviorEvent, py::return_value_policy::reference)
		.def_readwrite("NumReplicatedNouns", &AWillowPawn::NumReplicatedNouns)
		.def_readwrite("NounState", &AWillowPawn::NounState, py::return_value_policy::reference)
		.def_readwrite("DistToNavMesh", &AWillowPawn::DistToNavMesh)
		.def_readwrite("VertDistToNavMesh", &AWillowPawn::VertDistToNavMesh)
		.def_readwrite("LastNavMeshCheck", &AWillowPawn::LastNavMeshCheck)
		.def_readwrite("NavMeshCheckRate", &AWillowPawn::NavMeshCheckRate)
		.def_readwrite("LastCheckNavMeshLocation", &AWillowPawn::LastCheckNavMeshLocation, py::return_value_policy::reference)
		.def_readwrite("NearestPositionOnNavMesh", &AWillowPawn::NearestPositionOnNavMesh, py::return_value_policy::reference)
		.def_readwrite("AvoidanceSpeedScale", &AWillowPawn::AvoidanceSpeedScale)
		.def_readwrite("NextCringeTime", &AWillowPawn::NextCringeTime)
		.def_readwrite("CurrentCringe", &AWillowPawn::CurrentCringe, py::return_value_policy::reference)
		.def_readwrite("LastTurnTime", &AWillowPawn::LastTurnTime)
		.def_readwrite("CurrentTurnTime", &AWillowPawn::CurrentTurnTime)
		.def_readwrite("TurnGoalYaw", &AWillowPawn::TurnGoalYaw)
		.def_readwrite("RBCollisionListeners", &AWillowPawn::RBCollisionListeners, py::return_value_policy::reference)
		.def_readwrite("RBCollisionListenersToRemove", &AWillowPawn::RBCollisionListenersToRemove, py::return_value_policy::reference)
		.def_readwrite("CharmedChild", &AWillowPawn::CharmedChild, py::return_value_policy::reference)
		.def_readwrite("CharmedParent", &AWillowPawn::CharmedParent, py::return_value_policy::reference)
		.def_readwrite("SimpleAnimState", &AWillowPawn::SimpleAnimState)
		.def_readwrite("RepSimpleAnimState", &AWillowPawn::RepSimpleAnimState)
		.def_readwrite("SimpleAnimInfo", &AWillowPawn::SimpleAnimInfo, py::return_value_policy::reference)
		.def_readwrite("CurrentStance", &AWillowPawn::CurrentStance, py::return_value_policy::reference)
		.def_readwrite("OverrideStance", &AWillowPawn::OverrideStance, py::return_value_policy::reference)
		.def_readwrite("CurrentNameTag", &AWillowPawn::CurrentNameTag, py::return_value_policy::reference)
		.def_readwrite("BarrelSourceTimerEnd", &AWillowPawn::BarrelSourceTimerEnd)
		.def_readwrite("PlantSourceTimerEnd", &AWillowPawn::PlantSourceTimerEnd)
		.def_readwrite("CurrentBreathingLoopIndex", &AWillowPawn::CurrentBreathingLoopIndex)
		.def_readwrite("BreathingLoopPlayingInfo", &AWillowPawn::BreathingLoopPlayingInfo, py::return_value_policy::reference)
		.def_readwrite("GameStage", &AWillowPawn::GameStage)
		.def_readwrite("CurrentEnvironmentTag", &AWillowPawn::CurrentEnvironmentTag, py::return_value_policy::reference)
		.def_readwrite("CurrentAnimEnvironmentTag", &AWillowPawn::CurrentAnimEnvironmentTag, py::return_value_policy::reference)
		.def_readwrite("OverrideNavSize", &AWillowPawn::OverrideNavSize)
		.def_readwrite("OverrideNavHeight", &AWillowPawn::OverrideNavHeight)
		.def_readwrite("MinStuckTime", &AWillowPawn::MinStuckTime)
		.def_readwrite("MaxStuckSpeed", &AWillowPawn::MaxStuckSpeed)
		.def_readwrite("StartStuckTime", &AWillowPawn::StartStuckTime)
		.def_readwrite("StartStuckLoc", &AWillowPawn::StartStuckLoc, py::return_value_policy::reference)
		.def_readwrite("EmoteAnim", &AWillowPawn::EmoteAnim, py::return_value_policy::reference)
		.def_readwrite("ReplicatedEmoteAnim", &AWillowPawn::ReplicatedEmoteAnim, py::return_value_policy::reference)
		.def_readwrite("NextPlayerEventTime", &AWillowPawn::NextPlayerEventTime)
		.def_readwrite("RepMeshScale", &AWillowPawn::RepMeshScale)
		.def("GetFallingDamageScale", &AWillowPawn::GetFallingDamageScale)
		.def("TryBlink", &AWillowPawn::TryBlink)
		.def("ServerPostPlayerEvent", &AWillowPawn::ServerPostPlayerEvent)
		.def("eventPostPlayerEvent", &AWillowPawn::eventPostPlayerEvent)
		.def("ForcePostPlayerEvent", &AWillowPawn::ForcePostPlayerEvent)
		.def("PlayPostEnvironmentTransitionAnimation", &AWillowPawn::PlayPostEnvironmentTransitionAnimation)
		.def("PlayPreEnvironmentTransitionAnimation", &AWillowPawn::PlayPreEnvironmentTransitionAnimation)
		.def("RequiresEnvironmentTransitionAnimation", &AWillowPawn::RequiresEnvironmentTransitionAnimation)
		.def("EnvironmentTransitionAnimFinished", &AWillowPawn::EnvironmentTransitionAnimFinished)
		.def("SetEnvironmentTag", &AWillowPawn::SetEnvironmentTag)
		.def("RemoveEnvironmentTag", &AWillowPawn::RemoveEnvironmentTag)
		.def("AddEnvironmentTag", &AWillowPawn::AddEnvironmentTag)
		.def("eventGetMapDisplayName", &AWillowPawn::eventGetMapDisplayName, py::return_value_policy::reference)
		.def("eventGetMapDisplayHeader", &AWillowPawn::eventGetMapDisplayHeader, py::return_value_policy::reference)
		.def("PlayExtraImpactEffects", &AWillowPawn::PlayExtraImpactEffects)
		.def("SetExtraImpactEffect", &AWillowPawn::SetExtraImpactEffect)
		.def("ForceDownState", &AWillowPawn::ForceDownState)
		.def("SetRevivePct", &AWillowPawn::SetRevivePct)
		.def("GetRevivePct", &AWillowPawn::GetRevivePct)
		.def("MovementTransitionNodeIsIdle", &AWillowPawn::MovementTransitionNodeIsIdle)
		.def("PrismNodeIsActive", &AWillowPawn::PrismNodeIsActive)
		.def("GetDefaultRootMotionRotationMode", &AWillowPawn::GetDefaultRootMotionRotationMode)
		.def("GetDefaultRootMotionMode", &AWillowPawn::GetDefaultRootMotionMode)
		.def("FindMatchingHolsteredWeapon", &AWillowPawn::FindMatchingHolsteredWeapon, py::return_value_policy::reference)
		.def("GetLikenessInventory", &AWillowPawn::GetLikenessInventory, py::return_value_policy::reference)
		.def("ShouldRefreshLikenessOf", &AWillowPawn::ShouldRefreshLikenessOf)
		.def("AssumeLikenessOf", &AWillowPawn::AssumeLikenessOf)
		.def("eventClientShieldTriggered", &AWillowPawn::eventClientShieldTriggered)
		.def("eventShieldTriggered", &AWillowPawn::eventShieldTriggered)
		.def("IsBeingHealed", &AWillowPawn::IsBeingHealed)
		.def("SetBeingHealed", &AWillowPawn::SetBeingHealed)
		.def("CanPlayEmoteAnim", &AWillowPawn::CanPlayEmoteAnim)
		.def("SetEmoteAnim", &AWillowPawn::SetEmoteAnim)
		.def("EmoteAnimTimer", &AWillowPawn::EmoteAnimTimer)
		.def("ReleaseLeftHandIK", &AWillowPawn::ReleaseLeftHandIK)
		.def("HoldLeftHandIK", &AWillowPawn::HoldLeftHandIK)
		.def("CheckLeftHandIK", &AWillowPawn::CheckLeftHandIK)
		.def("GetBulletReflectedOffSelfDamageScale", &AWillowPawn::GetBulletReflectedOffSelfDamageScale)
		.def("GetBulletReflectedOffEnemyDamageScale", &AWillowPawn::GetBulletReflectedOffEnemyDamageScale)
		.def("GetBulletReflectedOffSelfDamageTakenScale", &AWillowPawn::GetBulletReflectedOffSelfDamageTakenScale)
		.def("GetEnemyReflectionChance", &AWillowPawn::GetEnemyReflectionChance)
		.def("GetSelfReflectionChance", &AWillowPawn::GetSelfReflectionChance)
		.def("GetObstacleInfo", &AWillowPawn::GetObstacleInfo)
		.def("GetObstacleActor", &AWillowPawn::GetObstacleActor, py::return_value_policy::reference)
		.def("GetMagnetData", &AWillowPawn::GetMagnetData)
		.def("SetObstacleVelocity", &AWillowPawn::SetObstacleVelocity)
		.def("CanAvoidObstacle", &AWillowPawn::CanAvoidObstacle)
		.def("CanAvoidObstacles", &AWillowPawn::CanAvoidObstacles)
		.def("SetObstacleActive", &AWillowPawn::SetObstacleActive)
		.def("IsObstacleActive", &AWillowPawn::IsObstacleActive)
		.def("GetParent", &AWillowPawn::GetParent, py::return_value_policy::reference)
		.def("Uncharm", &AWillowPawn::Uncharm)
		.def("Charm", &AWillowPawn::Charm)
		.def("IsCharmed", &AWillowPawn::IsCharmed)
		.def("GetFireIntervalChanceModifier", &AWillowPawn::GetFireIntervalChanceModifier)
		.def("GetStatusEffectBaseChanceModifier", &AWillowPawn::GetStatusEffectBaseChanceModifier)
		.def("GetStatusEffectChanceModifier", &AWillowPawn::GetStatusEffectChanceModifier)
		.def("GetStatusEffectBaseDamage", &AWillowPawn::GetStatusEffectBaseDamage)
		.def("eventNotifyRBCollisionListeners", &AWillowPawn::eventNotifyRBCollisionListeners)
		.def("FinishRemovingRBCollisionListeners", &AWillowPawn::FinishRemovingRBCollisionListeners)
		.def("RemoveRBCollisionListener", &AWillowPawn::RemoveRBCollisionListener)
		.def("AddRBCollisionListener", &AWillowPawn::AddRBCollisionListener)
		.def("GetPetActors", &AWillowPawn::GetPetActors)
		.def("ClearBodyCompositionInstance", &AWillowPawn::ClearBodyCompositionInstance)
		.def("GetBodyInfoProvider", &AWillowPawn::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("ApplyPreviewBodyComposition", &AWillowPawn::ApplyPreviewBodyComposition)
		.def("ChangeInstanceDataSwitch", &AWillowPawn::ChangeInstanceDataSwitch)
		.def("PostInitBodyComposition", &AWillowPawn::PostInitBodyComposition)
		.def("PreRemoveBodyComposition", &AWillowPawn::PreRemoveBodyComposition)
		.def("NotifyUserCouldNotAffordAttemptedUse", &AWillowPawn::NotifyUserCouldNotAffordAttemptedUse)
		.def("SetInteractionIcon", &AWillowPawn::SetInteractionIcon)
		.def("UseObject", &AWillowPawn::UseObject)
		.def("ScrapeStances", &AWillowPawn::ScrapeStances)
		.def("GetDefaultStance", &AWillowPawn::GetDefaultStance)
		.def("IsDefaultStance", &AWillowPawn::IsDefaultStance)
		.def("ClientStanceUpdated", &AWillowPawn::ClientStanceUpdated)
		.def("SetStance", &AWillowPawn::SetStance)
		.def("SetDefaultStance", &AWillowPawn::SetDefaultStance)
		.def("ClearStance", &AWillowPawn::ClearStance)
		.def("GetStanceBody", &AWillowPawn::GetStanceBody, py::return_value_policy::reference)
		.def("GetStance", &AWillowPawn::GetStance, py::return_value_policy::reference)
		.def("TryToTurn", &AWillowPawn::TryToTurn)
		.def("GetCurrentTurnDefinition", &AWillowPawn::GetCurrentTurnDefinition, py::return_value_policy::reference)
		.def("CanTurn", &AWillowPawn::CanTurn)
		.def("DoneTurning", &AWillowPawn::DoneTurning)
		.def("GetHeadLookMinDot", &AWillowPawn::GetHeadLookMinDot)
		.def("UseRootOnlyYawRotation", &AWillowPawn::UseRootOnlyYawRotation)
		.def("GetAimDirection", &AWillowPawn::GetAimDirection, py::return_value_policy::reference)
		.def("GetPivotPoint", &AWillowPawn::GetPivotPoint, py::return_value_policy::reference)
		.def("CanUseAimOffsets", &AWillowPawn::CanUseAimOffsets)
		.def("AdjustRotation", &AWillowPawn::AdjustRotation)
		.def("GetCringeBody", &AWillowPawn::GetCringeBody, py::return_value_policy::reference)
		.def("DoneCringing", &AWillowPawn::DoneCringing)
		.def("StopCringe", &AWillowPawn::StopCringe)
		.def("StartCringe", &AWillowPawn::StartCringe)
		.def("IsCringing", &AWillowPawn::IsCringing)
		.def("GetNearestPositionOnNavMesh", &AWillowPawn::GetNearestPositionOnNavMesh, py::return_value_policy::reference)
		.def("GetFlyNavMeshCheckDist", &AWillowPawn::GetFlyNavMeshCheckDist)
		.def("GetVertDistToNavMesh", &AWillowPawn::GetVertDistToNavMesh)
		.def("GetDistToNavMesh", &AWillowPawn::GetDistToNavMesh)
		.def("IsAboveNavMesh", &AWillowPawn::IsAboveNavMesh)
		.def("CheckNavMeshDist", &AWillowPawn::CheckNavMeshDist)
		.def("CloakForcedOff", &AWillowPawn::CloakForcedOff)
		.def("CloakForcedOn", &AWillowPawn::CloakForcedOn)
		.def("CloakForced", &AWillowPawn::CloakForced)
		.def("StaticSetCanCloak", &AWillowPawn::StaticSetCanCloak)
		.def("StaticCanCloak", &AWillowPawn::StaticCanCloak)
		.def("eventSpawnCloakParticle", &AWillowPawn::eventSpawnCloakParticle)
		.def("ForceCloak", &AWillowPawn::ForceCloak)
		.def("ShouldCloak", &AWillowPawn::ShouldCloak)
		.def("CheckReplicatedCloak", &AWillowPawn::CheckReplicatedCloak)
		.def("IsCloaked", &AWillowPawn::IsCloaked)
		.def("CanCloak", &AWillowPawn::CanCloak)
		.def("Uncloak", &AWillowPawn::Uncloak)
		.def("Cloak", &AWillowPawn::Cloak)
		.def("GetDialogGlobals", &AWillowPawn::GetDialogGlobals, py::return_value_policy::reference)
		.def("SetDialogNameTag", &AWillowPawn::SetDialogNameTag)
		.def("GetDialogGroups", &AWillowPawn::GetDialogGroups)
		.def("GetDialogNameTag", &AWillowPawn::GetDialogNameTag, py::return_value_policy::reference)
		.def("GetOutTheWay", &AWillowPawn::GetOutTheWay)
		.def("eventStuckOnPawn", &AWillowPawn::eventStuckOnPawn)
		.def("OnInterpPawn", &AWillowPawn::OnInterpPawn)
		.def("InterpRelativeRotation", &AWillowPawn::InterpRelativeRotation)
		.def("InterpRelativeLocation", &AWillowPawn::InterpRelativeLocation)
		.def("InterpControllerRotation", &AWillowPawn::InterpControllerRotation)
		.def("InterpRotation", &AWillowPawn::InterpRotation)
		.def("InterpLocation", &AWillowPawn::InterpLocation)
		.def("NotifyActionSkillWeaponsRestricted", &AWillowPawn::NotifyActionSkillWeaponsRestricted)
		.def("NotifyActionSkillFakePause", &AWillowPawn::NotifyActionSkillFakePause)
		.def("NotifyActionSkillWeaponSwitched", &AWillowPawn::NotifyActionSkillWeaponSwitched)
		.def("NotifyActionSkillOfKilledEnemy", &AWillowPawn::NotifyActionSkillOfKilledEnemy)
		.def("ToggleActionSkillDebug", &AWillowPawn::ToggleActionSkillDebug)
		.def("NotifyHUDOfEnableActionSkill", &AWillowPawn::NotifyHUDOfEnableActionSkill)
		.def("EnableActionSkill", &AWillowPawn::EnableActionSkill)
		.def("ClientEndActionSkill", &AWillowPawn::ClientEndActionSkill)
		.def("EndActionSkill", &AWillowPawn::EndActionSkill)
		.def("ActionSkillEnded", &AWillowPawn::ActionSkillEnded)
		.def("ActionSkillStarted", &AWillowPawn::ActionSkillStarted)
		.def("IsActionSkillRunning", &AWillowPawn::IsActionSkillRunning)
		.def("SetActionSkillSoundMode", &AWillowPawn::SetActionSkillSoundMode)
		.def("SetDefaultSoundMode", &AWillowPawn::SetDefaultSoundMode)
		.def("HitByVehicle", &AWillowPawn::HitByVehicle)
		.def("ClientSetSwitchingSeats", &AWillowPawn::ClientSetSwitchingSeats)
		.def("SetSwitchingSeats", &AWillowPawn::SetSwitchingSeats)
		.def("Behavior_Killed", &AWillowPawn::Behavior_Killed)
		.def("CrushedByActor", &AWillowPawn::CrushedByActor)
		.def("eventEncroachedBy", &AWillowPawn::eventEncroachedBy)
		.def("eventStartReplicatedMaterialScalarFade", &AWillowPawn::eventStartReplicatedMaterialScalarFade)
		.def("Behavior_UseMaterialScalarFadeForGoreDeath", &AWillowPawn::Behavior_UseMaterialScalarFadeForGoreDeath)
		.def("Behavior_MaterialScalarFade", &AWillowPawn::Behavior_MaterialScalarFade)
		.def("Behavior_RegisterTargetable", &AWillowPawn::Behavior_RegisterTargetable)
		.def("GetResetCost", &AWillowPawn::GetResetCost)
		.def("eventResetInventory", &AWillowPawn::eventResetInventory)
		.def("GetTransactionStatus", &AWillowPawn::GetTransactionStatus)
		.def("PlayerBuyBackItem", &AWillowPawn::PlayerBuyBackItem)
		.def("PlayerBuyItem", &AWillowPawn::PlayerBuyItem)
		.def("PlayerSellItem", &AWillowPawn::PlayerSellItem)
		.def("GetFeaturedItem", &AWillowPawn::GetFeaturedItem, py::return_value_policy::reference)
		.def("GetBuyBackList", &AWillowPawn::GetBuyBackList)
		.def("GetInventoryList", &AWillowPawn::GetInventoryList)
		.def("GetShopType", &AWillowPawn::GetShopType)
		.def("BehaviorAlias_GetLookupDefinition", &AWillowPawn::BehaviorAlias_GetLookupDefinition, py::return_value_policy::reference)
		.def("ServerClearStatusEffects", &AWillowPawn::ServerClearStatusEffects)
		.def("Behavior_ClearStatusEffects", &AWillowPawn::Behavior_ClearStatusEffects)
		.def("GetTargetableLocation", &AWillowPawn::GetTargetableLocation, py::return_value_policy::reference)
		.def("RemoveSoldInventory", &AWillowPawn::RemoveSoldInventory)
		.def("GetWeaponList", &AWillowPawn::GetWeaponList)
		.def("GetItemList", &AWillowPawn::GetItemList)
		.def("SetHandIKTarget", &AWillowPawn::SetHandIKTarget)
		.def("EnableHandIK", &AWillowPawn::EnableHandIK)
		.def("FindHandIKSelControl", &AWillowPawn::FindHandIKSelControl, py::return_value_policy::reference)
		.def("DetachMeleeWeaponMesh", &AWillowPawn::DetachMeleeWeaponMesh)
		.def("AttachMeleeWeaponMesh", &AWillowPawn::AttachMeleeWeaponMesh)
		.def("MeleeMeshPreRemoveNotify", &AWillowPawn::MeleeMeshPreRemoveNotify)
		.def("MeleeMeshPostInitNotify", &AWillowPawn::MeleeMeshPostInitNotify)
		.def("Behavior_Fire", &AWillowPawn::Behavior_Fire)
		.def("CanReceiveStatusEffects", &AWillowPawn::CanReceiveStatusEffects)
		.def("ReactToPrimaryStatusEffect", &AWillowPawn::ReactToPrimaryStatusEffect)
		.def("GetBoundingSphereRadius", &AWillowPawn::GetBoundingSphereRadius)
		.def("GetAttributeContextSource", &AWillowPawn::GetAttributeContextSource, py::return_value_policy::reference)
		.def("AttachEmitter", &AWillowPawn::AttachEmitter)
		.def("GetDefaultStatusEffectsParticleSystemTemplate", &AWillowPawn::GetDefaultStatusEffectsParticleSystemTemplate, py::return_value_policy::reference)
		.def("GetDefaultStatusEffectSockets", &AWillowPawn::GetDefaultStatusEffectSockets, py::return_value_policy::reference)
		.def("GetStatusEffectsComponent", &AWillowPawn::GetStatusEffectsComponent, py::return_value_policy::reference)
		.def("GetAWillowAIPawn", &AWillowPawn::GetAWillowAIPawn, py::return_value_policy::reference)
		.def("GetAWillowPlayerPawn", &AWillowPawn::GetAWillowPlayerPawn, py::return_value_policy::reference)
		.def("GetAWillowPawn", &AWillowPawn::GetAWillowPawn, py::return_value_policy::reference)
		.def("GetLightProjMgrFor", &AWillowPawn::GetLightProjMgrFor, py::return_value_policy::reference)
		.def("ShouldIgnoreInstigatorVelocity", &AWillowPawn::ShouldIgnoreInstigatorVelocity)
		.def("HasActorAlreadyBeenHitByMelee", &AWillowPawn::HasActorAlreadyBeenHitByMelee)
		.def("AddActorToListOfHitActors", &AWillowPawn::AddActorToListOfHitActors)
		.def("EndMeleeOverTime", &AWillowPawn::EndMeleeOverTime)
		.def("BeginMeleeOverTime", &AWillowPawn::BeginMeleeOverTime)
		.def("GetMeleeAttackerMass", &AWillowPawn::GetMeleeAttackerMass)
		.def("GetMeleeTraceSourceLocationAndRotation", &AWillowPawn::GetMeleeTraceSourceLocationAndRotation)
		.def("GetMeleeInstigator", &AWillowPawn::GetMeleeInstigator, py::return_value_policy::reference)
		.def("GetMeleeTraceSourceActor", &AWillowPawn::GetMeleeTraceSourceActor, py::return_value_policy::reference)
		.def("eventGetFaceFXAsset", &AWillowPawn::eventGetFaceFXAsset, py::return_value_policy::reference)
		.def("GetAimRotation", &AWillowPawn::GetAimRotation, py::return_value_policy::reference)
		.def("GetSellingPriceForInventory", &AWillowPawn::GetSellingPriceForInventory)
		.def("GetCurrencyTypeInventoryIsSoldIn", &AWillowPawn::GetCurrencyTypeInventoryIsSoldIn)
		.def("UpdateShieldVars", &AWillowPawn::UpdateShieldVars)
		.def("SetPatsy", &AWillowPawn::SetPatsy)
		.def("GetPatsy", &AWillowPawn::GetPatsy, py::return_value_policy::reference)
		.def("HasShieldVar", &AWillowPawn::HasShieldVar)
		.def("HasHomingTargetComponents", &AWillowPawn::HasHomingTargetComponents)
		.def("IsValidHomingTarget", &AWillowPawn::IsValidHomingTarget)
		.def("GetTargetingModifier", &AWillowPawn::GetTargetingModifier)
		.def("DisplayParentInfo", &AWillowPawn::DisplayParentInfo)
		.def("GetAllBarInfo", &AWillowPawn::GetAllBarInfo)
		.def("GetMyBarInfo", &AWillowPawn::GetMyBarInfo)
		.def("GetUntouchImpact", &AWillowPawn::GetUntouchImpact, py::return_value_policy::reference)
		.def("GetTouchImpact", &AWillowPawn::GetTouchImpact, py::return_value_policy::reference)
		.def("CanSplash", &AWillowPawn::CanSplash)
		.def("eventTraceTouch", &AWillowPawn::eventTraceTouch)
		.def("GetReplicatedInstanceDataState", &AWillowPawn::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &AWillowPawn::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &AWillowPawn::DestroyOwnedInstanceData)
		.def("eventGetInstanceData", &AWillowPawn::eventGetInstanceData)
		.def("eventRemoveInstanceDataObject", &AWillowPawn::eventRemoveInstanceDataObject)
		.def("eventConditionalRemoveHitRegionBehaviors", &AWillowPawn::eventConditionalRemoveHitRegionBehaviors)
		.def("eventRemoveInstanceData", &AWillowPawn::eventRemoveInstanceData)
		.def("SetInstanceData", &AWillowPawn::SetInstanceData)
		.def("eventGetInstancedDesignerAttribute", &AWillowPawn::eventGetInstancedDesignerAttribute, py::return_value_policy::reference)
		.def("CreateDesignerAttribute", &AWillowPawn::CreateDesignerAttribute, py::return_value_policy::reference)
		.def("RunMostlyDeadBehaviors", &AWillowPawn::RunMostlyDeadBehaviors)
		.def("MostlyKilledBy", &AWillowPawn::MostlyKilledBy)
		.def("ClientSetInjuredBleedoutValues", &AWillowPawn::ClientSetInjuredBleedoutValues)
		.def("PassSecondWindReasonToLeviathan", &AWillowPawn::PassSecondWindReasonToLeviathan)
		.def("ClearSecondWindReason", &AWillowPawn::ClearSecondWindReason)
		.def("SetSecondWindReason", &AWillowPawn::SetSecondWindReason)
		.def("PreDeathAnimDone", &AWillowPawn::PreDeathAnimDone)
		.def("ShouldPlayPreDeathAnimation", &AWillowPawn::ShouldPlayPreDeathAnimation)
		.def("PlaySpecialMoveOverride", &AWillowPawn::PlaySpecialMoveOverride)
		.def("ShouldDelaySecondWind", &AWillowPawn::ShouldDelaySecondWind)
		.def("eventInjuredDeathAnimDone", &AWillowPawn::eventInjuredDeathAnimDone)
		.def("Behavior_GiveInjuredPlayerSecondWind", &AWillowPawn::Behavior_GiveInjuredPlayerSecondWind)
		.def("RevivePawnHealthAndShield", &AWillowPawn::RevivePawnHealthAndShield)
		.def("ClearEnemyTargetQueues", &AWillowPawn::ClearEnemyTargetQueues)
		.def("InjuredDeadInitRagdoll", &AWillowPawn::InjuredDeadInitRagdoll)
		.def("StartInjuredDeathSequence", &AWillowPawn::StartInjuredDeathSequence)
		.def("StartInjuredPreDeathSequence", &AWillowPawn::StartInjuredPreDeathSequence)
		.def("InjuredRespawn", &AWillowPawn::InjuredRespawn)
		.def("InjuredSuicide", &AWillowPawn::InjuredSuicide)
		.def("ServerInjuredSuicide", &AWillowPawn::ServerInjuredSuicide)
		.def("ClientStartFade", &AWillowPawn::ClientStartFade)
		.def("OnCameraFade", &AWillowPawn::OnCameraFade)
		.def("ClientOnRevived", &AWillowPawn::ClientOnRevived)
		.def("NotifyTeleported", &AWillowPawn::NotifyTeleported)
		.def("SetBeingRevived", &AWillowPawn::SetBeingRevived)
		.def("GetInjuredDefinition", &AWillowPawn::GetInjuredDefinition, py::return_value_policy::reference)
		.def("SetInjuredDeadState", &AWillowPawn::SetInjuredDeadState)
		.def("SetInjuredState", &AWillowPawn::SetInjuredState)
		.def("KilledEnemy", &AWillowPawn::KilledEnemy)
		.def("eventSwitchToSidearm", &AWillowPawn::eventSwitchToSidearm)
		.def("eventEndInjuredState", &AWillowPawn::eventEndInjuredState)
		.def("GoFromInjuredToMostlyDeadClient", &AWillowPawn::GoFromInjuredToMostlyDeadClient)
		.def("GoFromInjuredToMostlyDead", &AWillowPawn::GoFromInjuredToMostlyDead)
		.def("GoToInjuredAndTargetedClient", &AWillowPawn::GoToInjuredAndTargetedClient)
		.def("GoToInjuredAndTargeted", &AWillowPawn::GoToInjuredAndTargeted)
		.def("GoFromHealthToInjuredClient", &AWillowPawn::GoFromHealthToInjuredClient)
		.def("GoFromInjuredToHealthyClient", &AWillowPawn::GoFromInjuredToHealthyClient)
		.def("GoFromInjuredToHealthy", &AWillowPawn::GoFromInjuredToHealthy)
		.def("ClearPlayerInjuredState", &AWillowPawn::ClearPlayerInjuredState)
		.def("SetupPlayerInjuredState", &AWillowPawn::SetupPlayerInjuredState)
		.def("ResurrectAtLocation", &AWillowPawn::ResurrectAtLocation)
		.def("PlacePlayerInLevel", &AWillowPawn::PlacePlayerInLevel)
		.def("ResurrectPlayer", &AWillowPawn::ResurrectPlayer)
		.def("GetBestPlayerPlacementPoint", &AWillowPawn::GetBestPlayerPlacementPoint, py::return_value_policy::reference)
		.def("RejuvenateFromInjured", &AWillowPawn::RejuvenateFromInjured)
		.def("eventHandleHealthDepleted", &AWillowPawn::eventHandleHealthDepleted)
		.def("CausePlayerDeath", &AWillowPawn::CausePlayerDeath)
		.def("OutOfDuelBounds", &AWillowPawn::OutOfDuelBounds)
		.def("PlayInjured", &AWillowPawn::PlayInjured)
		.def("DestroyInjuredInteraction", &AWillowPawn::DestroyInjuredInteraction)
		.def("SetupInjuredInteraction", &AWillowPawn::SetupInjuredInteraction)
		.def("SetBaseEyeheight", &AWillowPawn::SetBaseEyeheight)
		.def("PreKilledBy", &AWillowPawn::PreKilledBy)
		.def("HeuristicPlayDeath", &AWillowPawn::HeuristicPlayDeath)
		.def("eventStopDriving", &AWillowPawn::eventStopDriving)
		.def("eventStartDriving", &AWillowPawn::eventStartDriving)
		.def("eventOnAnimEnd", &AWillowPawn::eventOnAnimEnd)
		.def("eventRootMotionModeChanged", &AWillowPawn::eventRootMotionModeChanged)
		.def("SetMovementPhysics", &AWillowPawn::SetMovementPhysics)
		.def("IsHardAttached", &AWillowPawn::IsHardAttached)
		.def("AttachActorTo", &AWillowPawn::AttachActorTo)
		.def("CheckPainSounds", &AWillowPawn::CheckPainSounds)
		.def("PlayPainSound", &AWillowPawn::PlayPainSound)
		.def("StealAmmo", &AWillowPawn::StealAmmo)
		.def("BigBoyTakeRadiusDamage", &AWillowPawn::BigBoyTakeRadiusDamage)
		.def("eventTakeRadiusDamageOnBones", &AWillowPawn::eventTakeRadiusDamageOnBones)
		.def("BigBoyTrace", &AWillowPawn::BigBoyTrace, py::return_value_policy::reference)
		.def("AddRadiusDamageSummary", &AWillowPawn::AddRadiusDamageSummary)
		.def("InitRadiusDamageSummary", &AWillowPawn::InitRadiusDamageSummary)
		.def("TakeRadiusDamage", &AWillowPawn::TakeRadiusDamage)
		.def("eventHealDamage", &AWillowPawn::eventHealDamage)
		.def("TookDamageFromFriendly", &AWillowPawn::TookDamageFromFriendly)
		.def("GetTransformedKillStat", &AWillowPawn::GetTransformedKillStat, py::return_value_policy::reference)
		.def("FireProjectileDamagedEvents", &AWillowPawn::FireProjectileDamagedEvents)
		.def("ProcessDamageTakenSkillEvents", &AWillowPawn::ProcessDamageTakenSkillEvents)
		.def("ProcessDamageDealtSkillEvents", &AWillowPawn::ProcessDamageDealtSkillEvents)
		.def("TookDamageFromEnemy", &AWillowPawn::TookDamageFromEnemy)
		.def("ModifyParentDamage", &AWillowPawn::ModifyParentDamage)
		.def("eventTakeDamage", &AWillowPawn::eventTakeDamage)
		.def("PreTestAnimation", &AWillowPawn::PreTestAnimation)
		.def("eventGetFaceFXAudioComponent", &AWillowPawn::eventGetFaceFXAudioComponent, py::return_value_policy::reference)
		.def("eventPlayActorFaceFXAnim", &AWillowPawn::eventPlayActorFaceFXAnim)
		.def("GetFaceFXMeshComponent", &AWillowPawn::GetFaceFXMeshComponent, py::return_value_policy::reference)
		.def("eventSetAudioCueOpenedByFaceFX", &AWillowPawn::eventSetAudioCueOpenedByFaceFX)
		.def("PlayFaceAnimation", &AWillowPawn::PlayFaceAnimation)
		.def("eventHitWall", &AWillowPawn::eventHitWall)
		.def("eventTouch", &AWillowPawn::eventTouch)
		.def("PlayFootImpactEffect", &AWillowPawn::PlayFootImpactEffect)
		.def("PlayWaterImpactEffects", &AWillowPawn::PlayWaterImpactEffects)
		.def("DoJump", &AWillowPawn::DoJump)
		.def("PlayLanded", &AWillowPawn::PlayLanded)
		.def("eventLanded", &AWillowPawn::eventLanded)
		.def("eventFinishAnimControl", &AWillowPawn::eventFinishAnimControl)
		.def("eventSetAnimPosition", &AWillowPawn::eventSetAnimPosition)
		.def("eventBeginAnimControl", &AWillowPawn::eventBeginAnimControl)
		.def("LastMatineeAnimFinished", &AWillowPawn::LastMatineeAnimFinished)
		.def("MAT_FinishAnimControl", &AWillowPawn::MAT_FinishAnimControl)
		.def("MAT_BeginAnimControl", &AWillowPawn::MAT_BeginAnimControl)
		.def("GetFootstepBone", &AWillowPawn::GetFootstepBone, py::return_value_policy::reference)
		.def("TakeFallingDamage", &AWillowPawn::TakeFallingDamage)
		.def("AllowFootstepEffects", &AWillowPawn::AllowFootstepEffects)
		.def("PlayFootStepSound", &AWillowPawn::PlayFootStepSound)
		.def("CanReachOutToTarget", &AWillowPawn::CanReachOutToTarget)
		.def("UpdateWeaponOnPossess", &AWillowPawn::UpdateWeaponOnPossess)
		.def("PossessedBy", &AWillowPawn::PossessedBy)
		.def("ApplyAttributeStartingValues", &AWillowPawn::ApplyAttributeStartingValues)
		.def("GetAttributeStartingValuesFromCharacterClass", &AWillowPawn::GetAttributeStartingValuesFromCharacterClass)
		.def("AddPoolItems", &AWillowPawn::AddPoolItems)
		.def("eventStartCrouch", &AWillowPawn::eventStartCrouch)
		.def("eventEndCrouch", &AWillowPawn::eventEndCrouch)
		.def("ShouldCrouch", &AWillowPawn::ShouldCrouch)
		.def("TurnOff", &AWillowPawn::TurnOff)
		.def("WeaponBob", &AWillowPawn::WeaponBob, py::return_value_policy::reference)
		.def("PoweredUp", &AWillowPawn::PoweredUp)
		.def("EquipItem", &AWillowPawn::EquipItem)
		.def("UnequipItem", &AWillowPawn::UnequipItem)
		.def("GetEquippableItemInSlot", &AWillowPawn::GetEquippableItemInSlot, py::return_value_policy::reference)
		.def("GetItemTossVelocity", &AWillowPawn::GetItemTossVelocity, py::return_value_policy::reference)
		.def("TossInventory", &AWillowPawn::TossInventory)
		.def("TossSpecificItem", &AWillowPawn::TossSpecificItem, py::return_value_policy::reference)
		.def("DiscardInventory", &AWillowPawn::DiscardInventory)
		.def("SetDefaultInventory", &AWillowPawn::SetDefaultInventory)
		.def("AddDefaultWeapon", &AWillowPawn::AddDefaultWeapon)
		.def("DropLootOnDeath", &AWillowPawn::DropLootOnDeath)
		.def("AddDefaultInventory", &AWillowPawn::AddDefaultInventory)
		.def("ClientStopWeaponFiring", &AWillowPawn::ClientStopWeaponFiring)
		.def("StopWeaponFiring", &AWillowPawn::StopWeaponFiring)
		.def("BotFire", &AWillowPawn::BotFire)
		.def("StopFiring", &AWillowPawn::StopFiring)
		.def("ResetFreeCamForwardOffset", &AWillowPawn::ResetFreeCamForwardOffset)
		.def("AdjustFreeCamForwardOffset", &AWillowPawn::AdjustFreeCamForwardOffset)
		.def("ResetCameraScale", &AWillowPawn::ResetCameraScale)
		.def("AdjustCameraScale", &AWillowPawn::AdjustCameraScale)
		.def("UpdateAndDestroyNonVisibleActor", &AWillowPawn::UpdateAndDestroyNonVisibleActor)
		.def("EndRagdoll", &AWillowPawn::EndRagdoll)
		.def("FinishDeathRagdoll", &AWillowPawn::FinishDeathRagdoll)
		.def("StartDeathRagdoll", &AWillowPawn::StartDeathRagdoll)
		.def("StartBlendIntoDeathRagdoll", &AWillowPawn::StartBlendIntoDeathRagdoll)
		.def("TearOffAfterDeathTimer", &AWillowPawn::TearOffAfterDeathTimer)
		.def("eventPlayDeathAnim", &AWillowPawn::eventPlayDeathAnim)
		.def("CanPlayDeathAnim", &AWillowPawn::CanPlayDeathAnim)
		.def("GetTechDeathIndexForDamageType", &AWillowPawn::GetTechDeathIndexForDamageType)
		.def("PlayTechDeath", &AWillowPawn::PlayTechDeath)
		.def("MatchesAtLeastOneTechDeathAnim", &AWillowPawn::MatchesAtLeastOneTechDeathAnim)
		.def("ApplyExtraRagdollDeathImpulsesAndStatusEffect", &AWillowPawn::ApplyExtraRagdollDeathImpulsesAndStatusEffect)
		.def("PlayDying", &AWillowPawn::PlayDying)
		.def("StopSounds", &AWillowPawn::StopSounds)
		.def("Died", &AWillowPawn::Died)
		.def("TellOpportunityPawnIsDead", &AWillowPawn::TellOpportunityPawnIsDead)
		.def("eventCheckGoToDyingState", &AWillowPawn::eventCheckGoToDyingState)
		.def("ResetHitRegionHealth", &AWillowPawn::ResetHitRegionHealth)
		.def("PlayHealingReaction", &AWillowPawn::PlayHealingReaction)
		.def("PlayDamageReaction", &AWillowPawn::PlayDamageReaction)
		.def("PlayBloodSplatter", &AWillowPawn::PlayBloodSplatter)
		.def("PlayReplicatedDamage", &AWillowPawn::PlayReplicatedDamage)
		.def("PlayHealingHit", &AWillowPawn::PlayHealingHit)
		.def("PlayHit", &AWillowPawn::PlayHit)
		.def("SetupImpactsForPlayHit", &AWillowPawn::SetupImpactsForPlayHit)
		.def("UpdatePlayHitInfo", &AWillowPawn::UpdatePlayHitInfo)
		.def("UpdatePlayHitEffectCounters", &AWillowPawn::UpdatePlayHitEffectCounters)
		.def("ResetShieldColorToDefault", &AWillowPawn::ResetShieldColorToDefault)
		.def("SetShieldColor", &AWillowPawn::SetShieldColor)
		.def("GetWeaponStartTraceLocation", &AWillowPawn::GetWeaponStartTraceLocation, py::return_value_policy::reference)
		.def("ReloadWeapon", &AWillowPawn::ReloadWeapon)
		.def("GetCurrentAimOffsetNodeName", &AWillowPawn::GetCurrentAimOffsetNodeName, py::return_value_policy::reference)
		.def("SetAimOffsetProfile", &AWillowPawn::SetAimOffsetProfile)
		.def("eventReattachWeapons", &AWillowPawn::eventReattachWeapons)
		.def("WeaponChanged", &AWillowPawn::WeaponChanged)
		.def("RequestChangeWeaponVisibility", &AWillowPawn::RequestChangeWeaponVisibility)
		.def("OnGearLikenessFadeOutEffectFinished", &AWillowPawn::OnGearLikenessFadeOutEffectFinished)
		.def("StartGearLikenessFadeOutEffect", &AWillowPawn::StartGearLikenessFadeOutEffect)
		.def("StartGearLikenessFadeInEffect", &AWillowPawn::StartGearLikenessFadeInEffect)
		.def("SetHolsteredGearVisibility", &AWillowPawn::SetHolsteredGearVisibility)
		.def("SetHolsteredWeapon", &AWillowPawn::SetHolsteredWeapon)
		.def("ReplaceHolsteredWeapon", &AWillowPawn::ReplaceHolsteredWeapon)
		.def("SetUpperBodyMovementBlendState", &AWillowPawn::SetUpperBodyMovementBlendState)
		.def("UpdateAnimSets", &AWillowPawn::UpdateAnimSets)
		.def("eventTryOffHandWeaponChanged", &AWillowPawn::eventTryOffHandWeaponChanged)
		.def("eventTryWeaponChanged", &AWillowPawn::eventTryWeaponChanged)
		.def("ShouldAutoReadyMissionWeapon", &AWillowPawn::ShouldAutoReadyMissionWeapon)
		.def("WeaponStoppedFiring", &AWillowPawn::WeaponStoppedFiring)
		.def("WeaponFired", &AWillowPawn::WeaponFired)
		.def("PlayWeaponSwitch", &AWillowPawn::PlayWeaponSwitch)
		.def("PlayingInjuredSMD", &AWillowPawn::PlayingInjuredSMD)
		.def("GetBodyWeaponSMD", &AWillowPawn::GetBodyWeaponSMD, py::return_value_policy::reference)
		.def("FlashLocationUpdated", &AWillowPawn::FlashLocationUpdated)
		.def("FixedView", &AWillowPawn::FixedView)
		.def("SetFixedView", &AWillowPawn::SetFixedView)
		.def("SetOwnerVisibility", &AWillowPawn::SetOwnerVisibility)
		.def("SetInstanceDataOwnerVisibility", &AWillowPawn::SetInstanceDataOwnerVisibility)
		.def("SetWeaponOwnerVisibility", &AWillowPawn::SetWeaponOwnerVisibility)
		.def("SetWeaponVisibility", &AWillowPawn::SetWeaponVisibility)
		.def("eventSetWeaponParticleAttachmentVisibility", &AWillowPawn::eventSetWeaponParticleAttachmentVisibility)
		.def("eventEndViewTarget", &AWillowPawn::eventEndViewTarget)
		.def("eventBecomeViewTarget", &AWillowPawn::eventBecomeViewTarget)
		.def("GetPawnViewLocation", &AWillowPawn::GetPawnViewLocation, py::return_value_policy::reference)
		.def("SetHand", &AWillowPawn::SetHand)
		.def("OnShieldFull", &AWillowPawn::OnShieldFull)
		.def("OnShieldDepleted", &AWillowPawn::OnShieldDepleted)
		.def("IsFullyArmored", &AWillowPawn::IsFullyArmored)
		.def("GetDamageSurfaceTypeFromHit", &AWillowPawn::GetDamageSurfaceTypeFromHit)
		.def("GetDefaultDamageSurfaceType", &AWillowPawn::GetDefaultDamageSurfaceType)
		.def("AdjustMomentumForSurfaceType", &AWillowPawn::AdjustMomentumForSurfaceType)
		.def("NotifyDamageTaken", &AWillowPawn::NotifyDamageTaken)
		.def("GetHitRegionForTakenDamage", &AWillowPawn::GetHitRegionForTakenDamage, py::return_value_policy::reference)
		.def("AllPawnFloors", &AWillowPawn::AllPawnFloors)
		.def("EnableProtectionTimer", &AWillowPawn::EnableProtectionTimer)
		.def("GetIntrinsicArmor", &AWillowPawn::GetIntrinsicArmor)
		.def("TryFullBodyGib", &AWillowPawn::TryFullBodyGib)
		.def("ReplicateDamageEffect", &AWillowPawn::ReplicateDamageEffect)
		.def("HealDamageOnHitRegion", &AWillowPawn::HealDamageOnHitRegion)
		.def("AddDamageToHitRegion", &AWillowPawn::AddDamageToHitRegion)
		.def("SetShieldStrength", &AWillowPawn::SetShieldStrength)
		.def("GetMaxShieldStrength", &AWillowPawn::GetMaxShieldStrength)
		.def("GetShieldStrength", &AWillowPawn::GetShieldStrength)
		.def("eventBeganWalking", &AWillowPawn::eventBeganWalking)
		.def("eventStoppedWalking", &AWillowPawn::eventStoppedWalking)
		.def("eventBeganFalling", &AWillowPawn::eventBeganFalling)
		.def("eventStoppedFalling", &AWillowPawn::eventStoppedFalling)
		.def("OnEquippedItemsChange", &AWillowPawn::OnEquippedItemsChange)
		.def("BodySelectClass", &AWillowPawn::BodySelectClass)
		.def("DetachParticleSystem", &AWillowPawn::DetachParticleSystem)
		.def("eventPlayRagDollEffect", &AWillowPawn::eventPlayRagDollEffect)
		.def("eventRigidBodyCollision", &AWillowPawn::eventRigidBodyCollision)
		.def("GetAnims", &AWillowPawn::GetAnims)
		.def("GetBehaviorConsumerHandle", &AWillowPawn::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("InitializeScrapedStanceProviders", &AWillowPawn::InitializeScrapedStanceProviders)
		.def("InitializeBehaviorProviders", &AWillowPawn::InitializeBehaviorProviders)
		.def("SetupSkeletalMeshPhysics", &AWillowPawn::SetupSkeletalMeshPhysics)
		.def("SetupSkeletalMeshPhysicsForPhysXEffects", &AWillowPawn::SetupSkeletalMeshPhysicsForPhysXEffects)
		.def("SetPawnAnimInfo", &AWillowPawn::SetPawnAnimInfo)
		.def("SetDeathDefinition", &AWillowPawn::SetDeathDefinition)
		.def("ApplyBodyClassStartingValues", &AWillowPawn::ApplyBodyClassStartingValues)
		.def("DestroyShieldArmor", &AWillowPawn::DestroyShieldArmor)
		.def("eventDestroyed", &AWillowPawn::eventDestroyed)
		.def("RemoveWaypoints", &AWillowPawn::RemoveWaypoints)
		.def("eventSetLookAtTarget", &AWillowPawn::eventSetLookAtTarget)
		.def("eventPostRenderForAlways", &AWillowPawn::eventPostRenderForAlways)
		.def("UpdateClientFloorValue", &AWillowPawn::UpdateClientFloorValue)
		.def("GetDefaultMeshOffset", &AWillowPawn::GetDefaultMeshOffset, py::return_value_policy::reference)
		.def("ValidateHitRegions", &AWillowPawn::ValidateHitRegions)
		.def("PostBeginPlay", &AWillowPawn::PostBeginPlay)
		.def("eventReplicatedEvent", &AWillowPawn::eventReplicatedEvent)
		.def("GetNextExpLevelPoints", &AWillowPawn::GetNextExpLevelPoints)
		.def("IsInjuredDead", &AWillowPawn::IsInjuredDead)
		.def("IsStaggered", &AWillowPawn::IsStaggered)
		.def("RemoveAllStatusEffects", &AWillowPawn::RemoveAllStatusEffects)
		.def("FullyReplenishShields", &AWillowPawn::FullyReplenishShields)
		.def("FullyReplenishLife", &AWillowPawn::FullyReplenishLife)
		.def("GetBalancedActorTypeIdentifier", &AWillowPawn::GetBalancedActorTypeIdentifier, py::return_value_policy::reference)
		.def("SetExpLevel", &AWillowPawn::SetExpLevel)
		.def("SetAwesomeLevel", &AWillowPawn::SetAwesomeLevel)
		.def("SetGameStageForSpawnedInventory", &AWillowPawn::SetGameStageForSpawnedInventory)
		.def("SetGameStage", &AWillowPawn::SetGameStage)
		.def("GetExpLevelForEquip", &AWillowPawn::GetExpLevelForEquip)
		.def("GetExpLevel", &AWillowPawn::GetExpLevel)
		.def("GetAwesomeLevel", &AWillowPawn::GetAwesomeLevel)
		.def("GetGameStageForSpawnedInventory", &AWillowPawn::GetGameStageForSpawnedInventory)
		.def("GetGameStage", &AWillowPawn::GetGameStage)
		.def("SetAimAtVector", &AWillowPawn::SetAimAtVector)
		.def("SetAimAtActor", &AWillowPawn::SetAimAtActor)
		.def("IsPawnPursuitDebugEnabled", &AWillowPawn::IsPawnPursuitDebugEnabled)
		.def("TogglePawnPursuitDebug", &AWillowPawn::TogglePawnPursuitDebug)
		.def("RefreshPawnGearLikenessComponents", &AWillowPawn::RefreshPawnGearLikenessComponents)
		.def("InitializePawnMeshes", &AWillowPawn::InitializePawnMeshes)
		.def("eventBuildScriptAnimSetList", &AWillowPawn::eventBuildScriptAnimSetList)
		.def("eventRestoreAnimSetsToDefault", &AWillowPawn::eventRestoreAnimSetsToDefault)
		.def("IsReloading", &AWillowPawn::IsReloading)
		.def("IsSplitScreen", &AWillowPawn::IsSplitScreen)
		.def("InitializeRBPhysics", &AWillowPawn::InitializeRBPhysics)
		.def("GetDefaultPhysics", &AWillowPawn::GetDefaultPhysics)
		.def("SetDefaultPhysics", &AWillowPawn::SetDefaultPhysics)
		.def("GetOpinion", &AWillowPawn::GetOpinion)
		.def("GetHitRegions", [](AWillowPawn &self , TArray< class UBodyHitRegionDefinition* >* Regions) { class UBodyHitRegionDefinition** pyDefaultRegion = 0 ;   self.GetHitRegions(Regions, pyDefaultRegion); return py::make_tuple(*pyDefaultRegion); })
		.def("GetMeleeState", [](AWillowPawn &self , struct FVector* StartLoc, struct FRotator* StartRot) { float* pyStartTime = (float*)malloc(sizeof(float)) ; float* pyLastTime = (float*)malloc(sizeof(float)) ;   self.GetMeleeState(pyStartTime, pyLastTime, StartLoc, StartRot); return py::make_tuple(*pyStartTime, *pyLastTime); })
		.def("GetExpInfo", [](AWillowPawn &self ) { int* pyExpLevelValue = (int*)malloc(sizeof(int)) ;   self.GetExpInfo(pyExpLevelValue); return py::make_tuple(*pyExpLevelValue); })
		.def("SetShieldResourcePoolDefinition", [](AWillowPawn &self , class UResourcePoolDefinition* Definition) { class AResourcePoolManager** pyResourcePoolManager = 0 ;   self.SetShieldResourcePoolDefinition(Definition, pyResourcePoolManager); return py::make_tuple(*pyResourcePoolManager); })
		.def("SetHealthResourcePoolDefinition", [](AWillowPawn &self , class UResourcePoolDefinition* Definition) { class AResourcePoolManager** pyResourcePoolManager = 0 ;   self.SetHealthResourcePoolDefinition(Definition, pyResourcePoolManager); return py::make_tuple(*pyResourcePoolManager); })
		.def("eventCalcInjuredDeadCamera", [](AWillowPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.eventCalcInjuredDeadCamera(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("eventCalcInjuredCamera", [](AWillowPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.eventCalcInjuredCamera(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("CalcThirdPersonCam", [](AWillowPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.CalcThirdPersonCam(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("CalcCamera", [](AWillowPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.CalcCamera(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("CalcFreeCam", [](AWillowPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;   self.CalcFreeCam(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(*pyout_FOV); })
		.def("CalcCameraBehind", [](AWillowPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.CalcCameraBehind(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("AdjustDamage", [](AWillowPawn &self , class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class UIDamageCauser* DamageCauser, class UDamagePipeline* Pipeline, struct FVector* Momentum, struct FTraceHitInfo* HitInfo) { float* pyInDamage = (float*)malloc(sizeof(float)) ; float* pyDamageSeverityPercent = (float*)malloc(sizeof(float)) ;   self.AdjustDamage(InstigatedBy, HitLocation, DamageType, DamageCauser, Pipeline, pyInDamage, pyDamageSeverityPercent, Momentum, HitInfo); return py::make_tuple(*pyInDamage, *pyDamageSeverityPercent); })
		.def("ShieldAbsorbedAmmo", [](AWillowPawn &self , class UClass* DamageSource, class UWillowDamageTypeDefinition* DamageTypeDef) { float* pyDamagePercentToAbsorb = (float*)malloc(sizeof(float)) ;  bool ret =  self.ShieldAbsorbedAmmo(DamageSource, DamageTypeDef, pyDamagePercentToAbsorb); return py::make_tuple(ret, *pyDamagePercentToAbsorb); })
		.def("GetHitRegionHealthValues", [](AWillowPawn &self , class UBodyHitRegionDefinition* HitRegion) { float* pyHealth = (float*)malloc(sizeof(float)) ; float* pyMaxHealth = (float*)malloc(sizeof(float)) ;   self.GetHitRegionHealthValues(HitRegion, pyHealth, pyMaxHealth); return py::make_tuple(*pyHealth, *pyMaxHealth); })
		;
	py::class_< AWillowAIPawn, AWillowPawn >(m, "AWillowAIPawn")
		.def_property("bMigratedAIClass", [](AWillowAIPawn &self){return self.bMigratedAIClass;}, [](AWillowAIPawn &self, bool value){self.bMigratedAIClass = value ? 1 : 0;})
		.def_property("bMigratedAIClass2", [](AWillowAIPawn &self){return self.bMigratedAIClass2;}, [](AWillowAIPawn &self, bool value){self.bMigratedAIClass2 = value ? 1 : 0;})
		.def_property("bOverrideAutoAimRange", [](AWillowAIPawn &self){return self.bOverrideAutoAimRange;}, [](AWillowAIPawn &self, bool value){self.bOverrideAutoAimRange = value ? 1 : 0;})
		.def_property("bOverrideAutoAimOrigin", [](AWillowAIPawn &self){return self.bOverrideAutoAimOrigin;}, [](AWillowAIPawn &self, bool value){self.bOverrideAutoAimOrigin = value ? 1 : 0;})
		.def_property("bDefaultInventoryAdded", [](AWillowAIPawn &self){return self.bDefaultInventoryAdded;}, [](AWillowAIPawn &self, bool value){self.bDefaultInventoryAdded = value ? 1 : 0;})
		.def_property("bDebugUsingAIInspector", [](AWillowAIPawn &self){return self.bDebugUsingAIInspector;}, [](AWillowAIPawn &self, bool value){self.bDebugUsingAIInspector = value ? 1 : 0;})
		.def_property("DoesVehicleAllowMeToDropLoot", [](AWillowAIPawn &self){return self.DoesVehicleAllowMeToDropLoot;}, [](AWillowAIPawn &self, bool value){self.DoesVehicleAllowMeToDropLoot = value ? 1 : 0;})
		.def_property("bLeaping", [](AWillowAIPawn &self){return self.bLeaping;}, [](AWillowAIPawn &self, bool value){self.bLeaping = value ? 1 : 0;})
		.def_property("bDodging", [](AWillowAIPawn &self){return self.bDodging;}, [](AWillowAIPawn &self, bool value){self.bDodging = value ? 1 : 0;})
		.def_property("bDodgeLeft", [](AWillowAIPawn &self){return self.bDodgeLeft;}, [](AWillowAIPawn &self, bool value){self.bDodgeLeft = value ? 1 : 0;})
		.def_property("bDodgeProjectile", [](AWillowAIPawn &self){return self.bDodgeProjectile;}, [](AWillowAIPawn &self, bool value){self.bDodgeProjectile = value ? 1 : 0;})
		.def_property("bIsCharging", [](AWillowAIPawn &self){return self.bIsCharging;}, [](AWillowAIPawn &self, bool value){self.bIsCharging = value ? 1 : 0;})
		.def_property("bInKnockback", [](AWillowAIPawn &self){return self.bInKnockback;}, [](AWillowAIPawn &self, bool value){self.bInKnockback = value ? 1 : 0;})
		.def_property("bIsPatrolling", [](AWillowAIPawn &self){return self.bIsPatrolling;}, [](AWillowAIPawn &self, bool value){self.bIsPatrolling = value ? 1 : 0;})
		.def_property("bPerchAttached", [](AWillowAIPawn &self){return self.bPerchAttached;}, [](AWillowAIPawn &self, bool value){self.bPerchAttached = value ? 1 : 0;})
		.def_property("bSkelUpdate_SkipWhileIdle", [](AWillowAIPawn &self){return self.bSkelUpdate_SkipWhileIdle;}, [](AWillowAIPawn &self, bool value){self.bSkelUpdate_SkipWhileIdle = value ? 1 : 0;})
		.def_property("bCurrentlyThrottled", [](AWillowAIPawn &self){return self.bCurrentlyThrottled;}, [](AWillowAIPawn &self, bool value){self.bCurrentlyThrottled = value ? 1 : 0;})
		.def_property("bHideInfoOnHud", [](AWillowAIPawn &self){return self.bHideInfoOnHud;}, [](AWillowAIPawn &self, bool value){self.bHideInfoOnHud = value ? 1 : 0;})
		.def_property("bPlayingRotationAudio", [](AWillowAIPawn &self){return self.bPlayingRotationAudio;}, [](AWillowAIPawn &self, bool value){self.bPlayingRotationAudio = value ? 1 : 0;})
		.def_property("bDisableServerRotation", [](AWillowAIPawn &self){return self.bDisableServerRotation;}, [](AWillowAIPawn &self, bool value){self.bDisableServerRotation = value ? 1 : 0;})
		.def_property("bAwardedExperienceForKill", [](AWillowAIPawn &self){return self.bAwardedExperienceForKill;}, [](AWillowAIPawn &self, bool value){self.bAwardedExperienceForKill = value ? 1 : 0;})
		.def_property("bHeadLookOnHold", [](AWillowAIPawn &self){return self.bHeadLookOnHold;}, [](AWillowAIPawn &self, bool value){self.bHeadLookOnHold = value ? 1 : 0;})
		.def_readwrite("VfTable_IIMissionDirector", &AWillowAIPawn::VfTable_IIMissionDirector, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIFocusable", &AWillowAIPawn::VfTable_IIFocusable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IITimerBehavior", &AWillowAIPawn::VfTable_IITimerBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IICustomizable", &AWillowAIPawn::VfTable_IICustomizable, py::return_value_policy::reference)
		.def_readwrite("SecondaryCylinders", &AWillowAIPawn::SecondaryCylinders, py::return_value_policy::reference)
		.def_readwrite("LastEncroachedPrimitive", &AWillowAIPawn::LastEncroachedPrimitive, py::return_value_policy::reference)
		.def_readwrite("MyWillowMind", &AWillowAIPawn::MyWillowMind, py::return_value_policy::reference)
		.def_readwrite("MySpawnPoint", &AWillowAIPawn::MySpawnPoint, py::return_value_policy::reference)
		.def_readwrite("ClanDef", &AWillowAIPawn::ClanDef, py::return_value_policy::reference)
		.def_readwrite("SpawnParent", &AWillowAIPawn::SpawnParent, py::return_value_policy::reference)
		.def_readwrite("ExpLevel", &AWillowAIPawn::ExpLevel)
		.def_readwrite("GameStageForSpawnedInventory", &AWillowAIPawn::GameStageForSpawnedInventory)
		.def_readwrite("AwesomeLevel", &AWillowAIPawn::AwesomeLevel)
		.def_readwrite("ExperiencePointMultiplier", &AWillowAIPawn::ExperiencePointMultiplier)
		.def_readwrite("ExperiencePointMultiplierBaseValue", &AWillowAIPawn::ExperiencePointMultiplierBaseValue)
		.def_readwrite("ExperiencePointMultiplierModifierStack", &AWillowAIPawn::ExperiencePointMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("NumLevelUps", &AWillowAIPawn::NumLevelUps)
		.def_readwrite("MountedInstanceDataName", &AWillowAIPawn::MountedInstanceDataName, py::return_value_policy::reference)
		.def_readwrite("TransformType", &AWillowAIPawn::TransformType)
		.def_readwrite("bInjured", &AWillowAIPawn::bInjured)
		.def_readwrite("AIClass", &AWillowAIPawn::AIClass, py::return_value_policy::reference)
		.def_readwrite("AutoAimRangeOverride", &AWillowAIPawn::AutoAimRangeOverride)
		.def_readwrite("AutoAimOriginOverride", &AWillowAIPawn::AutoAimOriginOverride, py::return_value_policy::reference)
		.def_readwrite("DebugPawnMarkerInst", &AWillowAIPawn::DebugPawnMarkerInst, py::return_value_policy::reference)
		.def_readwrite("PhysicsVehicleCollisionBody", &AWillowAIPawn::PhysicsVehicleCollisionBody, py::return_value_policy::reference)
		.def_readwrite("PhysicsVehicleCollisionBodySetup", &AWillowAIPawn::PhysicsVehicleCollisionBodySetup, py::return_value_policy::reference)
		.def_readwrite("LastRunOverByVehicle", &AWillowAIPawn::LastRunOverByVehicle, py::return_value_policy::reference)
		.def_readwrite("LastRunOverByWheelIndex", &AWillowAIPawn::LastRunOverByWheelIndex)
		.def_readwrite("LastRunOverByTime", &AWillowAIPawn::LastRunOverByTime)
		.def_readwrite("RagdollDeathExtraImpulses", &AWillowAIPawn::RagdollDeathExtraImpulses, py::return_value_policy::reference)
		.def_readwrite("RagdollDeathExtraStatusEffect", &AWillowAIPawn::RagdollDeathExtraStatusEffect, py::return_value_policy::reference)
		.def_readwrite("PlayerMaster", &AWillowAIPawn::PlayerMaster, py::return_value_policy::reference)
		.def_readwrite("MasteredDisplayName", &AWillowAIPawn::MasteredDisplayName, py::return_value_policy::reference)
		.def_readwrite("PlayerMasterPRI", &AWillowAIPawn::PlayerMasterPRI, py::return_value_policy::reference)
		.def_readwrite("ThoughtlockMaster", &AWillowAIPawn::ThoughtlockMaster, py::return_value_policy::reference)
		.def_readwrite("EnteredVehicleTime", &AWillowAIPawn::EnteredVehicleTime)
		.def_readwrite("ExitedVehicleTime", &AWillowAIPawn::ExitedVehicleTime)
		.def_readwrite("StaggerState", &AWillowAIPawn::StaggerState, py::return_value_policy::reference)
		.def_readwrite("StaggerRecoveryBlend", &AWillowAIPawn::StaggerRecoveryBlend, py::return_value_policy::reference)
		.def_readwrite("RBState", &AWillowAIPawn::RBState, py::return_value_policy::reference)
		.def_readwrite("AngErrorAccumulator", &AWillowAIPawn::AngErrorAccumulator)
		.def_readwrite("MissionDirectives", &AWillowAIPawn::MissionDirectives, py::return_value_policy::reference)
		.def_readwrite("MissionDirectorParticle", &AWillowAIPawn::MissionDirectorParticle, py::return_value_policy::reference)
		.def_readwrite("LeapGravity", &AWillowAIPawn::LeapGravity)
		.def_readwrite("LeapStartTime", &AWillowAIPawn::LeapStartTime)
		.def_readwrite("LeapTotalTime", &AWillowAIPawn::LeapTotalTime)
		.def_readwrite("LeapStartLoc", &AWillowAIPawn::LeapStartLoc, py::return_value_policy::reference)
		.def_readwrite("LeapStartVelocity", &AWillowAIPawn::LeapStartVelocity, py::return_value_policy::reference)
		.def_readwrite("NextDodgeTime", &AWillowAIPawn::NextDodgeTime)
		.def_readwrite("CurrentFormation", &AWillowAIPawn::CurrentFormation, py::return_value_policy::reference)
		.def_readwrite("CoverMantleLerpDelta", &AWillowAIPawn::CoverMantleLerpDelta, py::return_value_policy::reference)
		.def_readwrite("CoverComponent", &AWillowAIPawn::CoverComponent, py::return_value_policy::reference)
		.def_readwrite("MyCoverState", &AWillowAIPawn::MyCoverState, py::return_value_policy::reference)
		.def_readwrite("CoverBlendNode", &AWillowAIPawn::CoverBlendNode, py::return_value_policy::reference)
		.def_readwrite("PawnsUsingMe", &AWillowAIPawn::PawnsUsingMe, py::return_value_policy::reference)
		.def_readwrite("MissionsAcceptedByPrimaryUser", &AWillowAIPawn::MissionsAcceptedByPrimaryUser, py::return_value_policy::reference)
		.def_readwrite("CurrentPerch", &AWillowAIPawn::CurrentPerch, py::return_value_policy::reference)
		.def_readwrite("PerchState", &AWillowAIPawn::PerchState, py::return_value_policy::reference)
		.def_readwrite("PerchProjectile", &AWillowAIPawn::PerchProjectile, py::return_value_policy::reference)
		.def_readwrite("DamageLocationInfo", &AWillowAIPawn::DamageLocationInfo, py::return_value_policy::reference)
		.def_readwrite("BehaviorTimers", &AWillowAIPawn::BehaviorTimers, py::return_value_policy::reference)
		.def_readwrite("ItemTossSpeed", &AWillowAIPawn::ItemTossSpeed)
		.def_readwrite("ItemTossTargetActors", &AWillowAIPawn::ItemTossTargetActors, py::return_value_policy::reference)
		.def_readwrite("SkelUpdate_FullThrottleDistance", &AWillowAIPawn::SkelUpdate_FullThrottleDistance)
		.def_readwrite("SkelUpdate_FullThrottleTime", &AWillowAIPawn::SkelUpdate_FullThrottleTime)
		.def_readwrite("SkelUpdate_MinThrottleDistance", &AWillowAIPawn::SkelUpdate_MinThrottleDistance)
		.def_readwrite("SkelUpdate_MaxThrottleDistance", &AWillowAIPawn::SkelUpdate_MaxThrottleDistance)
		.def_readwrite("SkelUpdate_MinThrottleTime", &AWillowAIPawn::SkelUpdate_MinThrottleTime)
		.def_readwrite("SkelUpdate_MaxThrottleTime", &AWillowAIPawn::SkelUpdate_MaxThrottleTime)
		.def_readwrite("LastThrottleCheck", &AWillowAIPawn::LastThrottleCheck)
		.def_readwrite("ThrottledDeltaTime", &AWillowAIPawn::ThrottledDeltaTime)
		.def_readwrite("LastUpdateTime", &AWillowAIPawn::LastUpdateTime)
		.def_readwrite("SAP_Data", &AWillowAIPawn::SAP_Data, py::return_value_policy::reference)
		.def_readwrite("SAP_AnimSeq", &AWillowAIPawn::SAP_AnimSeq, py::return_value_policy::reference)
		.def_readwrite("SAP_TotalAnimDistance", &AWillowAIPawn::SAP_TotalAnimDistance)
		.def_readwrite("SAP_TotalSplineDistance", &AWillowAIPawn::SAP_TotalSplineDistance)
		.def_readwrite("SAP_CurrentSplineDistance", &AWillowAIPawn::SAP_CurrentSplineDistance)
		.def_readwrite("SAP_LastAnimTime", &AWillowAIPawn::SAP_LastAnimTime)
		.def_readwrite("SAP_TotalRotationOffset", &AWillowAIPawn::SAP_TotalRotationOffset, py::return_value_policy::reference)
		.def_readwrite("CachedCrawlerFloorAdjust", &AWillowAIPawn::CachedCrawlerFloorAdjust, py::return_value_policy::reference)
		.def_readwrite("LastCrawlerFloorAdjustTime", &AWillowAIPawn::LastCrawlerFloorAdjustTime)
		.def_readwrite("CachedCrawlerFloorAdjustHeight", &AWillowAIPawn::CachedCrawlerFloorAdjustHeight)
		.def_readwrite("RevivePct", &AWillowAIPawn::RevivePct)
		.def_readwrite("ServerRotation", &AWillowAIPawn::ServerRotation, py::return_value_policy::reference)
		.def_readwrite("ClientNavigationHandle", &AWillowAIPawn::ClientNavigationHandle, py::return_value_policy::reference)
		.def_readwrite("NameListIndex", &AWillowAIPawn::NameListIndex)
		.def("ApplyExtraRagdollDeathImpulsesAndStatusEffect", &AWillowAIPawn::ApplyExtraRagdollDeathImpulsesAndStatusEffect)
		.def("RegisterExtraDeathImpulse", &AWillowAIPawn::RegisterExtraDeathImpulse)
		.def("OnPlayerClosedMissionUI", &AWillowAIPawn::OnPlayerClosedMissionUI)
		.def("OnPlayerOpenedMissionUI", &AWillowAIPawn::OnPlayerOpenedMissionUI)
		.def("SetSplineAnimPath", &AWillowAIPawn::SetSplineAnimPath)
		.def("UpdateClientFloorValue", &AWillowAIPawn::UpdateClientFloorValue)
		.def("GetNavigationHandle", &AWillowAIPawn::GetNavigationHandle, py::return_value_policy::reference)
		.def("CanTalk", &AWillowAIPawn::CanTalk)
		.def("ResetDefaultRotationRate", &AWillowAIPawn::ResetDefaultRotationRate)
		.def("UpdateLookAtTarget", &AWillowAIPawn::UpdateLookAtTarget)
		.def("PlayFootStepSound", &AWillowAIPawn::PlayFootStepSound)
		.def("ConditionalCreateDebugPawnMarkerInst", &AWillowAIPawn::ConditionalCreateDebugPawnMarkerInst)
		.def("IsDebugAIRotationEnabled", &AWillowAIPawn::IsDebugAIRotationEnabled)
		.def("ToggleDebugAIRotation", &AWillowAIPawn::ToggleDebugAIRotation)
		.def("IsDebugAIFlightEnabled", &AWillowAIPawn::IsDebugAIFlightEnabled)
		.def("ToggleDebugAIFlight", &AWillowAIPawn::ToggleDebugAIFlight)
		.def("PlayTaunt", &AWillowAIPawn::PlayTaunt)
		.def("eventCancelTauntTimer", &AWillowAIPawn::eventCancelTauntTimer)
		.def("eventStartTauntTimer", &AWillowAIPawn::eventStartTauntTimer)
		.def("SetRevivePct", &AWillowAIPawn::SetRevivePct)
		.def("GetRevivePct", &AWillowAIPawn::GetRevivePct)
		.def("ClearPlayerInjuredState", &AWillowAIPawn::ClearPlayerInjuredState)
		.def("GetItemTossVelocity", &AWillowAIPawn::GetItemTossVelocity, py::return_value_policy::reference)
		.def("GetClosestTossTarget", &AWillowAIPawn::GetClosestTossTarget, py::return_value_policy::reference)
		.def("OnAISetItemTossTarget", &AWillowAIPawn::OnAISetItemTossTarget)
		.def("eventOnTimerEvent", &AWillowAIPawn::eventOnTimerEvent)
		.def("SetTimerState", &AWillowAIPawn::SetTimerState)
		.def("GetTimerState", &AWillowAIPawn::GetTimerState)
		.def("GetTimeSeconds", &AWillowAIPawn::GetTimeSeconds)
		.def("GetMeleeTraceSourceLocationAndRotation", &AWillowAIPawn::GetMeleeTraceSourceLocationAndRotation)
		.def("TranslateToDenStat", &AWillowAIPawn::TranslateToDenStat)
		.def("RemoveDenStat", &AWillowAIPawn::RemoveDenStat)
		.def("AddDenStat", &AWillowAIPawn::AddDenStat)
		.def("GetHitLocationBody", &AWillowAIPawn::GetHitLocationBody, py::return_value_policy::reference)
		.def("AddHitLocation", &AWillowAIPawn::AddHitLocation)
		.def("Uncloak", &AWillowAIPawn::Uncloak)
		.def("Cloak", &AWillowAIPawn::Cloak)
		.def("Behavior_ChangeUsabilityCost", &AWillowAIPawn::Behavior_ChangeUsabilityCost)
		.def("SetUsable", &AWillowAIPawn::SetUsable)
		.def("Behavior_ChangeUsability", &AWillowAIPawn::Behavior_ChangeUsability)
		.def("IsNeutral", &AWillowAIPawn::IsNeutral)
		.def("IsEnemy", &AWillowAIPawn::IsEnemy)
		.def("PlayUnprovokedAnim", &AWillowAIPawn::PlayUnprovokedAnim)
		.def("PlayProvokedAnim", &AWillowAIPawn::PlayProvokedAnim)
		.def("HoldingCombatPerch", &AWillowAIPawn::HoldingCombatPerch)
		.def("MatchCombatPerch", &AWillowAIPawn::MatchCombatPerch)
		.def("UpdatePerchState", &AWillowAIPawn::UpdatePerchState)
		.def("FillInPerchData", &AWillowAIPawn::FillInPerchData)
		.def("DropCombatPerch", &AWillowAIPawn::DropCombatPerch)
		.def("HasAnyMissionsForPlayer", &AWillowAIPawn::HasAnyMissionsForPlayer)
		.def("GetMissionDirectorLocation", &AWillowAIPawn::GetMissionDirectorLocation, py::return_value_policy::reference)
		.def("GetAllDirectorData", &AWillowAIPawn::GetAllDirectorData)
		.def("ReleaseAIFromMatinee", &AWillowAIPawn::ReleaseAIFromMatinee)
		.def("HoldAIForMatinee", &AWillowAIPawn::HoldAIForMatinee)
		.def("LastMatineeAnimFinished", &AWillowAIPawn::LastMatineeAnimFinished)
		.def("eventMAT_FinishAIGroup", &AWillowAIPawn::eventMAT_FinishAIGroup)
		.def("eventMAT_BeginAIGroup", &AWillowAIPawn::eventMAT_BeginAIGroup)
		.def("Dismount", &AWillowAIPawn::Dismount)
		.def("GetMount", &AWillowAIPawn::GetMount, py::return_value_policy::reference)
		.def("IsMounted", &AWillowAIPawn::IsMounted)
		.def("MatchTransform", &AWillowAIPawn::MatchTransform)
		.def("CanBeBaseForPawn", &AWillowAIPawn::CanBeBaseForPawn)
		.def("DoKismetAttachment", &AWillowAIPawn::DoKismetAttachment)
		.def("GetObstacleInfo", &AWillowAIPawn::GetObstacleInfo)
		.def("GetMagnetData", &AWillowAIPawn::GetMagnetData)
		.def("SetObstacleVelocity", &AWillowAIPawn::SetObstacleVelocity)
		.def("CanAvoidObstacle", &AWillowAIPawn::CanAvoidObstacle)
		.def("CanAvoidObstacles", &AWillowAIPawn::CanAvoidObstacles)
		.def("GetParent", &AWillowAIPawn::GetParent, py::return_value_policy::reference)
		.def("UseRootOnlyYawRotation", &AWillowAIPawn::UseRootOnlyYawRotation)
		.def("SetStance", &AWillowAIPawn::SetStance)
		.def("SetDefaultStance", &AWillowAIPawn::SetDefaultStance)
		.def("GetMoveStyle", &AWillowAIPawn::GetMoveStyle)
		.def("CanUseAimOffsets", &AWillowAIPawn::CanUseAimOffsets)
		.def("CanTurn", &AWillowAIPawn::CanTurn)
		.def("DoneTurning", &AWillowAIPawn::DoneTurning)
		.def("GetFocusScreenOffset", &AWillowAIPawn::GetFocusScreenOffset, py::return_value_policy::reference)
		.def("GetFocusRadius", &AWillowAIPawn::GetFocusRadius)
		.def("GetFocusLocation", &AWillowAIPawn::GetFocusLocation, py::return_value_policy::reference)
		.def("EndFocus", &AWillowAIPawn::EndFocus)
		.def("BeginFocus", &AWillowAIPawn::BeginFocus)
		.def("GetAcceptedMissionToPlayDismissalDialogFor", &AWillowAIPawn::GetAcceptedMissionToPlayDismissalDialogFor, py::return_value_policy::reference)
		.def("PlayDismissalDialog", &AWillowAIPawn::PlayDismissalDialog)
		.def("PlayMissionTurnedInDialog", &AWillowAIPawn::PlayMissionTurnedInDialog)
		.def("PlayLingeringDialog", &AWillowAIPawn::PlayLingeringDialog)
		.def("PlayOnUseDialog", &AWillowAIPawn::PlayOnUseDialog)
		.def("OnUsersAreLingering", &AWillowAIPawn::OnUsersAreLingering)
		.def("StartLingerTimer", &AWillowAIPawn::StartLingerTimer)
		.def("ClearMissionsAcceptedByPrimaryUser", &AWillowAIPawn::ClearMissionsAcceptedByPrimaryUser)
		.def("eventOnNewPrimaryUser", &AWillowAIPawn::eventOnNewPrimaryUser)
		.def("GetPrimaryUser", &AWillowAIPawn::GetPrimaryUser, py::return_value_policy::reference)
		.def("EndUse", &AWillowAIPawn::EndUse)
		.def("BeginUse", &AWillowAIPawn::BeginUse)
		.def("FireOnUnableToAffordBehaviors", &AWillowAIPawn::FireOnUnableToAffordBehaviors)
		.def("NotifyUserCouldNotAffordAttemptedUse", &AWillowAIPawn::NotifyUserCouldNotAffordAttemptedUse)
		.def("SetInteractionIcon", &AWillowAIPawn::SetInteractionIcon)
		.def("FireOnUsedBehaviors", &AWillowAIPawn::FireOnUsedBehaviors)
		.def("UseObject", &AWillowAIPawn::UseObject)
		.def("IsComponentUsable", &AWillowAIPawn::IsComponentUsable)
		.def("eventDeactivateMissionDirectorParticle", &AWillowAIPawn::eventDeactivateMissionDirectorParticle)
		.def("eventSetMissionDirectorParticle", &AWillowAIPawn::eventSetMissionDirectorParticle)
		.def("eventMissionStatusChanged", &AWillowAIPawn::eventMissionStatusChanged)
		.def("OnPlayerTurnedInMission", &AWillowAIPawn::OnPlayerTurnedInMission)
		.def("OnPlayerAcceptedMission", &AWillowAIPawn::OnPlayerAcceptedMission)
		.def("GetInProgressMissions", &AWillowAIPawn::GetInProgressMissions)
		.def("GetEligibleMissions", &AWillowAIPawn::GetEligibleMissions)
		.def("GetRedeemableMissions", &AWillowAIPawn::GetRedeemableMissions)
		.def("eventAddMissionDirective", &AWillowAIPawn::eventAddMissionDirective)
		.def("RegisterMissionDirector", &AWillowAIPawn::RegisterMissionDirector)
		.def("eventSpecialMoveThruEdge", &AWillowAIPawn::eventSpecialMoveThruEdge)
		.def("DoCoverMantleLerp", &AWillowAIPawn::DoCoverMantleLerp)
		.def("MantleFinished", &AWillowAIPawn::MantleFinished)
		.def("GetCoverBody", &AWillowAIPawn::GetCoverBody, py::return_value_policy::reference)
		.def("SetCoverStance", &AWillowAIPawn::SetCoverStance)
		.def("SetCoverSlot", &AWillowAIPawn::SetCoverSlot)
		.def("SetCoverAction", &AWillowAIPawn::SetCoverAction)
		.def("IsInCover", &AWillowAIPawn::IsInCover)
		.def("FinishKnockback", &AWillowAIPawn::FinishKnockback)
		.def("StopKnockback", &AWillowAIPawn::StopKnockback)
		.def("HandleMomentum", &AWillowAIPawn::HandleMomentum)
		.def("CheckCharging", &AWillowAIPawn::CheckCharging)
		.def("eventHitWall", &AWillowAIPawn::eventHitWall)
		.def("eventTouch", &AWillowAIPawn::eventTouch)
		.def("eventUnTouch", &AWillowAIPawn::eventUnTouch)
		.def("OnShieldDepleted", &AWillowAIPawn::OnShieldDepleted)
		.def("HardFlinchFinished", &AWillowAIPawn::HardFlinchFinished)
		.def("PlayHardFlinch", &AWillowAIPawn::PlayHardFlinch)
		.def("SetInjuredDialogLoop", &AWillowAIPawn::SetInjuredDialogLoop)
		.def("CheckInjured", &AWillowAIPawn::CheckInjured)
		.def("CanDoMovementDodges", &AWillowAIPawn::CanDoMovementDodges)
		.def("SetMovementDodgeTimer", &AWillowAIPawn::SetMovementDodgeTimer)
		.def("DoMovementDodge", &AWillowAIPawn::DoMovementDodge)
		.def("PlayDodgeAnimation", &AWillowAIPawn::PlayDodgeAnimation)
		.def("TryToDodge", &AWillowAIPawn::TryToDodge)
		.def("CanDodge", &AWillowAIPawn::CanDodge)
		.def("GetDodgeBody", &AWillowAIPawn::GetDodgeBody, py::return_value_policy::reference)
		.def("PerformDodge", &AWillowAIPawn::PerformDodge)
		.def("DoneDodging", &AWillowAIPawn::DoneDodging)
		.def("StartLeapAtActor", &AWillowAIPawn::StartLeapAtActor)
		.def("StartLeap", &AWillowAIPawn::StartLeap)
		.def("GetLeapRotation", &AWillowAIPawn::GetLeapRotation, py::return_value_policy::reference)
		.def("EndSpawnStyleLerp", &AWillowAIPawn::EndSpawnStyleLerp)
		.def("StartSpawnStyleLerp", &AWillowAIPawn::StartSpawnStyleLerp)
		.def("GetFlyNavMeshCheckDist", &AWillowAIPawn::GetFlyNavMeshCheckDist)
		.def("PlacePhysicsBody", &AWillowAIPawn::PlacePhysicsBody)
		.def("SetupRagdollPhysics", &AWillowAIPawn::SetupRagdollPhysics)
		.def("GetStaggerSettings", &AWillowAIPawn::GetStaggerSettings, py::return_value_policy::reference)
		.def("eventPlayStagger", &AWillowAIPawn::eventPlayStagger)
		.def("UnStagger", &AWillowAIPawn::UnStagger)
		.def("eventStagger", &AWillowAIPawn::eventStagger)
		.def("VehicleCollideFlinchFinished", &AWillowAIPawn::VehicleCollideFlinchFinished)
		.def("PlayVehicleCollideFlinch", &AWillowAIPawn::PlayVehicleCollideFlinch)
		.def("CanBeStaggered", &AWillowAIPawn::CanBeStaggered)
		.def("eventHitByVehicle", &AWillowAIPawn::eventHitByVehicle)
		.def("TriggerHitByVehicleDialog", &AWillowAIPawn::TriggerHitByVehicleDialog)
		.def("eventOnRanOver", &AWillowAIPawn::eventOnRanOver)
		.def("SetVehicleRBActorEnabled", &AWillowAIPawn::SetVehicleRBActorEnabled)
		.def("eventStopDriving", &AWillowAIPawn::eventStopDriving)
		.def("eventStartDriving", &AWillowAIPawn::eventStartDriving)
		.def("GetInstanceData", &AWillowAIPawn::GetInstanceData)
		.def("PostInitBodyComposition", &AWillowAIPawn::PostInitBodyComposition)
		.def("PreRemoveBodyComposition", &AWillowAIPawn::PreRemoveBodyComposition)
		.def("SetInfoBarVisibility", &AWillowAIPawn::SetInfoBarVisibility)
		.def("HideTargetInfoOnHud", &AWillowAIPawn::HideTargetInfoOnHud)
		.def("IsChampion", &AWillowAIPawn::IsChampion)
		.def("IsBoss", &AWillowAIPawn::IsBoss)
		.def("GetTransformedKillStat", &AWillowAIPawn::GetTransformedKillStat, py::return_value_policy::reference)
		.def("eventGetTargetName", &AWillowAIPawn::eventGetTargetName)
		.def("GetTransformedName", &AWillowAIPawn::GetTransformedName, py::return_value_policy::reference)
		.def("SuggestLeapVelocity", &AWillowAIPawn::SuggestLeapVelocity)
		.def("PlayDying", &AWillowAIPawn::PlayDying)
		.def("Died", &AWillowAIPawn::Died)
		.def("CanPlayDeathAnim", &AWillowAIPawn::CanPlayDeathAnim)
		.def("eventTraceTouch", &AWillowAIPawn::eventTraceTouch)
		.def("DamageCanCauseHardFlinch", &AWillowAIPawn::DamageCanCauseHardFlinch)
		.def("TookDamageFromFriendly", &AWillowAIPawn::TookDamageFromFriendly)
		.def("eventTakeDamage", &AWillowAIPawn::eventTakeDamage)
		.def("IsDemigodMode", &AWillowAIPawn::IsDemigodMode)
		.def("CrushedByActor", &AWillowAIPawn::CrushedByActor)
		.def("AILevelUp", &AWillowAIPawn::AILevelUp)
		.def("GetNumLevelUps", &AWillowAIPawn::GetNumLevelUps)
		.def("HasStatusEffectForDamageType", &AWillowAIPawn::HasStatusEffectForDamageType)
		.def("GetDefaultPhysics", &AWillowAIPawn::GetDefaultPhysics)
		.def("eventLanded", &AWillowAIPawn::eventLanded)
		.def("eventPostRenderForAlways", &AWillowAIPawn::eventPostRenderForAlways)
		.def("GetCurrentProjectile", &AWillowAIPawn::GetCurrentProjectile, py::return_value_policy::reference)
		.def("GetGrenadeMod", &AWillowAIPawn::GetGrenadeMod, py::return_value_policy::reference)
		.def("AddDefaultWeapon", &AWillowAIPawn::AddDefaultWeapon)
		.def("DiscardInventory", &AWillowAIPawn::DiscardInventory)
		.def("OverrideDestroyInventoryContents", &AWillowAIPawn::OverrideDestroyInventoryContents)
		.def("PostStartingInventoryAdded", &AWillowAIPawn::PostStartingInventoryAdded)
		.def("SavedInventoryAddedFromPopulationSystem", &AWillowAIPawn::SavedInventoryAddedFromPopulationSystem)
		.def("AddDefaultInventory", &AWillowAIPawn::AddDefaultInventory)
		.def("InitializeBehaviorProviders", &AWillowAIPawn::InitializeBehaviorProviders)
		.def("eventDestroyed", &AWillowAIPawn::eventDestroyed)
		.def("BodySelectClass", &AWillowAIPawn::BodySelectClass)
		.def("ApplyBalanceDefinitionCustomizations", &AWillowAIPawn::ApplyBalanceDefinitionCustomizations)
		.def("UpdatePlayThroughMaterial", &AWillowAIPawn::UpdatePlayThroughMaterial)
		.def("UpdateClan", &AWillowAIPawn::UpdateClan)
		.def("SetupInitialDestination", &AWillowAIPawn::SetupInitialDestination)
		.def("AttachObstacleDebugComponent", &AWillowAIPawn::AttachObstacleDebugComponent)
		.def("PostSpawn", &AWillowAIPawn::PostSpawn)
		.def("UpdatePlayerMaster", &AWillowAIPawn::UpdatePlayerMaster)
		.def("PostBeginPlay", &AWillowAIPawn::PostBeginPlay)
		.def("PreBeginPlay", &AWillowAIPawn::PreBeginPlay)
		.def("SetSecondaryCollisionEnabled", &AWillowAIPawn::SetSecondaryCollisionEnabled)
		.def("eventReplicatedEvent", &AWillowAIPawn::eventReplicatedEvent)
		.def("AllowFallbackToDefaultCustomizations", &AWillowAIPawn::AllowFallbackToDefaultCustomizations)
		.def("RefreshCustomizationsOnInstanceData", &AWillowAIPawn::RefreshCustomizationsOnInstanceData)
		.def("GetCustomizableName", &AWillowAIPawn::GetCustomizableName, py::return_value_policy::reference)
		.def("GetCustomizableInstanceDataSets", &AWillowAIPawn::GetCustomizableInstanceDataSets)
		.def("GetDesiredCustomizationOfType", &AWillowAIPawn::GetDesiredCustomizationOfType, py::return_value_policy::reference)
		.def("CustomizationApplied", &AWillowAIPawn::CustomizationApplied)
		.def("IsInjured", &AWillowAIPawn::IsInjured)
		.def("IsTargetable", &AWillowAIPawn::IsTargetable)
		.def("IsStaggered", &AWillowAIPawn::IsStaggered)
		.def("RemoveAllStatusEffects", &AWillowAIPawn::RemoveAllStatusEffects)
		.def("FullyReplenishShields", &AWillowAIPawn::FullyReplenishShields)
		.def("FullyReplenishLife", &AWillowAIPawn::FullyReplenishLife)
		.def("GetMagnetismOrigin", &AWillowAIPawn::GetMagnetismOrigin, py::return_value_policy::reference)
		.def("GetMagnetismRange", &AWillowAIPawn::GetMagnetismRange)
		.def("IsAutoAimTarget", &AWillowAIPawn::IsAutoAimTarget)
		.def("SetExpLevel", &AWillowAIPawn::SetExpLevel)
		.def("SetAwesomeLevel", &AWillowAIPawn::SetAwesomeLevel)
		.def("SetGameStageForSpawnedInventory", &AWillowAIPawn::SetGameStageForSpawnedInventory)
		.def("GetExpLevel", &AWillowAIPawn::GetExpLevel)
		.def("GetAwesomeLevel", &AWillowAIPawn::GetAwesomeLevel)
		.def("GetGameStageForSpawnedInventory", &AWillowAIPawn::GetGameStageForSpawnedInventory)
		.def("GetAWillowAIPawn", &AWillowAIPawn::GetAWillowAIPawn, py::return_value_policy::reference)
		.def("CountMyMissionsByState", [](AWillowAIPawn &self , class AWillowPlayerController* WPC) { int* pyNumEligibleMissions = (int*)malloc(sizeof(int)) ; int* pyNumInProgressMissions = (int*)malloc(sizeof(int)) ; int* pyNumRedeemableMissions = (int*)malloc(sizeof(int)) ;   self.CountMyMissionsByState(WPC, pyNumEligibleMissions, pyNumInProgressMissions, pyNumRedeemableMissions); return py::make_tuple(*pyNumEligibleMissions, *pyNumInProgressMissions, *pyNumRedeemableMissions); })
		.def("GetSpawnStyleLerpInfo", [](AWillowAIPawn &self , struct FVector* FinalLoc) { float* pyTimeDelta = (float*)malloc(sizeof(float)) ;   self.GetSpawnStyleLerpInfo(FinalLoc, pyTimeDelta); return py::make_tuple(*pyTimeDelta); })
		;
	py::class_< AWillowAICranePawn, AWillowAIPawn >(m, "AWillowAICranePawn")
		.def_property("bUseCrane", [](AWillowAICranePawn &self){return self.bUseCrane;}, [](AWillowAICranePawn &self, bool value){self.bUseCrane = value ? 1 : 0;})
		.def_readwrite("CraneSplineName", &AWillowAICranePawn::CraneSplineName, py::return_value_policy::reference)
		.def_readwrite("CraneSingleBoneName", &AWillowAICranePawn::CraneSingleBoneName, py::return_value_policy::reference)
		.def_readwrite("CraneSpline", &AWillowAICranePawn::CraneSpline, py::return_value_policy::reference)
		.def_readwrite("CraneSingleBone", &AWillowAICranePawn::CraneSingleBone, py::return_value_policy::reference)
		.def_readwrite("CraneMidPointPercent", &AWillowAICranePawn::CraneMidPointPercent)
		.def_readwrite("CraneMidPointOffset", &AWillowAICranePawn::CraneMidPointOffset, py::return_value_policy::reference)
		.def_readwrite("CraneEndPointOffset", &AWillowAICranePawn::CraneEndPointOffset, py::return_value_policy::reference)
		.def_readwrite("CraneMinDot", &AWillowAICranePawn::CraneMinDot)
		.def_readwrite("CraneMinDistance", &AWillowAICranePawn::CraneMinDistance)
		.def_readwrite("CraneMaxDistance", &AWillowAICranePawn::CraneMaxDistance)
		.def_readwrite("CraneHeightScale", &AWillowAICranePawn::CraneHeightScale)
		.def_readwrite("MyDummy", &AWillowAICranePawn::MyDummy, py::return_value_policy::reference)
		.def_readwrite("GoalLocation", &AWillowAICranePawn::GoalLocation, py::return_value_policy::reference)
		.def("Behavior_Destroy", &AWillowAICranePawn::Behavior_Destroy)
		.def("DetachDummy", &AWillowAICranePawn::DetachDummy)
		.def("AttachDummy", &AWillowAICranePawn::AttachDummy)
		.def("FindDummy", &AWillowAICranePawn::FindDummy)
		.def("CanBeBaseForPawn", &AWillowAICranePawn::CanBeBaseForPawn)
		.def("ApplyBodyClassStartingValues", &AWillowAICranePawn::ApplyBodyClassStartingValues)
		.def("Died", &AWillowAICranePawn::Died)
		;
	py::class_< AWillowPlayerPawn, AWillowPawn >(m, "AWillowPlayerPawn")
		.def_property("bFirstPersonVisibilityLocked", [](AWillowPlayerPawn &self){return self.bFirstPersonVisibilityLocked;}, [](AWillowPlayerPawn &self, bool value){self.bFirstPersonVisibilityLocked = value ? 1 : 0;})
		.def_property("bInjuredIsCameraAnimPlaying", [](AWillowPlayerPawn &self){return self.bInjuredIsCameraAnimPlaying;}, [](AWillowPlayerPawn &self, bool value){self.bInjuredIsCameraAnimPlaying = value ? 1 : 0;})
		.def_property("bInjuredDeadHasRagdolled", [](AWillowPlayerPawn &self){return self.bInjuredDeadHasRagdolled;}, [](AWillowPlayerPawn &self, bool value){self.bInjuredDeadHasRagdolled = value ? 1 : 0;})
		.def_property("bAwaitingInjuredRespawn", [](AWillowPlayerPawn &self){return self.bAwaitingInjuredRespawn;}, [](AWillowPlayerPawn &self, bool value){self.bAwaitingInjuredRespawn = value ? 1 : 0;})
		.def_property("bInjuredDeadCameraActive", [](AWillowPlayerPawn &self){return self.bInjuredDeadCameraActive;}, [](AWillowPlayerPawn &self, bool value){self.bInjuredDeadCameraActive = value ? 1 : 0;})
		.def_property("bLowHealth", [](AWillowPlayerPawn &self){return self.bLowHealth;}, [](AWillowPlayerPawn &self, bool value){self.bLowHealth = value ? 1 : 0;})
		.def_property("bUpdateAfterMapCommit", [](AWillowPlayerPawn &self){return self.bUpdateAfterMapCommit;}, [](AWillowPlayerPawn &self, bool value){self.bUpdateAfterMapCommit = value ? 1 : 0;})
		.def_property("bActionSkillWasRunning", [](AWillowPlayerPawn &self){return self.bActionSkillWasRunning;}, [](AWillowPlayerPawn &self, bool value){self.bActionSkillWasRunning = value ? 1 : 0;})
		.def_property("bGrabWeaponPickup", [](AWillowPlayerPawn &self){return self.bGrabWeaponPickup;}, [](AWillowPlayerPawn &self, bool value){self.bGrabWeaponPickup = value ? 1 : 0;})
		.def_property("bWasFalling", [](AWillowPlayerPawn &self){return self.bWasFalling;}, [](AWillowPlayerPawn &self, bool value){self.bWasFalling = value ? 1 : 0;})
		.def_property("bIsProtectionTimerActive", [](AWillowPlayerPawn &self){return self.bIsProtectionTimerActive;}, [](AWillowPlayerPawn &self, bool value){self.bIsProtectionTimerActive = value ? 1 : 0;})
		.def_property("bBoundaryWarningOn", [](AWillowPlayerPawn &self){return self.bBoundaryWarningOn;}, [](AWillowPlayerPawn &self, bool value){self.bBoundaryWarningOn = value ? 1 : 0;})
		.def_property("bLastMenuMeshHidden", [](AWillowPlayerPawn &self){return self.bLastMenuMeshHidden;}, [](AWillowPlayerPawn &self, bool value){self.bLastMenuMeshHidden = value ? 1 : 0;})
		.def_property("bAdjustCameraAnimByEyeHeight", [](AWillowPlayerPawn &self){return self.bAdjustCameraAnimByEyeHeight;}, [](AWillowPlayerPawn &self, bool value){self.bAdjustCameraAnimByEyeHeight = value ? 1 : 0;})
		.def_property("bViewingThirdPersonMenu", [](AWillowPlayerPawn &self){return self.bViewingThirdPersonMenu;}, [](AWillowPlayerPawn &self, bool value){self.bViewingThirdPersonMenu = value ? 1 : 0;})
		.def_property("bViewingStatusMenu", [](AWillowPlayerPawn &self){return self.bViewingStatusMenu;}, [](AWillowPlayerPawn &self, bool value){self.bViewingStatusMenu = value ? 1 : 0;})
		.def_property("bIsAwaitingRespawn", [](AWillowPlayerPawn &self){return self.bIsAwaitingRespawn;}, [](AWillowPlayerPawn &self, bool value){self.bIsAwaitingRespawn = value ? 1 : 0;})
		.def_property("bAwaitingRespawn", [](AWillowPlayerPawn &self){return self.bAwaitingRespawn;}, [](AWillowPlayerPawn &self, bool value){self.bAwaitingRespawn = value ? 1 : 0;})
		.def_property("bAwaitingRespawnZoomInToPlayer", [](AWillowPlayerPawn &self){return self.bAwaitingRespawnZoomInToPlayer;}, [](AWillowPlayerPawn &self, bool value){self.bAwaitingRespawnZoomInToPlayer = value ? 1 : 0;})
		.def_property("bValidControllerAndPRI", [](AWillowPlayerPawn &self){return self.bValidControllerAndPRI;}, [](AWillowPlayerPawn &self, bool value){self.bValidControllerAndPRI = value ? 1 : 0;})
		.def_property("bCreatingMenuMesh", [](AWillowPlayerPawn &self){return self.bCreatingMenuMesh;}, [](AWillowPlayerPawn &self, bool value){self.bCreatingMenuMesh = value ? 1 : 0;})
		.def_property("bForceInjuredCrouch", [](AWillowPlayerPawn &self){return self.bForceInjuredCrouch;}, [](AWillowPlayerPawn &self, bool value){self.bForceInjuredCrouch = value ? 1 : 0;})
		.def_property("bCanSprintWhileInjured", [](AWillowPlayerPawn &self){return self.bCanSprintWhileInjured;}, [](AWillowPlayerPawn &self, bool value){self.bCanSprintWhileInjured = value ? 1 : 0;})
		.def_property("bInjuredPreDeathCameraActive", [](AWillowPlayerPawn &self){return self.bInjuredPreDeathCameraActive;}, [](AWillowPlayerPawn &self, bool value){self.bInjuredPreDeathCameraActive = value ? 1 : 0;})
		.def_property("bPlayedInjuredPreDeath", [](AWillowPlayerPawn &self){return self.bPlayedInjuredPreDeath;}, [](AWillowPlayerPawn &self, bool value){self.bPlayedInjuredPreDeath = value ? 1 : 0;})
		.def_property("bInjuredPreDeathRecoveryCameraActive", [](AWillowPlayerPawn &self){return self.bInjuredPreDeathRecoveryCameraActive;}, [](AWillowPlayerPawn &self, bool value){self.bInjuredPreDeathRecoveryCameraActive = value ? 1 : 0;})
		.def_property("bMaxHealthClipModifierActive", [](AWillowPlayerPawn &self){return self.bMaxHealthClipModifierActive;}, [](AWillowPlayerPawn &self, bool value){self.bMaxHealthClipModifierActive = value ? 1 : 0;})
		.def_readwrite("VfTable_IIProtectionTimer", &AWillowPlayerPawn::VfTable_IIProtectionTimer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIWeatherBehavior", &AWillowPlayerPawn::VfTable_IIWeatherBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIGFxActorMovie", &AWillowPlayerPawn::VfTable_IIGFxActorMovie, py::return_value_policy::reference)
		.def_readwrite("VfTable_IICustomizable", &AWillowPlayerPawn::VfTable_IICustomizable, py::return_value_policy::reference)
		.def_readwrite("LastCombatActionTime", &AWillowPlayerPawn::LastCombatActionTime)
		.def_readwrite("Arms", &AWillowPlayerPawn::Arms, py::return_value_policy::reference)
		.def_readwrite("ArmsMaterialInstance", &AWillowPlayerPawn::ArmsMaterialInstance, py::return_value_policy::reference)
		.def_readwrite("TeamColorForMeshMaterialInstances", &AWillowPlayerPawn::TeamColorForMeshMaterialInstances, py::return_value_policy::reference)
		.def_readwrite("IronsightsTranslation", &AWillowPlayerPawn::IronsightsTranslation, py::return_value_policy::reference)
		.def_readwrite("IronsightsRotation", &AWillowPlayerPawn::IronsightsRotation, py::return_value_policy::reference)
		.def_readwrite("LastAnimSetsArmsCount", &AWillowPlayerPawn::LastAnimSetsArmsCount)
		.def_readwrite("CustomizationHeadMaterialInstance", &AWillowPlayerPawn::CustomizationHeadMaterialInstance, py::return_value_policy::reference)
		.def_readwrite("CustomizationBodyMaterialInstance", &AWillowPlayerPawn::CustomizationBodyMaterialInstance, py::return_value_policy::reference)
		.def_readwrite("CustomizationArmsMaterialInstance", &AWillowPlayerPawn::CustomizationArmsMaterialInstance, py::return_value_policy::reference)
		.def_readwrite("HeadCustomizationData", &AWillowPlayerPawn::HeadCustomizationData, py::return_value_policy::reference)
		.def_readwrite("SkinCustomizationData", &AWillowPlayerPawn::SkinCustomizationData, py::return_value_policy::reference)
		.def_readwrite("InjuredStartTime", &AWillowPlayerPawn::InjuredStartTime)
		.def_readwrite("InjuredDeadCameraStartTime", &AWillowPlayerPawn::InjuredDeadCameraStartTime)
		.def_readwrite("InjuredDeadCameraEndTime", &AWillowPlayerPawn::InjuredDeadCameraEndTime)
		.def_readwrite("InjuredDeadRotation", &AWillowPlayerPawn::InjuredDeadRotation, py::return_value_policy::reference)
		.def_readwrite("InjuredDeadCameraLoc", &AWillowPlayerPawn::InjuredDeadCameraLoc, py::return_value_policy::reference)
		.def_readwrite("InjuredDeadCameraOffset", &AWillowPlayerPawn::InjuredDeadCameraOffset, py::return_value_policy::reference)
		.def_readwrite("InjuredViewDropCycleTime", &AWillowPlayerPawn::InjuredViewDropCycleTime)
		.def_readwrite("InjuredViewDropStrength", &AWillowPlayerPawn::InjuredViewDropStrength)
		.def_readwrite("InjuredMouseSensitivityMultiplier", &AWillowPlayerPawn::InjuredMouseSensitivityMultiplier)
		.def_readwrite("HitByVehicleTime", &AWillowPlayerPawn::HitByVehicleTime)
		.def_readwrite("TransitionLandmarkOffset", &AWillowPlayerPawn::TransitionLandmarkOffset, py::return_value_policy::reference)
		.def_readwrite("ArmsDynamicLightEnvironment", &AWillowPlayerPawn::ArmsDynamicLightEnvironment, py::return_value_policy::reference)
		.def_readwrite("LastKillTime", &AWillowPlayerPawn::LastKillTime)
		.def_readwrite("KillStreakScore", &AWillowPlayerPawn::KillStreakScore)
		.def_readwrite("ExtraMuzzleEffect_LastShot", &AWillowPlayerPawn::ExtraMuzzleEffect_LastShot, py::return_value_policy::reference)
		.def_readwrite("ShouldGetResurrected", &AWillowPlayerPawn::ShouldGetResurrected)
		.def_readwrite("ShouldGetResurrectedBaseValue", &AWillowPlayerPawn::ShouldGetResurrectedBaseValue)
		.def_readwrite("ShouldGetResurrectedModifierStack", &AWillowPlayerPawn::ShouldGetResurrectedModifierStack, py::return_value_policy::reference)
		.def_readwrite("PlayerFallDuration", &AWillowPlayerPawn::PlayerFallDuration)
		.def_readwrite("AttachedMeleeWeaponMesh", &AWillowPlayerPawn::AttachedMeleeWeaponMesh, py::return_value_policy::reference)
		.def_readwrite("MinimumHealthMaintainedByProtectionTimer", &AWillowPlayerPawn::MinimumHealthMaintainedByProtectionTimer)
		.def_readwrite("LocationFellFrom", &AWillowPlayerPawn::LocationFellFrom, py::return_value_policy::reference)
		.def_readwrite("SprintExhaustion", &AWillowPlayerPawn::SprintExhaustion)
		.def_readwrite("FriendlyFireDamageAccepted", &AWillowPlayerPawn::FriendlyFireDamageAccepted)
		.def_readwrite("FriendlyFireDamageAcceptedBaseValue", &AWillowPlayerPawn::FriendlyFireDamageAcceptedBaseValue)
		.def_readwrite("FriendlyFireDamageAcceptedModifierStack", &AWillowPlayerPawn::FriendlyFireDamageAcceptedModifierStack, py::return_value_policy::reference)
		.def_readwrite("FriendlyFireDamageMultiplier", &AWillowPlayerPawn::FriendlyFireDamageMultiplier)
		.def_readwrite("FriendlyFireDamageMultiplierBaseValue", &AWillowPlayerPawn::FriendlyFireDamageMultiplierBaseValue)
		.def_readwrite("FriendlyFireDamageMultiplierModifierStack", &AWillowPlayerPawn::FriendlyFireDamageMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("SpeedTravelInfo", &AWillowPlayerPawn::SpeedTravelInfo, py::return_value_policy::reference)
		.def_readwrite("NumWarningZones", &AWillowPlayerPawn::NumWarningZones)
		.def_readwrite("ArmUpdateLocation", &AWillowPlayerPawn::ArmUpdateLocation, py::return_value_policy::reference)
		.def_readwrite("ArmUpdateRotation", &AWillowPlayerPawn::ArmUpdateRotation, py::return_value_policy::reference)
		.def_readwrite("NextArmsLeadingRotationIndex", &AWillowPlayerPawn::NextArmsLeadingRotationIndex)
		.def_readwrite("LastResurrectReason", &AWillowPlayerPawn::LastResurrectReason)
		.def_readwrite("InjuredPreDeathState", &AWillowPlayerPawn::InjuredPreDeathState)
		.def_readwrite("LastArmsLeadingOffset", &AWillowPlayerPawn::LastArmsLeadingOffset, py::return_value_policy::reference)
		.def_readwrite("LastPlayerDiedPRI", &AWillowPlayerPawn::LastPlayerDiedPRI, py::return_value_policy::reference)
		.def_readwrite("ZoomTimeModifier", &AWillowPlayerPawn::ZoomTimeModifier)
		.def_readwrite("ZoomTimeModifierBaseValue", &AWillowPlayerPawn::ZoomTimeModifierBaseValue)
		.def_readwrite("ZoomTimeModifierModifierStack", &AWillowPlayerPawn::ZoomTimeModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("ArmsTranslationOffsetForFocusCam", &AWillowPlayerPawn::ArmsTranslationOffsetForFocusCam, py::return_value_policy::reference)
		.def_readwrite("ArmsRotationOffsetForFocusCam", &AWillowPlayerPawn::ArmsRotationOffsetForFocusCam, py::return_value_policy::reference)
		.def_readwrite("ArmsTranslationOffsetForCameraAnim", &AWillowPlayerPawn::ArmsTranslationOffsetForCameraAnim, py::return_value_policy::reference)
		.def_readwrite("ArmsRotationOffsetForCameraAnim", &AWillowPlayerPawn::ArmsRotationOffsetForCameraAnim, py::return_value_policy::reference)
		.def_readwrite("CameraAnimEyeHeight", &AWillowPlayerPawn::CameraAnimEyeHeight)
		.def_readwrite("MenuInstanceDataState", &AWillowPlayerPawn::MenuInstanceDataState, py::return_value_policy::reference)
		.def_readwrite("WeatherSystem", &AWillowPlayerPawn::WeatherSystem, py::return_value_policy::reference)
		.def_readwrite("TradeInteractionProxy", &AWillowPlayerPawn::TradeInteractionProxy, py::return_value_policy::reference)
		.def_readwrite("ResurrectStation", &AWillowPlayerPawn::ResurrectStation, py::return_value_policy::reference)
		.def_readwrite("ResurrectLocationActor", &AWillowPlayerPawn::ResurrectLocationActor, py::return_value_policy::reference)
		.def_readwrite("AwaitingRespawnTravelStation", &AWillowPlayerPawn::AwaitingRespawnTravelStation, py::return_value_policy::reference)
		.def_readwrite("AwaitingRespawnResurrectLocation", &AWillowPlayerPawn::AwaitingRespawnResurrectLocation, py::return_value_policy::reference)
		.def_readwrite("AwaitingRespawnNozzleIndex", &AWillowPlayerPawn::AwaitingRespawnNozzleIndex)
		.def_readwrite("AwaitingRespawnStartTime", &AWillowPlayerPawn::AwaitingRespawnStartTime)
		.def_readwrite("AwaitingRespawnLerpTime", &AWillowPlayerPawn::AwaitingRespawnLerpTime)
		.def_readwrite("AwaitingRespawnStartCameraLoc", &AWillowPlayerPawn::AwaitingRespawnStartCameraLoc, py::return_value_policy::reference)
		.def_readwrite("AwaitingRespawnStartCameraRot", &AWillowPlayerPawn::AwaitingRespawnStartCameraRot, py::return_value_policy::reference)
		.def_readwrite("AwaitingRespawnEndCameraLoc", &AWillowPlayerPawn::AwaitingRespawnEndCameraLoc, py::return_value_policy::reference)
		.def_readwrite("AwaitingRespawnEndCameraRot", &AWillowPlayerPawn::AwaitingRespawnEndCameraRot, py::return_value_policy::reference)
		.def_readwrite("AwaitingRespawnUnHidePlayerTime", &AWillowPlayerPawn::AwaitingRespawnUnHidePlayerTime)
		.def_readwrite("AwaitingRespawnZoomStartTime", &AWillowPlayerPawn::AwaitingRespawnZoomStartTime)
		.def_readwrite("AwaitingRespawnStartZoomIn", &AWillowPlayerPawn::AwaitingRespawnStartZoomIn)
		.def_readwrite("AwaitingRespawnHeadLoc", &AWillowPlayerPawn::AwaitingRespawnHeadLoc, py::return_value_policy::reference)
		.def_readwrite("LinkedOnDemandPackage", &AWillowPlayerPawn::LinkedOnDemandPackage, py::return_value_policy::reference)
		.def_readwrite("TemporaryNonBlockedBy", &AWillowPlayerPawn::TemporaryNonBlockedBy, py::return_value_policy::reference)
		.def_readwrite("AttachedToData", &AWillowPlayerPawn::AttachedToData, py::return_value_policy::reference)
		.def_readwrite("UseInjuredDefinitionOverride", &AWillowPlayerPawn::UseInjuredDefinitionOverride)
		.def_readwrite("MaxHealthClipModifier", &AWillowPlayerPawn::MaxHealthClipModifier, py::return_value_policy::reference)
		.def("UpdateInjuredOverrideAnimNode", &AWillowPlayerPawn::UpdateInjuredOverrideAnimNode)
		.def("ShouldCrouch", &AWillowPlayerPawn::ShouldCrouch)
		.def("eventOnAttachPlayerPawnToBase", &AWillowPlayerPawn::eventOnAttachPlayerPawnToBase)
		.def("DoAttachPlayerToBase", &AWillowPlayerPawn::DoAttachPlayerToBase)
		.def("SpawnDefaultController", &AWillowPlayerPawn::SpawnDefaultController)
		.def("SetExtraMuzzleEffect", &AWillowPlayerPawn::SetExtraMuzzleEffect)
		.def("eventUnTouch", &AWillowPlayerPawn::eventUnTouch)
		.def("GetAimDirection", &AWillowPlayerPawn::GetAimDirection, py::return_value_policy::reference)
		.def("ServerPlayerEndUseNPC", &AWillowPlayerPawn::ServerPlayerEndUseNPC)
		.def("ServerPlayerBeginUseNPC", &AWillowPlayerPawn::ServerPlayerBeginUseNPC)
		.def("Behavior_Destroy", &AWillowPlayerPawn::Behavior_Destroy)
		.def("eventStartCrouch", &AWillowPlayerPawn::eventStartCrouch)
		.def("PlayPostEnvironmentTransitionAnimation", &AWillowPlayerPawn::PlayPostEnvironmentTransitionAnimation)
		.def("PlayPreEnvironmentTransitionAnimation", &AWillowPlayerPawn::PlayPreEnvironmentTransitionAnimation)
		.def("Behavior_Killed", &AWillowPlayerPawn::Behavior_Killed)
		.def("SetDefaultStance", &AWillowPlayerPawn::SetDefaultStance)
		.def("SetRevivePct", &AWillowPlayerPawn::SetRevivePct)
		.def("GetRevivePct", &AWillowPlayerPawn::GetRevivePct)
		.def("PlayInjured", &AWillowPlayerPawn::PlayInjured)
		.def("SetUpTradeInteraction", &AWillowPlayerPawn::SetUpTradeInteraction)
		.def("DestroyTradeInteraction", &AWillowPlayerPawn::DestroyTradeInteraction)
		.def("ServerSetViewingThirdPersonMenu", &AWillowPlayerPawn::ServerSetViewingThirdPersonMenu)
		.def("OnSetViewingStatusMenu", &AWillowPlayerPawn::OnSetViewingStatusMenu)
		.def("SetViewingThirdPersonMenu", &AWillowPlayerPawn::SetViewingThirdPersonMenu)
		.def("eventGetInstanceData", &AWillowPlayerPawn::eventGetInstanceData)
		.def("PostInitBodyComposition", &AWillowPlayerPawn::PostInitBodyComposition)
		.def("DestroyWeatherSystem", &AWillowPlayerPawn::DestroyWeatherSystem)
		.def("CreateWeatherSystem", &AWillowPlayerPawn::CreateWeatherSystem)
		.def("GFx_NotifyMovieDestroy", &AWillowPlayerPawn::GFx_NotifyMovieDestroy)
		.def("GFx_NotifyMovieCreate", &AWillowPlayerPawn::GFx_NotifyMovieCreate)
		.def("GFx_GetMovieActor", &AWillowPlayerPawn::GFx_GetMovieActor, py::return_value_policy::reference)
		.def("ResetShieldPrimeCachedValues", &AWillowPlayerPawn::ResetShieldPrimeCachedValues)
		.def("eventShieldTriggered", &AWillowPlayerPawn::eventShieldTriggered)
		.def("eventPostInitAnimTree", &AWillowPlayerPawn::eventPostInitAnimTree)
		.def("ClimbLadder", &AWillowPlayerPawn::ClimbLadder)
		.def("EndClimbLadder", &AWillowPlayerPawn::EndClimbLadder)
		.def("CanGrabLadder", &AWillowPlayerPawn::CanGrabLadder)
		.def("GetThirdPersonMovie", &AWillowPlayerPawn::GetThirdPersonMovie, py::return_value_policy::reference)
		.def("SetMenuMeshVisibility", &AWillowPlayerPawn::SetMenuMeshVisibility)
		.def("SetInstanceDataMenuState", &AWillowPlayerPawn::SetInstanceDataMenuState)
		.def("InitializePawnMeshes", &AWillowPlayerPawn::InitializePawnMeshes)
		.def("GetPetActors", &AWillowPlayerPawn::GetPetActors)
		.def("PlayUIAkEvent", &AWillowPlayerPawn::PlayUIAkEvent)
		.def("SetAllegiance", &AWillowPlayerPawn::SetAllegiance)
		.def("Died", &AWillowPlayerPawn::Died)
		.def("FaceRotation", &AWillowPlayerPawn::FaceRotation)
		.def("GetMinimumHealthMaintainedByProtectionTimer", &AWillowPlayerPawn::GetMinimumHealthMaintainedByProtectionTimer)
		.def("EnableProtectionTimer", &AWillowPlayerPawn::EnableProtectionTimer)
		.def("IsProtectionTimerActive", &AWillowPlayerPawn::IsProtectionTimerActive)
		.def("CheckPhaseWalkExit", &AWillowPlayerPawn::CheckPhaseWalkExit)
		.def("GetPlayerController", &AWillowPlayerPawn::GetPlayerController, py::return_value_policy::reference)
		.def("ServerIncrementEnterVehicleStat", &AWillowPlayerPawn::ServerIncrementEnterVehicleStat)
		.def("IncrementEnterVehicleStat", &AWillowPlayerPawn::IncrementEnterVehicleStat)
		.def("eventStartDriving", &AWillowPlayerPawn::eventStartDriving)
		.def("eventGetTargetName", &AWillowPlayerPawn::eventGetTargetName)
		.def("UpdatePreferredColors", &AWillowPlayerPawn::UpdatePreferredColors)
		.def("DumpAnimSets", &AWillowPlayerPawn::DumpAnimSets)
		.def("PlayLanded", &AWillowPlayerPawn::PlayLanded)
		.def("OnPlayArmAnimation", &AWillowPlayerPawn::OnPlayArmAnimation)
		.def("StopWeaponRecoilAnim", &AWillowPlayerPawn::StopWeaponRecoilAnim)
		.def("StopFirstPersonAnimations", &AWillowPlayerPawn::StopFirstPersonAnimations)
		.def("StopFirstPersonWeaponSMD", &AWillowPlayerPawn::StopFirstPersonWeaponSMD)
		.def("GetFirstPersonBodyWeaponSMD", &AWillowPlayerPawn::GetFirstPersonBodyWeaponSMD, py::return_value_policy::reference)
		.def("PlayArmAnimation", &AWillowPlayerPawn::PlayArmAnimation)
		.def("WeaponChanged", &AWillowPlayerPawn::WeaponChanged)
		.def("ComputeIronsightsTransformOffset", &AWillowPlayerPawn::ComputeIronsightsTransformOffset)
		.def("ResetArmsLeadingRotationHistory", &AWillowPlayerPawn::ResetArmsLeadingRotationHistory)
		.def("UpdateAnimSets", &AWillowPlayerPawn::UpdateAnimSets)
		.def("eventRestoreAnimSetsToDefault", &AWillowPlayerPawn::eventRestoreAnimSetsToDefault)
		.def("TurnOffBoundaryWarning", &AWillowPlayerPawn::TurnOffBoundaryWarning)
		.def("TurnOnBoundaryWarning", &AWillowPlayerPawn::TurnOnBoundaryWarning)
		.def("ToggleBoundaryWarningOnHUD", &AWillowPlayerPawn::ToggleBoundaryWarningOnHUD)
		.def("OnMarkExitedRegion", &AWillowPlayerPawn::OnMarkExitedRegion)
		.def("ServerTellPassengersToUnlockAchievement", &AWillowPlayerPawn::ServerTellPassengersToUnlockAchievement)
		.def("OnMarkEnteredRegion", &AWillowPlayerPawn::OnMarkEnteredRegion)
		.def("ProcessFallDistance", &AWillowPlayerPawn::ProcessFallDistance)
		.def("eventFalling", &AWillowPlayerPawn::eventFalling)
		.def("eventLanded", &AWillowPlayerPawn::eventLanded)
		.def("ProtectionTimerElapsed", &AWillowPlayerPawn::ProtectionTimerElapsed)
		.def("DoJump", &AWillowPlayerPawn::DoJump)
		.def("CanJump", &AWillowPlayerPawn::CanJump)
		.def("CanContinueSprinting", &AWillowPlayerPawn::CanContinueSprinting)
		.def("IsOnGroundOrShortFall", &AWillowPlayerPawn::IsOnGroundOrShortFall)
		.def("CanSprint", &AWillowPlayerPawn::CanSprint)
		.def("DoSprint", &AWillowPlayerPawn::DoSprint)
		.def("CanStuckJump", &AWillowPlayerPawn::CanStuckJump)
		.def("HideTargetInfoOnHud", &AWillowPlayerPawn::HideTargetInfoOnHud)
		.def("GetTargetableIsHidden", &AWillowPlayerPawn::GetTargetableIsHidden)
		.def("DetachMeleeWeaponMesh", &AWillowPlayerPawn::DetachMeleeWeaponMesh)
		.def("AttachMeleeWeaponMesh", &AWillowPlayerPawn::AttachMeleeWeaponMesh)
		.def("SetWeaponSnagFailsafeTimer", &AWillowPlayerPawn::SetWeaponSnagFailsafeTimer)
		.def("OnWeaponSnag", &AWillowPlayerPawn::OnWeaponSnag)
		.def("SetBaseEyeheight", &AWillowPlayerPawn::SetBaseEyeheight)
		.def("AdjustCameraAnimByEyeHeight", &AWillowPlayerPawn::AdjustCameraAnimByEyeHeight)
		.def("GetCameraInfoFromViewModel", &AWillowPlayerPawn::GetCameraInfoFromViewModel)
		.def("TraceCameraLocation", &AWillowPlayerPawn::TraceCameraLocation)
		.def("ShowDuelClip", &AWillowPlayerPawn::ShowDuelClip)
		.def("OutOfDuelBounds", &AWillowPlayerPawn::OutOfDuelBounds)
		.def("AcceptDuelChallenge", &AWillowPlayerPawn::AcceptDuelChallenge)
		.def("IssueDuelChallenge", &AWillowPlayerPawn::IssueDuelChallenge)
		.def("HasChallengeCoolDown", &AWillowPlayerPawn::HasChallengeCoolDown)
		.def("IsDuelingEnabled", &AWillowPlayerPawn::IsDuelingEnabled)
		.def("CanChallengeToDuel", &AWillowPlayerPawn::CanChallengeToDuel)
		.def("ReceiveLocalizedMessage", &AWillowPlayerPawn::ReceiveLocalizedMessage)
		.def("GetLinearColor", &AWillowPlayerPawn::GetLinearColor, py::return_value_policy::reference)
		.def("SetTeamColorForMesh", &AWillowPlayerPawn::SetTeamColorForMesh)
		.def("SetTeamColor", &AWillowPlayerPawn::SetTeamColor)
		.def("GetAWillowPlayerPawn", &AWillowPlayerPawn::GetAWillowPlayerPawn, py::return_value_policy::reference)
		.def("eventCheckLowHealthState", &AWillowPlayerPawn::eventCheckLowHealthState)
		.def("SetArmPosition", &AWillowPlayerPawn::SetArmPosition)
		.def("eventShowAndUnlockFirstPerson", &AWillowPlayerPawn::eventShowAndUnlockFirstPerson)
		.def("HideAndLockFirstPerson", &AWillowPlayerPawn::HideAndLockFirstPerson)
		.def("RaiseFirstPersonHands", &AWillowPlayerPawn::RaiseFirstPersonHands)
		.def("LowerFirstPersonHands", &AWillowPlayerPawn::LowerFirstPersonHands)
		.def("ToggleFirstPersonWeaponVisibility", &AWillowPlayerPawn::ToggleFirstPersonWeaponVisibility)
		.def("SetFirstPersonVisibility", &AWillowPlayerPawn::SetFirstPersonVisibility)
		.def("eventSetWeaponVisibility", &AWillowPlayerPawn::eventSetWeaponVisibility)
		.def("SetOwnerVisibility", &AWillowPlayerPawn::SetOwnerVisibility)
		.def("OnNativeApplyBodyClassStartingValuesHook", &AWillowPlayerPawn::OnNativeApplyBodyClassStartingValuesHook)
		.def("ApplyBodyClassStartingValues", &AWillowPlayerPawn::ApplyBodyClassStartingValues)
		.def("PlayDamageCameraShake", &AWillowPlayerPawn::PlayDamageCameraShake)
		.def("ClientSetAwaitingRespawnValues", &AWillowPlayerPawn::ClientSetAwaitingRespawnValues)
		.def("AwaitingRespawnBeginState", &AWillowPlayerPawn::AwaitingRespawnBeginState)
		.def("DeRezzedGearFinished", &AWillowPlayerPawn::DeRezzedGearFinished)
		.def("DeRezGear", &AWillowPlayerPawn::DeRezGear)
		.def("RezGear", &AWillowPlayerPawn::RezGear)
		.def("AwaitingRespawnSetFirstPerson", &AWillowPlayerPawn::AwaitingRespawnSetFirstPerson)
		.def("AwaitingRespawnSetBehindView", &AWillowPlayerPawn::AwaitingRespawnSetBehindView)
		.def("AwaitingRespawnDisplayRespawnCost", &AWillowPlayerPawn::AwaitingRespawnDisplayRespawnCost)
		.def("AwaitingRespawnActivateNozzle", &AWillowPlayerPawn::AwaitingRespawnActivateNozzle)
		.def("PreDeathRecoveryDone", &AWillowPlayerPawn::PreDeathRecoveryDone)
		.def("StartPreDeathRecovery", &AWillowPlayerPawn::StartPreDeathRecovery)
		.def("PreDeathAnimDone", &AWillowPlayerPawn::PreDeathAnimDone)
		.def("ForceInjuredDeadState", &AWillowPlayerPawn::ForceInjuredDeadState)
		.def("InjuredDeadTermRagdoll", &AWillowPlayerPawn::InjuredDeadTermRagdoll)
		.def("InjuredDeadInitRagdoll", &AWillowPlayerPawn::InjuredDeadInitRagdoll)
		.def("StartInjuredDeathSequence", &AWillowPlayerPawn::StartInjuredDeathSequence)
		.def("StartInjuredPreDeathSequence", &AWillowPlayerPawn::StartInjuredPreDeathSequence)
		.def("GetInjuredDeadCameraView", &AWillowPlayerPawn::GetInjuredDeadCameraView)
		.def("eventEndInjuredDeadCamera", &AWillowPlayerPawn::eventEndInjuredDeadCamera)
		.def("EndInjuredCamera", &AWillowPlayerPawn::EndInjuredCamera)
		.def("SetShadowCasting", &AWillowPlayerPawn::SetShadowCasting)
		.def("CheckShouldBeAutoRevived", &AWillowPlayerPawn::CheckShouldBeAutoRevived)
		.def("ServerNotifyIWentDown", &AWillowPlayerPawn::ServerNotifyIWentDown)
		.def("SetInjuredDeadState", &AWillowPlayerPawn::SetInjuredDeadState)
		.def("SetInjuredState", &AWillowPlayerPawn::SetInjuredState)
		.def("AddKillStreakScore", &AWillowPlayerPawn::AddKillStreakScore)
		.def("KilledEnemy", &AWillowPlayerPawn::KilledEnemy)
		.def("ProcessInjuredViewRotation", &AWillowPlayerPawn::ProcessInjuredViewRotation)
		.def("ClearPlayerInjuredState", &AWillowPlayerPawn::ClearPlayerInjuredState)
		.def("SetupPlayerInjuredState", &AWillowPlayerPawn::SetupPlayerInjuredState)
		.def("SpawnTeleportEffect", &AWillowPlayerPawn::SpawnTeleportEffect)
		.def("SpawnTeleportEffectAtCurrentLocation", &AWillowPlayerPawn::SpawnTeleportEffectAtCurrentLocation)
		.def("ClientShowRespawnDialog", &AWillowPlayerPawn::ClientShowRespawnDialog)
		.def("ShowRespawnDialog", &AWillowPlayerPawn::ShowRespawnDialog)
		.def("NotifyTeleported", &AWillowPlayerPawn::NotifyTeleported)
		.def("MarkClientDLEsForUpdate", &AWillowPlayerPawn::MarkClientDLEsForUpdate)
		.def("MarkDLEsForUpdate", &AWillowPlayerPawn::MarkDLEsForUpdate)
		.def("ResurrectAtLocation", &AWillowPlayerPawn::ResurrectAtLocation)
		.def("HitByVehicle", &AWillowPlayerPawn::HitByVehicle)
		.def("eventOutsideWorldBounds", &AWillowPlayerPawn::eventOutsideWorldBounds)
		.def("eventFellOutOfWorld", &AWillowPlayerPawn::eventFellOutOfWorld)
		.def("PlacePlayerInLevel", &AWillowPlayerPawn::PlacePlayerInLevel)
		.def("ResurrectPlayer", &AWillowPlayerPawn::ResurrectPlayer)
		.def("GetBestPlayerStartPoint", &AWillowPlayerPawn::GetBestPlayerStartPoint, py::return_value_policy::reference)
		.def("GetBestPlayerPlacementPoint", &AWillowPlayerPawn::GetBestPlayerPlacementPoint, py::return_value_policy::reference)
		.def("CrushedByActor", &AWillowPlayerPawn::CrushedByActor)
		.def("CrushedBy", &AWillowPlayerPawn::CrushedBy)
		.def("ConditionalEndDuelOnHealthDepleted", &AWillowPlayerPawn::ConditionalEndDuelOnHealthDepleted)
		.def("eventHandleHealthDepleted", &AWillowPlayerPawn::eventHandleHealthDepleted)
		.def("ProcessDamageTakenSkillEvents", &AWillowPlayerPawn::ProcessDamageTakenSkillEvents)
		.def("ProcessDamageDealtSkillEvents", &AWillowPlayerPawn::ProcessDamageDealtSkillEvents)
		.def("eventTakeDamage", &AWillowPlayerPawn::eventTakeDamage)
		.def("IsDemigodMode", &AWillowPlayerPawn::IsDemigodMode)
		.def("eventReplicatedEvent", &AWillowPlayerPawn::eventReplicatedEvent)
		.def("GetNextExpLevelPoints", &AWillowPlayerPawn::GetNextExpLevelPoints)
		.def("IsVulnerableToFriendlyFire", &AWillowPlayerPawn::IsVulnerableToFriendlyFire)
		.def("AllowFallbackToDefaultCustomizations", &AWillowPlayerPawn::AllowFallbackToDefaultCustomizations)
		.def("RefreshCustomizationsOnInstanceData", &AWillowPlayerPawn::RefreshCustomizationsOnInstanceData)
		.def("GetCustomizableName", &AWillowPlayerPawn::GetCustomizableName, py::return_value_policy::reference)
		.def("GetCustomizableInstanceDataSets", &AWillowPlayerPawn::GetCustomizableInstanceDataSets)
		.def("GetDesiredCustomizationOfType", &AWillowPlayerPawn::GetDesiredCustomizationOfType, py::return_value_policy::reference)
		.def("CustomizationApplied", &AWillowPlayerPawn::CustomizationApplied)
		.def("CanReceiveStatusEffects", &AWillowPlayerPawn::CanReceiveStatusEffects)
		.def("ReactToPrimaryStatusEffect", &AWillowPlayerPawn::ReactToPrimaryStatusEffect)
		.def("SetExpLevel", &AWillowPlayerPawn::SetExpLevel)
		.def("SetAwesomeLevel", &AWillowPlayerPawn::SetAwesomeLevel)
		.def("GetGameStage", &AWillowPlayerPawn::GetGameStage)
		.def("GetExpLevelForEquip", &AWillowPlayerPawn::GetExpLevelForEquip)
		.def("GetExpLevel", &AWillowPlayerPawn::GetExpLevel)
		.def("GetAwesomeLevel", &AWillowPlayerPawn::GetAwesomeLevel)
		.def("InitRagdoll", &AWillowPlayerPawn::InitRagdoll)
		.def("OnNoLongerTargetedByAI", &AWillowPlayerPawn::OnNoLongerTargetedByAI)
		.def("OnTargetedByAI", &AWillowPlayerPawn::OnTargetedByAI)
		.def("PlayFirstPersonWeaponSMD", [](AWillowPlayerPawn &self , unsigned char ActionType, float PlayRateScale, float Duration, class AWeapon* TheWeapon) { class USpecialMoveDefinition** pyPlayedSMD = 0 ;  float ret =  self.PlayFirstPersonWeaponSMD(ActionType, PlayRateScale, Duration, TheWeapon, pyPlayedSMD); return py::make_tuple(ret, *pyPlayedSMD); })
		.def("CalcThirdPersonMenuCam", [](AWillowPlayerPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.CalcThirdPersonMenuCam(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("CalcCamera", [](AWillowPlayerPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.CalcCamera(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("eventCalcInjuredPreDeathRecoveryCamera", [](AWillowPlayerPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.eventCalcInjuredPreDeathRecoveryCamera(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("eventCalcInjuredPreDeathCamera", [](AWillowPlayerPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.eventCalcInjuredPreDeathCamera(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("eventCalcInjuredDeadCamera", [](AWillowPlayerPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.eventCalcInjuredDeadCamera(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("GetInjuredDeadCameraValues", [](AWillowPlayerPawn &self , unsigned long bPreDeath, struct FVector* ViewLocation) { float* pyCameraDistance = (float*)malloc(sizeof(float)) ; float* pyDigistructDelay = (float*)malloc(sizeof(float)) ;   self.GetInjuredDeadCameraValues(bPreDeath, ViewLocation, pyCameraDistance, pyDigistructDelay); return py::make_tuple(*pyCameraDistance, *pyDigistructDelay); })
		.def("eventCalcInjuredCamera", [](AWillowPlayerPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.eventCalcInjuredCamera(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("HasBeenIssuedDuelChallenge", [](AWillowPlayerPawn &self , class AWillowPlayerPawn* Challenger) { class AWillowVersusDuelInfo** pyDuelInfo = 0 ;  bool ret =  self.HasBeenIssuedDuelChallenge(Challenger, pyDuelInfo); return py::make_tuple(ret, *pyDuelInfo); })
		.def("HasActiveDuel", [](AWillowPlayerPawn &self ) { class AWillowVersusDuelInfo** pyDuelInfo = 0 ;  bool ret =  self.HasActiveDuel(pyDuelInfo); return py::make_tuple(ret, *pyDuelInfo); })
		.def("eventCalcAwaitingRespawnCam", [](AWillowPlayerPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.eventCalcAwaitingRespawnCam(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("AdjustDamage", [](AWillowPlayerPawn &self , class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class UIDamageCauser* DamageCauser, class UDamagePipeline* Pipeline, struct FVector* Momentum, struct FTraceHitInfo* HitInfo) { float* pyInDamage = (float*)malloc(sizeof(float)) ; float* pyDamageSeverityPercent = (float*)malloc(sizeof(float)) ;   self.AdjustDamage(InstigatedBy, HitLocation, DamageType, DamageCauser, Pipeline, pyInDamage, pyDamageSeverityPercent, Momentum, HitInfo); return py::make_tuple(*pyInDamage, *pyDamageSeverityPercent); })
		.def("ShieldAbsorbedAmmo", [](AWillowPlayerPawn &self , class UClass* DamageSource, class UWillowDamageTypeDefinition* DamageTypeDef) { float* pyDamagePercentToAbsorb = (float*)malloc(sizeof(float)) ;  bool ret =  self.ShieldAbsorbedAmmo(DamageSource, DamageTypeDef, pyDamagePercentToAbsorb); return py::make_tuple(ret, *pyDamagePercentToAbsorb); })
		;
	py::class_< UWillowPawnInteractionDefinition, UPawnInteractionDefinition >(m, "UWillowPawnInteractionDefinition")
		.def_readwrite("HUDIcon", &UWillowPawnInteractionDefinition::HUDIcon)
		.def_readwrite("HUDIconDef", &UWillowPawnInteractionDefinition::HUDIconDef, py::return_value_policy::reference)
		.def_readwrite("HUDIconDefSecondary", &UWillowPawnInteractionDefinition::HUDIconDefSecondary, py::return_value_policy::reference)
		;
	py::class_< AWillowPersonalTeleporter, ATeleporterDestination >(m, "AWillowPersonalTeleporter")
		.def_property("bActive", [](AWillowPersonalTeleporter &self){return self.bActive;}, [](AWillowPersonalTeleporter &self, bool value){self.bActive = value ? 1 : 0;})
		.def_property("bReturnTeleporter", [](AWillowPersonalTeleporter &self){return self.bReturnTeleporter;}, [](AWillowPersonalTeleporter &self, bool value){self.bReturnTeleporter = value ? 1 : 0;})
		.def_property("bPlacedInCommons", [](AWillowPersonalTeleporter &self){return self.bPlacedInCommons;}, [](AWillowPersonalTeleporter &self, bool value){self.bPlacedInCommons = value ? 1 : 0;})
		.def_readwrite("TeleportedPlayers", &AWillowPersonalTeleporter::TeleportedPlayers, py::return_value_policy::reference)
		.def_readwrite("Definition", &AWillowPersonalTeleporter::Definition, py::return_value_policy::reference)
		.def_readwrite("CylinderComponent", &AWillowPersonalTeleporter::CylinderComponent, py::return_value_policy::reference)
		.def_readwrite("TeleporterParticleSystem", &AWillowPersonalTeleporter::TeleporterParticleSystem, py::return_value_policy::reference)
		.def_readwrite("LevelName", &AWillowPersonalTeleporter::LevelName, py::return_value_policy::reference)
		.def_readwrite("TeleporterAudio", &AWillowPersonalTeleporter::TeleporterAudio, py::return_value_policy::reference)
		.def("eventDestroyed", &AWillowPersonalTeleporter::eventDestroyed)
		.def("StopAmbientSound", &AWillowPersonalTeleporter::StopAmbientSound)
		.def("PlayAmbientSound", &AWillowPersonalTeleporter::PlayAmbientSound)
		.def("eventReleaseHeldLevel", &AWillowPersonalTeleporter::eventReleaseHeldLevel)
		.def("eventHoldLevel", &AWillowPersonalTeleporter::eventHoldLevel)
		.def("eventDeactivateTeleporter", &AWillowPersonalTeleporter::eventDeactivateTeleporter)
		.def("eventActivateTeleporter", &AWillowPersonalTeleporter::eventActivateTeleporter)
		.def("PlayerLeftGame", &AWillowPersonalTeleporter::PlayerLeftGame)
		.def("PlayerEnteredGame", &AWillowPersonalTeleporter::PlayerEnteredGame)
		.def("eventTouch", &AWillowPersonalTeleporter::eventTouch)
		.def("CreateExitPoints", &AWillowPersonalTeleporter::CreateExitPoints)
		.def("SnapToGround", &AWillowPersonalTeleporter::SnapToGround)
		.def("IntializeParticleSystem", &AWillowPersonalTeleporter::IntializeParticleSystem)
		.def("InitializeFromDefinition", &AWillowPersonalTeleporter::InitializeFromDefinition)
		.def("InitializeTeleporter", &AWillowPersonalTeleporter::InitializeTeleporter)
		.def("SpawnReturnTeleporter", &AWillowPersonalTeleporter::SpawnReturnTeleporter)
		.def("PlaceTeleporter", &AWillowPersonalTeleporter::PlaceTeleporter)
		.def("ActivateTeleporterPlacedEvent", &AWillowPersonalTeleporter::ActivateTeleporterPlacedEvent)
		.def("eventReplicatedEvent", &AWillowPersonalTeleporter::eventReplicatedEvent)
		;
	py::class_< UWillowPhysicalMaterialProperty, UPhysicalMaterialPropertyBase >(m, "UWillowPhysicalMaterialProperty")
		.def_readwrite("MaterialAkSwitch", &UWillowPhysicalMaterialProperty::MaterialAkSwitch, py::return_value_policy::reference)
		.def_readwrite("DamageSurfaceType", &UWillowPhysicalMaterialProperty::DamageSurfaceType)
		.def_readwrite("ImpactResponses", &UWillowPhysicalMaterialProperty::ImpactResponses, py::return_value_policy::reference)
		.def_readwrite("DefaultResponseParameters", &UWillowPhysicalMaterialProperty::DefaultResponseParameters, py::return_value_policy::reference)
		.def_readwrite("WheelSlipModifiers", &UWillowPhysicalMaterialProperty::WheelSlipModifiers, py::return_value_policy::reference)
		.def_readwrite("ParticleSystemTemplate", &UWillowPhysicalMaterialProperty::ParticleSystemTemplate, py::return_value_policy::reference)
		.def("ApplyParametersToMaterialInstance", &UWillowPhysicalMaterialProperty::ApplyParametersToMaterialInstance)
		.def("AttachParticleSystemComponentToActor", &UWillowPhysicalMaterialProperty::AttachParticleSystemComponentToActor)
		.def("AttachEmitterToActor", &UWillowPhysicalMaterialProperty::AttachEmitterToActor)
		.def("ApplyParametersToParticleSystemComponent", &UWillowPhysicalMaterialProperty::ApplyParametersToParticleSystemComponent)
		.def("ApplyParametersToEmitter", &UWillowPhysicalMaterialProperty::ApplyParametersToEmitter)
		.def("eventPlayImpactEffect", &UWillowPhysicalMaterialProperty::eventPlayImpactEffect)
		.def("GetPhysicalMaterialSwitch", &UWillowPhysicalMaterialProperty::GetPhysicalMaterialSwitch, py::return_value_policy::reference)
		.def("StaticPlayImpactEffect", &UWillowPhysicalMaterialProperty::StaticPlayImpactEffect)
		.def("PlayImpactEffectSound", &UWillowPhysicalMaterialProperty::PlayImpactEffectSound)
		.def("FindResponseIndex", &UWillowPhysicalMaterialProperty::FindResponseIndex)
		.def("StaticHitInfoImpact", &UWillowPhysicalMaterialProperty::StaticHitInfoImpact)
		.def("StaticRigidBodyImpact", &UWillowPhysicalMaterialProperty::StaticRigidBodyImpact)
		.def("StaticTraceImpact", &UWillowPhysicalMaterialProperty::StaticTraceImpact)
		.def("IsImpactDebugEnabled", &UWillowPhysicalMaterialProperty::IsImpactDebugEnabled)
		.def("ToggleImpactDebug", &UWillowPhysicalMaterialProperty::ToggleImpactDebug)
		;
	py::class_< AWillowPickup, ADroppedPickup >(m, "AWillowPickup")
		.def_property("bPickupable", [](AWillowPickup &self){return self.bPickupable;}, [](AWillowPickup &self, bool value){self.bPickupable = value ? 1 : 0;})
		.def_property("bPickupAtRest", [](AWillowPickup &self){return self.bPickupAtRest;}, [](AWillowPickup &self, bool value){self.bPickupAtRest = value ? 1 : 0;})
		.def_property("bIsPickupAttachedToSomething", [](AWillowPickup &self){return self.bIsPickupAttachedToSomething;}, [](AWillowPickup &self, bool value){self.bIsPickupAttachedToSomething = value ? 1 : 0;})
		.def_property("bIsPopulationSystemAwareOfPickup", [](AWillowPickup &self){return self.bIsPopulationSystemAwareOfPickup;}, [](AWillowPickup &self, bool value){self.bIsPopulationSystemAwareOfPickup = value ? 1 : 0;})
		.def_property("bCanBeSavedAcrossLevelTransition", [](AWillowPickup &self){return self.bCanBeSavedAcrossLevelTransition;}, [](AWillowPickup &self, bool value){self.bCanBeSavedAcrossLevelTransition = value ? 1 : 0;})
		.def_property("bForceRBToSleep", [](AWillowPickup &self){return self.bForceRBToSleep;}, [](AWillowPickup &self, bool value){self.bForceRBToSleep = value ? 1 : 0;})
		.def_property("bIsMissionItem", [](AWillowPickup &self){return self.bIsMissionItem;}, [](AWillowPickup &self, bool value){self.bIsMissionItem = value ? 1 : 0;})
		.def_property("bIsMissionDirector", [](AWillowPickup &self){return self.bIsMissionDirector;}, [](AWillowPickup &self, bool value){self.bIsMissionDirector = value ? 1 : 0;})
		.def_property("bHasPickupParticleOffset", [](AWillowPickup &self){return self.bHasPickupParticleOffset;}, [](AWillowPickup &self, bool value){self.bHasPickupParticleOffset = value ? 1 : 0;})
		.def_property("bCostsToPickUp", [](AWillowPickup &self){return self.bCostsToPickUp;}, [](AWillowPickup &self, bool value){self.bCostsToPickUp = value ? 1 : 0;})
		.def_readwrite("VfTable_IIMission", &AWillowPickup::VfTable_IIMission, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIMissionDirector", &AWillowPickup::VfTable_IIMissionDirector, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIFocusable", &AWillowPickup::VfTable_IIFocusable, py::return_value_policy::reference)
		.def_readwrite("PickupParticleComponent", &AWillowPickup::PickupParticleComponent, py::return_value_policy::reference)
		.def_readwrite("PickupParticles", &AWillowPickup::PickupParticles, py::return_value_policy::reference)
		.def_readwrite("RBState", &AWillowPickup::RBState, py::return_value_policy::reference)
		.def_readwrite("AngErrorAccumulator", &AWillowPickup::AngErrorAccumulator)
		.def_readwrite("LifeSpanType", &AWillowPickup::LifeSpanType)
		.def_readwrite("CostsToPickUpType", &AWillowPickup::CostsToPickUpType)
		.def_readwrite("VeryShortLivedDropLifeSpan", &AWillowPickup::VeryShortLivedDropLifeSpan)
		.def_readwrite("ShortLivedDropLifeSpan", &AWillowPickup::ShortLivedDropLifeSpan)
		.def_readwrite("LongLivedDropLifeSpan", &AWillowPickup::LongLivedDropLifeSpan)
		.def_readwrite("PickupShrinkDuration", &AWillowPickup::PickupShrinkDuration)
		.def_readwrite("MaxRBAwakeTime", &AWillowPickup::MaxRBAwakeTime)
		.def_readwrite("ImpactEffectPlayCount", &AWillowPickup::ImpactEffectPlayCount)
		.def_readwrite("LastImpactEffectTime", &AWillowPickup::LastImpactEffectTime)
		.def_readwrite("MaxImpactEffectPlayCount", &AWillowPickup::MaxImpactEffectPlayCount)
		.def_readwrite("ImpactEffectDelay", &AWillowPickup::ImpactEffectDelay)
		.def_readwrite("ImpactVelocityAkRtpc", &AWillowPickup::ImpactVelocityAkRtpc, py::return_value_policy::reference)
		.def_readwrite("MissionDirectorParticle", &AWillowPickup::MissionDirectorParticle, py::return_value_policy::reference)
		.def_readwrite("InventoryRarityLevel", &AWillowPickup::InventoryRarityLevel)
		.def_readwrite("AlwaysRelevantDistanceSquared", &AWillowPickup::AlwaysRelevantDistanceSquared)
		.def_readwrite("DynamicLightEnvironment", &AWillowPickup::DynamicLightEnvironment, py::return_value_policy::reference)
		.def_readwrite("InteractionIconOverride", &AWillowPickup::InteractionIconOverride, py::return_value_policy::reference)
		.def_readwrite("CostsToPickUpAmount", &AWillowPickup::CostsToPickUpAmount)
		.def_readwrite("PickedUpByActor", &AWillowPickup::PickedUpByActor, py::return_value_policy::reference)
		.def("OnPlayerClosedMissionUI", &AWillowPickup::OnPlayerClosedMissionUI)
		.def("OnPlayerOpenedMissionUI", &AWillowPickup::OnPlayerOpenedMissionUI)
		.def("SetInteractionIcon", &AWillowPickup::SetInteractionIcon)
		.def("CanSplash", &AWillowPickup::CanSplash)
		.def("HasAnyMissionsForPlayer", &AWillowPickup::HasAnyMissionsForPlayer)
		.def("GetMissionDirectorLocation", &AWillowPickup::GetMissionDirectorLocation, py::return_value_policy::reference)
		.def("GetAllDirectorData", &AWillowPickup::GetAllDirectorData)
		.def("GetFocusScreenOffset", &AWillowPickup::GetFocusScreenOffset, py::return_value_policy::reference)
		.def("GetFocusRadius", &AWillowPickup::GetFocusRadius)
		.def("GetFocusLocation", &AWillowPickup::GetFocusLocation, py::return_value_policy::reference)
		.def("EndFocus", &AWillowPickup::EndFocus)
		.def("BeginFocus", &AWillowPickup::BeginFocus)
		.def("eventBeginShrinking", &AWillowPickup::eventBeginShrinking)
		.def("PickedUpBy", &AWillowPickup::PickedUpBy)
		.def("GiveTo", &AWillowPickup::GiveTo)
		.def("CreatePickupFromMemento", &AWillowPickup::CreatePickupFromMemento, py::return_value_policy::reference)
		.def("eventConvertFixedToRigidBody", &AWillowPickup::eventConvertFixedToRigidBody)
		.def("eventConvertRigidBodyToFixed", &AWillowPickup::eventConvertRigidBodyToFixed)
		.def("FailedPickup", &AWillowPickup::FailedPickup)
		.def("GetMemento", &AWillowPickup::GetMemento, py::return_value_policy::reference)
		.def("AdjustPickupPhysicsAndCollisionForBeingDropped", &AWillowPickup::AdjustPickupPhysicsAndCollisionForBeingDropped)
		.def("AdjustPickupPhysicsAndCollisionForBeingAttached", &AWillowPickup::AdjustPickupPhysicsAndCollisionForBeingAttached)
		.def("AttachPickupToWorldBody", &AWillowPickup::AttachPickupToWorldBody)
		.def("GetPickupableMeshActor", &AWillowPickup::GetPickupableMeshActor, py::return_value_policy::reference)
		.def("Pickupable_IsEnabled", &AWillowPickup::Pickupable_IsEnabled)
		.def("SetSaveRotation", &AWillowPickup::SetSaveRotation)
		.def("GetSaveRotation", &AWillowPickup::GetSaveRotation, py::return_value_policy::reference)
		.def("Behavior_Destroy", &AWillowPickup::Behavior_Destroy)
		.def("SetMissionMaterialParameter", &AWillowPickup::SetMissionMaterialParameter)
		.def("SetPickupability", &AWillowPickup::SetPickupability)
		.def("Behavior_ChangeUsabilityCost", &AWillowPickup::Behavior_ChangeUsabilityCost)
		.def("Behavior_ChangeUsability", &AWillowPickup::Behavior_ChangeUsability)
		.def("DestroyPickupParticles", &AWillowPickup::DestroyPickupParticles)
		.def("SpawnPickupParticles", &AWillowPickup::SpawnPickupParticles)
		.def("GetPickupParticleOffset", &AWillowPickup::GetPickupParticleOffset, py::return_value_policy::reference)
		.def("SetInteractParticles", &AWillowPickup::SetInteractParticles)
		.def("TryToSetInteractParticles", &AWillowPickup::TryToSetInteractParticles)
		.def("PickupAtRest", &AWillowPickup::PickupAtRest)
		.def("eventLanded", &AWillowPickup::eventLanded)
		.def("CheckForRigidBodySleepState", &AWillowPickup::CheckForRigidBodySleepState)
		.def("MaxRBAwakeTimer", &AWillowPickup::MaxRBAwakeTimer)
		.def("StartRigidBodyTimers", &AWillowPickup::StartRigidBodyTimers)
		.def("eventRigidBodyCollision", &AWillowPickup::eventRigidBodyCollision)
		.def("EnableRagdollCollision", &AWillowPickup::EnableRagdollCollision)
		.def("InitializePickupForRBPhysics", &AWillowPickup::InitializePickupForRBPhysics)
		.def("InventoryAssociated", &AWillowPickup::InventoryAssociated)
		.def("UpdateTouchRadiusForAutomaticallyPickedUpInventory", &AWillowPickup::UpdateTouchRadiusForAutomaticallyPickedUpInventory)
		.def("InitializeRBPhysics", &AWillowPickup::InitializeRBPhysics)
		.def("CanBeGrabbedByTheAI", &AWillowPickup::CanBeGrabbedByTheAI)
		.def("ShouldSaveInPopulationSystem", &AWillowPickup::ShouldSaveInPopulationSystem)
		.def("ShrinkPickupBeforeDestruction", &AWillowPickup::ShrinkPickupBeforeDestruction)
		.def("InitializeDropLifespan", &AWillowPickup::InitializeDropLifespan)
		.def("eventDeactivateMissionDirectorParticle", &AWillowPickup::eventDeactivateMissionDirectorParticle)
		.def("eventSetMissionDirectorParticle", &AWillowPickup::eventSetMissionDirectorParticle)
		.def("eventMissionStatusChanged", &AWillowPickup::eventMissionStatusChanged)
		.def("OnPlayerTurnedInMission", &AWillowPickup::OnPlayerTurnedInMission)
		.def("OnPlayerAcceptedMission", &AWillowPickup::OnPlayerAcceptedMission)
		.def("GetEligibleMissions", &AWillowPickup::GetEligibleMissions)
		.def("GetInProgressMissions", &AWillowPickup::GetInProgressMissions)
		.def("GetRedeemableMissions", &AWillowPickup::GetRedeemableMissions)
		.def("eventAddMissionDirective", &AWillowPickup::eventAddMissionDirective)
		.def("RegisterMissionDirector", &AWillowPickup::RegisterMissionDirector)
		.def("DenyPickupAttempt", &AWillowPickup::DenyPickupAttempt)
		.def("eventMissionReactionObjectiveComplete", &AWillowPickup::eventMissionReactionObjectiveComplete)
		.def("eventMissionReactionObjectiveCleared", &AWillowPickup::eventMissionReactionObjectiveCleared)
		.def("eventMissionReactionObjectiveUpdated", &AWillowPickup::eventMissionReactionObjectiveUpdated)
		.def("eventMissionReactionObjectiveSetChanged", &AWillowPickup::eventMissionReactionObjectiveSetChanged)
		.def("eventMissionReactionStatusChanged", &AWillowPickup::eventMissionReactionStatusChanged)
		.def("eventMissionReactionLevelLoad", &AWillowPickup::eventMissionReactionLevelLoad)
		.def("CheckRemoveWaypoint", &AWillowPickup::CheckRemoveWaypoint)
		.def("SetPickupStatusFromMissionTracker", &AWillowPickup::SetPickupStatusFromMissionTracker)
		.def("InitializeFromInventory", &AWillowPickup::InitializeFromInventory)
		.def("WaitingForDefinitionForRegisterMissionDirector", &AWillowPickup::WaitingForDefinitionForRegisterMissionDirector)
		.def("eventReplicatedEvent", &AWillowPickup::eventReplicatedEvent)
		.def("eventDestroyed", &AWillowPickup::eventDestroyed)
		.def("PostBeginPlay", &AWillowPickup::PostBeginPlay)
		;
	py::class_< UWillowPlayerInput, UPlayerInput >(m, "UWillowPlayerInput")
		.def_property("bAlwaysPlayForceFeedback", [](UWillowPlayerInput &self){return self.bAlwaysPlayForceFeedback;}, [](UWillowPlayerInput &self, bool value){self.bAlwaysPlayForceFeedback = value ? 1 : 0;})
		.def_property("bDebugBindCommandsEnabled", [](UWillowPlayerInput &self){return self.bDebugBindCommandsEnabled;}, [](UWillowPlayerInput &self, bool value){self.bDebugBindCommandsEnabled = value ? 1 : 0;})
		.def_property("bHoldDuck", [](UWillowPlayerInput &self){return self.bHoldDuck;}, [](UWillowPlayerInput &self, bool value){self.bHoldDuck = value ? 1 : 0;})
		.def_property("bBindCommandConsumedInputEvent", [](UWillowPlayerInput &self){return self.bBindCommandConsumedInputEvent;}, [](UWillowPlayerInput &self, bool value){self.bBindCommandConsumedInputEvent = value ? 1 : 0;})
		.def_property("bCanSprint", [](UWillowPlayerInput &self){return self.bCanSprint;}, [](UWillowPlayerInput &self, bool value){self.bCanSprint = value ? 1 : 0;})
		.def_property("bReviveHeld", [](UWillowPlayerInput &self){return self.bReviveHeld;}, [](UWillowPlayerInput &self, bool value){self.bReviveHeld = value ? 1 : 0;})
		.def_property("bUpdateInputContext", [](UWillowPlayerInput &self){return self.bUpdateInputContext;}, [](UWillowPlayerInput &self, bool value){self.bUpdateInputContext = value ? 1 : 0;})
		.def_property("bApplyControllerViewAccel", [](UWillowPlayerInput &self){return self.bApplyControllerViewAccel;}, [](UWillowPlayerInput &self, bool value){self.bApplyControllerViewAccel = value ? 1 : 0;})
		.def_property("bTryToSprint", [](UWillowPlayerInput &self){return self.bTryToSprint;}, [](UWillowPlayerInput &self, bool value){self.bTryToSprint = value ? 1 : 0;})
		.def_readwrite("DebugBindOverrideKeyName", &UWillowPlayerInput::DebugBindOverrideKeyName, py::return_value_policy::reference)
		.def_readwrite("ButtonHoldEventTime", &UWillowPlayerInput::ButtonHoldEventTime)
		.def_readwrite("LastDuckTime", &UWillowPlayerInput::LastDuckTime)
		.def_readwrite("ForcedDoubleClick", &UWillowPlayerInput::ForcedDoubleClick)
		.def_readwrite("RunWalkTransitionThreshold", &UWillowPlayerInput::RunWalkTransitionThreshold)
		.def_readwrite("TimeSinceLastMovement", &UWillowPlayerInput::TimeSinceLastMovement)
		.def_readwrite("CurrentInputContextName", &UWillowPlayerInput::CurrentInputContextName, py::return_value_policy::reference)
		.def_readwrite("CurrentInputContexts", &UWillowPlayerInput::CurrentInputContexts, py::return_value_policy::reference)
		.def_readwrite("Axes", &UWillowPlayerInput::Axes, py::return_value_policy::reference)
		.def_readwrite("DeviceLookAxes", &UWillowPlayerInput::DeviceLookAxes, py::return_value_policy::reference)
		.def_readwrite("Buttons", &UWillowPlayerInput::Buttons, py::return_value_policy::reference)
		.def_readwrite("LatentButtons", &UWillowPlayerInput::LatentButtons, py::return_value_policy::reference)
		.def_readwrite("PreSwitchAvailableActions", &UWillowPlayerInput::PreSwitchAvailableActions, py::return_value_policy::reference)
		.def_readwrite("ControllerSensitivityX", &UWillowPlayerInput::ControllerSensitivityX)
		.def_readwrite("ControllerSensitivityY", &UWillowPlayerInput::ControllerSensitivityY)
		.def_readwrite("ControllerPresetIndex", &UWillowPlayerInput::ControllerPresetIndex)
		.def_readwrite("KeyRebindings", &UWillowPlayerInput::KeyRebindings, py::return_value_policy::reference)
		.def_readwrite("ControllerRebindings", &UWillowPlayerInput::ControllerRebindings, py::return_value_policy::reference)
		.def_readwrite("EndCrouchOnNextForwardMovement", &UWillowPlayerInput::EndCrouchOnNextForwardMovement)
		.def("ReleasedEndDuck", &UWillowPlayerInput::ReleasedEndDuck)
		.def("PressedEndDuck", &UWillowPlayerInput::PressedEndDuck)
		.def("ToggleViewAccel", &UWillowPlayerInput::ToggleViewAccel)
		.def("SetControllerSensitivityY", &UWillowPlayerInput::SetControllerSensitivityY)
		.def("SetControllerSensitivityX", &UWillowPlayerInput::SetControllerSensitivityX)
		.def("SetControllerSensitivity", &UWillowPlayerInput::SetControllerSensitivity)
		.def("CheckForDoubleClickMove", &UWillowPlayerInput::CheckForDoubleClickMove)
		.def("Jump", &UWillowPlayerInput::Jump)
		.def("DuckReleased", &UWillowPlayerInput::DuckReleased)
		.def("DuckPressed", &UWillowPlayerInput::DuckPressed)
		.def("SprintReleased", &UWillowPlayerInput::SprintReleased)
		.def("SprintPressed", &UWillowPlayerInput::SprintPressed)
		.def("TradePressed", &UWillowPlayerInput::TradePressed)
		.def("ReviveReleased", &UWillowPlayerInput::ReviveReleased)
		.def("RevivePressed", &UWillowPlayerInput::RevivePressed)
		.def("eventPlayerInput", &UWillowPlayerInput::eventPlayerInput)
		.def("IsReviveHeld", &UWillowPlayerInput::IsReviveHeld)
		.def("InputAllowsSprint", &UWillowPlayerInput::InputAllowsSprint)
		.def("SetCurrentContextType", &UWillowPlayerInput::SetCurrentContextType)
		.def("SetInputContext", &UWillowPlayerInput::SetInputContext)
		.def("PostChangeInputContext", &UWillowPlayerInput::PostChangeInputContext)
		.def("PreChangeInputContext", &UWillowPlayerInput::PreChangeInputContext)
		.def("UpdateLatentButtons", &UWillowPlayerInput::UpdateLatentButtons)
		.def("PostProcessInput", &UWillowPlayerInput::PostProcessInput)
		.def("PreProcessInput", &UWillowPlayerInput::PreProcessInput)
		.def("InitInputSystem", &UWillowPlayerInput::InitInputSystem)
		.def("ProcessDeviceLookAxes", &UWillowPlayerInput::ProcessDeviceLookAxes)
		.def("IsActionAvailable", &UWillowPlayerInput::IsActionAvailable)
		.def("DecodeButton", &UWillowPlayerInput::DecodeButton, py::return_value_policy::reference)
		.def("SetControllerRebindings", &UWillowPlayerInput::SetControllerRebindings)
		.def("SetKeyRebindings", &UWillowPlayerInput::SetKeyRebindings)
		.def("ReleasePressedButtons", &UWillowPlayerInput::ReleasePressedButtons)
		.def("ResetButtonState", &UWillowPlayerInput::ResetButtonState)
		.def("GetKeyForAction", &UWillowPlayerInput::GetKeyForAction, py::return_value_policy::reference)
		.def("SetupInputDevices", &UWillowPlayerInput::SetupInputDevices)
		.def("WriteColumnText", [](UWillowPlayerInput &self , class AHUD* HUD, struct FString Text, int ColumnSize) { int* pyCounter = (int*)malloc(sizeof(int)) ; float* pySavedX = (float*)malloc(sizeof(float)) ; float* pySavedY = (float*)malloc(sizeof(float)) ; float* pyMaxY = (float*)malloc(sizeof(float)) ;   self.WriteColumnText(HUD, Text, ColumnSize, pyCounter, pySavedX, pySavedY, pyMaxY); return py::make_tuple(*pyCounter, *pySavedX, *pySavedY, *pyMaxY); })
		;
	py::class_< UWillowPlayerPawnDataManager, UObject >(m, "UWillowPlayerPawnDataManager")
		.def_readwrite("LoadedOnDemandPackageNames", &UWillowPlayerPawnDataManager::LoadedOnDemandPackageNames, py::return_value_policy::reference)
		.def_readwrite("LoadedOnDemandPackageReferencers", &UWillowPlayerPawnDataManager::LoadedOnDemandPackageReferencers, py::return_value_policy::reference)
		.def_readwrite("PackagesUnloadedDuringGC", &UWillowPlayerPawnDataManager::PackagesUnloadedDuringGC, py::return_value_policy::reference)
		.def_readwrite("WillowPlayerControllersAwaitingPackages", &UWillowPlayerPawnDataManager::WillowPlayerControllersAwaitingPackages, py::return_value_policy::reference)
		.def("ReferenceHasBeenApplied", &UWillowPlayerPawnDataManager::ReferenceHasBeenApplied)
		.def("SendRequiredOnDemandPackagesToClient", &UWillowPlayerPawnDataManager::SendRequiredOnDemandPackagesToClient)
		.def("InformClientsPackageUnloaded", &UWillowPlayerPawnDataManager::InformClientsPackageUnloaded)
		.def("UnloadDataPackage", &UWillowPlayerPawnDataManager::UnloadDataPackage)
		.def("InformClientsPackageLoaded", &UWillowPlayerPawnDataManager::InformClientsPackageLoaded)
		.def("LoadDataPackageAsyncNoCallback", &UWillowPlayerPawnDataManager::LoadDataPackageAsyncNoCallback)
		.def("LoadDataPackageAsync", &UWillowPlayerPawnDataManager::LoadDataPackageAsync)
		.def("LoadDataPackage", &UWillowPlayerPawnDataManager::LoadDataPackage)
		.def("FindAlreadyLoadedObject", &UWillowPlayerPawnDataManager::FindAlreadyLoadedObject, py::return_value_policy::reference)
		.def("LoadVSSVehicleDefinitionAsync", &UWillowPlayerPawnDataManager::LoadVSSVehicleDefinitionAsync)
		.def("LoadVSSVehicleDefinition", &UWillowPlayerPawnDataManager::LoadVSSVehicleDefinition, py::return_value_policy::reference)
		.def("LoadSkillTreeDefinitionAsync", &UWillowPlayerPawnDataManager::LoadSkillTreeDefinitionAsync)
		.def("LoadSkillTreeDefinition", &UWillowPlayerPawnDataManager::LoadSkillTreeDefinition, py::return_value_policy::reference)
		.def("LoadPlayerPawnDataAsync", &UWillowPlayerPawnDataManager::LoadPlayerPawnDataAsync)
		.def("LoadPlayerPawnData", &UWillowPlayerPawnDataManager::LoadPlayerPawnData, py::return_value_policy::reference)
		;
	py::class_< AWillowPlayerReplicationInfo, APlayerReplicationInfo >(m, "AWillowPlayerReplicationInfo")
		.def_property("bDuelingEnabled", [](AWillowPlayerReplicationInfo &self){return self.bDuelingEnabled;}, [](AWillowPlayerReplicationInfo &self, bool value){self.bDuelingEnabled = value ? 1 : 0;})
		.def_property("bTrainingDisabled", [](AWillowPlayerReplicationInfo &self){return self.bTrainingDisabled;}, [](AWillowPlayerReplicationInfo &self, bool value){self.bTrainingDisabled = value ? 1 : 0;})
		.def_property("bLobbyReady", [](AWillowPlayerReplicationInfo &self){return self.bLobbyReady;}, [](AWillowPlayerReplicationInfo &self, bool value){self.bLobbyReady = value ? 1 : 0;})
		.def_property("bTookDamageDuringLastDuel", [](AWillowPlayerReplicationInfo &self){return self.bTookDamageDuringLastDuel;}, [](AWillowPlayerReplicationInfo &self, bool value){self.bTookDamageDuringLastDuel = value ? 1 : 0;})
		.def_property("bSaveGameLoaded", [](AWillowPlayerReplicationInfo &self){return self.bSaveGameLoaded;}, [](AWillowPlayerReplicationInfo &self, bool value){self.bSaveGameLoaded = value ? 1 : 0;})
		.def_property("bIsSaving", [](AWillowPlayerReplicationInfo &self){return self.bIsSaving;}, [](AWillowPlayerReplicationInfo &self, bool value){self.bIsSaving = value ? 1 : 0;})
		.def_property("bIsPartyLeader", [](AWillowPlayerReplicationInfo &self){return self.bIsPartyLeader;}, [](AWillowPlayerReplicationInfo &self, bool value){self.bIsPartyLeader = value ? 1 : 0;})
		.def_property("bHasSetProfileSettings", [](AWillowPlayerReplicationInfo &self){return self.bHasSetProfileSettings;}, [](AWillowPlayerReplicationInfo &self, bool value){self.bHasSetProfileSettings = value ? 1 : 0;})
		.def_property("bIsGuest", [](AWillowPlayerReplicationInfo &self){return self.bIsGuest;}, [](AWillowPlayerReplicationInfo &self, bool value){self.bIsGuest = value ? 1 : 0;})
		.def_property("bHideOnHUDIfEnemy", [](AWillowPlayerReplicationInfo &self){return self.bHideOnHUDIfEnemy;}, [](AWillowPlayerReplicationInfo &self, bool value){self.bHideOnHUDIfEnemy = value ? 1 : 0;})
		.def_property("bHasConfirmedCharacter", [](AWillowPlayerReplicationInfo &self){return self.bHasConfirmedCharacter;}, [](AWillowPlayerReplicationInfo &self, bool value){self.bHasConfirmedCharacter = value ? 1 : 0;})
		.def_readwrite("VfTable_IINounAttributeProvider", &AWillowPlayerReplicationInfo::VfTable_IINounAttributeProvider, py::return_value_policy::reference)
		.def_readwrite("ExpLevel", &AWillowPlayerReplicationInfo::ExpLevel)
		.def_readwrite("ExpPointsNextLevelAt", &AWillowPlayerReplicationInfo::ExpPointsNextLevelAt)
		.def_readwrite("ExpPointsNextLevelAtBaseValue", &AWillowPlayerReplicationInfo::ExpPointsNextLevelAtBaseValue)
		.def_readwrite("ExpPointsNextLevelAtModifierStack", &AWillowPlayerReplicationInfo::ExpPointsNextLevelAtModifierStack, py::return_value_policy::reference)
		.def_readwrite("LevelUpCount", &AWillowPlayerReplicationInfo::LevelUpCount)
		.def_readwrite("GeneralSkillPoints", &AWillowPlayerReplicationInfo::GeneralSkillPoints)
		.def_readwrite("SpecialistSkillPoints", &AWillowPlayerReplicationInfo::SpecialistSkillPoints)
		.def_readwrite("bClassModIsBuffingTeam", &AWillowPlayerReplicationInfo::bClassModIsBuffingTeam)
		.def_readwrite("bClassModIsBuffingTeamHealth", &AWillowPlayerReplicationInfo::bClassModIsBuffingTeamHealth)
		.def_readwrite("bClassModIsBuffingTeamShields", &AWillowPlayerReplicationInfo::bClassModIsBuffingTeamShields)
		.def_readwrite("bClassModIsBuffingTeamGuns", &AWillowPlayerReplicationInfo::bClassModIsBuffingTeamGuns)
		.def_readwrite("bClassModIsBuffingTeamAmmo", &AWillowPlayerReplicationInfo::bClassModIsBuffingTeamAmmo)
		.def_readwrite("bClassModIsBuffingTeamActionSkill", &AWillowPlayerReplicationInfo::bClassModIsBuffingTeamActionSkill)
		.def_readwrite("CurrencyChangedDelegates", &AWillowPlayerReplicationInfo::CurrencyChangedDelegates, py::return_value_policy::reference)
		.def_readwrite("HealthPool", &AWillowPlayerReplicationInfo::HealthPool, py::return_value_policy::reference)
		.def_readwrite("ShieldArmor", &AWillowPlayerReplicationInfo::ShieldArmor, py::return_value_policy::reference)
		.def_readwrite("PawnLocation", &AWillowPlayerReplicationInfo::PawnLocation, py::return_value_policy::reference)
		.def_readwrite("PawnAllegiance", &AWillowPlayerReplicationInfo::PawnAllegiance, py::return_value_policy::reference)
		.def_readwrite("VehicleBuddy", &AWillowPlayerReplicationInfo::VehicleBuddy, py::return_value_policy::reference)
		.def_readwrite("InjuredState", &AWillowPlayerReplicationInfo::InjuredState)
		.def_readwrite("InjuredDeadState", &AWillowPlayerReplicationInfo::InjuredDeadState)
		.def_readwrite("bGFxMenuOpen", &AWillowPlayerReplicationInfo::bGFxMenuOpen)
		.def_readwrite("NumTrackedSkillSlotsInUse", &AWillowPlayerReplicationInfo::NumTrackedSkillSlotsInUse)
		.def_readwrite("InjuredRemainingPct", &AWillowPlayerReplicationInfo::InjuredRemainingPct)
		.def_readwrite("RevivePct", &AWillowPlayerReplicationInfo::RevivePct)
		.def_readwrite("CharacterNameIdDef", &AWillowPlayerReplicationInfo::CharacterNameIdDef, py::return_value_policy::reference)
		.def_readwrite("ClassModNamePart", &AWillowPlayerReplicationInfo::ClassModNamePart, py::return_value_policy::reference)
		.def_readwrite("HighestCompletedPlayThrough", &AWillowPlayerReplicationInfo::HighestCompletedPlayThrough)
		.def_readwrite("NumReplicatedNouns", &AWillowPlayerReplicationInfo::NumReplicatedNouns)
		.def_readwrite("NounState", &AWillowPlayerReplicationInfo::NounState, py::return_value_policy::reference)
		.def_readwrite("PrimaryColor", &AWillowPlayerReplicationInfo::PrimaryColor, py::return_value_policy::reference)
		.def_readwrite("SecondaryColor", &AWillowPlayerReplicationInfo::SecondaryColor, py::return_value_policy::reference)
		.def_readwrite("TertiaryColor", &AWillowPlayerReplicationInfo::TertiaryColor, py::return_value_policy::reference)
		.def_readwrite("StandInGear", &AWillowPlayerReplicationInfo::StandInGear, py::return_value_policy::reference)
		.def_readwrite("InitializeFor", &AWillowPlayerReplicationInfo::InitializeFor, py::return_value_policy::reference)
		.def_readwrite("NumOverpowerLevelsUnlocked", &AWillowPlayerReplicationInfo::NumOverpowerLevelsUnlocked)
		.def_readwrite("__OnCurrencyChanged__Delegate", &AWillowPlayerReplicationInfo::__OnCurrencyChanged__Delegate, py::return_value_policy::reference)
		.def("ServerMigrateUniqueId", &AWillowPlayerReplicationInfo::ServerMigrateUniqueId)
		.def("RefreshStandInGear", &AWillowPlayerReplicationInfo::RefreshStandInGear)
		.def("ServerSetStandInGear", &AWillowPlayerReplicationInfo::ServerSetStandInGear)
		.def("CopyProperties", &AWillowPlayerReplicationInfo::CopyProperties)
		.def("OnPlayerJoinLeave", &AWillowPlayerReplicationInfo::OnPlayerJoinLeave)
		.def("eventDestroyed", &AWillowPlayerReplicationInfo::eventDestroyed)
		.def("IsRemotePlayer", &AWillowPlayerReplicationInfo::IsRemotePlayer)
		.def("eventGetPrimaryPlayerPC", &AWillowPlayerReplicationInfo::eventGetPrimaryPlayerPC, py::return_value_policy::reference)
		.def("ServerUpdatePRIRemoteCustomizationArray", &AWillowPlayerReplicationInfo::ServerUpdatePRIRemoteCustomizationArray)
		.def("ClientInitiateCustomizationRequest", &AWillowPlayerReplicationInfo::ClientInitiateCustomizationRequest)
		.def("ServerInitiateCustomizationRequest", &AWillowPlayerReplicationInfo::ServerInitiateCustomizationRequest)
		.def("eventInitiateCustomizationRequest", &AWillowPlayerReplicationInfo::eventInitiateCustomizationRequest)
		.def("eventOnLevelUpCountIncremented", &AWillowPlayerReplicationInfo::eventOnLevelUpCountIncremented)
		.def("GetTrackedSkillDebugInfo", &AWillowPlayerReplicationInfo::GetTrackedSkillDebugInfo, py::return_value_policy::reference)
		.def("eventNotifySaveStatus", &AWillowPlayerReplicationInfo::eventNotifySaveStatus)
		.def("ServerSetPlayerNameAsCharName", &AWillowPlayerReplicationInfo::ServerSetPlayerNameAsCharName)
		.def("IsInvalidName", &AWillowPlayerReplicationInfo::IsInvalidName)
		.def("eventNotifyCurrencyDelegates", &AWillowPlayerReplicationInfo::eventNotifyCurrencyDelegates)
		.def("UnregisterCurrencyChangedDelegate", &AWillowPlayerReplicationInfo::UnregisterCurrencyChangedDelegate)
		.def("RegisterCurrencyChangedDelegate", &AWillowPlayerReplicationInfo::RegisterCurrencyChangedDelegate)
		.def("OnCurrencyChanged", &AWillowPlayerReplicationInfo::OnCurrencyChanged)
		.def("AddCurrencyOnHand", &AWillowPlayerReplicationInfo::AddCurrencyOnHand)
		.def("SetCurrencyOnHand", &AWillowPlayerReplicationInfo::SetCurrencyOnHand)
		.def("GetCurrencyOnHand", &AWillowPlayerReplicationInfo::GetCurrencyOnHand)
		.def("ServerDetermineViralAchievementSpread", &AWillowPlayerReplicationInfo::ServerDetermineViralAchievementSpread)
		.def("HandlePlayerJoinWithValidName", &AWillowPlayerReplicationInfo::HandlePlayerJoinWithValidName)
		.def("GetClassModName", &AWillowPlayerReplicationInfo::GetClassModName, py::return_value_policy::reference)
		.def("NotifyPlayerExpLevelUpdated", &AWillowPlayerReplicationInfo::NotifyPlayerExpLevelUpdated)
		.def("NotifyPlayerCharacterClassUpdated", &AWillowPlayerReplicationInfo::NotifyPlayerCharacterClassUpdated)
		.def("NotifyPrimaryPlayerOfNewCharacterSelection", &AWillowPlayerReplicationInfo::NotifyPrimaryPlayerOfNewCharacterSelection)
		.def("SetUniqueId", &AWillowPlayerReplicationInfo::SetUniqueId)
		.def("NotifyPlayerUidUpdated", &AWillowPlayerReplicationInfo::NotifyPlayerUidUpdated)
		.def("NotifyPlayerNameUpdated", &AWillowPlayerReplicationInfo::NotifyPlayerNameUpdated)
		.def("RunOnceClientinitialize", &AWillowPlayerReplicationInfo::RunOnceClientinitialize)
		.def("ClientInitialize", &AWillowPlayerReplicationInfo::ClientInitialize)
		.def("eventReplicatedEvent", &AWillowPlayerReplicationInfo::eventReplicatedEvent)
		.def("DisplayDebugTrackedSkills", [](AWillowPlayerReplicationInfo &self , class AHUD* HUD) { float* pyout_YL = (float*)malloc(sizeof(float)) ; float* pyout_YPos = (float*)malloc(sizeof(float)) ;   self.DisplayDebugTrackedSkills(HUD, pyout_YL, pyout_YPos); return py::make_tuple(*pyout_YL, *pyout_YPos); })
		.def("DisplayDebugAllPlayerNouns", [](AWillowPlayerReplicationInfo &self , class AHUD* HUD) { float* pyout_YL = (float*)malloc(sizeof(float)) ; float* pyout_YPos = (float*)malloc(sizeof(float)) ;   self.DisplayDebugAllPlayerNouns(HUD, pyout_YL, pyout_YPos); return py::make_tuple(*pyout_YL, *pyout_YPos); })
		.def("GetAllCurrencyOnHand", [](AWillowPlayerReplicationInfo &self ) { int* pyValues = (int*)malloc(sizeof(int)) ;   self.GetAllCurrencyOnHand(pyValues); return py::make_tuple(*pyValues); })
		.def("InitializeAllCurrencyOnHand", [](AWillowPlayerReplicationInfo &self ) { int* pyNewValues = (int*)malloc(sizeof(int)) ;   self.InitializeAllCurrencyOnHand(pyNewValues); return py::make_tuple(*pyNewValues); })
		;
	py::class_< UWillowPointLight, UPointLightComponent >(m, "UWillowPointLight")
		.def_property("bCheckFrameRate", [](UWillowPointLight &self){return self.bCheckFrameRate;}, [](UWillowPointLight &self, bool value){self.bCheckFrameRate = value ? 1 : 0;})
		.def_readwrite("HighDetailFrameTime", &UWillowPointLight::HighDetailFrameTime)
		.def_readwrite("Lifetime", &UWillowPointLight::Lifetime)
		.def_readwrite("TimeShiftIndex", &UWillowPointLight::TimeShiftIndex)
		.def_readwrite("TimeShift", &UWillowPointLight::TimeShift, py::return_value_policy::reference)
		.def("ResetLight", &UWillowPointLight::ResetLight)
		;
	py::class_< UWillowPopulationDefinition, UPopulationDefinition >(m, "UWillowPopulationDefinition")
		.def_readwrite("AIDef", &UWillowPopulationDefinition::AIDef, py::return_value_policy::reference)
		.def_readwrite("ClanDefinition", &UWillowPopulationDefinition::ClanDefinition, py::return_value_policy::reference)
		;
	py::class_< UWillowPopulationMaster, UPopulationMaster >(m, "UWillowPopulationMaster")
		.def("UpdateGRI", &UWillowPopulationMaster::UpdateGRI)
		.def("RemoveSpawnedActor", &UWillowPopulationMaster::RemoveSpawnedActor)
		.def("GetVehicleDefinitionFromVehicleSpawnStation", &UWillowPopulationMaster::GetVehicleDefinitionFromVehicleSpawnStation, py::return_value_policy::reference)
		.def("GetPooledVehicleIndexFromVehicleSpawnStation", &UWillowPopulationMaster::GetPooledVehicleIndexFromVehicleSpawnStation)
		.def("GetVehicleFromVehicleSpawnStation", &UWillowPopulationMaster::GetVehicleFromVehicleSpawnStation, py::return_value_policy::reference)
		.def("DespawnVehicleFromVehicleSpawnStation", &UWillowPopulationMaster::DespawnVehicleFromVehicleSpawnStation)
		.def("SpawnVehicleFromVehicleSpawnStation", &UWillowPopulationMaster::SpawnVehicleFromVehicleSpawnStation)
		.def("SpawnActorFromOpportunity", &UWillowPopulationMaster::SpawnActorFromOpportunity, py::return_value_policy::reference)
		;
	py::class_< AWillowPopulationOpportunityPoint, APopulationOpportunityPoint >(m, "AWillowPopulationOpportunityPoint")
		.def_readwrite("MissionObjectiveBit", &AWillowPopulationOpportunityPoint::MissionObjectiveBit)
		.def_readwrite("AssociatedChallenge", &AWillowPopulationOpportunityPoint::AssociatedChallenge, py::return_value_policy::reference)
		.def_readwrite("NumberInChallengeGroup", &AWillowPopulationOpportunityPoint::NumberInChallengeGroup)
		;
	py::class_< AWillowPopulationPoint, APopulationPoint >(m, "AWillowPopulationPoint")
		.def_property("bEditStretchy", [](AWillowPopulationPoint &self){return self.bEditStretchy;}, [](AWillowPopulationPoint &self, bool value){self.bEditStretchy = value ? 1 : 0;})
		.def_property("bMarkPointInvalidForCombat", [](AWillowPopulationPoint &self){return self.bMarkPointInvalidForCombat;}, [](AWillowPopulationPoint &self, bool value){self.bMarkPointInvalidForCombat = value ? 1 : 0;})
		.def_property("bCombatVolumeOnlyLimitsRangedAttacks", [](AWillowPopulationPoint &self){return self.bCombatVolumeOnlyLimitsRangedAttacks;}, [](AWillowPopulationPoint &self, bool value){self.bCombatVolumeOnlyLimitsRangedAttacks = value ? 1 : 0;})
		.def_readwrite("VfTable_ISpecialMoveInterface", &AWillowPopulationPoint::VfTable_ISpecialMoveInterface, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIInstanceData", &AWillowPopulationPoint::VfTable_IIInstanceData, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyCompositionInstance", &AWillowPopulationPoint::VfTable_IIBodyCompositionInstance, py::return_value_policy::reference)
		.def_readwrite("VfTable_IISimpleAnimPlayer", &AWillowPopulationPoint::VfTable_IISimpleAnimPlayer, py::return_value_policy::reference)
		.def_readwrite("VfTable_FTickableObject", &AWillowPopulationPoint::VfTable_FTickableObject, py::return_value_policy::reference)
		.def_readwrite("PointDef", &AWillowPopulationPoint::PointDef, py::return_value_policy::reference)
		.def_readwrite("PointSkelMesh", &AWillowPopulationPoint::PointSkelMesh, py::return_value_policy::reference)
		.def_readwrite("InstanceState", &AWillowPopulationPoint::InstanceState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedInstanceDataState", &AWillowPopulationPoint::ReplicatedInstanceDataState, py::return_value_policy::reference)
		.def_readwrite("SMComponent", &AWillowPopulationPoint::SMComponent, py::return_value_policy::reference)
		.def_readwrite("StretchyActor", &AWillowPopulationPoint::StretchyActor, py::return_value_policy::reference)
		.def_readwrite("StretchyOffset", &AWillowPopulationPoint::StretchyOffset, py::return_value_policy::reference)
		.def_readwrite("StretchyType", &AWillowPopulationPoint::StretchyType)
		.def_readwrite("NumberInChallengeGroup", &AWillowPopulationPoint::NumberInChallengeGroup)
		.def_readwrite("StretchyGravity", &AWillowPopulationPoint::StretchyGravity)
		.def_readwrite("SimpleAnimState", &AWillowPopulationPoint::SimpleAnimState)
		.def_readwrite("SimpleAnimInfo", &AWillowPopulationPoint::SimpleAnimInfo, py::return_value_policy::reference)
		.def_readwrite("DynamicLightEnvironment", &AWillowPopulationPoint::DynamicLightEnvironment, py::return_value_policy::reference)
		.def_readwrite("CombatVolume", &AWillowPopulationPoint::CombatVolume, py::return_value_policy::reference)
		.def_readwrite("AssociatedChallenge", &AWillowPopulationPoint::AssociatedChallenge, py::return_value_policy::reference)
		.def("ClearBodyCompositionInstance", &AWillowPopulationPoint::ClearBodyCompositionInstance)
		.def("GetBodyInfoProvider", &AWillowPopulationPoint::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("ApplyPreviewBodyComposition", &AWillowPopulationPoint::ApplyPreviewBodyComposition)
		.def("ChangeInstanceDataSwitch", &AWillowPopulationPoint::ChangeInstanceDataSwitch)
		.def("PostInitBodyComposition", &AWillowPopulationPoint::PostInitBodyComposition)
		.def("PreRemoveBodyComposition", &AWillowPopulationPoint::PreRemoveBodyComposition)
		.def("GetReplicatedInstanceDataState", &AWillowPopulationPoint::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &AWillowPopulationPoint::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &AWillowPopulationPoint::DestroyOwnedInstanceData)
		.def("eventRemoveInstanceDataObject", &AWillowPopulationPoint::eventRemoveInstanceDataObject)
		.def("eventRemoveInstanceData", &AWillowPopulationPoint::eventRemoveInstanceData)
		.def("eventGetInstanceData", &AWillowPopulationPoint::eventGetInstanceData)
		.def("SetInstanceData", &AWillowPopulationPoint::SetInstanceData)
		.def("eventServerSpecialMove_StopAny", &AWillowPopulationPoint::eventServerSpecialMove_StopAny)
		.def("eventServerSpecialMove_Stop", &AWillowPopulationPoint::eventServerSpecialMove_Stop)
		.def("eventServerSpecialMove_Queue", &AWillowPopulationPoint::eventServerSpecialMove_Queue)
		.def("eventServerSpecialMove_Play", &AWillowPopulationPoint::eventServerSpecialMove_Play)
		.def("SetReplicatedSMData", &AWillowPopulationPoint::SetReplicatedSMData)
		.def("GetDefaultRootMotionRotationMode", &AWillowPopulationPoint::GetDefaultRootMotionRotationMode)
		.def("GetDefaultRootMotionMode", &AWillowPopulationPoint::GetDefaultRootMotionMode)
		.def("GetSkelMesh", &AWillowPopulationPoint::GetSkelMesh, py::return_value_policy::reference)
		.def("GetSMComponent", &AWillowPopulationPoint::GetSMComponent, py::return_value_policy::reference)
		.def("GetActor", &AWillowPopulationPoint::GetActor, py::return_value_policy::reference)
		.def("CanSpawnFromFactory", &AWillowPopulationPoint::CanSpawnFromFactory)
		.def("GetStretchyOffset", &AWillowPopulationPoint::GetStretchyOffset, py::return_value_policy::reference)
		.def("ApplyOffsetToComponents", &AWillowPopulationPoint::ApplyOffsetToComponents)
		.def("ActorSpawned", &AWillowPopulationPoint::ActorSpawned)
		.def("GetSpawnLocation", &AWillowPopulationPoint::GetSpawnLocation, py::return_value_policy::reference)
		.def("PostBeginPlay", &AWillowPopulationPoint::PostBeginPlay)
		.def("InitializeRBPhys", &AWillowPopulationPoint::InitializeRBPhys)
		;
	py::class_< AWillowPopulationPoint_Dynamic, AWillowPopulationPoint >(m, "AWillowPopulationPoint_Dynamic")
		;
	py::class_< UWillowPopulationPointDefinition, UGBXDefinition >(m, "UWillowPopulationPointDefinition")
		.def_property("bOptimizeMemory", [](UWillowPopulationPointDefinition &self){return self.bOptimizeMemory;}, [](UWillowPopulationPointDefinition &self, bool value){self.bOptimizeMemory = value ? 1 : 0;})
		.def_property("bRemoveRootBoneScaling", [](UWillowPopulationPointDefinition &self){return self.bRemoveRootBoneScaling;}, [](UWillowPopulationPointDefinition &self, bool value){self.bRemoveRootBoneScaling = value ? 1 : 0;})
		.def_property("bDynamicLightEnvironment", [](UWillowPopulationPointDefinition &self){return self.bDynamicLightEnvironment;}, [](UWillowPopulationPointDefinition &self, bool value){self.bDynamicLightEnvironment = value ? 1 : 0;})
		.def_property("bCastShadows", [](UWillowPopulationPointDefinition &self){return self.bCastShadows;}, [](UWillowPopulationPointDefinition &self, bool value){self.bCastShadows = value ? 1 : 0;})
		.def_property("bUseBooleanEnvironmentShadowing", [](UWillowPopulationPointDefinition &self){return self.bUseBooleanEnvironmentShadowing;}, [](UWillowPopulationPointDefinition &self, bool value){self.bUseBooleanEnvironmentShadowing = value ? 1 : 0;})
		.def_property("bDynamic", [](UWillowPopulationPointDefinition &self){return self.bDynamic;}, [](UWillowPopulationPointDefinition &self, bool value){self.bDynamic = value ? 1 : 0;})
		.def_property("bSynthesizeSHLight", [](UWillowPopulationPointDefinition &self){return self.bSynthesizeSHLight;}, [](UWillowPopulationPointDefinition &self, bool value){self.bSynthesizeSHLight = value ? 1 : 0;})
		.def_property("bShadowFromEnvironment", [](UWillowPopulationPointDefinition &self){return self.bShadowFromEnvironment;}, [](UWillowPopulationPointDefinition &self, bool value){self.bShadowFromEnvironment = value ? 1 : 0;})
		.def_property("bAffectedBySmallDynamicLights", [](UWillowPopulationPointDefinition &self){return self.bAffectedBySmallDynamicLights;}, [](UWillowPopulationPointDefinition &self, bool value){self.bAffectedBySmallDynamicLights = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBodyInfoProvider", &UWillowPopulationPointDefinition::VfTable_IIBodyInfoProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIAnimProvider", &UWillowPopulationPointDefinition::VfTable_IIAnimProvider, py::return_value_policy::reference)
		.def_readwrite("AnimMap", &UWillowPopulationPointDefinition::AnimMap, py::return_value_policy::reference)
		.def_readwrite("BodyComposition", &UWillowPopulationPointDefinition::BodyComposition, py::return_value_policy::reference)
		.def_readwrite("LightingBoundsScale", &UWillowPopulationPointDefinition::LightingBoundsScale)
		.def_readwrite("NumVolumeVisibilitySamples", &UWillowPopulationPointDefinition::NumVolumeVisibilitySamples)
		.def_readwrite("ModShadowFadeoutExponent", &UWillowPopulationPointDefinition::ModShadowFadeoutExponent)
		.def_readwrite("ModShadowFadeoutTime", &UWillowPopulationPointDefinition::ModShadowFadeoutTime)
		.def_readwrite("AmbientGlow", &UWillowPopulationPointDefinition::AmbientGlow, py::return_value_policy::reference)
		.def_readwrite("AmbientShadowSourceDirection", &UWillowPopulationPointDefinition::AmbientShadowSourceDirection, py::return_value_policy::reference)
		.def_readwrite("AmbientShadowColor", &UWillowPopulationPointDefinition::AmbientShadowColor, py::return_value_policy::reference)
		.def_readwrite("DominantShadowTransitionStartDistance", &UWillowPopulationPointDefinition::DominantShadowTransitionStartDistance)
		.def_readwrite("DominantShadowTransitionEndDistance", &UWillowPopulationPointDefinition::DominantShadowTransitionEndDistance)
		.def("GetAnims", &UWillowPopulationPointDefinition::GetAnims)
		.def("GetPointAnim", &UWillowPopulationPointDefinition::GetPointAnim, py::return_value_policy::reference)
		;
	py::class_< UWillowPopulationPointEditorComponent, UPrimitiveComponent >(m, "UWillowPopulationPointEditorComponent")
		;
	py::class_< UWillowPreviewComponent, USkeletalMeshComponent >(m, "UWillowPreviewComponent")
		.def_readwrite("CurrentPawn", &UWillowPreviewComponent::CurrentPawn, py::return_value_policy::reference)
		;
	py::class_< UPerchPreviewComponent, UWillowPreviewComponent >(m, "UPerchPreviewComponent")
		.def_property("bCyclePreviewAnim", [](UPerchPreviewComponent &self){return self.bCyclePreviewAnim;}, [](UPerchPreviewComponent &self, bool value){self.bCyclePreviewAnim = value ? 1 : 0;})
		.def_property("bCyclePreviewIndex", [](UPerchPreviewComponent &self){return self.bCyclePreviewIndex;}, [](UPerchPreviewComponent &self, bool value){self.bCyclePreviewIndex = value ? 1 : 0;})
		.def_readwrite("PerchDef", &UPerchPreviewComponent::PerchDef, py::return_value_policy::reference)
		;
	py::class_< UPhysicsJumpPreviewComponent, UWillowPreviewComponent >(m, "UPhysicsJumpPreviewComponent")
		.def_property("bCyclePreviewAnim", [](UPhysicsJumpPreviewComponent &self){return self.bCyclePreviewAnim;}, [](UPhysicsJumpPreviewComponent &self, bool value){self.bCyclePreviewAnim = value ? 1 : 0;})
		.def_property("bCyclePreviewIndex", [](UPhysicsJumpPreviewComponent &self){return self.bCyclePreviewIndex;}, [](UPhysicsJumpPreviewComponent &self, bool value){self.bCyclePreviewIndex = value ? 1 : 0;})
		.def_readwrite("JumpNode", &UPhysicsJumpPreviewComponent::JumpNode, py::return_value_policy::reference)
		;
	py::class_< UWillowPopulationPointPreviewComponent, UWillowPreviewComponent >(m, "UWillowPopulationPointPreviewComponent")
		.def_property("bCyclePreviewAnim", [](UWillowPopulationPointPreviewComponent &self){return self.bCyclePreviewAnim;}, [](UWillowPopulationPointPreviewComponent &self, bool value){self.bCyclePreviewAnim = value ? 1 : 0;})
		.def_property("bCyclePreviewMesh", [](UWillowPopulationPointPreviewComponent &self){return self.bCyclePreviewMesh;}, [](UWillowPopulationPointPreviewComponent &self, bool value){self.bCyclePreviewMesh = value ? 1 : 0;})
		.def_readwrite("PointDef", &UWillowPopulationPointPreviewComponent::PointDef, py::return_value_policy::reference)
		;
	py::class_< UWillowProfileSettings, UGearboxProfileSettings >(m, "UWillowProfileSettings")
		.def("IsSetToDefaults", &UWillowProfileSettings::IsSetToDefaults)
		;
	py::class_< AWillowProjectile, AProjectile >(m, "AWillowProjectile")
		.def_property("bIsProjectileDisabled", [](AWillowProjectile &self){return self.bIsProjectileDisabled;}, [](AWillowProjectile &self, bool value){self.bIsProjectileDisabled = value ? 1 : 0;})
		.def_property("bDamageReentrantFlag", [](AWillowProjectile &self){return self.bDamageReentrantFlag;}, [](AWillowProjectile &self, bool value){self.bDamageReentrantFlag = value ? 1 : 0;})
		.def_property("bIsProjectileAttached", [](AWillowProjectile &self){return self.bIsProjectileAttached;}, [](AWillowProjectile &self, bool value){self.bIsProjectileAttached = value ? 1 : 0;})
		.def_property("bSuppressExplosionFX", [](AWillowProjectile &self){return self.bSuppressExplosionFX;}, [](AWillowProjectile &self, bool value){self.bSuppressExplosionFX = value ? 1 : 0;})
		.def_property("bAutoAimTarget", [](AWillowProjectile &self){return self.bAutoAimTarget;}, [](AWillowProjectile &self, bool value){self.bAutoAimTarget = value ? 1 : 0;})
		.def_property("bWaitForEffects", [](AWillowProjectile &self){return self.bWaitForEffects;}, [](AWillowProjectile &self, bool value){self.bWaitForEffects = value ? 1 : 0;})
		.def_property("bExploded", [](AWillowProjectile &self){return self.bExploded;}, [](AWillowProjectile &self, bool value){self.bExploded = value ? 1 : 0;})
		.def_property("bWideCheck", [](AWillowProjectile &self){return self.bWideCheck;}, [](AWillowProjectile &self, bool value){self.bWideCheck = value ? 1 : 0;})
		.def_property("bCheckProjectileLight", [](AWillowProjectile &self){return self.bCheckProjectileLight;}, [](AWillowProjectile &self, bool value){self.bCheckProjectileLight = value ? 1 : 0;})
		.def_property("bDLEInitialized", [](AWillowProjectile &self){return self.bDLEInitialized;}, [](AWillowProjectile &self, bool value){self.bDLEInitialized = value ? 1 : 0;})
		.def_property("bIsHoming", [](AWillowProjectile &self){return self.bIsHoming;}, [](AWillowProjectile &self, bool value){self.bIsHoming = value ? 1 : 0;})
		.def_property("RetryFindHomingTarget", [](AWillowProjectile &self){return self.RetryFindHomingTarget;}, [](AWillowProjectile &self, bool value){self.RetryFindHomingTarget = value ? 1 : 0;})
		.def_property("RetryNotInstigator", [](AWillowProjectile &self){return self.RetryNotInstigator;}, [](AWillowProjectile &self, bool value){self.RetryNotInstigator = value ? 1 : 0;})
		.def_property("RetryIgnoreFOVZTest", [](AWillowProjectile &self){return self.RetryIgnoreFOVZTest;}, [](AWillowProjectile &self, bool value){self.RetryIgnoreFOVZTest = value ? 1 : 0;})
		.def_property("RetryBestForwardTarget", [](AWillowProjectile &self){return self.RetryBestForwardTarget;}, [](AWillowProjectile &self, bool value){self.RetryBestForwardTarget = value ? 1 : 0;})
		.def_property("RetryUniqueHomingTarget", [](AWillowProjectile &self){return self.RetryUniqueHomingTarget;}, [](AWillowProjectile &self, bool value){self.RetryUniqueHomingTarget = value ? 1 : 0;})
		.def_property("bWithinCurrentlyPursuedNodeAlertRadius", [](AWillowProjectile &self){return self.bWithinCurrentlyPursuedNodeAlertRadius;}, [](AWillowProjectile &self, bool value){self.bWithinCurrentlyPursuedNodeAlertRadius = value ? 1 : 0;})
		.def_property("bTakenDamage", [](AWillowProjectile &self){return self.bTakenDamage;}, [](AWillowProjectile &self, bool value){self.bTakenDamage = value ? 1 : 0;})
		.def_property("bOvercharged", [](AWillowProjectile &self){return self.bOvercharged;}, [](AWillowProjectile &self, bool value){self.bOvercharged = value ? 1 : 0;})
		.def_property("bCauseRadiusDamageToInstigator", [](AWillowProjectile &self){return self.bCauseRadiusDamageToInstigator;}, [](AWillowProjectile &self, bool value){self.bCauseRadiusDamageToInstigator = value ? 1 : 0;})
		.def_property("bIsStickyGrenade", [](AWillowProjectile &self){return self.bIsStickyGrenade;}, [](AWillowProjectile &self, bool value){self.bIsStickyGrenade = value ? 1 : 0;})
		.def_property("bIsChildOfSticky", [](AWillowProjectile &self){return self.bIsChildOfSticky;}, [](AWillowProjectile &self, bool value){self.bIsChildOfSticky = value ? 1 : 0;})
		.def_property("bBeingHealed", [](AWillowProjectile &self){return self.bBeingHealed;}, [](AWillowProjectile &self, bool value){self.bBeingHealed = value ? 1 : 0;})
		.def_property("WantsToLevelOffTrajectory", [](AWillowProjectile &self){return self.WantsToLevelOffTrajectory;}, [](AWillowProjectile &self, bool value){self.WantsToLevelOffTrajectory = value ? 1 : 0;})
		.def_property("bActiveObstacle", [](AWillowProjectile &self){return self.bActiveObstacle;}, [](AWillowProjectile &self, bool value){self.bActiveObstacle = value ? 1 : 0;})
		.def_readwrite("VfTable_IICounterBehavior", &AWillowProjectile::VfTable_IICounterBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IITimerBehavior", &AWillowProjectile::VfTable_IITimerBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIKilledBehavior", &AWillowProjectile::VfTable_IIKilledBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIProjectileBehavior", &AWillowProjectile::VfTable_IIProjectileBehavior, py::return_value_policy::reference)
		.def_readwrite("VfTable_IITargetable", &AWillowProjectile::VfTable_IITargetable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIInstanceData", &AWillowProjectile::VfTable_IIInstanceData, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBalancedActor", &AWillowProjectile::VfTable_IIBalancedActor, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIAttachableActor", &AWillowProjectile::VfTable_IIAttachableActor, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyCompositionInstance", &AWillowProjectile::VfTable_IIBodyCompositionInstance, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorConsumer", &AWillowProjectile::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDrunkenProjectile", &AWillowProjectile::VfTable_IIDrunkenProjectile, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIGearLikenessConsumer", &AWillowProjectile::VfTable_IIGearLikenessConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDynamicObstacle", &AWillowProjectile::VfTable_IIDynamicObstacle, py::return_value_policy::reference)
		.def_readwrite("Definition", &AWillowProjectile::Definition, py::return_value_policy::reference)
		.def_readwrite("MyDamageTypeDefinition", &AWillowProjectile::MyDamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("MyExplosionDefinition", &AWillowProjectile::MyExplosionDefinition, py::return_value_policy::reference)
		.def_readwrite("GearLikenessActor", &AWillowProjectile::GearLikenessActor, py::return_value_policy::reference)
		.def_readwrite("Allegiance", &AWillowProjectile::Allegiance, py::return_value_policy::reference)
		.def_readwrite("AllegianceParent", &AWillowProjectile::AllegianceParent, py::return_value_policy::reference)
		.def_readwrite("AllegianceChildren", &AWillowProjectile::AllegianceChildren, py::return_value_policy::reference)
		.def_readwrite("LastRBImpactEffectTime", &AWillowProjectile::LastRBImpactEffectTime)
		.def_readwrite("MyMeshClone", &AWillowProjectile::MyMeshClone, py::return_value_policy::reference)
		.def_readwrite("ProjectileTimers", &AWillowProjectile::ProjectileTimers, py::return_value_policy::reference)
		.def_readwrite("ProjectileCounters", &AWillowProjectile::ProjectileCounters, py::return_value_policy::reference)
		.def_readwrite("ActiveBehaviorSets", &AWillowProjectile::ActiveBehaviorSets, py::return_value_policy::reference)
		.def_readwrite("AttachmentNormal", &AWillowProjectile::AttachmentNormal, py::return_value_policy::reference)
		.def_readwrite("ProjEffects", &AWillowProjectile::ProjEffects, py::return_value_policy::reference)
		.def_readwrite("OverchargedEffect", &AWillowProjectile::OverchargedEffect, py::return_value_policy::reference)
		.def_readwrite("EffectiveInFlightEffects", &AWillowProjectile::EffectiveInFlightEffects, py::return_value_policy::reference)
		.def_readwrite("AutoAimProfile", &AWillowProjectile::AutoAimProfile)
		.def_readwrite("HomingTargetType", &AWillowProjectile::HomingTargetType)
		.def_readwrite("PayloadType", &AWillowProjectile::PayloadType)
		.def_readwrite("AccelRate", &AWillowProjectile::AccelRate)
		.def_readwrite("ExpLevel", &AWillowProjectile::ExpLevel)
		.def_readwrite("FiringOwnerStatsID", &AWillowProjectile::FiringOwnerStatsID)
		.def_readwrite("FiringWeaponStatsID", &AWillowProjectile::FiringWeaponStatsID)
		.def_readwrite("FiringWeaponMode", &AWillowProjectile::FiringWeaponMode)
		.def_readwrite("CheckRadius", &AWillowProjectile::CheckRadius)
		.def_readwrite("ProjectileLightClass", &AWillowProjectile::ProjectileLightClass, py::return_value_policy::reference)
		.def_readwrite("ProjectileLight", &AWillowProjectile::ProjectileLight, py::return_value_policy::reference)
		.def_readwrite("LightEnvironment", &AWillowProjectile::LightEnvironment, py::return_value_policy::reference)
		.def_readwrite("HomingActor", &AWillowProjectile::HomingActor, py::return_value_policy::reference)
		.def_readwrite("HomingLocation", &AWillowProjectile::HomingLocation, py::return_value_policy::reference)
		.def_readwrite("HomingRotationOffset", &AWillowProjectile::HomingRotationOffset, py::return_value_policy::reference)
		.def_readwrite("LastHomingPollLocation", &AWillowProjectile::LastHomingPollLocation, py::return_value_policy::reference)
		.def_readwrite("HomingTargetComponentIndex", &AWillowProjectile::HomingTargetComponentIndex)
		.def_readwrite("RetryTargetSearchRange", &AWillowProjectile::RetryTargetSearchRange)
		.def_readwrite("RetryTargetSearchFOVAngle", &AWillowProjectile::RetryTargetSearchFOVAngle)
		.def_readwrite("NextRetryFindHomingTargetTime", &AWillowProjectile::NextRetryFindHomingTargetTime)
		.def_readwrite("RetryFindTargetDelay", &AWillowProjectile::RetryFindTargetDelay)
		.def_readwrite("CustomGravityScaling", &AWillowProjectile::CustomGravityScaling)
		.def_readwrite("CurrentlyPursuedNode", &AWillowProjectile::CurrentlyPursuedNode, py::return_value_policy::reference)
		.def_readwrite("InstanceDataState", &AWillowProjectile::InstanceDataState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedInstanceDataState", &AWillowProjectile::ReplicatedInstanceDataState, py::return_value_policy::reference)
		.def_readwrite("HitActors", &AWillowProjectile::HitActors, py::return_value_policy::reference)
		.def_readwrite("BulletListenerComponent", &AWillowProjectile::BulletListenerComponent, py::return_value_policy::reference)
		.def_readwrite("LastHomingRadius", &AWillowProjectile::LastHomingRadius)
		.def_readwrite("InitialRBImpulse", &AWillowProjectile::InitialRBImpulse, py::return_value_policy::reference)
		.def_readwrite("Wave_LastOffset", &AWillowProjectile::Wave_LastOffset, py::return_value_policy::reference)
		.def_readwrite("ProjectileWaveMotion", &AWillowProjectile::ProjectileWaveMotion, py::return_value_policy::reference)
		.def_readwrite("ExtraNonBlockingActor", &AWillowProjectile::ExtraNonBlockingActor, py::return_value_policy::reference)
		.def_readwrite("ProxActor", &AWillowProjectile::ProxActor, py::return_value_policy::reference)
		.def_readwrite("BaseStatusEffectChanceModifier", &AWillowProjectile::BaseStatusEffectChanceModifier)
		.def_readwrite("BaseStatusEffectChanceModifierBaseValue", &AWillowProjectile::BaseStatusEffectChanceModifierBaseValue)
		.def_readwrite("BaseStatusEffectChanceModifierModifierStack", &AWillowProjectile::BaseStatusEffectChanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("StatusEffectChanceModifier", &AWillowProjectile::StatusEffectChanceModifier)
		.def_readwrite("StatusEffectChanceModifierBaseValue", &AWillowProjectile::StatusEffectChanceModifierBaseValue)
		.def_readwrite("StatusEffectChanceModifierModifierStack", &AWillowProjectile::StatusEffectChanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("StatusEffectSpreadTimeIntervalModifier", &AWillowProjectile::StatusEffectSpreadTimeIntervalModifier)
		.def_readwrite("StatusEffectSpreadTimeIntervalModifierBaseValue", &AWillowProjectile::StatusEffectSpreadTimeIntervalModifierBaseValue)
		.def_readwrite("StatusEffectSpreadTimeIntervalModifierModifierStack", &AWillowProjectile::StatusEffectSpreadTimeIntervalModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("StatusEffectDamage", &AWillowProjectile::StatusEffectDamage)
		.def_readwrite("StatusEffectDamageBaseValue", &AWillowProjectile::StatusEffectDamageBaseValue)
		.def_readwrite("StatusEffectDamageModifierStack", &AWillowProjectile::StatusEffectDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("InstigatorSelfDamageScale", &AWillowProjectile::InstigatorSelfDamageScale)
		.def_readwrite("InstigatorSelfDamageScaleBaseValue", &AWillowProjectile::InstigatorSelfDamageScaleBaseValue)
		.def_readwrite("InstigatorSelfDamageScaleModifierStack", &AWillowProjectile::InstigatorSelfDamageScaleModifierStack, py::return_value_policy::reference)
		.def_readwrite("OverrideStatusEffectBaseChance", &AWillowProjectile::OverrideStatusEffectBaseChance)
		.def_readwrite("OverrideStatusEffectChance", &AWillowProjectile::OverrideStatusEffectChance)
		.def_readwrite("OverrideStatusEffectDamage", &AWillowProjectile::OverrideStatusEffectDamage)
		.def_readwrite("OverrideInstigatorSelfDamageScale", &AWillowProjectile::OverrideInstigatorSelfDamageScale)
		.def_readwrite("CreatedTime", &AWillowProjectile::CreatedTime)
		.def_readwrite("SpeedMultiplier", &AWillowProjectile::SpeedMultiplier)
		.def_readwrite("SpeedMultiplierBaseValue", &AWillowProjectile::SpeedMultiplierBaseValue)
		.def_readwrite("SpeedMultiplierModifierStack", &AWillowProjectile::SpeedMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("SecondsBeforeConsideringRemoval", &AWillowProjectile::SecondsBeforeConsideringRemoval)
		.def_readwrite("SecondsBetweenRemovalAttempts", &AWillowProjectile::SecondsBetweenRemovalAttempts)
		.def_readwrite("StickyIsAttachedTo", &AWillowProjectile::StickyIsAttachedTo, py::return_value_policy::reference)
		.def_readwrite("CollisionRadiusBeforeSticky", &AWillowProjectile::CollisionRadiusBeforeSticky)
		.def_readwrite("FuseTime", &AWillowProjectile::FuseTime)
		.def_readwrite("FuseTimeBaseValue", &AWillowProjectile::FuseTimeBaseValue)
		.def_readwrite("FuseTimeModifierStack", &AWillowProjectile::FuseTimeModifierStack, py::return_value_policy::reference)
		.def_readwrite("NumberOfChildProjectiles", &AWillowProjectile::NumberOfChildProjectiles)
		.def_readwrite("NumberOfChildProjectilesBaseValue", &AWillowProjectile::NumberOfChildProjectilesBaseValue)
		.def_readwrite("NumberOfChildProjectilesModifierStack", &AWillowProjectile::NumberOfChildProjectilesModifierStack, py::return_value_policy::reference)
		.def_readwrite("ConsumerHandle", &AWillowProjectile::ConsumerHandle, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorConsumerState", &AWillowProjectile::ReplicatedBehaviorConsumerState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorEvent", &AWillowProjectile::ReplicatedBehaviorEvent, py::return_value_policy::reference)
		.def_readwrite("LightProjMgr", &AWillowProjectile::LightProjMgr, py::return_value_policy::reference)
		.def_readwrite("DrunkenRandomNumberSeed", &AWillowProjectile::DrunkenRandomNumberSeed)
		.def_readwrite("MovementComponent", &AWillowProjectile::MovementComponent, py::return_value_policy::reference)
		.def_readwrite("DesiredWorldZForLeveling", &AWillowProjectile::DesiredWorldZForLeveling)
		.def_readwrite("LevelingTurnSpeed", &AWillowProjectile::LevelingTurnSpeed)
		.def_readwrite("TakingDamageFromType", &AWillowProjectile::TakingDamageFromType, py::return_value_policy::reference)
		.def_readwrite("TakingDamageFromDamageCauser", &AWillowProjectile::TakingDamageFromDamageCauser, py::return_value_policy::reference)
		.def_readwrite("TakingDamageFromInstigator", &AWillowProjectile::TakingDamageFromInstigator, py::return_value_policy::reference)
		.def_readwrite("BehaviorHitNormal", &AWillowProjectile::BehaviorHitNormal, py::return_value_policy::reference)
		.def("GetLightProjMgrFor", &AWillowProjectile::GetLightProjMgrFor, py::return_value_policy::reference)
		.def("CheckAIAvoidance", &AWillowProjectile::CheckAIAvoidance)
		.def("GetObstacleInfo", &AWillowProjectile::GetObstacleInfo)
		.def("GetObstacleActor", &AWillowProjectile::GetObstacleActor, py::return_value_policy::reference)
		.def("GetMagnetData", &AWillowProjectile::GetMagnetData)
		.def("SetObstacleVelocity", &AWillowProjectile::SetObstacleVelocity)
		.def("CanAvoidObstacle", &AWillowProjectile::CanAvoidObstacle)
		.def("CanAvoidObstacles", &AWillowProjectile::CanAvoidObstacles)
		.def("SetObstacleActive", &AWillowProjectile::SetObstacleActive)
		.def("IsObstacleActive", &AWillowProjectile::IsObstacleActive)
		.def("ShouldRefreshLikenessOf", &AWillowProjectile::ShouldRefreshLikenessOf)
		.def("AssumeLikenessOf", &AWillowProjectile::AssumeLikenessOf)
		.def("SetTargetLocation", &AWillowProjectile::SetTargetLocation)
		.def("SetHomingTarget", &AWillowProjectile::SetHomingTarget)
		.def("FindHomingTarget", &AWillowProjectile::FindHomingTarget)
		.def("SetPatsy", &AWillowProjectile::SetPatsy)
		.def("GetPatsy", &AWillowProjectile::GetPatsy, py::return_value_policy::reference)
		.def("IsBeingHealed", &AWillowProjectile::IsBeingHealed)
		.def("SetBeingHealed", &AWillowProjectile::SetBeingHealed)
		.def("SetDrunkenRandomNumberSeed", &AWillowProjectile::SetDrunkenRandomNumberSeed)
		.def("GetTerminalVelocity", &AWillowProjectile::GetTerminalVelocity)
		.def("IsLevelingNow", &AWillowProjectile::IsLevelingNow)
		.def("Behavior_TagPayloadType", &AWillowProjectile::Behavior_TagPayloadType)
		.def("Behavior_LevelOffTrajectory", &AWillowProjectile::Behavior_LevelOffTrajectory)
		.def("Behavior_SetExplosionDefinition", &AWillowProjectile::Behavior_SetExplosionDefinition)
		.def("Behavior_SetDamageTypeDefinition", &AWillowProjectile::Behavior_SetDamageTypeDefinition)
		.def("Behavior_SetStickyGrenade", &AWillowProjectile::Behavior_SetStickyGrenade)
		.def("eventOnKilledEnemy", &AWillowProjectile::eventOnKilledEnemy)
		.def("eventOnKilledFriendly", &AWillowProjectile::eventOnKilledFriendly)
		.def("eventOnKilledNeutral", &AWillowProjectile::eventOnKilledNeutral)
		.def("eventOnDamagedNeutral", &AWillowProjectile::eventOnDamagedNeutral)
		.def("eventOnDamagedFriendly", &AWillowProjectile::eventOnDamagedFriendly)
		.def("eventOnDamagedEnemy", &AWillowProjectile::eventOnDamagedEnemy)
		.def("SetSpeed", &AWillowProjectile::SetSpeed)
		.def("ClearBodyCompositionInstance", &AWillowProjectile::ClearBodyCompositionInstance)
		.def("GetBodyInfoProvider", &AWillowProjectile::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("ApplyPreviewBodyComposition", &AWillowProjectile::ApplyPreviewBodyComposition)
		.def("ChangeInstanceDataSwitch", &AWillowProjectile::ChangeInstanceDataSwitch)
		.def("PostInitBodyComposition", &AWillowProjectile::PostInitBodyComposition)
		.def("PreRemoveBodyComposition", &AWillowProjectile::PreRemoveBodyComposition)
		.def("GetInstigatorSelfDamageScale", &AWillowProjectile::GetInstigatorSelfDamageScale)
		.def("GetFireIntervalChanceModifier", &AWillowProjectile::GetFireIntervalChanceModifier)
		.def("GetStatusEffectBaseChanceModifier", &AWillowProjectile::GetStatusEffectBaseChanceModifier)
		.def("GetStatusEffectChanceModifier", &AWillowProjectile::GetStatusEffectChanceModifier)
		.def("GetStatusEffectBaseDamage", &AWillowProjectile::GetStatusEffectBaseDamage)
		.def("GetBalancedActorTypeIdentifier", &AWillowProjectile::GetBalancedActorTypeIdentifier, py::return_value_policy::reference)
		.def("SetExpLevel", &AWillowProjectile::SetExpLevel)
		.def("SetAwesomeLevel", &AWillowProjectile::SetAwesomeLevel)
		.def("SetGameStage", &AWillowProjectile::SetGameStage)
		.def("GetExpLevelForEquip", &AWillowProjectile::GetExpLevelForEquip)
		.def("GetExpLevel", &AWillowProjectile::GetExpLevel)
		.def("GetAwesomeLevel", &AWillowProjectile::GetAwesomeLevel)
		.def("GetGameStage", &AWillowProjectile::GetGameStage)
		.def("GetPlayerProjectileLevel", &AWillowProjectile::GetPlayerProjectileLevel)
		.def("SetMorphNodeWeight", &AWillowProjectile::SetMorphNodeWeight)
		.def("GetProjectileDefinition", &AWillowProjectile::GetProjectileDefinition, py::return_value_policy::reference)
		.def("InitializeRBPhysics", &AWillowProjectile::InitializeRBPhysics)
		.def("Behavior_RegisterTargetable", &AWillowProjectile::Behavior_RegisterTargetable)
		.def("eventTraceTouch", &AWillowProjectile::eventTraceTouch)
		.def("SetInfoBarVisibility", &AWillowProjectile::SetInfoBarVisibility)
		.def("HideTargetInfoOnHud", &AWillowProjectile::HideTargetInfoOnHud)
		.def("IsChampion", &AWillowProjectile::IsChampion)
		.def("IsBoss", &AWillowProjectile::IsBoss)
		.def("eventGetTargetName", &AWillowProjectile::eventGetTargetName)
		.def("DoesTargetableTakeDamage", &AWillowProjectile::DoesTargetableTakeDamage)
		.def("DisplayParentInfo", &AWillowProjectile::DisplayParentInfo)
		.def("GetAllBarInfo", &AWillowProjectile::GetAllBarInfo)
		.def("GetTargetableActor", &AWillowProjectile::GetTargetableActor, py::return_value_policy::reference)
		.def("Behavior_SetCanTarget", &AWillowProjectile::Behavior_SetCanTarget)
		.def("ShowSelfAsTarget", &AWillowProjectile::ShowSelfAsTarget)
		.def("GetDamageVector", &AWillowProjectile::GetDamageVector, py::return_value_policy::reference)
		.def("GetRigidBodyMesh", &AWillowProjectile::GetRigidBodyMesh, py::return_value_policy::reference)
		.def("eventGetInstanceData", &AWillowProjectile::eventGetInstanceData)
		.def("eventRemoveInstanceDataObject", &AWillowProjectile::eventRemoveInstanceDataObject)
		.def("eventRemoveInstanceData", &AWillowProjectile::eventRemoveInstanceData)
		.def("SetInstanceData", &AWillowProjectile::SetInstanceData)
		.def("Behavior_Killed", &AWillowProjectile::Behavior_Killed)
		.def("Behavior_CauseRadiusDamage", &AWillowProjectile::Behavior_CauseRadiusDamage)
		.def("Behavior_CauseDamage", &AWillowProjectile::Behavior_CauseDamage)
		.def("SetProximity", &AWillowProjectile::SetProximity)
		.def("SetHomingRotationOffset", &AWillowProjectile::SetHomingRotationOffset)
		.def("GetHomingTargetLocation", &AWillowProjectile::GetHomingTargetLocation, py::return_value_policy::reference)
		.def("GetHomingTargetByType", &AWillowProjectile::GetHomingTargetByType)
		.def("WasAttachedToActor", &AWillowProjectile::WasAttachedToActor)
		.def("GetAttachedToActor", &AWillowProjectile::GetAttachedToActor, py::return_value_policy::reference)
		.def("GetAttachmentNormal", &AWillowProjectile::GetAttachmentNormal, py::return_value_policy::reference)
		.def("AttachToActor", &AWillowProjectile::AttachToActor)
		.def("IsAttached", &AWillowProjectile::IsAttached)
		.def("DetonateProjectile", &AWillowProjectile::DetonateProjectile)
		.def("Detonate", &AWillowProjectile::Detonate)
		.def("GetNextDetonationDelta", &AWillowProjectile::GetNextDetonationDelta)
		.def("ResetDetonationDelta", &AWillowProjectile::ResetDetonationDelta)
		.def("SetVelocity", &AWillowProjectile::SetVelocity)
		.def("GetVelocity", &AWillowProjectile::GetVelocity)
		.def("SetTimerState", &AWillowProjectile::SetTimerState)
		.def("GetTimerState", &AWillowProjectile::GetTimerState)
		.def("GetTimeSeconds", &AWillowProjectile::GetTimeSeconds)
		.def("SetCounterState", &AWillowProjectile::SetCounterState)
		.def("GetCounterState", &AWillowProjectile::GetCounterState)
		.def("EvaluateAttributeInitialization", &AWillowProjectile::EvaluateAttributeInitialization)
		.def("GetMesh", &AWillowProjectile::GetMesh, py::return_value_policy::reference)
		.def("FindAnimNode", &AWillowProjectile::FindAnimNode, py::return_value_policy::reference)
		.def("SetRotationRate", &AWillowProjectile::SetRotationRate)
		.def("GetCollisionRadius", &AWillowProjectile::GetCollisionRadius)
		.def("IsInTemporalField", &AWillowProjectile::IsInTemporalField, py::return_value_policy::reference)
		.def("GetHomingTarget", &AWillowProjectile::GetHomingTarget, py::return_value_policy::reference)
		.def("InitStats", &AWillowProjectile::InitStats)
		.def("MyOnParticleSystemFinished", &AWillowProjectile::MyOnParticleSystemFinished)
		.def("Destroyed", &AWillowProjectile::Destroyed)
		.def("GetReplicatedInstanceDataState", &AWillowProjectile::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &AWillowProjectile::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &AWillowProjectile::DestroyOwnedInstanceData)
		.def("HideProjectile", &AWillowProjectile::HideProjectile)
		.def("eventTornOff", &AWillowProjectile::eventTornOff)
		.def("ShutDown", &AWillowProjectile::ShutDown)
		.def("UnregisterBehaviorConsumerTimer", &AWillowProjectile::UnregisterBehaviorConsumerTimer)
		.def("DisableProjectile", &AWillowProjectile::DisableProjectile)
		.def("GetImpactInfoForTouch", &AWillowProjectile::GetImpactInfoForTouch)
		.def("eventApplyOverchargedEffect", &AWillowProjectile::eventApplyOverchargedEffect)
		.def("eventSpawnFlightEffects", &AWillowProjectile::eventSpawnFlightEffects)
		.def("Explode", &AWillowProjectile::Explode)
		.def("SpawnClientExplosion", &AWillowProjectile::SpawnClientExplosion)
		.def("TryAwardExperience", &AWillowProjectile::TryAwardExperience)
		.def("TakeRadiusDamage", &AWillowProjectile::TakeRadiusDamage)
		.def("eventTakeDamage", &AWillowProjectile::eventTakeDamage)
		.def("HandleOnHitEvents", &AWillowProjectile::HandleOnHitEvents)
		.def("eventLanded", &AWillowProjectile::eventLanded)
		.def("DoHitWall", &AWillowProjectile::DoHitWall)
		.def("HitWall", &AWillowProjectile::HitWall)
		.def("AttemptReflection", &AWillowProjectile::AttemptReflection)
		.def("eventProximityTouch", &AWillowProjectile::eventProximityTouch)
		.def("ProcessTouch", &AWillowProjectile::ProcessTouch)
		.def("HandleTouch", &AWillowProjectile::HandleTouch)
		.def("eventTouch", &AWillowProjectile::eventTouch)
		.def("IsBlockedByWillowInteractiveObject", &AWillowProjectile::IsBlockedByWillowInteractiveObject)
		.def("AvoidCollision", &AWillowProjectile::AvoidCollision)
		.def("DrawHomingDebugTracer", &AWillowProjectile::DrawHomingDebugTracer)
		.def("GetCircularHomingAcceleration", &AWillowProjectile::GetCircularHomingAcceleration, py::return_value_policy::reference)
		.def("OnCounterEvent", &AWillowProjectile::OnCounterEvent)
		.def("eventOnTimerEvent", &AWillowProjectile::eventOnTimerEvent)
		.def("eventSetInitialState", &AWillowProjectile::eventSetInitialState)
		.def("eventCreateProjectileLight", &AWillowProjectile::eventCreateProjectileLight)
		.def("InitWithVelocity", &AWillowProjectile::InitWithVelocity)
		.def("InitWithWaveMotion", &AWillowProjectile::InitWithWaveMotion)
		.def("SetVelocityAndAcceleration", &AWillowProjectile::SetVelocityAndAcceleration)
		.def("Init", &AWillowProjectile::Init)
		.def("InitializeExplosion", &AWillowProjectile::InitializeExplosion)
		.def("eventInitializeDamageType", &AWillowProjectile::eventInitializeDamageType)
		.def("UpdateAndDestroyNonVisibleActorInTimer", &AWillowProjectile::UpdateAndDestroyNonVisibleActorInTimer)
		.def("DoOnSpawn", &AWillowProjectile::DoOnSpawn)
		.def("RefreshGearLikenessComponents", &AWillowProjectile::RefreshGearLikenessComponents)
		.def("GetGearLiknessActor", &AWillowProjectile::GetGearLiknessActor, py::return_value_policy::reference)
		.def("SetGearLikenessActor", &AWillowProjectile::SetGearLikenessActor)
		.def("eventProjectileGetBehaviorContext", &AWillowProjectile::eventProjectileGetBehaviorContext, py::return_value_policy::reference)
		.def("InitializeFromDefinition", &AWillowProjectile::InitializeFromDefinition)
		.def("eventReplicatedEvent", &AWillowProjectile::eventReplicatedEvent)
		.def("eventRigidBodyCollision", &AWillowProjectile::eventRigidBodyCollision)
		.def("GetInstigatingController", &AWillowProjectile::GetInstigatingController, py::return_value_policy::reference)
		.def("PostBeginPlay", &AWillowProjectile::PostBeginPlay)
		.def("GetHitDataForActor", &AWillowProjectile::GetHitDataForActor)
		.def("AddHitActor", &AWillowProjectile::AddHitActor)
		.def("IsHomingDebugEnabled", &AWillowProjectile::IsHomingDebugEnabled)
		.def("ToggleHomingDebug", &AWillowProjectile::ToggleHomingDebug)
		.def("CalcTrajectoryByTime", &AWillowProjectile::CalcTrajectoryByTime)
		.def("GetTrajectoryOffset", &AWillowProjectile::GetTrajectoryOffset, py::return_value_policy::reference)
		.def("GetBehaviorConsumerHandle", &AWillowProjectile::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("IsTargetableProxy", &AWillowProjectile::IsTargetableProxy)
		.def("GetAutoAimProfile", &AWillowProjectile::GetAutoAimProfile)
		.def("GetMagnetismRange", &AWillowProjectile::GetMagnetismRange)
		.def("GetMagnetismOrigin", &AWillowProjectile::GetMagnetismOrigin, py::return_value_policy::reference)
		.def("IsAutoAimTarget", &AWillowProjectile::IsAutoAimTarget)
		.def("GetTargetingModifier", &AWillowProjectile::GetTargetingModifier)
		.def("HasHomingTargetComponents", &AWillowProjectile::HasHomingTargetComponents)
		.def("IsValidHomingTarget", &AWillowProjectile::IsValidHomingTarget)
		.def("IsTargetable", &AWillowProjectile::IsTargetable)
		.def("GetTargetableIsHidden", &AWillowProjectile::GetTargetableIsHidden)
		.def("CanSnapZoom", &AWillowProjectile::CanSnapZoom)
		.def("GetSnapLocation", &AWillowProjectile::GetSnapLocation, py::return_value_policy::reference)
		.def("GetTargetableLocation", &AWillowProjectile::GetTargetableLocation, py::return_value_policy::reference)
		.def("GetOpinion", &AWillowProjectile::GetOpinion)
		.def("SetAllegiance", &AWillowProjectile::SetAllegiance)
		.def("GetDefaultAllegiance", &AWillowProjectile::GetDefaultAllegiance, py::return_value_policy::reference)
		.def("GetObjectAllegiance", &AWillowProjectile::GetObjectAllegiance, py::return_value_policy::reference)
		.def("IsSameAllegiance", &AWillowProjectile::IsSameAllegiance)
		.def("IsNeutral", &AWillowProjectile::IsNeutral)
		.def("IsFriendly", &AWillowProjectile::IsFriendly)
		.def("IsEnemy", &AWillowProjectile::IsEnemy)
		.def("GetExpInfo", [](AWillowProjectile &self ) { int* pyExpLevelValue = (int*)malloc(sizeof(int)) ;   self.GetExpInfo(pyExpLevelValue); return py::make_tuple(*pyExpLevelValue); })
		.def("CalcCamera", [](AWillowProjectile &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.CalcCamera(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("SetDamageSurfaceTypeImpactDataAndBoneIndex", [](AWillowProjectile &self , class AActor* Other, struct FVector HitLocation, struct FVector HitNormal, struct FBehaviorParameters* EventData, struct FImpactInfo* ImpactData) { unsigned char* pyDamageSurfaceType = (unsigned char*)malloc(sizeof(unsigned char)) ; int* pyBoneIndex = (int*)malloc(sizeof(int)) ;   self.SetDamageSurfaceTypeImpactDataAndBoneIndex(Other, HitLocation, HitNormal, EventData, pyDamageSurfaceType, ImpactData, pyBoneIndex); return py::make_tuple(*pyDamageSurfaceType, *pyBoneIndex); })
		.def("ShouldIgnoreTouchFrom", [](AWillowProjectile &self , class AActor* TouchedActor, class UPrimitiveComponent* TouchedComponent, unsigned long bIsProximityTouch) { unsigned char* pybTurnTouchIntoHitWall = (unsigned char*)malloc(sizeof(unsigned char)) ;  bool ret =  self.ShouldIgnoreTouchFrom(TouchedActor, TouchedComponent, bIsProximityTouch, pybTurnTouchIntoHitWall); return py::make_tuple(ret, *pybTurnTouchIntoHitWall); })
		.def("CalcTrajectoryAtActor", [](AWillowProjectile &self , class AActor* Source, class AActor* Target, struct FTrajectoryData Data, unsigned long bCanDebug, struct FVector* OutVelocity) { float* pyOutTime = (float*)malloc(sizeof(float)) ; float* pyOutGravity = (float*)malloc(sizeof(float)) ;   self.CalcTrajectoryAtActor(Source, Target, Data, bCanDebug, pyOutTime, pyOutGravity, OutVelocity); return py::make_tuple(*pyOutTime, *pyOutGravity); })
		.def("CalcTrajectory", [](AWillowProjectile &self , struct FVector StartLoc, struct FVector EndLoc, float LeapSpeed, float LeapAngle, struct FVector* OutVelocity) { float* pyOutTime = (float*)malloc(sizeof(float)) ; float* pyOutGravity = (float*)malloc(sizeof(float)) ;   self.CalcTrajectory(StartLoc, EndLoc, LeapSpeed, LeapAngle, pyOutTime, pyOutGravity, OutVelocity); return py::make_tuple(*pyOutTime, *pyOutGravity); })
		;
	py::class_< AWillowServerSideProjectile, AWillowProjectile >(m, "AWillowServerSideProjectile")
		.def_readwrite("ServerLocation", &AWillowServerSideProjectile::ServerLocation, py::return_value_policy::reference)
		.def_readwrite("ServerVelocity", &AWillowServerSideProjectile::ServerVelocity, py::return_value_policy::reference)
		.def_readwrite("ServerAcceleration", &AWillowServerSideProjectile::ServerAcceleration, py::return_value_policy::reference)
		;
	py::class_< UWillowPursuitGrid, UObject >(m, "UWillowPursuitGrid")
		.def_readwrite("PursuitNodes", &UWillowPursuitGrid::PursuitNodes, py::return_value_policy::reference)
		.def_readwrite("GridName", &UWillowPursuitGrid::GridName, py::return_value_policy::reference)
		.def("InitializeFromDefinition", &UWillowPursuitGrid::InitializeFromDefinition)
		;
	py::class_< UWillowPursuitGridDefinition, UGBXDefinition >(m, "UWillowPursuitGridDefinition")
		.def_readwrite("PursuitNodes", &UWillowPursuitGridDefinition::PursuitNodes, py::return_value_policy::reference)
		.def_readwrite("GridName", &UWillowPursuitGridDefinition::GridName, py::return_value_policy::reference)
		;
	py::class_< UWillowRegionDefinition, URegionDefinition >(m, "UWillowRegionDefinition")
		.def_readwrite("DlcExpansion", &UWillowRegionDefinition::DlcExpansion, py::return_value_policy::reference)
		.def("SetAwesomeLevelOverride", &UWillowRegionDefinition::SetAwesomeLevelOverride)
		.def("SetGameStageOverride", &UWillowRegionDefinition::SetGameStageOverride)
		.def("GetDefaultRegionGameStage", [](UWillowRegionDefinition &self ) { int* pyMinGameStage = (int*)malloc(sizeof(int)) ; int* pyMaxGameStage = (int*)malloc(sizeof(int)) ; int* pyAwesomeLevel = (int*)malloc(sizeof(int)) ; int* pyGameStageIncreaseOverPlayerLevel = (int*)malloc(sizeof(int)) ;  bool ret =  self.GetDefaultRegionGameStage(pyMinGameStage, pyMaxGameStage, pyAwesomeLevel, pyGameStageIncreaseOverPlayerLevel); return py::make_tuple(ret, *pyMinGameStage, *pyMaxGameStage, *pyAwesomeLevel, *pyGameStageIncreaseOverPlayerLevel); })
		.def("TestRegionGameStage", [](UWillowRegionDefinition &self , unsigned long bDefaultGameStage) { int* pyGameStage = (int*)malloc(sizeof(int)) ; int* pyAwesomeLevel = (int*)malloc(sizeof(int)) ;  bool ret =  self.TestRegionGameStage(bDefaultGameStage, pyGameStage, pyAwesomeLevel); return py::make_tuple(ret, *pyGameStage, *pyAwesomeLevel); })
		.def("GetRegionGameStage", [](UWillowRegionDefinition &self , unsigned long bDefaultGameStage) { int* pyGameStage = (int*)malloc(sizeof(int)) ; int* pyAwesomeLevel = (int*)malloc(sizeof(int)) ;  bool ret =  self.GetRegionGameStage(bDefaultGameStage, pyGameStage, pyAwesomeLevel); return py::make_tuple(ret, *pyGameStage, *pyAwesomeLevel); })
		;
	py::class_< AWillowReplicatedAmbientSound, AActor >(m, "AWillowReplicatedAmbientSound")
		.def_property("bEnabled", [](AWillowReplicatedAmbientSound &self){return self.bEnabled;}, [](AWillowReplicatedAmbientSound &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_property("bUseSeamlessStop", [](AWillowReplicatedAmbientSound &self){return self.bUseSeamlessStop;}, [](AWillowReplicatedAmbientSound &self, bool value){self.bUseSeamlessStop = value ? 1 : 0;})
		.def_property("bRegistered", [](AWillowReplicatedAmbientSound &self){return self.bRegistered;}, [](AWillowReplicatedAmbientSound &self, bool value){self.bRegistered = value ? 1 : 0;})
		.def_readwrite("AkEvent", &AWillowReplicatedAmbientSound::AkEvent, py::return_value_policy::reference)
		.def_readwrite("AdditionalSources", &AWillowReplicatedAmbientSound::AdditionalSources, py::return_value_policy::reference)
		.def_readwrite("StopAkEvent", &AWillowReplicatedAmbientSound::StopAkEvent, py::return_value_policy::reference)
		.def_readwrite("SeamlessPlayingInfo", &AWillowReplicatedAmbientSound::SeamlessPlayingInfo, py::return_value_policy::reference)
		.def_readwrite("Group", &AWillowReplicatedAmbientSound::Group, py::return_value_policy::reference)
		.def("OnToggle", &AWillowReplicatedAmbientSound::OnToggle)
		;
	py::class_< UWillowReplicatedAmbientSoundRenderingComponent, UPrimitiveComponent >(m, "UWillowReplicatedAmbientSoundRenderingComponent")
		;
	py::class_< AWillowReplicatedAmbientSoundSource, ANote >(m, "AWillowReplicatedAmbientSoundSource")
		;
	py::class_< UWillowSavedMove, USavedMove >(m, "UWillowSavedMove")
		.def_property("bSprint", [](UWillowSavedMove &self){return self.bSprint;}, [](UWillowSavedMove &self, bool value){self.bSprint = value ? 1 : 0;})
		.def("SetFlags", &UWillowSavedMove::SetFlags)
		.def("CompressedFlags", &UWillowSavedMove::CompressedFlags)
		.def("SetMoveFor", &UWillowSavedMove::SetMoveFor)
		.def("CanCombineWith", &UWillowSavedMove::CanCombineWith)
		.def("Clear", &UWillowSavedMove::Clear)
		;
	py::class_< UWillowSaveGameManager, UObject >(m, "UWillowSaveGameManager")
		.def_readwrite("VfTable_FTickableObject", &UWillowSaveGameManager::VfTable_FTickableObject, py::return_value_policy::reference)
		.def_readwrite("PendingLoadInfo", &UWillowSaveGameManager::PendingLoadInfo, py::return_value_policy::reference)
		.def_readwrite("CrossTitleLoadInfo", &UWillowSaveGameManager::CrossTitleLoadInfo, py::return_value_policy::reference)
		.def_readwrite("LastLoadedSaveGameData", &UWillowSaveGameManager::LastLoadedSaveGameData, py::return_value_policy::reference)
		.def_readwrite("LastLoadedFileTimeStamp", &UWillowSaveGameManager::LastLoadedFileTimeStamp, py::return_value_policy::reference)
		.def_readwrite("LastLoadedFilePath", &UWillowSaveGameManager::LastLoadedFilePath, py::return_value_policy::reference)
		.def_readwrite("SaveDataLoadedFromList", &UWillowSaveGameManager::SaveDataLoadedFromList, py::return_value_policy::reference)
		.def_readwrite("SaveGameTitle", &UWillowSaveGameManager::SaveGameTitle, py::return_value_policy::reference)
		.def_readwrite("GraveyardTitle", &UWillowSaveGameManager::GraveyardTitle, py::return_value_policy::reference)
		.def_readwrite("GraveyardSubTitle", &UWillowSaveGameManager::GraveyardSubTitle, py::return_value_policy::reference)
		.def_readwrite("LevelStr", &UWillowSaveGameManager::LevelStr, py::return_value_policy::reference)
		.def_readwrite("SaveStartTime", &UWillowSaveGameManager::SaveStartTime)
		.def_readwrite("CorruptSaveDataString", &UWillowSaveGameManager::CorruptSaveDataString, py::return_value_policy::reference)
		.def_readwrite("UnloadableDlcSaveDataString", &UWillowSaveGameManager::UnloadableDlcSaveDataString, py::return_value_policy::reference)
		.def_readwrite("DateFormat", &UWillowSaveGameManager::DateFormat, py::return_value_policy::reference)
		.def_readwrite("TimeFormat", &UWillowSaveGameManager::TimeFormat, py::return_value_policy::reference)
		.def_readwrite("SingularSecond", &UWillowSaveGameManager::SingularSecond, py::return_value_policy::reference)
		.def_readwrite("PluralSeconds", &UWillowSaveGameManager::PluralSeconds, py::return_value_policy::reference)
		.def_readwrite("SingularMinute", &UWillowSaveGameManager::SingularMinute, py::return_value_policy::reference)
		.def_readwrite("PluralMinutes", &UWillowSaveGameManager::PluralMinutes, py::return_value_policy::reference)
		.def_readwrite("SingularHour", &UWillowSaveGameManager::SingularHour, py::return_value_policy::reference)
		.def_readwrite("PluralHours", &UWillowSaveGameManager::PluralHours, py::return_value_policy::reference)
		.def_readwrite("SingularDay", &UWillowSaveGameManager::SingularDay, py::return_value_policy::reference)
		.def_readwrite("PluralDays", &UWillowSaveGameManager::PluralDays, py::return_value_policy::reference)
		.def_readwrite("__OnDeleteComplete__Delegate", &UWillowSaveGameManager::__OnDeleteComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnValidationComplete__Delegate", &UWillowSaveGameManager::__OnValidationComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSaveComplete__Delegate", &UWillowSaveGameManager::__OnSaveComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnLoadComplete__Delegate", &UWillowSaveGameManager::__OnLoadComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnListLoadComplete__Delegate", &UWillowSaveGameManager::__OnListLoadComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnWillowOneLoadComplete__Delegate", &UWillowSaveGameManager::__OnWillowOneLoadComplete__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnCountNumCrossTitleSaveGamesComplete__Delegate", &UWillowSaveGameManager::__OnCountNumCrossTitleSaveGamesComplete__Delegate, py::return_value_policy::reference)
		.def("DestroyAllRegisteredDelegates", &UWillowSaveGameManager::DestroyAllRegisteredDelegates)
		.def("AttemptProfileWriteIfNecessary", &UWillowSaveGameManager::AttemptProfileWriteIfNecessary)
		.def("NotifyProfileWriteComplete", &UWillowSaveGameManager::NotifyProfileWriteComplete)
		.def("SetNeedsProfileWrite", &UWillowSaveGameManager::SetNeedsProfileWrite)
		.def("GetNeedsProfileWrite", &UWillowSaveGameManager::GetNeedsProfileWrite)
		.def("PopulatePlayerSaveDataDefinitionContent", &UWillowSaveGameManager::PopulatePlayerSaveDataDefinitionContent)
		.def("GetHumanReadableStringFromTimePlayed", &UWillowSaveGameManager::GetHumanReadableStringFromTimePlayed, py::return_value_policy::reference)
		.def("GetHumanReadableStringFromSaveDateString", &UWillowSaveGameManager::GetHumanReadableStringFromSaveDateString, py::return_value_policy::reference)
		.def("GetCurrentSaveDateString", &UWillowSaveGameManager::GetCurrentSaveDateString, py::return_value_policy::reference)
		.def("BeginCountNumCrossTitleSaveGames", &UWillowSaveGameManager::BeginCountNumCrossTitleSaveGames)
		.def("SetNumCrossTitleSaveGames", &UWillowSaveGameManager::SetNumCrossTitleSaveGames)
		.def("GetNumCrossTitleSaveGames", &UWillowSaveGameManager::GetNumCrossTitleSaveGames)
		.def("SetNumSaveGames", &UWillowSaveGameManager::SetNumSaveGames)
		.def("GetNumSaveGames", &UWillowSaveGameManager::GetNumSaveGames)
		.def("NotifySaveComplete", &UWillowSaveGameManager::NotifySaveComplete)
		.def("NotifySaveStarted", &UWillowSaveGameManager::NotifySaveStarted)
		.def("GetXboxDevice", &UWillowSaveGameManager::GetXboxDevice)
		.def("SetXboxDevice", &UWillowSaveGameManager::SetXboxDevice)
		.def("SaveGame", &UWillowSaveGameManager::SaveGame)
		.def("ValidateSaveData", &UWillowSaveGameManager::ValidateSaveData)
		.def("DeleteSaveGame", &UWillowSaveGameManager::DeleteSaveGame)
		.def("GetHighestSaveIdFromFileList", &UWillowSaveGameManager::GetHighestSaveIdFromFileList)
		.def("GetLastSaveGameId", &UWillowSaveGameManager::GetLastSaveGameId)
		.def("GetLastSaveGame", &UWillowSaveGameManager::GetLastSaveGame)
		.def("EndGetSaveGameDataFromList", &UWillowSaveGameManager::EndGetSaveGameDataFromList, py::return_value_policy::reference)
		.def("BeginGetSaveGameDataFromList", &UWillowSaveGameManager::BeginGetSaveGameDataFromList)
		.def("GetCrossTitleSaveGameList", &UWillowSaveGameManager::GetCrossTitleSaveGameList, py::return_value_policy::reference)
		.def("GetSaveGameList", &UWillowSaveGameManager::GetSaveGameList, py::return_value_policy::reference)
		.def("LoadRawData", &UWillowSaveGameManager::LoadRawData, py::return_value_policy::reference)
		.def("LoadGraveyard", &UWillowSaveGameManager::LoadGraveyard, py::return_value_policy::reference)
		.def("EndLoadWillowOneGame", &UWillowSaveGameManager::EndLoadWillowOneGame)
		.def("BeginLoadWillowOneGame", &UWillowSaveGameManager::BeginLoadWillowOneGame)
		.def("EndLoadGame", &UWillowSaveGameManager::EndLoadGame, py::return_value_policy::reference)
		.def("BeginLoadGame", &UWillowSaveGameManager::BeginLoadGame)
		.def("SetCachedPlayerSaveGame", &UWillowSaveGameManager::SetCachedPlayerSaveGame)
		.def("HasCachedPlayerSaveGame", &UWillowSaveGameManager::HasCachedPlayerSaveGame)
		.def("GetCachedPlayerSaveGame", &UWillowSaveGameManager::GetCachedPlayerSaveGame, py::return_value_policy::reference)
		.def("SaveRawData", &UWillowSaveGameManager::SaveRawData)
		.def("SaveGraveyard", &UWillowSaveGameManager::SaveGraveyard)
		.def("Save", &UWillowSaveGameManager::Save)
		.def("ClearCache", &UWillowSaveGameManager::ClearCache)
		.def("OnCountNumCrossTitleSaveGamesComplete", &UWillowSaveGameManager::OnCountNumCrossTitleSaveGamesComplete)
		.def("OnWillowOneLoadComplete", &UWillowSaveGameManager::OnWillowOneLoadComplete)
		.def("OnListLoadComplete", &UWillowSaveGameManager::OnListLoadComplete)
		.def("OnLoadComplete", &UWillowSaveGameManager::OnLoadComplete)
		.def("OnSaveComplete", &UWillowSaveGameManager::OnSaveComplete)
		.def("OnValidationComplete", &UWillowSaveGameManager::OnValidationComplete)
		.def("OnDeleteComplete", &UWillowSaveGameManager::OnDeleteComplete)
		.def("GetResult", &UWillowSaveGameManager::GetResult)
		;
	py::class_< AWillowScout, AScout >(m, "AWillowScout")
		;
	py::class_< UWillowSeqAct_ElevatorFinished, USequenceAction >(m, "UWillowSeqAct_ElevatorFinished")
		.def_readwrite("Elevator", &UWillowSeqAct_ElevatorFinished::Elevator, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_MissionSmokeTest, USeqAct_Latent >(m, "UWillowSeqAct_MissionSmokeTest")
		.def_readwrite("SaveGameList", &UWillowSeqAct_MissionSmokeTest::SaveGameList, py::return_value_policy::reference)
		.def_readwrite("CurrentSavegame", &UWillowSeqAct_MissionSmokeTest::CurrentSavegame)
		.def_readwrite("TestStatus", &UWillowSeqAct_MissionSmokeTest::TestStatus)
		.def_readwrite("LatentFloat", &UWillowSeqAct_MissionSmokeTest::LatentFloat)
		;
	py::class_< UWillowSeqAct_MoveElevator, USequenceAction >(m, "UWillowSeqAct_MoveElevator")
		.def_readwrite("Elevator", &UWillowSeqAct_MoveElevator::Elevator, py::return_value_policy::reference)
		.def_readwrite("Usage", &UWillowSeqAct_MoveElevator::Usage)
		.def_readwrite("CallFloor", &UWillowSeqAct_MoveElevator::CallFloor)
		;
	py::class_< UWillowSeqEvent_ElevatorUsed, USequenceEvent >(m, "UWillowSeqEvent_ElevatorUsed")
		;
	py::class_< UWillowSkelControlSpline, USkelControlBase >(m, "UWillowSkelControlSpline")
		.def_property("bInvertSplineBoneAxis", [](UWillowSkelControlSpline &self){return self.bInvertSplineBoneAxis;}, [](UWillowSkelControlSpline &self, bool value){self.bInvertSplineBoneAxis = value ? 1 : 0;})
		.def_readwrite("SplineLength", &UWillowSkelControlSpline::SplineLength)
		.def_readwrite("SplineBoneAxis", &UWillowSkelControlSpline::SplineBoneAxis)
		.def_readwrite("BoneRotMode", &UWillowSkelControlSpline::BoneRotMode)
		.def_readwrite("EndSplineLocationSpace", &UWillowSkelControlSpline::EndSplineLocationSpace)
		.def_readwrite("StartSplineLocationSpace", &UWillowSkelControlSpline::StartSplineLocationSpace)
		.def_readwrite("EndSplineOffset", &UWillowSkelControlSpline::EndSplineOffset, py::return_value_policy::reference)
		.def_readwrite("StartSplineOffset", &UWillowSkelControlSpline::StartSplineOffset, py::return_value_policy::reference)
		;
	py::class_< AWillowSpectatorPoint, ACameraActor >(m, "AWillowSpectatorPoint")
		.def("eventDestroyed", &AWillowSpectatorPoint::eventDestroyed)
		.def("PostBeginPlay", &AWillowSpectatorPoint::PostBeginPlay)
		;
	py::class_< UWillowStaggerAnimNodeBlend, UAnimNodeBlendBase >(m, "UWillowStaggerAnimNodeBlend")
		.def_property("bMirrorStaggerDef", [](UWillowStaggerAnimNodeBlend &self){return self.bMirrorStaggerDef;}, [](UWillowStaggerAnimNodeBlend &self, bool value){self.bMirrorStaggerDef = value ? 1 : 0;})
		.def_property("bMirrorStaggerAlt", [](UWillowStaggerAnimNodeBlend &self){return self.bMirrorStaggerAlt;}, [](UWillowStaggerAnimNodeBlend &self, bool value){self.bMirrorStaggerAlt = value ? 1 : 0;})
		.def_readwrite("StaggerNodeIndex", &UWillowStaggerAnimNodeBlend::StaggerNodeIndex)
		.def_readwrite("StaggerNodeWeight", &UWillowStaggerAnimNodeBlend::StaggerNodeWeight)
		.def_readwrite("StaggerNodeWeightTarget", &UWillowStaggerAnimNodeBlend::StaggerNodeWeightTarget)
		.def_readwrite("BlendTimeToGo", &UWillowStaggerAnimNodeBlend::BlendTimeToGo)
		.def_readwrite("AltCondition", &UWillowStaggerAnimNodeBlend::AltCondition, py::return_value_policy::reference)
		.def_readwrite("AdditionalRotationDef", &UWillowStaggerAnimNodeBlend::AdditionalRotationDef, py::return_value_policy::reference)
		.def_readwrite("AdditionalRotationAlt", &UWillowStaggerAnimNodeBlend::AdditionalRotationAlt, py::return_value_policy::reference)
		.def("EndStaggerBlend", &UWillowStaggerAnimNodeBlend::EndStaggerBlend)
		.def("StartStaggerBlend", &UWillowStaggerAnimNodeBlend::StartStaggerBlend)
		.def("PlayStaggerAnimation", &UWillowStaggerAnimNodeBlend::PlayStaggerAnimation)
		.def("StopStaggerAnimation", &UWillowStaggerAnimNodeBlend::StopStaggerAnimation)
		;
	py::class_< UWillowSystemSettings, UObject >(m, "UWillowSystemSettings")
		.def_readwrite("SystemOptions", &UWillowSystemSettings::SystemOptions, py::return_value_policy::reference)
		.def_readwrite("SupportedResolutions", &UWillowSystemSettings::SupportedResolutions, py::return_value_policy::reference)
		.def_readwrite("QueuedResolution", &UWillowSystemSettings::QueuedResolution)
		.def_readwrite("ResolutionTimeout", &UWillowSystemSettings::ResolutionTimeout)
		.def_readwrite("ResolutionDlg", &UWillowSystemSettings::ResolutionDlg, py::return_value_policy::reference)
		.def_readwrite("ResolutionTicker", &UWillowSystemSettings::ResolutionTicker, py::return_value_policy::reference)
		.def_readwrite("QueuedWindowMode", &UWillowSystemSettings::QueuedWindowMode)
		.def_readwrite("QueuedVSyncMode", &UWillowSystemSettings::QueuedVSyncMode)
		.def_readwrite("PreviousVSyncMode", &UWillowSystemSettings::PreviousVSyncMode)
		.def("UpdateViewDistance", &UWillowSystemSettings::UpdateViewDistance)
		.def("ResetResolution", &UWillowSystemSettings::ResetResolution)
		.def("ConfirmResolution_Clicked", &UWillowSystemSettings::ConfirmResolution_Clicked)
		.def("UpdateResolutionTimer", &UWillowSystemSettings::UpdateResolutionTimer)
		.def("UpdateResolution", &UWillowSystemSettings::UpdateResolution)
		.def("GetWindowModeString", &UWillowSystemSettings::GetWindowModeString, py::return_value_policy::reference)
		.def("Options_VSyncModeDirty", &UWillowSystemSettings::Options_VSyncModeDirty)
		.def("Options_WindowModeDirty", &UWillowSystemSettings::Options_WindowModeDirty)
		.def("Options_ResolutionDirty", &UWillowSystemSettings::Options_ResolutionDirty)
		.def("UpdateSystemOption", &UWillowSystemSettings::UpdateSystemOption)
		.def("UpdateTextureFade", &UWillowSystemSettings::UpdateTextureFade)
		.def("LoadSystemSettings", &UWillowSystemSettings::LoadSystemSettings)
		;
	py::class_< AWillowTacticalMapVolume, AVolume >(m, "AWillowTacticalMapVolume")
		.def_readwrite("UnrealUnitsPerPixel", &AWillowTacticalMapVolume::UnrealUnitsPerPixel)
		.def_readwrite("NorthOffsetInDegreesClockwise", &AWillowTacticalMapVolume::NorthOffsetInDegreesClockwise)
		;
	py::class_< AWillowTradeManager, AActor >(m, "AWillowTradeManager")
		.def_property("bInitialized", [](AWillowTradeManager &self){return self.bInitialized;}, [](AWillowTradeManager &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_property("bAccepted", [](AWillowTradeManager &self){return self.bAccepted;}, [](AWillowTradeManager &self, bool value){self.bAccepted = value ? 1 : 0;})
		.def_readwrite("Status", &AWillowTradeManager::Status)
		.def_readwrite("Stance", &AWillowTradeManager::Stance)
		.def_readwrite("PartnerStance", &AWillowTradeManager::PartnerStance)
		.def_readwrite("UnresolvedFlags", &AWillowTradeManager::UnresolvedFlags)
		.def_readwrite("TransactionHash", &AWillowTradeManager::TransactionHash)
		.def_readwrite("Partner", &AWillowTradeManager::Partner, py::return_value_policy::reference)
		.def_readwrite("PartnerWPC", &AWillowTradeManager::PartnerWPC, py::return_value_policy::reference)
		.def_readwrite("PartnerPRI", &AWillowTradeManager::PartnerPRI, py::return_value_policy::reference)
		.def_readwrite("MaxPartnerReceivableInventory", &AWillowTradeManager::MaxPartnerReceivableInventory)
		.def_readwrite("PartnerCashOffered", &AWillowTradeManager::PartnerCashOffered)
		.def_readwrite("MyCashOffered", &AWillowTradeManager::MyCashOffered)
		.def_readwrite("DuelInfo", &AWillowTradeManager::DuelInfo, py::return_value_policy::reference)
		.def_readwrite("MaxMyReceivableInventory", &AWillowTradeManager::MaxMyReceivableInventory)
		.def("OnPartnerInvChanged", &AWillowTradeManager::OnPartnerInvChanged)
		.def("FindInventorySlot", &AWillowTradeManager::FindInventorySlot)
		.def("CanDrop", &AWillowTradeManager::CanDrop)
		.def("OnUIClosed", &AWillowTradeManager::OnUIClosed)
		.def("IsForTrade", &AWillowTradeManager::IsForTrade)
		.def("IsPendingItemSale", &AWillowTradeManager::IsPendingItemSale)
		.def("IsPendingWeaponSale", &AWillowTradeManager::IsPendingWeaponSale)
		.def("IsResolving", &AWillowTradeManager::IsResolving)
		.def("UpdateInventoryOffered", &AWillowTradeManager::UpdateInventoryOffered)
		.def("UpdatePartnerInventoryRefs", &AWillowTradeManager::UpdatePartnerInventoryRefs)
		.def("DuelFinished", &AWillowTradeManager::DuelFinished)
		.def("IsDueling", &AWillowTradeManager::IsDueling)
		.def("IsTradeInitialized", &AWillowTradeManager::IsTradeInitialized)
		.def("UpdateCashOffered", &AWillowTradeManager::UpdateCashOffered)
		.def("UpdateStance", &AWillowTradeManager::UpdateStance)
		.def("eventCancelTrade", &AWillowTradeManager::eventCancelTrade)
		.def("RejectPendingRequest", &AWillowTradeManager::RejectPendingRequest)
		.def("AcceptPendingRequest", &AWillowTradeManager::AcceptPendingRequest)
		.def("SharedInit", &AWillowTradeManager::SharedInit)
		.def("InitAsRequestee", &AWillowTradeManager::InitAsRequestee)
		.def("InitAsRequester", &AWillowTradeManager::InitAsRequester)
		.def("FindAndRemoveInv", &AWillowTradeManager::FindAndRemoveInv)
		.def("InventoryMatch", &AWillowTradeManager::InventoryMatch)
		.def("GetTradingWidget", &AWillowTradeManager::GetTradingWidget, py::return_value_policy::reference)
		.def("OnAccepted", &AWillowTradeManager::OnAccepted)
		.def("OnInitialized", &AWillowTradeManager::OnInitialized)
		.def("CheckAcceptance", &AWillowTradeManager::CheckAcceptance)
		.def("CheckInitialization", &AWillowTradeManager::CheckInitialization)
		.def("LogCurrentTrade", &AWillowTradeManager::LogCurrentTrade)
		.def("GetInvDesc", &AWillowTradeManager::GetInvDesc, py::return_value_policy::reference)
		.def("GetInvDescSub", &AWillowTradeManager::GetInvDescSub, py::return_value_policy::reference)
		.def("GetInvHash", &AWillowTradeManager::GetInvHash)
		.def("DoUpdateStance", &AWillowTradeManager::DoUpdateStance)
		.def("DoUpdateCashOffered", &AWillowTradeManager::DoUpdateCashOffered)
		.def("GetWPC", &AWillowTradeManager::GetWPC, py::return_value_policy::reference)
		.def("CalcTransactionHash", &AWillowTradeManager::CalcTransactionHash)
		.def("TradeParametersUpdated", &AWillowTradeManager::TradeParametersUpdated)
		.def("BreakTradeBond", &AWillowTradeManager::BreakTradeBond)
		.def("IsTradeHalfValid", &AWillowTradeManager::IsTradeHalfValid)
		.def("BeginDuel", &AWillowTradeManager::BeginDuel)
		.def("ResolveDuel", &AWillowTradeManager::ResolveDuel)
		.def("SetAssideDuelAssets", &AWillowTradeManager::SetAssideDuelAssets)
		.def("HashCheck", &AWillowTradeManager::HashCheck)
		.def("CheckTradeComplete", &AWillowTradeManager::CheckTradeComplete)
		.def("ResolveDuelWin", &AWillowTradeManager::ResolveDuelWin)
		.def("ResolveDuelDraw", &AWillowTradeManager::ResolveDuelDraw)
		.def("ResolveDuelLoss", &AWillowTradeManager::ResolveDuelLoss)
		.def("ResolveTrade", &AWillowTradeManager::ResolveTrade)
		.def("PerformTransaction", &AWillowTradeManager::PerformTransaction)
		.def("TerminateTrade", &AWillowTradeManager::TerminateTrade)
		.def("eventKillTrade", &AWillowTradeManager::eventKillTrade)
		.def("InvalidateStance", &AWillowTradeManager::InvalidateStance)
		.def("ServerTradeComplete", &AWillowTradeManager::ServerTradeComplete)
		.def("ClientResolveTrade", &AWillowTradeManager::ClientResolveTrade)
		.def("ServerOfferItem", &AWillowTradeManager::ServerOfferItem)
		.def("ServerOfferWeapon", &AWillowTradeManager::ServerOfferWeapon)
		.def("ServerEmptyInvSlot", &AWillowTradeManager::ServerEmptyInvSlot)
		.def("ClientStanceReset", &AWillowTradeManager::ClientStanceReset)
		.def("ServerUpdateCashOffered", &AWillowTradeManager::ServerUpdateCashOffered)
		.def("ForceCancelTrade", &AWillowTradeManager::ForceCancelTrade)
		.def("ServerCancelTrade", &AWillowTradeManager::ServerCancelTrade)
		.def("ServerUpdateStance", &AWillowTradeManager::ServerUpdateStance)
		.def("ServerAcceptPendingRequest", &AWillowTradeManager::ServerAcceptPendingRequest)
		.def("ServerRejectPendingRequest", &AWillowTradeManager::ServerRejectPendingRequest)
		.def("eventDestroyed", &AWillowTradeManager::eventDestroyed)
		.def("eventReplicatedEvent", &AWillowTradeManager::eventReplicatedEvent)
		.def("CanRetractOffer", &AWillowTradeManager::CanRetractOffer)
		.def("CanStartOffer", &AWillowTradeManager::CanStartOffer)
		;
	py::class_< AWillowTrigger, ATrigger >(m, "AWillowTrigger")
		.def_property("bCostsToUse", [](AWillowTrigger &self){return self.bCostsToUse;}, [](AWillowTrigger &self, bool value){self.bCostsToUse = value ? 1 : 0;})
		.def_readwrite("VfTable_IIUsable", &AWillowTrigger::VfTable_IIUsable, py::return_value_policy::reference)
		.def_readwrite("HUDIcon", &AWillowTrigger::HUDIcon)
		.def_readwrite("CostsToUseType", &AWillowTrigger::CostsToUseType)
		.def_readwrite("HUDIconDef", &AWillowTrigger::HUDIconDef, py::return_value_policy::reference)
		.def_readwrite("ParticleHighlight", &AWillowTrigger::ParticleHighlight, py::return_value_policy::reference)
		.def_readwrite("TriggerSprite", &AWillowTrigger::TriggerSprite, py::return_value_policy::reference)
		.def_readwrite("CostsToUseAmount", &AWillowTrigger::CostsToUseAmount)
		.def("NotifyUserCouldNotAffordAttemptedUse", &AWillowTrigger::NotifyUserCouldNotAffordAttemptedUse)
		.def("SetInteractionIcon", &AWillowTrigger::SetInteractionIcon)
		.def("UseObject", &AWillowTrigger::UseObject)
		.def("PostBeginPlay", &AWillowTrigger::PostBeginPlay)
		;
	py::class_< AWillowWaypoint, AWillowTrigger >(m, "AWillowWaypoint")
		.def_property("bUpdateObjectiveOnPlayerTouch", [](AWillowWaypoint &self){return self.bUpdateObjectiveOnPlayerTouch;}, [](AWillowWaypoint &self, bool value){self.bUpdateObjectiveOnPlayerTouch = value ? 1 : 0;})
		.def_property("bEnabled", [](AWillowWaypoint &self){return self.bEnabled;}, [](AWillowWaypoint &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_readwrite("VfTable_IIMission", &AWillowWaypoint::VfTable_IIMission, py::return_value_policy::reference)
		.def_readwrite("WaypointInfo", &AWillowWaypoint::WaypointInfo, py::return_value_policy::reference)
		.def_readwrite("AreaRadius", &AWillowWaypoint::AreaRadius)
		.def_readwrite("TouchVolumes", &AWillowWaypoint::TouchVolumes, py::return_value_policy::reference)
		.def("eventMissionReactionObjectiveComplete", &AWillowWaypoint::eventMissionReactionObjectiveComplete)
		.def("eventMissionReactionObjectiveCleared", &AWillowWaypoint::eventMissionReactionObjectiveCleared)
		.def("eventMissionReactionObjectiveUpdated", &AWillowWaypoint::eventMissionReactionObjectiveUpdated)
		.def("eventMissionReactionObjectiveSetChanged", &AWillowWaypoint::eventMissionReactionObjectiveSetChanged)
		.def("eventMissionReactionLevelLoad", &AWillowWaypoint::eventMissionReactionLevelLoad)
		.def("eventMissionReactionStatusChanged", &AWillowWaypoint::eventMissionReactionStatusChanged)
		.def("ClearWaypoint", &AWillowWaypoint::ClearWaypoint)
		.def("ProcessPlayerTouch", &AWillowWaypoint::ProcessPlayerTouch)
		.def("eventTouch", &AWillowWaypoint::eventTouch)
		.def("PostBeginPlay", &AWillowWaypoint::PostBeginPlay)
		;
	py::class_< UWillowUIInteraction, UUIInteraction >(m, "UWillowUIInteraction")
		.def_property("bOpened", [](UWillowUIInteraction &self){return self.bOpened;}, [](UWillowUIInteraction &self, bool value){self.bOpened = value ? 1 : 0;})
		.def_property("bAutoGatherNetworkData", [](UWillowUIInteraction &self){return self.bAutoGatherNetworkData;}, [](UWillowUIInteraction &self, bool value){self.bAutoGatherNetworkData = value ? 1 : 0;})
		.def_property("bCollapseChannelsByClass", [](UWillowUIInteraction &self){return self.bCollapseChannelsByClass;}, [](UWillowUIInteraction &self, bool value){self.bCollapseChannelsByClass = value ? 1 : 0;})
		.def_property("bServerCPUSaturatedThisFrame", [](UWillowUIInteraction &self){return self.bServerCPUSaturatedThisFrame;}, [](UWillowUIInteraction &self, bool value){self.bServerCPUSaturatedThisFrame = value ? 1 : 0;})
		.def_property("bOnlyShowRegisteredChallenges", [](UWillowUIInteraction &self){return self.bOnlyShowRegisteredChallenges;}, [](UWillowUIInteraction &self, bool value){self.bOnlyShowRegisteredChallenges = value ? 1 : 0;})
		.def_property("bDisplayDetailedAttributes", [](UWillowUIInteraction &self){return self.bDisplayDetailedAttributes;}, [](UWillowUIInteraction &self, bool value){self.bDisplayDetailedAttributes = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBalancedActor", &UWillowUIInteraction::VfTable_IIBalancedActor, py::return_value_policy::reference)
		.def_readwrite("ExpandedMissions", &UWillowUIInteraction::ExpandedMissions, py::return_value_policy::reference)
		.def_readwrite("BlankEntry", &UWillowUIInteraction::BlankEntry, py::return_value_policy::reference)
		.def_readwrite("BlankMenuHeader", &UWillowUIInteraction::BlankMenuHeader, py::return_value_policy::reference)
		.def_readwrite("CurrentMenu", &UWillowUIInteraction::CurrentMenu, py::return_value_policy::reference)
		.def_readwrite("MenuURL", &UWillowUIInteraction::MenuURL, py::return_value_policy::reference)
		.def_readwrite("MenuTitle", &UWillowUIInteraction::MenuTitle, py::return_value_policy::reference)
		.def_readwrite("HintFontSize", &UWillowUIInteraction::HintFontSize)
		.def_readwrite("MemDetailsSortStyle", &UWillowUIInteraction::MemDetailsSortStyle)
		.def_readwrite("NetChannelSortStyle", &UWillowUIInteraction::NetChannelSortStyle)
		.def_readwrite("GearBuilderSortMode", &UWillowUIInteraction::GearBuilderSortMode)
		.def_readwrite("AttributeSortMode", &UWillowUIInteraction::AttributeSortMode)
		.def_readwrite("MenuHint", &UWillowUIInteraction::MenuHint, py::return_value_policy::reference)
		.def_readwrite("MenuItemDetail", &UWillowUIInteraction::MenuItemDetail, py::return_value_policy::reference)
		.def_readwrite("MenuDescriptionBoxStr", &UWillowUIInteraction::MenuDescriptionBoxStr, py::return_value_policy::reference)
		.def_readwrite("MenuHeaders", &UWillowUIInteraction::MenuHeaders, py::return_value_policy::reference)
		.def_readwrite("ActiveMenu", &UWillowUIInteraction::ActiveMenu)
		.def_readwrite("DebugConsoleHeaders", &UWillowUIInteraction::DebugConsoleHeaders, py::return_value_policy::reference)
		.def_readwrite("DebugConsoleCommands", &UWillowUIInteraction::DebugConsoleCommands, py::return_value_policy::reference)
		.def_readwrite("SubMenuHeaders", &UWillowUIInteraction::SubMenuHeaders, py::return_value_policy::reference)
		.def_readwrite("ActiveSubMenu", &UWillowUIInteraction::ActiveSubMenu)
		.def_readwrite("MenuStack", &UWillowUIInteraction::MenuStack, py::return_value_policy::reference)
		.def_readwrite("WillowMenu", &UWillowUIInteraction::WillowMenu, py::return_value_policy::reference)
		.def_readwrite("StatusMenuLayout", &UWillowUIInteraction::StatusMenuLayout, py::return_value_policy::reference)
		.def_readwrite("MemoryMenuLayout", &UWillowUIInteraction::MemoryMenuLayout, py::return_value_policy::reference)
		.def_readwrite("NetworkMenuLayout", &UWillowUIInteraction::NetworkMenuLayout, py::return_value_policy::reference)
		.def_readwrite("MissionMenuLayout", &UWillowUIInteraction::MissionMenuLayout, py::return_value_policy::reference)
		.def_readwrite("SkillMenuLayout", &UWillowUIInteraction::SkillMenuLayout, py::return_value_policy::reference)
		.def_readwrite("GearBuilderMenuLayout", &UWillowUIInteraction::GearBuilderMenuLayout, py::return_value_policy::reference)
		.def_readwrite("CommerceMenuLayout", &UWillowUIInteraction::CommerceMenuLayout, py::return_value_policy::reference)
		.def_readwrite("ChallengeMenuLayout", &UWillowUIInteraction::ChallengeMenuLayout, py::return_value_policy::reference)
		.def_readwrite("CurrentMenuLayout", &UWillowUIInteraction::CurrentMenuLayout, py::return_value_policy::reference)
		.def_readwrite("TeleportingMenuLayout", &UWillowUIInteraction::TeleportingMenuLayout, py::return_value_policy::reference)
		.def_readwrite("SharedInspectorMenuLayout", &UWillowUIInteraction::SharedInspectorMenuLayout, py::return_value_policy::reference)
		.def_readwrite("CustomizationMenuLayout", &UWillowUIInteraction::CustomizationMenuLayout, py::return_value_policy::reference)
		.def_readwrite("DLCMenuLayout", &UWillowUIInteraction::DLCMenuLayout, py::return_value_policy::reference)
		.def_readwrite("UIScaleX", &UWillowUIInteraction::UIScaleX)
		.def_readwrite("UIScaleY", &UWillowUIInteraction::UIScaleY)
		.def_readwrite("Menu_Top", &UWillowUIInteraction::Menu_Top)
		.def_readwrite("Menu_At", &UWillowUIInteraction::Menu_At)
		.def_readwrite("Menu_IPP", &UWillowUIInteraction::Menu_IPP)
		.def_readwrite("OwnerPC", &UWillowUIInteraction::OwnerPC, py::return_value_policy::reference)
		.def_readwrite("BrightWhite", &UWillowUIInteraction::BrightWhite, py::return_value_policy::reference)
		.def_readwrite("DarkGrey", &UWillowUIInteraction::DarkGrey, py::return_value_policy::reference)
		.def_readwrite("MediumGrey", &UWillowUIInteraction::MediumGrey, py::return_value_policy::reference)
		.def_readwrite("LightGrey", &UWillowUIInteraction::LightGrey, py::return_value_policy::reference)
		.def_readwrite("Yellow", &UWillowUIInteraction::Yellow, py::return_value_policy::reference)
		.def_readwrite("TimeUntilMenuRefresh", &UWillowUIInteraction::TimeUntilMenuRefresh)
		.def_readwrite("NextHorizontalInputAxisTime", &UWillowUIInteraction::NextHorizontalInputAxisTime)
		.def_readwrite("NextHorizontalInputAxisInterval", &UWillowUIInteraction::NextHorizontalInputAxisInterval)
		.def_readwrite("NextVerticalInputAxisTime", &UWillowUIInteraction::NextVerticalInputAxisTime)
		.def_readwrite("NextVerticalInputAxisInterval", &UWillowUIInteraction::NextVerticalInputAxisInterval)
		.def_readwrite("LastWeaponIndex", &UWillowUIInteraction::LastWeaponIndex)
		.def_readwrite("LastMerchantWeaponIndex", &UWillowUIInteraction::LastMerchantWeaponIndex)
		.def_readwrite("LastItemIndex", &UWillowUIInteraction::LastItemIndex)
		.def_readwrite("BlockUIInputSemaphore", &UWillowUIInteraction::BlockUIInputSemaphore)
		.def_readwrite("SortedTravelStationList", &UWillowUIInteraction::SortedTravelStationList, py::return_value_policy::reference)
		.def_readwrite("NetworkChannels", &UWillowUIInteraction::NetworkChannels, py::return_value_policy::reference)
		.def_readwrite("NovodexMemoryEstimationFactor", &UWillowUIInteraction::NovodexMemoryEstimationFactor)
		.def_readwrite("WeaponBalanceDefinitions", &UWillowUIInteraction::WeaponBalanceDefinitions, py::return_value_policy::reference)
		.def_readwrite("ItemBuilder", &UWillowUIInteraction::ItemBuilder, py::return_value_policy::reference)
		.def_readwrite("ItemBuilderBalanceDefinitions", &UWillowUIInteraction::ItemBuilderBalanceDefinitions, py::return_value_policy::reference)
		.def_readwrite("DebugPlayerIdentifiersAdded", &UWillowUIInteraction::DebugPlayerIdentifiersAdded)
		.def_readwrite("ItemTabNames", &UWillowUIInteraction::ItemTabNames, py::return_value_policy::reference)
		.def_readwrite("ItemParts", &UWillowUIInteraction::ItemParts, py::return_value_policy::reference)
		.def_readwrite("WeaponParts", &UWillowUIInteraction::WeaponParts, py::return_value_policy::reference)
		.def_readwrite("ExpLevel", &UWillowUIInteraction::ExpLevel)
		.def_readwrite("GameStage", &UWillowUIInteraction::GameStage)
		.def_readwrite("AwesomeLevel", &UWillowUIInteraction::AwesomeLevel)
		.def_readwrite("BrokenChallengeConditions", &UWillowUIInteraction::BrokenChallengeConditions, py::return_value_policy::reference)
		.def_readwrite("CustomizationBalanceDefinitionsByUsage", &UWillowUIInteraction::CustomizationBalanceDefinitionsByUsage, py::return_value_policy::reference)
		.def_readwrite("PotentialCustomizationUsagesToFilterBy", &UWillowUIInteraction::PotentialCustomizationUsagesToFilterBy, py::return_value_policy::reference)
		.def_readwrite("CurrentCustomizationUsageFilterIndex", &UWillowUIInteraction::CurrentCustomizationUsageFilterIndex)
		.def("HandleClientMessage", &UWillowUIInteraction::HandleClientMessage)
		.def("CloseMenu", &UWillowUIInteraction::CloseMenu)
		.def("CloseStatusMenu", &UWillowUIInteraction::CloseStatusMenu)
		.def("RunStatusMenu", &UWillowUIInteraction::RunStatusMenu)
		.def("Initialized", &UWillowUIInteraction::Initialized)
		.def("AddNetworkSubmenuHeaders", &UWillowUIInteraction::AddNetworkSubmenuHeaders)
		.def("CalcActorClassStats", &UWillowUIInteraction::CalcActorClassStats)
		.def("SortNetworkUsageData", &UWillowUIInteraction::SortNetworkUsageData)
		.def("FillChannelData", &UWillowUIInteraction::FillChannelData)
		.def("GenerateNetworkChannelUsageNative", &UWillowUIInteraction::GenerateNetworkChannelUsageNative)
		.def("GenerateMemoryUsageDataNative", &UWillowUIInteraction::GenerateMemoryUsageDataNative)
		.def("ExportMemoryUsageDataNative", &UWillowUIInteraction::ExportMemoryUsageDataNative)
		.def("LogMemoryUsageDataNative", &UWillowUIInteraction::LogMemoryUsageDataNative)
		.def("SortMemoryUsageData", &UWillowUIInteraction::SortMemoryUsageData)
		.def("FormatFloatAsString", &UWillowUIInteraction::FormatFloatAsString, py::return_value_policy::reference)
		.def("FormatNumberAsString", &UWillowUIInteraction::FormatNumberAsString, py::return_value_policy::reference)
		.def("SyncContentBrowser", &UWillowUIInteraction::SyncContentBrowser)
		.def("eventInputKey", &UWillowUIInteraction::eventInputKey)
		.def("eventInputAxis", &UWillowUIInteraction::eventInputAxis)
		.def("AddNetworkSnapshotSubmenuScreen", &UWillowUIInteraction::AddNetworkSnapshotSubmenuScreen)
		.def("AddMemorySnapshotSubmenuScreen", &UWillowUIInteraction::AddMemorySnapshotSubmenuScreen)
		.def("AddMemorySnapshotSummaryScreen", &UWillowUIInteraction::AddMemorySnapshotSummaryScreen)
		.def("GetMemorySnapshotTimestamp", &UWillowUIInteraction::GetMemorySnapshotTimestamp, py::return_value_policy::reference)
		.def("AddMemorySubmenuHeaders", &UWillowUIInteraction::AddMemorySubmenuHeaders)
		.def("IncrementInstanceDataSwitch", &UWillowUIInteraction::IncrementInstanceDataSwitch)
		.def("GetBodyCompositionFromScript", &UWillowUIInteraction::GetBodyCompositionFromScript)
		.def("GetNumberOfConfigurationsForRemainingWeaponParts", &UWillowUIInteraction::GetNumberOfConfigurationsForRemainingWeaponParts)
		.def("GetNumberOfConfigurationsForWeaponManufacturer", &UWillowUIInteraction::GetNumberOfConfigurationsForWeaponManufacturer)
		.def("GetNumberOfConfigurationsForWeaponBalanceDefinition", &UWillowUIInteraction::GetNumberOfConfigurationsForWeaponBalanceDefinition)
		.def("GetWeightedWeaponPartList", &UWillowUIInteraction::GetWeightedWeaponPartList)
		.def("GetSoleManufacturerForWeapon", &UWillowUIInteraction::GetSoleManufacturerForWeapon, py::return_value_policy::reference)
		.def("GetNumberOfConfigurationsForRemainingItemParts", &UWillowUIInteraction::GetNumberOfConfigurationsForRemainingItemParts)
		.def("GetNumberOfConfigurationsForItemManufacturer", &UWillowUIInteraction::GetNumberOfConfigurationsForItemManufacturer)
		.def("GetNumberOfConfigurationsForItemBalanceDefinition", &UWillowUIInteraction::GetNumberOfConfigurationsForItemBalanceDefinition)
		.def("GetWeightedItemPartList", &UWillowUIInteraction::GetWeightedItemPartList)
		.def("GenerateListOfPossibleItemsToBuild", &UWillowUIInteraction::GenerateListOfPossibleItemsToBuild)
		.def("GenerateListOfPossibleWeaponsToBuild", &UWillowUIInteraction::GenerateListOfPossibleWeaponsToBuild)
		.def("GenerateListOfPossibleCustomizationsToBuild", &UWillowUIInteraction::GenerateListOfPossibleCustomizationsToBuild)
		.def("eventTickImp", &UWillowUIInteraction::eventTickImp)
		.def("ShouldProcessUIInput", &UWillowUIInteraction::ShouldProcessUIInput)
		.def("eventBlockUIInput", &UWillowUIInteraction::eventBlockUIInput)
		.def("eventClearUIInputBlocks", &UWillowUIInteraction::eventClearUIInputBlocks)
		.def("CreateAttributeMenu", &UWillowUIInteraction::CreateAttributeMenu)
		.def("GetBalancedActorTypeIdentifier", &UWillowUIInteraction::GetBalancedActorTypeIdentifier, py::return_value_policy::reference)
		.def("SetExpLevel", &UWillowUIInteraction::SetExpLevel)
		.def("SetAwesomeLevel", &UWillowUIInteraction::SetAwesomeLevel)
		.def("SetGameStage", &UWillowUIInteraction::SetGameStage)
		.def("GetExpLevelForEquip", &UWillowUIInteraction::GetExpLevelForEquip)
		.def("GetExpLevel", &UWillowUIInteraction::GetExpLevel)
		.def("GetAwesomeLevel", &UWillowUIInteraction::GetAwesomeLevel)
		.def("GetGameStage", &UWillowUIInteraction::GetGameStage)
		;
	py::class_< AWillowVehicleBase, ASVehicle >(m, "AWillowVehicleBase")
		.def_property("bLookingBack", [](AWillowVehicleBase &self){return self.bLookingBack;}, [](AWillowVehicleBase &self, bool value){self.bLookingBack = value ? 1 : 0;})
		.def_property("bDisableReloadMessages", [](AWillowVehicleBase &self){return self.bDisableReloadMessages;}, [](AWillowVehicleBase &self, bool value){self.bDisableReloadMessages = value ? 1 : 0;})
		.def_property("TurretMovingNow", [](AWillowVehicleBase &self){return self.TurretMovingNow;}, [](AWillowVehicleBase &self, bool value){self.TurretMovingNow = value ? 1 : 0;})
		.def_readwrite("VfTable_IIResourcePoolProvider", &AWillowVehicleBase::VfTable_IIResourcePoolProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyPawn", &AWillowVehicleBase::VfTable_IIBodyPawn, py::return_value_policy::reference)
		.def_readwrite("CustomGravityZ", &AWillowVehicleBase::CustomGravityZ)
		.def_readwrite("SightOriginType", &AWillowVehicleBase::SightOriginType)
		.def_readwrite("SightOffset", &AWillowVehicleBase::SightOffset, py::return_value_policy::reference)
		.def_readwrite("SightSocket", &AWillowVehicleBase::SightSocket, py::return_value_policy::reference)
		.def_readwrite("LookingYaw", &AWillowVehicleBase::LookingYaw)
		.def_readwrite("LookingYawSpeed", &AWillowVehicleBase::LookingYawSpeed)
		.def_readwrite("LightProjMgr", &AWillowVehicleBase::LightProjMgr, py::return_value_policy::reference)
		.def_readwrite("WeaponAmmo", &AWillowVehicleBase::WeaponAmmo)
		.def_readwrite("MaxWeaponAmmo", &AWillowVehicleBase::MaxWeaponAmmo)
		.def_readwrite("WeaponTypeScaleformName", &AWillowVehicleBase::WeaponTypeScaleformName, py::return_value_policy::reference)
		.def_readwrite("WeaponTypeScaleformDLCClip", &AWillowVehicleBase::WeaponTypeScaleformDLCClip, py::return_value_policy::reference)
		.def_readwrite("ExitAnimationInUse", &AWillowVehicleBase::ExitAnimationInUse, py::return_value_policy::reference)
		.def("Destroyed_HandleDriver", &AWillowVehicleBase::Destroyed_HandleDriver)
		.def("TeleportVehicleToStation", &AWillowVehicleBase::TeleportVehicleToStation)
		.def("TeleportVehicleToLocation", &AWillowVehicleBase::TeleportVehicleToLocation)
		.def("NoFailSetPawnLocation", &AWillowVehicleBase::NoFailSetPawnLocation)
		.def("UnsitAnimFinished", &AWillowVehicleBase::UnsitAnimFinished)
		.def("TeleportExitingDriver", &AWillowVehicleBase::TeleportExitingDriver)
		.def("FindAutoExitGearbox", &AWillowVehicleBase::FindAutoExitGearbox)
		.def("PlaceExitingDriver", &AWillowVehicleBase::PlaceExitingDriver)
		.def("ExitAnimIsSafeToUse", &AWillowVehicleBase::ExitAnimIsSafeToUse)
		.def("GetExitLocationForAnim", &AWillowVehicleBase::GetExitLocationForAnim)
		.def("ExitLocationIsSafeToUse", &AWillowVehicleBase::ExitLocationIsSafeToUse)
		.def("ResurrectVehicle", &AWillowVehicleBase::ResurrectVehicle)
		.def("GetWillowVehicle", &AWillowVehicleBase::GetWillowVehicle, py::return_value_policy::reference)
		.def("ClientUnsitDriver", &AWillowVehicleBase::ClientUnsitDriver)
		.def("GetDefaultExitLocation", &AWillowVehicleBase::GetDefaultExitLocation, py::return_value_policy::reference)
		.def("GetLightProjMgrFor", &AWillowVehicleBase::GetLightProjMgrFor, py::return_value_policy::reference)
		.def("IsOccupantAllowedToTakeDamage", &AWillowVehicleBase::IsOccupantAllowedToTakeDamage)
		.def("CanBeBaseForPawn", &AWillowVehicleBase::CanBeBaseForPawn)
		.def("GetPawnToTeleport", &AWillowVehicleBase::GetPawnToTeleport, py::return_value_policy::reference)
		.def("ProcessViewRotationInVehicle", &AWillowVehicleBase::ProcessViewRotationInVehicle)
		.def("GetAWillowAIPawn", &AWillowVehicleBase::GetAWillowAIPawn, py::return_value_policy::reference)
		.def("GetAWillowPlayerPawn", &AWillowVehicleBase::GetAWillowPlayerPawn, py::return_value_policy::reference)
		.def("GetAWillowPawn", &AWillowVehicleBase::GetAWillowPawn, py::return_value_policy::reference)
		.def("GetResourcePoolForResourceDefinition", &AWillowVehicleBase::GetResourcePoolForResourceDefinition, py::return_value_policy::reference)
		.def("VehicleNoLookBack", &AWillowVehicleBase::VehicleNoLookBack)
		.def("VehicleLookBack", &AWillowVehicleBase::VehicleLookBack)
		.def("GetExitAnimEndPosition", &AWillowVehicleBase::GetExitAnimEndPosition, py::return_value_policy::reference)
		.def("AttachDriver", &AWillowVehicleBase::AttachDriver)
		.def("eventDriverLeave", &AWillowVehicleBase::eventDriverLeave)
		.def("DriverAllowedToLeave", &AWillowVehicleBase::DriverAllowedToLeave)
		.def("DriverEnter", &AWillowVehicleBase::DriverEnter)
		.def("UnPossessed", &AWillowVehicleBase::UnPossessed)
		.def("NeedToTurn", &AWillowVehicleBase::NeedToTurn)
		.def("GetDamageScaling", &AWillowVehicleBase::GetDamageScaling)
		.def("BotFire", &AWillowVehicleBase::BotFire)
		.def("ChooseFireMode", &AWillowVehicleBase::ChooseFireMode)
		.def("Suicide", &AWillowVehicleBase::Suicide)
		.def("ServerChangeSeat", &AWillowVehicleBase::ServerChangeSeat)
		.def("AdjacentSeat", &AWillowVehicleBase::AdjacentSeat)
		.def("OnTurretStatusChange", &AWillowVehicleBase::OnTurretStatusChange)
		.def("IsTargetable", &AWillowVehicleBase::IsTargetable)
		.def("TickReplicatedAmmoCount", &AWillowVehicleBase::TickReplicatedAmmoCount)
		.def("ComputeViewPitchRange", [](AWillowVehicleBase &self , class UPassengerCameraDefinition* Camera, struct FRotator VehicleRotation, struct FRotator ViewRotation) { float* pyout_ViewPitchHorizontal = (float*)malloc(sizeof(float)) ; float* pyout_ViewPitchMin = (float*)malloc(sizeof(float)) ; float* pyout_ViewPitchMax = (float*)malloc(sizeof(float)) ;   self.ComputeViewPitchRange(Camera, VehicleRotation, ViewRotation, pyout_ViewPitchHorizontal, pyout_ViewPitchMin, pyout_ViewPitchMax); return py::make_tuple(*pyout_ViewPitchHorizontal, *pyout_ViewPitchMin, *pyout_ViewPitchMax); })
		.def("VehicleAdjustInput", [](AWillowVehicleBase &self ) { float* pyaTurn = (float*)malloc(sizeof(float)) ; float* pyaLookUp = (float*)malloc(sizeof(float)) ; float* pyaForward = (float*)malloc(sizeof(float)) ; float* pyaStrafe = (float*)malloc(sizeof(float)) ;   self.VehicleAdjustInput(pyaTurn, pyaLookUp, pyaForward, pyaStrafe); return py::make_tuple(*pyaTurn, *pyaLookUp, *pyaForward, *pyaStrafe); })
		.def("GetVehicleAndSeatIndex", [](AWillowVehicleBase &self ) { class AWillowVehicle** pyWVehicle = 0 ; int* pySeatIndex = (int*)malloc(sizeof(int)) ;  bool ret =  self.GetVehicleAndSeatIndex(pyWVehicle, pySeatIndex); return py::make_tuple(ret, *pyWVehicle, *pySeatIndex); })
		;
	py::class_< AWillowVehicle, AWillowVehicleBase >(m, "AWillowVehicle")
		.def_property("bIsInvulnerable", [](AWillowVehicle &self){return self.bIsInvulnerable;}, [](AWillowVehicle &self, bool value){self.bIsInvulnerable = value ? 1 : 0;})
		.def_property("bIsAIInvulnerable", [](AWillowVehicle &self){return self.bIsAIInvulnerable;}, [](AWillowVehicle &self, bool value){self.bIsAIInvulnerable = value ? 1 : 0;})
		.def_property("bInDriverLeave", [](AWillowVehicle &self){return self.bInDriverLeave;}, [](AWillowVehicle &self, bool value){self.bInDriverLeave = value ? 1 : 0;})
		.def_property("bAICanUse", [](AWillowVehicle &self){return self.bAICanUse;}, [](AWillowVehicle &self, bool value){self.bAICanUse = value ? 1 : 0;})
		.def_property("bAIClaimed", [](AWillowVehicle &self){return self.bAIClaimed;}, [](AWillowVehicle &self, bool value){self.bAIClaimed = value ? 1 : 0;})
		.def_property("bTeamLocked", [](AWillowVehicle &self){return self.bTeamLocked;}, [](AWillowVehicle &self, bool value){self.bTeamLocked = value ? 1 : 0;})
		.def_property("bKeyVehicle", [](AWillowVehicle &self){return self.bKeyVehicle;}, [](AWillowVehicle &self, bool value){self.bKeyVehicle = value ? 1 : 0;})
		.def_property("bEjectPassengersWhenFlipped", [](AWillowVehicle &self){return self.bEjectPassengersWhenFlipped;}, [](AWillowVehicle &self, bool value){self.bEjectPassengersWhenFlipped = value ? 1 : 0;})
		.def_property("bDestroyVehicleWhenFlippedAndAIControlled", [](AWillowVehicle &self){return self.bDestroyVehicleWhenFlippedAndAIControlled;}, [](AWillowVehicle &self, bool value){self.bDestroyVehicleWhenFlippedAndAIControlled = value ? 1 : 0;})
		.def_property("bMustBeUpright", [](AWillowVehicle &self){return self.bMustBeUpright;}, [](AWillowVehicle &self, bool value){self.bMustBeUpright = value ? 1 : 0;})
		.def_property("bNeverReset", [](AWillowVehicle &self){return self.bNeverReset;}, [](AWillowVehicle &self, bool value){self.bNeverReset = value ? 1 : 0;})
		.def_property("bEjectKilledBodies", [](AWillowVehicle &self){return self.bEjectKilledBodies;}, [](AWillowVehicle &self, bool value){self.bEjectKilledBodies = value ? 1 : 0;})
		.def_property("bReducedFallingCollisionDamage", [](AWillowVehicle &self){return self.bReducedFallingCollisionDamage;}, [](AWillowVehicle &self, bool value){self.bReducedFallingCollisionDamage = value ? 1 : 0;})
		.def_property("bTakingRadiusDamage", [](AWillowVehicle &self){return self.bTakingRadiusDamage;}, [](AWillowVehicle &self, bool value){self.bTakingRadiusDamage = value ? 1 : 0;})
		.def_property("bNoTeleportEffects", [](AWillowVehicle &self){return self.bNoTeleportEffects;}, [](AWillowVehicle &self, bool value){self.bNoTeleportEffects = value ? 1 : 0;})
		.def_property("bInitialDamageReplicated", [](AWillowVehicle &self){return self.bInitialDamageReplicated;}, [](AWillowVehicle &self, bool value){self.bInitialDamageReplicated = value ? 1 : 0;})
		.def_property("bDamageSmoking", [](AWillowVehicle &self){return self.bDamageSmoking;}, [](AWillowVehicle &self, bool value){self.bDamageSmoking = value ? 1 : 0;})
		.def_property("bHeavyDamageSmoking", [](AWillowVehicle &self){return self.bHeavyDamageSmoking;}, [](AWillowVehicle &self, bool value){self.bHeavyDamageSmoking = value ? 1 : 0;})
		.def_property("UseSimplifiedAIEngineRtpcModel", [](AWillowVehicle &self){return self.UseSimplifiedAIEngineRtpcModel;}, [](AWillowVehicle &self, bool value){self.UseSimplifiedAIEngineRtpcModel = value ? 1 : 0;})
		.def_property("bPlayingSpawnEffect", [](AWillowVehicle &self){return self.bPlayingSpawnEffect;}, [](AWillowVehicle &self, bool value){self.bPlayingSpawnEffect = value ? 1 : 0;})
		.def_property("bShowDamageDebug", [](AWillowVehicle &self){return self.bShowDamageDebug;}, [](AWillowVehicle &self, bool value){self.bShowDamageDebug = value ? 1 : 0;})
		.def_property("bStealthVehicle", [](AWillowVehicle &self){return self.bStealthVehicle;}, [](AWillowVehicle &self, bool value){self.bStealthVehicle = value ? 1 : 0;})
		.def_property("bHandbrakeEffects", [](AWillowVehicle &self){return self.bHandbrakeEffects;}, [](AWillowVehicle &self, bool value){self.bHandbrakeEffects = value ? 1 : 0;})
		.def_property("bHoldingCam", [](AWillowVehicle &self){return self.bHoldingCam;}, [](AWillowVehicle &self, bool value){self.bHoldingCam = value ? 1 : 0;})
		.def_property("bReverseCam", [](AWillowVehicle &self){return self.bReverseCam;}, [](AWillowVehicle &self, bool value){self.bReverseCam = value ? 1 : 0;})
		.def_property("AfterburnerEngaged", [](AWillowVehicle &self){return self.AfterburnerEngaged;}, [](AWillowVehicle &self, bool value){self.AfterburnerEngaged = value ? 1 : 0;})
		.def_property("bInitialized", [](AWillowVehicle &self){return self.bInitialized;}, [](AWillowVehicle &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_property("bHeadlightsOn", [](AWillowVehicle &self){return self.bHeadlightsOn;}, [](AWillowVehicle &self, bool value){self.bHeadlightsOn = value ? 1 : 0;})
		.def_property("bBraking", [](AWillowVehicle &self){return self.bBraking;}, [](AWillowVehicle &self, bool value){self.bBraking = value ? 1 : 0;})
		.def_property("bReversing", [](AWillowVehicle &self){return self.bReversing;}, [](AWillowVehicle &self, bool value){self.bReversing = value ? 1 : 0;})
		.def_property("bThrottling", [](AWillowVehicle &self){return self.bThrottling;}, [](AWillowVehicle &self, bool value){self.bThrottling = value ? 1 : 0;})
		.def_property("bIsStationaryTurret", [](AWillowVehicle &self){return self.bIsStationaryTurret;}, [](AWillowVehicle &self, bool value){self.bIsStationaryTurret = value ? 1 : 0;})
		.def_property("bSpawning", [](AWillowVehicle &self){return self.bSpawning;}, [](AWillowVehicle &self, bool value){self.bSpawning = value ? 1 : 0;})
		.def_property("bDespawned", [](AWillowVehicle &self){return self.bDespawned;}, [](AWillowVehicle &self, bool value){self.bDespawned = value ? 1 : 0;})
		.def_property("bDisableSeatSwap", [](AWillowVehicle &self){return self.bDisableSeatSwap;}, [](AWillowVehicle &self, bool value){self.bDisableSeatSwap = value ? 1 : 0;})
		.def_property("bFrontalCollision", [](AWillowVehicle &self){return self.bFrontalCollision;}, [](AWillowVehicle &self, bool value){self.bFrontalCollision = value ? 1 : 0;})
		.def_property("bFrontalCollisionWithFixed", [](AWillowVehicle &self){return self.bFrontalCollisionWithFixed;}, [](AWillowVehicle &self, bool value){self.bFrontalCollisionWithFixed = value ? 1 : 0;})
		.def_property("bScrapeActive", [](AWillowVehicle &self){return self.bScrapeActive;}, [](AWillowVehicle &self, bool value){self.bScrapeActive = value ? 1 : 0;})
		.def_property("bScrapeCurrent", [](AWillowVehicle &self){return self.bScrapeCurrent;}, [](AWillowVehicle &self, bool value){self.bScrapeCurrent = value ? 1 : 0;})
		.def_property("bIsAvailableForUse", [](AWillowVehicle &self){return self.bIsAvailableForUse;}, [](AWillowVehicle &self, bool value){self.bIsAvailableForUse = value ? 1 : 0;})
		.def_property("bCostsToUse", [](AWillowVehicle &self){return self.bCostsToUse;}, [](AWillowVehicle &self, bool value){self.bCostsToUse = value ? 1 : 0;})
		.def_property("bResurrecting", [](AWillowVehicle &self){return self.bResurrecting;}, [](AWillowVehicle &self, bool value){self.bResurrecting = value ? 1 : 0;})
		.def_property("bSuspendBaseRestrictions", [](AWillowVehicle &self){return self.bSuspendBaseRestrictions;}, [](AWillowVehicle &self, bool value){self.bSuspendBaseRestrictions = value ? 1 : 0;})
		.def_readwrite("VfTable_IIInstanceData", &AWillowVehicle::VfTable_IIInstanceData, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDamageSurface", &AWillowVehicle::VfTable_IIDamageSurface, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIUsable", &AWillowVehicle::VfTable_IIUsable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBalancedActor", &AWillowVehicle::VfTable_IIBalancedActor, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIStatusEffectTarget", &AWillowVehicle::VfTable_IIStatusEffectTarget, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIHealable", &AWillowVehicle::VfTable_IIHealable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIDamageable", &AWillowVehicle::VfTable_IIDamageable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyInfoProvider", &AWillowVehicle::VfTable_IIBodyInfoProvider, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyCompositionInstance", &AWillowVehicle::VfTable_IIBodyCompositionInstance, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIConstructObject", &AWillowVehicle::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("VfTable_IICustomizable", &AWillowVehicle::VfTable_IICustomizable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorConsumer", &AWillowVehicle::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIHitRegionConsumer", &AWillowVehicle::VfTable_IIHitRegionConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_ISpecialMoveInterface", &AWillowVehicle::VfTable_ISpecialMoveInterface, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIMapDisplayInfo", &AWillowVehicle::VfTable_IIMapDisplayInfo, py::return_value_policy::reference)
		.def_readwrite("ExpLevel", &AWillowVehicle::ExpLevel)
		.def_readwrite("GameStage", &AWillowVehicle::GameStage)
		.def_readwrite("AwesomeLevel", &AWillowVehicle::AwesomeLevel)
		.def_readwrite("ExperiencePointMultiplier", &AWillowVehicle::ExperiencePointMultiplier)
		.def_readwrite("ExperiencePointMultiplierBaseValue", &AWillowVehicle::ExperiencePointMultiplierBaseValue)
		.def_readwrite("ExperiencePointMultiplierModifierStack", &AWillowVehicle::ExperiencePointMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("MinRBImpactDamageForce", &AWillowVehicle::MinRBImpactDamageForce)
		.def_readwrite("ImpactDamage", &AWillowVehicle::ImpactDamage)
		.def_readwrite("RunOverDamage", &AWillowVehicle::RunOverDamage)
		.def_readwrite("FeedbackDamage", &AWillowVehicle::FeedbackDamage)
		.def_readwrite("LastRBImpactDamage", &AWillowVehicle::LastRBImpactDamage)
		.def_readwrite("HangTime", &AWillowVehicle::HangTime)
		.def_readwrite("DebugPursuitPoint", &AWillowVehicle::DebugPursuitPoint, py::return_value_policy::reference)
		.def_readwrite("VehicleFOVState", &AWillowVehicle::VehicleFOVState)
		.def_readwrite("Team", &AWillowVehicle::Team)
		.def_readwrite("TurretFiringMode", &AWillowVehicle::TurretFiringMode)
		.def_readwrite("VehicleDeathStatus", &AWillowVehicle::VehicleDeathStatus)
		.def_readwrite("VehicleDamagePct", &AWillowVehicle::VehicleDamagePct)
		.def_readwrite("LastBarrelIndex", &AWillowVehicle::LastBarrelIndex)
		.def_readwrite("CostsToUseType", &AWillowVehicle::CostsToUseType)
		.def_readwrite("VehicleDesiredFOV", &AWillowVehicle::VehicleDesiredFOV)
		.def_readwrite("HoodLeftSocketName", &AWillowVehicle::HoodLeftSocketName, py::return_value_policy::reference)
		.def_readwrite("HoodRightSocketName", &AWillowVehicle::HoodRightSocketName, py::return_value_policy::reference)
		.def_readwrite("ActorSpawnCost", &AWillowVehicle::ActorSpawnCost)
		.def_readwrite("MyHitRegionHelper", &AWillowVehicle::MyHitRegionHelper, py::return_value_policy::reference)
		.def_readwrite("CachedControlDef", &AWillowVehicle::CachedControlDef, py::return_value_policy::reference)
		.def_readwrite("MaxInvertedGroundTime", &AWillowVehicle::MaxInvertedGroundTime)
		.def_readwrite("FirstInvertedGroundCollisionTime", &AWillowVehicle::FirstInvertedGroundCollisionTime)
		.def_readwrite("LastInvertedGroundCollisionTime", &AWillowVehicle::LastInvertedGroundCollisionTime)
		.def_readwrite("VehicleLostTime", &AWillowVehicle::VehicleLostTime)
		.def_readwrite("TeamUseTime", &AWillowVehicle::TeamUseTime)
		.def_readwrite("PlayerStartTime", &AWillowVehicle::PlayerStartTime)
		.def_readwrite("RespawnTime", &AWillowVehicle::RespawnTime)
		.def_readwrite("InitialSpawnDelay", &AWillowVehicle::InitialSpawnDelay)
		.def_readwrite("ObjectiveGetOutDist", &AWillowVehicle::ObjectiveGetOutDist)
		.def_readwrite("LockedOnAkEvent", &AWillowVehicle::LockedOnAkEvent, py::return_value_policy::reference)
		.def_readwrite("RanOverDamageType", &AWillowVehicle::RanOverDamageType, py::return_value_policy::reference)
		.def_readwrite("RanIntoDamageType", &AWillowVehicle::RanIntoDamageType, py::return_value_policy::reference)
		.def_readwrite("MinRunOverSpeed", &AWillowVehicle::MinRunOverSpeed)
		.def_readwrite("StolenAnnouncementIndex", &AWillowVehicle::StolenAnnouncementIndex)
		.def_readwrite("LastRunOverWarningTime", &AWillowVehicle::LastRunOverWarningTime)
		.def_readwrite("MinRunOverWarningAim", &AWillowVehicle::MinRunOverWarningAim)
		.def_readwrite("NextVehicle", &AWillowVehicle::NextVehicle, py::return_value_policy::reference)
		.def_readwrite("ParentFactory", &AWillowVehicle::ParentFactory, py::return_value_policy::reference)
		.def_readwrite("Reservation", &AWillowVehicle::Reservation, py::return_value_policy::reference)
		.def_readwrite("ResetTime", &AWillowVehicle::ResetTime)
		.def_readwrite("TeamBeaconMaxDist", &AWillowVehicle::TeamBeaconMaxDist)
		.def_readwrite("TeamBeaconPlayerInfoMaxDist", &AWillowVehicle::TeamBeaconPlayerInfoMaxDist)
		.def_readwrite("WaterDamage", &AWillowVehicle::WaterDamage)
		.def_readwrite("AccumulatedWaterDamage", &AWillowVehicle::AccumulatedWaterDamage)
		.def_readwrite("VehicleDrowningDamType", &AWillowVehicle::VehicleDrowningDamType, py::return_value_policy::reference)
		.def_readwrite("WeaponRotation", &AWillowVehicle::WeaponRotation, py::return_value_policy::reference)
		.def_readwrite("AttachedWeapon", &AWillowVehicle::AttachedWeapon, py::return_value_policy::reference)
		.def_readwrite("TurretFlashLocation", &AWillowVehicle::TurretFlashLocation, py::return_value_policy::reference)
		.def_readwrite("TurretFlashCount", &AWillowVehicle::TurretFlashCount)
		.def_readwrite("TurretWeaponRotation", &AWillowVehicle::TurretWeaponRotation, py::return_value_policy::reference)
		.def_readwrite("TurretAttachedWeapon", &AWillowVehicle::TurretAttachedWeapon, py::return_value_policy::reference)
		.def_readwrite("StatusEffectComp", &AWillowVehicle::StatusEffectComp, py::return_value_policy::reference)
		.def_readwrite("YawDampingVelMin", &AWillowVehicle::YawDampingVelMin)
		.def_readwrite("YawDampingVelMax", &AWillowVehicle::YawDampingVelMax)
		.def_readwrite("YawDampingAngPow", &AWillowVehicle::YawDampingAngPow)
		.def_readwrite("Seats", &AWillowVehicle::Seats, py::return_value_policy::reference)
		.def_readwrite("DebugLastSeatNdx", &AWillowVehicle::DebugLastSeatNdx)
		.def_readwrite("VirtualSeats", &AWillowVehicle::VirtualSeats, py::return_value_policy::reference)
		.def_readwrite("VehicleEffects", &AWillowVehicle::VehicleEffects, py::return_value_policy::reference)
		.def_readwrite("DamageMorphTargets", &AWillowVehicle::DamageMorphTargets, py::return_value_policy::reference)
		.def_readwrite("OldVehicleHealth", &AWillowVehicle::OldVehicleHealth)
		.def_readwrite("SMComponent", &AWillowVehicle::SMComponent, py::return_value_policy::reference)
		.def_readwrite("ReplicatedSMData", &AWillowVehicle::ReplicatedSMData, py::return_value_policy::reference)
		.def_readwrite("LastCheckedAnimSetsTime", &AWillowVehicle::LastCheckedAnimSetsTime)
		.def_readwrite("LastRefreshedIdleAnimsTime", &AWillowVehicle::LastRefreshedIdleAnimsTime)
		.def_readwrite("DamageSmokeThreshhold", &AWillowVehicle::DamageSmokeThreshhold)
		.def_readwrite("HeavyDamageSmokeThreshhold", &AWillowVehicle::HeavyDamageSmokeThreshhold)
		.def_readwrite("MaxFireEffectDistance", &AWillowVehicle::MaxFireEffectDistance)
		.def_readwrite("LastJumpOutCheck", &AWillowVehicle::LastJumpOutCheck)
		.def_readwrite("ExplosionDefintion", &AWillowVehicle::ExplosionDefintion, py::return_value_policy::reference)
		.def_readwrite("ExplosionRadius", &AWillowVehicle::ExplosionRadius)
		.def_readwrite("ExplosionDamage", &AWillowVehicle::ExplosionDamage)
		.def_readwrite("ExplosionMomentum", &AWillowVehicle::ExplosionMomentum)
		.def_readwrite("HeavySuspensionShiftAkEvent", &AWillowVehicle::HeavySuspensionShiftAkEvent, py::return_value_policy::reference)
		.def_readwrite("LightSuspensionShiftAkEvent", &AWillowVehicle::LightSuspensionShiftAkEvent, py::return_value_policy::reference)
		.def_readwrite("LightSuspensionShiftThreshold", &AWillowVehicle::LightSuspensionShiftThreshold)
		.def_readwrite("HeavySuspensionShiftThreshold", &AWillowVehicle::HeavySuspensionShiftThreshold)
		.def_readwrite("LightSuspensionRefireRate", &AWillowVehicle::LightSuspensionRefireRate)
		.def_readwrite("SuspensionSounds", &AWillowVehicle::SuspensionSounds, py::return_value_policy::reference)
		.def_readwrite("HeavySuspensionPlayingInfo", &AWillowVehicle::HeavySuspensionPlayingInfo, py::return_value_policy::reference)
		.def_readwrite("TireLongAkEvent", &AWillowVehicle::TireLongAkEvent, py::return_value_policy::reference)
		.def_readwrite("TireLatAkEvent", &AWillowVehicle::TireLatAkEvent, py::return_value_policy::reference)
		.def_readwrite("TireLongAkRtpc", &AWillowVehicle::TireLongAkRtpc, py::return_value_policy::reference)
		.def_readwrite("TireLatAkRtpc", &AWillowVehicle::TireLatAkRtpc, py::return_value_policy::reference)
		.def_readwrite("TireNoiseCutoffSpeed", &AWillowVehicle::TireNoiseCutoffSpeed)
		.def_readwrite("TireSlideCutoffRatio", &AWillowVehicle::TireSlideCutoffRatio)
		.def_readwrite("TireNoiseSmoothingSpeed", &AWillowVehicle::TireNoiseSmoothingSpeed)
		.def_readwrite("TireSlideDecayRate", &AWillowVehicle::TireSlideDecayRate)
		.def_readwrite("TireLongPlayingInfo", &AWillowVehicle::TireLongPlayingInfo, py::return_value_policy::reference)
		.def_readwrite("TireLatPlayingInfo", &AWillowVehicle::TireLatPlayingInfo, py::return_value_policy::reference)
		.def_readwrite("TireNoiseSmoothedValue", &AWillowVehicle::TireNoiseSmoothedValue)
		.def_readwrite("LastTireMaterialAkSwitch", &AWillowVehicle::LastTireMaterialAkSwitch, py::return_value_policy::reference)
		.def_readwrite("LastTireLatRtpcValue", &AWillowVehicle::LastTireLatRtpcValue)
		.def_readwrite("VehicleScrapeAkEvent", &AWillowVehicle::VehicleScrapeAkEvent, py::return_value_policy::reference)
		.def_readwrite("VehicleScrapeAkRtpc", &AWillowVehicle::VehicleScrapeAkRtpc, py::return_value_policy::reference)
		.def_readwrite("VehicleScrapeRtpcDecayRate", &AWillowVehicle::VehicleScrapeRtpcDecayRate)
		.def_readwrite("VehicleScrapeAkPlayingInfo", &AWillowVehicle::VehicleScrapeAkPlayingInfo, py::return_value_policy::reference)
		.def_readwrite("LastVehicleScrapeAkRtpcValue", &AWillowVehicle::LastVehicleScrapeAkRtpcValue)
		.def_readwrite("VehicleCollisionAkEvent", &AWillowVehicle::VehicleCollisionAkEvent, py::return_value_policy::reference)
		.def_readwrite("VehicleImpactForceAkRtpc", &AWillowVehicle::VehicleImpactForceAkRtpc, py::return_value_policy::reference)
		.def_readwrite("MinRBCollisionForceSound", &AWillowVehicle::MinRBCollisionForceSound)
		.def_readwrite("VehicleImpactAkPlayingInfo", &AWillowVehicle::VehicleImpactAkPlayingInfo, py::return_value_policy::reference)
		.def_readwrite("LastImpactAkEventTime", &AWillowVehicle::LastImpactAkEventTime)
		.def_readwrite("LastImpactAkRtpcValue", &AWillowVehicle::LastImpactAkRtpcValue)
		.def_readwrite("EngineStartAkEvent", &AWillowVehicle::EngineStartAkEvent, py::return_value_policy::reference)
		.def_readwrite("EngineStopAkEvent", &AWillowVehicle::EngineStopAkEvent, py::return_value_policy::reference)
		.def_readwrite("EngineRpmAkRtpc", &AWillowVehicle::EngineRpmAkRtpc, py::return_value_policy::reference)
		.def_readwrite("EngineLoadAkRtpc", &AWillowVehicle::EngineLoadAkRtpc, py::return_value_policy::reference)
		.def_readwrite("EngineThrottleAkRtpc", &AWillowVehicle::EngineThrottleAkRtpc, py::return_value_policy::reference)
		.def_readwrite("EngineRpmDecayRate", &AWillowVehicle::EngineRpmDecayRate)
		.def_readwrite("EngineRpmIncreaseRate", &AWillowVehicle::EngineRpmIncreaseRate)
		.def_readwrite("EngineRpmDecelRate", &AWillowVehicle::EngineRpmDecelRate)
		.def_readwrite("EngineLoadIncreaseRate", &AWillowVehicle::EngineLoadIncreaseRate)
		.def_readwrite("EngineLoadDecayRate", &AWillowVehicle::EngineLoadDecayRate)
		.def_readwrite("EngineAkPlayingInfo", &AWillowVehicle::EngineAkPlayingInfo, py::return_value_policy::reference)
		.def_readwrite("LastRpmRtpcValue", &AWillowVehicle::LastRpmRtpcValue)
		.def_readwrite("LastLoadRtpcValue", &AWillowVehicle::LastLoadRtpcValue)
		.def_readwrite("LastEffectiveSpeed", &AWillowVehicle::LastEffectiveSpeed)
		.def_readwrite("DecelTimeStamp", &AWillowVehicle::DecelTimeStamp)
		.def_readwrite("AfterburnerBelowThresholdTime", &AWillowVehicle::AfterburnerBelowThresholdTime)
		.def_readwrite("TeamBeaconOffset", &AWillowVehicle::TeamBeaconOffset, py::return_value_policy::reference)
		.def_readwrite("SpawnRadius", &AWillowVehicle::SpawnRadius)
		.def_readwrite("LockedTexture", &AWillowVehicle::LockedTexture, py::return_value_policy::reference)
		.def_readwrite("CachedPlayerWeaponAimPoint", &AWillowVehicle::CachedPlayerWeaponAimPoint, py::return_value_policy::reference)
		.def_readwrite("PlayerControllerNameForLastCachedAimPoint", &AWillowVehicle::PlayerControllerNameForLastCachedAimPoint, py::return_value_policy::reference)
		.def_readwrite("FullSteerThreshold", &AWillowVehicle::FullSteerThreshold)
		.def_readwrite("AISteerChangeThreshold", &AWillowVehicle::AISteerChangeThreshold)
		.def_readwrite("ReverseAngle", &AWillowVehicle::ReverseAngle)
		.def_readwrite("SlopeMinDriveLimit", &AWillowVehicle::SlopeMinDriveLimit)
		.def_readwrite("SlopeMaxDriveLimit", &AWillowVehicle::SlopeMaxDriveLimit)
		.def_readwrite("ReverseAngleDegrees", &AWillowVehicle::ReverseAngleDegrees)
		.def_readwrite("ImpulseMultiplier", &AWillowVehicle::ImpulseMultiplier, py::return_value_policy::reference)
		.def_readwrite("KillswitchBrakes", &AWillowVehicle::KillswitchBrakes)
		.def_readwrite("AICollisionBackupDistance", &AWillowVehicle::AICollisionBackupDistance)
		.def_readwrite("AICollisionTraceExtent", &AWillowVehicle::AICollisionTraceExtent, py::return_value_policy::reference)
		.def_readwrite("HandbrakeLatVelCutoff", &AWillowVehicle::HandbrakeLatVelCutoff)
		.def_readwrite("WheelParticleCurrentScale", &AWillowVehicle::WheelParticleCurrentScale)
		.def_readwrite("CurrentCamDist", &AWillowVehicle::CurrentCamDist)
		.def_readwrite("DesiredCamDist", &AWillowVehicle::DesiredCamDist)
		.def_readwrite("SmoothedCamRotZ", &AWillowVehicle::SmoothedCamRotZ, py::return_value_policy::reference)
		.def_readwrite("ReleaseCamTime", &AWillowVehicle::ReleaseCamTime)
		.def_readwrite("ReverseCamTime", &AWillowVehicle::ReverseCamTime)
		.def_readwrite("AfterburnerThreshold", &AWillowVehicle::AfterburnerThreshold)
		.def_readwrite("AfterburnerActivationTime", &AWillowVehicle::AfterburnerActivationTime)
		.def_readwrite("AfterburnerTorqueBonus", &AWillowVehicle::AfterburnerTorqueBonus)
		.def_readwrite("AfterburnerPool", &AWillowVehicle::AfterburnerPool, py::return_value_policy::reference)
		.def_readwrite("SpeedMultiplierAIOnly", &AWillowVehicle::SpeedMultiplierAIOnly)
		.def_readwrite("SpeedMultiplierAIOnlyBaseValue", &AWillowVehicle::SpeedMultiplierAIOnlyBaseValue)
		.def_readwrite("SpeedMultiplierAIOnlyModifierStack", &AWillowVehicle::SpeedMultiplierAIOnlyModifierStack, py::return_value_policy::reference)
		.def_readwrite("SpeedMultiplierAll", &AWillowVehicle::SpeedMultiplierAll)
		.def_readwrite("SpeedMultiplierAllBaseValue", &AWillowVehicle::SpeedMultiplierAllBaseValue)
		.def_readwrite("SpeedMultiplierAllModifierStack", &AWillowVehicle::SpeedMultiplierAllModifierStack, py::return_value_policy::reference)
		.def_readwrite("PursuitGrids", &AWillowVehicle::PursuitGrids, py::return_value_policy::reference)
		.def_readwrite("SkidEffect", &AWillowVehicle::SkidEffect, py::return_value_policy::reference)
		.def_readwrite("AtRestEffect", &AWillowVehicle::AtRestEffect, py::return_value_policy::reference)
		.def_readwrite("LockedForwardVel", &AWillowVehicle::LockedForwardVel)
		.def_readwrite("SwapPair", &AWillowVehicle::SwapPair, py::return_value_policy::reference)
		.def_readwrite("DynamicLightEnvironment", &AWillowVehicle::DynamicLightEnvironment, py::return_value_policy::reference)
		.def_readwrite("LastMakeNoiseTime", &AWillowVehicle::LastMakeNoiseTime)
		.def_readwrite("ResourcePoolManager", &AWillowVehicle::ResourcePoolManager, py::return_value_policy::reference)
		.def_readwrite("DriverThreshold", &AWillowVehicle::DriverThreshold)
		.def_readwrite("UpdateWheelContactNum", &AWillowVehicle::UpdateWheelContactNum)
		.def_readwrite("UpdateWheelContactTime", &AWillowVehicle::UpdateWheelContactTime)
		.def_readwrite("UpdateWheelContactInterval", &AWillowVehicle::UpdateWheelContactInterval)
		.def_readwrite("VSSUIDef", &AWillowVehicle::VSSUIDef, py::return_value_policy::reference)
		.def_readwrite("HandlingDef", &AWillowVehicle::HandlingDef, py::return_value_policy::reference)
		.def_readwrite("ChassisDef", &AWillowVehicle::ChassisDef, py::return_value_policy::reference)
		.def_readwrite("VehicleDef", &AWillowVehicle::VehicleDef, py::return_value_policy::reference)
		.def_readwrite("VSSVehicleDef", &AWillowVehicle::VSSVehicleDef, py::return_value_policy::reference)
		.def_readwrite("ReplicatedInstanceDataState", &AWillowVehicle::ReplicatedInstanceDataState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedCFX", &AWillowVehicle::ReplicatedCFX, py::return_value_policy::reference)
		.def_readwrite("InstanceDataState", &AWillowVehicle::InstanceDataState, py::return_value_policy::reference)
		.def_readwrite("VehicleMaterial", &AWillowVehicle::VehicleMaterial, py::return_value_policy::reference)
		.def_readwrite("VehicleMaterialParent", &AWillowVehicle::VehicleMaterialParent, py::return_value_policy::reference)
		.def_readwrite("LastCheckedHeadlightsTime", &AWillowVehicle::LastCheckedHeadlightsTime)
		.def_readwrite("LastVehicleCombatArea", &AWillowVehicle::LastVehicleCombatArea, py::return_value_policy::reference)
		.def_readwrite("LastCombatAreaCheckTime", &AWillowVehicle::LastCombatAreaCheckTime)
		.def_readwrite("CombatAreaCheckInterval", &AWillowVehicle::CombatAreaCheckInterval)
		.def_readwrite("VelocityBeforeRBCollision", &AWillowVehicle::VelocityBeforeRBCollision, py::return_value_policy::reference)
		.def_readwrite("MeleeImpulse", &AWillowVehicle::MeleeImpulse)
		.def_readwrite("LastFrontalCollisionWithFixedTime", &AWillowVehicle::LastFrontalCollisionWithFixedTime)
		.def_readwrite("ConsumerHandle", &AWillowVehicle::ConsumerHandle, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorConsumerState", &AWillowVehicle::ReplicatedBehaviorConsumerState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorEvent", &AWillowVehicle::ReplicatedBehaviorEvent, py::return_value_policy::reference)
		.def_readwrite("HitRegionHealthScaleAttribute", &AWillowVehicle::HitRegionHealthScaleAttribute)
		.def_readwrite("HitRegionHealthScaleAttributeBaseValue", &AWillowVehicle::HitRegionHealthScaleAttributeBaseValue)
		.def_readwrite("HitRegionHealthScaleAttributeModifierStack", &AWillowVehicle::HitRegionHealthScaleAttributeModifierStack, py::return_value_policy::reference)
		.def_readwrite("ImpactEffectReFireDelay", &AWillowVehicle::ImpactEffectReFireDelay)
		.def_readwrite("ImpactEffectThreshold", &AWillowVehicle::ImpactEffectThreshold)
		.def_readwrite("ImpactEffectDefinition", &AWillowVehicle::ImpactEffectDefinition, py::return_value_policy::reference)
		.def_readwrite("LastImpactEffectTime", &AWillowVehicle::LastImpactEffectTime)
		.def_readwrite("ScrapeEffectComponent", &AWillowVehicle::ScrapeEffectComponent, py::return_value_policy::reference)
		.def_readwrite("ScrapeEffectInfo", &AWillowVehicle::ScrapeEffectInfo, py::return_value_policy::reference)
		.def_readwrite("DefaultWheelParticleSystem", &AWillowVehicle::DefaultWheelParticleSystem, py::return_value_policy::reference)
		.def_readwrite("MinParticleSlipVelocity", &AWillowVehicle::MinParticleSlipVelocity)
		.def_readwrite("LastScrapeTime", &AWillowVehicle::LastScrapeTime)
		.def_readwrite("TotalSlip", &AWillowVehicle::TotalSlip)
		.def_readwrite("LastSlideActive", &AWillowVehicle::LastSlideActive)
		.def_readwrite("ItemPoolList", &AWillowVehicle::ItemPoolList, py::return_value_policy::reference)
		.def_readwrite("CostsToUseAmount", &AWillowVehicle::CostsToUseAmount)
		.def_readwrite("CachedCustomization", &AWillowVehicle::CachedCustomization, py::return_value_policy::reference)
		.def_readwrite("StrafeSteeringValue", &AWillowVehicle::StrafeSteeringValue)
		.def_readwrite("PreviousSteeringTime", &AWillowVehicle::PreviousSteeringTime)
		.def_readwrite("TimeSelfLastDamagedByCollision", &AWillowVehicle::TimeSelfLastDamagedByCollision)
		.def_readwrite("LastKnownNumberOfPlayers", &AWillowVehicle::LastKnownNumberOfPlayers)
		.def_readwrite("LastKnownMaxPlayerExpLevel", &AWillowVehicle::LastKnownMaxPlayerExpLevel)
		.def_readwrite("TimeBetweenBalanceChecks", &AWillowVehicle::TimeBetweenBalanceChecks)
		.def("CrushedByActor", &AWillowVehicle::CrushedByActor)
		.def("ClientInitiateCustomizationRequest", &AWillowVehicle::ClientInitiateCustomizationRequest)
		.def("eventInitiateCustomizationRequest", &AWillowVehicle::eventInitiateCustomizationRequest)
		.def("eventGetMapDisplayName", &AWillowVehicle::eventGetMapDisplayName, py::return_value_policy::reference)
		.def("eventGetMapDisplayHeader", &AWillowVehicle::eventGetMapDisplayHeader, py::return_value_policy::reference)
		.def("eventHandleHealthDepleted", &AWillowVehicle::eventHandleHealthDepleted)
		.def("Behavior_ChangeUsabilityCost", &AWillowVehicle::Behavior_ChangeUsabilityCost)
		.def("Behavior_ChangeUsability", &AWillowVehicle::Behavior_ChangeUsability)
		.def("OnDefaultFOVChanged", &AWillowVehicle::OnDefaultFOVChanged)
		.def("GetAfterburnerVehicleFOV", &AWillowVehicle::GetAfterburnerVehicleFOV)
		.def("GetDefaultVehicleFOV", &AWillowVehicle::GetDefaultVehicleFOV)
		.def("GetFlexibleVehicleFOV", &AWillowVehicle::GetFlexibleVehicleFOV)
		.def("SetSimObject", &AWillowVehicle::SetSimObject)
		.def("eventServerSpecialMove_StopAny", &AWillowVehicle::eventServerSpecialMove_StopAny)
		.def("eventServerSpecialMove_Stop", &AWillowVehicle::eventServerSpecialMove_Stop)
		.def("eventServerSpecialMove_Queue", &AWillowVehicle::eventServerSpecialMove_Queue)
		.def("eventServerSpecialMove_Play", &AWillowVehicle::eventServerSpecialMove_Play)
		.def("SetReplicatedSMData", &AWillowVehicle::SetReplicatedSMData)
		.def("GetDefaultRootMotionRotationMode", &AWillowVehicle::GetDefaultRootMotionRotationMode)
		.def("GetDefaultRootMotionMode", &AWillowVehicle::GetDefaultRootMotionMode)
		.def("GetSkelMesh", &AWillowVehicle::GetSkelMesh, py::return_value_policy::reference)
		.def("GetSMComponent", &AWillowVehicle::GetSMComponent, py::return_value_policy::reference)
		.def("GetActor", &AWillowVehicle::GetActor, py::return_value_policy::reference)
		.def("PlayUIAkEvent", &AWillowVehicle::PlayUIAkEvent)
		.def("GetIntrinsicArmor", &AWillowVehicle::GetIntrinsicArmor)
		.def("OnShieldDepleted", &AWillowVehicle::OnShieldDepleted)
		.def("SetShieldStrength", &AWillowVehicle::SetShieldStrength)
		.def("GetMaxShieldStrength", &AWillowVehicle::GetMaxShieldStrength)
		.def("GetShieldStrength", &AWillowVehicle::GetShieldStrength)
		.def("NotifyDamageTaken", &AWillowVehicle::NotifyDamageTaken)
		.def("SetHidden", &AWillowVehicle::SetHidden)
		.def("eventFreezeForCinematicMode", &AWillowVehicle::eventFreezeForCinematicMode)
		.def("eventOutsideWorldBounds", &AWillowVehicle::eventOutsideWorldBounds)
		.def("eventFellOutOfWorld", &AWillowVehicle::eventFellOutOfWorld)
		.def("ResurrectVehicle", &AWillowVehicle::ResurrectVehicle)
		.def("GetWillowVehicle", &AWillowVehicle::GetWillowVehicle, py::return_value_policy::reference)
		.def("SetVehicleDespawned", &AWillowVehicle::SetVehicleDespawned)
		.def("OnNoLongerTargetedByAI", &AWillowVehicle::OnNoLongerTargetedByAI)
		.def("OnTargetedByAI", &AWillowVehicle::OnTargetedByAI)
		.def("PancakeOther", &AWillowVehicle::PancakeOther)
		.def("Behavior_RegisterTargetable", &AWillowVehicle::Behavior_RegisterTargetable)
		.def("SetVehicleSpawning", &AWillowVehicle::SetVehicleSpawning)
		.def("eventServerSetVehicleSpawning", &AWillowVehicle::eventServerSetVehicleSpawning)
		.def("SetVehicleMaterial", &AWillowVehicle::SetVehicleMaterial)
		.def("eventServerSetVehicleMaterial", &AWillowVehicle::eventServerSetVehicleMaterial)
		.def("ServerNotifyAltFireTriggered", &AWillowVehicle::ServerNotifyAltFireTriggered)
		.def("ServerNotifyTargetLockSuccessful", &AWillowVehicle::ServerNotifyTargetLockSuccessful)
		.def("RouteCallToServerForAltFireTrigger", &AWillowVehicle::RouteCallToServerForAltFireTrigger)
		.def("RouteCallToServerForTargetLockSuccess", &AWillowVehicle::RouteCallToServerForTargetLockSuccess)
		.def("ServerStopFireTurret", &AWillowVehicle::ServerStopFireTurret)
		.def("StopAltFireTurret", &AWillowVehicle::StopAltFireTurret)
		.def("StartAltFireTurret", &AWillowVehicle::StartAltFireTurret)
		.def("StopFireTurret", &AWillowVehicle::StopFireTurret)
		.def("ServerStartFireTurret", &AWillowVehicle::ServerStartFireTurret)
		.def("StartFireTurret", &AWillowVehicle::StartFireTurret)
		.def("ServerClearStatusEffects", &AWillowVehicle::ServerClearStatusEffects)
		.def("Behavior_ClearStatusEffects", &AWillowVehicle::Behavior_ClearStatusEffects)
		.def("ProcessViewRotation", &AWillowVehicle::ProcessViewRotation)
		.def("GetUntouchImpact", &AWillowVehicle::GetUntouchImpact, py::return_value_policy::reference)
		.def("GetTouchImpact", &AWillowVehicle::GetTouchImpact, py::return_value_policy::reference)
		.def("CanSplash", &AWillowVehicle::CanSplash)
		.def("FadeInTireNoise", &AWillowVehicle::FadeInTireNoise)
		.def("SetCanTargetCheat", &AWillowVehicle::SetCanTargetCheat)
		.def("CanTarget", &AWillowVehicle::CanTarget)
		.def("SetCanTarget", &AWillowVehicle::SetCanTarget)
		.def("ResetDebugData", &AWillowVehicle::ResetDebugData)
		.def("DebugGetNextDriverOrPassenger", &AWillowVehicle::DebugGetNextDriverOrPassenger, py::return_value_policy::reference)
		.def("GetResourcePoolForResourceDefinition", &AWillowVehicle::GetResourcePoolForResourceDefinition, py::return_value_policy::reference)
		.def("SetupSeatPawnViewLimits", &AWillowVehicle::SetupSeatPawnViewLimits)
		.def("eventGetTargetName", &AWillowVehicle::eventGetTargetName)
		.def("GetTargetableLocation", &AWillowVehicle::GetTargetableLocation, py::return_value_policy::reference)
		.def("DisplayParentInfo", &AWillowVehicle::DisplayParentInfo)
		.def("GetAllBarInfo", &AWillowVehicle::GetAllBarInfo)
		.def("IsAutoAimTarget", &AWillowVehicle::IsAutoAimTarget)
		.def("IsInvulnerable", &AWillowVehicle::IsInvulnerable)
		.def("UpdateEngineSound", &AWillowVehicle::UpdateEngineSound)
		.def("StopEngineSound", &AWillowVehicle::StopEngineSound)
		.def("StartEngineSound", &AWillowVehicle::StartEngineSound)
		.def("NotifyUserCouldNotAffordAttemptedUse", &AWillowVehicle::NotifyUserCouldNotAffordAttemptedUse)
		.def("SetInteractionIcon", &AWillowVehicle::SetInteractionIcon)
		.def("UseObject", &AWillowVehicle::UseObject)
		.def("eventGetInstanceData", &AWillowVehicle::eventGetInstanceData)
		.def("GetReplicatedInstanceDataState", &AWillowVehicle::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &AWillowVehicle::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &AWillowVehicle::DestroyOwnedInstanceData)
		.def("eventRemoveInstanceDataObject", &AWillowVehicle::eventRemoveInstanceDataObject)
		.def("eventRemoveInstanceData", &AWillowVehicle::eventRemoveInstanceData)
		.def("SetInstanceData", &AWillowVehicle::SetInstanceData)
		.def("GetSeatLocationAndRotation", &AWillowVehicle::GetSeatLocationAndRotation)
		.def("GetHijackLocation", &AWillowVehicle::GetHijackLocation, py::return_value_policy::reference)
		.def("GetSide", &AWillowVehicle::GetSide)
		.def("KillAfterburnerEffects", &AWillowVehicle::KillAfterburnerEffects)
		.def("AfterburnerEffects", &AWillowVehicle::AfterburnerEffects)
		.def("ControllerToPlayEffects", &AWillowVehicle::ControllerToPlayEffects, py::return_value_policy::reference)
		.def("AfterburnerShakeTimer", &AWillowVehicle::AfterburnerShakeTimer)
		.def("AfterburnerOff", &AWillowVehicle::AfterburnerOff)
		.def("eventServerAfterburnerOff", &AWillowVehicle::eventServerAfterburnerOff)
		.def("AfterburnerOn", &AWillowVehicle::AfterburnerOn)
		.def("ServerAfterburnerOn", &AWillowVehicle::ServerAfterburnerOn)
		.def("ValidateAfterburner", &AWillowVehicle::ValidateAfterburner)
		.def("Turbo", &AWillowVehicle::Turbo)
		.def("CanDeactivateAfterburner", &AWillowVehicle::CanDeactivateAfterburner)
		.def("CanActivateAfterburner", &AWillowVehicle::CanActivateAfterburner)
		.def("TickPursuitNodes", &AWillowVehicle::TickPursuitNodes)
		.def("GetCharacterWeapon", &AWillowVehicle::GetCharacterWeapon, py::return_value_policy::reference)
		.def("DrawReverseConeDebug", &AWillowVehicle::DrawReverseConeDebug)
		.def("SetInputs", &AWillowVehicle::SetInputs)
		.def("eventSetAIInputs", &AWillowVehicle::eventSetAIInputs)
		.def("SpawnTracer", &AWillowVehicle::SpawnTracer)
		.def("DamageDamage", &AWillowVehicle::DamageDamage)
		.def("DamageDebug", &AWillowVehicle::DamageDebug)
		.def("DrawHUD", &AWillowVehicle::DrawHUD)
		.def("OnExitVehicle", &AWillowVehicle::OnExitVehicle)
		.def("GetSVehicleDebug", &AWillowVehicle::GetSVehicleDebug)
		.def("eventMorphTargetDestroyed", &AWillowVehicle::eventMorphTargetDestroyed)
		.def("SetMorphTarget", &AWillowVehicle::SetMorphTarget)
		.def("eventSetInitialMorph", &AWillowVehicle::eventSetInitialMorph)
		.def("eventApplyMorphHeal", &AWillowVehicle::eventApplyMorphHeal)
		.def("ApplyMorphDamage", &AWillowVehicle::ApplyMorphDamage)
		.def("InitializeMorphs", &AWillowVehicle::InitializeMorphs)
		.def("eventRigidBodyCollision", &AWillowVehicle::eventRigidBodyCollision)
		.def("ApplyCollisionDamageFrom", &AWillowVehicle::ApplyCollisionDamageFrom)
		.def("ApplyCollisionDamageTo", &AWillowVehicle::ApplyCollisionDamageTo)
		.def("TookDamageFromEnemy", &AWillowVehicle::TookDamageFromEnemy)
		.def("GetHumanReadableName", &AWillowVehicle::GetHumanReadableName, py::return_value_policy::reference)
		.def("FindSeatIndexForPawn", &AWillowVehicle::FindSeatIndexForPawn)
		.def("SitAnimFinished", &AWillowVehicle::SitAnimFinished)
		.def("ClientCheckForSitAnimFinished", &AWillowVehicle::ClientCheckForSitAnimFinished)
		.def("UnsitDriver", &AWillowVehicle::UnsitDriver)
		.def("ClientUnsitDriver", &AWillowVehicle::ClientUnsitDriver)
		.def("SitDriver", &AWillowVehicle::SitDriver)
		.def("DetachDriver", &AWillowVehicle::DetachDriver)
		.def("AttachDriver", &AWillowVehicle::AttachDriver)
		.def("PlayTeleportOutOfVehicleEffect", &AWillowVehicle::PlayTeleportOutOfVehicleEffect)
		.def("PlayTeleportEffectAtLocation", &AWillowVehicle::PlayTeleportEffectAtLocation)
		.def("PlayTeleportIntoVehicleEffect", &AWillowVehicle::PlayTeleportIntoVehicleEffect)
		.def("CheckVehicleDamage", &AWillowVehicle::CheckVehicleDamage)
		.def("DropItemPoolItems", &AWillowVehicle::DropItemPoolItems)
		.def("AdjustFOVAngle", &AWillowVehicle::AdjustFOVAngle)
		.def("VehicleCalcCamera", &AWillowVehicle::VehicleCalcCamera)
		.def("VehicleWeaponHitLocationEffects", &AWillowVehicle::VehicleWeaponHitLocationEffects)
		.def("eventVehicleAdjustFlashLocation", &AWillowVehicle::eventVehicleAdjustFlashLocation)
		.def("VehicleAdjustFlashCount", &AWillowVehicle::VehicleAdjustFlashCount)
		.def("VehicleWeaponImpactEffects", &AWillowVehicle::VehicleWeaponImpactEffects)
		.def("VehicleWeaponFireEffects", &AWillowVehicle::VehicleWeaponFireEffects)
		.def("eventVehicleWeaponStoppedFiring", &AWillowVehicle::eventVehicleWeaponStoppedFiring)
		.def("WeaponStoppedFiring", &AWillowVehicle::WeaponStoppedFiring)
		.def("eventVehicleWeaponFired", &AWillowVehicle::eventVehicleWeaponFired)
		.def("GetPlayerController", &AWillowVehicle::GetPlayerController, py::return_value_policy::reference)
		.def("WeaponFired", &AWillowVehicle::WeaponFired)
		.def("GetWeaponViewAxes", &AWillowVehicle::GetWeaponViewAxes)
		.def("OverrideEndFire", &AWillowVehicle::OverrideEndFire)
		.def("OverrideBeginFire", &AWillowVehicle::OverrideBeginFire)
		.def("GetWeaponAim", &AWillowVehicle::GetWeaponAim, py::return_value_policy::reference)
		.def("IsValidVehicleWeaponAimTraceHitActor", &AWillowVehicle::IsValidVehicleWeaponAimTraceHitActor)
		.def("GetWeaponStartTraceLocation", &AWillowVehicle::GetWeaponStartTraceLocation, py::return_value_policy::reference)
		.def("GetPhysicalFireStartLoc", &AWillowVehicle::GetPhysicalFireStartLoc, py::return_value_policy::reference)
		.def("GetEffectLocation", &AWillowVehicle::GetEffectLocation, py::return_value_policy::reference)
		.def("eventGetBarrelLocationAndRotation", &AWillowVehicle::eventGetBarrelLocationAndRotation)
		.def("ClearFlashLocation", &AWillowVehicle::ClearFlashLocation)
		.def("SetFlashLocation", &AWillowVehicle::SetFlashLocation)
		.def("IncrementFlashCount", &AWillowVehicle::IncrementFlashCount)
		.def("ClearFlashCount", &AWillowVehicle::ClearFlashCount)
		.def("UnPossessed", &AWillowVehicle::UnPossessed)
		.def("PossessedBy", &AWillowVehicle::PossessedBy)
		.def("InitializeTurrets", &AWillowVehicle::InitializeTurrets)
		.def("GetGunMeshFromInstanceData", &AWillowVehicle::GetGunMeshFromInstanceData, py::return_value_policy::reference)
		.def("PreCacheSeatNames", &AWillowVehicle::PreCacheSeatNames)
		.def("ClientInitializeSeats", &AWillowVehicle::ClientInitializeSeats)
		.def("SpawnWeaponForSeat", &AWillowVehicle::SpawnWeaponForSeat, py::return_value_policy::reference)
		.def("ReinitializeSeats", &AWillowVehicle::ReinitializeSeats)
		.def("InitializeSeats", &AWillowVehicle::InitializeSeats)
		.def("ImportantVehicle", &AWillowVehicle::ImportantVehicle)
		.def("IsArtillery", &AWillowVehicle::IsArtillery)
		.def("GetHomingTarget", &AWillowVehicle::GetHomingTarget, py::return_value_policy::reference)
		.def("IsFullyArmored", &AWillowVehicle::IsFullyArmored)
		.def("GetDamageSurfaceTypeFromHit", &AWillowVehicle::GetDamageSurfaceTypeFromHit)
		.def("GetDefaultDamageSurfaceType", &AWillowVehicle::GetDefaultDamageSurfaceType)
		.def("AdjustMomentumForSurfaceType", &AWillowVehicle::AdjustMomentumForSurfaceType)
		.def("TookDamageFromFriendly", &AWillowVehicle::TookDamageFromFriendly)
		.def("eventTakeDamage", &AWillowVehicle::eventTakeDamage)
		.def("HealDamage", &AWillowVehicle::HealDamage)
		.def("SetReservation", &AWillowVehicle::SetReservation)
		.def("StopsProjectile", &AWillowVehicle::StopsProjectile)
		.def("SpokenFor", &AWillowVehicle::SpokenFor)
		.def("ChangedReservation", &AWillowVehicle::ChangedReservation)
		.def("ReservationCostMultiplier", &AWillowVehicle::ReservationCostMultiplier)
		.def("GetTeamNum", &AWillowVehicle::GetTeamNum)
		.def("OpenPositionFor", &AWillowVehicle::OpenPositionFor)
		.def("IndependentVehicle", &AWillowVehicle::IndependentVehicle)
		.def("eventCheckReset", &AWillowVehicle::eventCheckReset)
		.def("ApplySeatRuleSet", &AWillowVehicle::ApplySeatRuleSet)
		.def("PassengerLeave", &AWillowVehicle::PassengerLeave)
		.def("eventDriverLeave", &AWillowVehicle::eventDriverLeave)
		.def("SetupHandIKForPawn", &AWillowVehicle::SetupHandIKForPawn)
		.def("UpdateVirtualSeatMapping", &AWillowVehicle::UpdateVirtualSeatMapping)
		.def("PassengerEnter", &AWillowVehicle::PassengerEnter)
		.def("GetFirstAvailableHijackSeat", &AWillowVehicle::GetFirstAvailableHijackSeat)
		.def("GetFirstAvailableSeatFor", &AWillowVehicle::GetFirstAvailableSeatFor)
		.def("DriverLeft", &AWillowVehicle::DriverLeft)
		.def("ActivateWeapon", &AWillowVehicle::ActivateWeapon)
		.def("DriverEnter", &AWillowVehicle::DriverEnter)
		.def("SetVehicleBlockingMeshCollision", &AWillowVehicle::SetVehicleBlockingMeshCollision)
		.def("GetMoveTargetFor", &AWillowVehicle::GetMoveTargetFor, py::return_value_policy::reference)
		.def("NumPassengers", &AWillowVehicle::NumPassengers)
		.def("UpdateControllerOnPossess", &AWillowVehicle::UpdateControllerOnPossess)
		.def("PlayHorn", &AWillowVehicle::PlayHorn)
		.def("TooCloseToAttack", &AWillowVehicle::TooCloseToAttack)
		.def("LockOnWarning", &AWillowVehicle::LockOnWarning)
		.def("SendLockOnMessage", &AWillowVehicle::SendLockOnMessage)
		.def("ShootMissile", &AWillowVehicle::ShootMissile)
		.def("IncomingMissile", &AWillowVehicle::IncomingMissile)
		.def("Dodge", &AWillowVehicle::Dodge)
		.def("TeamChanged", &AWillowVehicle::TeamChanged)
		.def("eventSetTeamNum", &AWillowVehicle::eventSetTeamNum)
		.def("PostRenderFor", &AWillowVehicle::PostRenderFor)
		.def("VehicleLocked", &AWillowVehicle::VehicleLocked)
		.def("TryToHijack", &AWillowVehicle::TryToHijack)
		.def("CanDrive", &AWillowVehicle::CanDrive)
		.def("TryToRide", &AWillowVehicle::TryToRide)
		.def("eventDeactivateVehicle", &AWillowVehicle::eventDeactivateVehicle)
		.def("eventBlowupVehicle", &AWillowVehicle::eventBlowupVehicle)
		.def("IsSafeFromBoundaryTurrets", &AWillowVehicle::IsSafeFromBoundaryTurrets)
		.def("IsOnTheGround", &AWillowVehicle::IsOnTheGround)
		.def("ServerUnlockAchievementForAllPassengers", &AWillowVehicle::ServerUnlockAchievementForAllPassengers)
		.def("LeviathanConvertDeathStatus", &AWillowVehicle::LeviathanConvertDeathStatus)
		.def("ProcessLeviathanVehicleDeathEvent", &AWillowVehicle::ProcessLeviathanVehicleDeathEvent)
		.def("Died", &AWillowVehicle::Died)
		.def("eventDiedEx", &AWillowVehicle::eventDiedEx)
		.def("eventTornOff", &AWillowVehicle::eventTornOff)
		.def("ChangeSeat", &AWillowVehicle::ChangeSeat)
		.def("HasPriority", &AWillowVehicle::HasPriority)
		.def("ServerChangeSeat", &AWillowVehicle::ServerChangeSeat)
		.def("SwitchSeats", &AWillowVehicle::SwitchSeats)
		.def("GetAdjacentSeatIndex", &AWillowVehicle::GetAdjacentSeatIndex)
		.def("GetControllerForSeatPosition", &AWillowVehicle::GetControllerForSeatPosition, py::return_value_policy::reference)
		.def("GetControllerForSeatIndex", &AWillowVehicle::GetControllerForSeatIndex, py::return_value_policy::reference)
		.def("GetSeatIndexForController", &AWillowVehicle::GetSeatIndexForController)
		.def("AnySeatAvailable", &AWillowVehicle::AnySeatAvailable)
		.def("HijackSeatAvailable", &AWillowVehicle::HijackSeatAvailable)
		.def("eventDrivingStatusChanged", &AWillowVehicle::eventDrivingStatusChanged)
		.def("eventEjectPassengers", &AWillowVehicle::eventEjectPassengers)
		.def("ProcessOneEjectedPassenger", &AWillowVehicle::ProcessOneEjectedPassenger)
		.def("EjectPassengerPosition", &AWillowVehicle::EjectPassengerPosition)
		.def("SeatHasOccupant", &AWillowVehicle::SeatHasOccupant)
		.def("GetTotalOccupants", &AWillowVehicle::GetTotalOccupants)
		.def("HasAIOccupants", &AWillowVehicle::HasAIOccupants)
		.def("HasPlayerOccupants", &AWillowVehicle::HasPlayerOccupants)
		.def("HasOccupiedTurret", &AWillowVehicle::HasOccupiedTurret)
		.def("HasAnySeatAvailableFor", &AWillowVehicle::HasAnySeatAvailableFor)
		.def("SeatAvailableFor", &AWillowVehicle::SeatAvailableFor)
		.def("Occupied", &AWillowVehicle::Occupied)
		.def("ActivateHeadLight", &AWillowVehicle::ActivateHeadLight)
		.def("ActivateReverseLight", &AWillowVehicle::ActivateReverseLight)
		.def("ActivateBrakeLight", &AWillowVehicle::ActivateBrakeLight)
		.def("AttachGun", &AWillowVehicle::AttachGun)
		.def("eventReplicatedEvent", &AWillowVehicle::eventReplicatedEvent)
		.def("WeaponRotationChanged", &AWillowVehicle::WeaponRotationChanged)
		.def("Destroyed", &AWillowVehicle::Destroyed)
		.def("IsOccupantAllowedToTakeDamage", &AWillowVehicle::IsOccupantAllowedToTakeDamage)
		.def("CanBeBaseForPawn", &AWillowVehicle::CanBeBaseForPawn)
		.def("DriverRadiusDamage", &AWillowVehicle::DriverRadiusDamage)
		.def("TakeRadiusDamage", &AWillowVehicle::TakeRadiusDamage)
		.def("eventTakeWaterDamage", &AWillowVehicle::eventTakeWaterDamage)
		.def("eventRanInto", &AWillowVehicle::eventRanInto)
		.def("ShutOffVehicleEffectsOnDeath", &AWillowVehicle::ShutOffVehicleEffectsOnDeath)
		.def("VehicleEvent", &AWillowVehicle::VehicleEvent)
		.def("UpdateVehicleEffect", &AWillowVehicle::UpdateVehicleEffect)
		.def("TriggerVehicleEffect", &AWillowVehicle::TriggerVehicleEffect)
		.def("SetVehicleEffectParms", &AWillowVehicle::SetVehicleEffectParms)
		.def("InitializeEffects", &AWillowVehicle::InitializeEffects)
		.def("FastVehicle", &AWillowVehicle::FastVehicle)
		.def("eventJumpOutCheck", &AWillowVehicle::eventJumpOutCheck)
		.def("EjectDriver", &AWillowVehicle::EjectDriver)
		.def("eventSelfDestruct", &AWillowVehicle::eventSelfDestruct)
		.def("StopDeSpawnEffect", &AWillowVehicle::StopDeSpawnEffect)
		.def("StopSpawnEffect", &AWillowVehicle::StopSpawnEffect)
		.def("NotifyFinishTeleport", &AWillowVehicle::NotifyFinishTeleport)
		.def("RefreshCrewIdleAnimations", &AWillowVehicle::RefreshCrewIdleAnimations)
		.def("NotifyBeginTeleport", &AWillowVehicle::NotifyBeginTeleport)
		.def("PlayDeSpawnEffect", &AWillowVehicle::PlayDeSpawnEffect)
		.def("PlaySpawnEffect", &AWillowVehicle::PlaySpawnEffect)
		.def("GetChargePower", &AWillowVehicle::GetChargePower)
		.def("eventAttach", &AWillowVehicle::eventAttach)
		.def("FilterActorAttachmentRequest", &AWillowVehicle::FilterActorAttachmentRequest)
		.def("UnwrapToSimObj", &AWillowVehicle::UnwrapToSimObj)
		.def("eventUnwrapSimpleSettings", &AWillowVehicle::eventUnwrapSimpleSettings)
		.def("NodeIsOnFavoredSide", &AWillowVehicle::NodeIsOnFavoredSide)
		.def("FindGrid", &AWillowVehicle::FindGrid)
		.def("RecalculateAttributeInitializedState", &AWillowVehicle::RecalculateAttributeInitializedState)
		.def("eventOnExpLevelChange", &AWillowVehicle::eventOnExpLevelChange)
		.def("eventBalanceVehicleForPlayerUse", &AWillowVehicle::eventBalanceVehicleForPlayerUse)
		.def("PostBeginPlay", &AWillowVehicle::PostBeginPlay)
		.def("InitializeBehaviorConsumer", &AWillowVehicle::InitializeBehaviorConsumer)
		.def("SetDefaultInventory", &AWillowVehicle::SetDefaultInventory)
		.def("SetDefaultInventoryWithProbability", &AWillowVehicle::SetDefaultInventoryWithProbability)
		.def("CheckForCollision", &AWillowVehicle::CheckForCollision)
		.def("CanReceiveStatusEffects", &AWillowVehicle::CanReceiveStatusEffects)
		.def("ReactToPrimaryStatusEffect", &AWillowVehicle::ReactToPrimaryStatusEffect)
		.def("GetAttributeContextSource", &AWillowVehicle::GetAttributeContextSource, py::return_value_policy::reference)
		.def("GetBoundingSphereRadius", &AWillowVehicle::GetBoundingSphereRadius)
		.def("AttachEmitter", &AWillowVehicle::AttachEmitter)
		.def("GetDefaultStatusEffectsParticleSystemTemplate", &AWillowVehicle::GetDefaultStatusEffectsParticleSystemTemplate, py::return_value_policy::reference)
		.def("GetDefaultStatusEffectSockets", &AWillowVehicle::GetDefaultStatusEffectSockets, py::return_value_policy::reference)
		.def("GetStatusEffectsComponent", &AWillowVehicle::GetStatusEffectsComponent, py::return_value_policy::reference)
		.def("GetBalancedActorTypeIdentifier", &AWillowVehicle::GetBalancedActorTypeIdentifier, py::return_value_policy::reference)
		.def("SetExpLevel", &AWillowVehicle::SetExpLevel)
		.def("SetAwesomeLevel", &AWillowVehicle::SetAwesomeLevel)
		.def("SetGameStage", &AWillowVehicle::SetGameStage)
		.def("GetExpLevelForEquip", &AWillowVehicle::GetExpLevelForEquip)
		.def("GetExpLevel", &AWillowVehicle::GetExpLevel)
		.def("GetAwesomeLevel", &AWillowVehicle::GetAwesomeLevel)
		.def("GetGameStage", &AWillowVehicle::GetGameStage)
		.def("CanEnterVehicle", &AWillowVehicle::CanEnterVehicle)
		.def("HasHomingTargetComponents", &AWillowVehicle::HasHomingTargetComponents)
		.def("IsValidHomingTarget", &AWillowVehicle::IsValidHomingTarget)
		.def("IsTargetable", &AWillowVehicle::IsTargetable)
		.def("IsCollisionDebugEnabled", &AWillowVehicle::IsCollisionDebugEnabled)
		.def("ToggleCollisionDebug", &AWillowVehicle::ToggleCollisionDebug)
		.def("IsReverseConeDebugEnabled", &AWillowVehicle::IsReverseConeDebugEnabled)
		.def("ToggleReverseConeDebug", &AWillowVehicle::ToggleReverseConeDebug)
		.def("IsVehiclePatrolDebugEnabled", &AWillowVehicle::IsVehiclePatrolDebugEnabled)
		.def("ToggleVehiclePatrolDebug", &AWillowVehicle::ToggleVehiclePatrolDebug)
		.def("IsVehiclePursuitDebugEnabled", &AWillowVehicle::IsVehiclePursuitDebugEnabled)
		.def("ToggleVehiclePursuitDebug", &AWillowVehicle::ToggleVehiclePursuitDebug)
		.def("InitializeRBPhys", &AWillowVehicle::InitializeRBPhys)
		.def("TerminateRBPhys", &AWillowVehicle::TerminateRBPhys)
		.def("GetBarrelIndex", &AWillowVehicle::GetBarrelIndex)
		.def("GetSeatPivotPoint", &AWillowVehicle::GetSeatPivotPoint, py::return_value_policy::reference)
		.def("ForceWeaponRotation", &AWillowVehicle::ForceWeaponRotation)
		.def("SeatAttachedWeapon", &AWillowVehicle::SeatAttachedWeapon, py::return_value_policy::reference)
		.def("SeatFiringMode", &AWillowVehicle::SeatFiringMode)
		.def("SeatFlashCount", &AWillowVehicle::SeatFlashCount)
		.def("SeatFlashLocation", &AWillowVehicle::SeatFlashLocation, py::return_value_policy::reference)
		.def("SeatWeaponRotation", &AWillowVehicle::SeatWeaponRotation, py::return_value_policy::reference)
		.def("PlayHit", &AWillowVehicle::PlayHit)
		.def("WasSpawnedFromASpawnStation", &AWillowVehicle::WasSpawnedFromASpawnStation)
		.def("GetSeatDefinition", &AWillowVehicle::GetSeatDefinition, py::return_value_policy::reference)
		.def("RemoveCrewAnimSetFromOccupant", &AWillowVehicle::RemoveCrewAnimSetFromOccupant)
		.def("AddCrewAnimSetToOccupant", &AWillowVehicle::AddCrewAnimSetToOccupant)
		.def("IsChampion", &AWillowVehicle::IsChampion)
		.def("ResetHitRegionHealth", &AWillowVehicle::ResetHitRegionHealth)
		.def("PlayHealingReaction", &AWillowVehicle::PlayHealingReaction)
		.def("PlayDamageReaction", &AWillowVehicle::PlayDamageReaction)
		.def("ReplicateDamageEffect", &AWillowVehicle::ReplicateDamageEffect)
		.def("AddDamageToHitRegion", &AWillowVehicle::AddDamageToHitRegion)
		.def("HealDamageOnHitRegion", &AWillowVehicle::HealDamageOnHitRegion)
		.def("GetHitRegionForTakenDamage", &AWillowVehicle::GetHitRegionForTakenDamage, py::return_value_policy::reference)
		.def("ClearBodyCompositionInstance", &AWillowVehicle::ClearBodyCompositionInstance)
		.def("GetBodyInfoProvider", &AWillowVehicle::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("ApplyPreviewBodyComposition", &AWillowVehicle::ApplyPreviewBodyComposition)
		.def("ChangeInstanceDataSwitch", &AWillowVehicle::ChangeInstanceDataSwitch)
		.def("PostInitBodyComposition", &AWillowVehicle::PostInitBodyComposition)
		.def("PreRemoveBodyComposition", &AWillowVehicle::PreRemoveBodyComposition)
		.def("GetBehaviorConsumerHandle", &AWillowVehicle::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("IsInsideCombatArea", &AWillowVehicle::IsInsideCombatArea)
		.def("AllowFallbackToDefaultCustomizations", &AWillowVehicle::AllowFallbackToDefaultCustomizations)
		.def("RefreshCustomizationsOnInstanceData", &AWillowVehicle::RefreshCustomizationsOnInstanceData)
		.def("GetCustomizableName", &AWillowVehicle::GetCustomizableName, py::return_value_policy::reference)
		.def("GetDesiredCustomizationOfType", &AWillowVehicle::GetDesiredCustomizationOfType, py::return_value_policy::reference)
		.def("CustomizationApplied", &AWillowVehicle::CustomizationApplied)
		.def("GetCustomizableInstanceDataSets", &AWillowVehicle::GetCustomizableInstanceDataSets)
		.def("RemoveAllStatusEffects", &AWillowVehicle::RemoveAllStatusEffects)
		.def("FullyReplenishShields", &AWillowVehicle::FullyReplenishShields)
		.def("FullyReplenishLife", &AWillowVehicle::FullyReplenishLife)
		.def("GetOccupantWhoCanPickup", [](AWillowVehicle &self , class UIPickupable* Pickup) { class AController** pyOutController = 0 ;  class APawn* ret =  self.GetOccupantWhoCanPickup(Pickup, pyOutController); return py::make_tuple(ret, *pyOutController); })
		.def("ShieldAbsorbedAmmo", [](AWillowVehicle &self , class UClass* DamageSource, class UWillowDamageTypeDefinition* DamageTypeDef) { float* pyDamagePercentToAbsorb = (float*)malloc(sizeof(float)) ;  bool ret =  self.ShieldAbsorbedAmmo(DamageSource, DamageTypeDef, pyDamagePercentToAbsorb); return py::make_tuple(ret, *pyDamagePercentToAbsorb); })
		.def("GetExpInfo", [](AWillowVehicle &self ) { int* pyExpLevelValue = (int*)malloc(sizeof(int)) ;   self.GetExpInfo(pyExpLevelValue); return py::make_tuple(*pyExpLevelValue); })
		.def("GetVehicleAndSeatIndex", [](AWillowVehicle &self ) { class AWillowVehicle** pyWVehicle = 0 ; int* pySeatIndex = (int*)malloc(sizeof(int)) ;  bool ret =  self.GetVehicleAndSeatIndex(pyWVehicle, pySeatIndex); return py::make_tuple(ret, *pyWVehicle, *pySeatIndex); })
		.def("VehicleAdjustInput", [](AWillowVehicle &self ) { float* pyaTurn = (float*)malloc(sizeof(float)) ; float* pyaLookUp = (float*)malloc(sizeof(float)) ; float* pyaForward = (float*)malloc(sizeof(float)) ; float* pyaStrafe = (float*)malloc(sizeof(float)) ;   self.VehicleAdjustInput(pyaTurn, pyaLookUp, pyaForward, pyaStrafe); return py::make_tuple(*pyaTurn, *pyaLookUp, *pyaForward, *pyaStrafe); })
		.def("ApplyCameraYawDamping", [](AWillowVehicle &self ) { float* pyaTurn = (float*)malloc(sizeof(float)) ;   self.ApplyCameraYawDamping(pyaTurn); return py::make_tuple(*pyaTurn); })
		.def("CalcCamera", [](AWillowVehicle &self , float DeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.CalcCamera(DeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		.def("AdjustDamage", [](AWillowVehicle &self , class AController* InstigatedBy, struct FVector HitLocation, class UClass* DamageType, class UIDamageCauser* DamageCauser, class UDamagePipeline* Pipeline, struct FVector* Momentum, struct FTraceHitInfo* HitInfo) { float* pyInDamage = (float*)malloc(sizeof(float)) ; float* pyDamageSeverityPercent = (float*)malloc(sizeof(float)) ;   self.AdjustDamage(InstigatedBy, HitLocation, DamageType, DamageCauser, Pipeline, pyInDamage, pyDamageSeverityPercent, Momentum, HitInfo); return py::make_tuple(*pyInDamage, *pyDamageSeverityPercent); })
		.def("ReserveBestNode", [](AWillowVehicle &self , class AActor* ReservationRequester, unsigned long TargetIsOnRight, unsigned long IsTargetInFront, unsigned long FacingSame, class UWillowPursuitGridDefinition* GridDef, struct FName PreferredNodeType) { int* pyGridIndex = (int*)malloc(sizeof(int)) ; int* pyNodeIndex = (int*)malloc(sizeof(int)) ;   self.ReserveBestNode(ReservationRequester, TargetIsOnRight, IsTargetInFront, FacingSame, GridDef, PreferredNodeType, pyGridIndex, pyNodeIndex); return py::make_tuple(*pyGridIndex, *pyNodeIndex); })
		.def("SetHealthResourcePoolDefinition", [](AWillowVehicle &self , class UResourcePoolDefinition* Definition) { class AResourcePoolManager** pyInResourcePoolManager = 0 ;   self.SetHealthResourcePoolDefinition(Definition, pyInResourcePoolManager); return py::make_tuple(*pyInResourcePoolManager); })
		.def("GetHitRegions", [](AWillowVehicle &self , TArray< class UBodyHitRegionDefinition* >* Regions) { class UBodyHitRegionDefinition** pyDefaultRegion = 0 ;   self.GetHitRegions(Regions, pyDefaultRegion); return py::make_tuple(*pyDefaultRegion); })
		.def("GetHitRegionHealthValues", [](AWillowVehicle &self , class UBodyHitRegionDefinition* HitRegion) { float* pyoutHealth = (float*)malloc(sizeof(float)) ; float* pyoutMaxHealth = (float*)malloc(sizeof(float)) ;   self.GetHitRegionHealthValues(HitRegion, pyoutHealth, pyoutMaxHealth); return py::make_tuple(*pyoutHealth, *pyoutMaxHealth); })
		.def("SearchForBaseBelow", [](AWillowVehicle &self , float HeightBelow, struct FVector* HitNormal) { class AActor** pyNewBase = 0 ;   self.SearchForBaseBelow(HeightBelow, pyNewBase, HitNormal); return py::make_tuple(*pyNewBase); })
		;
	py::class_< AWillowVehicle_ChopperVehicle, AWillowVehicle >(m, "AWillowVehicle_ChopperVehicle")
		.def_property("bAutoLand", [](AWillowVehicle_ChopperVehicle &self){return self.bAutoLand;}, [](AWillowVehicle_ChopperVehicle &self, bool value){self.bAutoLand = value ? 1 : 0;})
		.def_property("bFreelanceStart", [](AWillowVehicle_ChopperVehicle &self){return self.bFreelanceStart;}, [](AWillowVehicle_ChopperVehicle &self, bool value){self.bFreelanceStart = value ? 1 : 0;})
		.def_readwrite("GroundEffectIndices", &AWillowVehicle_ChopperVehicle::GroundEffectIndices, py::return_value_policy::reference)
		.def_readwrite("MaxGroundEffectDist", &AWillowVehicle_ChopperVehicle::MaxGroundEffectDist)
		.def_readwrite("GroundEffectDistParameterName", &AWillowVehicle_ChopperVehicle::GroundEffectDistParameterName, py::return_value_policy::reference)
		.def_readwrite("WaterGroundEffect", &AWillowVehicle_ChopperVehicle::WaterGroundEffect, py::return_value_policy::reference)
		.def_readwrite("FullAirSpeed", &AWillowVehicle_ChopperVehicle::FullAirSpeed)
		.def_readwrite("ContrailEffectIndices", &AWillowVehicle_ChopperVehicle::ContrailEffectIndices, py::return_value_policy::reference)
		.def_readwrite("ContrailColorParameterName", &AWillowVehicle_ChopperVehicle::ContrailColorParameterName, py::return_value_policy::reference)
		.def_readwrite("PushForce", &AWillowVehicle_ChopperVehicle::PushForce)
		.def_readwrite("RadarLockMessage", &AWillowVehicle_ChopperVehicle::RadarLockMessage, py::return_value_policy::reference)
		.def_readwrite("LastRadarLockWarnTime", &AWillowVehicle_ChopperVehicle::LastRadarLockWarnTime)
		.def("SetInputs", &AWillowVehicle_ChopperVehicle::SetInputs)
		.def("ShouldClamp", &AWillowVehicle_ChopperVehicle::ShouldClamp)
		.def("ResetTurningSpeed", &AWillowVehicle_ChopperVehicle::ResetTurningSpeed)
		.def("eventRigidBodyCollision", &AWillowVehicle_ChopperVehicle::eventRigidBodyCollision)
		.def("Dodge", &AWillowVehicle_ChopperVehicle::Dodge)
		.def("FastVehicle", &AWillowVehicle_ChopperVehicle::FastVehicle)
		.def("RecommendLongRangedAttack", &AWillowVehicle_ChopperVehicle::RecommendLongRangedAttack)
		.def("SetDriving", &AWillowVehicle_ChopperVehicle::SetDriving)
		;
	py::class_< AWillowVehicle_FlyingVehicle, AWillowVehicle >(m, "AWillowVehicle_FlyingVehicle")
		.def_readwrite("FlyingSpeed", &AWillowVehicle_FlyingVehicle::FlyingSpeed)
		.def_readwrite("AirTransFriction", &AWillowVehicle_FlyingVehicle::AirTransFriction, py::return_value_policy::reference)
		.def_readwrite("AirRotFriction", &AWillowVehicle_FlyingVehicle::AirRotFriction)
		.def_readwrite("ForceScalar", &AWillowVehicle_FlyingVehicle::ForceScalar, py::return_value_policy::reference)
		.def_readwrite("TorqueScalar", &AWillowVehicle_FlyingVehicle::TorqueScalar)
		.def_readwrite("TiltScalar", &AWillowVehicle_FlyingVehicle::TiltScalar)
		.def_readwrite("MoveTiltAmount", &AWillowVehicle_FlyingVehicle::MoveTiltAmount)
		.def_readwrite("HeightMin", &AWillowVehicle_FlyingVehicle::HeightMin)
		.def_readwrite("HeightMax", &AWillowVehicle_FlyingVehicle::HeightMax)
		.def_readwrite("HeightDesiredMin", &AWillowVehicle_FlyingVehicle::HeightDesiredMin)
		.def_readwrite("HeightDesiredMax", &AWillowVehicle_FlyingVehicle::HeightDesiredMax)
		.def_readwrite("DyingGravity", &AWillowVehicle_FlyingVehicle::DyingGravity)
		.def_readwrite("TraceLookAheadVelocityScalar", &AWillowVehicle_FlyingVehicle::TraceLookAheadVelocityScalar)
		.def_readwrite("TraceStartHeight", &AWillowVehicle_FlyingVehicle::TraceStartHeight)
		.def_readwrite("TurretConeAngle", &AWillowVehicle_FlyingVehicle::TurretConeAngle)
		.def("TraceThroughTriggers", &AWillowVehicle_FlyingVehicle::TraceThroughTriggers, py::return_value_policy::reference)
		.def("SuggestRiseInput", &AWillowVehicle_FlyingVehicle::SuggestRiseInput)
		.def("GetRiseInput", &AWillowVehicle_FlyingVehicle::GetRiseInput)
		.def("eventSetAIInputs", &AWillowVehicle_FlyingVehicle::eventSetAIInputs)
		.def("SetInputs", &AWillowVehicle_FlyingVehicle::SetInputs)
		.def("UnwrapToSimObj", &AWillowVehicle_FlyingVehicle::UnwrapToSimObj)
		.def("ApplyCameraYawDamping", [](AWillowVehicle_FlyingVehicle &self ) { float* pyaTurn = (float*)malloc(sizeof(float)) ;   self.ApplyCameraYawDamping(pyaTurn); return py::make_tuple(*pyaTurn); })
		;
	py::class_< AWillowVehicle_Tank, AWillowVehicle >(m, "AWillowVehicle_Tank")
		.def_property("bUseSensors", [](AWillowVehicle_Tank &self){return self.bUseSensors;}, [](AWillowVehicle_Tank &self, bool value){self.bUseSensors = value ? 1 : 0;})
		.def_property("bSteerToFaceDirection", [](AWillowVehicle_Tank &self){return self.bSteerToFaceDirection;}, [](AWillowVehicle_Tank &self, bool value){self.bSteerToFaceDirection = value ? 1 : 0;})
		.def_readwrite("Sensors", &AWillowVehicle_Tank::Sensors, py::return_value_policy::reference)
		.def_readwrite("TimeBetweenSensorTests", &AWillowVehicle_Tank::TimeBetweenSensorTests)
		.def_readwrite("SensorCheckTime", &AWillowVehicle_Tank::SensorCheckTime)
		.def("eventSetAIInputs", &AWillowVehicle_Tank::eventSetAIInputs)
		.def("CheckForCollision", &AWillowVehicle_Tank::CheckForCollision)
		;
	py::class_< AWillowVehicle_WheeledVehicle, AWillowVehicle >(m, "AWillowVehicle_WheeledVehicle")
		.def_readwrite("DriftingTimeStamp", &AWillowVehicle_WheeledVehicle::DriftingTimeStamp)
		.def_readwrite("BeamTemplate", &AWillowVehicle_WheeledVehicle::BeamTemplate, py::return_value_policy::reference)
		.def_readwrite("TemplateFF", &AWillowVehicle_WheeledVehicle::TemplateFF, py::return_value_policy::reference)
		.def("GetWheelIndexFromBoneName", &AWillowVehicle_WheeledVehicle::GetWheelIndexFromBoneName)
		.def("UnwrapToSimObj", &AWillowVehicle_WheeledVehicle::UnwrapToSimObj)
		.def("ProcessViewRotationInVehicle", &AWillowVehicle_WheeledVehicle::ProcessViewRotationInVehicle)
		.def("ServerNoHandbrake", &AWillowVehicle_WheeledVehicle::ServerNoHandbrake)
		.def("ServerHandBrake", &AWillowVehicle_WheeledVehicle::ServerHandBrake)
		.def("NoHandbrake", &AWillowVehicle_WheeledVehicle::NoHandbrake)
		.def("Handbrake", &AWillowVehicle_WheeledVehicle::Handbrake)
		.def("PostBeginPlay", &AWillowVehicle_WheeledVehicle::PostBeginPlay)
		.def("PreBeginPlay", &AWillowVehicle_WheeledVehicle::PreBeginPlay)
		;
	py::class_< AWillowWeaponPawn, AWillowVehicleBase >(m, "AWillowWeaponPawn")
		.def_property("DriverIsAttached", [](AWillowWeaponPawn &self){return self.DriverIsAttached;}, [](AWillowWeaponPawn &self, bool value){self.DriverIsAttached = value ? 1 : 0;})
		.def_property("SeatIndexReceived", [](AWillowWeaponPawn &self){return self.SeatIndexReceived;}, [](AWillowWeaponPawn &self, bool value){self.SeatIndexReceived = value ? 1 : 0;})
		.def_property("bInDriverLeave", [](AWillowWeaponPawn &self){return self.bInDriverLeave;}, [](AWillowWeaponPawn &self, bool value){self.bInDriverLeave = value ? 1 : 0;})
		.def_readwrite("MyVehicleWeapon", &AWillowWeaponPawn::MyVehicleWeapon, py::return_value_policy::reference)
		.def_readwrite("MyVehicle", &AWillowWeaponPawn::MyVehicle, py::return_value_policy::reference)
		.def_readwrite("MySeatIndex", &AWillowWeaponPawn::MySeatIndex)
		.def_readwrite("FixViewTime", &AWillowWeaponPawn::FixViewTime)
		.def("GetAimDirection", &AWillowWeaponPawn::GetAimDirection, py::return_value_policy::reference)
		.def("GetPivotPoint", &AWillowWeaponPawn::GetPivotPoint, py::return_value_policy::reference)
		.def("SetAllegiance", &AWillowWeaponPawn::SetAllegiance)
		.def("eventOutsideWorldBounds", &AWillowWeaponPawn::eventOutsideWorldBounds)
		.def("eventFellOutOfWorld", &AWillowWeaponPawn::eventFellOutOfWorld)
		.def("GetWillowVehicle", &AWillowWeaponPawn::GetWillowVehicle, py::return_value_policy::reference)
		.def("ClientUnsitDriver", &AWillowWeaponPawn::ClientUnsitDriver)
		.def("ServerNotifyAltFireTriggered", &AWillowWeaponPawn::ServerNotifyAltFireTriggered)
		.def("ServerNotifyTargetLockSuccessful", &AWillowWeaponPawn::ServerNotifyTargetLockSuccessful)
		.def("StopFireTurret", &AWillowWeaponPawn::StopFireTurret)
		.def("StartFireTurret", &AWillowWeaponPawn::StartFireTurret)
		.def("GetPawnToTeleport", &AWillowWeaponPawn::GetPawnToTeleport, py::return_value_policy::reference)
		.def("ProcessViewRotationForAttachedRiders", &AWillowWeaponPawn::ProcessViewRotationForAttachedRiders)
		.def("ProcessViewRotation", &AWillowWeaponPawn::ProcessViewRotation)
		.def("DisplayParentInfo", &AWillowWeaponPawn::DisplayParentInfo)
		.def("GetAllBarInfo", &AWillowWeaponPawn::GetAllBarInfo)
		.def("IsDead", &AWillowWeaponPawn::IsDead)
		.def("eventTakeDamage", &AWillowWeaponPawn::eventTakeDamage)
		.def("SitAnimFinished", &AWillowWeaponPawn::SitAnimFinished)
		.def("ClientCheckForSitAnimFinished", &AWillowWeaponPawn::ClientCheckForSitAnimFinished)
		.def("GetWeaponStartTraceLocation", &AWillowWeaponPawn::GetWeaponStartTraceLocation, py::return_value_policy::reference)
		.def("IndependentVehicle", &AWillowWeaponPawn::IndependentVehicle)
		.def("DetachDriver", &AWillowWeaponPawn::DetachDriver)
		.def("AttachDriver", &AWillowWeaponPawn::AttachDriver)
		.def("WaitingForReplicatedData", &AWillowWeaponPawn::WaitingForReplicatedData)
		.def("SetBaseEyeheight", &AWillowWeaponPawn::SetBaseEyeheight)
		.def("GetTargetLocation", &AWillowWeaponPawn::GetTargetLocation, py::return_value_policy::reference)
		.def("GetCollisionRadius", &AWillowWeaponPawn::GetCollisionRadius)
		.def("DoJump", &AWillowWeaponPawn::DoJump)
		.def("SetMovementPhysics", &AWillowWeaponPawn::SetMovementPhysics)
		.def("eventBaseChange", &AWillowWeaponPawn::eventBaseChange)
		.def("JumpOffPawn", &AWillowWeaponPawn::JumpOffPawn)
		.def("AddVelocity", &AWillowWeaponPawn::AddVelocity)
		.def("DropToGround", &AWillowWeaponPawn::DropToGround)
		.def("ServerChangeSeat", &AWillowWeaponPawn::ServerChangeSeat)
		.def("SwitchSeats", &AWillowWeaponPawn::SwitchSeats)
		.def("IsOccupantAllowedToTakeDamage", &AWillowWeaponPawn::IsOccupantAllowedToTakeDamage)
		.def("DoAttachedRiderSetup", &AWillowWeaponPawn::DoAttachedRiderSetup)
		.def("eventDriverLeave", &AWillowWeaponPawn::eventDriverLeave)
		.def("PossessWeaponPawnForAttachedRiderExit", &AWillowWeaponPawn::PossessWeaponPawnForAttachedRiderExit)
		.def("ClientPossessAttachedRiderOnEntry", &AWillowWeaponPawn::ClientPossessAttachedRiderOnEntry)
		.def("ServerPossessAttachedRiderOnEntry", &AWillowWeaponPawn::ServerPossessAttachedRiderOnEntry)
		.def("DriverLeft", &AWillowWeaponPawn::DriverLeft)
		.def("DriverEnter", &AWillowWeaponPawn::DriverEnter)
		.def("PossessedBy", &AWillowWeaponPawn::PossessedBy)
		.def("ClearFlashLocation", &AWillowWeaponPawn::ClearFlashLocation)
		.def("SetFlashLocation", &AWillowWeaponPawn::SetFlashLocation)
		.def("ClearFlashCount", &AWillowWeaponPawn::ClearFlashCount)
		.def("IncrementFlashCount", &AWillowWeaponPawn::IncrementFlashCount)
		.def("GetWeaponFacingDir", &AWillowWeaponPawn::GetWeaponFacingDir)
		.def("SetVehicleData", &AWillowWeaponPawn::SetVehicleData)
		.def("IsAttachedRiderSeat", &AWillowWeaponPawn::IsAttachedRiderSeat)
		.def("GetDriverController", &AWillowWeaponPawn::GetDriverController, py::return_value_policy::reference)
		.def("eventReplicatedEvent", &AWillowWeaponPawn::eventReplicatedEvent)
		.def("GetVehicleAndSeatIndex", [](AWillowWeaponPawn &self ) { class AWillowVehicle** pyWVehicle = 0 ; int* pySeatIndex = (int*)malloc(sizeof(int)) ;  bool ret =  self.GetVehicleAndSeatIndex(pyWVehicle, pySeatIndex); return py::make_tuple(ret, *pyWVehicle, *pySeatIndex); })
		.def("VehicleAdjustInput", [](AWillowWeaponPawn &self ) { float* pyaTurn = (float*)malloc(sizeof(float)) ; float* pyaLookUp = (float*)malloc(sizeof(float)) ; float* pyaForward = (float*)malloc(sizeof(float)) ; float* pyaStrafe = (float*)malloc(sizeof(float)) ;   self.VehicleAdjustInput(pyaTurn, pyaLookUp, pyaForward, pyaStrafe); return py::make_tuple(*pyaTurn, *pyaLookUp, *pyaForward, *pyaStrafe); })
		.def("GetExpInfo", [](AWillowWeaponPawn &self ) { int* pyExpLevelValue = (int*)malloc(sizeof(int)) ;   self.GetExpInfo(pyExpLevelValue); return py::make_tuple(*pyExpLevelValue); })
		.def("CalcCamera", [](AWillowWeaponPawn &self , float fDeltaTime, struct FVector* out_CamLoc, struct FRotator* out_CamRot) { float* pyout_FOV = (float*)malloc(sizeof(float)) ;  bool ret =  self.CalcCamera(fDeltaTime, out_CamLoc, out_CamRot, pyout_FOV); return py::make_tuple(ret, *pyout_FOV); })
		;
	py::class_< AWillowVehicleCombatArea, AActor >(m, "AWillowVehicleCombatArea")
		.def_property("bDisplayCombatRadius", [](AWillowVehicleCombatArea &self){return self.bDisplayCombatRadius;}, [](AWillowVehicleCombatArea &self, bool value){self.bDisplayCombatRadius = value ? 1 : 0;})
		.def_readwrite("CombatRadius", &AWillowVehicleCombatArea::CombatRadius)
		.def_readwrite("CombatDisplayHeight", &AWillowVehicleCombatArea::CombatDisplayHeight)
		.def_readwrite("NextVehicleCombatArea", &AWillowVehicleCombatArea::NextVehicleCombatArea, py::return_value_policy::reference)
		.def("eventDestroyed", &AWillowVehicleCombatArea::eventDestroyed)
		.def("eventPostBeginPlay", &AWillowVehicleCombatArea::eventPostBeginPlay)
		.def("IsActorInside", &AWillowVehicleCombatArea::IsActorInside)
		.def("RemoveFromList", &AWillowVehicleCombatArea::RemoveFromList)
		.def("AddToList", &AWillowVehicleCombatArea::AddToList)
		;
	py::class_< UWillowVehicleCombatAreaRenderingComponent, UPrimitiveComponent >(m, "UWillowVehicleCombatAreaRenderingComponent")
		;
	py::class_< UWillowVehicleControlDefinition, UGBXDefinition >(m, "UWillowVehicleControlDefinition")
		.def_readwrite("CameraSetting", &UWillowVehicleControlDefinition::CameraSetting)
		.def_readwrite("SteeringSetting", &UWillowVehicleControlDefinition::SteeringSetting)
		;
	py::class_< AWillowVehicleFactory, ANavigationPoint >(m, "AWillowVehicleFactory")
		.def_property("bStartNeutral", [](AWillowVehicleFactory &self){return self.bStartNeutral;}, [](AWillowVehicleFactory &self, bool value){self.bStartNeutral = value ? 1 : 0;})
		.def_property("bHasLockedVehicle", [](AWillowVehicleFactory &self){return self.bHasLockedVehicle;}, [](AWillowVehicleFactory &self, bool value){self.bHasLockedVehicle = value ? 1 : 0;})
		.def_property("IsActive", [](AWillowVehicleFactory &self){return self.IsActive;}, [](AWillowVehicleFactory &self, bool value){self.IsActive = value ? 1 : 0;})
		.def_readwrite("VehicleClass", &AWillowVehicleFactory::VehicleClass, py::return_value_policy::reference)
		.def_readwrite("VehicleArchetype", &AWillowVehicleFactory::VehicleArchetype, py::return_value_policy::reference)
		.def_readwrite("ChildVehicle", &AWillowVehicleFactory::ChildVehicle, py::return_value_policy::reference)
		.def_readwrite("RespawnProgress", &AWillowVehicleFactory::RespawnProgress)
		.def_readwrite("RespawnRateModifier", &AWillowVehicleFactory::RespawnRateModifier)
		.def_readwrite("TeamNum", &AWillowVehicleFactory::TeamNum)
		.def_readwrite("HUDLocation", &AWillowVehicleFactory::HUDLocation, py::return_value_policy::reference)
		.def_readwrite("HUDMaterialInstance", &AWillowVehicleFactory::HUDMaterialInstance, py::return_value_policy::reference)
		.def_readwrite("InitialGunRotations", &AWillowVehicleFactory::InitialGunRotations, py::return_value_policy::reference)
		.def("OnToggle", &AWillowVehicleFactory::OnToggle)
		.def("SpawnVehicle", &AWillowVehicleFactory::SpawnVehicle)
		.def("eventPreSpawn", &AWillowVehicleFactory::eventPreSpawn)
		.def("GetTeamNum", &AWillowVehicleFactory::GetTeamNum)
		.def("VehicleDestroyed", &AWillowVehicleFactory::VehicleDestroyed)
		.def("TarydiumBoost", &AWillowVehicleFactory::TarydiumBoost)
		.def("Deactivate", &AWillowVehicleFactory::Deactivate)
		.def("Activate", &AWillowVehicleFactory::Activate)
		.def("SetHUDLocation", &AWillowVehicleFactory::SetHUDLocation)
		.def("eventSetInitialState", &AWillowVehicleFactory::eventSetInitialState)
		.def("PostBeginPlay", &AWillowVehicleFactory::PostBeginPlay)
		;
	py::class_< UWillowVehicleSeatDefinition, UGBXDefinition >(m, "UWillowVehicleSeatDefinition")
		.def_property("bDoNotUseThisSeat", [](UWillowVehicleSeatDefinition &self){return self.bDoNotUseThisSeat;}, [](UWillowVehicleSeatDefinition &self, bool value){self.bDoNotUseThisSeat = value ? 1 : 0;})
		.def_property("AimTowardCameraLookSpot", [](UWillowVehicleSeatDefinition &self){return self.AimTowardCameraLookSpot;}, [](UWillowVehicleSeatDefinition &self, bool value){self.AimTowardCameraLookSpot = value ? 1 : 0;})
		.def_property("bHideOccupant", [](UWillowVehicleSeatDefinition &self){return self.bHideOccupant;}, [](UWillowVehicleSeatDefinition &self, bool value){self.bHideOccupant = value ? 1 : 0;})
		.def_property("TransferVehicleDamageToSeat", [](UWillowVehicleSeatDefinition &self){return self.TransferVehicleDamageToSeat;}, [](UWillowVehicleSeatDefinition &self, bool value){self.TransferVehicleDamageToSeat = value ? 1 : 0;})
		.def_property("TransferVehicleDamageToSeat_AI", [](UWillowVehicleSeatDefinition &self){return self.TransferVehicleDamageToSeat_AI;}, [](UWillowVehicleSeatDefinition &self, bool value){self.TransferVehicleDamageToSeat_AI = value ? 1 : 0;})
		.def_property("DisplayHealthBarForPassenger", [](UWillowVehicleSeatDefinition &self){return self.DisplayHealthBarForPassenger;}, [](UWillowVehicleSeatDefinition &self, bool value){self.DisplayHealthBarForPassenger = value ? 1 : 0;})
		.def_property("bHijackSeat", [](UWillowVehicleSeatDefinition &self){return self.bHijackSeat;}, [](UWillowVehicleSeatDefinition &self, bool value){self.bHijackSeat = value ? 1 : 0;})
		.def_property("bAIOnly", [](UWillowVehicleSeatDefinition &self){return self.bAIOnly;}, [](UWillowVehicleSeatDefinition &self, bool value){self.bAIOnly = value ? 1 : 0;})
		.def_property("IsAttachedRiderSeat", [](UWillowVehicleSeatDefinition &self){return self.IsAttachedRiderSeat;}, [](UWillowVehicleSeatDefinition &self, bool value){self.IsAttachedRiderSeat = value ? 1 : 0;})
		.def_property("ForceOccupantCrouch", [](UWillowVehicleSeatDefinition &self){return self.ForceOccupantCrouch;}, [](UWillowVehicleSeatDefinition &self, bool value){self.ForceOccupantCrouch = value ? 1 : 0;})
		.def_property("DeadPawnsDropLootFromThisSeat", [](UWillowVehicleSeatDefinition &self){return self.DeadPawnsDropLootFromThisSeat;}, [](UWillowVehicleSeatDefinition &self, bool value){self.DeadPawnsDropLootFromThisSeat = value ? 1 : 0;})
		.def_readwrite("VirtualSeatKey", &UWillowVehicleSeatDefinition::VirtualSeatKey, py::return_value_policy::reference)
		.def_readwrite("InteractIcon", &UWillowVehicleSeatDefinition::InteractIcon, py::return_value_policy::reference)
		.def_readwrite("SeatInteractTextDefinition", &UWillowVehicleSeatDefinition::SeatInteractTextDefinition, py::return_value_policy::reference)
		.def_readwrite("PlayerInteractionLeftMinAngle", &UWillowVehicleSeatDefinition::PlayerInteractionLeftMinAngle)
		.def_readwrite("PlayerInteractionRightMaxAngle", &UWillowVehicleSeatDefinition::PlayerInteractionRightMaxAngle)
		.def_readwrite("SeatAnchor", &UWillowVehicleSeatDefinition::SeatAnchor, py::return_value_policy::reference)
		.def_readwrite("CameraDef", &UWillowVehicleSeatDefinition::CameraDef, py::return_value_policy::reference)
		.def_readwrite("OccupantCullDistance", &UWillowVehicleSeatDefinition::OccupantCullDistance)
		.def_readwrite("ViewLimitLowerLeft", &UWillowVehicleSeatDefinition::ViewLimitLowerLeft, py::return_value_policy::reference)
		.def_readwrite("ViewLimitUpperRight", &UWillowVehicleSeatDefinition::ViewLimitUpperRight, py::return_value_policy::reference)
		.def_readwrite("WeaponBalanceDefinition", &UWillowVehicleSeatDefinition::WeaponBalanceDefinition, py::return_value_policy::reference)
		.def_readwrite("GunAttachmentSocket", &UWillowVehicleSeatDefinition::GunAttachmentSocket, py::return_value_policy::reference)
		.def_readwrite("MaxFinalAimAdjustment", &UWillowVehicleSeatDefinition::MaxFinalAimAdjustment)
		.def_readwrite("GunSocket", &UWillowVehicleSeatDefinition::GunSocket, py::return_value_policy::reference)
		.def_readwrite("GunPivotPoints", &UWillowVehicleSeatDefinition::GunPivotPoints, py::return_value_policy::reference)
		.def_readwrite("TurretControls", &UWillowVehicleSeatDefinition::TurretControls, py::return_value_policy::reference)
		.def_readwrite("WeaponFireSwitch", &UWillowVehicleSeatDefinition::WeaponFireSwitch, py::return_value_policy::reference)
		.def_readwrite("TurretVarPrefix", &UWillowVehicleSeatDefinition::TurretVarPrefix, py::return_value_policy::reference)
		.def_readwrite("WeaponFireSMD", &UWillowVehicleSeatDefinition::WeaponFireSMD, py::return_value_policy::reference)
		.def_readwrite("NextSeatIndex", &UWillowVehicleSeatDefinition::NextSeatIndex)
		.def_readwrite("Anim_SeatSwap", &UWillowVehicleSeatDefinition::Anim_SeatSwap, py::return_value_policy::reference)
		.def_readwrite("Anim_EnterLeft", &UWillowVehicleSeatDefinition::Anim_EnterLeft, py::return_value_policy::reference)
		.def_readwrite("Anim_EnterRight", &UWillowVehicleSeatDefinition::Anim_EnterRight, py::return_value_policy::reference)
		.def_readwrite("Anim_EnterFront", &UWillowVehicleSeatDefinition::Anim_EnterFront, py::return_value_policy::reference)
		.def_readwrite("Anim_EnterBack", &UWillowVehicleSeatDefinition::Anim_EnterBack, py::return_value_policy::reference)
		.def_readwrite("Anim_Idle", &UWillowVehicleSeatDefinition::Anim_Idle, py::return_value_policy::reference)
		.def_readwrite("Anim_Hijack", &UWillowVehicleSeatDefinition::Anim_Hijack, py::return_value_policy::reference)
		.def_readwrite("Anim_Exit1", &UWillowVehicleSeatDefinition::Anim_Exit1, py::return_value_policy::reference)
		.def_readwrite("Anim_Exit2", &UWillowVehicleSeatDefinition::Anim_Exit2, py::return_value_policy::reference)
		.def_readwrite("LeftHandPlacementName", &UWillowVehicleSeatDefinition::LeftHandPlacementName, py::return_value_policy::reference)
		.def_readwrite("RightHandPlacementName", &UWillowVehicleSeatDefinition::RightHandPlacementName, py::return_value_policy::reference)
		.def_readwrite("GrenadeThrowHeight", &UWillowVehicleSeatDefinition::GrenadeThrowHeight)
		.def_readwrite("SeatAIDef", &UWillowVehicleSeatDefinition::SeatAIDef, py::return_value_policy::reference)
		.def_readwrite("HijackSide", &UWillowVehicleSeatDefinition::HijackSide)
		.def_readwrite("AISeatPos", &UWillowVehicleSeatDefinition::AISeatPos)
		.def_readwrite("DamageRules", &UWillowVehicleSeatDefinition::DamageRules)
		.def_readwrite("PreferredExitSide", &UWillowVehicleSeatDefinition::PreferredExitSide)
		.def_readwrite("DontResetWeaponFireSwitchPerShot", &UWillowVehicleSeatDefinition::DontResetWeaponFireSwitchPerShot)
		.def_readwrite("HijackAimSocket", &UWillowVehicleSeatDefinition::HijackAimSocket, py::return_value_policy::reference)
		.def_readwrite("DamageTransferFactor", &UWillowVehicleSeatDefinition::DamageTransferFactor)
		.def_readwrite("DamageTransferFactor_AI", &UWillowVehicleSeatDefinition::DamageTransferFactor_AI)
		.def_readwrite("ExtraDeathImpulsesDuringRagdoll", &UWillowVehicleSeatDefinition::ExtraDeathImpulsesDuringRagdoll, py::return_value_policy::reference)
		.def_readwrite("StatusEffectToApplyOnKillEjection", &UWillowVehicleSeatDefinition::StatusEffectToApplyOnKillEjection, py::return_value_policy::reference)
		.def_readwrite("HUD_SeatIndexForWeapon", &UWillowVehicleSeatDefinition::HUD_SeatIndexForWeapon)
		.def_readwrite("EjectRandMin", &UWillowVehicleSeatDefinition::EjectRandMin, py::return_value_policy::reference)
		.def_readwrite("EjectRandMax", &UWillowVehicleSeatDefinition::EjectRandMax, py::return_value_policy::reference)
		.def_readwrite("ControllerRumbleWhenRotating", &UWillowVehicleSeatDefinition::ControllerRumbleWhenRotating, py::return_value_policy::reference)
		;
	py::class_< UWillowVehicleSimCar, USVehicleSimCar >(m, "UWillowVehicleSimCar")
		.def_property("bForceThrottle", [](UWillowVehicleSimCar &self){return self.bForceThrottle;}, [](UWillowVehicleSimCar &self, bool value){self.bForceThrottle = value ? 1 : 0;})
		.def_property("bHasForcedThrottle", [](UWillowVehicleSimCar &self){return self.bHasForcedThrottle;}, [](UWillowVehicleSimCar &self, bool value){self.bHasForcedThrottle = value ? 1 : 0;})
		.def_readwrite("TorqueVSpeedCurve", &UWillowVehicleSimCar::TorqueVSpeedCurve, py::return_value_policy::reference)
		.def_readwrite("DefaultTorqueVSpeedCurve", &UWillowVehicleSimCar::DefaultTorqueVSpeedCurve, py::return_value_policy::reference)
		.def_readwrite("TotalSpinVel", &UWillowVehicleSimCar::TotalSpinVel)
		.def_readwrite("LSDFactor", &UWillowVehicleSimCar::LSDFactor)
		.def_readwrite("ThrottleSpeed", &UWillowVehicleSimCar::ThrottleSpeed)
		.def_readwrite("SlopeMinDriveLimit", &UWillowVehicleSimCar::SlopeMinDriveLimit)
		.def_readwrite("SlopeMaxDriveLimit", &UWillowVehicleSimCar::SlopeMaxDriveLimit)
		.def_readwrite("MinRPM", &UWillowVehicleSimCar::MinRPM)
		.def_readwrite("MaxRPM", &UWillowVehicleSimCar::MaxRPM)
		.def_readwrite("ActualThrottle", &UWillowVehicleSimCar::ActualThrottle)
		.def_readwrite("LastLerpVal", &UWillowVehicleSimCar::LastLerpVal)
		.def_readwrite("WheelSmoothingSpeed", &UWillowVehicleSimCar::WheelSmoothingSpeed)
		.def_readwrite("FrontalCollisionGripFactor", &UWillowVehicleSimCar::FrontalCollisionGripFactor)
		.def_readwrite("InAirUprightTorqueFactor", &UWillowVehicleSimCar::InAirUprightTorqueFactor)
		.def_readwrite("InAirUprightMaxTorque", &UWillowVehicleSimCar::InAirUprightMaxTorque)
		.def_readwrite("PhysicalMaterialTireModels", &UWillowVehicleSimCar::PhysicalMaterialTireModels, py::return_value_policy::reference)
		.def_readwrite("CachedMaxTorqueCurveSpeed", &UWillowVehicleSimCar::CachedMaxTorqueCurveSpeed)
		.def_readwrite("CachedSpeedCapMultiplier", &UWillowVehicleSimCar::CachedSpeedCapMultiplier)
		.def("ResetTorqueCurve", &UWillowVehicleSimCar::ResetTorqueCurve)
		.def("StretchTorqueCurve", &UWillowVehicleSimCar::StretchTorqueCurve)
		;
	py::class_< UWillowVehicleSimChopper, USVehicleSimBase >(m, "UWillowVehicleSimChopper")
		.def_property("bAllowZThrust", [](UWillowVehicleSimChopper &self){return self.bAllowZThrust;}, [](UWillowVehicleSimChopper &self, bool value){self.bAllowZThrust = value ? 1 : 0;})
		.def_property("bFullThrustOnDirectionChange", [](UWillowVehicleSimChopper &self){return self.bFullThrustOnDirectionChange;}, [](UWillowVehicleSimChopper &self, bool value){self.bFullThrustOnDirectionChange = value ? 1 : 0;})
		.def_property("bShouldCutThrustMaxOnImpact", [](UWillowVehicleSimChopper &self){return self.bShouldCutThrustMaxOnImpact;}, [](UWillowVehicleSimChopper &self, bool value){self.bShouldCutThrustMaxOnImpact = value ? 1 : 0;})
		.def_property("bRecentlyHit", [](UWillowVehicleSimChopper &self){return self.bRecentlyHit;}, [](UWillowVehicleSimChopper &self, bool value){self.bRecentlyHit = value ? 1 : 0;})
		.def_property("bStrafeAffectsTurnDamping", [](UWillowVehicleSimChopper &self){return self.bStrafeAffectsTurnDamping;}, [](UWillowVehicleSimChopper &self, bool value){self.bStrafeAffectsTurnDamping = value ? 1 : 0;})
		.def_property("bHeadingInitialized", [](UWillowVehicleSimChopper &self){return self.bHeadingInitialized;}, [](UWillowVehicleSimChopper &self, bool value){self.bHeadingInitialized = value ? 1 : 0;})
		.def_property("bStabilizeStops", [](UWillowVehicleSimChopper &self){return self.bStabilizeStops;}, [](UWillowVehicleSimChopper &self, bool value){self.bStabilizeStops = value ? 1 : 0;})
		.def_property("bAutoHover", [](UWillowVehicleSimChopper &self){return self.bAutoHover;}, [](UWillowVehicleSimChopper &self, bool value){self.bAutoHover = value ? 1 : 0;})
		.def_readwrite("MaxThrustForce", &UWillowVehicleSimChopper::MaxThrustForce)
		.def_readwrite("MaxReverseForce", &UWillowVehicleSimChopper::MaxReverseForce)
		.def_readwrite("LongDamping", &UWillowVehicleSimChopper::LongDamping)
		.def_readwrite("MaxStrafeForce", &UWillowVehicleSimChopper::MaxStrafeForce)
		.def_readwrite("LatDamping", &UWillowVehicleSimChopper::LatDamping)
		.def_readwrite("DirectionChangeForce", &UWillowVehicleSimChopper::DirectionChangeForce)
		.def_readwrite("MaxRiseForce", &UWillowVehicleSimChopper::MaxRiseForce)
		.def_readwrite("UpDamping", &UWillowVehicleSimChopper::UpDamping)
		.def_readwrite("TurnTorqueFactor", &UWillowVehicleSimChopper::TurnTorqueFactor)
		.def_readwrite("TurnTorqueMax", &UWillowVehicleSimChopper::TurnTorqueMax)
		.def_readwrite("TurnDamping", &UWillowVehicleSimChopper::TurnDamping)
		.def_readwrite("MaxYawRate", &UWillowVehicleSimChopper::MaxYawRate)
		.def_readwrite("PitchTorqueFactor", &UWillowVehicleSimChopper::PitchTorqueFactor)
		.def_readwrite("PitchTorqueMax", &UWillowVehicleSimChopper::PitchTorqueMax)
		.def_readwrite("PitchDamping", &UWillowVehicleSimChopper::PitchDamping)
		.def_readwrite("RollTorqueTurnFactor", &UWillowVehicleSimChopper::RollTorqueTurnFactor)
		.def_readwrite("RollTorqueStrafeFactor", &UWillowVehicleSimChopper::RollTorqueStrafeFactor)
		.def_readwrite("RollTorqueMax", &UWillowVehicleSimChopper::RollTorqueMax)
		.def_readwrite("RollDamping", &UWillowVehicleSimChopper::RollDamping)
		.def_readwrite("StopThreshold", &UWillowVehicleSimChopper::StopThreshold)
		.def_readwrite("MaxRandForce", &UWillowVehicleSimChopper::MaxRandForce)
		.def_readwrite("RandForceInterval", &UWillowVehicleSimChopper::RandForceInterval)
		.def_readwrite("StrafeTurnDamping", &UWillowVehicleSimChopper::StrafeTurnDamping)
		.def_readwrite("TargetHeading", &UWillowVehicleSimChopper::TargetHeading)
		.def_readwrite("TargetPitch", &UWillowVehicleSimChopper::TargetPitch)
		.def_readwrite("PitchViewCorrelation", &UWillowVehicleSimChopper::PitchViewCorrelation)
		.def_readwrite("RandForce", &UWillowVehicleSimChopper::RandForce, py::return_value_policy::reference)
		.def_readwrite("RandTorque", &UWillowVehicleSimChopper::RandTorque, py::return_value_policy::reference)
		.def_readwrite("AccumulatedTime", &UWillowVehicleSimChopper::AccumulatedTime)
		.def_readwrite("StabilizationForceMultiplier", &UWillowVehicleSimChopper::StabilizationForceMultiplier)
		.def_readwrite("CurrentStabilizationMultiplier", &UWillowVehicleSimChopper::CurrentStabilizationMultiplier)
		.def_readwrite("OldVelocity", &UWillowVehicleSimChopper::OldVelocity, py::return_value_policy::reference)
		.def_readwrite("StoppedBrakeTorque", &UWillowVehicleSimChopper::StoppedBrakeTorque)
		.def_readwrite("HardLimitAirSpeedScale", &UWillowVehicleSimChopper::HardLimitAirSpeedScale)
		.def_readwrite("MaxVelocityWhenAdjustingHover", &UWillowVehicleSimChopper::MaxVelocityWhenAdjustingHover)
		.def_readwrite("HoverDeadZone", &UWillowVehicleSimChopper::HoverDeadZone)
		.def_readwrite("RiseAdjustmentInterval", &UWillowVehicleSimChopper::RiseAdjustmentInterval)
		.def_readwrite("DesiredHoverHeight", &UWillowVehicleSimChopper::DesiredHoverHeight)
		.def_readwrite("PreviousZVel", &UWillowVehicleSimChopper::PreviousZVel)
		.def_readwrite("AdjustedRise", &UWillowVehicleSimChopper::AdjustedRise)
		;
	py::class_< UWillowVehicleSimFly, USVehicleSimBase >(m, "UWillowVehicleSimFly")
		.def_readwrite("RiseSpeed", &UWillowVehicleSimFly::RiseSpeed)
		.def_readwrite("MoveSpeed", &UWillowVehicleSimFly::MoveSpeed)
		;
	py::class_< UWillowVehicleSimHover, USVehicleSimCar >(m, "UWillowVehicleSimHover")
		.def_readwrite("FlyingVehicle", &UWillowVehicleSimHover::FlyingVehicle, py::return_value_policy::reference)
		.def_readwrite("AirTransFriction", &UWillowVehicleSimHover::AirTransFriction, py::return_value_policy::reference)
		.def_readwrite("AirRotFriction", &UWillowVehicleSimHover::AirRotFriction)
		.def_readwrite("ForceScalar", &UWillowVehicleSimHover::ForceScalar, py::return_value_policy::reference)
		.def_readwrite("TorqueScalar", &UWillowVehicleSimHover::TorqueScalar)
		.def_readwrite("TiltScalar", &UWillowVehicleSimHover::TiltScalar)
		.def_readwrite("MoveTiltAmount", &UWillowVehicleSimHover::MoveTiltAmount)
		;
	py::class_< UWillowVehicleSimTank, USVehicleSimTank >(m, "UWillowVehicleSimTank")
		.def_property("bDoStoppedTurns", [](UWillowVehicleSimTank &self){return self.bDoStoppedTurns;}, [](UWillowVehicleSimTank &self, bool value){self.bDoStoppedTurns = value ? 1 : 0;})
		.def_readwrite("SteeringThresholdForStoppedTurns", &UWillowVehicleSimTank::SteeringThresholdForStoppedTurns)
		.def_readwrite("EngineDampingOnStoppedTurns", &UWillowVehicleSimTank::EngineDampingOnStoppedTurns)
		;
	py::class_< AWillowWaterSMActor, AStaticMeshActor >(m, "AWillowWaterSMActor")
		;
	py::class_< AWillowWeapon, AWeapon >(m, "AWillowWeapon")
		.def_property("bUpdateAmmoNotInClip", [](AWillowWeapon &self){return self.bUpdateAmmoNotInClip;}, [](AWillowWeapon &self, bool value){self.bUpdateAmmoNotInClip = value ? 1 : 0;})
		.def_property("bAmmoRefilledDuringReload", [](AWillowWeapon &self){return self.bAmmoRefilledDuringReload;}, [](AWillowWeapon &self, bool value){self.bAmmoRefilledDuringReload = value ? 1 : 0;})
		.def_property("bItemNameGenerated", [](AWillowWeapon &self){return self.bItemNameGenerated;}, [](AWillowWeapon &self, bool value){self.bItemNameGenerated = value ? 1 : 0;})
		.def_property("bUseOverheatBehavior", [](AWillowWeapon &self){return self.bUseOverheatBehavior;}, [](AWillowWeapon &self, bool value){self.bUseOverheatBehavior = value ? 1 : 0;})
		.def_property("bBurstDelayActive", [](AWillowWeapon &self){return self.bBurstDelayActive;}, [](AWillowWeapon &self, bool value){self.bBurstDelayActive = value ? 1 : 0;})
		.def_property("bDisplayWeaponShotDebug", [](AWillowWeapon &self){return self.bDisplayWeaponShotDebug;}, [](AWillowWeapon &self, bool value){self.bDisplayWeaponShotDebug = value ? 1 : 0;})
		.def_property("bDisableFireViewShake", [](AWillowWeapon &self){return self.bDisableFireViewShake;}, [](AWillowWeapon &self, bool value){self.bDisableFireViewShake = value ? 1 : 0;})
		.def_property("bDisableWeaponSpread", [](AWillowWeapon &self){return self.bDisableWeaponSpread;}, [](AWillowWeapon &self, bool value){self.bDisableWeaponSpread = value ? 1 : 0;})
		.def_property("bHoldToZoom", [](AWillowWeapon &self){return self.bHoldToZoom;}, [](AWillowWeapon &self, bool value){self.bHoldToZoom = value ? 1 : 0;})
		.def_property("bFadeOnZoomBegin", [](AWillowWeapon &self){return self.bFadeOnZoomBegin;}, [](AWillowWeapon &self, bool value){self.bFadeOnZoomBegin = value ? 1 : 0;})
		.def_property("bFadeOnZoomEnd", [](AWillowWeapon &self){return self.bFadeOnZoomEnd;}, [](AWillowWeapon &self, bool value){self.bFadeOnZoomEnd = value ? 1 : 0;})
		.def_property("bDeRezzed", [](AWillowWeapon &self){return self.bDeRezzed;}, [](AWillowWeapon &self, bool value){self.bDeRezzed = value ? 1 : 0;})
		.def_property("bReplicateFiringSounds", [](AWillowWeapon &self){return self.bReplicateFiringSounds;}, [](AWillowWeapon &self, bool value){self.bReplicateFiringSounds = value ? 1 : 0;})
		.def_property("bSwappingWeaponAfterPutDown", [](AWillowWeapon &self){return self.bSwappingWeaponAfterPutDown;}, [](AWillowWeapon &self, bool value){self.bSwappingWeaponAfterPutDown = value ? 1 : 0;})
		.def_property("bMuzzleFlashPSCLoops", [](AWillowWeapon &self){return self.bMuzzleFlashPSCLoops;}, [](AWillowWeapon &self, bool value){self.bMuzzleFlashPSCLoops = value ? 1 : 0;})
		.def_property("bSelectRandomPartsOnInitialization", [](AWillowWeapon &self){return self.bSelectRandomPartsOnInitialization;}, [](AWillowWeapon &self, bool value){self.bSelectRandomPartsOnInitialization = value ? 1 : 0;})
		.def_property("bInitAnimationsOnAttach", [](AWillowWeapon &self){return self.bInitAnimationsOnAttach;}, [](AWillowWeapon &self, bool value){self.bInitAnimationsOnAttach = value ? 1 : 0;})
		.def_property("bContinuousBeamIsFiring", [](AWillowWeapon &self){return self.bContinuousBeamIsFiring;}, [](AWillowWeapon &self, bool value){self.bContinuousBeamIsFiring = value ? 1 : 0;})
		.def_property("bCrosshairEnabled", [](AWillowWeapon &self){return self.bCrosshairEnabled;}, [](AWillowWeapon &self, bool value){self.bCrosshairEnabled = value ? 1 : 0;})
		.def_property("bSuppressCrosshair", [](AWillowWeapon &self){return self.bSuppressCrosshair;}, [](AWillowWeapon &self, bool value){self.bSuppressCrosshair = value ? 1 : 0;})
		.def_property("bIsBlockedAfterBusy", [](AWillowWeapon &self){return self.bIsBlockedAfterBusy;}, [](AWillowWeapon &self, bool value){self.bIsBlockedAfterBusy = value ? 1 : 0;})
		.def_property("bUseRealTimeForZoom", [](AWillowWeapon &self){return self.bUseRealTimeForZoom;}, [](AWillowWeapon &self, bool value){self.bUseRealTimeForZoom = value ? 1 : 0;})
		.def_property("bAttachedToInstigator", [](AWillowWeapon &self){return self.bAttachedToInstigator;}, [](AWillowWeapon &self, bool value){self.bAttachedToInstigator = value ? 1 : 0;})
		.def_property("bHolsteredOnBody", [](AWillowWeapon &self){return self.bHolsteredOnBody;}, [](AWillowWeapon &self, bool value){self.bHolsteredOnBody = value ? 1 : 0;})
		.def_property("bActivatedDuringVehicleTransition", [](AWillowWeapon &self){return self.bActivatedDuringVehicleTransition;}, [](AWillowWeapon &self, bool value){self.bActivatedDuringVehicleTransition = value ? 1 : 0;})
		.def_property("bOnlyPlayFirstPersonAnimOnNextEquip", [](AWillowWeapon &self){return self.bOnlyPlayFirstPersonAnimOnNextEquip;}, [](AWillowWeapon &self, bool value){self.bOnlyPlayFirstPersonAnimOnNextEquip = value ? 1 : 0;})
		.def_property("bManualReload", [](AWillowWeapon &self){return self.bManualReload;}, [](AWillowWeapon &self, bool value){self.bManualReload = value ? 1 : 0;})
		.def_readwrite("VfTable_IIInstanceData", &AWillowWeapon::VfTable_IIInstanceData, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIMissionInventory", &AWillowWeapon::VfTable_IIMissionInventory, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorConsumer", &AWillowWeapon::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIItemCardable", &AWillowWeapon::VfTable_IIItemCardable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IINounAttributeProvider", &AWillowWeapon::VfTable_IINounAttributeProvider, py::return_value_policy::reference)
		.def_readwrite("NextFiringPatternIndex", &AWillowWeapon::NextFiringPatternIndex)
		.def_readwrite("StoredAmmo", &AWillowWeapon::StoredAmmo)
		.def_readwrite("AmmoPool", &AWillowWeapon::AmmoPool, py::return_value_policy::reference)
		.def_readwrite("AmmoNotInClip", &AWillowWeapon::AmmoNotInClip)
		.def_readwrite("ShotCost", &AWillowWeapon::ShotCost)
		.def_readwrite("ShotCostBaseValue", &AWillowWeapon::ShotCostBaseValue)
		.def_readwrite("ShotCostModifierStack", &AWillowWeapon::ShotCostModifierStack, py::return_value_policy::reference)
		.def_readwrite("AdditionalRicochets", &AWillowWeapon::AdditionalRicochets)
		.def_readwrite("AdditionalRicochetsBaseValue", &AWillowWeapon::AdditionalRicochetsBaseValue)
		.def_readwrite("AdditionalRicochetsModifierStack", &AWillowWeapon::AdditionalRicochetsModifierStack, py::return_value_policy::reference)
		.def_readwrite("LastFireTime", &AWillowWeapon::LastFireTime)
		.def_readwrite("ClipSize", &AWillowWeapon::ClipSize)
		.def_readwrite("ClipSizeBaseValue", &AWillowWeapon::ClipSizeBaseValue)
		.def_readwrite("ClipSizeModifierStack", &AWillowWeapon::ClipSizeModifierStack, py::return_value_policy::reference)
		.def_readwrite("LastReloadCnt", &AWillowWeapon::LastReloadCnt)
		.def_readwrite("LastClipSize", &AWillowWeapon::LastClipSize)
		.def_readwrite("AmmoLeftInClipDuringReload", &AWillowWeapon::AmmoLeftInClipDuringReload)
		.def_readwrite("ReloadCnt", &AWillowWeapon::ReloadCnt)
		.def_readwrite("CurrentBurstShotCount", &AWillowWeapon::CurrentBurstShotCount)
		.def_readwrite("ReloadTime", &AWillowWeapon::ReloadTime)
		.def_readwrite("ReloadTimeBaseValue", &AWillowWeapon::ReloadTimeBaseValue)
		.def_readwrite("ReloadTimeModifierStack", &AWillowWeapon::ReloadTimeModifierStack, py::return_value_policy::reference)
		.def_readwrite("ReplicatedReloadState", &AWillowWeapon::ReplicatedReloadState)
		.def_readwrite("bUseWeaponMelee", &AWillowWeapon::bUseWeaponMelee)
		.def_readwrite("ZoomState", &AWillowWeapon::ZoomState)
		.def_readwrite("BodyVariation", &AWillowWeapon::BodyVariation)
		.def_readwrite("PutDownAnimState", &AWillowWeapon::PutDownAnimState)
		.def_readwrite("MagazineSpinState", &AWillowWeapon::MagazineSpinState)
		.def_readwrite("LastProcessedMagazineSpinState", &AWillowWeapon::LastProcessedMagazineSpinState)
		.def_readwrite("BarrelSpinState", &AWillowWeapon::BarrelSpinState)
		.def_readwrite("LastProcessedBarrelSpinState", &AWillowWeapon::LastProcessedBarrelSpinState)
		.def_readwrite("VisibleAmmoState", &AWillowWeapon::VisibleAmmoState)
		.def_readwrite("QuickSelectSlot", &AWillowWeapon::QuickSelectSlot)
		.def_readwrite("Playing1stPersonReloadSMD", &AWillowWeapon::Playing1stPersonReloadSMD, py::return_value_policy::reference)
		.def_readwrite("Playing3rdPersonReloadSMD", &AWillowWeapon::Playing3rdPersonReloadSMD, py::return_value_policy::reference)
		.def_readwrite("GeneratedItemName", &AWillowWeapon::GeneratedItemName, py::return_value_policy::reference)
		.def_readwrite("OverheatRegenDelay", &AWillowWeapon::OverheatRegenDelay)
		.def_readwrite("OverheatRegenDelayBaseValue", &AWillowWeapon::OverheatRegenDelayBaseValue)
		.def_readwrite("OverheatRegenDelayModifierStack", &AWillowWeapon::OverheatRegenDelayModifierStack, py::return_value_policy::reference)
		.def_readwrite("FireRegenDelay", &AWillowWeapon::FireRegenDelay)
		.def_readwrite("FireRegenDelayBaseValue", &AWillowWeapon::FireRegenDelayBaseValue)
		.def_readwrite("FireRegenDelayModifierStack", &AWillowWeapon::FireRegenDelayModifierStack, py::return_value_policy::reference)
		.def_readwrite("RegenRate", &AWillowWeapon::RegenRate)
		.def_readwrite("RegenRateBaseValue", &AWillowWeapon::RegenRateBaseValue)
		.def_readwrite("RegenRateModifierStack", &AWillowWeapon::RegenRateModifierStack, py::return_value_policy::reference)
		.def_readwrite("RegenAmount", &AWillowWeapon::RegenAmount)
		.def_readwrite("OverheatAmmo", &AWillowWeapon::OverheatAmmo)
		.def_readwrite("AmmoRegenStartTime", &AWillowWeapon::AmmoRegenStartTime)
		.def_readwrite("MeleeDamage", &AWillowWeapon::MeleeDamage)
		.def_readwrite("MeleeDamageBaseValue", &AWillowWeapon::MeleeDamageBaseValue)
		.def_readwrite("MeleeDamageModifierStack", &AWillowWeapon::MeleeDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("NormalizedInstantHitDamage", &AWillowWeapon::NormalizedInstantHitDamage)
		.def_readwrite("NormalizedInstantHitDamageBaseValue", &AWillowWeapon::NormalizedInstantHitDamageBaseValue)
		.def_readwrite("NormalizedInstantHitDamageModifierStack", &AWillowWeapon::NormalizedInstantHitDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("NormalizedMeleeDamage", &AWillowWeapon::NormalizedMeleeDamage)
		.def_readwrite("NormalizedMeleeDamageBaseValue", &AWillowWeapon::NormalizedMeleeDamageBaseValue)
		.def_readwrite("NormalizedMeleeDamageModifierStack", &AWillowWeapon::NormalizedMeleeDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("BurstInterval", &AWillowWeapon::BurstInterval)
		.def_readwrite("BurstIntervalBaseValue", &AWillowWeapon::BurstIntervalBaseValue)
		.def_readwrite("BurstIntervalModifierStack", &AWillowWeapon::BurstIntervalModifierStack, py::return_value_policy::reference)
		.def_readwrite("AutomaticBurstCount", &AWillowWeapon::AutomaticBurstCount)
		.def_readwrite("AutomaticBurstCountBaseValue", &AWillowWeapon::AutomaticBurstCountBaseValue)
		.def_readwrite("AutomaticBurstCountModifierStack", &AWillowWeapon::AutomaticBurstCountModifierStack, py::return_value_policy::reference)
		.def_readwrite("BurstShotAccuracyImpulseScale", &AWillowWeapon::BurstShotAccuracyImpulseScale)
		.def_readwrite("BurstShotAccuracyImpulseScaleBaseValue", &AWillowWeapon::BurstShotAccuracyImpulseScaleBaseValue)
		.def_readwrite("BurstShotAccuracyImpulseScaleModifierStack", &AWillowWeapon::BurstShotAccuracyImpulseScaleModifierStack, py::return_value_policy::reference)
		.def_readwrite("LastAutomaticBurstTime", &AWillowWeapon::LastAutomaticBurstTime)
		.def_readwrite("InstanceDataState", &AWillowWeapon::InstanceDataState, py::return_value_policy::reference)
		.def_readwrite("WeaponShotDebugHistory", &AWillowWeapon::WeaponShotDebugHistory, py::return_value_policy::reference)
		.def_readwrite("BaseStatusEffectChanceModifier", &AWillowWeapon::BaseStatusEffectChanceModifier)
		.def_readwrite("BaseStatusEffectChanceModifierBaseValue", &AWillowWeapon::BaseStatusEffectChanceModifierBaseValue)
		.def_readwrite("BaseStatusEffectChanceModifierModifierStack", &AWillowWeapon::BaseStatusEffectChanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("StatusEffectChanceModifier", &AWillowWeapon::StatusEffectChanceModifier)
		.def_readwrite("StatusEffectChanceModifierBaseValue", &AWillowWeapon::StatusEffectChanceModifierBaseValue)
		.def_readwrite("StatusEffectChanceModifierModifierStack", &AWillowWeapon::StatusEffectChanceModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("StatusEffectSpreadTimeIntervalModifier", &AWillowWeapon::StatusEffectSpreadTimeIntervalModifier)
		.def_readwrite("StatusEffectSpreadTimeIntervalModifierBaseValue", &AWillowWeapon::StatusEffectSpreadTimeIntervalModifierBaseValue)
		.def_readwrite("StatusEffectSpreadTimeIntervalModifierModifierStack", &AWillowWeapon::StatusEffectSpreadTimeIntervalModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("StatusEffectDamage", &AWillowWeapon::StatusEffectDamage)
		.def_readwrite("StatusEffectDamageBaseValue", &AWillowWeapon::StatusEffectDamageBaseValue)
		.def_readwrite("StatusEffectDamageModifierStack", &AWillowWeapon::StatusEffectDamageModifierStack, py::return_value_policy::reference)
		.def_readwrite("ZoomedEndFOV", &AWillowWeapon::ZoomedEndFOV)
		.def_readwrite("ZoomedEndFOVBaseValue", &AWillowWeapon::ZoomedEndFOVBaseValue)
		.def_readwrite("ZoomedEndFOVModifierStack", &AWillowWeapon::ZoomedEndFOVModifierStack, py::return_value_policy::reference)
		.def_readwrite("ZoomedFOV", &AWillowWeapon::ZoomedFOV)
		.def_readwrite("ZoomedRate", &AWillowWeapon::ZoomedRate)
		.def_readwrite("ZoomedRateBaseValue", &AWillowWeapon::ZoomedRateBaseValue)
		.def_readwrite("ZoomedRateModifierStack", &AWillowWeapon::ZoomedRateModifierStack, py::return_value_policy::reference)
		.def_readwrite("ZoomFadeTime", &AWillowWeapon::ZoomFadeTime)
		.def_readwrite("ZoomStartTime", &AWillowWeapon::ZoomStartTime)
		.def_readwrite("WeaponMaterial", &AWillowWeapon::WeaponMaterial, py::return_value_policy::reference)
		.def_readwrite("SightFXCrosshairMaterial", &AWillowWeapon::SightFXCrosshairMaterial, py::return_value_policy::reference)
		.def_readwrite("ThirdPersonMesh", &AWillowWeapon::ThirdPersonMesh, py::return_value_policy::reference)
		.def_readwrite("CurrentSlot", &AWillowWeapon::CurrentSlot)
		.def_readwrite("ExtraSlots", &AWillowWeapon::ExtraSlots, py::return_value_policy::reference)
		.def_readwrite("CachedMuzzleLocation", &AWillowWeapon::CachedMuzzleLocation, py::return_value_policy::reference)
		.def_readwrite("CachedMuzzleLocationFrameNumber", &AWillowWeapon::CachedMuzzleLocationFrameNumber)
		.def_readwrite("CachedMuzzleLocationMesh", &AWillowWeapon::CachedMuzzleLocationMesh, py::return_value_policy::reference)
		.def_readwrite("WeaponAnimNodeSlot", &AWillowWeapon::WeaponAnimNodeSlot, py::return_value_policy::reference)
		.def_readwrite("ArmAnimNodeSlot", &AWillowWeapon::ArmAnimNodeSlot, py::return_value_policy::reference)
		.def_readwrite("BulletWhipAkEvent", &AWillowWeapon::BulletWhipAkEvent, py::return_value_policy::reference)
		.def_readwrite("MyWeaponImpactResponseParameters", &AWillowWeapon::MyWeaponImpactResponseParameters, py::return_value_policy::reference)
		.def_readwrite("MagazineSpinUpDuration", &AWillowWeapon::MagazineSpinUpDuration)
		.def_readwrite("MagazineSpinUpDurationBaseValue", &AWillowWeapon::MagazineSpinUpDurationBaseValue)
		.def_readwrite("MagazineSpinUpDurationModifierStack", &AWillowWeapon::MagazineSpinUpDurationModifierStack, py::return_value_policy::reference)
		.def_readwrite("MagazineSpinDownDuration", &AWillowWeapon::MagazineSpinDownDuration)
		.def_readwrite("MagazineSpinDownDurationBaseValue", &AWillowWeapon::MagazineSpinDownDurationBaseValue)
		.def_readwrite("MagazineSpinDownDurationModifierStack", &AWillowWeapon::MagazineSpinDownDurationModifierStack, py::return_value_policy::reference)
		.def_readwrite("MagazineSpinUpPercent", &AWillowWeapon::MagazineSpinUpPercent)
		.def_readwrite("BodyFlapsExpandDuration", &AWillowWeapon::BodyFlapsExpandDuration)
		.def_readwrite("BodyFlapsExpandDurationBaseValue", &AWillowWeapon::BodyFlapsExpandDurationBaseValue)
		.def_readwrite("BodyFlapsExpandDurationModifierStack", &AWillowWeapon::BodyFlapsExpandDurationModifierStack, py::return_value_policy::reference)
		.def_readwrite("BodyFlapsCollapseDuration", &AWillowWeapon::BodyFlapsCollapseDuration)
		.def_readwrite("BodyFlapsCollapseDurationBaseValue", &AWillowWeapon::BodyFlapsCollapseDurationBaseValue)
		.def_readwrite("BodyFlapsCollapseDurationModifierStack", &AWillowWeapon::BodyFlapsCollapseDurationModifierStack, py::return_value_policy::reference)
		.def_readwrite("BarrelFlapsExpandDuration", &AWillowWeapon::BarrelFlapsExpandDuration)
		.def_readwrite("BarrelFlapsExpandDurationBaseValue", &AWillowWeapon::BarrelFlapsExpandDurationBaseValue)
		.def_readwrite("BarrelFlapsExpandDurationModifierStack", &AWillowWeapon::BarrelFlapsExpandDurationModifierStack, py::return_value_policy::reference)
		.def_readwrite("BarrelFlapsCollapseDuration", &AWillowWeapon::BarrelFlapsCollapseDuration)
		.def_readwrite("BarrelFlapsCollapseDurationBaseValue", &AWillowWeapon::BarrelFlapsCollapseDurationBaseValue)
		.def_readwrite("BarrelFlapsCollapseDurationModifierStack", &AWillowWeapon::BarrelFlapsCollapseDurationModifierStack, py::return_value_policy::reference)
		.def_readwrite("BaseGlowScale", &AWillowWeapon::BaseGlowScale)
		.def_readwrite("FinalGlowScale", &AWillowWeapon::FinalGlowScale)
		.def_readwrite("GlowEffect", &AWillowWeapon::GlowEffect, py::return_value_policy::reference)
		.def_readwrite("GlowEffectStartTime", &AWillowWeapon::GlowEffectStartTime)
		.def_readwrite("GlowImpulseScale", &AWillowWeapon::GlowImpulseScale)
		.def_readwrite("GlowImpulseDecayStartTime", &AWillowWeapon::GlowImpulseDecayStartTime)
		.def_readwrite("FirstPersonMuzzleFlash", &AWillowWeapon::FirstPersonMuzzleFlash, py::return_value_policy::reference)
		.def_readwrite("FirstPersonAltMuzzleFlashes", &AWillowWeapon::FirstPersonAltMuzzleFlashes, py::return_value_policy::reference)
		.def_readwrite("ThirdPersonMuzzleFlash", &AWillowWeapon::ThirdPersonMuzzleFlash, py::return_value_policy::reference)
		.def_readwrite("ThirdPersonAltMuzzleFlashes", &AWillowWeapon::ThirdPersonAltMuzzleFlashes, py::return_value_policy::reference)
		.def_readwrite("NumberOfMuzzleFlashes", &AWillowWeapon::NumberOfMuzzleFlashes)
		.def_readwrite("CurrentMuzzleFlashIndex", &AWillowWeapon::CurrentMuzzleFlashIndex)
		.def_readwrite("FirstPersonShellCasing", &AWillowWeapon::FirstPersonShellCasing, py::return_value_policy::reference)
		.def_readwrite("MuzzleFlashLight", &AWillowWeapon::MuzzleFlashLight, py::return_value_policy::reference)
		.def_readwrite("ThirdPersonMuzzleFlashLight", &AWillowWeapon::ThirdPersonMuzzleFlashLight, py::return_value_policy::reference)
		.def_readwrite("TracerParameterTemplate", &AWillowWeapon::TracerParameterTemplate, py::return_value_policy::reference)
		.def_readwrite("MuzzleFlashPSTemplate", &AWillowWeapon::MuzzleFlashPSTemplate, py::return_value_policy::reference)
		.def_readwrite("CurrentRating", &AWillowWeapon::CurrentRating)
		.def_readwrite("OwnerStatsID", &AWillowWeapon::OwnerStatsID)
		.def_readwrite("WeaponStatsID", &AWillowWeapon::WeaponStatsID)
		.def_readwrite("ExtraShotChance", &AWillowWeapon::ExtraShotChance)
		.def_readwrite("ExtraShotChanceBaseValue", &AWillowWeapon::ExtraShotChanceBaseValue)
		.def_readwrite("ExtraShotChanceModifierStack", &AWillowWeapon::ExtraShotChanceModifierStack, py::return_value_policy::reference)
		.def_readwrite("ExtraShotDelay", &AWillowWeapon::ExtraShotDelay)
		.def_readwrite("ExtraShotDelayBaseValue", &AWillowWeapon::ExtraShotDelayBaseValue)
		.def_readwrite("ExtraShotDelayModifierStack", &AWillowWeapon::ExtraShotDelayModifierStack, py::return_value_policy::reference)
		.def_readwrite("LockOnTargetState", &AWillowWeapon::LockOnTargetState, py::return_value_policy::reference)
		.def_readwrite("BarrelSpinUpDuration", &AWillowWeapon::BarrelSpinUpDuration)
		.def_readwrite("BarrelSpinUpDurationBaseValue", &AWillowWeapon::BarrelSpinUpDurationBaseValue)
		.def_readwrite("BarrelSpinUpDurationModifierStack", &AWillowWeapon::BarrelSpinUpDurationModifierStack, py::return_value_policy::reference)
		.def_readwrite("BarrelSpinDownDuration", &AWillowWeapon::BarrelSpinDownDuration)
		.def_readwrite("BarrelSpinDownDurationBaseValue", &AWillowWeapon::BarrelSpinDownDurationBaseValue)
		.def_readwrite("BarrelSpinDownDurationModifierStack", &AWillowWeapon::BarrelSpinDownDurationModifierStack, py::return_value_policy::reference)
		.def_readwrite("BarrelSpinUpPercent", &AWillowWeapon::BarrelSpinUpPercent)
		.def_readwrite("WeaponColor", &AWillowWeapon::WeaponColor, py::return_value_policy::reference)
		.def_readwrite("AimError", &AWillowWeapon::AimError)
		.def_readwrite("AimErrorBaseValue", &AWillowWeapon::AimErrorBaseValue)
		.def_readwrite("AimErrorModifierStack", &AWillowWeapon::AimErrorModifierStack, py::return_value_policy::reference)
		.def_readwrite("PerShotAccuracyImpulse", &AWillowWeapon::PerShotAccuracyImpulse)
		.def_readwrite("PerShotAccuracyImpulseBaseValue", &AWillowWeapon::PerShotAccuracyImpulseBaseValue)
		.def_readwrite("PerShotAccuracyImpulseModifierStack", &AWillowWeapon::PerShotAccuracyImpulseModifierStack, py::return_value_policy::reference)
		.def_readwrite("ProjectilesPerShot", &AWillowWeapon::ProjectilesPerShot)
		.def_readwrite("ProjectilesPerShotBaseValue", &AWillowWeapon::ProjectilesPerShotBaseValue)
		.def_readwrite("ProjectilesPerShotModifierStack", &AWillowWeapon::ProjectilesPerShotModifierStack, py::return_value_policy::reference)
		.def_readwrite("ExternalAttributeModifiers", &AWillowWeapon::ExternalAttributeModifiers, py::return_value_policy::reference)
		.def_readwrite("WeaponAttributeModifiers", &AWillowWeapon::WeaponAttributeModifiers, py::return_value_policy::reference)
		.def_readwrite("ZoomExternalAttributeModifiers", &AWillowWeapon::ZoomExternalAttributeModifiers, py::return_value_policy::reference)
		.def_readwrite("ZoomWeaponAttributeModifiers", &AWillowWeapon::ZoomWeaponAttributeModifiers, py::return_value_policy::reference)
		.def_readwrite("WeaponCardModifierStats", &AWillowWeapon::WeaponCardModifierStats, py::return_value_policy::reference)
		.def_readwrite("DefinitionData", &AWillowWeapon::DefinitionData, py::return_value_policy::reference)
		.def_readwrite("PartListCollection", &AWillowWeapon::PartListCollection, py::return_value_policy::reference)
		.def_readwrite("WeaponPartBoneControllers", &AWillowWeapon::WeaponPartBoneControllers, py::return_value_policy::reference)
		.def_readwrite("ReloadCntOnLastVisibleAmmoBoneUpdate", &AWillowWeapon::ReloadCntOnLastVisibleAmmoBoneUpdate)
		.def_readwrite("VisibleAmmoBoneIndices", &AWillowWeapon::VisibleAmmoBoneIndices, py::return_value_policy::reference)
		.def_readwrite("LeftHandGripAnimWeapon", &AWillowWeapon::LeftHandGripAnimWeapon, py::return_value_policy::reference)
		.def_readwrite("LastComparedWeapon", &AWillowWeapon::LastComparedWeapon, py::return_value_policy::reference)
		.def_readwrite("StoredPreviousStateName", &AWillowWeapon::StoredPreviousStateName, py::return_value_policy::reference)
		.def_readwrite("ShellCasingImpacts", &AWillowWeapon::ShellCasingImpacts, py::return_value_policy::reference)
		.def_readwrite("ProjectileSpeedMultiplier", &AWillowWeapon::ProjectileSpeedMultiplier)
		.def_readwrite("ProjectileSpeedMultiplierBaseValue", &AWillowWeapon::ProjectileSpeedMultiplierBaseValue)
		.def_readwrite("ProjectileSpeedMultiplierModifierStack", &AWillowWeapon::ProjectileSpeedMultiplierModifierStack, py::return_value_policy::reference)
		.def_readwrite("UpdateMipTimer", &AWillowWeapon::UpdateMipTimer)
		.def_readwrite("WantsMissedShotNotifications", &AWillowWeapon::WantsMissedShotNotifications)
		.def_readwrite("WantsMissedShotNotificationsBaseValue", &AWillowWeapon::WantsMissedShotNotificationsBaseValue)
		.def_readwrite("WantsMissedShotNotificationsModifierStack", &AWillowWeapon::WantsMissedShotNotificationsModifierStack, py::return_value_policy::reference)
		.def_readwrite("ConsumerHandle", &AWillowWeapon::ConsumerHandle, py::return_value_policy::reference)
		.def_readwrite("NounState", &AWillowWeapon::NounState, py::return_value_policy::reference)
		.def_readwrite("TotalAutomaticFiringTime", &AWillowWeapon::TotalAutomaticFiringTime)
		.def_readwrite("LastLocalHitTraceInfo", &AWillowWeapon::LastLocalHitTraceInfo, py::return_value_policy::reference)
		.def_readwrite("CrosshairFrameOverride", &AWillowWeapon::CrosshairFrameOverride, py::return_value_policy::reference)
		.def_readwrite("ReplicatedZoomedEndFOVBaseValue", &AWillowWeapon::ReplicatedZoomedEndFOVBaseValue)
		.def("eventGetCanHolster", &AWillowWeapon::eventGetCanHolster)
		.def("eventGetBodyWeaponHoldName", &AWillowWeapon::eventGetBodyWeaponHoldName, py::return_value_policy::reference)
		.def("ForcePutDownInactiveWeapon", &AWillowWeapon::ForcePutDownInactiveWeapon)
		.def("GetCrosshairFrame", &AWillowWeapon::GetCrosshairFrame, py::return_value_policy::reference)
		.def("IsUsefulToThisPlayer", &AWillowWeapon::IsUsefulToThisPlayer)
		.def("CheckDefMatch", &AWillowWeapon::CheckDefMatch)
		.def("SerialNumberMatchesDef", &AWillowWeapon::SerialNumberMatchesDef)
		.def("CreateWeaponFromSerialNumber", &AWillowWeapon::CreateWeaponFromSerialNumber, py::return_value_policy::reference)
		.def("UnpackSerialNumber", &AWillowWeapon::UnpackSerialNumber)
		.def("PackSerialNumber", &AWillowWeapon::PackSerialNumber, py::return_value_policy::reference)
		.def("CreateSerialNumber", &AWillowWeapon::CreateSerialNumber, py::return_value_policy::reference)
		.def("AddGlowScaleImpulse", &AWillowWeapon::AddGlowScaleImpulse)
		.def("StopAnyGlowEffect", &AWillowWeapon::StopAnyGlowEffect)
		.def("StopGlowEffect", &AWillowWeapon::StopGlowEffect)
		.def("PlayGlowEffect", &AWillowWeapon::PlayGlowEffect)
		.def("GetLockOnStartTime", &AWillowWeapon::GetLockOnStartTime)
		.def("GetLockOnRequiredTime", &AWillowWeapon::GetLockOnRequiredTime)
		.def("LockOnInProgress", &AWillowWeapon::LockOnInProgress)
		.def("eventForceZoomDebug", &AWillowWeapon::eventForceZoomDebug)
		.def("GetTraceImpact", &AWillowWeapon::GetTraceImpact, py::return_value_policy::reference)
		.def("ServerNotifyTargetLockSuccessful", &AWillowWeapon::ServerNotifyTargetLockSuccessful)
		.def("eventNotifyTargetLockSuccessful", &AWillowWeapon::eventNotifyTargetLockSuccessful)
		.def("DefinitionFromHashString", &AWillowWeapon::DefinitionFromHashString)
		.def("GetHashString", &AWillowWeapon::GetHashString, py::return_value_policy::reference)
		.def("OverrideRecoilAnimScaleDebug", &AWillowWeapon::OverrideRecoilAnimScaleDebug)
		.def("GetCurrentZoomedRecoilAnimScale", &AWillowWeapon::GetCurrentZoomedRecoilAnimScale)
		.def("GetCurrentRecoilAnimScale", &AWillowWeapon::GetCurrentRecoilAnimScale)
		.def("CreateWeaponFromDef", &AWillowWeapon::CreateWeaponFromDef, py::return_value_policy::reference)
		.def("DoesDamageType", &AWillowWeapon::DoesDamageType)
		.def("IsDamageCauser", &AWillowWeapon::IsDamageCauser)
		.def("IsMissionWeapon", &AWillowWeapon::IsMissionWeapon)
		.def("CanBeSaved", &AWillowWeapon::CanBeSaved)
		.def("GetControllerPlayerExpLevelRequiredToUse", &AWillowWeapon::GetControllerPlayerExpLevelRequiredToUse)
		.def("CanInventoryBeSoldOrStoredByOwner", &AWillowWeapon::CanInventoryBeSoldOrStoredByOwner)
		.def("CanInventoryBeDroppedByOwner", &AWillowWeapon::CanInventoryBeDroppedByOwner)
		.def("eventHitRegionConsumerPlayHit", &AWillowWeapon::eventHitRegionConsumerPlayHit)
		.def("PlayImpactEffects", &AWillowWeapon::PlayImpactEffects)
		.def("GetFireIntervalChanceModifier", &AWillowWeapon::GetFireIntervalChanceModifier)
		.def("GetStatusEffectBaseChanceModifier", &AWillowWeapon::GetStatusEffectBaseChanceModifier)
		.def("GetStatusEffectChanceModifier", &AWillowWeapon::GetStatusEffectChanceModifier)
		.def("GetStatusEffectBaseDamage", &AWillowWeapon::GetStatusEffectBaseDamage)
		.def("CanBeUsedBy", &AWillowWeapon::CanBeUsedBy)
		.def("CreateWeaponFromMemento", &AWillowWeapon::CreateWeaponFromMemento, py::return_value_policy::reference)
		.def("GetMemento", &AWillowWeapon::GetMemento, py::return_value_policy::reference)
		.def("GetModelName", &AWillowWeapon::GetModelName, py::return_value_policy::reference)
		.def("GetSocketLocationOnOwnerOrWeapon", &AWillowWeapon::GetSocketLocationOnOwnerOrWeapon)
		.def("Behavior_Fire", &AWillowWeapon::Behavior_Fire)
		.def("GetDroppedImpactDefinition", &AWillowWeapon::GetDroppedImpactDefinition, py::return_value_policy::reference)
		.def("FinishedWeaponAction", &AWillowWeapon::FinishedWeaponAction)
		.def("Behavior_ChangeVisibility", &AWillowWeapon::Behavior_ChangeVisibility)
		.def("Behavior_ToggleVisibility", &AWillowWeapon::Behavior_ToggleVisibility)
		.def("eventGetInstanceData", &AWillowWeapon::eventGetInstanceData)
		.def("GetReplicatedInstanceDataState", &AWillowWeapon::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &AWillowWeapon::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &AWillowWeapon::DestroyOwnedInstanceData)
		.def("eventRemoveInstanceDataObject", &AWillowWeapon::eventRemoveInstanceDataObject)
		.def("eventRemoveInstanceData", &AWillowWeapon::eventRemoveInstanceData)
		.def("SetInstanceData", &AWillowWeapon::SetInstanceData)
		.def("SpawnTracerAtLocation", &AWillowWeapon::SpawnTracerAtLocation)
		.def("eventSpawnTracer", &AWillowWeapon::eventSpawnTracer)
		.def("GetTracerStartLocation", &AWillowWeapon::GetTracerStartLocation, py::return_value_policy::reference)
		.def("CanCompareUIStat", &AWillowWeapon::CanCompareUIStat)
		.def("CompareUIStat", &AWillowWeapon::CompareUIStat)
		.def("GetAIRangeValue", &AWillowWeapon::GetAIRangeValue)
		.def("GetAIBurstLength", &AWillowWeapon::GetAIBurstLength)
		.def("GetAIFireDelay", &AWillowWeapon::GetAIFireDelay)
		.def("GetBarrelRotationsPerSecondAtFullFireRate", &AWillowWeapon::GetBarrelRotationsPerSecondAtFullFireRate)
		.def("GetBarrelSpinMode", &AWillowWeapon::GetBarrelSpinMode)
		.def("GetFireSpeed", &AWillowWeapon::GetFireSpeed)
		.def("NotifyWeaponBoneControlStoppedFiring", &AWillowWeapon::NotifyWeaponBoneControlStoppedFiring)
		.def("NotifyWeaponBoneControlFiredShot", &AWillowWeapon::NotifyWeaponBoneControlFiredShot)
		.def("NotifyWeaponBoneControl", &AWillowWeapon::NotifyWeaponBoneControl)
		.def("StopAnimation", &AWillowWeapon::StopAnimation)
		.def("PlayAnimation", &AWillowWeapon::PlayAnimation)
		.def("StopFirstPersonBodyAnimation", &AWillowWeapon::StopFirstPersonBodyAnimation)
		.def("GetTemplateString", &AWillowWeapon::GetTemplateString, py::return_value_policy::reference)
		.def("ChangeParticleAttachmentVisibilityInternal", &AWillowWeapon::ChangeParticleAttachmentVisibilityInternal)
		.def("ChangeParticleAttachmentVisibility", &AWillowWeapon::ChangeParticleAttachmentVisibility)
		.def("ChangeAltMuzzleFlashesVisibility", &AWillowWeapon::ChangeAltMuzzleFlashesVisibility)
		.def("ChangeThirdPersonVisibility", &AWillowWeapon::ChangeThirdPersonVisibility)
		.def("ToggleThirdPersonVisibility", &AWillowWeapon::ToggleThirdPersonVisibility)
		.def("ChangeFirstPersonVisibility", &AWillowWeapon::ChangeFirstPersonVisibility)
		.def("ToggleFirstPersonVisibility", &AWillowWeapon::ToggleFirstPersonVisibility)
		.def("ChangeVisibility", &AWillowWeapon::ChangeVisibility)
		.def("GetDamageRadius", &AWillowWeapon::GetDamageRadius)
		.def("RefireDelayAfterBusy", &AWillowWeapon::RefireDelayAfterBusy)
		.def("OwnerEnteredVehicle", &AWillowWeapon::OwnerEnteredVehicle)
		.def("eventDestroyed", &AWillowWeapon::eventDestroyed)
		.def("BeginReload", &AWillowWeapon::BeginReload)
		.def("BeginManualReload", &AWillowWeapon::BeginManualReload)
		.def("ServerStartReload", &AWillowWeapon::ServerStartReload)
		.def("StartReload", &AWillowWeapon::StartReload)
		.def("TimeWeaponReload", &AWillowWeapon::TimeWeaponReload)
		.def("StopReloadAnim", &AWillowWeapon::StopReloadAnim)
		.def("PlayReloadAnim", &AWillowWeapon::PlayReloadAnim)
		.def("GetReplicatedReloadState", &AWillowWeapon::GetReplicatedReloadState)
		.def("SetReplicatedReloadState", &AWillowWeapon::SetReplicatedReloadState)
		.def("SelectAnimationData", &AWillowWeapon::SelectAnimationData)
		.def("AmmoReloaded", &AWillowWeapon::AmmoReloaded)
		.def("ReloadDone", &AWillowWeapon::ReloadDone)
		.def("StopWeaponAnimation", &AWillowWeapon::StopWeaponAnimation)
		.def("GetWeaponAnimNodeSlot", &AWillowWeapon::GetWeaponAnimNodeSlot, py::return_value_policy::reference)
		.def("GetWillowAnimNodeSlot", &AWillowWeapon::GetWillowAnimNodeSlot, py::return_value_policy::reference)
		.def("StopReloading", &AWillowWeapon::StopReloading)
		.def("NeedToReload", &AWillowWeapon::NeedToReload)
		.def("DisassociateAmmoPool", &AWillowWeapon::DisassociateAmmoPool)
		.def("ItemRemovedFromInvManager", &AWillowWeapon::ItemRemovedFromInvManager)
		.def("ClientSoldTo", &AWillowWeapon::ClientSoldTo)
		.def("LoadedWeapon", &AWillowWeapon::LoadedWeapon)
		.def("AssociateAmmoPool", &AWillowWeapon::AssociateAmmoPool)
		.def("UpdateStatsOnWeaponPickup", &AWillowWeapon::UpdateStatsOnWeaponPickup)
		.def("AnnouncePickup", &AWillowWeapon::AnnouncePickup)
		.def("GivenTo", &AWillowWeapon::GivenTo)
		.def("RemoveFromShop", &AWillowWeapon::RemoveFromShop)
		.def("eventRefireCheckTimer", &AWillowWeapon::eventRefireCheckTimer)
		.def("GetZoomSocketBone", &AWillowWeapon::GetZoomSocketBone)
		.def("GetZoomSocket", &AWillowWeapon::GetZoomSocket)
		.def("GetIronsightsSocket", &AWillowWeapon::GetIronsightsSocket, py::return_value_policy::reference)
		.def("GetEffectLocation", &AWillowWeapon::GetEffectLocation, py::return_value_policy::reference)
		.def("GetPhysicalFireStartLoc", &AWillowWeapon::GetPhysicalFireStartLoc, py::return_value_policy::reference)
		.def("UninitializeAfterPutDown", &AWillowWeapon::UninitializeAfterPutDown)
		.def("UpdateLastReloadCnt", &AWillowWeapon::UpdateLastReloadCnt)
		.def("TryPutDownEx", &AWillowWeapon::TryPutDownEx)
		.def("TryPutDown", &AWillowWeapon::TryPutDown)
		.def("Unreadied", &AWillowWeapon::Unreadied)
		.def("GetResourcePoolContext", &AWillowWeapon::GetResourcePoolContext, py::return_value_policy::reference)
		.def("ClientSetReloadCounts", &AWillowWeapon::ClientSetReloadCounts)
		.def("InitializeWeaponAfterBringUp", &AWillowWeapon::InitializeWeaponAfterBringUp)
		.def("InitializeAmmoAfterBringUp", &AWillowWeapon::InitializeAmmoAfterBringUp)
		.def("BurstDelayComplete", &AWillowWeapon::BurstDelayComplete)
		.def("ShouldRefire", &AWillowWeapon::ShouldRefire)
		.def("TickMagazineSpinUp", &AWillowWeapon::TickMagazineSpinUp)
		.def("TickBarrelSpinUp", &AWillowWeapon::TickBarrelSpinUp)
		.def("GetBurstInterval", &AWillowWeapon::GetBurstInterval)
		.def("GetFireInterval", &AWillowWeapon::GetFireInterval)
		.def("RefillClip", &AWillowWeapon::RefillClip)
		.def("GetAdjustedAim", &AWillowWeapon::GetAdjustedAim, py::return_value_policy::reference)
		.def("AddSpread", &AWillowWeapon::AddSpread, py::return_value_policy::reference)
		.def("eventAddRegeneratedAmmo", &AWillowWeapon::eventAddRegeneratedAmmo)
		.def("ExtraFireAmmunition", &AWillowWeapon::ExtraFireAmmunition)
		.def("SharedFireAmmunition", &AWillowWeapon::SharedFireAmmunition)
		.def("FireAmmunition", &AWillowWeapon::FireAmmunition)
		.def("AddAccuracyImpulse", &AWillowWeapon::AddAccuracyImpulse)
		.def("ClientVehicleTransitionWeaponSet", &AWillowWeapon::ClientVehicleTransitionWeaponSet)
		.def("VehicleTransitionWeaponSet", &AWillowWeapon::VehicleTransitionWeaponSet)
		.def("ClientWeaponSetWaitForAmmoPool", &AWillowWeapon::ClientWeaponSetWaitForAmmoPool)
		.def("ClientWeaponSet", &AWillowWeapon::ClientWeaponSet)
		.def("ForceWeaponToBeEquipped", &AWillowWeapon::ForceWeaponToBeEquipped)
		.def("SendToFiringState", &AWillowWeapon::SendToFiringState)
		.def("CanPerformAction", &AWillowWeapon::CanPerformAction)
		.def("CheckZoomState", &AWillowWeapon::CheckZoomState)
		.def("ForceUnzoom", &AWillowWeapon::ForceUnzoom)
		.def("ClientStartZoom", &AWillowWeapon::ClientStartZoom)
		.def("StopZoom", &AWillowWeapon::StopZoom)
		.def("StartZoom", &AWillowWeapon::StartZoom)
		.def("GetZoomTime", &AWillowWeapon::GetZoomTime)
		.def("ClientStopZoom", &AWillowWeapon::ClientStopZoom)
		.def("SetZoomStartTime", &AWillowWeapon::SetZoomStartTime)
		.def("AdjustZoomBasisTime", &AWillowWeapon::AdjustZoomBasisTime)
		.def("GetZoomBasisTime", &AWillowWeapon::GetZoomBasisTime)
		.def("EndFire", &AWillowWeapon::EndFire)
		.def("ClientEndFire", &AWillowWeapon::ClientEndFire)
		.def("BeginFire", &AWillowWeapon::BeginFire)
		.def("ServerSetZoomState", &AWillowWeapon::ServerSetZoomState)
		.def("eventDisplayScope", &AWillowWeapon::eventDisplayScope)
		.def("eventIsScoped", &AWillowWeapon::eventIsScoped)
		.def("AdjustMuzzleFlashForZoomState", &AWillowWeapon::AdjustMuzzleFlashForZoomState)
		.def("eventSetZoomState", &AWillowWeapon::eventSetZoomState)
		.def("SetViewDistanceScaleWeaponZoomFactor", &AWillowWeapon::SetViewDistanceScaleWeaponZoomFactor)
		.def("TickZoom", &AWillowWeapon::TickZoom)
		.def("AdjustFOVAngle", &AWillowWeapon::AdjustFOVAngle)
		.def("IsZoomedIn", &AWillowWeapon::IsZoomedIn)
		.def("bZoomed", &AWillowWeapon::bZoomed)
		.def("RemoveAllZoomWeaponAttributeEffects", &AWillowWeapon::RemoveAllZoomWeaponAttributeEffects)
		.def("RemoveAllZoomExternalAttributeEffects", &AWillowWeapon::RemoveAllZoomExternalAttributeEffects)
		.def("eventApplyAllZoomWeaponAttributeEffects", &AWillowWeapon::eventApplyAllZoomWeaponAttributeEffects)
		.def("eventApplyAllZoomExternalAttributeEffects", &AWillowWeapon::eventApplyAllZoomExternalAttributeEffects)
		.def("UpdateFiredStats", &AWillowWeapon::UpdateFiredStats)
		.def("GetDamageSurfaceTypeFromImpact", &AWillowWeapon::GetDamageSurfaceTypeFromImpact)
		.def("CustomFire", &AWillowWeapon::CustomFire)
		.def("ExecuteProjectileFiredConstructEvent", &AWillowWeapon::ExecuteProjectileFiredConstructEvent)
		.def("ConditionalSetGearLikenessOnProjectile", &AWillowWeapon::ConditionalSetGearLikenessOnProjectile)
		.def("eventProjectileDefinitionFire", &AWillowWeapon::eventProjectileDefinitionFire, py::return_value_policy::reference)
		.def("eventFiringModeDefinitionFire", &AWillowWeapon::eventFiringModeDefinitionFire)
		.def("InstantFire", &AWillowWeapon::InstantFire)
		.def("ShouldBulletRicochetTowardsEnemy", &AWillowWeapon::ShouldBulletRicochetTowardsEnemy)
		.def("IsOvercharged", &AWillowWeapon::IsOvercharged)
		.def("GetFiringModeDefinition", &AWillowWeapon::GetFiringModeDefinition, py::return_value_policy::reference)
		.def("eventClearSavedFireData", &AWillowWeapon::eventClearSavedFireData)
		.def("SaveFireData", &AWillowWeapon::SaveFireData)
		.def("InstantFireEndTrace", &AWillowWeapon::InstantFireEndTrace, py::return_value_policy::reference)
		.def("InstantFireStartTrace", &AWillowWeapon::InstantFireStartTrace, py::return_value_policy::reference)
		.def("ClientWeaponEmpty", &AWillowWeapon::ClientWeaponEmpty)
		.def("WeaponEmpty", &AWillowWeapon::WeaponEmpty)
		.def("PlayDryFireSound", &AWillowWeapon::PlayDryFireSound)
		.def("DenyPickupQuery", &AWillowWeapon::DenyPickupQuery)
		.def("UpdateVisibleAmmoBones", &AWillowWeapon::UpdateVisibleAmmoBones)
		.def("SetVisibleAmmoState", &AWillowWeapon::SetVisibleAmmoState)
		.def("ShouldAutoReloadWhileFiring", &AWillowWeapon::ShouldAutoReloadWhileFiring)
		.def("HasSpareAmmo", &AWillowWeapon::HasSpareAmmo)
		.def("HasAnyAmmo", &AWillowWeapon::HasAnyAmmo)
		.def("HasActiveAmmo", &AWillowWeapon::HasActiveAmmo)
		.def("eventHasAmmo", &AWillowWeapon::eventHasAmmo)
		.def("AddAmmo", &AWillowWeapon::AddAmmo)
		.def("ConsumeAmmo", &AWillowWeapon::ConsumeAmmo)
		.def("ReadyToFire", &AWillowWeapon::ReadyToFire)
		.def("BestMode", &AWillowWeapon::BestMode)
		.def("ShouldFireWithoutTarget", &AWillowWeapon::ShouldFireWithoutTarget)
		.def("FireOnRelease", &AWillowWeapon::FireOnRelease)
		.def("FireHack", &AWillowWeapon::FireHack)
		.def("CanHeal", &AWillowWeapon::CanHeal)
		.def("GetWeaponRating", &AWillowWeapon::GetWeaponRating)
		.def("GetZoomFOVEffect", &AWillowWeapon::GetZoomFOVEffect)
		.def("GetZoomEffect", &AWillowWeapon::GetZoomEffect)
		.def("GetHand", &AWillowWeapon::GetHand)
		.def("SetHand", &AWillowWeapon::SetHand)
		.def("CanThrow", &AWillowWeapon::CanThrow)
		.def("GetViewAxes", &AWillowWeapon::GetViewAxes)
		.def("DumpAnimSets", &AWillowWeapon::DumpAnimSets)
		.def("DetachWeapon", &AWillowWeapon::DetachWeapon)
		.def("DetachMuzzleFlash", &AWillowWeapon::DetachMuzzleFlash)
		.def("AttachMuzzleFlash", &AWillowWeapon::AttachMuzzleFlash)
		.def("CreateAltMuzzleFlashes", &AWillowWeapon::CreateAltMuzzleFlashes)
		.def("AttachAltMuzzleFlashes", &AWillowWeapon::AttachAltMuzzleFlashes)
		.def("DetachAltMuzzleFlashes", &AWillowWeapon::DetachAltMuzzleFlashes)
		.def("ClearAltMuzzleFlashes", &AWillowWeapon::ClearAltMuzzleFlashes)
		.def("AttachShellCasingComponent", &AWillowWeapon::AttachShellCasingComponent)
		.def("GetShellCasingPSCTemplate", &AWillowWeapon::GetShellCasingPSCTemplate, py::return_value_policy::reference)
		.def("GetOffHandShellCasingRotOffset", &AWillowWeapon::GetOffHandShellCasingRotOffset, py::return_value_policy::reference)
		.def("GetScopedShellCasingOffset", &AWillowWeapon::GetScopedShellCasingOffset, py::return_value_policy::reference)
		.def("GetShellCasingSocket", &AWillowWeapon::GetShellCasingSocket, py::return_value_policy::reference)
		.def("UpdateForegroundFOV", &AWillowWeapon::UpdateForegroundFOV)
		.def("AttachWeaponTo", &AWillowWeapon::AttachWeaponTo)
		.def("PlayWeaponEquip", &AWillowWeapon::PlayWeaponEquip)
		.def("NotifyPawnWeaponChanged", &AWillowWeapon::NotifyPawnWeaponChanged)
		.def("TimeWeaponEquipping", &AWillowWeapon::TimeWeaponEquipping)
		.def("GetEquipTime", &AWillowWeapon::GetEquipTime)
		.def("RaiseFirstPersonWeapon", &AWillowWeapon::RaiseFirstPersonWeapon)
		.def("LowerFirstPersonWeapon", &AWillowWeapon::LowerFirstPersonWeapon)
		.def("StopWeaponPutDownAnim", &AWillowWeapon::StopWeaponPutDownAnim)
		.def("PlayWeaponPutDown", &AWillowWeapon::PlayWeaponPutDown)
		.def("eventTimeWeaponPutDown", &AWillowWeapon::eventTimeWeaponPutDown)
		.def("GetPutDownTime", &AWillowWeapon::GetPutDownTime)
		.def("TryTimeWeaponPutDown", &AWillowWeapon::TryTimeWeaponPutDown)
		.def("eventStopMuzzleFlash", &AWillowWeapon::eventStopMuzzleFlash)
		.def("eventMuzzleFlashTimer", &AWillowWeapon::eventMuzzleFlashTimer)
		.def("PlayStopSpinningUpSound", &AWillowWeapon::PlayStopSpinningUpSound)
		.def("PlayStartSpinningUpSound", &AWillowWeapon::PlayStartSpinningUpSound)
		.def("MagazineSpinStateChanged", &AWillowWeapon::MagazineSpinStateChanged)
		.def("BarrelSpinStateChanged", &AWillowWeapon::BarrelSpinStateChanged)
		.def("PlayStoppedFiringSound", &AWillowWeapon::PlayStoppedFiringSound)
		.def("PlayFiringSound", &AWillowWeapon::PlayFiringSound)
		.def("ShakeView", &AWillowWeapon::ShakeView)
		.def("PlayRezEffect", &AWillowWeapon::PlayRezEffect)
		.def("DeRezEffectFinished", &AWillowWeapon::DeRezEffectFinished)
		.def("PlayDeRezEffect", &AWillowWeapon::PlayDeRezEffect)
		.def("StopFireEffects", &AWillowWeapon::StopFireEffects)
		.def("PlayFireEffects", &AWillowWeapon::PlayFireEffects)
		.def("GetWeaponMuzzleRotation", &AWillowWeapon::GetWeaponMuzzleRotation, py::return_value_policy::reference)
		.def("GetWeaponMuzzleLocation", &AWillowWeapon::GetWeaponMuzzleLocation, py::return_value_policy::reference)
		.def("GenerateHumanReadableNameFromDefinitionParts", &AWillowWeapon::GenerateHumanReadableNameFromDefinitionParts, py::return_value_policy::reference)
		.def("eventGetInventoryCardString", &AWillowWeapon::eventGetInventoryCardString, py::return_value_policy::reference)
		.def("GenerateHumanReadableNameFromDefinition", &AWillowWeapon::GenerateHumanReadableNameFromDefinition, py::return_value_policy::reference)
		.def("GenerateHumanReadableName", &AWillowWeapon::GenerateHumanReadableName, py::return_value_policy::reference)
		.def("eventGetShortHumanReadableName", &AWillowWeapon::eventGetShortHumanReadableName, py::return_value_policy::reference)
		.def("GetHumanReadableName", &AWillowWeapon::GetHumanReadableName, py::return_value_policy::reference)
		.def("GetPresentationDefinition", &AWillowWeapon::GetPresentationDefinition, py::return_value_policy::reference)
		.def("FormatFunStatsText", &AWillowWeapon::FormatFunStatsText, py::return_value_policy::reference)
		.def("GenerateFunStatsText", &AWillowWeapon::GenerateFunStatsText, py::return_value_policy::reference)
		.def("GetInventoryStatTextData", &AWillowWeapon::GetInventoryStatTextData)
		.def("GetInventoryStatNumberData", &AWillowWeapon::GetInventoryStatNumberData)
		.def("CacheWeaponCard", &AWillowWeapon::CacheWeaponCard)
		.def("GetAmmoCount", &AWillowWeapon::GetAmmoCount)
		.def("GetMaxAmmo", &AWillowWeapon::GetMaxAmmo)
		.def("eventDrawZoomDebug", &AWillowWeapon::eventDrawZoomDebug)
		.def("IsCrosshairEnabled", &AWillowWeapon::IsCrosshairEnabled)
		.def("SetCrosshairEnabled", &AWillowWeapon::SetCrosshairEnabled)
		.def("ComputeValueOfParts", &AWillowWeapon::ComputeValueOfParts)
		.def("IsAllPartsDebugEnabled", &AWillowWeapon::IsAllPartsDebugEnabled)
		.def("ToggleAllPartsDebug", &AWillowWeapon::ToggleAllPartsDebug)
		.def("SelectNamePartFromList", &AWillowWeapon::SelectNamePartFromList, py::return_value_policy::reference)
		.def("ChooseRandomNameParts", &AWillowWeapon::ChooseRandomNameParts)
		.def("ChooseRandomParts", &AWillowWeapon::ChooseRandomParts)
		.def("ChoosePartListCollection", &AWillowWeapon::ChoosePartListCollection)
		.def("RemoveAllExternalAttributeEffects", &AWillowWeapon::RemoveAllExternalAttributeEffects)
		.def("ApplyNamePartWeaponAttributeEffects", &AWillowWeapon::ApplyNamePartWeaponAttributeEffects)
		.def("ApplyAllWeaponAttributeEffects", &AWillowWeapon::ApplyAllWeaponAttributeEffects)
		.def("ApplyAllExternalAttributeEffects", &AWillowWeapon::ApplyAllExternalAttributeEffects)
		.def("ApplyAnimThresholdAttributeValues", &AWillowWeapon::ApplyAnimThresholdAttributeValues)
		.def("ClientInitializeFromWeaponTypeDefinition", &AWillowWeapon::ClientInitializeFromWeaponTypeDefinition)
		.def("StaticCalculateWeaponRarityLevel", &AWillowWeapon::StaticCalculateWeaponRarityLevel)
		.def("StaticGetWeaponDamageType", &AWillowWeapon::StaticGetWeaponDamageType, py::return_value_policy::reference)
		.def("StaticIsTechWeapon", &AWillowWeapon::StaticIsTechWeapon)
		.def("GetDamageTypeDefinitionForFiringMode", &AWillowWeapon::GetDamageTypeDefinitionForFiringMode, py::return_value_policy::reference)
		.def("CalculatePartDependentWeaponBaseValues", &AWillowWeapon::CalculatePartDependentWeaponBaseValues)
		.def("CalculateWeaponBaseValues", &AWillowWeapon::CalculateWeaponBaseValues)
		.def("RecomputeAttributeBaseValues", &AWillowWeapon::RecomputeAttributeBaseValues)
		.def("RecomputeNormalizedDamageValues", &AWillowWeapon::RecomputeNormalizedDamageValues)
		.def("StoreExplosionInstanceData", &AWillowWeapon::StoreExplosionInstanceData)
		.def("AdjustWeaponForBeingInBackpack", &AWillowWeapon::AdjustWeaponForBeingInBackpack)
		.def("InitializeInternal", &AWillowWeapon::InitializeInternal)
		.def("eventInitializeFromDefinitionData", &AWillowWeapon::eventInitializeFromDefinitionData)
		.def("eventInitializeInventory", &AWillowWeapon::eventInitializeInventory)
		.def("CheckWeaponAgainstEquippedWeaponsBeingSwapped", &AWillowWeapon::CheckWeaponAgainstEquippedWeaponsBeingSwapped)
		.def("CheckWeaponAgainstBackpackInventoryBeingEquipped", &AWillowWeapon::CheckWeaponAgainstBackpackInventoryBeingEquipped)
		.def("eventReplicatedEvent", &AWillowWeapon::eventReplicatedEvent)
		.def("SetElementalFrame", &AWillowWeapon::SetElementalFrame)
		.def("ChangeAltMuzzleFlashOwnerVisibility", &AWillowWeapon::ChangeAltMuzzleFlashOwnerVisibility)
		.def("ChangeFirstPersonOwnerVisibility", &AWillowWeapon::ChangeFirstPersonOwnerVisibility)
		.def("ChangeThirdPersonOwnerVisibility", &AWillowWeapon::ChangeThirdPersonOwnerVisibility)
		.def("ChangeOwnerVisibility", &AWillowWeapon::ChangeOwnerVisibility)
		.def("eventDetachThirdPersonMesh", &AWillowWeapon::eventDetachThirdPersonMesh)
		.def("StopLoopingSounds", &AWillowWeapon::StopLoopingSounds)
		.def("eventRemoteDetachWeapon", &AWillowWeapon::eventRemoteDetachWeapon)
		.def("eventDetachFirstPersonMesh", &AWillowWeapon::eventDetachFirstPersonMesh)
		.def("AttachThirdPersonMeshToComponent", &AWillowWeapon::AttachThirdPersonMeshToComponent)
		.def("AttachFirstPersonMeshToRemotePlayer", &AWillowWeapon::AttachFirstPersonMeshToRemotePlayer)
		.def("ClonePrimaryMesh", &AWillowWeapon::ClonePrimaryMesh, py::return_value_policy::reference)
		.def("PreRemoveNotify", &AWillowWeapon::PreRemoveNotify)
		.def("PostInitNotify", &AWillowWeapon::PostInitNotify)
		.def("AttachMeshToPickup", &AWillowWeapon::AttachMeshToPickup)
		.def("InitVisibleAmmoBones", &AWillowWeapon::InitVisibleAmmoBones)
		.def("InitEffects", &AWillowWeapon::InitEffects)
		.def("InitPartParticles", &AWillowWeapon::InitPartParticles)
		.def("EnableAnimations", &AWillowWeapon::EnableAnimations)
		.def("InitMeshAnimation", &AWillowWeapon::InitMeshAnimation)
		.def("GetExtraSlotLocation", &AWillowWeapon::GetExtraSlotLocation, py::return_value_policy::reference)
		.def("GetExtraSlotModifier", &AWillowWeapon::GetExtraSlotModifier)
		.def("InitExtraMeshes", &AWillowWeapon::InitExtraMeshes)
		.def("InitMeshAnimations", &AWillowWeapon::InitMeshAnimations)
		.def("InitAltMuzzleFlashes", &AWillowWeapon::InitAltMuzzleFlashes)
		.def("InitMeshes", &AWillowWeapon::InitMeshes)
		.def("HideBonesInMesh", &AWillowWeapon::HideBonesInMesh)
		.def("eventInitConstructPreview", &AWillowWeapon::eventInitConstructPreview, py::return_value_policy::reference)
		.def("BuildWeaponMaterial", &AWillowWeapon::BuildWeaponMaterial, py::return_value_policy::reference)
		.def("BuildCompositeMesh", &AWillowWeapon::BuildCompositeMesh, py::return_value_policy::reference)
		.def("AddWeaponBoneControllers", &AWillowWeapon::AddWeaponBoneControllers)
		.def("CreateClone", &AWillowWeapon::CreateClone, py::return_value_policy::reference)
		.def("GetDroppedPickupRotation", &AWillowWeapon::GetDroppedPickupRotation, py::return_value_policy::reference)
		.def("DropFrom", &AWillowWeapon::DropFrom, py::return_value_policy::reference)
		.def("GetHolsteredGearLikenessType", &AWillowWeapon::GetHolsteredGearLikenessType)
		.def("GetHolsteredWeaponSizeType", &AWillowWeapon::GetHolsteredWeaponSizeType)
		.def("GetEquippedStat", &AWillowWeapon::GetEquippedStat, py::return_value_policy::reference)
		.def("OnAbortReload", &AWillowWeapon::OnAbortReload)
		.def("OnZoomOut", &AWillowWeapon::OnZoomOut)
		.def("OnZoomIn", &AWillowWeapon::OnZoomIn)
		.def("OnUnequip", &AWillowWeapon::OnUnequip)
		.def("OnEquip", &AWillowWeapon::OnEquip)
		.def("OnCreate", &AWillowWeapon::OnCreate)
		.def("GetBehaviorConsumerHandle", &AWillowWeapon::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("DeactivateAttributeSlotSkill", &AWillowWeapon::DeactivateAttributeSlotSkill)
		.def("ActivateAttributeSlotSkill", &AWillowWeapon::ActivateAttributeSlotSkill)
		.def("IsPuttingDown", &AWillowWeapon::IsPuttingDown)
		.def("IsEquipping", &AWillowWeapon::IsEquipping)
		.def("IsZoomSocketsDebugEnabled", &AWillowWeapon::IsZoomSocketsDebugEnabled)
		.def("ToggleZoomSocketsDebug", &AWillowWeapon::ToggleZoomSocketsDebug)
		.def("IsZoomDebugEnabled", &AWillowWeapon::IsZoomDebugEnabled)
		.def("ToggleZoomDebug", &AWillowWeapon::ToggleZoomDebug)
		.def("PlayFirstPersonBodyAnimation", [](AWillowWeapon &self , unsigned char ActionType, float PlayRateScale, float Duration) { class USpecialMoveDefinition** pyPlayedSMD = 0 ;  float ret =  self.PlayFirstPersonBodyAnimation(ActionType, PlayRateScale, Duration, pyPlayedSMD); return py::make_tuple(ret, *pyPlayedSMD); })
		.def("SelectAnimation", [](AWillowWeapon &self , TArray< struct FConditionalAnimationData >* Animations) { class UAnimSet** pyReqAnimSet = 0 ;  struct FName ret =  self.SelectAnimation(Animations, pyReqAnimSet); return py::make_tuple(ret, *pyReqAnimSet); })
		.def("ProcessInstantHitBullet", [](AWillowWeapon &self , unsigned char FiringMode, struct FImpactInfo Impact, float BulletDamage, class UFiringModeDefinition* FiringModeDefinition, class APawn* InstigatorOverride, unsigned long bOvercharged) { class UWillowDamagePipeline** pyPipelineObject = 0 ;   self.ProcessInstantHitBullet(FiringMode, Impact, BulletDamage, FiringModeDefinition, InstigatorOverride, bOvercharged, pyPipelineObject); return py::make_tuple(*pyPipelineObject); })
		.def("eventCauseMuzzleFlash", [](AWillowWeapon &self , class USkeletalMeshComponent* WeaponMesh, class UParticleSystemComponent* MuzzleFlash) { class UWillowPointLight** pyFlashLight = 0 ;   self.eventCauseMuzzleFlash(WeaponMesh, MuzzleFlash, pyFlashLight); return py::make_tuple(*pyFlashLight); })
		.def("eventCloneAppearance", [](AWillowWeapon &self , class AActor* CloneOwner, class USkeletalMeshComponent* ClonedPrimaryMeshComponent, TArray< class UPrimitiveComponent* >* ClonedComponentsAttachedToPrimaryMesh) { class UMaterialInstance** pyClonedMeshMaterial = 0 ;   self.eventCloneAppearance(CloneOwner, ClonedPrimaryMeshComponent, ClonedComponentsAttachedToPrimaryMesh, pyClonedMeshMaterial); return py::make_tuple(*pyClonedMeshMaterial); })
		.def("AllParts", [](AWillowWeapon &self , unsigned long bIncludeNameParts, struct FWeaponDefinitionData* DefData) { class UWeaponPartDefinition** pyPart = 0 ;   self.AllParts(bIncludeNameParts, DefData, pyPart); return py::make_tuple(*pyPart); })
		;
	py::class_< AWillowBuzzaxeWeapon, AWillowWeapon >(m, "AWillowBuzzaxeWeapon")
		.def_readwrite("VfTable_IIWeaponThrow", &AWillowBuzzaxeWeapon::VfTable_IIWeaponThrow, py::return_value_policy::reference)
		.def_readwrite("BodyWeaponHoldNameOverride", &AWillowBuzzaxeWeapon::BodyWeaponHoldNameOverride, py::return_value_policy::reference)
		.def_readwrite("PreviousActiveWeaponSlot", &AWillowBuzzaxeWeapon::PreviousActiveWeaponSlot)
		.def("EquipPreviousWeapon", &AWillowBuzzaxeWeapon::EquipPreviousWeapon)
		.def("BuzzaxeIsDown", &AWillowBuzzaxeWeapon::BuzzaxeIsDown)
		.def("eventGetCanHolster", &AWillowBuzzaxeWeapon::eventGetCanHolster)
		.def("eventDestroyed", &AWillowBuzzaxeWeapon::eventDestroyed)
		.def("GetBodyWeaponHoldName", &AWillowBuzzaxeWeapon::GetBodyWeaponHoldName, py::return_value_policy::reference)
		.def("Behavior_WeaponThrow", &AWillowBuzzaxeWeapon::Behavior_WeaponThrow)
		.def("eventProjectileDefinitionFire", &AWillowBuzzaxeWeapon::eventProjectileDefinitionFire, py::return_value_policy::reference)
		.def("ConditionalSetGearLikenessOnProjectile", &AWillowBuzzaxeWeapon::ConditionalSetGearLikenessOnProjectile)
		.def("DetachWeapon", &AWillowBuzzaxeWeapon::DetachWeapon)
		.def("StartFire", &AWillowBuzzaxeWeapon::StartFire)
		.def("Activate", &AWillowBuzzaxeWeapon::Activate)
		.def("HasSpareAmmo", &AWillowBuzzaxeWeapon::HasSpareAmmo)
		.def("eventReplicatedEvent", &AWillowBuzzaxeWeapon::eventReplicatedEvent)
		.def("InitVisibleAmmoBones", &AWillowBuzzaxeWeapon::InitVisibleAmmoBones)
		.def("AssociateAmmoPool", &AWillowBuzzaxeWeapon::AssociateAmmoPool)
		.def("DetachMuzzleFlash", &AWillowBuzzaxeWeapon::DetachMuzzleFlash)
		.def("AttachMuzzleFlash", &AWillowBuzzaxeWeapon::AttachMuzzleFlash)
		.def("IsCrosshairEnabled", &AWillowBuzzaxeWeapon::IsCrosshairEnabled)
		.def("GetZoomFOVEffect", &AWillowBuzzaxeWeapon::GetZoomFOVEffect)
		.def("GetZoomSocket", &AWillowBuzzaxeWeapon::GetZoomSocket)
		;
	py::class_< AWillowTurretWeapon, AWillowWeapon >(m, "AWillowTurretWeapon")
		.def_readwrite("FireTriggerTags", &AWillowTurretWeapon::FireTriggerTags, py::return_value_policy::reference)
		.def_readwrite("AltFireTriggerTags", &AWillowTurretWeapon::AltFireTriggerTags, py::return_value_policy::reference)
		.def_readwrite("AimTraceRange", &AWillowTurretWeapon::AimTraceRange)
		.def_readwrite("TurretWeaponSocketName", &AWillowTurretWeapon::TurretWeaponSocketName, py::return_value_policy::reference)
		.def("HasSpareAmmo", &AWillowTurretWeapon::HasSpareAmmo)
		.def("DetachMuzzleFlash", &AWillowTurretWeapon::DetachMuzzleFlash)
		.def("AttachMuzzleFlash", &AWillowTurretWeapon::AttachMuzzleFlash)
		.def("Behavior_ChangeVisibility", &AWillowTurretWeapon::Behavior_ChangeVisibility)
		.def("Behavior_ToggleVisibility", &AWillowTurretWeapon::Behavior_ToggleVisibility)
		.def("ChangeVisibility", &AWillowTurretWeapon::ChangeVisibility)
		.def("PlayAnimation", &AWillowTurretWeapon::PlayAnimation)
		.def("InstantFireStartTrace", &AWillowTurretWeapon::InstantFireStartTrace, py::return_value_policy::reference)
		.def("GetPhysicalFireStartLoc", &AWillowTurretWeapon::GetPhysicalFireStartLoc, py::return_value_policy::reference)
		.def("AttachThirdPersonMeshToComponent", &AWillowTurretWeapon::AttachThirdPersonMeshToComponent)
		.def("DetachFirstPersonMesh", &AWillowTurretWeapon::DetachFirstPersonMesh)
		.def("eventDetachThirdPersonMesh", &AWillowTurretWeapon::eventDetachThirdPersonMesh)
		.def("InitMeshes", &AWillowTurretWeapon::InitMeshes)
		.def("PostBeginPlay", &AWillowTurretWeapon::PostBeginPlay)
		.def("PlayFirstPersonBodyAnimation", [](AWillowTurretWeapon &self , unsigned char ActionType, float PlayRateScale, float Duration) { class USpecialMoveDefinition** pyPlayedSMD = 0 ;  float ret =  self.PlayFirstPersonBodyAnimation(ActionType, PlayRateScale, Duration, pyPlayedSMD); return py::make_tuple(ret, *pyPlayedSMD); })
		;
	py::class_< AWillowVehicleWeapon, AWillowWeapon >(m, "AWillowVehicleWeapon")
		.def_property("bWeaponOperated", [](AWillowVehicleWeapon &self){return self.bWeaponOperated;}, [](AWillowVehicleWeapon &self, bool value){self.bWeaponOperated = value ? 1 : 0;})
		.def_readwrite("SeatIndex", &AWillowVehicleWeapon::SeatIndex)
		.def_readwrite("MyVehicle", &AWillowVehicleWeapon::MyVehicle, py::return_value_policy::reference)
		.def_readwrite("FireTriggerTags", &AWillowVehicleWeapon::FireTriggerTags, py::return_value_policy::reference)
		.def_readwrite("AltFireTriggerTags", &AWillowVehicleWeapon::AltFireTriggerTags, py::return_value_policy::reference)
		.def_readwrite("GoodAimColor", &AWillowVehicleWeapon::GoodAimColor, py::return_value_policy::reference)
		.def_readwrite("BadAimColor", &AWillowVehicleWeapon::BadAimColor, py::return_value_policy::reference)
		.def_readwrite("AimTraceRange", &AWillowVehicleWeapon::AimTraceRange)
		.def_readwrite("CrosshairOwner", &AWillowVehicleWeapon::CrosshairOwner, py::return_value_policy::reference)
		.def("ClearFlashLocation", &AWillowVehicleWeapon::ClearFlashLocation)
		.def("ClearFlashCount", &AWillowVehicleWeapon::ClearFlashCount)
		.def("GetBurstInterval", &AWillowVehicleWeapon::GetBurstInterval)
		.def("GetFireInterval", &AWillowVehicleWeapon::GetFireInterval)
		.def("WeaponPlayAkEvent", &AWillowVehicleWeapon::WeaponPlayAkEvent)
		.def("CanBeUsedBy", &AWillowVehicleWeapon::CanBeUsedBy)
		.def("ServerOnAltFireTriggered", &AWillowVehicleWeapon::ServerOnAltFireTriggered)
		.def("RouteCallToServerForAltFireTrigger", &AWillowVehicleWeapon::RouteCallToServerForAltFireTrigger)
		.def("StartZoom", &AWillowVehicleWeapon::StartZoom)
		.def("PlayAnimation", &AWillowVehicleWeapon::PlayAnimation)
		.def("ExecuteProjectileFiredConstructEvent", &AWillowVehicleWeapon::ExecuteProjectileFiredConstructEvent)
		.def("eventProjectileDefinitionFire", &AWillowVehicleWeapon::eventProjectileDefinitionFire, py::return_value_policy::reference)
		.def("ProjectileFire", &AWillowVehicleWeapon::ProjectileFire, py::return_value_policy::reference)
		.def("AdjustFiredProjectileVelocity", &AWillowVehicleWeapon::AdjustFiredProjectileVelocity)
		.def("ClientStopZoom", &AWillowVehicleWeapon::ClientStopZoom)
		.def("InstantFireEndTrace", &AWillowVehicleWeapon::InstantFireEndTrace, py::return_value_policy::reference)
		.def("GetTracerStartLocation", &AWillowVehicleWeapon::GetTracerStartLocation, py::return_value_policy::reference)
		.def("InstantFireStartTrace", &AWillowVehicleWeapon::InstantFireStartTrace, py::return_value_policy::reference)
		.def("IsCrosshairEnabled", &AWillowVehicleWeapon::IsCrosshairEnabled)
		.def("GetAdjustedAim", &AWillowVehicleWeapon::GetAdjustedAim, py::return_value_policy::reference)
		.def("AddAccuracyImpulse", &AWillowVehicleWeapon::AddAccuracyImpulse)
		.def("eventNotifyTargetLockSuccessful", &AWillowVehicleWeapon::eventNotifyTargetLockSuccessful)
		.def("EndFire", &AWillowVehicleWeapon::EndFire)
		.def("BeginFire", &AWillowVehicleWeapon::BeginFire)
		.def("GetPhysicalFireStartLoc", &AWillowVehicleWeapon::GetPhysicalFireStartLoc, py::return_value_policy::reference)
		.def("NotifyWeaponNotBeingOperated", &AWillowVehicleWeapon::NotifyWeaponNotBeingOperated)
		.def("NotifyWeaponBeingOperated", &AWillowVehicleWeapon::NotifyWeaponBeingOperated)
		.def("PutDownWeapon", &AWillowVehicleWeapon::PutDownWeapon)
		.def("Activate", &AWillowVehicleWeapon::Activate)
		.def("DetachWeapon", &AWillowVehicleWeapon::DetachWeapon)
		.def("AttachWeaponTo", &AWillowVehicleWeapon::AttachWeaponTo)
		.def("GetHand", &AWillowVehicleWeapon::GetHand)
		.def("SetHand", &AWillowVehicleWeapon::SetHand)
		.def("GetFireTriggerTag", &AWillowVehicleWeapon::GetFireTriggerTag, py::return_value_policy::reference)
		.def("IsAimCorrect", &AWillowVehicleWeapon::IsAimCorrect)
		.def("GetDesiredAimPoint", &AWillowVehicleWeapon::GetDesiredAimPoint, py::return_value_policy::reference)
		.def("ClientWeaponSetWaitForAmmoPool", &AWillowVehicleWeapon::ClientWeaponSetWaitForAmmoPool)
		.def("GetResourcePoolContext", &AWillowVehicleWeapon::GetResourcePoolContext, py::return_value_policy::reference)
		.def("AssociateAmmoPool", &AWillowVehicleWeapon::AssociateAmmoPool)
		.def("AddAmmo", &AWillowVehicleWeapon::AddAmmo)
		.def("InitializeWeaponAfterBringUp", &AWillowVehicleWeapon::InitializeWeaponAfterBringUp)
		.def("HasSpareAmmo", &AWillowVehicleWeapon::HasSpareAmmo)
		.def("eventGetAmmoCount", &AWillowVehicleWeapon::eventGetAmmoCount)
		.def("PostBeginPlay", &AWillowVehicleWeapon::PostBeginPlay)
		.def("RefreshCrosshairForPlayer", &AWillowVehicleWeapon::RefreshCrosshairForPlayer)
		.def("eventReplicatedEvent", &AWillowVehicleWeapon::eventReplicatedEvent)
		.def("PlayFirstPersonBodyAnimation", [](AWillowVehicleWeapon &self , unsigned char ActionType, float PlayRateScale, float Duration) { class USpecialMoveDefinition** pyPlayedSMD = 0 ;  float ret =  self.PlayFirstPersonBodyAnimation(ActionType, PlayRateScale, Duration, pyPlayedSMD); return py::make_tuple(ret, *pyPlayedSMD); })
		;
	py::class_< UWillowWeaponTypes, UInterface >(m, "UWillowWeaponTypes")
		;
	py::class_< AWillowWorldSoundManager, AWorldSoundManager >(m, "AWillowWorldSoundManager")
		.def_property("bInCombatMusicVolumeTransition", [](AWillowWorldSoundManager &self){return self.bInCombatMusicVolumeTransition;}, [](AWillowWorldSoundManager &self, bool value){self.bInCombatMusicVolumeTransition = value ? 1 : 0;})
		.def_readwrite("MusicComponent", &AWillowWorldSoundManager::MusicComponent, py::return_value_policy::reference)
		.def_readwrite("CurrentMusicStartAkEvent", &AWillowWorldSoundManager::CurrentMusicStartAkEvent, py::return_value_policy::reference)
		.def_readwrite("CurrentMusicStopAkEvent", &AWillowWorldSoundManager::CurrentMusicStopAkEvent, py::return_value_policy::reference)
		.def_readwrite("CurrentAmbientAkState", &AWillowWorldSoundManager::CurrentAmbientAkState, py::return_value_policy::reference)
		.def_readwrite("CurrentCombatAkState", &AWillowWorldSoundManager::CurrentCombatAkState, py::return_value_policy::reference)
		.def_readwrite("CurrentBossAkState", &AWillowWorldSoundManager::CurrentBossAkState, py::return_value_policy::reference)
		.def_readwrite("CurrentMusicState", &AWillowWorldSoundManager::CurrentMusicState)
		.def_readwrite("CurrentCustomCombatMusicAkState", &AWillowWorldSoundManager::CurrentCustomCombatMusicAkState, py::return_value_policy::reference)
		.def_readwrite("CurrentCustomAmbientMusicAkState", &AWillowWorldSoundManager::CurrentCustomAmbientMusicAkState, py::return_value_policy::reference)
		.def_readwrite("CombatMusicTransitionValue", &AWillowWorldSoundManager::CombatMusicTransitionValue)
		.def_readwrite("CombatMusicTransitionStartValue", &AWillowWorldSoundManager::CombatMusicTransitionStartValue)
		.def_readwrite("CombatMusicTransitionTargetValue", &AWillowWorldSoundManager::CombatMusicTransitionTargetValue)
		.def_readwrite("CombatMusicTransitionStartTime", &AWillowWorldSoundManager::CombatMusicTransitionStartTime)
		.def_readwrite("CombatMusicTransitionEndTime", &AWillowWorldSoundManager::CombatMusicTransitionEndTime)
		.def_readwrite("LastTransitionDuration", &AWillowWorldSoundManager::LastTransitionDuration)
		.def_readwrite("CombatMusicRtpc", &AWillowWorldSoundManager::CombatMusicRtpc, py::return_value_policy::reference)
		.def("IsLevelMusicPlaying", &AWillowWorldSoundManager::IsLevelMusicPlaying)
		.def("StaticSetCustomAmbientMusicAkState", &AWillowWorldSoundManager::StaticSetCustomAmbientMusicAkState)
		.def("StaticSetBossAkState", &AWillowWorldSoundManager::StaticSetBossAkState)
		.def("StaticConfigureLevelMusic", &AWillowWorldSoundManager::StaticConfigureLevelMusic)
		;
	py::class_< UWorldBody, UObject >(m, "UWorldBody")
		.def_readwrite("VfTable_IIWorldBody", &UWorldBody::VfTable_IIWorldBody, py::return_value_policy::reference)
		.def_readwrite("Instigator", &UWorldBody::Instigator, py::return_value_policy::reference)
		.def_readwrite("Location", &UWorldBody::Location, py::return_value_policy::reference)
		.def_readwrite("Rotation", &UWorldBody::Rotation, py::return_value_policy::reference)
		.def_readwrite("Velocity", &UWorldBody::Velocity, py::return_value_policy::reference)
		.def_readwrite("WorldBodyAttachmentProxy", &UWorldBody::WorldBodyAttachmentProxy, py::return_value_policy::reference)
		.def_readwrite("AttachmentProxyImpactInfo", &UWorldBody::AttachmentProxyImpactInfo, py::return_value_policy::reference)
		.def_readwrite("AdditionalQueryInterfaceSource", &UWorldBody::AdditionalQueryInterfaceSource, py::return_value_policy::reference)
		.def("Behavior_CauseRadiusDamage", &UWorldBody::Behavior_CauseRadiusDamage)
		.def("Behavior_CauseDamage", &UWorldBody::Behavior_CauseDamage)
		.def("ShutDown", &UWorldBody::ShutDown)
		.def("InitializeFromImpact", &UWorldBody::InitializeFromImpact)
		.def("Initialize", &UWorldBody::Initialize)
		.def("WorldBodyAttachComponent", &UWorldBody::WorldBodyAttachComponent)
		.def("WorldBodyAttachActor", &UWorldBody::WorldBodyAttachActor)
		.def("WorldBodyAttachTo", &UWorldBody::WorldBodyAttachTo)
		.def("GetWorldBodyAttachmentBase", &UWorldBody::GetWorldBodyAttachmentBase, py::return_value_policy::reference)
		.def("GetWorldBodyAttachmentBoneForComponent", &UWorldBody::GetWorldBodyAttachmentBoneForComponent, py::return_value_policy::reference)
		.def("GetWorldBodyAttachmentLocationAndRotation", &UWorldBody::GetWorldBodyAttachmentLocationAndRotation)
		.def("GetWorldBodyAttachmentRotation", &UWorldBody::GetWorldBodyAttachmentRotation)
		.def("GetWorldBodyAttachmentLocation", &UWorldBody::GetWorldBodyAttachmentLocation)
		.def("GetWorldBodyVelocity", &UWorldBody::GetWorldBodyVelocity, py::return_value_policy::reference)
		.def("GetWorldBodyRotation", &UWorldBody::GetWorldBodyRotation, py::return_value_policy::reference)
		.def("GetWorldBodyLocation", &UWorldBody::GetWorldBodyLocation, py::return_value_policy::reference)
		;
	py::class_< AWorldDiscoveryArea, AActor >(m, "AWorldDiscoveryArea")
		.def_property("bForFogOfWarOnly", [](AWorldDiscoveryArea &self){return self.bForFogOfWarOnly;}, [](AWorldDiscoveryArea &self, bool value){self.bForFogOfWarOnly = value ? 1 : 0;})
		.def_property("bUseCustomName", [](AWorldDiscoveryArea &self){return self.bUseCustomName;}, [](AWorldDiscoveryArea &self, bool value){self.bUseCustomName = value ? 1 : 0;})
		.def_property("bWorldAreaVolume", [](AWorldDiscoveryArea &self){return self.bWorldAreaVolume;}, [](AWorldDiscoveryArea &self, bool value){self.bWorldAreaVolume = value ? 1 : 0;})
		.def_property("bWorldAreaRadius", [](AWorldDiscoveryArea &self){return self.bWorldAreaRadius;}, [](AWorldDiscoveryArea &self, bool value){self.bWorldAreaRadius = value ? 1 : 0;})
		.def_readwrite("VfTable_IIBalancedActor", &AWorldDiscoveryArea::VfTable_IIBalancedActor, py::return_value_policy::reference)
		.def_readwrite("DefaultWorldAreaShortName", &AWorldDiscoveryArea::DefaultWorldAreaShortName, py::return_value_policy::reference)
		.def_readwrite("CustomName", &AWorldDiscoveryArea::CustomName, py::return_value_policy::reference)
		.def_readwrite("DetectionVolumes", &AWorldDiscoveryArea::DetectionVolumes, py::return_value_policy::reference)
		.def_readwrite("DetectionRadius", &AWorldDiscoveryArea::DetectionRadius)
		.def_readwrite("DetectionHeight", &AWorldDiscoveryArea::DetectionHeight)
		.def_readwrite("WorldAreaDisplayName", &AWorldDiscoveryArea::WorldAreaDisplayName, py::return_value_policy::reference)
		.def_readwrite("DiscoveryAkEvent", &AWorldDiscoveryArea::DiscoveryAkEvent, py::return_value_policy::reference)
		.def_readwrite("BalanceToRegionDef", &AWorldDiscoveryArea::BalanceToRegionDef, py::return_value_policy::reference)
		.def_readwrite("ExperienceRewardMultiplier", &AWorldDiscoveryArea::ExperienceRewardMultiplier, py::return_value_policy::reference)
		.def_readwrite("GameStage", &AWorldDiscoveryArea::GameStage)
		.def_readwrite("PlayersDetected", &AWorldDiscoveryArea::PlayersDetected, py::return_value_policy::reference)
		.def_readwrite("NextDetectionTime", &AWorldDiscoveryArea::NextDetectionTime)
		.def("GetBalancedActorTypeIdentifier", &AWorldDiscoveryArea::GetBalancedActorTypeIdentifier, py::return_value_policy::reference)
		.def("SetExpLevel", &AWorldDiscoveryArea::SetExpLevel)
		.def("SetAwesomeLevel", &AWorldDiscoveryArea::SetAwesomeLevel)
		.def("SetGameStage", &AWorldDiscoveryArea::SetGameStage)
		.def("GetExpLevelForEquip", &AWorldDiscoveryArea::GetExpLevelForEquip)
		.def("GetExpLevel", &AWorldDiscoveryArea::GetExpLevel)
		.def("GetAwesomeLevel", &AWorldDiscoveryArea::GetAwesomeLevel)
		.def("GetGameStage", &AWorldDiscoveryArea::GetGameStage)
		.def("GetExperienceReward", &AWorldDiscoveryArea::GetExperienceReward)
		.def("GetWorldAreaShortName", &AWorldDiscoveryArea::GetWorldAreaShortName, py::return_value_policy::reference)
		;
	py::class_< UWorldDiscoveryAreaRenderingComponent, UPrimitiveComponent >(m, "UWorldDiscoveryAreaRenderingComponent")
		;
	py::class_< UAnimNotify_CustomEvent, UAnimNotify >(m, "UAnimNotify_CustomEvent")
		.def_readwrite("CustomEventName", &UAnimNotify_CustomEvent::CustomEventName, py::return_value_policy::reference)
		;
	py::class_< UAnimNotify_DialogEvent, UAnimNotify >(m, "UAnimNotify_DialogEvent")
		.def_readwrite("EventTag", &UAnimNotify_DialogEvent::EventTag, py::return_value_policy::reference)
		.def_readwrite("Group", &UAnimNotify_DialogEvent::Group, py::return_value_policy::reference)
		;
	py::class_< UAnimNotify_EnableHandIK, UAnimNotify >(m, "UAnimNotify_EnableHandIK")
		.def_property("bEnableIK", [](UAnimNotify_EnableHandIK &self){return self.bEnableIK;}, [](UAnimNotify_EnableHandIK &self, bool value){self.bEnableIK = value ? 1 : 0;})
		.def_readwrite("Hand", &UAnimNotify_EnableHandIK::Hand)
		;
	py::class_< UAnimNotify_EnableHeadLookAt, UAnimNotify >(m, "UAnimNotify_EnableHeadLookAt")
		.def_property("bEnable", [](UAnimNotify_EnableHeadLookAt &self){return self.bEnable;}, [](UAnimNotify_EnableHeadLookAt &self, bool value){self.bEnable = value ? 1 : 0;})
		.def_readwrite("HeadControlName", &UAnimNotify_EnableHeadLookAt::HeadControlName, py::return_value_policy::reference)
		;
	py::class_< UAnimNotify_UseBehavior, UAnimNotify >(m, "UAnimNotify_UseBehavior")
		.def_property("bRunOnServer", [](UAnimNotify_UseBehavior &self){return self.bRunOnServer;}, [](UAnimNotify_UseBehavior &self, bool value){self.bRunOnServer = value ? 1 : 0;})
		.def_property("bRunOnClient", [](UAnimNotify_UseBehavior &self){return self.bRunOnClient;}, [](UAnimNotify_UseBehavior &self, bool value){self.bRunOnClient = value ? 1 : 0;})
		.def_property("bRunIfLocalPlayer", [](UAnimNotify_UseBehavior &self){return self.bRunIfLocalPlayer;}, [](UAnimNotify_UseBehavior &self, bool value){self.bRunIfLocalPlayer = value ? 1 : 0;})
		.def_property("bPassInstigatorAsSelfContext", [](UAnimNotify_UseBehavior &self){return self.bPassInstigatorAsSelfContext;}, [](UAnimNotify_UseBehavior &self, bool value){self.bPassInstigatorAsSelfContext = value ? 1 : 0;})
		.def_readwrite("Behaviors", &UAnimNotify_UseBehavior::Behaviors, py::return_value_policy::reference)
		.def_readwrite("InstigatorContextForBehavior", &UAnimNotify_UseBehavior::InstigatorContextForBehavior)
		.def("PreTestNotify", &UAnimNotify_UseBehavior::PreTestNotify)
		;
	py::class_< UIWeaponBoneController, UInterface >(m, "UIWeaponBoneController")
		.def("UnPause", &UIWeaponBoneController::UnPause)
		.def("Pause", &UIWeaponBoneController::Pause)
		.def("Stop", &UIWeaponBoneController::Stop)
		.def("SpinImpulseOnFire", &UIWeaponBoneController::SpinImpulseOnFire)
		.def("EndFire", &UIWeaponBoneController::EndFire)
		.def("BeginFire", &UIWeaponBoneController::BeginFire)
		.def("IncrementWeaponBoneControl", &UIWeaponBoneController::IncrementWeaponBoneControl)
		.def("GetControlName", &UIWeaponBoneController::GetControlName, py::return_value_policy::reference)
		;
	py::class_< USkelControlHandModifier, USkelControlBase >(m, "USkelControlHandModifier")
		.def_readwrite("HandAnimSeq", &USkelControlHandModifier::HandAnimSeq, py::return_value_policy::reference)
		.def_readwrite("CurrentSequenceName", &USkelControlHandModifier::CurrentSequenceName, py::return_value_policy::reference)
		;
	py::class_< USkelControlLeftHandGripWeapon, USkelControlLimb >(m, "USkelControlLeftHandGripWeapon")
		.def_property("bEditWeaponHoldIKInfo", [](USkelControlLeftHandGripWeapon &self){return self.bEditWeaponHoldIKInfo;}, [](USkelControlLeftHandGripWeapon &self, bool value){self.bEditWeaponHoldIKInfo = value ? 1 : 0;})
		.def_readwrite("CachedBodyClass", &USkelControlLeftHandGripWeapon::CachedBodyClass, py::return_value_policy::reference)
		;
	py::class_< UStanceExpressionEvaluator, UExpressionEvaluator >(m, "UStanceExpressionEvaluator")
		.def_readwrite("Stance", &UStanceExpressionEvaluator::Stance, py::return_value_policy::reference)
		.def_readwrite("Option", &UStanceExpressionEvaluator::Option)
		.def("Evaluate", &UStanceExpressionEvaluator::Evaluate)
		;
	py::class_< UWillowAnimBlendByPosture, UAnimNodeBlendList >(m, "UWillowAnimBlendByPosture")
		.def_property("bMakeCrouched", [](UWillowAnimBlendByPosture &self){return self.bMakeCrouched;}, [](UWillowAnimBlendByPosture &self, bool value){self.bMakeCrouched = value ? 1 : 0;})
		.def_readwrite("BlendTime", &UWillowAnimBlendByPosture::BlendTime)
		;
	py::class_< UWillowAnimNode_AddCameraBone, UAnimNodeBlend >(m, "UWillowAnimNode_AddCameraBone")
		.def_readwrite("BoneName", &UWillowAnimNode_AddCameraBone::BoneName, py::return_value_policy::reference)
		.def_readwrite("BlendWeight", &UWillowAnimNode_AddCameraBone::BlendWeight)
		.def_readwrite("LocalToCompReqBones", &UWillowAnimNode_AddCameraBone::LocalToCompReqBones, py::return_value_policy::reference)
		.def_readwrite("CachedRefBoneCompSpaceTransform", &UWillowAnimNode_AddCameraBone::CachedRefBoneCompSpaceTransform, py::return_value_policy::reference)
		.def("SetBlendTarget", &UWillowAnimNode_AddCameraBone::SetBlendTarget)
		;
	py::class_< UWillowAnimNode_AimState, UAnimNodeBlendList >(m, "UWillowAnimNode_AimState")
		.def_readwrite("TransitionAnims", &UWillowAnimNode_AimState::TransitionAnims, py::return_value_policy::reference)
		.def_readwrite("CurrentModeChildIndex", &UWillowAnimNode_AimState::CurrentModeChildIndex)
		.def_readwrite("TransitionBlendOutTime", &UWillowAnimNode_AimState::TransitionBlendOutTime)
		;
	py::class_< UWillowAnimNode_ClimbLadder, UAnimNodeScaleRateBySpeed >(m, "UWillowAnimNode_ClimbLadder")
		;
	py::class_< UWillowAnimNode_Condition, UAnimNodeBlend >(m, "UWillowAnimNode_Condition")
		.def_readwrite("BlendTime", &UWillowAnimNode_Condition::BlendTime)
		.def_readwrite("CheckRate", &UWillowAnimNode_Condition::CheckRate)
		.def_readwrite("FlagCondition", &UWillowAnimNode_Condition::FlagCondition, py::return_value_policy::reference)
		.def_readwrite("LastCheckTime", &UWillowAnimNode_Condition::LastCheckTime)
		;
	py::class_< UWillowAnimNode_MovementTransition, UAnimNodeBlendList >(m, "UWillowAnimNode_MovementTransition")
		.def_property("bWantsToMove", [](UWillowAnimNode_MovementTransition &self){return self.bWantsToMove;}, [](UWillowAnimNode_MovementTransition &self, bool value){self.bWantsToMove = value ? 1 : 0;})
		.def_readwrite("LaunchBlendTime", &UWillowAnimNode_MovementTransition::LaunchBlendTime)
		.def_readwrite("PostLaunchBlendTime", &UWillowAnimNode_MovementTransition::PostLaunchBlendTime)
		.def_readwrite("StoppingBlendTime", &UWillowAnimNode_MovementTransition::StoppingBlendTime)
		.def_readwrite("PostStopBlendTime", &UWillowAnimNode_MovementTransition::PostStopBlendTime)
		.def_readwrite("LaunchAnimName", &UWillowAnimNode_MovementTransition::LaunchAnimName, py::return_value_policy::reference)
		.def_readwrite("StopAnimName", &UWillowAnimNode_MovementTransition::StopAnimName, py::return_value_policy::reference)
		.def_readwrite("LaunchDelayTime", &UWillowAnimNode_MovementTransition::LaunchDelayTime)
		.def_readwrite("MoveState", &UWillowAnimNode_MovementTransition::MoveState)
		.def_readwrite("CurrentLaunchDelayTime", &UWillowAnimNode_MovementTransition::CurrentLaunchDelayTime)
		.def("NodeIsIdle", &UWillowAnimNode_MovementTransition::NodeIsIdle)
		;
	py::class_< UWillowAnimNode_Prism, UAnimNodeBlendBase >(m, "UWillowAnimNode_Prism")
		.def_property("MeshOffsetTurnOnlyWhenStopped", [](UWillowAnimNode_Prism &self){return self.MeshOffsetTurnOnlyWhenStopped;}, [](UWillowAnimNode_Prism &self, bool value){self.MeshOffsetTurnOnlyWhenStopped = value ? 1 : 0;})
		.def_property("bBlendDown", [](UWillowAnimNode_Prism &self){return self.bBlendDown;}, [](UWillowAnimNode_Prism &self, bool value){self.bBlendDown = value ? 1 : 0;})
		.def_readwrite("PrismData", &UWillowAnimNode_Prism::PrismData, py::return_value_policy::reference)
		.def_readwrite("BlendTime", &UWillowAnimNode_Prism::BlendTime)
		.def_readwrite("MeshOffsetTurnThreshold", &UWillowAnimNode_Prism::MeshOffsetTurnThreshold)
		.def_readwrite("MeshOffsetTurn", &UWillowAnimNode_Prism::MeshOffsetTurn)
		.def_readwrite("PreviousGroup", &UWillowAnimNode_Prism::PreviousGroup)
		.def_readwrite("CurrentGroup", &UWillowAnimNode_Prism::CurrentGroup)
		.def_readwrite("CurrentBlendValue", &UWillowAnimNode_Prism::CurrentBlendValue)
		.def_readwrite("EditorSliderValue", &UWillowAnimNode_Prism::EditorSliderValue)
		.def("NodeIsActive", &UWillowAnimNode_Prism::NodeIsActive)
		;
	py::class_< UWillowAnimNode_WeaponHold, UAnimNodeBlendList >(m, "UWillowAnimNode_WeaponHold")
		.def_readwrite("BlendTime", &UWillowAnimNode_WeaponHold::BlendTime)
		;
	py::class_< UWillowAnimNode_WeaponRecoil, UAnimNodeSpecialMoveBlend >(m, "UWillowAnimNode_WeaponRecoil")
		.def_property("bOffHandWeapon", [](UWillowAnimNode_WeaponRecoil &self){return self.bOffHandWeapon;}, [](UWillowAnimNode_WeaponRecoil &self, bool value){self.bOffHandWeapon = value ? 1 : 0;})
		.def_property("bComputeBaseRecoilScaleOnNextTick", [](UWillowAnimNode_WeaponRecoil &self){return self.bComputeBaseRecoilScaleOnNextTick;}, [](UWillowAnimNode_WeaponRecoil &self, bool value){self.bComputeBaseRecoilScaleOnNextTick = value ? 1 : 0;})
		.def_readwrite("BaseRecoilScale", &UWillowAnimNode_WeaponRecoil::BaseRecoilScale)
		.def("PlayData", &UWillowAnimNode_WeaponRecoil::PlayData)
		;
	py::class_< UWillowAnimNodeAimOffset, UAnimNodeAimOffset >(m, "UWillowAnimNodeAimOffset")
		.def_property("bWrapYaw", [](UWillowAnimNodeAimOffset &self){return self.bWrapYaw;}, [](UWillowAnimNodeAimOffset &self, bool value){self.bWrapYaw = value ? 1 : 0;})
		.def_property("bWrapPitch", [](UWillowAnimNodeAimOffset &self){return self.bWrapPitch;}, [](UWillowAnimNodeAimOffset &self, bool value){self.bWrapPitch = value ? 1 : 0;})
		.def_property("bArbitraryOrientation", [](UWillowAnimNodeAimOffset &self){return self.bArbitraryOrientation;}, [](UWillowAnimNodeAimOffset &self, bool value){self.bArbitraryOrientation = value ? 1 : 0;})
		.def_property("bUseLikeHeadLookAt", [](UWillowAnimNodeAimOffset &self){return self.bUseLikeHeadLookAt;}, [](UWillowAnimNodeAimOffset &self, bool value){self.bUseLikeHeadLookAt = value ? 1 : 0;})
		.def_property("bLimitRange", [](UWillowAnimNodeAimOffset &self){return self.bLimitRange;}, [](UWillowAnimNodeAimOffset &self, bool value){self.bLimitRange = value ? 1 : 0;})
		.def_property("bMigrated", [](UWillowAnimNodeAimOffset &self){return self.bMigrated;}, [](UWillowAnimNodeAimOffset &self, bool value){self.bMigrated = value ? 1 : 0;})
		.def_property("bIsInterpolatingAim", [](UWillowAnimNodeAimOffset &self){return self.bIsInterpolatingAim;}, [](UWillowAnimNodeAimOffset &self, bool value){self.bIsInterpolatingAim = value ? 1 : 0;})
		.def_readwrite("AimSpeed", &UWillowAnimNodeAimOffset::AimSpeed)
		.def_readwrite("PivotOverrideSocket", &UWillowAnimNodeAimOffset::PivotOverrideSocket, py::return_value_policy::reference)
		.def_readwrite("YawRange", &UWillowAnimNodeAimOffset::YawRange)
		.def_readwrite("PitchRangeUp", &UWillowAnimNodeAimOffset::PitchRangeUp)
		.def_readwrite("PitchRangeDown", &UWillowAnimNodeAimOffset::PitchRangeDown)
		.def_readwrite("YawLimitPct", &UWillowAnimNodeAimOffset::YawLimitPct)
		.def_readwrite("PitchLimitPct", &UWillowAnimNodeAimOffset::PitchLimitPct)
		.def_readwrite("AngleRange", &UWillowAnimNodeAimOffset::AngleRange, py::return_value_policy::reference)
		.def("GetTargetLocation", &UWillowAnimNodeAimOffset::GetTargetLocation)
		.def("GetPivotPoint", &UWillowAnimNodeAimOffset::GetPivotPoint)
		.def("InterpAim", &UWillowAnimNodeAimOffset::InterpAim, py::return_value_policy::reference)
		.def("GetDesiredAim", &UWillowAnimNodeAimOffset::GetDesiredAim, py::return_value_policy::reference)
		.def("GetCurrentAim", &UWillowAnimNodeAimOffset::GetCurrentAim, py::return_value_policy::reference)
		.def("DebugAimOffset", &UWillowAnimNodeAimOffset::DebugAimOffset)
		.def("IsAimNodeDebugEnabled", &UWillowAnimNodeAimOffset::IsAimNodeDebugEnabled)
		.def("ToggleAimNodeDebug", &UWillowAnimNodeAimOffset::ToggleAimNodeDebug)
		;
	py::class_< UWillowAnimNodeAimOffset_BoundaryTurret, UWillowAnimNodeAimOffset >(m, "UWillowAnimNodeAimOffset_BoundaryTurret")
		.def("GetDesiredAim", &UWillowAnimNodeAimOffset_BoundaryTurret::GetDesiredAim, py::return_value_policy::reference)
		;
	py::class_< UWillowAnimNodeBlendByAimState, UAnimNodeBlendList >(m, "UWillowAnimNodeBlendByAimState")
		.def_property("bCurrentAimAtTarget", [](UWillowAnimNodeBlendByAimState &self){return self.bCurrentAimAtTarget;}, [](UWillowAnimNodeBlendByAimState &self, bool value){self.bCurrentAimAtTarget = value ? 1 : 0;})
		.def_property("bEditorAimAtTarget", [](UWillowAnimNodeBlendByAimState &self){return self.bEditorAimAtTarget;}, [](UWillowAnimNodeBlendByAimState &self, bool value){self.bEditorAimAtTarget = value ? 1 : 0;})
		.def_readwrite("BlendTime", &UWillowAnimNodeBlendByAimState::BlendTime)
		;
	py::class_< UWillowAnimNodeBlendByRotationSpeed, UAnimNodeBlendList >(m, "UWillowAnimNodeBlendByRotationSpeed")
		.def_property("NoSpeedScaling", [](UWillowAnimNodeBlendByRotationSpeed &self){return self.NoSpeedScaling;}, [](UWillowAnimNodeBlendByRotationSpeed &self, bool value){self.NoSpeedScaling = value ? 1 : 0;})
		.def_property("bCallPlayAnimOnSwitch", [](UWillowAnimNodeBlendByRotationSpeed &self){return self.bCallPlayAnimOnSwitch;}, [](UWillowAnimNodeBlendByRotationSpeed &self, bool value){self.bCallPlayAnimOnSwitch = value ? 1 : 0;})
		.def_readwrite("BlendTime", &UWillowAnimNodeBlendByRotationSpeed::BlendTime)
		.def_readwrite("ThresholdRate", &UWillowAnimNodeBlendByRotationSpeed::ThresholdRate)
		.def_readwrite("ReferenceSpeed", &UWillowAnimNodeBlendByRotationSpeed::ReferenceSpeed)
		.def_readwrite("PreviewRotationRate", &UWillowAnimNodeBlendByRotationSpeed::PreviewRotationRate)
		;
	py::class_< UWillowAnimNodeBlendByStance, UAnimNodeBlendList >(m, "UWillowAnimNodeBlendByStance")
		.def_property("bCatchUnspecifiedStances", [](UWillowAnimNodeBlendByStance &self){return self.bCatchUnspecifiedStances;}, [](UWillowAnimNodeBlendByStance &self, bool value){self.bCatchUnspecifiedStances = value ? 1 : 0;})
		.def_property("bApplyRateScale", [](UWillowAnimNodeBlendByStance &self){return self.bApplyRateScale;}, [](UWillowAnimNodeBlendByStance &self, bool value){self.bApplyRateScale = value ? 1 : 0;})
		.def_property("bCached", [](UWillowAnimNodeBlendByStance &self){return self.bCached;}, [](UWillowAnimNodeBlendByStance &self, bool value){self.bCached = value ? 1 : 0;})
		.def_readwrite("BlendTime", &UWillowAnimNodeBlendByStance::BlendTime)
		.def_readwrite("ReferencesSpeeds", &UWillowAnimNodeBlendByStance::ReferencesSpeeds, py::return_value_policy::reference)
		.def_readwrite("DefaultStances", &UWillowAnimNodeBlendByStance::DefaultStances, py::return_value_policy::reference)
		.def_readwrite("ChildStanceTypes", &UWillowAnimNodeBlendByStance::ChildStanceTypes, py::return_value_policy::reference)
		.def_readwrite("Scale", &UWillowAnimNodeBlendByStance::Scale)
		.def_readwrite("DiagScale", &UWillowAnimNodeBlendByStance::DiagScale)
		.def_readwrite("CurrentStanceType", &UWillowAnimNodeBlendByStance::CurrentStanceType, py::return_value_policy::reference)
		.def_readwrite("CachedSkelControls", &UWillowAnimNodeBlendByStance::CachedSkelControls, py::return_value_policy::reference)
		;
	py::class_< UWillowAnimNodeBlendDirectional, UAnimNodeBlendBase >(m, "UWillowAnimNodeBlendDirectional")
		.def_property("bUseAcceleration", [](UWillowAnimNodeBlendDirectional &self){return self.bUseAcceleration;}, [](UWillowAnimNodeBlendDirectional &self, bool value){self.bUseAcceleration = value ? 1 : 0;})
		.def_property("bUseControllerLookDirection", [](UWillowAnimNodeBlendDirectional &self){return self.bUseControllerLookDirection;}, [](UWillowAnimNodeBlendDirectional &self, bool value){self.bUseControllerLookDirection = value ? 1 : 0;})
		.def_readwrite("DirDegreesPerSecond", &UWillowAnimNodeBlendDirectional::DirDegreesPerSecond)
		.def_readwrite("SingleAnimAtOrAboveLOD", &UWillowAnimNodeBlendDirectional::SingleAnimAtOrAboveLOD)
		.def_readwrite("BlendTime", &UWillowAnimNodeBlendDirectional::BlendTime)
		.def_readwrite("DirAngle", &UWillowAnimNodeBlendDirectional::DirAngle)
		;
	py::class_< UWillowAnimNodeBlendInjured, UAnimNodeBlendList >(m, "UWillowAnimNodeBlendInjured")
		.def_property("bMakeInjured", [](UWillowAnimNodeBlendInjured &self){return self.bMakeInjured;}, [](UWillowAnimNodeBlendInjured &self, bool value){self.bMakeInjured = value ? 1 : 0;})
		.def_readwrite("BlendTime", &UWillowAnimNodeBlendInjured::BlendTime)
		;
	py::class_< UWillowAnimNodeBlendList, UAnimNodeBlendList >(m, "UWillowAnimNodeBlendList")
		.def_readwrite("ChildBlendInTime", &UWillowAnimNodeBlendList::ChildBlendInTime, py::return_value_policy::reference)
		;
	py::class_< UWillowAnimNode_Falling, UWillowAnimNodeBlendList >(m, "UWillowAnimNode_Falling")
		.def_readwrite("DelayBeforeStartFalling", &UWillowAnimNode_Falling::DelayBeforeStartFalling)
		.def_readwrite("MinStartFallingVelocity", &UWillowAnimNode_Falling::MinStartFallingVelocity)
		.def_readwrite("InterruptEndFallMovementSpeed", &UWillowAnimNode_Falling::InterruptEndFallMovementSpeed)
		.def_readwrite("StartFallingTime", &UWillowAnimNode_Falling::StartFallingTime)
		.def_readwrite("StuckFallingTimer", &UWillowAnimNode_Falling::StuckFallingTimer)
		;
	py::class_< UWillowAnimNodeBlendSwitch, UAnimNodeBlendList >(m, "UWillowAnimNodeBlendSwitch")
		.def_readwrite("BlendTime", &UWillowAnimNodeBlendSwitch::BlendTime)
		.def_readwrite("ChildSwitches", &UWillowAnimNodeBlendSwitch::ChildSwitches, py::return_value_policy::reference)
		.def_readwrite("CurrentSwitch", &UWillowAnimNodeBlendSwitch::CurrentSwitch, py::return_value_policy::reference)
		.def_readwrite("DesiredSwitch", &UWillowAnimNodeBlendSwitch::DesiredSwitch, py::return_value_policy::reference)
		.def_readwrite("DefaultSwitch", &UWillowAnimNodeBlendSwitch::DefaultSwitch, py::return_value_policy::reference)
		.def("SetCurrentSwitch", &UWillowAnimNodeBlendSwitch::SetCurrentSwitch)
		;
	py::class_< UWillowAnimNodeBlendThirdPersonMenu, UAnimNodeBlendList >(m, "UWillowAnimNodeBlendThirdPersonMenu")
		.def_property("bMakeThirdPerson", [](UWillowAnimNodeBlendThirdPersonMenu &self){return self.bMakeThirdPerson;}, [](UWillowAnimNodeBlendThirdPersonMenu &self, bool value){self.bMakeThirdPerson = value ? 1 : 0;})
		.def_readwrite("BlendTime", &UWillowAnimNodeBlendThirdPersonMenu::BlendTime)
		;
	py::class_< UWillowAnimNodeBlendTurning, UAnimNodeBlendList >(m, "UWillowAnimNodeBlendTurning")
		.def_property("fTurning", [](UWillowAnimNodeBlendTurning &self){return self.fTurning;}, [](UWillowAnimNodeBlendTurning &self, bool value){self.fTurning = value ? 1 : 0;})
		.def_readwrite("TurnTransitionDelay", &UWillowAnimNodeBlendTurning::TurnTransitionDelay)
		.def_readwrite("BlendUpTime", &UWillowAnimNodeBlendTurning::BlendUpTime)
		.def_readwrite("BlendDownTime", &UWillowAnimNodeBlendTurning::BlendDownTime)
		.def_readwrite("PrevAngle", &UWillowAnimNodeBlendTurning::PrevAngle)
		.def_readwrite("PrevDeltaAngle", &UWillowAnimNodeBlendTurning::PrevDeltaAngle)
		.def_readwrite("DeltaAngle", &UWillowAnimNodeBlendTurning::DeltaAngle)
		.def_readwrite("CurrentTurnTransitionDelay", &UWillowAnimNodeBlendTurning::CurrentTurnTransitionDelay)
		;
	py::class_< UWillowAnimNodeBlendVehicleDirectional, UAnimNodeBlendBase >(m, "UWillowAnimNodeBlendVehicleDirectional")
		.def_readwrite("DirDegreesPerSecond", &UWillowAnimNodeBlendVehicleDirectional::DirDegreesPerSecond)
		.def_readwrite("BlendTime", &UWillowAnimNodeBlendVehicleDirectional::BlendTime)
		.def_readwrite("DirAngle", &UWillowAnimNodeBlendVehicleDirectional::DirAngle)
		;
	py::class_< UWillowAnimNodeBlendWheeledPawn, UAnimNodeBlendBase >(m, "UWillowAnimNodeBlendWheeledPawn")
		.def_property("bUseBaseRotation", [](UWillowAnimNodeBlendWheeledPawn &self){return self.bUseBaseRotation;}, [](UWillowAnimNodeBlendWheeledPawn &self, bool value){self.bUseBaseRotation = value ? 1 : 0;})
		.def_property("bIsIdle", [](UWillowAnimNodeBlendWheeledPawn &self){return self.bIsIdle;}, [](UWillowAnimNodeBlendWheeledPawn &self, bool value){self.bIsIdle = value ? 1 : 0;})
		.def_property("bOneFrameMovementAdded", [](UWillowAnimNodeBlendWheeledPawn &self){return self.bOneFrameMovementAdded;}, [](UWillowAnimNodeBlendWheeledPawn &self, bool value){self.bOneFrameMovementAdded = value ? 1 : 0;})
		.def_readwrite("DirChangeRateMin", &UWillowAnimNodeBlendWheeledPawn::DirChangeRateMin, py::return_value_policy::reference)
		.def_readwrite("DirChangeRateMax", &UWillowAnimNodeBlendWheeledPawn::DirChangeRateMax, py::return_value_policy::reference)
		.def_readwrite("BlendTime", &UWillowAnimNodeBlendWheeledPawn::BlendTime)
		.def_readwrite("ReferenceSpeed", &UWillowAnimNodeBlendWheeledPawn::ReferenceSpeed)
		.def_readwrite("SpeedUpRate", &UWillowAnimNodeBlendWheeledPawn::SpeedUpRate)
		.def_readwrite("SpeedDownRate", &UWillowAnimNodeBlendWheeledPawn::SpeedDownRate)
		.def_readwrite("BrakeRate", &UWillowAnimNodeBlendWheeledPawn::BrakeRate)
		.def_readwrite("IdleBlendTime", &UWillowAnimNodeBlendWheeledPawn::IdleBlendTime)
		.def_readwrite("DirAngle", &UWillowAnimNodeBlendWheeledPawn::DirAngle)
		.def_readwrite("CurSpeed", &UWillowAnimNodeBlendWheeledPawn::CurSpeed)
		;
	py::class_< UWillowAnimNodeFeatherBlend, UAnimNodeBlend >(m, "UWillowAnimNodeFeatherBlend")
		.def_property("bForceLocalSpaceBlend", [](UWillowAnimNodeFeatherBlend &self){return self.bForceLocalSpaceBlend;}, [](UWillowAnimNodeFeatherBlend &self, bool value){self.bForceLocalSpaceBlend = value ? 1 : 0;})
		.def_readwrite("BoneBlendTargets", &UWillowAnimNodeFeatherBlend::BoneBlendTargets, py::return_value_policy::reference)
		.def_readwrite("Child2PerBoneWeight", &UWillowAnimNodeFeatherBlend::Child2PerBoneWeight, py::return_value_policy::reference)
		.def_readwrite("LocalToCompReqBones", &UWillowAnimNodeFeatherBlend::LocalToCompReqBones, py::return_value_policy::reference)
		.def("SetBlendTarget", &UWillowAnimNodeFeatherBlend::SetBlendTarget)
		;
	py::class_< UWillowAnimNodeSequence, UAnimNodeSequence >(m, "UWillowAnimNodeSequence")
		.def_property("bAutoStart", [](UWillowAnimNodeSequence &self){return self.bAutoStart;}, [](UWillowAnimNodeSequence &self, bool value){self.bAutoStart = value ? 1 : 0;})
		.def_property("bLoopLastSequence", [](UWillowAnimNodeSequence &self){return self.bLoopLastSequence;}, [](UWillowAnimNodeSequence &self, bool value){self.bLoopLastSequence = value ? 1 : 0;})
		.def_readwrite("SeqStack", &UWillowAnimNodeSequence::SeqStack, py::return_value_policy::reference)
		.def("eventOnInit", &UWillowAnimNodeSequence::eventOnInit)
		.def("PlayAnimationSet", &UWillowAnimNodeSequence::PlayAnimationSet)
		.def("PlayAnimation", &UWillowAnimNodeSequence::PlayAnimation)
		;
	py::class_< UWillowAnimNodeSequenceAdditiveBlend, UAnimNodeSequence >(m, "UWillowAnimNodeSequenceAdditiveBlend")
		.def_property("bAutoGenerateAdditiveSeqName", [](UWillowAnimNodeSequenceAdditiveBlend &self){return self.bAutoGenerateAdditiveSeqName;}, [](UWillowAnimNodeSequenceAdditiveBlend &self, bool value){self.bAutoGenerateAdditiveSeqName = value ? 1 : 0;})
		.def_readwrite("AddAnimSeqName", &UWillowAnimNodeSequenceAdditiveBlend::AddAnimSeqName, py::return_value_policy::reference)
		.def_readwrite("AddAnimSeq", &UWillowAnimNodeSequenceAdditiveBlend::AddAnimSeq, py::return_value_policy::reference)
		.def_readwrite("AddAnimLinkupIndex", &UWillowAnimNodeSequenceAdditiveBlend::AddAnimLinkupIndex)
		.def("SetAddAnim", &UWillowAnimNodeSequenceAdditiveBlend::SetAddAnim)
		.def("SetAnim", &UWillowAnimNodeSequenceAdditiveBlend::SetAnim)
		;
	py::class_< UWillowAnimNodeSlot, UAnimNodeSlot >(m, "UWillowAnimNodeSlot")
		.def("StopCustomAnimationOnLastFrame", &UWillowAnimNodeSlot::StopCustomAnimationOnLastFrame)
		;
	py::class_< UWillowAnimTree, UAnimTree >(m, "UWillowAnimTree")
		.def_readwrite("SimpleAnimNames", &UWillowAnimTree::SimpleAnimNames, py::return_value_policy::reference)
		.def_readwrite("PreviewWeapon", &UWillowAnimTree::PreviewWeapon, py::return_value_policy::reference)
		.def_readwrite("LeftHandAnimation", &UWillowAnimTree::LeftHandAnimation, py::return_value_policy::reference)
		;
	py::class_< UWillowSkelControl_EyelidLook, USkelControlSingleBone >(m, "UWillowSkelControl_EyelidLook")
		.def_property("EyeLidMoveable", [](UWillowSkelControl_EyelidLook &self){return self.EyeLidMoveable;}, [](UWillowSkelControl_EyelidLook &self, bool value){self.EyeLidMoveable = value ? 1 : 0;})
		.def_readwrite("OriginalHorizAngle", &UWillowSkelControl_EyelidLook::OriginalHorizAngle)
		.def_readwrite("OriginalVertAngle", &UWillowSkelControl_EyelidLook::OriginalVertAngle)
		.def_readwrite("EyeBoneName", &UWillowSkelControl_EyelidLook::EyeBoneName, py::return_value_policy::reference)
		.def_readwrite("EyeMaterialIndex", &UWillowSkelControl_EyelidLook::EyeMaterialIndex)
		.def_readwrite("vertMax", &UWillowSkelControl_EyelidLook::vertMax)
		.def_readwrite("vertMin", &UWillowSkelControl_EyelidLook::vertMin)
		.def_readwrite("horizMax", &UWillowSkelControl_EyelidLook::horizMax)
		.def_readwrite("horizMin", &UWillowSkelControl_EyelidLook::horizMin)
		.def_readwrite("maxOpenValue", &UWillowSkelControl_EyelidLook::maxOpenValue)
		.def_readwrite("minOpenValue", &UWillowSkelControl_EyelidLook::minOpenValue)
		.def_readwrite("ClosedValue", &UWillowSkelControl_EyelidLook::ClosedValue)
		;
	py::class_< UWillowSkelControl_LowerEyelidLook, UWillowSkelControl_EyelidLook >(m, "UWillowSkelControl_LowerEyelidLook")
		;
	py::class_< UWillowSkelControl_UpperEyelidLook, UWillowSkelControl_EyelidLook >(m, "UWillowSkelControl_UpperEyelidLook")
		.def_property("EyeMoveable", [](UWillowSkelControl_UpperEyelidLook &self){return self.EyeMoveable;}, [](UWillowSkelControl_UpperEyelidLook &self, bool value){self.EyeMoveable = value ? 1 : 0;})
		.def_readwrite("LookAtOffset", &UWillowSkelControl_UpperEyelidLook::LookAtOffset, py::return_value_policy::reference)
		.def_readwrite("EyeInterpSpeed", &UWillowSkelControl_UpperEyelidLook::EyeInterpSpeed)
		;
	py::class_< UWillowSkelControl_FootPlacement, USkelControlFootPlacement >(m, "UWillowSkelControl_FootPlacement")
		.def_property("bMoreAccurateAndMoreExpensive", [](UWillowSkelControl_FootPlacement &self){return self.bMoreAccurateAndMoreExpensive;}, [](UWillowSkelControl_FootPlacement &self, bool value){self.bMoreAccurateAndMoreExpensive = value ? 1 : 0;})
		.def_readwrite("LastOffset", &UWillowSkelControl_FootPlacement::LastOffset, py::return_value_policy::reference)
		.def_readwrite("CachedFloor", &UWillowSkelControl_FootPlacement::CachedFloor, py::return_value_policy::reference)
		.def_readwrite("CachedPawn", &UWillowSkelControl_FootPlacement::CachedPawn, py::return_value_policy::reference)
		.def_readwrite("InterpSpeed", &UWillowSkelControl_FootPlacement::InterpSpeed)
		.def_readwrite("ExpensiveDistanceFactor", &UWillowSkelControl_FootPlacement::ExpensiveDistanceFactor)
		;
	py::class_< UWillowSkelControl_LookAtActor, USkelControlLookAt >(m, "UWillowSkelControl_LookAtActor")
		.def_property("bOutOfRange", [](UWillowSkelControl_LookAtActor &self){return self.bOutOfRange;}, [](UWillowSkelControl_LookAtActor &self, bool value){self.bOutOfRange = value ? 1 : 0;})
		.def_property("bInitialized", [](UWillowSkelControl_LookAtActor &self){return self.bInitialized;}, [](UWillowSkelControl_LookAtActor &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_readwrite("AdditionalOffset", &UWillowSkelControl_LookAtActor::AdditionalOffset, py::return_value_policy::reference)
		.def_readwrite("OutOfRangeBlendTime", &UWillowSkelControl_LookAtActor::OutOfRangeBlendTime)
		.def_readwrite("MyAIPawn", &UWillowSkelControl_LookAtActor::MyAIPawn, py::return_value_policy::reference)
		;
	py::class_< UWillowSkelControl_RotateFlapFromFiring, USkelControlSingleBone >(m, "UWillowSkelControl_RotateFlapFromFiring")
		.def_property("bPaused", [](UWillowSkelControl_RotateFlapFromFiring &self){return self.bPaused;}, [](UWillowSkelControl_RotateFlapFromFiring &self, bool value){self.bPaused = value ? 1 : 0;})
		.def_readwrite("VfTable_IIWeaponBoneController", &UWillowSkelControl_RotateFlapFromFiring::VfTable_IIWeaponBoneController, py::return_value_policy::reference)
		.def_readwrite("RotationExtent", &UWillowSkelControl_RotateFlapFromFiring::RotationExtent, py::return_value_policy::reference)
		.def_readwrite("BlendPercent", &UWillowSkelControl_RotateFlapFromFiring::BlendPercent)
		.def_readwrite("BlendPercentRate", &UWillowSkelControl_RotateFlapFromFiring::BlendPercentRate)
		.def_readwrite("BlendPercentRateDelay", &UWillowSkelControl_RotateFlapFromFiring::BlendPercentRateDelay)
		.def("UnPause", &UWillowSkelControl_RotateFlapFromFiring::UnPause)
		.def("Pause", &UWillowSkelControl_RotateFlapFromFiring::Pause)
		.def("Stop", &UWillowSkelControl_RotateFlapFromFiring::Stop)
		.def("SpinImpulseOnFire", &UWillowSkelControl_RotateFlapFromFiring::SpinImpulseOnFire)
		.def("EndFire", &UWillowSkelControl_RotateFlapFromFiring::EndFire)
		.def("BeginFire", &UWillowSkelControl_RotateFlapFromFiring::BeginFire)
		.def("IncrementWeaponBoneControl", &UWillowSkelControl_RotateFlapFromFiring::IncrementWeaponBoneControl)
		.def("GetControlName", &UWillowSkelControl_RotateFlapFromFiring::GetControlName, py::return_value_policy::reference)
		;
	py::class_< UWillowSkelControl_RotateWeaponBoneFromFiring, USkelControlSingleBone >(m, "UWillowSkelControl_RotateWeaponBoneFromFiring")
		.def_property("bAdjustMaxRotationByFireInterval", [](UWillowSkelControl_RotateWeaponBoneFromFiring &self){return self.bAdjustMaxRotationByFireInterval;}, [](UWillowSkelControl_RotateWeaponBoneFromFiring &self, bool value){self.bAdjustMaxRotationByFireInterval = value ? 1 : 0;})
		.def_property("bPaused", [](UWillowSkelControl_RotateWeaponBoneFromFiring &self){return self.bPaused;}, [](UWillowSkelControl_RotateWeaponBoneFromFiring &self, bool value){self.bPaused = value ? 1 : 0;})
		.def_readwrite("VfTable_IIWeaponBoneController", &UWillowSkelControl_RotateWeaponBoneFromFiring::VfTable_IIWeaponBoneController, py::return_value_policy::reference)
		.def_readwrite("NumberOfShotsPerRotation", &UWillowSkelControl_RotateWeaponBoneFromFiring::NumberOfShotsPerRotation)
		.def_readwrite("MaxRotationsPerSecond", &UWillowSkelControl_RotateWeaponBoneFromFiring::MaxRotationsPerSecond)
		.def_readwrite("MinRotationsPerSecond", &UWillowSkelControl_RotateWeaponBoneFromFiring::MinRotationsPerSecond)
		.def_readwrite("RotationExtent", &UWillowSkelControl_RotateWeaponBoneFromFiring::RotationExtent, py::return_value_policy::reference)
		.def_readwrite("CurrentMaxRotationsPerSecond", &UWillowSkelControl_RotateWeaponBoneFromFiring::CurrentMaxRotationsPerSecond)
		.def_readwrite("BlendPercent", &UWillowSkelControl_RotateWeaponBoneFromFiring::BlendPercent)
		.def_readwrite("BlendPercentRate", &UWillowSkelControl_RotateWeaponBoneFromFiring::BlendPercentRate)
		.def_readwrite("BlendPercentRateDelay", &UWillowSkelControl_RotateWeaponBoneFromFiring::BlendPercentRateDelay)
		.def("UnPause", &UWillowSkelControl_RotateWeaponBoneFromFiring::UnPause)
		.def("Pause", &UWillowSkelControl_RotateWeaponBoneFromFiring::Pause)
		.def("Stop", &UWillowSkelControl_RotateWeaponBoneFromFiring::Stop)
		.def("SpinImpulseOnFire", &UWillowSkelControl_RotateWeaponBoneFromFiring::SpinImpulseOnFire)
		.def("EndFire", &UWillowSkelControl_RotateWeaponBoneFromFiring::EndFire)
		.def("BeginFire", &UWillowSkelControl_RotateWeaponBoneFromFiring::BeginFire)
		.def("IncrementWeaponBoneControl", &UWillowSkelControl_RotateWeaponBoneFromFiring::IncrementWeaponBoneControl)
		.def("GetControlName", &UWillowSkelControl_RotateWeaponBoneFromFiring::GetControlName, py::return_value_policy::reference)
		;
	py::class_< UWillowSkelControl_RotationRate, USkelControlSingleBone >(m, "UWillowSkelControl_RotationRate")
		.def_readwrite("RotationRate", &UWillowSkelControl_RotationRate::RotationRate, py::return_value_policy::reference)
		;
	py::class_< UWillowSkelControl_RotationRateBySpeed, UWillowSkelControl_RotationRate >(m, "UWillowSkelControl_RotationRateBySpeed")
		.def_property("bUseBaseSkelComponentOwner", [](UWillowSkelControl_RotationRateBySpeed &self){return self.bUseBaseSkelComponentOwner;}, [](UWillowSkelControl_RotationRateBySpeed &self, bool value){self.bUseBaseSkelComponentOwner = value ? 1 : 0;})
		.def_readwrite("SpeedComponent", &UWillowSkelControl_RotationRateBySpeed::SpeedComponent)
		.def_readwrite("MinSpeed", &UWillowSkelControl_RotationRateBySpeed::MinSpeed)
		.def_readwrite("MaxSpeed", &UWillowSkelControl_RotationRateBySpeed::MaxSpeed)
		.def_readwrite("MinRotationRate", &UWillowSkelControl_RotationRateBySpeed::MinRotationRate, py::return_value_policy::reference)
		.def_readwrite("MaxRotationRate", &UWillowSkelControl_RotationRateBySpeed::MaxRotationRate, py::return_value_policy::reference)
		;
	py::class_< UWillowSkelControl_TurretConstrained, USkelControlSingleBone >(m, "UWillowSkelControl_TurretConstrained")
		.def_property("bConstrainPitch", [](UWillowSkelControl_TurretConstrained &self){return self.bConstrainPitch;}, [](UWillowSkelControl_TurretConstrained &self, bool value){self.bConstrainPitch = value ? 1 : 0;})
		.def_property("bConstrainYaw", [](UWillowSkelControl_TurretConstrained &self){return self.bConstrainYaw;}, [](UWillowSkelControl_TurretConstrained &self, bool value){self.bConstrainYaw = value ? 1 : 0;})
		.def_property("bConstrainRoll", [](UWillowSkelControl_TurretConstrained &self){return self.bConstrainRoll;}, [](UWillowSkelControl_TurretConstrained &self, bool value){self.bConstrainRoll = value ? 1 : 0;})
		.def_property("bInvertPitch", [](UWillowSkelControl_TurretConstrained &self){return self.bInvertPitch;}, [](UWillowSkelControl_TurretConstrained &self, bool value){self.bInvertPitch = value ? 1 : 0;})
		.def_property("bInvertYaw", [](UWillowSkelControl_TurretConstrained &self){return self.bInvertYaw;}, [](UWillowSkelControl_TurretConstrained &self, bool value){self.bInvertYaw = value ? 1 : 0;})
		.def_property("bInvertRoll", [](UWillowSkelControl_TurretConstrained &self){return self.bInvertRoll;}, [](UWillowSkelControl_TurretConstrained &self, bool value){self.bInvertRoll = value ? 1 : 0;})
		.def_property("bFixedWhenFiring", [](UWillowSkelControl_TurretConstrained &self){return self.bFixedWhenFiring;}, [](UWillowSkelControl_TurretConstrained &self, bool value){self.bFixedWhenFiring = value ? 1 : 0;})
		.def_property("bResetWhenUnattended", [](UWillowSkelControl_TurretConstrained &self){return self.bResetWhenUnattended;}, [](UWillowSkelControl_TurretConstrained &self, bool value){self.bResetWhenUnattended = value ? 1 : 0;})
		.def_property("bIsInMotion", [](UWillowSkelControl_TurretConstrained &self){return self.bIsInMotion;}, [](UWillowSkelControl_TurretConstrained &self, bool value){self.bIsInMotion = value ? 1 : 0;})
		.def_readwrite("MaxAngle", &UWillowSkelControl_TurretConstrained::MaxAngle, py::return_value_policy::reference)
		.def_readwrite("MinAngle", &UWillowSkelControl_TurretConstrained::MinAngle, py::return_value_policy::reference)
		.def_readwrite("LagDegreesPerSecondYaw", &UWillowSkelControl_TurretConstrained::LagDegreesPerSecondYaw)
		.def_readwrite("LagDegreesPerSecondPitch", &UWillowSkelControl_TurretConstrained::LagDegreesPerSecondPitch)
		.def_readwrite("LagDegreesPerSecondRoll", &UWillowSkelControl_TurretConstrained::LagDegreesPerSecondRoll)
		.def_readwrite("DesiredBoneRotation", &UWillowSkelControl_TurretConstrained::DesiredBoneRotation, py::return_value_policy::reference)
		.def_readwrite("AssociatedSeatIndex", &UWillowSkelControl_TurretConstrained::AssociatedSeatIndex)
		.def_readwrite("DefaultRotation", &UWillowSkelControl_TurretConstrained::DefaultRotation, py::return_value_policy::reference)
		.def_readwrite("VirtualSeatKey", &UWillowSkelControl_TurretConstrained::VirtualSeatKey, py::return_value_policy::reference)
		.def_readwrite("ConstrainedBoneRotation", &UWillowSkelControl_TurretConstrained::ConstrainedBoneRotation, py::return_value_policy::reference)
		.def_readwrite("__OnTurretStatusChange__Delegate", &UWillowSkelControl_TurretConstrained::__OnTurretStatusChange__Delegate, py::return_value_policy::reference)
		.def("OnTurretStatusChange", &UWillowSkelControl_TurretConstrained::OnTurretStatusChange)
		;
	py::class_< UWillowSkelControlHandPlacement, USkelControlLimb >(m, "UWillowSkelControlHandPlacement")
		.def_readwrite("TargetRef", &UWillowSkelControlHandPlacement::TargetRef, py::return_value_policy::reference)
		.def_readwrite("TargetAttachmentName", &UWillowSkelControlHandPlacement::TargetAttachmentName, py::return_value_policy::reference)
		;
	py::class_< UWillowSkelControlLerpSingleBone, USkelControlSingleBone >(m, "UWillowSkelControlLerpSingleBone")
		.def_property("bAdjustRotationRateByFireInterval", [](UWillowSkelControlLerpSingleBone &self){return self.bAdjustRotationRateByFireInterval;}, [](UWillowSkelControlLerpSingleBone &self, bool value){self.bAdjustRotationRateByFireInterval = value ? 1 : 0;})
		.def_readwrite("VfTable_IIWeaponBoneController", &UWillowSkelControlLerpSingleBone::VfTable_IIWeaponBoneController, py::return_value_policy::reference)
		.def_readwrite("RotationExtent", &UWillowSkelControlLerpSingleBone::RotationExtent, py::return_value_policy::reference)
		.def_readwrite("RotationRate", &UWillowSkelControlLerpSingleBone::RotationRate)
		.def_readwrite("IncrementSize", &UWillowSkelControlLerpSingleBone::IncrementSize)
		.def_readwrite("StartRotation", &UWillowSkelControlLerpSingleBone::StartRotation, py::return_value_policy::reference)
		.def_readwrite("DestinationRotation", &UWillowSkelControlLerpSingleBone::DestinationRotation, py::return_value_policy::reference)
		.def_readwrite("RemainingRotations", &UWillowSkelControlLerpSingleBone::RemainingRotations)
		.def_readwrite("CurrentRotationRate", &UWillowSkelControlLerpSingleBone::CurrentRotationRate)
		.def("UnPause", &UWillowSkelControlLerpSingleBone::UnPause)
		.def("Pause", &UWillowSkelControlLerpSingleBone::Pause)
		.def("Stop", &UWillowSkelControlLerpSingleBone::Stop)
		.def("SpinImpulseOnFire", &UWillowSkelControlLerpSingleBone::SpinImpulseOnFire)
		.def("EndFire", &UWillowSkelControlLerpSingleBone::EndFire)
		.def("BeginFire", &UWillowSkelControlLerpSingleBone::BeginFire)
		.def("IncrementWeaponBoneControl", &UWillowSkelControlLerpSingleBone::IncrementWeaponBoneControl)
		.def("GetControlName", &UWillowSkelControlLerpSingleBone::GetControlName, py::return_value_policy::reference)
		;
	py::class_< USeqAct_AllPlayersInMesh, USequenceAction >(m, "USeqAct_AllPlayersInMesh")
		.def_property("bAllActorsInMesh", [](USeqAct_AllPlayersInMesh &self){return self.bAllActorsInMesh;}, [](USeqAct_AllPlayersInMesh &self, bool value){self.bAllActorsInMesh = value ? 1 : 0;})
		.def_readwrite("Meshes", &USeqAct_AllPlayersInMesh::Meshes, py::return_value_policy::reference)
		.def("AllPlayersInMesh", &USeqAct_AllPlayersInMesh::AllPlayersInMesh)
		.def("MeshEncompassesActor", &USeqAct_AllPlayersInMesh::MeshEncompassesActor)
		.def("PlayerIsInAMesh", &USeqAct_AllPlayersInMesh::PlayerIsInAMesh)
		;
	py::class_< USeqAct_AttachPlayerPawnToBase, USequenceAction >(m, "USeqAct_AttachPlayerPawnToBase")
		.def_property("bDetach", [](USeqAct_AttachPlayerPawnToBase &self){return self.bDetach;}, [](USeqAct_AttachPlayerPawnToBase &self, bool value){self.bDetach = value ? 1 : 0;})
		.def_property("bHardAttach", [](USeqAct_AttachPlayerPawnToBase &self){return self.bHardAttach;}, [](USeqAct_AttachPlayerPawnToBase &self, bool value){self.bHardAttach = value ? 1 : 0;})
		.def_property("bUseRelativeOffset", [](USeqAct_AttachPlayerPawnToBase &self){return self.bUseRelativeOffset;}, [](USeqAct_AttachPlayerPawnToBase &self, bool value){self.bUseRelativeOffset = value ? 1 : 0;})
		.def_property("bUseRelativeRotation", [](USeqAct_AttachPlayerPawnToBase &self){return self.bUseRelativeRotation;}, [](USeqAct_AttachPlayerPawnToBase &self, bool value){self.bUseRelativeRotation = value ? 1 : 0;})
		.def_readwrite("BoneName", &USeqAct_AttachPlayerPawnToBase::BoneName, py::return_value_policy::reference)
		.def_readwrite("RelativeOffset", &USeqAct_AttachPlayerPawnToBase::RelativeOffset, py::return_value_policy::reference)
		.def_readwrite("RelativeRotation", &USeqAct_AttachPlayerPawnToBase::RelativeRotation, py::return_value_policy::reference)
		.def_readwrite("PhysicsMode", &USeqAct_AttachPlayerPawnToBase::PhysicsMode)
		;
	py::class_< USeqAct_ConditionallyLoadCommons, USequenceAction >(m, "USeqAct_ConditionallyLoadCommons")
		;
	py::class_< USeqAct_DiscardInventory, USequenceAction >(m, "USeqAct_DiscardInventory")
		.def_property("bSpawnPickupsForOldInventory", [](USeqAct_DiscardInventory &self){return self.bSpawnPickupsForOldInventory;}, [](USeqAct_DiscardInventory &self, bool value){self.bSpawnPickupsForOldInventory = value ? 1 : 0;})
		.def_property("bRepopulateInventory", [](USeqAct_DiscardInventory &self){return self.bRepopulateInventory;}, [](USeqAct_DiscardInventory &self, bool value){self.bRepopulateInventory = value ? 1 : 0;})
		.def("eventOnActivated", &USeqAct_DiscardInventory::eventOnActivated)
		;
	py::class_< USeqAct_DiscoverLevelChallengeObject, USequenceAction >(m, "USeqAct_DiscoverLevelChallengeObject")
		.def_property("bIgnoreNumbering", [](USeqAct_DiscoverLevelChallengeObject &self){return self.bIgnoreNumbering;}, [](USeqAct_DiscoverLevelChallengeObject &self, bool value){self.bIgnoreNumbering = value ? 1 : 0;})
		.def_readwrite("LevelChallengeObject", &USeqAct_DiscoverLevelChallengeObject::LevelChallengeObject, py::return_value_policy::reference)
		;
	py::class_< USeqAct_DisplayTrainingDefinitionMessage, USequenceAction >(m, "USeqAct_DisplayTrainingDefinitionMessage")
		.def_readwrite("Duration", &USeqAct_DisplayTrainingDefinitionMessage::Duration)
		;
	py::class_< USeqAct_DisplayTrainingMessage, USequenceAction >(m, "USeqAct_DisplayTrainingMessage")
		.def_property("PausesGame", [](USeqAct_DisplayTrainingMessage &self){return self.PausesGame;}, [](USeqAct_DisplayTrainingMessage &self, bool value){self.PausesGame = value ? 1 : 0;})
		.def_property("bMandatory", [](USeqAct_DisplayTrainingMessage &self){return self.bMandatory;}, [](USeqAct_DisplayTrainingMessage &self, bool value){self.bMandatory = value ? 1 : 0;})
		.def_readwrite("Key", &USeqAct_DisplayTrainingMessage::Key, py::return_value_policy::reference)
		.def_readwrite("TitleKey", &USeqAct_DisplayTrainingMessage::TitleKey, py::return_value_policy::reference)
		.def_readwrite("Duration", &USeqAct_DisplayTrainingMessage::Duration)
		.def_readwrite("HUDInitializationFrame", &USeqAct_DisplayTrainingMessage::HUDInitializationFrame, py::return_value_policy::reference)
		.def_readwrite("PauseContinueDelay", &USeqAct_DisplayTrainingMessage::PauseContinueDelay)
		;
	py::class_< USeqAct_DisplayWillowHUDMessage, USequenceAction >(m, "USeqAct_DisplayWillowHUDMessage")
		.def_readwrite("MessageType", &USeqAct_DisplayWillowHUDMessage::MessageType)
		.def_readwrite("MarkupString", &USeqAct_DisplayWillowHUDMessage::MarkupString, py::return_value_policy::reference)
		.def_readwrite("Duration", &USeqAct_DisplayWillowHUDMessage::Duration)
		;
	py::class_< USeqAct_ExecuteSkill, USequenceAction >(m, "USeqAct_ExecuteSkill")
		.def_property("bAllowMultipleInstancesOfSkill", [](USeqAct_ExecuteSkill &self){return self.bAllowMultipleInstancesOfSkill;}, [](USeqAct_ExecuteSkill &self, bool value){self.bAllowMultipleInstancesOfSkill = value ? 1 : 0;})
		.def_property("bIsSkillActive", [](USeqAct_ExecuteSkill &self){return self.bIsSkillActive;}, [](USeqAct_ExecuteSkill &self, bool value){self.bIsSkillActive = value ? 1 : 0;})
		.def_readwrite("SkillEffect", &USeqAct_ExecuteSkill::SkillEffect, py::return_value_policy::reference)
		.def("eventExecuteSkill", &USeqAct_ExecuteSkill::eventExecuteSkill)
		;
	py::class_< USeqAct_GetAttributeValue, USequenceAction >(m, "USeqAct_GetAttributeValue")
		.def_readwrite("AttributeDef", &USeqAct_GetAttributeValue::AttributeDef, py::return_value_policy::reference)
		.def_readwrite("ResultValue", &USeqAct_GetAttributeValue::ResultValue)
		;
	py::class_< USeqAct_LoadingMovie, USequenceAction >(m, "USeqAct_LoadingMovie")
		.def_property("bShowMovie", [](USeqAct_LoadingMovie &self){return self.bShowMovie;}, [](USeqAct_LoadingMovie &self, bool value){self.bShowMovie = value ? 1 : 0;})
		.def_property("bPauseAfterHide", [](USeqAct_LoadingMovie &self){return self.bPauseAfterHide;}, [](USeqAct_LoadingMovie &self, bool value){self.bPauseAfterHide = value ? 1 : 0;})
		.def_readwrite("MovieName", &USeqAct_LoadingMovie::MovieName, py::return_value_policy::reference)
		.def_readwrite("PauseDuration", &USeqAct_LoadingMovie::PauseDuration)
		.def_readwrite("KeepPlayingDuration", &USeqAct_LoadingMovie::KeepPlayingDuration)
		;
	py::class_< USeqAct_MathBase, USequenceAction >(m, "USeqAct_MathBase")
		.def_readwrite("Operation", &USeqAct_MathBase::Operation)
		;
	py::class_< USeqAct_MathFloat, USeqAct_MathBase >(m, "USeqAct_MathFloat")
		.def_readwrite("ValueA", &USeqAct_MathFloat::ValueA)
		.def_readwrite("ValueB", &USeqAct_MathFloat::ValueB)
		.def_readwrite("Result", &USeqAct_MathFloat::Result)
		;
	py::class_< USeqAct_MathInteger, USeqAct_MathBase >(m, "USeqAct_MathInteger")
		.def_readwrite("ValueA", &USeqAct_MathInteger::ValueA)
		.def_readwrite("ValueB", &USeqAct_MathInteger::ValueB)
		.def_readwrite("Result", &USeqAct_MathInteger::Result)
		;
	py::class_< USeqAct_ModifyHUDElement, USequenceAction >(m, "USeqAct_ModifyHUDElement")
		.def_property("bDisplayOnHUD", [](USeqAct_ModifyHUDElement &self){return self.bDisplayOnHUD;}, [](USeqAct_ModifyHUDElement &self, bool value){self.bDisplayOnHUD = value ? 1 : 0;})
		.def_readwrite("HUDElement", &USeqAct_ModifyHUDElement::HUDElement)
		.def_readwrite("ResPoolDefinition", &USeqAct_ModifyHUDElement::ResPoolDefinition, py::return_value_policy::reference)
		;
	py::class_< USeqAct_PlayBinkMovie, USeqAct_Latent >(m, "USeqAct_PlayBinkMovie")
		.def_property("PlayStreamed", [](USeqAct_PlayBinkMovie &self){return self.PlayStreamed;}, [](USeqAct_PlayBinkMovie &self, bool value){self.PlayStreamed = value ? 1 : 0;})
		.def_property("BlockUntilFinished", [](USeqAct_PlayBinkMovie &self){return self.BlockUntilFinished;}, [](USeqAct_PlayBinkMovie &self, bool value){self.BlockUntilFinished = value ? 1 : 0;})
		.def_property("LoopPlayback", [](USeqAct_PlayBinkMovie &self){return self.LoopPlayback;}, [](USeqAct_PlayBinkMovie &self, bool value){self.LoopPlayback = value ? 1 : 0;})
		.def_readwrite("BinkMovieName", &USeqAct_PlayBinkMovie::BinkMovieName, py::return_value_policy::reference)
		;
	py::class_< USeqAct_PossessForPlayer, USequenceAction >(m, "USeqAct_PossessForPlayer")
		.def_property("bDestroyOldPawn", [](USeqAct_PossessForPlayer &self){return self.bDestroyOldPawn;}, [](USeqAct_PossessForPlayer &self, bool value){self.bDestroyOldPawn = value ? 1 : 0;})
		.def_property("bHideOldPawn", [](USeqAct_PossessForPlayer &self){return self.bHideOldPawn;}, [](USeqAct_PossessForPlayer &self, bool value){self.bHideOldPawn = value ? 1 : 0;})
		;
	py::class_< USeqAct_PrimaryPlayerBusyDelay, USeqAct_Latent >(m, "USeqAct_PrimaryPlayerBusyDelay")
		.def_readwrite("PrimaryPlayer", &USeqAct_PrimaryPlayerBusyDelay::PrimaryPlayer, py::return_value_policy::reference)
		.def("eventUpdate", &USeqAct_PrimaryPlayerBusyDelay::eventUpdate)
		;
	py::class_< USeqAct_ProceduralSwitch, USequenceAction >(m, "USeqAct_ProceduralSwitch")
		.def_readwrite("Possibilities", &USeqAct_ProceduralSwitch::Possibilities, py::return_value_policy::reference)
		;
	py::class_< USeqAct_ProceduralSwitchNumeric, USequenceAction >(m, "USeqAct_ProceduralSwitchNumeric")
		.def_readwrite("Possibilities", &USeqAct_ProceduralSwitchNumeric::Possibilities, py::return_value_policy::reference)
		;
	py::class_< USeqAct_SetChallengeCompleted, USequenceAction >(m, "USeqAct_SetChallengeCompleted")
		.def_readwrite("ChallengeDef", &USeqAct_SetChallengeCompleted::ChallengeDef, py::return_value_policy::reference)
		;
	py::class_< USeqAct_SetShadowParent, USequenceAction >(m, "USeqAct_SetShadowParent")
		;
	py::class_< USeqAct_TimedMessage, USeqAct_Log >(m, "USeqAct_TimedMessage")
		.def_readwrite("MessageTime", &USeqAct_TimedMessage::MessageTime)
		;
	py::class_< USeqCond_HasValidSaveGame, USequenceCondition >(m, "USeqCond_HasValidSaveGame")
		;
	py::class_< USeqCond_IsPlayerCharacterClass, USequenceCondition >(m, "USeqCond_IsPlayerCharacterClass")
		;
	py::class_< USeqEvent_WorldDiscoveryArea, USequenceEvent >(m, "USeqEvent_WorldDiscoveryArea")
		;
	py::class_< USeqVar_OverpowerLevel, USeqVar_Int >(m, "USeqVar_OverpowerLevel")
		;
	py::class_< USeqVar_PrimaryLocalPlayer, USeqVar_Object >(m, "USeqVar_PrimaryLocalPlayer")
		;
	py::class_< UWillowSeqAct_ActivateInstancedBehaviorSequences, USequenceAction >(m, "UWillowSeqAct_ActivateInstancedBehaviorSequences")
		.def_property("bCustomObjComment", [](UWillowSeqAct_ActivateInstancedBehaviorSequences &self){return self.bCustomObjComment;}, [](UWillowSeqAct_ActivateInstancedBehaviorSequences &self, bool value){self.bCustomObjComment = value ? 1 : 0;})
		.def_readwrite("Mission", &UWillowSeqAct_ActivateInstancedBehaviorSequences::Mission, py::return_value_policy::reference)
		.def_readwrite("MissionObjective", &UWillowSeqAct_ActivateInstancedBehaviorSequences::MissionObjective, py::return_value_policy::reference)
		.def_readwrite("SequenceName", &UWillowSeqAct_ActivateInstancedBehaviorSequences::SequenceName, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_AIScripted, USeqAct_Latent >(m, "UWillowSeqAct_AIScripted")
		.def_readwrite("LookAt", &UWillowSeqAct_AIScripted::LookAt, py::return_value_policy::reference)
		.def_readwrite("Destination", &UWillowSeqAct_AIScripted::Destination, py::return_value_policy::reference)
		.def_readwrite("Stance", &UWillowSeqAct_AIScripted::Stance)
		.def_readwrite("FocusStyle", &UWillowSeqAct_AIScripted::FocusStyle)
		;
	py::class_< UWillowSeqAct_AIScriptedAnim, USeqAct_Latent >(m, "UWillowSeqAct_AIScriptedAnim")
		.def_property("bHoldAI", [](UWillowSeqAct_AIScriptedAnim &self){return self.bHoldAI;}, [](UWillowSeqAct_AIScriptedAnim &self, bool value){self.bHoldAI = value ? 1 : 0;})
		.def_readwrite("Anim", &UWillowSeqAct_AIScriptedAnim::Anim, py::return_value_policy::reference)
		.def_readwrite("EditInlineAnim", &UWillowSeqAct_AIScriptedAnim::EditInlineAnim, py::return_value_policy::reference)
		.def("GetAnim", &UWillowSeqAct_AIScriptedAnim::GetAnim, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_CompleteMission, USequenceAction >(m, "UWillowSeqAct_CompleteMission")
		.def_readwrite("AssociatedMission", &UWillowSeqAct_CompleteMission::AssociatedMission, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_ConfigureBossMusic, USequenceAction >(m, "UWillowSeqAct_ConfigureBossMusic")
		.def_readwrite("BossAkState", &UWillowSeqAct_ConfigureBossMusic::BossAkState, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_ConfigureCustomAmbientMusic, USequenceAction >(m, "UWillowSeqAct_ConfigureCustomAmbientMusic")
		.def_readwrite("AmbientMusicAkState", &UWillowSeqAct_ConfigureCustomAmbientMusic::AmbientMusicAkState, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_ConfigureLevelMusic, USequenceAction >(m, "UWillowSeqAct_ConfigureLevelMusic")
		.def_readwrite("MusicStartAkEvent", &UWillowSeqAct_ConfigureLevelMusic::MusicStartAkEvent, py::return_value_policy::reference)
		.def_readwrite("MusicStopAkEvent", &UWillowSeqAct_ConfigureLevelMusic::MusicStopAkEvent, py::return_value_policy::reference)
		.def_readwrite("AmbientAkState", &UWillowSeqAct_ConfigureLevelMusic::AmbientAkState, py::return_value_policy::reference)
		.def_readwrite("CombatAkState", &UWillowSeqAct_ConfigureLevelMusic::CombatAkState, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_CoordinateOperations, USequenceAction >(m, "UWillowSeqAct_CoordinateOperations")
		.def_readwrite("AllOperations", &UWillowSeqAct_CoordinateOperations::AllOperations, py::return_value_policy::reference)
		.def_readwrite("OperationsRemaining", &UWillowSeqAct_CoordinateOperations::OperationsRemaining, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_DayNightCycle, USeqAct_Interp >(m, "UWillowSeqAct_DayNightCycle")
		.def("TogglePauseDayCycle", &UWillowSeqAct_DayNightCycle::TogglePauseDayCycle)
		.def("SetTimeOfDay", &UWillowSeqAct_DayNightCycle::SetTimeOfDay)
		;
	py::class_< UWillowSeqAct_DisableCombatMusicLogic, USequenceAction >(m, "UWillowSeqAct_DisableCombatMusicLogic")
		;
	py::class_< UWillowSeqAct_EnableCombatMusicLogic, USequenceAction >(m, "UWillowSeqAct_EnableCombatMusicLogic")
		;
	py::class_< UWillowSeqAct_GiveMission, USequenceAction >(m, "UWillowSeqAct_GiveMission")
		.def_readwrite("AssociatedMission", &UWillowSeqAct_GiveMission::AssociatedMission, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_InterpMenu, USeqAct_Interp >(m, "UWillowSeqAct_InterpMenu")
		.def_readwrite("IdleTime", &UWillowSeqAct_InterpMenu::IdleTime)
		.def_readwrite("ControllerSensitivityScale", &UWillowSeqAct_InterpMenu::ControllerSensitivityScale)
		.def_readwrite("MouseSensitivityScale", &UWillowSeqAct_InterpMenu::MouseSensitivityScale)
		.def_readwrite("AutoPlayRate", &UWillowSeqAct_InterpMenu::AutoPlayRate)
		.def_readwrite("ManualPlayRate", &UWillowSeqAct_InterpMenu::ManualPlayRate)
		.def_readwrite("InputDelta", &UWillowSeqAct_InterpMenu::InputDelta)
		.def_readwrite("InputTime", &UWillowSeqAct_InterpMenu::InputTime)
		.def("InputAxis", &UWillowSeqAct_InterpMenu::InputAxis)
		;
	py::class_< UWillowSeqAct_InterpPawn, USeqAct_Latent >(m, "UWillowSeqAct_InterpPawn")
		.def_property("bLinear", [](UWillowSeqAct_InterpPawn &self){return self.bLinear;}, [](UWillowSeqAct_InterpPawn &self, bool value){self.bLinear = value ? 1 : 0;})
		.def_readwrite("InterpSpeed", &UWillowSeqAct_InterpPawn::InterpSpeed)
		.def_readwrite("Goal", &UWillowSeqAct_InterpPawn::Goal, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_MissionCustomEvent, USequenceAction >(m, "UWillowSeqAct_MissionCustomEvent")
		.def_readwrite("AssociatedMission", &UWillowSeqAct_MissionCustomEvent::AssociatedMission, py::return_value_policy::reference)
		.def_readwrite("EventName", &UWillowSeqAct_MissionCustomEvent::EventName, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_PrepareMapChangeFromDefinition, USeqAct_PrepareMapChange >(m, "UWillowSeqAct_PrepareMapChangeFromDefinition")
		.def_property("bAllowVehicles", [](UWillowSeqAct_PrepareMapChangeFromDefinition &self){return self.bAllowVehicles;}, [](UWillowSeqAct_PrepareMapChangeFromDefinition &self, bool value){self.bAllowVehicles = value ? 1 : 0;})
		.def_readwrite("DefaultMap", &UWillowSeqAct_PrepareMapChangeFromDefinition::DefaultMap, py::return_value_policy::reference)
		.def("GetPersistentMap", &UWillowSeqAct_PrepareMapChangeFromDefinition::GetPersistentMap, py::return_value_policy::reference)
		.def("SetPersistentMap", &UWillowSeqAct_PrepareMapChangeFromDefinition::SetPersistentMap)
		;
	py::class_< UWillowSeqAct_PrepareSavedMapChange, USeqAct_PrepareMapChange >(m, "UWillowSeqAct_PrepareSavedMapChange")
		;
	py::class_< UWillowSeqAct_QueryTeleporterStatus, USequenceAction >(m, "UWillowSeqAct_QueryTeleporterStatus")
		;
	py::class_< UWillowSeqAct_ReleaseTeleporterHeldLevel, USequenceAction >(m, "UWillowSeqAct_ReleaseTeleporterHeldLevel")
		;
	py::class_< UWillowSeqAct_ResurrectPlayer, USequenceAction >(m, "UWillowSeqAct_ResurrectPlayer")
		.def("eventOnActivated", &UWillowSeqAct_ResurrectPlayer::eventOnActivated)
		;
	py::class_< UWillowSeqAct_RunCustomEvent, USequenceAction >(m, "UWillowSeqAct_RunCustomEvent")
		.def_readwrite("CustomEventName", &UWillowSeqAct_RunCustomEvent::CustomEventName, py::return_value_policy::reference)
		.def_readwrite("EventInstigator", &UWillowSeqAct_RunCustomEvent::EventInstigator, py::return_value_policy::reference)
		.def_readwrite("OtherEventParticipant", &UWillowSeqAct_RunCustomEvent::OtherEventParticipant, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_SetAIFlag, USequenceAction >(m, "UWillowSeqAct_SetAIFlag")
		.def_property("bFlagState", [](UWillowSeqAct_SetAIFlag &self){return self.bFlagState;}, [](UWillowSeqAct_SetAIFlag &self, bool value){self.bFlagState = value ? 1 : 0;})
		.def_readwrite("FlagDefinition", &UWillowSeqAct_SetAIFlag::FlagDefinition, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_SetInteractionProxyState, USequenceAction >(m, "UWillowSeqAct_SetInteractionProxyState")
		.def_property("bPassEventsToKismet", [](UWillowSeqAct_SetInteractionProxyState &self){return self.bPassEventsToKismet;}, [](UWillowSeqAct_SetInteractionProxyState &self, bool value){self.bPassEventsToKismet = value ? 1 : 0;})
		.def("eventOnActivated", &UWillowSeqAct_SetInteractionProxyState::eventOnActivated)
		;
	py::class_< UWillowSeqAct_SetLockout, USequenceAction >(m, "UWillowSeqAct_SetLockout")
		.def_readwrite("LockoutDef", &UWillowSeqAct_SetLockout::LockoutDef, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_SetLookAtActor, USequenceAction >(m, "UWillowSeqAct_SetLookAtActor")
		.def_readwrite("Offset", &UWillowSeqAct_SetLookAtActor::Offset, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_ToggleCinematicModeAffectsAll, USequenceAction >(m, "UWillowSeqAct_ToggleCinematicModeAffectsAll")
		;
	py::class_< UWillowSeqAct_TogglePostRenderFor, USequenceAction >(m, "UWillowSeqAct_TogglePostRenderFor")
		;
	py::class_< UWillowSeqAct_ToggleRestrictions, USequenceAction >(m, "UWillowSeqAct_ToggleRestrictions")
		.def_property("bToggleWeapons", [](UWillowSeqAct_ToggleRestrictions &self){return self.bToggleWeapons;}, [](UWillowSeqAct_ToggleRestrictions &self, bool value){self.bToggleWeapons = value ? 1 : 0;})
		.def_property("bToggleTeleporters", [](UWillowSeqAct_ToggleRestrictions &self){return self.bToggleTeleporters;}, [](UWillowSeqAct_ToggleRestrictions &self, bool value){self.bToggleTeleporters = value ? 1 : 0;})
		;
	py::class_< UWillowSeqAct_TravelStationTeleport, USequenceAction >(m, "UWillowSeqAct_TravelStationTeleport")
		;
	py::class_< UWillowSeqAct_TurnOffCombatMusic, USequenceAction >(m, "UWillowSeqAct_TurnOffCombatMusic")
		.def_property("bEnableAmbientMusic", [](UWillowSeqAct_TurnOffCombatMusic &self){return self.bEnableAmbientMusic;}, [](UWillowSeqAct_TurnOffCombatMusic &self, bool value){self.bEnableAmbientMusic = value ? 1 : 0;})
		.def_readwrite("FadeOutTime", &UWillowSeqAct_TurnOffCombatMusic::FadeOutTime)
		;
	py::class_< UWillowSeqAct_WaypointObjective, USequenceAction >(m, "UWillowSeqAct_WaypointObjective")
		.def_property("bRemoveObjective", [](UWillowSeqAct_WaypointObjective &self){return self.bRemoveObjective;}, [](UWillowSeqAct_WaypointObjective &self, bool value){self.bRemoveObjective = value ? 1 : 0;})
		.def_readwrite("WaypointInfo", &UWillowSeqAct_WaypointObjective::WaypointInfo, py::return_value_policy::reference)
		.def_readwrite("WaypointObjective", &UWillowSeqAct_WaypointObjective::WaypointObjective, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqCond_AnyPlayerHasMarketingUnlock, USequenceCondition >(m, "UWillowSeqCond_AnyPlayerHasMarketingUnlock")
		.def_readwrite("MarketingUnlockDef", &UWillowSeqCond_AnyPlayerHasMarketingUnlock::MarketingUnlockDef, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqCond_CheckLockout, USequenceCondition >(m, "UWillowSeqCond_CheckLockout")
		.def_readwrite("LockoutDef", &UWillowSeqCond_CheckLockout::LockoutDef, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqCond_GoStraightToMainMenu, USequenceCondition >(m, "UWillowSeqCond_GoStraightToMainMenu")
		;
	py::class_< UWillowSeqCond_IsCombatMusicPlaying, USequenceCondition >(m, "UWillowSeqCond_IsCombatMusicPlaying")
		;
	py::class_< UWillowSeqCond_IsPlayerServer, USequenceCondition >(m, "UWillowSeqCond_IsPlayerServer")
		;
	py::class_< UWillowSeqCond_MultiplePlayersInGame, USequenceCondition >(m, "UWillowSeqCond_MultiplePlayersInGame")
		;
	py::class_< UWillowSeqCond_ShouldStartNewGameCinematics, USequenceCondition >(m, "UWillowSeqCond_ShouldStartNewGameCinematics")
		;
	py::class_< UWillowSeqCond_SplitScreen, USequenceCondition >(m, "UWillowSeqCond_SplitScreen")
		;
	py::class_< UWillowSeqEvent_CombatMusicStarted, USequenceEvent >(m, "UWillowSeqEvent_CombatMusicStarted")
		;
	py::class_< UWillowSeqEvent_CustomEvent, USequenceEvent >(m, "UWillowSeqEvent_CustomEvent")
		.def_readwrite("EventName", &UWillowSeqEvent_CustomEvent::EventName, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqEvent_FastTravel, USequenceEvent >(m, "UWillowSeqEvent_FastTravel")
		;
	py::class_< UWillowSeqEvent_MissionRemoteEvent, USequenceEvent >(m, "UWillowSeqEvent_MissionRemoteEvent")
		.def_readwrite("AssociatedMissionDefinition", &UWillowSeqEvent_MissionRemoteEvent::AssociatedMissionDefinition, py::return_value_policy::reference)
		.def_readwrite("EventName", &UWillowSeqEvent_MissionRemoteEvent::EventName, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqEvent_VehicleSpawned, USequenceEvent >(m, "UWillowSeqEvent_VehicleSpawned")
		.def_readwrite("SpawnedVehicle", &UWillowSeqEvent_VehicleSpawned::SpawnedVehicle, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqVar_DayNightCycleVariable, USeqVar_Float >(m, "UWillowSeqVar_DayNightCycleVariable")
		;
	py::class_< UWillowSeqVar_DayNightCycleRate, UWillowSeqVar_DayNightCycleVariable >(m, "UWillowSeqVar_DayNightCycleRate")
		;
	py::class_< UWillowSeqVar_TimeOfDay, UWillowSeqVar_DayNightCycleVariable >(m, "UWillowSeqVar_TimeOfDay")
		;
	py::class_< UActionSkillStateExpressionEvaluator, UExpressionEvaluator >(m, "UActionSkillStateExpressionEvaluator")
		.def_property("bIsRunning", [](UActionSkillStateExpressionEvaluator &self){return self.bIsRunning;}, [](UActionSkillStateExpressionEvaluator &self, bool value){self.bIsRunning = value ? 1 : 0;})
		.def_property("bIsNotRunning", [](UActionSkillStateExpressionEvaluator &self){return self.bIsNotRunning;}, [](UActionSkillStateExpressionEvaluator &self, bool value){self.bIsNotRunning = value ? 1 : 0;})
		.def("Evaluate", &UActionSkillStateExpressionEvaluator::Evaluate)
		;
	py::class_< UHealthStateExpressionEvaluator, UExpressionEvaluator >(m, "UHealthStateExpressionEvaluator")
		.def_property("bHealthy", [](UHealthStateExpressionEvaluator &self){return self.bHealthy;}, [](UHealthStateExpressionEvaluator &self, bool value){self.bHealthy = value ? 1 : 0;})
		.def_property("bInjured", [](UHealthStateExpressionEvaluator &self){return self.bInjured;}, [](UHealthStateExpressionEvaluator &self, bool value){self.bInjured = value ? 1 : 0;})
		.def_property("bDead", [](UHealthStateExpressionEvaluator &self){return self.bDead;}, [](UHealthStateExpressionEvaluator &self, bool value){self.bDead = value ? 1 : 0;})
		.def("Evaluate", &UHealthStateExpressionEvaluator::Evaluate)
		;
	py::class_< UNumberWeaponsEquippedExpressionEvaluator, UExpressionEvaluator >(m, "UNumberWeaponsEquippedExpressionEvaluator")
		.def_readwrite("NumberOfWeapons", &UNumberWeaponsEquippedExpressionEvaluator::NumberOfWeapons)
		.def("Evaluate", &UNumberWeaponsEquippedExpressionEvaluator::Evaluate)
		;
	py::class_< UPlayerActionExpressionEvaluator, UExpressionEvaluator >(m, "UPlayerActionExpressionEvaluator")
		.def_readwrite("EvalActions", &UPlayerActionExpressionEvaluator::EvalActions, py::return_value_policy::reference)
		.def("Evaluate", &UPlayerActionExpressionEvaluator::Evaluate)
		;
	py::class_< USkillAttributeContextResolver, UAttributeContextResolver >(m, "USkillAttributeContextResolver")
		.def_readwrite("AssociatedSkill", &USkillAttributeContextResolver::AssociatedSkill, py::return_value_policy::reference)
		.def_readwrite("AssociatedSkillPathName", &USkillAttributeContextResolver::AssociatedSkillPathName, py::return_value_policy::reference)
		;
	py::class_< ASkillEffectManager, AActor >(m, "ASkillEffectManager")
		.def_property("bAllowSkillActivation", [](ASkillEffectManager &self){return self.bAllowSkillActivation;}, [](ASkillEffectManager &self, bool value){self.bAllowSkillActivation = value ? 1 : 0;})
		.def_property("bUpdatingSkills", [](ASkillEffectManager &self){return self.bUpdatingSkills;}, [](ASkillEffectManager &self, bool value){self.bUpdatingSkills = value ? 1 : 0;})
		.def_property("bAddedHUDTrackedSkillsLastTick", [](ASkillEffectManager &self){return self.bAddedHUDTrackedSkillsLastTick;}, [](ASkillEffectManager &self, bool value){self.bAddedHUDTrackedSkillsLastTick = value ? 1 : 0;})
		.def_readwrite("DeferredSkillActivationList", &ASkillEffectManager::DeferredSkillActivationList, py::return_value_policy::reference)
		.def_readwrite("ActiveSkills", &ASkillEffectManager::ActiveSkills, py::return_value_policy::reference)
		.def("TriggerTakeHitEvents", &ASkillEffectManager::TriggerTakeHitEvents)
		.def("GetActiveSkillForInstigatorByDefinition", &ASkillEffectManager::GetActiveSkillForInstigatorByDefinition, py::return_value_policy::reference)
		.def("GetActiveSkillForInstigator", &ASkillEffectManager::GetActiveSkillForInstigator, py::return_value_policy::reference)
		.def("UpdateSkillGrade", &ASkillEffectManager::UpdateSkillGrade)
		.def("NotifySkillDamagedEvent", &ASkillEffectManager::NotifySkillDamagedEvent)
		.def("NotifySkillEvent", &ASkillEffectManager::NotifySkillEvent)
		.def("IsSkillActive", &ASkillEffectManager::IsSkillActive)
		.def("IsSkillPaused", &ASkillEffectManager::IsSkillPaused)
		.def("eventDeactivateSkill", &ASkillEffectManager::eventDeactivateSkill)
		.def("eventActivateSkill", &ASkillEffectManager::eventActivateSkill)
		.def("DeferActivateSkill", &ASkillEffectManager::DeferActivateSkill)
		.def("RefreshSkillsAffectingInstigator", &ASkillEffectManager::RefreshSkillsAffectingInstigator)
		.def("RefreshSkillsForInstigator", &ASkillEffectManager::RefreshSkillsForInstigator)
		.def("DeactivateAllSkillTreeSkillsForPlayer", &ASkillEffectManager::DeactivateAllSkillTreeSkillsForPlayer)
		.def("DeactivateAllSkillsForInstigator", &ASkillEffectManager::DeactivateAllSkillsForInstigator)
		;
	py::class_< USkillExpressionEvaluator, UExpressionEvaluator >(m, "USkillExpressionEvaluator")
		.def_readwrite("Skill", &USkillExpressionEvaluator::Skill, py::return_value_policy::reference)
		.def_readwrite("SkillState", &USkillExpressionEvaluator::SkillState)
		.def("Evaluate", &USkillExpressionEvaluator::Evaluate)
		;
	py::class_< UVehiclePassengerExpressionEvaluator, UExpressionEvaluator >(m, "UVehiclePassengerExpressionEvaluator")
		.def_property("bNotInVehicle", [](UVehiclePassengerExpressionEvaluator &self){return self.bNotInVehicle;}, [](UVehiclePassengerExpressionEvaluator &self, bool value){self.bNotInVehicle = value ? 1 : 0;})
		.def_property("bDriver", [](UVehiclePassengerExpressionEvaluator &self){return self.bDriver;}, [](UVehiclePassengerExpressionEvaluator &self, bool value){self.bDriver = value ? 1 : 0;})
		.def_property("bPassenger", [](UVehiclePassengerExpressionEvaluator &self){return self.bPassenger;}, [](UVehiclePassengerExpressionEvaluator &self, bool value){self.bPassenger = value ? 1 : 0;})
		.def_property("bAttachedRider", [](UVehiclePassengerExpressionEvaluator &self){return self.bAttachedRider;}, [](UVehiclePassengerExpressionEvaluator &self, bool value){self.bAttachedRider = value ? 1 : 0;})
		.def("Evaluate", &UVehiclePassengerExpressionEvaluator::Evaluate)
		;
	py::class_< UWeaponActionAvailableExpressionEvaluator, UExpressionEvaluator >(m, "UWeaponActionAvailableExpressionEvaluator")
		.def("Evaluate", &UWeaponActionAvailableExpressionEvaluator::Evaluate)
		;
	py::class_< UWeaponEquippedExpressionEvaluator, UExpressionEvaluator >(m, "UWeaponEquippedExpressionEvaluator")
		.def_readwrite("WeaponType", &UWeaponEquippedExpressionEvaluator::WeaponType)
		.def("Evaluate", &UWeaponEquippedExpressionEvaluator::Evaluate)
		;
	py::class_< UAIPawnBalanceDefinition, UBaseBalanceDefinition >(m, "UAIPawnBalanceDefinition")
		.def_property("Champion", [](UAIPawnBalanceDefinition &self){return self.Champion;}, [](UAIPawnBalanceDefinition &self, bool value){self.Champion = value ? 1 : 0;})
		.def_property("bUnlockOnDeathAchievementForAllPlayers", [](UAIPawnBalanceDefinition &self){return self.bUnlockOnDeathAchievementForAllPlayers;}, [](UAIPawnBalanceDefinition &self, bool value){self.bUnlockOnDeathAchievementForAllPlayers = value ? 1 : 0;})
		.def_readwrite("VfTable_IIConstructObject", &UAIPawnBalanceDefinition::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("CanSpawnIf", &UAIPawnBalanceDefinition::CanSpawnIf, py::return_value_policy::reference)
		.def_readwrite("PlayThroughs", &UAIPawnBalanceDefinition::PlayThroughs, py::return_value_policy::reference)
		.def_readwrite("AIPawnArchetype", &UAIPawnBalanceDefinition::AIPawnArchetype, py::return_value_policy::reference)
		.def_readwrite("ActorTags", &UAIPawnBalanceDefinition::ActorTags, py::return_value_policy::reference)
		.def_readwrite("DefaultExpLevel", &UAIPawnBalanceDefinition::DefaultExpLevel, py::return_value_policy::reference)
		.def_readwrite("BaseItemGameStage", &UAIPawnBalanceDefinition::BaseItemGameStage)
		.def_readwrite("AchievementToUnlockOnDeath", &UAIPawnBalanceDefinition::AchievementToUnlockOnDeath)
		.def_readwrite("HasLookedUpFixupIndex", &UAIPawnBalanceDefinition::HasLookedUpFixupIndex)
		.def_readwrite("ItemGameStageOffset", &UAIPawnBalanceDefinition::ItemGameStageOffset, py::return_value_policy::reference)
		.def_readwrite("DefaultItemPoolIncludedLists", &UAIPawnBalanceDefinition::DefaultItemPoolIncludedLists, py::return_value_policy::reference)
		.def_readwrite("DefaultItemPoolList", &UAIPawnBalanceDefinition::DefaultItemPoolList, py::return_value_policy::reference)
		.def_readwrite("Grades", &UAIPawnBalanceDefinition::Grades, py::return_value_policy::reference)
		.def_readwrite("FixupAIPawnNameIndex", &UAIPawnBalanceDefinition::FixupAIPawnNameIndex)
		.def_readwrite("BalanceModifier", &UAIPawnBalanceDefinition::BalanceModifier, py::return_value_policy::reference)
		.def("GetTransformedKillStat", &UAIPawnBalanceDefinition::GetTransformedKillStat, py::return_value_policy::reference)
		.def("GetTransformedDisplayName", &UAIPawnBalanceDefinition::GetTransformedDisplayName, py::return_value_policy::reference)
		.def("SetupPawnItemPoolList", &UAIPawnBalanceDefinition::SetupPawnItemPoolList)
		.def("GetPawnArchetype", &UAIPawnBalanceDefinition::GetPawnArchetype, py::return_value_policy::reference)
		.def("GetPlayThroughIndex", &UAIPawnBalanceDefinition::GetPlayThroughIndex)
		;
	py::class_< UAttackLocation, UObject >(m, "UAttackLocation")
		.def_property("bRequired", [](UAttackLocation &self){return self.bRequired;}, [](UAttackLocation &self, bool value){self.bRequired = value ? 1 : 0;})
		.def("ValidLocation", &UAttackLocation::ValidLocation)
		.def("IsRunning", &UAttackLocation::IsRunning)
		.def("CanPath", &UAttackLocation::CanPath)
		;
	py::class_< UAttackLocation_Direct, UAttackLocation >(m, "UAttackLocation_Direct")
		.def("ValidLocation", &UAttackLocation_Direct::ValidLocation)
		;
	py::class_< UAttackLocation_Height, UAttackLocation >(m, "UAttackLocation_Height")
		.def_readwrite("Restriction", &UAttackLocation_Height::Restriction)
		.def_readwrite("Height", &UAttackLocation_Height::Height)
		.def("ValidLocation", &UAttackLocation_Height::ValidLocation)
		;
	py::class_< UAttackLocation_LineOfSight, UAttackLocation >(m, "UAttackLocation_LineOfSight")
		.def_property("bFullLineOfSight", [](UAttackLocation_LineOfSight &self){return self.bFullLineOfSight;}, [](UAttackLocation_LineOfSight &self, bool value){self.bFullLineOfSight = value ? 1 : 0;})
		.def_property("bMustHaveNavMesh", [](UAttackLocation_LineOfSight &self){return self.bMustHaveNavMesh;}, [](UAttackLocation_LineOfSight &self, bool value){self.bMustHaveNavMesh = value ? 1 : 0;})
		.def_readwrite("LineOfSight", &UAttackLocation_LineOfSight::LineOfSight)
		.def_readwrite("ValidTime", &UAttackLocation_LineOfSight::ValidTime)
		.def_readwrite("ArcAnglePct", &UAttackLocation_LineOfSight::ArcAnglePct)
		.def_readwrite("ArcSpeed", &UAttackLocation_LineOfSight::ArcSpeed)
		.def_readwrite("ArcStartOffset", &UAttackLocation_LineOfSight::ArcStartOffset, py::return_value_policy::reference)
		.def_readwrite("ArcEndOffset", &UAttackLocation_LineOfSight::ArcEndOffset, py::return_value_policy::reference)
		.def("ValidLocation", &UAttackLocation_LineOfSight::ValidLocation)
		;
	py::class_< UAttackLocation_MaxDistance, UAttackLocation >(m, "UAttackLocation_MaxDistance")
		.def_readwrite("MaxDistance", &UAttackLocation_MaxDistance::MaxDistance)
		.def("ValidLocation", &UAttackLocation_MaxDistance::ValidLocation)
		;
	py::class_< UAttackLocation_Move, UAttackLocation >(m, "UAttackLocation_Move")
		.def_readwrite("MaxTime", &UAttackLocation_Move::MaxTime)
		.def_readwrite("MoveDistance", &UAttackLocation_Move::MoveDistance)
		.def("ValidLocation", &UAttackLocation_Move::ValidLocation)
		;
	py::class_< UAttackLocation_ParentDistance, UAttackLocation >(m, "UAttackLocation_ParentDistance")
		.def_property("bCheckDestination", [](UAttackLocation_ParentDistance &self){return self.bCheckDestination;}, [](UAttackLocation_ParentDistance &self, bool value){self.bCheckDestination = value ? 1 : 0;})
		.def_readwrite("Restriction", &UAttackLocation_ParentDistance::Restriction)
		.def_readwrite("Distance", &UAttackLocation_ParentDistance::Distance)
		.def("ValidLocation", &UAttackLocation_ParentDistance::ValidLocation)
		;
	py::class_< UAttackLocation_Range, UAttackLocation >(m, "UAttackLocation_Range")
		.def_property("bCanPath", [](UAttackLocation_Range &self){return self.bCanPath;}, [](UAttackLocation_Range &self, bool value){self.bCanPath = value ? 1 : 0;})
		.def_readwrite("Range", &UAttackLocation_Range::Range, py::return_value_policy::reference)
		.def("ValidLocation", &UAttackLocation_Range::ValidLocation)
		.def("CanPath", &UAttackLocation_Range::CanPath)
		;
	py::class_< UAttackLocation_Side, UAttackLocation >(m, "UAttackLocation_Side")
		.def("ValidLocation", &UAttackLocation_Side::ValidLocation)
		;
	py::class_< UBehavior_AISpawn, UBehaviorBase >(m, "UBehavior_AISpawn")
		.def_property("bForceSpawn", [](UBehavior_AISpawn &self){return self.bForceSpawn;}, [](UBehavior_AISpawn &self, bool value){self.bForceSpawn = value ? 1 : 0;})
		.def_property("bSpawnFromSpawnPointInstanceData", [](UBehavior_AISpawn &self){return self.bSpawnFromSpawnPointInstanceData;}, [](UBehavior_AISpawn &self, bool value){self.bSpawnFromSpawnPointInstanceData = value ? 1 : 0;})
		.def_readwrite("SpawnPointName", &UBehavior_AISpawn::SpawnPointName, py::return_value_policy::reference)
		.def_readwrite("PopDef", &UBehavior_AISpawn::PopDef, py::return_value_policy::reference)
		.def_readwrite("SpawnContext", &UBehavior_AISpawn::SpawnContext, py::return_value_policy::reference)
		.def_readwrite("InstanceDataName", &UBehavior_AISpawn::InstanceDataName, py::return_value_policy::reference)
		.def_readwrite("OverrideContext", &UBehavior_AISpawn::OverrideContext, py::return_value_policy::reference)
		.def_readwrite("PopulationOverrideName", &UBehavior_AISpawn::PopulationOverrideName, py::return_value_policy::reference)
		.def("SpawnActor", &UBehavior_AISpawn::SpawnActor, py::return_value_policy::reference)
		.def("PublishBehaviorOutput", &UBehavior_AISpawn::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_AISpawn::ApplyBehaviorToContext)
		;
	py::class_< UDownloadableFixupAIPawnNamesDefinition, UGBXDefinition >(m, "UDownloadableFixupAIPawnNamesDefinition")
		.def_readwrite("PlayThroughThree", &UDownloadableFixupAIPawnNamesDefinition::PlayThroughThree, py::return_value_policy::reference)
		;
	py::class_< UEventFilter_OnTakeDamage, UBehaviorEventFilterBase >(m, "UEventFilter_OnTakeDamage")
		.def_readwrite("DamageThreshold", &UEventFilter_OnTakeDamage::DamageThreshold)
		;
	py::class_< UFromContextFlagValueResolver, UFlagValueResolver >(m, "UFromContextFlagValueResolver")
		.def_readwrite("MyFlagDef", &UFromContextFlagValueResolver::MyFlagDef, py::return_value_policy::reference)
		;
	py::class_< UPopulationFactoryWillowAIPawn, UPopulationFactory >(m, "UPopulationFactoryWillowAIPawn")
		.def_readwrite("WillowAIPawnArchetype", &UPopulationFactoryWillowAIPawn::WillowAIPawnArchetype, py::return_value_policy::reference)
		.def_readwrite("PawnExpLevel", &UPopulationFactoryWillowAIPawn::PawnExpLevel, py::return_value_policy::reference)
		.def_readwrite("PawnWeaponLevel", &UPopulationFactoryWillowAIPawn::PawnWeaponLevel, py::return_value_policy::reference)
		.def_readwrite("FlagsToSet", &UPopulationFactoryWillowAIPawn::FlagsToSet, py::return_value_policy::reference)
		.def_readwrite("AttributeStartingValues", &UPopulationFactoryWillowAIPawn::AttributeStartingValues, py::return_value_policy::reference)
		.def_readwrite("ItemPoolList", &UPopulationFactoryWillowAIPawn::ItemPoolList, py::return_value_policy::reference)
		.def_readwrite("ItemPoolIncludedLists", &UPopulationFactoryWillowAIPawn::ItemPoolIncludedLists, py::return_value_policy::reference)
		.def("eventGetDescriptionOfFactoryOutput", &UPopulationFactoryWillowAIPawn::eventGetDescriptionOfFactoryOutput, py::return_value_policy::reference)
		.def("eventRestorePopulatedAIPawn", &UPopulationFactoryWillowAIPawn::eventRestorePopulatedAIPawn, py::return_value_policy::reference)
		.def("CreateSavedInventory", &UPopulationFactoryWillowAIPawn::CreateSavedInventory)
		.def("eventGetPopulatedAIPawnMemento", &UPopulationFactoryWillowAIPawn::eventGetPopulatedAIPawnMemento)
		.def("eventShouldSavePopulationActor", &UPopulationFactoryWillowAIPawn::eventShouldSavePopulationActor)
		.def("eventDestroyPopulationActor", &UPopulationFactoryWillowAIPawn::eventDestroyPopulationActor)
		.def("eventCreatePopulationActor", &UPopulationFactoryWillowAIPawn::eventCreatePopulationActor, py::return_value_policy::reference)
		.def("SetupPopulationActor", &UPopulationFactoryWillowAIPawn::SetupPopulationActor)
		.def("SetFlagDefinitions", &UPopulationFactoryWillowAIPawn::SetFlagDefinitions)
		.def("ApplyPopulationDefinition", &UPopulationFactoryWillowAIPawn::ApplyPopulationDefinition)
		.def("GetAContextSourceForThePopulationActor", &UPopulationFactoryWillowAIPawn::GetAContextSourceForThePopulationActor, py::return_value_policy::reference)
		.def("eventGetSpawnVisibilityBounds", &UPopulationFactoryWillowAIPawn::eventGetSpawnVisibilityBounds, py::return_value_policy::reference)
		.def("GetActorAllegiance", &UPopulationFactoryWillowAIPawn::GetActorAllegiance, py::return_value_policy::reference)
		.def("eventGetActorSpawnCost", &UPopulationFactoryWillowAIPawn::eventGetActorSpawnCost)
		.def("eventSetupMatineeForActor", &UPopulationFactoryWillowAIPawn::eventSetupMatineeForActor)
		;
	py::class_< UPopulationFactoryBalancedAIPawn, UPopulationFactoryWillowAIPawn >(m, "UPopulationFactoryBalancedAIPawn")
		.def_property("bUseInstigatorLevel", [](UPopulationFactoryBalancedAIPawn &self){return self.bUseInstigatorLevel;}, [](UPopulationFactoryBalancedAIPawn &self, bool value){self.bUseInstigatorLevel = value ? 1 : 0;})
		.def_readwrite("PawnBalanceDefinition", &UPopulationFactoryBalancedAIPawn::PawnBalanceDefinition, py::return_value_policy::reference)
		.def("GetSpawnProbabilityAtThisGameStage", &UPopulationFactoryBalancedAIPawn::GetSpawnProbabilityAtThisGameStage)
		.def("eventGetDescriptionOfFactoryOutput", &UPopulationFactoryBalancedAIPawn::eventGetDescriptionOfFactoryOutput, py::return_value_policy::reference)
		.def("SpawnAIPawn", &UPopulationFactoryBalancedAIPawn::SpawnAIPawn, py::return_value_policy::reference)
		.def("eventRestorePopulatedAIPawn", &UPopulationFactoryBalancedAIPawn::eventRestorePopulatedAIPawn, py::return_value_policy::reference)
		.def("eventCreatePopulationActor", &UPopulationFactoryBalancedAIPawn::eventCreatePopulationActor, py::return_value_policy::reference)
		.def("ApplyAttributeStartingValues", &UPopulationFactoryBalancedAIPawn::ApplyAttributeStartingValues)
		.def("SetupBalancedPopulationActor", &UPopulationFactoryBalancedAIPawn::SetupBalancedPopulationActor)
		.def("eventGetSpawnVisibilityBounds", &UPopulationFactoryBalancedAIPawn::eventGetSpawnVisibilityBounds, py::return_value_policy::reference)
		.def("GetActorAllegiance", &UPopulationFactoryBalancedAIPawn::GetActorAllegiance, py::return_value_policy::reference)
		.def("eventGetActorSpawnCost", &UPopulationFactoryBalancedAIPawn::eventGetActorSpawnCost)
		.def("CanSpawn", &UPopulationFactoryBalancedAIPawn::CanSpawn)
		;
	py::class_< UPopulationFactoryWillowInventory, UPopulationFactory >(m, "UPopulationFactoryWillowInventory")
		.def("eventRestorePickup", &UPopulationFactoryWillowInventory::eventRestorePickup, py::return_value_policy::reference)
		.def("CreateInventoryPickup", &UPopulationFactoryWillowInventory::CreateInventoryPickup, py::return_value_policy::reference)
		.def("eventGetPopulatedPickupMemento", &UPopulationFactoryWillowInventory::eventGetPopulatedPickupMemento)
		.def("eventShouldSavePopulationActor", &UPopulationFactoryWillowInventory::eventShouldSavePopulationActor)
		;
	py::class_< URES_AIOperation, UActionResource >(m, "URES_AIOperation")
		;
	py::class_< URES_Behavior, UActionResource >(m, "URES_Behavior")
		;
	py::class_< URES_CharacterDialog, UActionResource >(m, "URES_CharacterDialog")
		;
	py::class_< URES_CustomAnimation, UActionResource >(m, "URES_CustomAnimation")
		;
	py::class_< URES_Firing, UActionResource >(m, "URES_Firing")
		;
	py::class_< URES_Moving, UActionResource >(m, "URES_Moving")
		;
	py::class_< URES_Posture, UActionResource >(m, "URES_Posture")
		;
	py::class_< URES_Skill, UActionResource >(m, "URES_Skill")
		;
	py::class_< URES_Sound, UActionResource >(m, "URES_Sound")
		;
	py::class_< URES_SpecialMovement, UActionResource >(m, "URES_SpecialMovement")
		;
	py::class_< URES_SpeedChange, UActionResource >(m, "URES_SpeedChange")
		;
	py::class_< URES_UseVehicle, UActionResource >(m, "URES_UseVehicle")
		;
	py::class_< UTargetMetaInfoValueResolver, UAttributeValueResolver >(m, "UTargetMetaInfoValueResolver")
		.def_readwrite("PropertyName", &UTargetMetaInfoValueResolver::PropertyName, py::return_value_policy::reference)
		;
	py::class_< UTransformedFlagValueResolver, UFlagValueResolver >(m, "UTransformedFlagValueResolver")
		.def_readwrite("Transform", &UTransformedFlagValueResolver::Transform)
		;
	py::class_< UWillowActionSequencePawn, UActionSequencePawn >(m, "UWillowActionSequencePawn")
		.def_readwrite("WillowAI", &UWillowActionSequencePawn::WillowAI, py::return_value_policy::reference)
		.def_readwrite("MyNavHandle", &UWillowActionSequencePawn::MyNavHandle, py::return_value_policy::reference)
		.def_readwrite("MyWillowMind", &UWillowActionSequencePawn::MyWillowMind, py::return_value_policy::reference)
		.def_readwrite("MyWillowPawn", &UWillowActionSequencePawn::MyWillowPawn, py::return_value_policy::reference)
		.def_readwrite("PathData", &UWillowActionSequencePawn::PathData, py::return_value_policy::reference)
		.def_readwrite("Target", &UWillowActionSequencePawn::Target, py::return_value_policy::reference)
		.def_readwrite("TargetRec", &UWillowActionSequencePawn::TargetRec, py::return_value_policy::reference)
		.def_readwrite("ParentTargetRec", &UWillowActionSequencePawn::ParentTargetRec, py::return_value_policy::reference)
		.def_readwrite("LastYawCheck", &UWillowActionSequencePawn::LastYawCheck)
		.def("CreateActorPath", &UWillowActionSequencePawn::CreateActorPath)
		.def("GetActorFloorLoc", &UWillowActionSequencePawn::GetActorFloorLoc, py::return_value_policy::reference)
		.def("CreateBackupFlyerPath", &UWillowActionSequencePawn::CreateBackupFlyerPath)
		.def("CreateVectorPath", &UWillowActionSequencePawn::CreateVectorPath)
		.def("GetFinalDestination", &UWillowActionSequencePawn::GetFinalDestination, py::return_value_policy::reference)
		.def("GetPointOnGround", &UWillowActionSequencePawn::GetPointOnGround, py::return_value_policy::reference)
		.def("CanMoveTo", &UWillowActionSequencePawn::CanMoveTo)
		.def("ReachedDestination", &UWillowActionSequencePawn::ReachedDestination)
		.def("FinishPath", &UWillowActionSequencePawn::FinishPath)
		.def("WaitForPath", &UWillowActionSequencePawn::WaitForPath)
		.def("FollowPath", &UWillowActionSequencePawn::FollowPath)
		.def("PathIsValid", &UWillowActionSequencePawn::PathIsValid)
		.def("InvalidatePath", &UWillowActionSequencePawn::InvalidatePath)
		.def("eventPathFind", &UWillowActionSequencePawn::eventPathFind)
		.def("TargetTooFar", &UWillowActionSequencePawn::TargetTooFar)
		.def("eventActivateEvent", &UWillowActionSequencePawn::eventActivateEvent)
		.def("IsWalking", &UWillowActionSequencePawn::IsWalking)
		.def("IsCurrentlyFlying", &UWillowActionSequencePawn::IsCurrentlyFlying)
		.def("IsFixingFlying", &UWillowActionSequencePawn::IsFixingFlying)
		.def("IsFlying", &UWillowActionSequencePawn::IsFlying)
		.def("eventStop", &UWillowActionSequencePawn::eventStop)
		.def("eventStart", &UWillowActionSequencePawn::eventStart)
		.def("eventInit", &UWillowActionSequencePawn::eventInit)
		.def("SetPawnMovementSpeed", &UWillowActionSequencePawn::SetPawnMovementSpeed)
		.def("WaitForPawnToTurn", &UWillowActionSequencePawn::WaitForPawnToTurn)
		.def("WaitForPawnToStop", &UWillowActionSequencePawn::WaitForPawnToStop)
		;
	py::class_< UAction_Burrow, UWillowActionSequencePawn >(m, "UAction_Burrow")
		.def_readwrite("BurrowEnter", &UAction_Burrow::BurrowEnter, py::return_value_policy::reference)
		.def_readwrite("BurrowExit", &UAction_Burrow::BurrowExit, py::return_value_policy::reference)
		.def("CheckCloaked", &UAction_Burrow::CheckCloaked)
		.def("SafeToUncloak", &UAction_Burrow::SafeToUncloak)
		.def("ForceUncloak", &UAction_Burrow::ForceUncloak)
		.def("ForceCloak", &UAction_Burrow::ForceCloak)
		.def("CheckStateTransition", &UAction_Burrow::CheckStateTransition)
		.def("eventStart", &UAction_Burrow::eventStart)
		;
	py::class_< UAction_GenericAttack, UAction_Burrow >(m, "UAction_GenericAttack")
		.def_property("bLimitedMovement", [](UAction_GenericAttack &self){return self.bLimitedMovement;}, [](UAction_GenericAttack &self, bool value){self.bLimitedMovement = value ? 1 : 0;})
		.def_property("bBurrowAttack", [](UAction_GenericAttack &self){return self.bBurrowAttack;}, [](UAction_GenericAttack &self, bool value){self.bBurrowAttack = value ? 1 : 0;})
		.def_property("bShootTarget", [](UAction_GenericAttack &self){return self.bShootTarget;}, [](UAction_GenericAttack &self, bool value){self.bShootTarget = value ? 1 : 0;})
		.def_property("bPathingFailed", [](UAction_GenericAttack &self){return self.bPathingFailed;}, [](UAction_GenericAttack &self, bool value){self.bPathingFailed = value ? 1 : 0;})
		.def_property("bWantsCrouchIdle", [](UAction_GenericAttack &self){return self.bWantsCrouchIdle;}, [](UAction_GenericAttack &self, bool value){self.bWantsCrouchIdle = value ? 1 : 0;})
		.def_property("bWantsCrouchMove", [](UAction_GenericAttack &self){return self.bWantsCrouchMove;}, [](UAction_GenericAttack &self, bool value){self.bWantsCrouchMove = value ? 1 : 0;})
		.def_property("bCanBeLimitedByDownedPlayers", [](UAction_GenericAttack &self){return self.bCanBeLimitedByDownedPlayers;}, [](UAction_GenericAttack &self, bool value){self.bCanBeLimitedByDownedPlayers = value ? 1 : 0;})
		.def_property("bWantsFullLOSTrace", [](UAction_GenericAttack &self){return self.bWantsFullLOSTrace;}, [](UAction_GenericAttack &self, bool value){self.bWantsFullLOSTrace = value ? 1 : 0;})
		.def_readwrite("Limits", &UAction_GenericAttack::Limits, py::return_value_policy::reference)
		.def_readwrite("CrouchIdleChance", &UAction_GenericAttack::CrouchIdleChance)
		.def_readwrite("CrouchMoveChance", &UAction_GenericAttack::CrouchMoveChance)
		.def_readwrite("CheckRate", &UAction_GenericAttack::CheckRate)
		.def_readwrite("Type", &UAction_GenericAttack::Type)
		.def_readwrite("Validity", &UAction_GenericAttack::Validity)
		.def_readwrite("AttackLoc", &UAction_GenericAttack::AttackLoc, py::return_value_policy::reference)
		.def_readwrite("MyZone", &UAction_GenericAttack::MyZone, py::return_value_policy::reference)
		.def_readwrite("IdleTime", &UAction_GenericAttack::IdleTime)
		.def("ReachedAttackLoc", &UAction_GenericAttack::ReachedAttackLoc)
		.def("HalfExposed", &UAction_GenericAttack::HalfExposed)
		.def("GetDotToTarget", &UAction_GenericAttack::GetDotToTarget)
		.def("TargetReachable", &UAction_GenericAttack::TargetReachable)
		.def("GetNearestLocationToTarget", &UAction_GenericAttack::GetNearestLocationToTarget, py::return_value_policy::reference)
		.def("eventPathFind", &UAction_GenericAttack::eventPathFind)
		.def("WantsPathFind", &UAction_GenericAttack::WantsPathFind)
		.def("CheckExpiredZone", &UAction_GenericAttack::CheckExpiredZone)
		.def("OnlyExpireMyZone", &UAction_GenericAttack::OnlyExpireMyZone)
		.def("CanCheckExpiredZone", &UAction_GenericAttack::CanCheckExpiredZone)
		.def("CheckForNewZone", &UAction_GenericAttack::CheckForNewZone)
		.def("CanClaimZones", &UAction_GenericAttack::CanClaimZones)
		.def("ValidLocation", &UAction_GenericAttack::ValidLocation)
		.def("CheckAttackLocation", &UAction_GenericAttack::CheckAttackLocation)
		.def("UnclaimMovement", &UAction_GenericAttack::UnclaimMovement)
		.def("ClaimMovement", &UAction_GenericAttack::ClaimMovement)
		.def("CanMove", &UAction_GenericAttack::CanMove)
		.def("CheckStateTransition", &UAction_GenericAttack::CheckStateTransition)
		.def("GetDesiredState", &UAction_GenericAttack::GetDesiredState, py::return_value_policy::reference)
		.def("TargetIsDownedPlayer", &UAction_GenericAttack::TargetIsDownedPlayer)
		.def("eventUpdate", &UAction_GenericAttack::eventUpdate)
		.def("eventStop", &UAction_GenericAttack::eventStop)
		.def("eventStart", &UAction_GenericAttack::eventStart)
		.def("eventCanRun", &UAction_GenericAttack::eventCanRun, py::return_value_policy::reference)
		.def("eventInit", &UAction_GenericAttack::eventInit)
		.def("InitData", &UAction_GenericAttack::InitData)
		;
	py::class_< UAction_AnimAttack, UAction_GenericAttack >(m, "UAction_AnimAttack")
		.def_property("bTargetHeld", [](UAction_AnimAttack &self){return self.bTargetHeld;}, [](UAction_AnimAttack &self, bool value){self.bTargetHeld = value ? 1 : 0;})
		.def_property("bTempHardAttach", [](UAction_AnimAttack &self){return self.bTempHardAttach;}, [](UAction_AnimAttack &self, bool value){self.bTempHardAttach = value ? 1 : 0;})
		.def_readwrite("AimType", &UAction_AnimAttack::AimType)
		.def_readwrite("VisionAngle", &UAction_AnimAttack::VisionAngle)
		.def_readwrite("AttackAnim", &UAction_AnimAttack::AttackAnim, py::return_value_policy::reference)
		.def_readwrite("Aim", &UAction_AnimAttack::Aim)
		.def("IsAimed", &UAction_AnimAttack::IsAimed)
		.def("ReleaseTarget", &UAction_AnimAttack::ReleaseTarget)
		.def("HoldTarget", &UAction_AnimAttack::HoldTarget)
		.def("AttackFinished", &UAction_AnimAttack::AttackFinished)
		.def("OnlyExpireMyZone", &UAction_AnimAttack::OnlyExpireMyZone)
		.def("CanCheckExpiredZone", &UAction_AnimAttack::CanCheckExpiredZone)
		.def("GetDesiredState", &UAction_AnimAttack::GetDesiredState, py::return_value_policy::reference)
		.def("eventUpdate", &UAction_AnimAttack::eventUpdate)
		.def("eventStop", &UAction_AnimAttack::eventStop)
		.def("eventStart", &UAction_AnimAttack::eventStart)
		.def("eventInit", &UAction_AnimAttack::eventInit)
		;
	py::class_< UAction_BasicAttack, UAction_AnimAttack >(m, "UAction_BasicAttack")
		.def_property("bMigrated", [](UAction_BasicAttack &self){return self.bMigrated;}, [](UAction_BasicAttack &self, bool value){self.bMigrated = value ? 1 : 0;})
		.def_property("bTargetMustBeInRange", [](UAction_BasicAttack &self){return self.bTargetMustBeInRange;}, [](UAction_BasicAttack &self, bool value){self.bTargetMustBeInRange = value ? 1 : 0;})
		.def_property("bInterpToAimDirection", [](UAction_BasicAttack &self){return self.bInterpToAimDirection;}, [](UAction_BasicAttack &self, bool value){self.bInterpToAimDirection = value ? 1 : 0;})
		.def_property("bAlwaysFaceTarget", [](UAction_BasicAttack &self){return self.bAlwaysFaceTarget;}, [](UAction_BasicAttack &self, bool value){self.bAlwaysFaceTarget = value ? 1 : 0;})
		.def_readwrite("Angle", &UAction_BasicAttack::Angle)
		.def_readwrite("VerticalDistMax", &UAction_BasicAttack::VerticalDistMax)
		.def_readwrite("Range", &UAction_BasicAttack::Range, py::return_value_policy::reference)
		.def_readwrite("RangeType", &UAction_BasicAttack::RangeType)
		.def_readwrite("ZoneSearch", &UAction_BasicAttack::ZoneSearch, py::return_value_policy::reference)
		.def_readwrite("AttackSMD", &UAction_BasicAttack::AttackSMD, py::return_value_policy::reference)
		.def_readwrite("InnerRadius", &UAction_BasicAttack::InnerRadius, py::return_value_policy::reference)
		.def_readwrite("OuterRadius", &UAction_BasicAttack::OuterRadius, py::return_value_policy::reference)
		;
	py::class_< UAction_LeapAtTarget, UAction_BasicAttack >(m, "UAction_LeapAtTarget")
		.def_readwrite("Options", &UAction_LeapAtTarget::Options, py::return_value_policy::reference)
		.def_readwrite("LaunchAnimation", &UAction_LeapAtTarget::LaunchAnimation, py::return_value_policy::reference)
		.def_readwrite("LandAnimation", &UAction_LeapAtTarget::LandAnimation, py::return_value_policy::reference)
		.def_readwrite("InAirAttackIdleAnimation", &UAction_LeapAtTarget::InAirAttackIdleAnimation, py::return_value_policy::reference)
		.def("LandFinished", &UAction_LeapAtTarget::LandFinished)
		.def("PlayLand", &UAction_LeapAtTarget::PlayLand)
		.def("PlayIdle", &UAction_LeapAtTarget::PlayIdle)
		.def("PlayLaunch", &UAction_LeapAtTarget::PlayLaunch)
		.def("eventActivateEvent", &UAction_LeapAtTarget::eventActivateEvent)
		.def("TargetTooFar", &UAction_LeapAtTarget::TargetTooFar)
		.def("eventCanRun", &UAction_LeapAtTarget::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_ShootTarget, UAction_GenericAttack >(m, "UAction_ShootTarget")
		.def_property("bMigrated", [](UAction_ShootTarget &self){return self.bMigrated;}, [](UAction_ShootTarget &self, bool value){self.bMigrated = value ? 1 : 0;})
		.def_readwrite("ChanceToCrouch", &UAction_ShootTarget::ChanceToCrouch)
		.def_readwrite("ChanceToMoveCrouch", &UAction_ShootTarget::ChanceToMoveCrouch)
		.def_readwrite("Angle", &UAction_ShootTarget::Angle)
		.def_readwrite("Range", &UAction_ShootTarget::Range, py::return_value_policy::reference)
		.def_readwrite("RangeType", &UAction_ShootTarget::RangeType)
		.def_readwrite("ZoneSearch", &UAction_ShootTarget::ZoneSearch, py::return_value_policy::reference)
		;
	py::class_< UAction_CoverAttack, UWillowActionSequencePawn >(m, "UAction_CoverAttack")
		.def_readwrite("Limits", &UAction_CoverAttack::Limits, py::return_value_policy::reference)
		.def_readwrite("LineOfSightTime", &UAction_CoverAttack::LineOfSightTime)
		.def_readwrite("MyCover", &UAction_CoverAttack::MyCover, py::return_value_policy::reference)
		.def_readwrite("MyZone", &UAction_CoverAttack::MyZone, py::return_value_policy::reference)
		.def_readwrite("IdleTime", &UAction_CoverAttack::IdleTime)
		.def("eventPathFind", &UAction_CoverAttack::eventPathFind)
		.def("CheckExpiredZone", &UAction_CoverAttack::CheckExpiredZone)
		.def("CheckForNewZone", &UAction_CoverAttack::CheckForNewZone)
		.def("FindCover", &UAction_CoverAttack::FindCover)
		.def("ReachedCoverLoc", &UAction_CoverAttack::ReachedCoverLoc)
		.def("IsInCover", &UAction_CoverAttack::IsInCover)
		.def("CoverValid", &UAction_CoverAttack::CoverValid)
		.def("IsValidCover", &UAction_CoverAttack::IsValidCover)
		.def("CreateCoverList", &UAction_CoverAttack::CreateCoverList)
		.def("GetCoverPoint", &UAction_CoverAttack::GetCoverPoint, py::return_value_policy::reference)
		.def("GetCoverLocation", &UAction_CoverAttack::GetCoverLocation, py::return_value_policy::reference)
		.def("CheckStateTransition", &UAction_CoverAttack::CheckStateTransition)
		.def("eventUpdate", &UAction_CoverAttack::eventUpdate)
		.def("eventStop", &UAction_CoverAttack::eventStop)
		.def("eventStart", &UAction_CoverAttack::eventStart)
		.def("eventCanRun", &UAction_CoverAttack::eventCanRun, py::return_value_policy::reference)
		.def("eventInit", &UAction_CoverAttack::eventInit)
		.def("InitData", &UAction_CoverAttack::InitData)
		.def("CheckCoverLocation", [](UAction_CoverAttack &self , struct FCoverInfo* Cover, struct FVector* CoverLoc) { int* pyBestScore = (int*)malloc(sizeof(int)) ;  bool ret =  self.CheckCoverLocation(Cover, CoverLoc, pyBestScore); return py::make_tuple(ret, *pyBestScore); })
		;
	py::class_< UAction_CombatPoint, UAction_CoverAttack >(m, "UAction_CombatPoint")
		.def_property("bMigrated", [](UAction_CombatPoint &self){return self.bMigrated;}, [](UAction_CombatPoint &self, bool value){self.bMigrated = value ? 1 : 0;})
		.def_readwrite("Search", &UAction_CombatPoint::Search, py::return_value_policy::reference)
		;
	py::class_< UAction_SwoopAttack, UWillowActionSequencePawn >(m, "UAction_SwoopAttack")
		.def_property("bShootTarget", [](UAction_SwoopAttack &self){return self.bShootTarget;}, [](UAction_SwoopAttack &self, bool value){self.bShootTarget = value ? 1 : 0;})
		.def_property("bUseOffset", [](UAction_SwoopAttack &self){return self.bUseOffset;}, [](UAction_SwoopAttack &self, bool value){self.bUseOffset = value ? 1 : 0;})
		.def_property("bFoundAttackOffset", [](UAction_SwoopAttack &self){return self.bFoundAttackOffset;}, [](UAction_SwoopAttack &self, bool value){self.bFoundAttackOffset = value ? 1 : 0;})
		.def_property("bCacheTargetLoc", [](UAction_SwoopAttack &self){return self.bCacheTargetLoc;}, [](UAction_SwoopAttack &self, bool value){self.bCacheTargetLoc = value ? 1 : 0;})
		.def_readwrite("SwoopFarDistance", &UAction_SwoopAttack::SwoopFarDistance)
		.def_readwrite("SwoopFarHeight", &UAction_SwoopAttack::SwoopFarHeight)
		.def_readwrite("SwoopCloseDistance", &UAction_SwoopAttack::SwoopCloseDistance)
		.def_readwrite("SwoopCloseHeight", &UAction_SwoopAttack::SwoopCloseHeight)
		.def_readwrite("SwoopAttackDistance", &UAction_SwoopAttack::SwoopAttackDistance)
		.def_readwrite("SwoopAttackDistances", &UAction_SwoopAttack::SwoopAttackDistances, py::return_value_policy::reference)
		.def_readwrite("Offset", &UAction_SwoopAttack::Offset)
		.def_readwrite("OffsetDirection", &UAction_SwoopAttack::OffsetDirection)
		.def_readwrite("Direction", &UAction_SwoopAttack::Direction)
		.def_readwrite("AttackOffset", &UAction_SwoopAttack::AttackOffset, py::return_value_policy::reference)
		.def_readwrite("ClosestAttackDist", &UAction_SwoopAttack::ClosestAttackDist)
		.def_readwrite("LastAttackLocation", &UAction_SwoopAttack::LastAttackLocation, py::return_value_policy::reference)
		.def_readwrite("CachedTargetLoc", &UAction_SwoopAttack::CachedTargetLoc, py::return_value_policy::reference)
		.def("GetDistToGoal", &UAction_SwoopAttack::GetDistToGoal)
		.def("GetGoalLocation", &UAction_SwoopAttack::GetGoalLocation, py::return_value_policy::reference)
		.def("SetAllTriggered", &UAction_SwoopAttack::SetAllTriggered)
		.def("GetDistToTarget", &UAction_SwoopAttack::GetDistToTarget)
		.def("eventPathFind", &UAction_SwoopAttack::eventPathFind)
		.def("eventStop", &UAction_SwoopAttack::eventStop)
		.def("eventStart", &UAction_SwoopAttack::eventStart)
		.def("eventCanRun", &UAction_SwoopAttack::eventCanRun, py::return_value_policy::reference)
		.def("eventInit", &UAction_SwoopAttack::eventInit)
		;
	py::class_< UWillowAIComponent, UAIComponent >(m, "UWillowAIComponent")
		.def_property("bCombatVolumeOnlyLimitsRangedAttacks", [](UWillowAIComponent &self){return self.bCombatVolumeOnlyLimitsRangedAttacks;}, [](UWillowAIComponent &self, bool value){self.bCombatVolumeOnlyLimitsRangedAttacks = value ? 1 : 0;})
		.def_property("bCanUseCover", [](UWillowAIComponent &self){return self.bCanUseCover;}, [](UWillowAIComponent &self, bool value){self.bCanUseCover = value ? 1 : 0;})
		.def_readwrite("MyWillowMind", &UWillowAIComponent::MyWillowMind, py::return_value_policy::reference)
		.def_readwrite("MyDen", &UWillowAIComponent::MyDen, py::return_value_policy::reference)
		.def_readwrite("MyBlackboard", &UWillowAIComponent::MyBlackboard, py::return_value_policy::reference)
		.def_readwrite("TargetLeader", &UWillowAIComponent::TargetLeader, py::return_value_policy::reference)
		.def_readwrite("FormationLeader", &UWillowAIComponent::FormationLeader, py::return_value_policy::reference)
		.def_readwrite("InvalidCombatZones", &UWillowAIComponent::InvalidCombatZones, py::return_value_policy::reference)
		.def_readwrite("ClaimedCombatZones", &UWillowAIComponent::ClaimedCombatZones, py::return_value_policy::reference)
		.def_readwrite("ZoneTime", &UWillowAIComponent::ZoneTime)
		.def_readwrite("LastZone", &UWillowAIComponent::LastZone, py::return_value_policy::reference)
		.def_readwrite("CurrentZone", &UWillowAIComponent::CurrentZone, py::return_value_policy::reference)
		.def_readwrite("ClaimedZone", &UWillowAIComponent::ClaimedZone, py::return_value_policy::reference)
		.def_readwrite("CombatVolume", &UWillowAIComponent::CombatVolume, py::return_value_policy::reference)
		.def_readwrite("DesiredCover", &UWillowAIComponent::DesiredCover, py::return_value_policy::reference)
		.def_readwrite("LastHurtTime", &UWillowAIComponent::LastHurtTime)
		.def_readwrite("LastAttackedTime", &UWillowAIComponent::LastAttackedTime)
		.def_readwrite("LastAttacker", &UWillowAIComponent::LastAttacker, py::return_value_policy::reference)
		.def_readwrite("HeadLookHolds", &UWillowAIComponent::HeadLookHolds, py::return_value_policy::reference)
		.def_readwrite("PhaseLockHolds", &UWillowAIComponent::PhaseLockHolds, py::return_value_policy::reference)
		.def_readwrite("LastTickTime", &UWillowAIComponent::LastTickTime)
		.def_readwrite("TickThrottleTime", &UWillowAIComponent::TickThrottleTime)
		.def("IsAIThrottled", &UWillowAIComponent::IsAIThrottled)
		.def("IsAttackDebugEnabled", &UWillowAIComponent::IsAttackDebugEnabled)
		.def("ToggleAttackDebug", &UWillowAIComponent::ToggleAttackDebug)
		.def("DrawAttackDebug", &UWillowAIComponent::DrawAttackDebug)
		.def("ClaimNearbyVehicle", &UWillowAIComponent::ClaimNearbyVehicle, py::return_value_policy::reference)
		.def("CanPhaseLock", &UWillowAIComponent::CanPhaseLock)
		.def("ReleasePhaseLock", &UWillowAIComponent::ReleasePhaseLock)
		.def("HoldPhaseLock", &UWillowAIComponent::HoldPhaseLock)
		.def("PhaseLockOnHold", &UWillowAIComponent::PhaseLockOnHold)
		.def("ReleaseHeadLook", &UWillowAIComponent::ReleaseHeadLook)
		.def("HoldHeadLook", &UWillowAIComponent::HoldHeadLook)
		.def("HeadLookOnHold", &UWillowAIComponent::HeadLookOnHold)
		.def("OnHold", &UWillowAIComponent::OnHold)
		.def("GetTimeSinceAttacked", &UWillowAIComponent::GetTimeSinceAttacked)
		.def("GetTimeSinceHurt", &UWillowAIComponent::GetTimeSinceHurt)
		.def("SetThreatLevel", &UWillowAIComponent::SetThreatLevel)
		.def("GetThreatLevel", &UWillowAIComponent::GetThreatLevel)
		.def("GetHighestThreatLevel", &UWillowAIComponent::GetHighestThreatLevel)
		.def("GetCoverExposure", &UWillowAIComponent::GetCoverExposure, py::return_value_policy::reference)
		.def("TryEnterCover", &UWillowAIComponent::TryEnterCover)
		.def("TryExitCover", &UWillowAIComponent::TryExitCover)
		.def("IsLocationValid", &UWillowAIComponent::IsLocationValid)
		.def("GetLocationScore", &UWillowAIComponent::GetLocationScore)
		.def("InvalidateCombatZone", &UWillowAIComponent::InvalidateCombatZone)
		.def("MarkCurrentCombatZone", &UWillowAIComponent::MarkCurrentCombatZone)
		.def("GetCombatZoneByLocation", &UWillowAIComponent::GetCombatZoneByLocation, py::return_value_policy::reference)
		.def("CombatZoneAvailable", &UWillowAIComponent::CombatZoneAvailable)
		.def("UnclaimCombatZone", &UWillowAIComponent::UnclaimCombatZone)
		.def("ClaimCombatZone", &UWillowAIComponent::ClaimCombatZone)
		.def("DistToFormationLeader", &UWillowAIComponent::DistToFormationLeader)
		.def("GetFormation", &UWillowAIComponent::GetFormation, py::return_value_policy::reference)
		.def("SetFormationLeader", &UWillowAIComponent::SetFormationLeader)
		.def("GetFormationLeader", &UWillowAIComponent::GetFormationLeader, py::return_value_policy::reference)
		.def("SetTargetLeader", &UWillowAIComponent::SetTargetLeader)
		.def("GetTargetLeader", &UWillowAIComponent::GetTargetLeader, py::return_value_policy::reference)
		.def("GetForcedTarget", &UWillowAIComponent::GetForcedTarget, py::return_value_policy::reference)
		.def("HasForcedTarget", &UWillowAIComponent::HasForcedTarget)
		.def("Release", &UWillowAIComponent::Release)
		.def("Hold", &UWillowAIComponent::Hold)
		.def("TargetChanged", &UWillowAIComponent::TargetChanged)
		.def("InitializeTargetRecord", &UWillowAIComponent::InitializeTargetRecord)
		.def("TargetRemoved", &UWillowAIComponent::TargetRemoved)
		.def("ValidCurrentTarget", &UWillowAIComponent::ValidCurrentTarget)
		.def("ValidTarget", &UWillowAIComponent::ValidTarget)
		.def("AddDenTargets", &UWillowAIComponent::AddDenTargets)
		.def("GetTargetsFromParents", &UWillowAIComponent::GetTargetsFromParents)
		.def("GetTargets", &UWillowAIComponent::GetTargets)
		.def("NotifyAttackedBy", &UWillowAIComponent::NotifyAttackedBy)
		.def("ClearState", &UWillowAIComponent::ClearState)
		;
	py::class_< UWillowAIBlackboardComponent, UWillowAIComponent >(m, "UWillowAIBlackboardComponent")
		.def_readwrite("Allegiance", &UWillowAIBlackboardComponent::Allegiance, py::return_value_policy::reference)
		.def("GetAllegiance", &UWillowAIBlackboardComponent::GetAllegiance, py::return_value_policy::reference)
		.def("GetTargets", &UWillowAIBlackboardComponent::GetTargets)
		;
	py::class_< UWillowAIDenComponent, UWillowAIComponent >(m, "UWillowAIDenComponent")
		.def_readwrite("ParentDenAI", &UWillowAIDenComponent::ParentDenAI, py::return_value_policy::reference)
		.def("ShouldRemoveTarget", &UWillowAIDenComponent::ShouldRemoveTarget)
		.def("FindTargetsInDen", &UWillowAIDenComponent::FindTargetsInDen)
		.def("FindTargets", &UWillowAIDenComponent::FindTargets)
		;
	py::class_< UWillowAIDefinition, UAIDefinition >(m, "UWillowAIDefinition")
		.def_property("bGetTargetsFromParents", [](UWillowAIDefinition &self){return self.bGetTargetsFromParents;}, [](UWillowAIDefinition &self, bool value){self.bGetTargetsFromParents = value ? 1 : 0;})
		.def_readwrite("PatrolAction", &UWillowAIDefinition::PatrolAction, py::return_value_policy::reference)
		.def_readwrite("ScriptedAction", &UWillowAIDefinition::ScriptedAction, py::return_value_policy::reference)
		.def_readwrite("WantsFormation", &UWillowAIDefinition::WantsFormation, py::return_value_policy::reference)
		.def_readwrite("ReacquireTime", &UWillowAIDefinition::ReacquireTime)
		.def_readwrite("ReacquireDistance", &UWillowAIDefinition::ReacquireDistance)
		.def_readwrite("SuppressionFireTime", &UWillowAIDefinition::SuppressionFireTime)
		.def("OnRevivedPlayerMaster", &UWillowAIDefinition::OnRevivedPlayerMaster)
		.def("OnDismount", &UWillowAIDefinition::OnDismount)
		;
	py::class_< UWillowAIDenDefinition, UAIDefinition >(m, "UWillowAIDenDefinition")
		.def_readwrite("MinEngagementTime", &UWillowAIDenDefinition::MinEngagementTime)
		.def_readwrite("MinProvokedTime", &UWillowAIDenDefinition::MinProvokedTime)
		;
	py::class_< AWillowAIMoveNode, AGearboxAIMoveNode >(m, "AWillowAIMoveNode")
		.def_property("bPreviewJump", [](AWillowAIMoveNode &self){return self.bPreviewJump;}, [](AWillowAIMoveNode &self, bool value){self.bPreviewJump = value ? 1 : 0;})
		.def_property("bShowPath", [](AWillowAIMoveNode &self){return self.bShowPath;}, [](AWillowAIMoveNode &self, bool value){self.bShowPath = value ? 1 : 0;})
		.def_property("bFuzzyArrival", [](AWillowAIMoveNode &self){return self.bFuzzyArrival;}, [](AWillowAIMoveNode &self, bool value){self.bFuzzyArrival = value ? 1 : 0;})
		.def_readwrite("VfTable_IInterface_NavigationHandle", &AWillowAIMoveNode::VfTable_IInterface_NavigationHandle, py::return_value_policy::reference)
		.def_readwrite("PawnArrivalRadius", &AWillowAIMoveNode::PawnArrivalRadius)
		.def_readwrite("AISpeedPercentageHere", &AWillowAIMoveNode::AISpeedPercentageHere)
		.def_readwrite("VehicleNodeType", &AWillowAIMoveNode::VehicleNodeType)
		.def("eventNotifyPathChanged", &AWillowAIMoveNode::eventNotifyPathChanged)
		;
	py::class_< APerch, AWillowAIMoveNode >(m, "APerch")
		.def_property("bOverrideLoopTime", [](APerch &self){return self.bOverrideLoopTime;}, [](APerch &self, bool value){self.bOverrideLoopTime = value ? 1 : 0;})
		.def_property("bLookForPlayersInRange", [](APerch &self){return self.bLookForPlayersInRange;}, [](APerch &self, bool value){self.bLookForPlayersInRange = value ? 1 : 0;})
		.def_readwrite("VfTable_IIInstanceData", &APerch::VfTable_IIInstanceData, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBodyCompositionInstance", &APerch::VfTable_IIBodyCompositionInstance, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIBehaviorConsumer", &APerch::VfTable_IIBehaviorConsumer, py::return_value_policy::reference)
		.def_readwrite("VfTable_FTickableObject", &APerch::VfTable_FTickableObject, py::return_value_policy::reference)
		.def_readwrite("PerchDef", &APerch::PerchDef, py::return_value_policy::reference)
		.def_readwrite("PreviewComponent", &APerch::PreviewComponent, py::return_value_policy::reference)
		.def_readwrite("UseRadius", &APerch::UseRadius)
		.def_readwrite("UseHeight", &APerch::UseHeight)
		.def_readwrite("LoopTimeOverride", &APerch::LoopTimeOverride, py::return_value_policy::reference)
		.def_readwrite("TargetVolumes", &APerch::TargetVolumes, py::return_value_policy::reference)
		.def_readwrite("User", &APerch::User, py::return_value_policy::reference)
		.def_readwrite("CooldownTime", &APerch::CooldownTime)
		.def_readwrite("NextPlayerInRangeCheckTime", &APerch::NextPlayerInRangeCheckTime)
		.def_readwrite("InstanceState", &APerch::InstanceState, py::return_value_policy::reference)
		.def_readwrite("ReplicatedInstanceDataState", &APerch::ReplicatedInstanceDataState, py::return_value_policy::reference)
		.def_readwrite("ConsumerHandle", &APerch::ConsumerHandle, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorEvent", &APerch::ReplicatedBehaviorEvent, py::return_value_policy::reference)
		.def_readwrite("ReplicatedBehaviorConsumerState", &APerch::ReplicatedBehaviorConsumerState, py::return_value_policy::reference)
		.def_readwrite("DynamicLightEnvironment", &APerch::DynamicLightEnvironment, py::return_value_policy::reference)
		.def_readwrite("AlwaysRelevantDistanceSquared", &APerch::AlwaysRelevantDistanceSquared)
		.def("GetBehaviorConsumerHandle", &APerch::GetBehaviorConsumerHandle, py::return_value_policy::reference)
		.def("RegisterBehaviorConsumer", &APerch::RegisterBehaviorConsumer)
		.def("ClearBodyCompositionInstance", &APerch::ClearBodyCompositionInstance)
		.def("GetBodyInfoProvider", &APerch::GetBodyInfoProvider, py::return_value_policy::reference)
		.def("ApplyPreviewBodyComposition", &APerch::ApplyPreviewBodyComposition)
		.def("ChangeInstanceDataSwitch", &APerch::ChangeInstanceDataSwitch)
		.def("PostInitBodyComposition", &APerch::PostInitBodyComposition)
		.def("PreRemoveBodyComposition", &APerch::PreRemoveBodyComposition)
		.def("GetReplicatedInstanceDataState", &APerch::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &APerch::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &APerch::DestroyOwnedInstanceData)
		.def("eventRemoveInstanceDataObject", &APerch::eventRemoveInstanceDataObject)
		.def("eventRemoveInstanceData", &APerch::eventRemoveInstanceData)
		.def("eventGetInstanceData", &APerch::eventGetInstanceData)
		.def("SetInstanceData", &APerch::SetInstanceData)
		.def("GetLoopRange", &APerch::GetLoopRange, py::return_value_policy::reference)
		.def("CheckStartReplication", &APerch::CheckStartReplication)
		.def("InitBody", &APerch::InitBody)
		.def("InitializeRBPhys", &APerch::InitializeRBPhys)
		.def("PostBeginPlay", &APerch::PostBeginPlay)
		.def("SetPerchDef", &APerch::SetPerchDef)
		.def("eventReplicatedEvent", &APerch::eventReplicatedEvent)
		;
	py::class_< USpecialMove_Cover, UWillowAnimDefinition >(m, "USpecialMove_Cover")
		.def("GetSMNode", &USpecialMove_Cover::GetSMNode, py::return_value_policy::reference)
		;
	py::class_< UWillowAwarenessZoneDefinition, UAwarenessZoneDefinition >(m, "UWillowAwarenessZoneDefinition")
		.def_readwrite("ThreatLevel", &UWillowAwarenessZoneDefinition::ThreatLevel)
		;
	py::class_< AWillowBoundaryTurret, AActor >(m, "AWillowBoundaryTurret")
		.def_property("bInstaKill", [](AWillowBoundaryTurret &self){return self.bInstaKill;}, [](AWillowBoundaryTurret &self, bool value){self.bInstaKill = value ? 1 : 0;})
		.def_property("bUseSocket1", [](AWillowBoundaryTurret &self){return self.bUseSocket1;}, [](AWillowBoundaryTurret &self, bool value){self.bUseSocket1 = value ? 1 : 0;})
		.def_property("bWarningEffectsOn", [](AWillowBoundaryTurret &self){return self.bWarningEffectsOn;}, [](AWillowBoundaryTurret &self, bool value){self.bWarningEffectsOn = value ? 1 : 0;})
		.def_readwrite("ShotTime", &AWillowBoundaryTurret::ShotTime)
		.def_readwrite("SeekTime", &AWillowBoundaryTurret::SeekTime)
		.def_readwrite("FiringModeDef", &AWillowBoundaryTurret::FiringModeDef, py::return_value_policy::reference)
		.def_readwrite("ViewWidth", &AWillowBoundaryTurret::ViewWidth)
		.def_readwrite("KillDistance", &AWillowBoundaryTurret::KillDistance)
		.def_readwrite("WarnDistance", &AWillowBoundaryTurret::WarnDistance)
		.def_readwrite("ShootAkEvent", &AWillowBoundaryTurret::ShootAkEvent, py::return_value_policy::reference)
		.def_readwrite("MuzzleSocket1", &AWillowBoundaryTurret::MuzzleSocket1, py::return_value_policy::reference)
		.def_readwrite("MuzzleSocket2", &AWillowBoundaryTurret::MuzzleSocket2, py::return_value_policy::reference)
		.def_readwrite("PlayWarningSoundsAkEvent", &AWillowBoundaryTurret::PlayWarningSoundsAkEvent, py::return_value_policy::reference)
		.def_readwrite("StopWarningSoundsAkEvent", &AWillowBoundaryTurret::StopWarningSoundsAkEvent, py::return_value_policy::reference)
		.def_readwrite("BaseMesh", &AWillowBoundaryTurret::BaseMesh, py::return_value_policy::reference)
		.def_readwrite("TurretMesh", &AWillowBoundaryTurret::TurretMesh, py::return_value_policy::reference)
		.def_readwrite("LaserEffects1", &AWillowBoundaryTurret::LaserEffects1, py::return_value_policy::reference)
		.def_readwrite("LaserEffects2", &AWillowBoundaryTurret::LaserEffects2, py::return_value_policy::reference)
		.def_readwrite("WarningEffects", &AWillowBoundaryTurret::WarningEffects, py::return_value_policy::reference)
		.def_readwrite("CurrentTarget", &AWillowBoundaryTurret::CurrentTarget, py::return_value_policy::reference)
		.def_readwrite("PlayersInWarnZone", &AWillowBoundaryTurret::PlayersInWarnZone, py::return_value_policy::reference)
		.def("IsLethalLocation", &AWillowBoundaryTurret::IsLethalLocation)
		.def("Shoot", &AWillowBoundaryTurret::Shoot)
		.def("eventSetInitialState", &AWillowBoundaryTurret::eventSetInitialState)
		.def("eventSetWarningEffects", &AWillowBoundaryTurret::eventSetWarningEffects)
		.def("eventUnwarnPlayer", &AWillowBoundaryTurret::eventUnwarnPlayer)
		.def("eventWarnPlayer", &AWillowBoundaryTurret::eventWarnPlayer)
		.def("eventKillPlayer", &AWillowBoundaryTurret::eventKillPlayer)
		;
	py::class_< UAIClassDefinition, UWillowCharacterClassDefinition >(m, "UAIClassDefinition")
		.def_property("bWatchPlayerWhenUsed", [](UAIClassDefinition &self){return self.bWatchPlayerWhenUsed;}, [](UAIClassDefinition &self, bool value){self.bWatchPlayerWhenUsed = value ? 1 : 0;})
		.def_property("bIsCrawler", [](UAIClassDefinition &self){return self.bIsCrawler;}, [](UAIClassDefinition &self, bool value){self.bIsCrawler = value ? 1 : 0;})
		.def_property("bIsTurret", [](UAIClassDefinition &self){return self.bIsTurret;}, [](UAIClassDefinition &self, bool value){self.bIsTurret = value ? 1 : 0;})
		.def_property("bLeadTarget", [](UAIClassDefinition &self){return self.bLeadTarget;}, [](UAIClassDefinition &self, bool value){self.bLeadTarget = value ? 1 : 0;})
		.def_property("bAvoidObstacles", [](UAIClassDefinition &self){return self.bAvoidObstacles;}, [](UAIClassDefinition &self, bool value){self.bAvoidObstacles = value ? 1 : 0;})
		.def_property("bAvoidTarget", [](UAIClassDefinition &self){return self.bAvoidTarget;}, [](UAIClassDefinition &self, bool value){self.bAvoidTarget = value ? 1 : 0;})
		.def_property("CheckForVehiclesBeforeUnCloaking", [](UAIClassDefinition &self){return self.CheckForVehiclesBeforeUnCloaking;}, [](UAIClassDefinition &self, bool value){self.CheckForVehiclesBeforeUnCloaking = value ? 1 : 0;})
		.def_property("bApplySlowDown", [](UAIClassDefinition &self){return self.bApplySlowDown;}, [](UAIClassDefinition &self, bool value){self.bApplySlowDown = value ? 1 : 0;})
		.def_property("bUseSimpleFlight", [](UAIClassDefinition &self){return self.bUseSimpleFlight;}, [](UAIClassDefinition &self, bool value){self.bUseSimpleFlight = value ? 1 : 0;})
		.def_property("bHeloStyle", [](UAIClassDefinition &self){return self.bHeloStyle;}, [](UAIClassDefinition &self, bool value){self.bHeloStyle = value ? 1 : 0;})
		.def_property("bFlyOverrideNavSize", [](UAIClassDefinition &self){return self.bFlyOverrideNavSize;}, [](UAIClassDefinition &self, bool value){self.bFlyOverrideNavSize = value ? 1 : 0;})
		.def_property("bDropDefaultWeaponOnDeath", [](UAIClassDefinition &self){return self.bDropDefaultWeaponOnDeath;}, [](UAIClassDefinition &self, bool value){self.bDropDefaultWeaponOnDeath = value ? 1 : 0;})
		.def_property("bBoss", [](UAIClassDefinition &self){return self.bBoss;}, [](UAIClassDefinition &self, bool value){self.bBoss = value ? 1 : 0;})
		.def_property("bUsable", [](UAIClassDefinition &self){return self.bUsable;}, [](UAIClassDefinition &self, bool value){self.bUsable = value ? 1 : 0;})
		.def_property("bSecondaryUsable", [](UAIClassDefinition &self){return self.bSecondaryUsable;}, [](UAIClassDefinition &self, bool value){self.bSecondaryUsable = value ? 1 : 0;})
		.def_property("bTriggerFootstepEvent", [](UAIClassDefinition &self){return self.bTriggerFootstepEvent;}, [](UAIClassDefinition &self, bool value){self.bTriggerFootstepEvent = value ? 1 : 0;})
		.def_property("bFriendlyFireAlwaysFiresEvents", [](UAIClassDefinition &self){return self.bFriendlyFireAlwaysFiresEvents;}, [](UAIClassDefinition &self, bool value){self.bFriendlyFireAlwaysFiresEvents = value ? 1 : 0;})
		.def_property("bAwardKillsToAllPlayers", [](UAIClassDefinition &self){return self.bAwardKillsToAllPlayers;}, [](UAIClassDefinition &self, bool value){self.bAwardKillsToAllPlayers = value ? 1 : 0;})
		.def_property("bRootOnlyYawRotation", [](UAIClassDefinition &self){return self.bRootOnlyYawRotation;}, [](UAIClassDefinition &self, bool value){self.bRootOnlyYawRotation = value ? 1 : 0;})
		.def_readwrite("AIDef", &UAIClassDefinition::AIDef, py::return_value_policy::reference)
		.def_readwrite("DefaultDisplayName", &UAIClassDefinition::DefaultDisplayName, py::return_value_policy::reference)
		.def_readwrite("UBMKilledByMessageString", &UAIClassDefinition::UBMKilledByMessageString, py::return_value_policy::reference)
		.def_readwrite("WatchPlayerTime", &UAIClassDefinition::WatchPlayerTime)
		.def_readwrite("SightViewCone", &UAIClassDefinition::SightViewCone)
		.def_readwrite("SightFireCone", &UAIClassDefinition::SightFireCone)
		.def_readwrite("CrawlerMeshLerpSpeed", &UAIClassDefinition::CrawlerMeshLerpSpeed)
		.def_readwrite("MoveAtDestinationThreshold", &UAIClassDefinition::MoveAtDestinationThreshold)
		.def_readwrite("AkStartRotation", &UAIClassDefinition::AkStartRotation, py::return_value_policy::reference)
		.def_readwrite("AkStopRotation", &UAIClassDefinition::AkStopRotation, py::return_value_policy::reference)
		.def_readwrite("RotationRate", &UAIClassDefinition::RotationRate, py::return_value_policy::reference)
		.def_readwrite("Physics", &UAIClassDefinition::Physics)
		.def_readwrite("UsableIcon", &UAIClassDefinition::UsableIcon)
		.def_readwrite("AccelRate", &UAIClassDefinition::AccelRate)
		.def_readwrite("CrawlerRotationModifier", &UAIClassDefinition::CrawlerRotationModifier)
		.def_readwrite("CornerCutDistance", &UAIClassDefinition::CornerCutDistance)
		.def_readwrite("LookAheadDistance", &UAIClassDefinition::LookAheadDistance)
		.def_readwrite("LookInterpRate", &UAIClassDefinition::LookInterpRate)
		.def_readwrite("SlowDownDist", &UAIClassDefinition::SlowDownDist)
		.def_readwrite("SlowDownMinPct", &UAIClassDefinition::SlowDownMinPct)
		.def_readwrite("FlyMaxRotationModifier", &UAIClassDefinition::FlyMaxRotationModifier)
		.def_readwrite("FlyBlockedDistModifier", &UAIClassDefinition::FlyBlockedDistModifier)
		.def_readwrite("FlyLookAheadTime", &UAIClassDefinition::FlyLookAheadTime)
		.def_readwrite("FlyNavMeshCheckDist", &UAIClassDefinition::FlyNavMeshCheckDist)
		.def_readwrite("FlyStartSlowPct", &UAIClassDefinition::FlyStartSlowPct)
		.def_readwrite("FlyStopSlowPct", &UAIClassDefinition::FlyStopSlowPct)
		.def_readwrite("FlyExtentModifier", &UAIClassDefinition::FlyExtentModifier)
		.def_readwrite("OverrideNavSize", &UAIClassDefinition::OverrideNavSize)
		.def_readwrite("OverrideNavHeight", &UAIClassDefinition::OverrideNavHeight)
		.def_readwrite("PassiveSkills", &UAIClassDefinition::PassiveSkills, py::return_value_policy::reference)
		.def_readwrite("DefaultWeapon", &UAIClassDefinition::DefaultWeapon, py::return_value_policy::reference)
		.def_readwrite("InteractionDefinition", &UAIClassDefinition::InteractionDefinition, py::return_value_policy::reference)
		.def_readwrite("CombatMusicTargetingThreat", &UAIClassDefinition::CombatMusicTargetingThreat)
		.def_readwrite("SpecialCombatMusicState", &UAIClassDefinition::SpecialCombatMusicState, py::return_value_policy::reference)
		.def_readwrite("SpecialCombatMusicPriority", &UAIClassDefinition::SpecialCombatMusicPriority)
		.def_readwrite("UsableIconDef", &UAIClassDefinition::UsableIconDef, py::return_value_policy::reference)
		.def_readwrite("UsableIconDefSecondary", &UAIClassDefinition::UsableIconDefSecondary, py::return_value_policy::reference)
		.def_readwrite("OnUsedBehaviors", &UAIClassDefinition::OnUsedBehaviors, py::return_value_policy::reference)
		.def_readwrite("OnUsedBehaviors_NoMission", &UAIClassDefinition::OnUsedBehaviors_NoMission, py::return_value_policy::reference)
		.def_readwrite("OnDismissedBehaviors", &UAIClassDefinition::OnDismissedBehaviors, py::return_value_policy::reference)
		.def_readwrite("OnLingeringBehaviors", &UAIClassDefinition::OnLingeringBehaviors, py::return_value_policy::reference)
		.def_readwrite("TimeUntilConsideredLingering", &UAIClassDefinition::TimeUntilConsideredLingering, py::return_value_policy::reference)
		.def_readwrite("FocusRadius", &UAIClassDefinition::FocusRadius)
		.def_readwrite("FocusOffset", &UAIClassDefinition::FocusOffset, py::return_value_policy::reference)
		.def("OnAllPickupsDetached", &UAIClassDefinition::OnAllPickupsDetached)
		.def("OnPickupDetached", &UAIClassDefinition::OnPickupDetached)
		.def("OnFootStep", &UAIClassDefinition::OnFootStep)
		.def("OnUnTouch", &UAIClassDefinition::OnUnTouch)
		.def("OnTouch", &UAIClassDefinition::OnTouch)
		.def("OnUncloak", &UAIClassDefinition::OnUncloak)
		.def("OnCloak", &UAIClassDefinition::OnCloak)
		.def("OnTakeHeal", &UAIClassDefinition::OnTakeHeal)
		.def("OnVehicleTakeDamage", &UAIClassDefinition::OnVehicleTakeDamage)
		.def("OnTakeDamage", &UAIClassDefinition::OnTakeDamage)
		.def("OnSpawned", &UAIClassDefinition::OnSpawned)
		.def("OnUserCouldNotAffordSecondary", &UAIClassDefinition::OnUserCouldNotAffordSecondary)
		.def("OnUserCouldNotAfford", &UAIClassDefinition::OnUserCouldNotAfford)
		.def("OnSecondaryUsed", &UAIClassDefinition::OnSecondaryUsed)
		.def("OnUsed", &UAIClassDefinition::OnUsed)
		;
	py::class_< AWillowCombatPoint, AActor >(m, "AWillowCombatPoint")
		.def_readwrite("ConstraintType", &AWillowCombatPoint::ConstraintType)
		.def_readwrite("ConstraintTags", &AWillowCombatPoint::ConstraintTags, py::return_value_policy::reference)
		;
	py::class_< UWillowCoverComponent, UActorComponent >(m, "UWillowCoverComponent")
		.def_readwrite("AIPawn", &UWillowCoverComponent::AIPawn, py::return_value_policy::reference)
		.def_readwrite("LastAction", &UWillowCoverComponent::LastAction, py::return_value_policy::reference)
		.def("IdleTimer", &UWillowCoverComponent::IdleTimer)
		.def("FireTimer", &UWillowCoverComponent::FireTimer)
		.def("GetRange", &UWillowCoverComponent::GetRange)
		.def("eventCanFire", &UWillowCoverComponent::eventCanFire)
		.def("ClearCover", &UWillowCoverComponent::ClearCover)
		.def("PlayTimedAction", &UWillowCoverComponent::PlayTimedAction)
		.def("eventUpdateAction", &UWillowCoverComponent::eventUpdateAction)
		.def("GetAction", &UWillowCoverComponent::GetAction, py::return_value_policy::reference)
		.def("GetStance", &UWillowCoverComponent::GetStance, py::return_value_policy::reference)
		.def("GetCoverRotation", &UWillowCoverComponent::GetCoverRotation, py::return_value_policy::reference)
		.def("GetCoverLocation", &UWillowCoverComponent::GetCoverLocation, py::return_value_policy::reference)
		.def("ResetExposure", &UWillowCoverComponent::ResetExposure)
		.def("ActionFinished", &UWillowCoverComponent::ActionFinished)
		;
	py::class_< UWillowCoverStanceDefinition, UGBXDefinition >(m, "UWillowCoverStanceDefinition")
		.def_readwrite("AimProfile", &UWillowCoverStanceDefinition::AimProfile, py::return_value_policy::reference)
		.def_readwrite("Enter", &UWillowCoverStanceDefinition::Enter, py::return_value_policy::reference)
		.def_readwrite("Exit", &UWillowCoverStanceDefinition::Exit, py::return_value_policy::reference)
		.def_readwrite("Idle", &UWillowCoverStanceDefinition::Idle, py::return_value_policy::reference)
		.def_readwrite("FireEnter", &UWillowCoverStanceDefinition::FireEnter, py::return_value_policy::reference)
		.def_readwrite("FireExit", &UWillowCoverStanceDefinition::FireExit, py::return_value_policy::reference)
		.def_readwrite("FireIdle", &UWillowCoverStanceDefinition::FireIdle, py::return_value_policy::reference)
		;
	py::class_< UWillowFormationComponent, UPrimitiveComponent >(m, "UWillowFormationComponent")
		.def_property("bMagnetize", [](UWillowFormationComponent &self){return self.bMagnetize;}, [](UWillowFormationComponent &self, bool value){self.bMagnetize = value ? 1 : 0;})
		.def_property("bShouldCrouch", [](UWillowFormationComponent &self){return self.bShouldCrouch;}, [](UWillowFormationComponent &self, bool value){self.bShouldCrouch = value ? 1 : 0;})
		.def_readwrite("NameTag", &UWillowFormationComponent::NameTag, py::return_value_policy::reference)
		.def_readwrite("AIOwner", &UWillowFormationComponent::AIOwner, py::return_value_policy::reference)
		;
	py::class_< AWillowMind, AGearboxMind >(m, "AWillowMind")
		.def_property("bCharacterClassInitialized", [](AWillowMind &self){return self.bCharacterClassInitialized;}, [](AWillowMind &self, bool value){self.bCharacterClassInitialized = value ? 1 : 0;})
		.def_property("bWantsToSprint", [](AWillowMind &self){return self.bWantsToSprint;}, [](AWillowMind &self, bool value){self.bWantsToSprint = value ? 1 : 0;})
		.def_property("bCurrentlyScripted", [](AWillowMind &self){return self.bCurrentlyScripted;}, [](AWillowMind &self, bool value){self.bCurrentlyScripted = value ? 1 : 0;})
		.def_property("bScriptedHoldPosition", [](AWillowMind &self){return self.bScriptedHoldPosition;}, [](AWillowMind &self, bool value){self.bScriptedHoldPosition = value ? 1 : 0;})
		.def_property("bScriptedCanAttack", [](AWillowMind &self){return self.bScriptedCanAttack;}, [](AWillowMind &self, bool value){self.bScriptedCanAttack = value ? 1 : 0;})
		.def_property("bWantsToFireWeapon", [](AWillowMind &self){return self.bWantsToFireWeapon;}, [](AWillowMind &self, bool value){self.bWantsToFireWeapon = value ? 1 : 0;})
		.def_property("bWeaponsRestricted", [](AWillowMind &self){return self.bWeaponsRestricted;}, [](AWillowMind &self, bool value){self.bWeaponsRestricted = value ? 1 : 0;})
		.def_property("bWeaponFireUseRotation", [](AWillowMind &self){return self.bWeaponFireUseRotation;}, [](AWillowMind &self, bool value){self.bWeaponFireUseRotation = value ? 1 : 0;})
		.def_property("bProvoked", [](AWillowMind &self){return self.bProvoked;}, [](AWillowMind &self, bool value){self.bProvoked = value ? 1 : 0;})
		.def_property("bPawnAddedToRadar", [](AWillowMind &self){return self.bPawnAddedToRadar;}, [](AWillowMind &self, bool value){self.bPawnAddedToRadar = value ? 1 : 0;})
		.def_property("bWantsRotationAudio", [](AWillowMind &self){return self.bWantsRotationAudio;}, [](AWillowMind &self, bool value){self.bWantsRotationAudio = value ? 1 : 0;})
		.def_readwrite("VfTable_IISeeTargetable", &AWillowMind::VfTable_IISeeTargetable, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIControllerLocator", &AWillowMind::VfTable_IIControllerLocator, py::return_value_policy::reference)
		.def_readwrite("VfTable_IIConstructObject", &AWillowMind::VfTable_IIConstructObject, py::return_value_policy::reference)
		.def_readwrite("AIClass", &AWillowMind::AIClass, py::return_value_policy::reference)
		.def_readwrite("MyWillowPawn", &AWillowMind::MyWillowPawn, py::return_value_policy::reference)
		.def_readwrite("AIDefOverride", &AWillowMind::AIDefOverride, py::return_value_policy::reference)
		.def_readwrite("SpawnParent", &AWillowMind::SpawnParent, py::return_value_policy::reference)
		.def_readwrite("SpawnChildren", &AWillowMind::SpawnChildren, py::return_value_policy::reference)
		.def_readwrite("TotalSpawnedChildren", &AWillowMind::TotalSpawnedChildren)
		.def_readwrite("DirectionHint", &AWillowMind::DirectionHint, py::return_value_policy::reference)
		.def_readwrite("WillowNav", &AWillowMind::WillowNav, py::return_value_policy::reference)
		.def_readwrite("DistanceToGoal", &AWillowMind::DistanceToGoal)
		.def_readwrite("LastPatrolNode", &AWillowMind::LastPatrolNode, py::return_value_policy::reference)
		.def_readwrite("LastScriptedNode", &AWillowMind::LastScriptedNode, py::return_value_policy::reference)
		.def_readwrite("ScriptedStance", &AWillowMind::ScriptedStance)
		.def_readwrite("ScriptedFocusStyle", &AWillowMind::ScriptedFocusStyle)
		.def_readwrite("WeaponFireMode", &AWillowMind::WeaponFireMode)
		.def_readwrite("ScriptedAction", &AWillowMind::ScriptedAction, py::return_value_policy::reference)
		.def_readwrite("LastUsedTime", &AWillowMind::LastUsedTime)
		.def_readwrite("LookAtPlayer", &AWillowMind::LookAtPlayer, py::return_value_policy::reference)
		.def_readwrite("FollowActor", &AWillowMind::FollowActor, py::return_value_policy::reference)
		.def_readwrite("FollowMinDist", &AWillowMind::FollowMinDist)
		.def_readwrite("FollowMaxDist", &AWillowMind::FollowMaxDist)
		.def_readwrite("FollowComponent", &AWillowMind::FollowComponent, py::return_value_policy::reference)
		.def_readwrite("SightFireCone", &AWillowMind::SightFireCone)
		.def_readwrite("LastWeaponFireTime", &AWillowMind::LastWeaponFireTime)
		.def_readwrite("WeaponBurstEndTime", &AWillowMind::WeaponBurstEndTime)
		.def_readwrite("NextAvailableFireTime", &AWillowMind::NextAvailableFireTime)
		.def_readwrite("PatrolPerch", &AWillowMind::PatrolPerch, py::return_value_policy::reference)
		.def_readwrite("CombatPerch", &AWillowMind::CombatPerch, py::return_value_policy::reference)
		.def_readwrite("RotationRateModifier", &AWillowMind::RotationRateModifier)
		.def_readwrite("RotationRateModifierBaseValue", &AWillowMind::RotationRateModifierBaseValue)
		.def_readwrite("RotationRateModifierModifierStack", &AWillowMind::RotationRateModifierModifierStack, py::return_value_policy::reference)
		.def_readwrite("AvoidanceModifier", &AWillowMind::AvoidanceModifier, py::return_value_policy::reference)
		.def_readwrite("ProvokedLocation", &AWillowMind::ProvokedLocation, py::return_value_policy::reference)
		.def_readwrite("InteractionProxy", &AWillowMind::InteractionProxy, py::return_value_policy::reference)
		.def_readwrite("SpawnedHelperActor", &AWillowMind::SpawnedHelperActor, py::return_value_policy::reference)
		.def_readwrite("SightViewCone", &AWillowMind::SightViewCone)
		.def_readwrite("MinAggroTimeToConsiderAwareOfTarget", &AWillowMind::MinAggroTimeToConsiderAwareOfTarget)
		.def("eventNotifyFallingHitWall", &AWillowMind::eventNotifyFallingHitWall)
		.def("PassInteractionProxyEventsToKismet", &AWillowMind::PassInteractionProxyEventsToKismet)
		.def("ProcessTraceTouch", &AWillowMind::ProcessTraceTouch)
		.def("eventTraceTouch", &AWillowMind::eventTraceTouch)
		.def("IsTooFarFromHome", &AWillowMind::IsTooFarFromHome)
		.def("GetViewLocation", &AWillowMind::GetViewLocation, py::return_value_policy::reference)
		.def("GetWorldBody", &AWillowMind::GetWorldBody, py::return_value_policy::reference)
		.def("GetAWillowMind", &AWillowMind::GetAWillowMind, py::return_value_policy::reference)
		.def("GetAWillowPlayerController", &AWillowMind::GetAWillowPlayerController, py::return_value_policy::reference)
		.def("GetABaseController", &AWillowMind::GetABaseController, py::return_value_policy::reference)
		.def("StopRotationAudio", &AWillowMind::StopRotationAudio)
		.def("StartRotationAudio", &AWillowMind::StartRotationAudio)
		.def("SetWantsRotationAudio", &AWillowMind::SetWantsRotationAudio)
		.def("GetWantsRotationAudio", &AWillowMind::GetWantsRotationAudio)
		.def("ParentIsScripted", &AWillowMind::ParentIsScripted)
		.def("GetNumSpawnChildren", &AWillowMind::GetNumSpawnChildren)
		.def("ParentDistToTarget", &AWillowMind::ParentDistToTarget)
		.def("InGodMode", &AWillowMind::InGodMode)
		.def("SetAIDemigod", &AWillowMind::SetAIDemigod)
		.def("GetAIDemigod", &AWillowMind::GetAIDemigod)
		.def("SetAIGod", &AWillowMind::SetAIGod)
		.def("GetAIGod", &AWillowMind::GetAIGod)
		.def("ActivateEventRule", &AWillowMind::ActivateEventRule)
		.def("SetOverrideAIDef", &AWillowMind::SetOverrideAIDef)
		.def("InitSequence", &AWillowMind::InitSequence)
		.def("GetAIDefinition", &AWillowMind::GetAIDefinition, py::return_value_policy::reference)
		.def("GetAIParent", &AWillowMind::GetAIParent, py::return_value_policy::reference)
		.def("CanTickAI", &AWillowMind::CanTickAI)
		.def("GetReplicatedInstanceDataState", &AWillowMind::GetReplicatedInstanceDataState)
		.def("GetInstanceDataState", &AWillowMind::GetInstanceDataState)
		.def("DestroyOwnedInstanceData", &AWillowMind::DestroyOwnedInstanceData)
		.def("KillHelperActor", &AWillowMind::KillHelperActor)
		.def("eventRemoveInstanceDataObject", &AWillowMind::eventRemoveInstanceDataObject)
		.def("eventRemoveInstanceData", &AWillowMind::eventRemoveInstanceData)
		.def("eventGetInstanceData", &AWillowMind::eventGetInstanceData)
		.def("SetInstanceData", &AWillowMind::SetInstanceData)
		.def("GetInstanceDataPawn", &AWillowMind::GetInstanceDataPawn, py::return_value_policy::reference)
		.def("Behavior_GetSkillInstigatorController", &AWillowMind::Behavior_GetSkillInstigatorController, py::return_value_policy::reference)
		.def("Behavior_UpgradeSkill", &AWillowMind::Behavior_UpgradeSkill)
		.def("Behavior_DeactivateSkill", &AWillowMind::Behavior_DeactivateSkill)
		.def("Behavior_ActivateSkill", &AWillowMind::Behavior_ActivateSkill)
		.def("SetFlag", &AWillowMind::SetFlag)
		.def("NotifyTakeHit", &AWillowMind::NotifyTakeHit)
		.def("GetRallyPoint", &AWillowMind::GetRallyPoint, py::return_value_policy::reference)
		.def("GetPopOpDen", &AWillowMind::GetPopOpDen, py::return_value_policy::reference)
		.def("GetPerchLocation", &AWillowMind::GetPerchLocation, py::return_value_policy::reference)
		.def("CheckForPerch", &AWillowMind::CheckForPerch)
		.def("eventTakeDamage", &AWillowMind::eventTakeDamage)
		.def("eventReceiveRunOverWarning", &AWillowMind::eventReceiveRunOverWarning)
		.def("GetDirectionHint", &AWillowMind::GetDirectionHint, py::return_value_policy::reference)
		.def("ExitVehicle", &AWillowMind::ExitVehicle)
		.def("EnterVehicle", &AWillowMind::EnterVehicle)
		.def("TargetIsFriendly", &AWillowMind::TargetIsFriendly)
		.def("AddTargetable", &AWillowMind::AddTargetable)
		.def("IsAwareOfTarget", &AWillowMind::IsAwareOfTarget)
		.def("NotifyAttackedBy", &AWillowMind::NotifyAttackedBy)
		.def("OnAICombatVolume", &AWillowMind::OnAICombatVolume)
		.def("OnAILookAt", &AWillowMind::OnAILookAt)
		.def("OnAIProvoke", &AWillowMind::OnAIProvoke)
		.def("OnAIScriptedFollow", &AWillowMind::OnAIScriptedFollow)
		.def("OnAIScriptedDeath", &AWillowMind::OnAIScriptedDeath)
		.def("StopScriptedAnim", &AWillowMind::StopScriptedAnim)
		.def("ScriptedAnimEnded", &AWillowMind::ScriptedAnimEnded)
		.def("OnAIScriptedAnim", &AWillowMind::OnAIScriptedAnim)
		.def("OnAIScriptedHold", &AWillowMind::OnAIScriptedHold)
		.def("OnAIScripted", &AWillowMind::OnAIScripted)
		.def("ClearScriptedMove", &AWillowMind::ClearScriptedMove)
		.def("OnAIAbortMoveToActor", &AWillowMind::OnAIAbortMoveToActor)
		.def("ForceMoveToActor", &AWillowMind::ForceMoveToActor)
		.def("IsFlying", &AWillowMind::IsFlying)
		.def("WantsToSprint", &AWillowMind::WantsToSprint)
		.def("SetWantsToSprint", &AWillowMind::SetWantsToSprint)
		.def("ShouldLookAtPlayer", &AWillowMind::ShouldLookAtPlayer)
		.def("IsInScriptedMovement", &AWillowMind::IsInScriptedMovement)
		.def("InitNavigationHandle", &AWillowMind::InitNavigationHandle)
		.def("CanHoldWeapon", &AWillowMind::CanHoldWeapon)
		.def("SetWeaponsRestricted", &AWillowMind::SetWeaponsRestricted)
		.def("GetTargetLeadOffset", &AWillowMind::GetTargetLeadOffset, py::return_value_policy::reference)
		.def("ShouldPauseFiring", &AWillowMind::ShouldPauseFiring)
		.def("ShouldStopFiring", &AWillowMind::ShouldStopFiring)
		.def("CanFireMyWeapon", &AWillowMind::CanFireMyWeapon)
		.def("TickWeaponFire", &AWillowMind::TickWeaponFire)
		.def("eventGetWeaponBurstLength", &AWillowMind::eventGetWeaponBurstLength)
		.def("eventGetWeaponFireDelay", &AWillowMind::eventGetWeaponFireDelay)
		.def("eventGetWeaponSpeed", &AWillowMind::eventGetWeaponSpeed)
		.def("eventStopFiringWeapon", &AWillowMind::eventStopFiringWeapon)
		.def("eventStartFiringWeapon", &AWillowMind::eventStartFiringWeapon)
		.def("GetAdjustedAimFor", &AWillowMind::GetAdjustedAimFor, py::return_value_policy::reference)
		.def("RecalculateAttributeInitializedState", &AWillowMind::RecalculateAttributeInitializedState)
		.def("ApplyCharacterClassDefaults", &AWillowMind::ApplyCharacterClassDefaults)
		.def("GetClassDefinition", &AWillowMind::GetClassDefinition, py::return_value_policy::reference)
		.def("CleanSpawnFamily", &AWillowMind::CleanSpawnFamily)
		.def("PawnDied", &AWillowMind::PawnDied)
		.def("eventUnPossess", &AWillowMind::eventUnPossess)
		.def("InitializeCharacterClass", &AWillowMind::InitializeCharacterClass)
		.def("eventPossess", &AWillowMind::eventPossess)
		.def("OnTeleport", &AWillowMind::OnTeleport)
		.def("GetAllegiance", &AWillowMind::GetAllegiance, py::return_value_policy::reference)
		.def("GetWorldPawn", &AWillowMind::GetWorldPawn, py::return_value_policy::reference)
		.def("GetActor", &AWillowMind::GetActor, py::return_value_policy::reference)
		.def("eventDestroyed", &AWillowMind::eventDestroyed)
		;
	py::class_< UWillowMindAttributeContextResolver, UAttributeContextResolver >(m, "UWillowMindAttributeContextResolver")
		;
	py::class_< UWillowMindTargetInfo, UMindTargetInfo >(m, "UWillowMindTargetInfo")
		.def_property("bTargetLost", [](UWillowMindTargetInfo &self){return self.bTargetLost;}, [](UWillowMindTargetInfo &self, bool value){self.bTargetLost = value ? 1 : 0;})
		.def_readwrite("Targetable", &UWillowMindTargetInfo::Targetable, py::return_value_policy::reference)
		.def_readwrite("Distance2D", &UWillowMindTargetInfo::Distance2D)
		.def_readwrite("DotToTarget", &UWillowMindTargetInfo::DotToTarget)
		.def_readwrite("DotFromTarget", &UWillowMindTargetInfo::DotFromTarget)
		.def_readwrite("DistanceVertical", &UWillowMindTargetInfo::DistanceVertical)
		.def_readwrite("WeaponDotToTarget", &UWillowMindTargetInfo::WeaponDotToTarget)
		.def_readwrite("LeftDotToTarget", &UWillowMindTargetInfo::LeftDotToTarget)
		.def_readwrite("DotTargetFacing", &UWillowMindTargetInfo::DotTargetFacing)
		.def_readwrite("ThreatLevel", &UWillowMindTargetInfo::ThreatLevel)
		.def_readwrite("Exposure", &UWillowMindTargetInfo::Exposure)
		.def_readwrite("CoverExposure", &UWillowMindTargetInfo::CoverExposure)
		.def_readwrite("ForgetTime", &UWillowMindTargetInfo::ForgetTime)
		.def_readwrite("AggroTime", &UWillowMindTargetInfo::AggroTime)
		.def_readwrite("ExposureChangeTime", &UWillowMindTargetInfo::ExposureChangeTime)
		.def_readwrite("LastKnownLocation", &UWillowMindTargetInfo::LastKnownLocation, py::return_value_policy::reference)
		.def_readwrite("LastAttackTime", &UWillowMindTargetInfo::LastAttackTime)
		.def_readwrite("TotalDamagePct", &UWillowMindTargetInfo::TotalDamagePct)
		.def_readwrite("MovingAI", &UWillowMindTargetInfo::MovingAI, py::return_value_policy::reference)
		.def("GetTargetLocation", &UWillowMindTargetInfo::GetTargetLocation, py::return_value_policy::reference)
		;
	py::class_< UWillowNavigationHandle, UGearboxNavigationHandle >(m, "UWillowNavigationHandle")
		.def_property("bInitialized", [](UWillowNavigationHandle &self){return self.bInitialized;}, [](UWillowNavigationHandle &self, bool value){self.bInitialized = value ? 1 : 0;})
		.def_property("bGoalActorIsFinalDest", [](UWillowNavigationHandle &self){return self.bGoalActorIsFinalDest;}, [](UWillowNavigationHandle &self, bool value){self.bGoalActorIsFinalDest = value ? 1 : 0;})
		.def_property("bNavMeshWalking", [](UWillowNavigationHandle &self){return self.bNavMeshWalking;}, [](UWillowNavigationHandle &self, bool value){self.bNavMeshWalking = value ? 1 : 0;})
		.def_property("bFlightBlocked", [](UWillowNavigationHandle &self){return self.bFlightBlocked;}, [](UWillowNavigationHandle &self, bool value){self.bFlightBlocked = value ? 1 : 0;})
		.def_property("bFlightFullyBlocked", [](UWillowNavigationHandle &self){return self.bFlightFullyBlocked;}, [](UWillowNavigationHandle &self, bool value){self.bFlightFullyBlocked = value ? 1 : 0;})
		.def_property("bIsAvoidingObstacle", [](UWillowNavigationHandle &self){return self.bIsAvoidingObstacle;}, [](UWillowNavigationHandle &self, bool value){self.bIsAvoidingObstacle = value ? 1 : 0;})
		.def_property("bWasAvoidingObstacle", [](UWillowNavigationHandle &self){return self.bWasAvoidingObstacle;}, [](UWillowNavigationHandle &self, bool value){self.bWasAvoidingObstacle = value ? 1 : 0;})
		.def_readwrite("MyWillowMind", &UWillowNavigationHandle::MyWillowMind, py::return_value_policy::reference)
		.def_readwrite("MyWillowPawn", &UWillowNavigationHandle::MyWillowPawn, py::return_value_policy::reference)
		.def_readwrite("ControllingAction", &UWillowNavigationHandle::ControllingAction, py::return_value_policy::reference)
		.def_readwrite("PathFindActionIndex", &UWillowNavigationHandle::PathFindActionIndex)
		.def_readwrite("PathZone", &UWillowNavigationHandle::PathZone, py::return_value_policy::reference)
		.def_readwrite("FixMode", &UWillowNavigationHandle::FixMode)
		.def_readwrite("FlightMode", &UWillowNavigationHandle::FlightMode)
		.def_readwrite("FixStartTime", &UWillowNavigationHandle::FixStartTime)
		.def_readwrite("FixPosition", &UWillowNavigationHandle::FixPosition, py::return_value_policy::reference)
		.def_readwrite("FixWaitTime", &UWillowNavigationHandle::FixWaitTime)
		.def_readwrite("FixMoveTime", &UWillowNavigationHandle::FixMoveTime)
		.def_readwrite("FixLerpTime", &UWillowNavigationHandle::FixLerpTime)
		.def_readwrite("FixMaxDist", &UWillowNavigationHandle::FixMaxDist)
		.def_readwrite("FixFailedWaitTime", &UWillowNavigationHandle::FixFailedWaitTime)
		.def_readwrite("FlyHitIndex", &UWillowNavigationHandle::FlyHitIndex)
		.def_readwrite("OriginalFlyDirection", &UWillowNavigationHandle::OriginalFlyDirection, py::return_value_policy::reference)
		.def_readwrite("FlyHits", &UWillowNavigationHandle::FlyHits, py::return_value_policy::reference)
		.def_readwrite("FlyDirections", &UWillowNavigationHandle::FlyDirections, py::return_value_policy::reference)
		.def_readwrite("FlightObstacleDistPct", &UWillowNavigationHandle::FlightObstacleDistPct)
		.def_readwrite("FlyFixRate", &UWillowNavigationHandle::FlyFixRate)
		.def_readwrite("FlyFixLastCheckTime", &UWillowNavigationHandle::FlyFixLastCheckTime)
		.def_readwrite("FlyFixLocation", &UWillowNavigationHandle::FlyFixLocation, py::return_value_policy::reference)
		.def_readwrite("MyNextExpensiveFrame", &UWillowNavigationHandle::MyNextExpensiveFrame)
		.def("PassedCurrentFlyGoal", &UWillowNavigationHandle::PassedCurrentFlyGoal)
		.def("ReachedCurrentFlyGoal", &UWillowNavigationHandle::ReachedCurrentFlyGoal)
		.def("CheckFlying", &UWillowNavigationHandle::CheckFlying)
		.def("TickFlying", &UWillowNavigationHandle::TickFlying)
		.def("SetWantsToFly", &UWillowNavigationHandle::SetWantsToFly)
		.def("WantsToFly", &UWillowNavigationHandle::WantsToFly)
		.def("ShouldFly", &UWillowNavigationHandle::ShouldFly)
		.def("IsFlying", &UWillowNavigationHandle::IsFlying)
		.def("ProcessObstacleAvoidance", &UWillowNavigationHandle::ProcessObstacleAvoidance)
		.def("NotifyAvoidingObstacle", &UWillowNavigationHandle::NotifyAvoidingObstacle)
		.def("CanAvoidObstacles", &UWillowNavigationHandle::CanAvoidObstacles)
		.def("FixByLerping", &UWillowNavigationHandle::FixByLerping)
		.def("FixByMoving", &UWillowNavigationHandle::FixByMoving)
		.def("FixAnchor", &UWillowNavigationHandle::FixAnchor)
		.def("ClearSpecialMovement", &UWillowNavigationHandle::ClearSpecialMovement)
		.def("IsPaused", &UWillowNavigationHandle::IsPaused)
		.def("IsHardAttached", &UWillowNavigationHandle::IsHardAttached)
		.def("GoalReachable", &UWillowNavigationHandle::GoalReachable)
		.def("PointReachable", &UWillowNavigationHandle::PointReachable)
		.def("TrySpecialMove", &UWillowNavigationHandle::TrySpecialMove)
		.def("GetMoveVector", &UWillowNavigationHandle::GetMoveVector, py::return_value_policy::reference)
		.def("SetFacingPolicy", &UWillowNavigationHandle::SetFacingPolicy)
		.def("IsGoalValid", &UWillowNavigationHandle::IsGoalValid)
		.def("MovePawnToGoal", &UWillowNavigationHandle::MovePawnToGoal)
		.def("SetPawnPhysics", &UWillowNavigationHandle::SetPawnPhysics)
		.def("FindActionPaths", &UWillowNavigationHandle::FindActionPaths)
		.def("ClearPath", &UWillowNavigationHandle::ClearPath)
		.def("PathIsValid", &UWillowNavigationHandle::PathIsValid)
		.def("CanFollowPath", &UWillowNavigationHandle::CanFollowPath)
		.def("FollowPath", &UWillowNavigationHandle::FollowPath)
		.def("CreateConstrainedPath", &UWillowNavigationHandle::CreateConstrainedPath)
		;
	py::class_< UWillowClientNavigationHandle, UWillowNavigationHandle >(m, "UWillowClientNavigationHandle")
		;
	py::class_< UWillowNavMeshPathFinder, UGBXNavMeshPathFinder >(m, "UWillowNavMeshPathFinder")
		.def("FindConstrainedPath", &UWillowNavMeshPathFinder::FindConstrainedPath)
		;
	py::class_< UWillowObstacleRenderComponent, UPrimitiveComponent >(m, "UWillowObstacleRenderComponent")
		;
	py::class_< ADeployableTurretActor, AWillowAIPawn >(m, "ADeployableTurretActor")
		.def_property("bIsAttached", [](ADeployableTurretActor &self){return self.bIsAttached;}, [](ADeployableTurretActor &self, bool value){self.bIsAttached = value ? 1 : 0;})
		.def_readwrite("BounceImpact", &ADeployableTurretActor::BounceImpact, py::return_value_policy::reference)
		.def_readwrite("AtRestSpeedThreshold", &ADeployableTurretActor::AtRestSpeedThreshold)
		.def_readwrite("TurretEffects", &ADeployableTurretActor::TurretEffects, py::return_value_policy::reference)
		.def_readwrite("TurretDamagePct", &ADeployableTurretActor::TurretDamagePct)
		.def_readwrite("DamageEffectTriggers", &ADeployableTurretActor::DamageEffectTriggers, py::return_value_policy::reference)
		.def("PostSpawnCheckForPlayerOverlap", &ADeployableTurretActor::PostSpawnCheckForPlayerOverlap)
		.def("PostInitBodyComposition", &ADeployableTurretActor::PostInitBodyComposition)
		.def("FindBase", &ADeployableTurretActor::FindBase)
		.def("CheckTurretDamage", &ADeployableTurretActor::CheckTurretDamage)
		.def("TriggerTurretEffect", &ADeployableTurretActor::TriggerTurretEffect)
		.def("Died", &ADeployableTurretActor::Died)
		.def("eventHandleHealthDepleted", &ADeployableTurretActor::eventHandleHealthDepleted)
		.def("ShutOffTurretEffectsOnDeath", &ADeployableTurretActor::ShutOffTurretEffectsOnDeath)
		.def("PostBeginPlay", &ADeployableTurretActor::PostBeginPlay)
		.def("eventReplicatedEvent", &ADeployableTurretActor::eventReplicatedEvent)
		;
	py::class_< UWillowSeqEvent_DenStat, USequenceEvent >(m, "UWillowSeqEvent_DenStat")
		.def_readwrite("TriggerValue", &UWillowSeqEvent_DenStat::TriggerValue)
		;
	py::class_< UWillowSeqEvent_Provoked, USequenceEvent >(m, "UWillowSeqEvent_Provoked")
		;
	py::class_< UWillowTI_CalcCanFire, UTI_Calc >(m, "UWillowTI_CalcCanFire")
		;
	py::class_< UWillowTI_CalcDistances, UTI_Calc >(m, "UWillowTI_CalcDistances")
		;
	py::class_< UWillowTI_CalcExposure, UTI_Calc >(m, "UWillowTI_CalcExposure")
		;
	py::class_< UWillowTI_CalcThreat, UTI_Calc >(m, "UWillowTI_CalcThreat")
		;
	py::class_< UWillowTI_PrioritizeAttacking, UTI_Prioritize >(m, "UWillowTI_PrioritizeAttacking")
		.def_readwrite("DecayRate", &UWillowTI_PrioritizeAttacking::DecayRate)
		.def_readwrite("FullyEngagedPct", &UWillowTI_PrioritizeAttacking::FullyEngagedPct)
		;
	py::class_< UWillowTI_PrioritizeHealth, UTI_Prioritize >(m, "UWillowTI_PrioritizeHealth")
		.def_readwrite("Priority", &UWillowTI_PrioritizeHealth::Priority)
		;
	py::class_< UWillowTI_PrioritizeIdle, UTI_Prioritize >(m, "UWillowTI_PrioritizeIdle")
		.def_readwrite("MaxAICurrentlyTargeting", &UWillowTI_PrioritizeIdle::MaxAICurrentlyTargeting)
		;
	py::class_< UWillowTI_PrioritizeOpinion, UTI_Prioritize >(m, "UWillowTI_PrioritizeOpinion")
		.def_readwrite("Opinion", &UWillowTI_PrioritizeOpinion::Opinion)
		;
	py::class_< AAIDebugDummyBase, ASkeletalMeshActor >(m, "AAIDebugDummyBase")
		.def_readwrite("MyMesh", &AAIDebugDummyBase::MyMesh, py::return_value_policy::reference)
		.def_readwrite("MatInstBody", &AAIDebugDummyBase::MatInstBody, py::return_value_policy::reference)
		.def_readwrite("MatInstHead", &AAIDebugDummyBase::MatInstHead, py::return_value_policy::reference)
		.def_readwrite("MatInstHelmet", &AAIDebugDummyBase::MatInstHelmet, py::return_value_policy::reference)
		.def_readwrite("DummyColor", &AAIDebugDummyBase::DummyColor, py::return_value_policy::reference)
		.def("eventSetSkeletalMesh", &AAIDebugDummyBase::eventSetSkeletalMesh)
		.def("PostBeginPlay", &AAIDebugDummyBase::PostBeginPlay)
		;
	py::class_< UWillowAIDebugCamera, UAIDebugCamera >(m, "UWillowAIDebugCamera")
		.def_property("bShowAINodeReservation", [](UWillowAIDebugCamera &self){return self.bShowAINodeReservation;}, [](UWillowAIDebugCamera &self, bool value){self.bShowAINodeReservation = value ? 1 : 0;})
		.def_property("bShowTerritoryZones", [](UWillowAIDebugCamera &self){return self.bShowTerritoryZones;}, [](UWillowAIDebugCamera &self, bool value){self.bShowTerritoryZones = value ? 1 : 0;})
		.def_property("bShowWillowInspectorStats", [](UWillowAIDebugCamera &self){return self.bShowWillowInspectorStats;}, [](UWillowAIDebugCamera &self, bool value){self.bShowWillowInspectorStats = value ? 1 : 0;})
		.def_property("bShowAccuracyDebug", [](UWillowAIDebugCamera &self){return self.bShowAccuracyDebug;}, [](UWillowAIDebugCamera &self, bool value){self.bShowAccuracyDebug = value ? 1 : 0;})
		.def_readwrite("Dummies", &UWillowAIDebugCamera::Dummies, py::return_value_policy::reference)
		.def_readwrite("AIDebugDummyClass", &UWillowAIDebugCamera::AIDebugDummyClass, py::return_value_policy::reference)
		.def_readwrite("NumDummies", &UWillowAIDebugCamera::NumDummies)
		.def("ToggleAccuracyDebug", &UWillowAIDebugCamera::ToggleAccuracyDebug)
		.def("ToggleWillowInspectorStats", &UWillowAIDebugCamera::ToggleWillowInspectorStats)
		.def("ToggleTerritoryZones", &UWillowAIDebugCamera::ToggleTerritoryZones)
		.def("ToggleAIShowNodeReservation", &UWillowAIDebugCamera::ToggleAIShowNodeReservation)
		.def("SetRuleEngine", &UWillowAIDebugCamera::SetRuleEngine)
		.def("InitDummies", &UWillowAIDebugCamera::InitDummies)
		.def("SetPrevSnapshot", &UWillowAIDebugCamera::SetPrevSnapshot)
		.def("SetNextSnapshot", &UWillowAIDebugCamera::SetNextSnapshot)
		.def("NotifyGameUnPaused", &UWillowAIDebugCamera::NotifyGameUnPaused)
		.def("NotifyGamePaused", &UWillowAIDebugCamera::NotifyGamePaused)
		;
	py::class_< AWillowNavDebug, AActor >(m, "AWillowNavDebug")
		;
	py::class_< UWillowPawnSnapshotRecord, UGearboxPawnSnapshotRecord >(m, "UWillowPawnSnapshotRecord")
		.def_readwrite("MyWillowPawnName", &UWillowPawnSnapshotRecord::MyWillowPawnName, py::return_value_policy::reference)
		.def_readwrite("MyWeaponName", &UWillowPawnSnapshotRecord::MyWeaponName, py::return_value_policy::reference)
		.def_readwrite("MyDrivenVehicleName", &UWillowPawnSnapshotRecord::MyDrivenVehicleName, py::return_value_policy::reference)
		.def_readwrite("FacingPolicy", &UWillowPawnSnapshotRecord::FacingPolicy)
		.def_readwrite("MyPhysics", &UWillowPawnSnapshotRecord::MyPhysics)
		.def_readwrite("MyRootMotionMode", &UWillowPawnSnapshotRecord::MyRootMotionMode)
		.def_readwrite("TerritoryZones", &UWillowPawnSnapshotRecord::TerritoryZones, py::return_value_policy::reference)
		.def_readwrite("BestTargetData", &UWillowPawnSnapshotRecord::BestTargetData, py::return_value_policy::reference)
		.def_readwrite("BestTargetLocation", &UWillowPawnSnapshotRecord::BestTargetLocation, py::return_value_policy::reference)
		.def_readwrite("Destination", &UWillowPawnSnapshotRecord::Destination, py::return_value_policy::reference)
		.def_readwrite("SpaceBases", &UWillowPawnSnapshotRecord::SpaceBases, py::return_value_policy::reference)
		.def_readwrite("ExperienceLevel", &UWillowPawnSnapshotRecord::ExperienceLevel)
		.def_readwrite("GameStage", &UWillowPawnSnapshotRecord::GameStage)
		.def_readwrite("AwesomeLevel", &UWillowPawnSnapshotRecord::AwesomeLevel)
		.def_readwrite("CurHealth", &UWillowPawnSnapshotRecord::CurHealth)
		.def_readwrite("CurShield", &UWillowPawnSnapshotRecord::CurShield)
		.def_readwrite("MaxShield", &UWillowPawnSnapshotRecord::MaxShield)
		.def_readwrite("WeaponLevel", &UWillowPawnSnapshotRecord::WeaponLevel)
		.def_readwrite("WeaponDamage", &UWillowPawnSnapshotRecord::WeaponDamage)
		.def_readwrite("PathState", &UWillowPawnSnapshotRecord::PathState, py::return_value_policy::reference)
		.def_readwrite("PathFailTime", &UWillowPawnSnapshotRecord::PathFailTime)
		.def_readwrite("PathFailCount", &UWillowPawnSnapshotRecord::PathFailCount)
		.def_readwrite("PathFailName", &UWillowPawnSnapshotRecord::PathFailName, py::return_value_policy::reference)
		.def_readwrite("TargetVehiclePursuitPoints", &UWillowPawnSnapshotRecord::TargetVehiclePursuitPoints, py::return_value_policy::reference)
		.def_readwrite("TargetVehicleSelectedPursuitPointNdx", &UWillowPawnSnapshotRecord::TargetVehicleSelectedPursuitPointNdx)
		.def_readwrite("ExtraDebugItems", &UWillowPawnSnapshotRecord::ExtraDebugItems, py::return_value_policy::reference)
		;
	py::class_< UWillowSnapshotRecord, USnapshotRecord >(m, "UWillowSnapshotRecord")
		;
	py::class_< UWillowPlayerSnapshotRecord, UWillowSnapshotRecord >(m, "UWillowPlayerSnapshotRecord")
		.def_readwrite("MyWillowPawnName", &UWillowPlayerSnapshotRecord::MyWillowPawnName, py::return_value_policy::reference)
		;
	py::class_< UHUDDefinition, UGBXDefinition >(m, "UHUDDefinition")
		.def_readwrite("MaxDamageIndicators", &UHUDDefinition::MaxDamageIndicators)
		.def_readwrite("DamageIndicatorLifetime", &UHUDDefinition::DamageIndicatorLifetime)
		.def_readwrite("ItemCardAwarenessRange", &UHUDDefinition::ItemCardAwarenessRange)
		.def_readwrite("PickupRange", &UHUDDefinition::PickupRange)
		.def_readwrite("CompassIconScaleMax", &UHUDDefinition::CompassIconScaleMax)
		.def_readwrite("CompassIconScaleMin", &UHUDDefinition::CompassIconScaleMin)
		.def_readwrite("CompassIconScaleMaxRange", &UHUDDefinition::CompassIconScaleMaxRange)
		.def_readwrite("CompassIconScaleMinRange", &UHUDDefinition::CompassIconScaleMinRange)
		.def_readwrite("CustomAttributePresentation", &UHUDDefinition::CustomAttributePresentation, py::return_value_policy::reference)
		.def_readwrite("MaximumPainRotation", &UHUDDefinition::MaximumPainRotation)
		.def_readwrite("MaximumPainOffset", &UHUDDefinition::MaximumPainOffset)
		.def_readwrite("MaximumPainFOV", &UHUDDefinition::MaximumPainFOV)
		.def_readwrite("MaximumDamage", &UHUDDefinition::MaximumDamage)
		.def_readwrite("PainLength", &UHUDDefinition::PainLength)
		.def_readwrite("LevelTimerDefinition", &UHUDDefinition::LevelTimerDefinition, py::return_value_policy::reference)
		.def_readwrite("HUDMovieDefinition", &UHUDDefinition::HUDMovieDefinition, py::return_value_policy::reference)
		.def_readwrite("StatusMenuDefinition", &UHUDDefinition::StatusMenuDefinition, py::return_value_policy::reference)
		.def_readwrite("QUICKSLOT_SELECTED", &UHUDDefinition::QUICKSLOT_SELECTED)
		.def_readwrite("QUICKSLOT_LOCKED", &UHUDDefinition::QUICKSLOT_LOCKED)
		.def_readwrite("QUICKSLOT_AVAILABLE", &UHUDDefinition::QUICKSLOT_AVAILABLE)
		.def_readwrite("P1QuickSlotTextures", &UHUDDefinition::P1QuickSlotTextures, py::return_value_policy::reference)
		.def_readwrite("P2QuickSlotTextures", &UHUDDefinition::P2QuickSlotTextures, py::return_value_policy::reference)
		.def_readwrite("QUICKSLOT_TEX_WIDTH", &UHUDDefinition::QUICKSLOT_TEX_WIDTH)
		.def_readwrite("QUICKSLOT_TEX_HEIGHT", &UHUDDefinition::QUICKSLOT_TEX_HEIGHT)
		.def_readwrite("P1ItemCardTexture", &UHUDDefinition::P1ItemCardTexture, py::return_value_policy::reference)
		.def_readwrite("P2ItemCardTexture", &UHUDDefinition::P2ItemCardTexture, py::return_value_policy::reference)
		.def_readwrite("PlayerNameBone", &UHUDDefinition::PlayerNameBone, py::return_value_policy::reference)
		.def_readwrite("PlayerNameHeightOffset", &UHUDDefinition::PlayerNameHeightOffset)
		.def_readwrite("HealthAnimationTime", &UHUDDefinition::HealthAnimationTime)
		.def_readwrite("AutosaveAkEvent", &UHUDDefinition::AutosaveAkEvent, py::return_value_policy::reference)
		;
	py::class_< AWillowRadarManager, AActor >(m, "AWillowRadarManager")
		.def_readwrite("NumberOfDynamicIcons", &AWillowRadarManager::NumberOfDynamicIcons)
		.def("eventPostBeginPlay", &AWillowRadarManager::eventPostBeginPlay)
		.def("RemoveSkillStation", &AWillowRadarManager::RemoveSkillStation)
		.def("AddSkillStation", &AWillowRadarManager::AddSkillStation)
		.def("RemoveDynamicIcon", &AWillowRadarManager::RemoveDynamicIcon)
		.def("AddDynamicIcon", &AWillowRadarManager::AddDynamicIcon)
		;
	py::class_< UWillowSeqCond_SwitchByPlatform, USequenceCondition >(m, "UWillowSeqCond_SwitchByPlatform")
		.def("eventGetPlatform", &UWillowSeqCond_SwitchByPlatform::eventGetPlatform)
		;
	py::class_< UWillowUIDataStore_StringAliasMap, UUIDataStore_StringAliasMap >(m, "UWillowUIDataStore_StringAliasMap")
		.def_readwrite("FakePlatform", &UWillowUIDataStore_StringAliasMap::FakePlatform)
		.def("GetStringWithFieldName", &UWillowUIDataStore_StringAliasMap::GetStringWithFieldName)
		;
	py::class_< UPlayerStatsNotifier, UObject >(m, "UPlayerStatsNotifier")
		.def_readwrite("StatIdListenerMap", &UPlayerStatsNotifier::StatIdListenerMap, py::return_value_policy::reference)
		.def("OnStatIncrement", &UPlayerStatsNotifier::OnStatIncrement)
		.def("UnRegisterListeners", &UPlayerStatsNotifier::UnRegisterListeners)
		.def("UnRegisterListener", &UPlayerStatsNotifier::UnRegisterListener)
		.def("RegisterListener", &UPlayerStatsNotifier::RegisterListener)
		.def("DisplayDebug", [](UPlayerStatsNotifier &self , class AHUD* H) { float* pyout_YL = (float*)malloc(sizeof(float)) ; float* pyout_YPos = (float*)malloc(sizeof(float)) ;   self.DisplayDebug(H, pyout_YL, pyout_YPos); return py::make_tuple(*pyout_YL, *pyout_YPos); })
		;
	py::class_< AWillowBaseStats, AInfo >(m, "AWillowBaseStats")
		.def_property("bStatPostingInFlight", [](AWillowBaseStats &self){return self.bStatPostingInFlight;}, [](AWillowBaseStats &self, bool value){self.bStatPostingInFlight = value ? 1 : 0;})
		.def_property("bStatPostingIncomplete", [](AWillowBaseStats &self){return self.bStatPostingIncomplete;}, [](AWillowBaseStats &self, bool value){self.bStatPostingIncomplete = value ? 1 : 0;})
		.def_readwrite("VfTable_ISparkUpdateCallback", &AWillowBaseStats::VfTable_ISparkUpdateCallback, py::return_value_policy::reference)
		.def_readwrite("SaveVersion", &AWillowBaseStats::SaveVersion)
		.def_readwrite("ReadVersion", &AWillowBaseStats::ReadVersion)
		.def_readwrite("StatProperties", &AWillowBaseStats::StatProperties, py::return_value_policy::reference)
		.def_readwrite("ReplicationChannel", &AWillowBaseStats::ReplicationChannel, py::return_value_policy::reference)
		.def_readwrite("DebugDisplayFilter", &AWillowBaseStats::DebugDisplayFilter, py::return_value_policy::reference)
		.def_readwrite("CurrentDebugPage", &AWillowBaseStats::CurrentDebugPage)
		.def("ClearSparkCallbacks", &AWillowBaseStats::ClearSparkCallbacks)
		.def("DirtyAllStats", &AWillowBaseStats::DirtyAllStats)
		.def("ReportDirtyStats", &AWillowBaseStats::ReportDirtyStats)
		.def("UpdateChallengeBaseValues", &AWillowBaseStats::UpdateChallengeBaseValues)
		.def("TryAndSpawnReplicationChannel", &AWillowBaseStats::TryAndSpawnReplicationChannel)
		.def("StatPropertyToStringFromName", &AWillowBaseStats::StatPropertyToStringFromName, py::return_value_policy::reference)
		.def("StatPropertyToString", &AWillowBaseStats::StatPropertyToString, py::return_value_policy::reference)
		.def("SetFloatStat", &AWillowBaseStats::SetFloatStat)
		.def("SetIntStat", &AWillowBaseStats::SetIntStat)
		.def("GetFloatStat", &AWillowBaseStats::GetFloatStat)
		.def("GetIntStat", &AWillowBaseStats::GetIntStat)
		.def("IncrementFloatStat", &AWillowBaseStats::IncrementFloatStat)
		.def("IncrementIntStat", &AWillowBaseStats::IncrementIntStat)
		.def("PreviousDebugPage", &AWillowBaseStats::PreviousDebugPage)
		.def("NextDebugPage", &AWillowBaseStats::NextDebugPage)
		.def("AllDirtyStats", [](AWillowBaseStats &self ) { int* pyStatIdx = (int*)malloc(sizeof(int)) ;   self.AllDirtyStats(pyStatIdx); return py::make_tuple(*pyStatIdx); })
		;
	py::class_< AWillowPlayerStats, AWillowBaseStats >(m, "AWillowPlayerStats")
		.def_readwrite("nNumConsecutiveSniperRifleKills", &AWillowPlayerStats::nNumConsecutiveSniperRifleKills)
		.def("IncrementPlayerLauncherDirectHitStat", &AWillowPlayerStats::IncrementPlayerLauncherDirectHitStat)
		.def("IncrementPlayerKnockedDownProjectileStat", &AWillowPlayerStats::IncrementPlayerKnockedDownProjectileStat)
		.def("IncrementPlayerTedioreReloadDamageStat", &AWillowPlayerStats::IncrementPlayerTedioreReloadDamageStat)
		.def("IncrementPlayerSecondWindStat", &AWillowPlayerStats::IncrementPlayerSecondWindStat)
		.def("IncrementPlayerCriticalHitStat", &AWillowPlayerStats::IncrementPlayerCriticalHitStat)
		.def("UpdatePlayerShotStats", &AWillowPlayerStats::UpdatePlayerShotStats)
		.def("ResetPlayerShotStats", &AWillowPlayerStats::ResetPlayerShotStats)
		.def("IncrementPlayerKillStat", &AWillowPlayerStats::IncrementPlayerKillStat)
		.def("IncrementWeaponFiredStat", &AWillowPlayerStats::IncrementWeaponFiredStat)
		.def("SetIntStat", &AWillowPlayerStats::SetIntStat)
		.def("IncrementIntStat", &AWillowPlayerStats::IncrementIntStat)
		;
	py::class_< AWillowVersusDuelArena, AActor >(m, "AWillowVersusDuelArena")
		.def_property("bChallengerOOB", [](AWillowVersusDuelArena &self){return self.bChallengerOOB;}, [](AWillowVersusDuelArena &self, bool value){self.bChallengerOOB = value ? 1 : 0;})
		.def_property("bCompetitorOOB", [](AWillowVersusDuelArena &self){return self.bCompetitorOOB;}, [](AWillowVersusDuelArena &self, bool value){self.bCompetitorOOB = value ? 1 : 0;})
		.def_readwrite("DuelInfo", &AWillowVersusDuelArena::DuelInfo, py::return_value_policy::reference)
		.def_readwrite("ArenaIndex", &AWillowVersusDuelArena::ArenaIndex)
		.def_readwrite("Challenger", &AWillowVersusDuelArena::Challenger, py::return_value_policy::reference)
		.def_readwrite("Competitor", &AWillowVersusDuelArena::Competitor, py::return_value_policy::reference)
		.def_readwrite("DuelGlobals", &AWillowVersusDuelArena::DuelGlobals, py::return_value_policy::reference)
		.def_readwrite("ArenaMeshComponent", &AWillowVersusDuelArena::ArenaMeshComponent, py::return_value_policy::reference)
		.def_readwrite("ArenaMaterialInstance", &AWillowVersusDuelArena::ArenaMaterialInstance, py::return_value_policy::reference)
		.def_readwrite("ArenaStatus", &AWillowVersusDuelArena::ArenaStatus)
		.def_readwrite("CurrentChallengerTeamColorPrimary", &AWillowVersusDuelArena::CurrentChallengerTeamColorPrimary, py::return_value_policy::reference)
		.def_readwrite("CurrentChallengerTeamColorSecondary", &AWillowVersusDuelArena::CurrentChallengerTeamColorSecondary, py::return_value_policy::reference)
		.def_readwrite("CurrentChallengerTeamColorTertiary", &AWillowVersusDuelArena::CurrentChallengerTeamColorTertiary, py::return_value_policy::reference)
		.def_readwrite("CurrentCompetitorTeamColorPrimary", &AWillowVersusDuelArena::CurrentCompetitorTeamColorPrimary, py::return_value_policy::reference)
		.def_readwrite("CurrentCompetitorTeamColorSecondary", &AWillowVersusDuelArena::CurrentCompetitorTeamColorSecondary, py::return_value_policy::reference)
		.def_readwrite("CurrentCompetitorTeamColorTertiary", &AWillowVersusDuelArena::CurrentCompetitorTeamColorTertiary, py::return_value_policy::reference)
		.def("eventDestroyDuelArena", &AWillowVersusDuelArena::eventDestroyDuelArena)
		.def("OnDuelEnd", &AWillowVersusDuelArena::OnDuelEnd)
		.def("eventCreateDuelArena", &AWillowVersusDuelArena::eventCreateDuelArena)
		.def("InitializeDuelArena", &AWillowVersusDuelArena::InitializeDuelArena)
		.def("ReplicatedEvent", &AWillowVersusDuelArena::ReplicatedEvent)
		;
	py::class_< UWillowVersusDuelGlobals, UGBXDefinition >(m, "UWillowVersusDuelGlobals")
		.def_readwrite("ArenaMaterialIndex", &UWillowVersusDuelGlobals::ArenaMaterialIndex)
		.def_readwrite("ArenaMaterialParamName", &UWillowVersusDuelGlobals::ArenaMaterialParamName, py::return_value_policy::reference)
		.def_readwrite("ArenaMesh", &UWillowVersusDuelGlobals::ArenaMesh, py::return_value_policy::reference)
		.def_readwrite("ArenaMeshRadiusActual", &UWillowVersusDuelGlobals::ArenaMeshRadiusActual)
		.def_readwrite("ArenaMeshRadiusDesired", &UWillowVersusDuelGlobals::ArenaMeshRadiusDesired)
		.def_readwrite("ArenaSetupTime", &UWillowVersusDuelGlobals::ArenaSetupTime)
		.def_readwrite("ArenaTakeDownTime", &UWillowVersusDuelGlobals::ArenaTakeDownTime)
		.def_readwrite("OnChallengeIssued", &UWillowVersusDuelGlobals::OnChallengeIssued, py::return_value_policy::reference)
		.def_readwrite("OnDuelStarted", &UWillowVersusDuelGlobals::OnDuelStarted, py::return_value_policy::reference)
		.def_readwrite("OnLeftDuelArena", &UWillowVersusDuelGlobals::OnLeftDuelArena, py::return_value_policy::reference)
		.def_readwrite("OnDuelWinLoss", &UWillowVersusDuelGlobals::OnDuelWinLoss, py::return_value_policy::reference)
		.def_readwrite("OnDuelDraw", &UWillowVersusDuelGlobals::OnDuelDraw, py::return_value_policy::reference)
		.def_readwrite("DuelArenaTimeout", &UWillowVersusDuelGlobals::DuelArenaTimeout)
		.def_readwrite("DuelChallengeCoolDown", &UWillowVersusDuelGlobals::DuelChallengeCoolDown)
		.def_readwrite("DuelChallengeTimeout", &UWillowVersusDuelGlobals::DuelChallengeTimeout)
		.def_readwrite("DuelLength", &UWillowVersusDuelGlobals::DuelLength)
		.def_readwrite("DuelTeams", &UWillowVersusDuelGlobals::DuelTeams, py::return_value_policy::reference)
		;
	py::class_< AWillowVersusDuelInfo, AReplicationInfo >(m, "AWillowVersusDuelInfo")
		.def_property("bTimedOut", [](AWillowVersusDuelInfo &self){return self.bTimedOut;}, [](AWillowVersusDuelInfo &self, bool value){self.bTimedOut = value ? 1 : 0;})
		.def_property("bDuelEnded", [](AWillowVersusDuelInfo &self){return self.bDuelEnded;}, [](AWillowVersusDuelInfo &self, bool value){self.bDuelEnded = value ? 1 : 0;})
		.def_readwrite("DuelGlobals", &AWillowVersusDuelInfo::DuelGlobals, py::return_value_policy::reference)
		.def_readwrite("Challenger", &AWillowVersusDuelInfo::Challenger, py::return_value_policy::reference)
		.def_readwrite("Competitor", &AWillowVersusDuelInfo::Competitor, py::return_value_policy::reference)
		.def_readwrite("Winner", &AWillowVersusDuelInfo::Winner, py::return_value_policy::reference)
		.def_readwrite("Loser", &AWillowVersusDuelInfo::Loser, py::return_value_policy::reference)
		.def_readwrite("ChallengerPRI", &AWillowVersusDuelInfo::ChallengerPRI, py::return_value_policy::reference)
		.def_readwrite("CompetitorPRI", &AWillowVersusDuelInfo::CompetitorPRI, py::return_value_policy::reference)
		.def_readwrite("ActiveDuelIndex", &AWillowVersusDuelInfo::ActiveDuelIndex)
		.def_readwrite("DuelArena", &AWillowVersusDuelInfo::DuelArena, py::return_value_policy::reference)
		.def_readwrite("TemporaryChallengerProfile", &AWillowVersusDuelInfo::TemporaryChallengerProfile, py::return_value_policy::reference)
		.def_readwrite("TemporaryCompetitorProfile", &AWillowVersusDuelInfo::TemporaryCompetitorProfile, py::return_value_policy::reference)
		.def_readwrite("TradeManager", &AWillowVersusDuelInfo::TradeManager, py::return_value_policy::reference)
		.def("ProcessLeviathanDuelStartedEvent", &AWillowVersusDuelInfo::ProcessLeviathanDuelStartedEvent)
		.def("ClearCombatantStateForDuel", &AWillowVersusDuelInfo::ClearCombatantStateForDuel)
		.def("InitializeValuesOnCombatants", &AWillowVersusDuelInfo::InitializeValuesOnCombatants)
		.def("RemoveFromActiveDuels", &AWillowVersusDuelInfo::RemoveFromActiveDuels)
		.def("ReviveLoser", &AWillowVersusDuelInfo::ReviveLoser)
		.def("RestoreTemporaryProfile", &AWillowVersusDuelInfo::RestoreTemporaryProfile)
		.def("RestoreTemporaryProfilesForCombatants", &AWillowVersusDuelInfo::RestoreTemporaryProfilesForCombatants)
		.def("OnDuelArenaDestroyed", &AWillowVersusDuelInfo::OnDuelArenaDestroyed)
		.def("GetLoser", &AWillowVersusDuelInfo::GetLoser, py::return_value_policy::reference)
		.def("GetWinner", &AWillowVersusDuelInfo::GetWinner, py::return_value_policy::reference)
		.def("OnDuelEnd", &AWillowVersusDuelInfo::OnDuelEnd)
		.def("UpdatePlayerStat", &AWillowVersusDuelInfo::UpdatePlayerStat)
		.def("NotifyDuelResult", &AWillowVersusDuelInfo::NotifyDuelResult)
		.def("SetWinnerAndLoser", &AWillowVersusDuelInfo::SetWinnerAndLoser)
		.def("EndDuel", &AWillowVersusDuelInfo::EndDuel)
		.def("OnCompetitorOutOfBounds", &AWillowVersusDuelInfo::OnCompetitorOutOfBounds)
		.def("eventOnCompetitorLeftDuelArena", &AWillowVersusDuelInfo::eventOnCompetitorLeftDuelArena)
		.def("eventOnCompetitorEnteredDuelArena", &AWillowVersusDuelInfo::eventOnCompetitorEnteredDuelArena)
		.def("OnChallengerOutOfBounds", &AWillowVersusDuelInfo::OnChallengerOutOfBounds)
		.def("eventOnChallengerLeftDuelArena", &AWillowVersusDuelInfo::eventOnChallengerLeftDuelArena)
		.def("eventOnChallengerEnteredDuelArena", &AWillowVersusDuelInfo::eventOnChallengerEnteredDuelArena)
		.def("OnDuelLengthElapsed", &AWillowVersusDuelInfo::OnDuelLengthElapsed)
		.def("CombatantsAreDueling", &AWillowVersusDuelInfo::CombatantsAreDueling)
		.def("StartDuelTimer", &AWillowVersusDuelInfo::StartDuelTimer)
		.def("SetAllegianceForCombatants", &AWillowVersusDuelInfo::SetAllegianceForCombatants)
		.def("OnDuelArenaCreated", &AWillowVersusDuelInfo::OnDuelArenaCreated)
		.def("SaveTemporaryProfile", &AWillowVersusDuelInfo::SaveTemporaryProfile, py::return_value_policy::reference)
		.def("SaveTemporaryProfilesForCombatants", &AWillowVersusDuelInfo::SaveTemporaryProfilesForCombatants)
		.def("ClearPotentialDuelsForCombatants", &AWillowVersusDuelInfo::ClearPotentialDuelsForCombatants)
		.def("GetDuelArenaLocation", &AWillowVersusDuelInfo::GetDuelArenaLocation, py::return_value_policy::reference)
		.def("CreateDuelArena", &AWillowVersusDuelInfo::CreateDuelArena)
		.def("ClearDuelTimers", &AWillowVersusDuelInfo::ClearDuelTimers)
		.def("RegisterDuelAsActive", &AWillowVersusDuelInfo::RegisterDuelAsActive)
		.def("StartDuel", &AWillowVersusDuelInfo::StartDuel)
		.def("SetCompetitor", &AWillowVersusDuelInfo::SetCompetitor)
		.def("GetCompetitorPRI", &AWillowVersusDuelInfo::GetCompetitorPRI, py::return_value_policy::reference)
		.def("GetCompetitor", &AWillowVersusDuelInfo::GetCompetitor, py::return_value_policy::reference)
		.def("SetChallenger", &AWillowVersusDuelInfo::SetChallenger)
		.def("GetChallengerPRI", &AWillowVersusDuelInfo::GetChallengerPRI, py::return_value_policy::reference)
		.def("GetChallenger", &AWillowVersusDuelInfo::GetChallenger, py::return_value_policy::reference)
		.def("RemoveFromPotentialDuels", &AWillowVersusDuelInfo::RemoveFromPotentialDuels)
		.def("CoolDownActive", &AWillowVersusDuelInfo::CoolDownActive)
		.def("OnChallengeCoolDown", &AWillowVersusDuelInfo::OnChallengeCoolDown)
		.def("TimedOut", &AWillowVersusDuelInfo::TimedOut)
		.def("OnChallengeTimeout", &AWillowVersusDuelInfo::OnChallengeTimeout)
		.def("InitializeDuel", &AWillowVersusDuelInfo::InitializeDuel)
		.def("PostBeginPlay", &AWillowVersusDuelInfo::PostBeginPlay)
		;
	py::class_< UBaseInventoryPanelGFxObject, UGFxObject >(m, "UBaseInventoryPanelGFxObject")
		.def_property("bActive", [](UBaseInventoryPanelGFxObject &self){return self.bActive;}, [](UBaseInventoryPanelGFxObject &self, bool value){self.bActive = value ? 1 : 0;})
		.def_property("bCanRolloverEmptyCells", [](UBaseInventoryPanelGFxObject &self){return self.bCanRolloverEmptyCells;}, [](UBaseInventoryPanelGFxObject &self, bool value){self.bCanRolloverEmptyCells = value ? 1 : 0;})
		.def_readwrite("HandleRollOverArgs", &UBaseInventoryPanelGFxObject::HandleRollOverArgs, py::return_value_policy::reference)
		.def_readwrite("CellObjects", &UBaseInventoryPanelGFxObject::CellObjects, py::return_value_policy::reference)
		.def_readwrite("EmptyWidgetObjects", &UBaseInventoryPanelGFxObject::EmptyWidgetObjects, py::return_value_policy::reference)
		.def_readwrite("ParentPanel", &UBaseInventoryPanelGFxObject::ParentPanel, py::return_value_policy::reference)
		.def_readwrite("OwningMovie", &UBaseInventoryPanelGFxObject::OwningMovie, py::return_value_policy::reference)
		.def_readwrite("OwningMovieDef", &UBaseInventoryPanelGFxObject::OwningMovieDef, py::return_value_policy::reference)
		.def("handleRollOver", &UBaseInventoryPanelGFxObject::handleRollOver)
		.def("handleRollOver2", &UBaseInventoryPanelGFxObject::handleRollOver2)
		.def("handleRollOver3", &UBaseInventoryPanelGFxObject::handleRollOver3)
		.def("handleRollOver4", &UBaseInventoryPanelGFxObject::handleRollOver4)
		.def("handleRollOver5", &UBaseInventoryPanelGFxObject::handleRollOver5)
		.def("handleRollOver6", &UBaseInventoryPanelGFxObject::handleRollOver6)
		.def("handleRollOver7", &UBaseInventoryPanelGFxObject::handleRollOver7)
		.def("handleRollOver8", &UBaseInventoryPanelGFxObject::handleRollOver8)
		.def("handleRollOver9", &UBaseInventoryPanelGFxObject::handleRollOver9)
		.def("handleRollOver_Generic", &UBaseInventoryPanelGFxObject::handleRollOver_Generic)
		.def("RedirectRollOver", &UBaseInventoryPanelGFxObject::RedirectRollOver)
		.def("FlourishActiveCell", &UBaseInventoryPanelGFxObject::FlourishActiveCell)
		.def("OnStartDrag", &UBaseInventoryPanelGFxObject::OnStartDrag)
		.def("extStartDrag", &UBaseInventoryPanelGFxObject::extStartDrag, py::return_value_policy::reference)
		.def("OnSettingPanelForTransferring", &UBaseInventoryPanelGFxObject::OnSettingPanelForTransferring)
		.def("extOnSetActive", &UBaseInventoryPanelGFxObject::extOnSetActive)
		.def("SetActive", &UBaseInventoryPanelGFxObject::SetActive)
		.def("InspectItem", &UBaseInventoryPanelGFxObject::InspectItem)
		.def("GetSelectedThing", &UBaseInventoryPanelGFxObject::GetSelectedThing, py::return_value_policy::reference)
		.def("PanelOnInputKey", &UBaseInventoryPanelGFxObject::PanelOnInputKey)
		.def("Init", &UBaseInventoryPanelGFxObject::Init)
		;
	py::class_< UBadassPanelGFxObject, UBaseInventoryPanelGFxObject >(m, "UBadassPanelGFxObject")
		.def_property("bBrowsingRewards", [](UBadassPanelGFxObject &self){return self.bBrowsingRewards;}, [](UBadassPanelGFxObject &self, bool value){self.bBrowsingRewards = value ? 1 : 0;})
		.def_readwrite("BA_RankString", &UBadassPanelGFxObject::BA_RankString, py::return_value_policy::reference)
		.def_readwrite("BA_TokensString", &UBadassPanelGFxObject::BA_TokensString, py::return_value_policy::reference)
		.def_readwrite("BA_RedeemTokenButtonString", &UBadassPanelGFxObject::BA_RedeemTokenButtonString, py::return_value_policy::reference)
		.def_readwrite("TokenUpPct", &UBadassPanelGFxObject::TokenUpPct)
		.def_readwrite("RedeemButton", &UBadassPanelGFxObject::RedeemButton, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Cancel", &UBadassPanelGFxObject::TooltipsText_Cancel, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Close", &UBadassPanelGFxObject::TooltipsText_Close, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Redeem", &UBadassPanelGFxObject::TooltipsText_Redeem, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Reward", &UBadassPanelGFxObject::TooltipsText_Reward, py::return_value_policy::reference)
		.def_readwrite("BonusStatsHeader", &UBadassPanelGFxObject::BonusStatsHeader, py::return_value_policy::reference)
		.def_readwrite("BonusStatsDisabledHeader", &UBadassPanelGFxObject::BonusStatsDisabledHeader, py::return_value_policy::reference)
		.def_readwrite("RewardChoiceHeader", &UBadassPanelGFxObject::RewardChoiceHeader, py::return_value_policy::reference)
		.def_readwrite("RewardString", &UBadassPanelGFxObject::RewardString, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_ActivateBonusStats", &UBadassPanelGFxObject::TooltipsText_ActivateBonusStats, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_DeactivateBonusStats", &UBadassPanelGFxObject::TooltipsText_DeactivateBonusStats, py::return_value_policy::reference)
		.def("UpdateTrainingBox", &UBadassPanelGFxObject::UpdateTrainingBox)
		.def("OnRewardFocused", &UBadassPanelGFxObject::OnRewardFocused)
		.def("OnRedeemTokensFocused", &UBadassPanelGFxObject::OnRedeemTokensFocused)
		.def("UpdateRedeemTokensFocusedTooltips", &UBadassPanelGFxObject::UpdateRedeemTokensFocusedTooltips)
		.def("ToggleBadassSkill", &UBadassPanelGFxObject::ToggleBadassSkill)
		.def("PanelOnInputKey", &UBadassPanelGFxObject::PanelOnInputKey)
		.def("BlockInput", &UBadassPanelGFxObject::BlockInput)
		.def("DeferInput", &UBadassPanelGFxObject::DeferInput)
		.def("UpdateCounters", &UBadassPanelGFxObject::UpdateCounters)
		.def("UpdateBars", &UBadassPanelGFxObject::UpdateBars)
		.def("Tick", &UBadassPanelGFxObject::Tick)
		.def("SetBonusStatsText", &UBadassPanelGFxObject::SetBonusStatsText)
		.def("OnRewardSelected", &UBadassPanelGFxObject::OnRewardSelected)
		.def("OnReward5Selected", &UBadassPanelGFxObject::OnReward5Selected)
		.def("OnReward4Selected", &UBadassPanelGFxObject::OnReward4Selected)
		.def("OnReward3Selected", &UBadassPanelGFxObject::OnReward3Selected)
		.def("OnReward2Selected", &UBadassPanelGFxObject::OnReward2Selected)
		.def("OnReward1Selected", &UBadassPanelGFxObject::OnReward1Selected)
		.def("OnRedeemTokensClicked", &UBadassPanelGFxObject::OnRedeemTokensClicked)
		.def("UpdatePercents", &UBadassPanelGFxObject::UpdatePercents)
		.def("HideCurrencies", &UBadassPanelGFxObject::HideCurrencies)
		.def("UpdateCurrencies", &UBadassPanelGFxObject::UpdateCurrencies)
		.def("SetUpBadassPanel", &UBadassPanelGFxObject::SetUpBadassPanel)
		.def("SetInitialButtonStates", &UBadassPanelGFxObject::SetInitialButtonStates)
		.def("extOnSetActive", &UBadassPanelGFxObject::extOnSetActive)
		.def("OnSetInactive", &UBadassPanelGFxObject::OnSetInactive)
		.def("Init", &UBadassPanelGFxObject::Init)
		;
	py::class_< UChallengesPanelGFxObject, UBaseInventoryPanelGFxObject >(m, "UChallengesPanelGFxObject")
		.def_readwrite("ChallengeLogTextList", &UChallengesPanelGFxObject::ChallengeLogTextList, py::return_value_policy::reference)
		.def_readwrite("StatusMenuDef", &UChallengesPanelGFxObject::StatusMenuDef, py::return_value_policy::reference)
		.def_readwrite("MyWPC", &UChallengesPanelGFxObject::MyWPC, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Cancel", &UChallengesPanelGFxObject::TooltipsText_Cancel, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Track", &UChallengesPanelGFxObject::TooltipsText_Track, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Untrack", &UChallengesPanelGFxObject::TooltipsText_Untrack, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Reset", &UChallengesPanelGFxObject::TooltipsText_Reset, py::return_value_policy::reference)
		.def_readwrite("UnspecifiedCategoryHeader", &UChallengesPanelGFxObject::UnspecifiedCategoryHeader, py::return_value_policy::reference)
		.def_readwrite("TrackedCategoryHeader", &UChallengesPanelGFxObject::TrackedCategoryHeader, py::return_value_policy::reference)
		.def_readwrite("ChallengeCategories", &UChallengesPanelGFxObject::ChallengeCategories, py::return_value_policy::reference)
		.def_readwrite("CurrentSortMode", &UChallengesPanelGFxObject::CurrentSortMode)
		.def_readwrite("ChallengeSortTooltip", &UChallengesPanelGFxObject::ChallengeSortTooltip, py::return_value_policy::reference)
		.def_readwrite("ChallengeRewardHeader", &UChallengesPanelGFxObject::ChallengeRewardHeader, py::return_value_policy::reference)
		.def("UpdatePrestigeIndicator", &UChallengesPanelGFxObject::UpdatePrestigeIndicator)
		.def("GetSortString", &UChallengesPanelGFxObject::GetSortString, py::return_value_policy::reference)
		.def("SortModeChanged", &UChallengesPanelGFxObject::SortModeChanged)
		.def("UpdateTooltips", &UChallengesPanelGFxObject::UpdateTooltips)
		.def("RefreshChallengesOnReset", &UChallengesPanelGFxObject::RefreshChallengesOnReset)
		.def("SetListHeader", &UChallengesPanelGFxObject::SetListHeader)
		.def("SetChallengeDescription", &UChallengesPanelGFxObject::SetChallengeDescription)
		.def("UpdateChallengeDescription", &UChallengesPanelGFxObject::UpdateChallengeDescription)
		.def("UpdateListOfChallenges", &UChallengesPanelGFxObject::UpdateListOfChallenges)
		.def("extOnSetActive", &UChallengesPanelGFxObject::extOnSetActive)
		.def("ScrollLog", &UChallengesPanelGFxObject::ScrollLog)
		.def("Tick", &UChallengesPanelGFxObject::Tick)
		.def("TrackHighlightedObject", &UChallengesPanelGFxObject::TrackHighlightedObject)
		.def("ChangeSort", &UChallengesPanelGFxObject::ChangeSort)
		.def("PanelOnInputKey", &UChallengesPanelGFxObject::PanelOnInputKey)
		.def("BlockInput", &UChallengesPanelGFxObject::BlockInput)
		.def("DeferInput", &UChallengesPanelGFxObject::DeferInput)
		.def("Deinit", &UChallengesPanelGFxObject::Deinit)
		.def("Init", &UChallengesPanelGFxObject::Init)
		.def("SetLastSortMode", &UChallengesPanelGFxObject::SetLastSortMode)
		.def("GetLastSortMode", &UChallengesPanelGFxObject::GetLastSortMode)
		.def("SetLastHighlightedEntry", &UChallengesPanelGFxObject::SetLastHighlightedEntry)
		.def("GetLastHighlightedEntry", &UChallengesPanelGFxObject::GetLastHighlightedEntry)
		.def("UpdateChallengeTextList", &UChallengesPanelGFxObject::UpdateChallengeTextList)
		;
	py::class_< UInventoryListPanelGFxObject, UBaseInventoryPanelGFxObject >(m, "UInventoryListPanelGFxObject")
		.def_property("bCellUnselected", [](UInventoryListPanelGFxObject &self){return self.bCellUnselected;}, [](UInventoryListPanelGFxObject &self, bool value){self.bCellUnselected = value ? 1 : 0;})
		.def_property("bCanChangeSort", [](UInventoryListPanelGFxObject &self){return self.bCanChangeSort;}, [](UInventoryListPanelGFxObject &self, bool value){self.bCanChangeSort = value ? 1 : 0;})
		.def_property("bShowSoldOutIfEmpty", [](UInventoryListPanelGFxObject &self){return self.bShowSoldOutIfEmpty;}, [](UInventoryListPanelGFxObject &self, bool value){self.bShowSoldOutIfEmpty = value ? 1 : 0;})
		.def_property("bTrashFavoritesEnabled", [](UInventoryListPanelGFxObject &self){return self.bTrashFavoritesEnabled;}, [](UInventoryListPanelGFxObject &self, bool value){self.bTrashFavoritesEnabled = value ? 1 : 0;})
		.def_readwrite("DataProvider", &UInventoryListPanelGFxObject::DataProvider, py::return_value_policy::reference)
		.def_readwrite("InventoryList", &UInventoryListPanelGFxObject::InventoryList, py::return_value_policy::reference)
		.def_readwrite("CurrentSelectedIndex", &UInventoryListPanelGFxObject::CurrentSelectedIndex)
		.def_readwrite("CachedSelectedIndex", &UInventoryListPanelGFxObject::CachedSelectedIndex)
		.def_readwrite("InventoryCellsData", &UInventoryListPanelGFxObject::InventoryCellsData, py::return_value_policy::reference)
		.def_readwrite("RTM", &UInventoryListPanelGFxObject::RTM, py::return_value_policy::reference)
		.def_readwrite("PanelName", &UInventoryListPanelGFxObject::PanelName, py::return_value_policy::reference)
		.def_readwrite("CurrentSortFilterConfig", &UInventoryListPanelGFxObject::CurrentSortFilterConfig, py::return_value_policy::reference)
		.def_readwrite("PanelTitle", &UInventoryListPanelGFxObject::PanelTitle, py::return_value_policy::reference)
		.def_readwrite("OriginalTrashFavXPosition", &UInventoryListPanelGFxObject::OriginalTrashFavXPosition)
		.def_readwrite("Container", &UInventoryListPanelGFxObject::Container, py::return_value_policy::reference)
		.def_readwrite("__OnListSort__Delegate", &UInventoryListPanelGFxObject::__OnListSort__Delegate, py::return_value_policy::reference)
		.def("SetCanDrag", &UInventoryListPanelGFxObject::SetCanDrag)
		.def("eventSetEmptyPanelWidget", &UInventoryListPanelGFxObject::eventSetEmptyPanelWidget)
		.def("SetPanelHighlight", &UInventoryListPanelGFxObject::SetPanelHighlight)
		.def("OnStartDrag", &UInventoryListPanelGFxObject::OnStartDrag)
		.def("RestoreState", &UInventoryListPanelGFxObject::RestoreState)
		.def("SaveState", &UInventoryListPanelGFxObject::SaveState)
		.def("ClearCell", &UInventoryListPanelGFxObject::ClearCell)
		.def("FreeCellData", &UInventoryListPanelGFxObject::FreeCellData)
		.def("GetCellObject", &UInventoryListPanelGFxObject::GetCellObject, py::return_value_policy::reference)
		.def("CycleSelectedThingAsTrashOrFavorite", &UInventoryListPanelGFxObject::CycleSelectedThingAsTrashOrFavorite)
		.def("extOnTrashFavChanged", &UInventoryListPanelGFxObject::extOnTrashFavChanged)
		.def("SetTrashFavoritesEnabled", &UInventoryListPanelGFxObject::SetTrashFavoritesEnabled)
		.def("SetCellTrashFavoritesEnabled", &UInventoryListPanelGFxObject::SetCellTrashFavoritesEnabled)
		.def("extOnNewBackpackRenderer", &UInventoryListPanelGFxObject::extOnNewBackpackRenderer)
		.def("SetRendererInfo", &UInventoryListPanelGFxObject::SetRendererInfo)
		.def("extOnCellUnselected", &UInventoryListPanelGFxObject::extOnCellUnselected)
		.def("extOnBackpackItemSelected", &UInventoryListPanelGFxObject::extOnBackpackItemSelected)
		.def("extOnCellPressed", &UInventoryListPanelGFxObject::extOnCellPressed)
		.def("FixupSelectedIndex", &UInventoryListPanelGFxObject::FixupSelectedIndex)
		.def("IsCurrentCellValid", &UInventoryListPanelGFxObject::IsCurrentCellValid)
		.def("GetThingByIndex", &UInventoryListPanelGFxObject::GetThingByIndex, py::return_value_policy::reference)
		.def("GetSelectedThing", &UInventoryListPanelGFxObject::GetSelectedThing, py::return_value_policy::reference)
		.def("UpdateList", &UInventoryListPanelGFxObject::UpdateList)
		.def("MoveDelta", &UInventoryListPanelGFxObject::MoveDelta)
		.def("Move", &UInventoryListPanelGFxObject::Move)
		.def("SetSelectedIndexByThing", &UInventoryListPanelGFxObject::SetSelectedIndexByThing)
		.def("extOnSetActive", &UInventoryListPanelGFxObject::extOnSetActive)
		.def("extOnPanelRollOver", &UInventoryListPanelGFxObject::extOnPanelRollOver)
		.def("extOnStoragePanelPressed", &UInventoryListPanelGFxObject::extOnStoragePanelPressed)
		.def("SetPanelTitleStorage", &UInventoryListPanelGFxObject::SetPanelTitleStorage)
		.def("SetPanelTitle", &UInventoryListPanelGFxObject::SetPanelTitle)
		.def("SetSortLabel", &UInventoryListPanelGFxObject::SetSortLabel)
		.def("extOnChangeSort", &UInventoryListPanelGFxObject::extOnChangeSort)
		.def("ApplySortConfiguration", &UInventoryListPanelGFxObject::ApplySortConfiguration)
		.def("SetList", &UInventoryListPanelGFxObject::SetList)
		.def("PanelOnInputKey", &UInventoryListPanelGFxObject::PanelOnInputKey)
		.def("__SetHeaderIconClip", &UInventoryListPanelGFxObject::__SetHeaderIconClip)
		.def("SetHeaderIconClip", &UInventoryListPanelGFxObject::SetHeaderIconClip)
		.def("__SetBackgroundTint", &UInventoryListPanelGFxObject::__SetBackgroundTint)
		.def("SetBackgroundTint", &UInventoryListPanelGFxObject::SetBackgroundTint)
		.def("__SetBackground", &UInventoryListPanelGFxObject::__SetBackground)
		.def("SetBackground", &UInventoryListPanelGFxObject::SetBackground)
		.def("Init", &UInventoryListPanelGFxObject::Init)
		.def("OnListSort", &UInventoryListPanelGFxObject::OnListSort)
		.def("GetInventoryType", &UInventoryListPanelGFxObject::GetInventoryType)
		.def("InitializePlayerClasses", &UInventoryListPanelGFxObject::InitializePlayerClasses)
		;
	py::class_< UBaseTopLevelPanelGFxObject, UGFxObject >(m, "UBaseTopLevelPanelGFxObject")
		.def_readwrite("ParentMovie", &UBaseTopLevelPanelGFxObject::ParentMovie, py::return_value_policy::reference)
		.def_readwrite("ParentMovieDef", &UBaseTopLevelPanelGFxObject::ParentMovieDef, py::return_value_policy::reference)
		.def_readwrite("ItemCards", &UBaseTopLevelPanelGFxObject::ItemCards, py::return_value_policy::reference)
		.def_readwrite("QueuedTriggerKey", &UBaseTopLevelPanelGFxObject::QueuedTriggerKey, py::return_value_policy::reference)
		.def_readwrite("QueuedInputKey", &UBaseTopLevelPanelGFxObject::QueuedInputKey, py::return_value_policy::reference)
		.def_readwrite("__OnInputKey__Delegate", &UBaseTopLevelPanelGFxObject::__OnInputKey__Delegate, py::return_value_policy::reference)
		.def("OnTrashFavChanged", &UBaseTopLevelPanelGFxObject::OnTrashFavChanged)
		.def("OnCellPressed", &UBaseTopLevelPanelGFxObject::OnCellPressed)
		.def("OnStartDrag", &UBaseTopLevelPanelGFxObject::OnStartDrag)
		.def("GetInspectedItemCurrencyType", &UBaseTopLevelPanelGFxObject::GetInspectedItemCurrencyType)
		.def("GetInspectedItemOverridePrice", &UBaseTopLevelPanelGFxObject::GetInspectedItemOverridePrice)
		.def("__SetComparingTweenInfo", &UBaseTopLevelPanelGFxObject::__SetComparingTweenInfo)
		.def("SetComparingTweenInfo", &UBaseTopLevelPanelGFxObject::SetComparingTweenInfo)
		.def("GetCard", &UBaseTopLevelPanelGFxObject::GetCard, py::return_value_policy::reference)
		.def("OnItemSelected", &UBaseTopLevelPanelGFxObject::OnItemSelected)
		.def("UpdateDynamicCard", &UBaseTopLevelPanelGFxObject::UpdateDynamicCard)
		.def("SetUpCardEx", &UBaseTopLevelPanelGFxObject::SetUpCardEx)
		.def("SetUpCard", &UBaseTopLevelPanelGFxObject::SetUpCard)
		.def("GetItemCardContentIndex", &UBaseTopLevelPanelGFxObject::GetItemCardContentIndex)
		.def("GetItemCard", &UBaseTopLevelPanelGFxObject::GetItemCard, py::return_value_policy::reference)
		.def("GetItemCardInfo", &UBaseTopLevelPanelGFxObject::GetItemCardInfo, py::return_value_policy::reference)
		.def("GetPanel", &UBaseTopLevelPanelGFxObject::GetPanel, py::return_value_policy::reference)
		.def("extInitComplete", &UBaseTopLevelPanelGFxObject::extInitComplete)
		.def("extInitRightPanel", &UBaseTopLevelPanelGFxObject::extInitRightPanel)
		.def("extInitLeftPanel", &UBaseTopLevelPanelGFxObject::extInitLeftPanel)
		.def("InitPanels", &UBaseTopLevelPanelGFxObject::InitPanels)
		.def("AssignPanels", &UBaseTopLevelPanelGFxObject::AssignPanels)
		.def("extInitPanels", &UBaseTopLevelPanelGFxObject::extInitPanels)
		.def("RefreshItemCards", &UBaseTopLevelPanelGFxObject::RefreshItemCards)
		.def("InitItemCards", &UBaseTopLevelPanelGFxObject::InitItemCards)
		.def("AssignItemCards", &UBaseTopLevelPanelGFxObject::AssignItemCards)
		.def("extInitItemCards", &UBaseTopLevelPanelGFxObject::extInitItemCards)
		.def("SetActivePanelByName", &UBaseTopLevelPanelGFxObject::SetActivePanelByName)
		.def("OnPanelPressed", &UBaseTopLevelPanelGFxObject::OnPanelPressed)
		.def("__SetFocusUnfocusedCompareTweenPositions", &UBaseTopLevelPanelGFxObject::__SetFocusUnfocusedCompareTweenPositions)
		.def("TweenPanel", &UBaseTopLevelPanelGFxObject::TweenPanel)
		.def("TweenPanelToPosition", &UBaseTopLevelPanelGFxObject::TweenPanelToPosition)
		.def("SetFocusUnfocusedCompareTweenPositions", &UBaseTopLevelPanelGFxObject::SetFocusUnfocusedCompareTweenPositions)
		.def("SwitchToQueuedInputHandler", &UBaseTopLevelPanelGFxObject::SwitchToQueuedInputHandler)
		.def("QueueNewInputHandler", &UBaseTopLevelPanelGFxObject::QueueNewInputHandler)
		.def("Init", &UBaseTopLevelPanelGFxObject::Init)
		.def("OnInputKey", &UBaseTopLevelPanelGFxObject::OnInputKey)
		;
	py::class_< UChallengesScreenGFxObject, UBaseTopLevelPanelGFxObject >(m, "UChallengesScreenGFxObject")
		.def_readwrite("CurrentPanel", &UChallengesScreenGFxObject::CurrentPanel)
		.def_readwrite("BadassPanel", &UChallengesScreenGFxObject::BadassPanel, py::return_value_policy::reference)
		.def_readwrite("ChallengesPanel", &UChallengesScreenGFxObject::ChallengesPanel, py::return_value_policy::reference)
		.def_readwrite("PanelDef", &UChallengesScreenGFxObject::PanelDef, py::return_value_policy::reference)
		.def("Tick", &UChallengesScreenGFxObject::Tick)
		.def("SetTooltipText", &UChallengesScreenGFxObject::SetTooltipText)
		.def("ConfigureForPlayer", &UChallengesScreenGFxObject::ConfigureForPlayer)
		.def("OfferInputKey", &UChallengesScreenGFxObject::OfferInputKey)
		.def("NormalInputKey", &UChallengesScreenGFxObject::NormalInputKey)
		.def("BlockInput", &UChallengesScreenGFxObject::BlockInput)
		.def("DeferInput", &UChallengesScreenGFxObject::DeferInput)
		.def("PanelOnInputKey", &UChallengesScreenGFxObject::PanelOnInputKey)
		.def("SwitchToPanel", &UChallengesScreenGFxObject::SwitchToPanel)
		.def("SwitchFocus", &UChallengesScreenGFxObject::SwitchFocus)
		.def("RestoreState", &UChallengesScreenGFxObject::RestoreState)
		.def("Refresh", &UChallengesScreenGFxObject::Refresh)
		.def("DeinitPanels", &UChallengesScreenGFxObject::DeinitPanels)
		.def("Deinit", &UChallengesScreenGFxObject::Deinit)
		.def("InitPanels", &UChallengesScreenGFxObject::InitPanels)
		.def("AssignPanels", &UChallengesScreenGFxObject::AssignPanels)
		.def("Init", &UChallengesScreenGFxObject::Init)
		;
	py::class_< UStatusMenuInventoryPanelGFxObject, UBaseTopLevelPanelGFxObject >(m, "UStatusMenuInventoryPanelGFxObject")
		.def_property("bShouldStartOnEquippedPanel", [](UStatusMenuInventoryPanelGFxObject &self){return self.bShouldStartOnEquippedPanel;}, [](UStatusMenuInventoryPanelGFxObject &self, bool value){self.bShouldStartOnEquippedPanel = value ? 1 : 0;})
		.def_property("bInEquippedView", [](UStatusMenuInventoryPanelGFxObject &self){return self.bInEquippedView;}, [](UStatusMenuInventoryPanelGFxObject &self, bool value){self.bInEquippedView = value ? 1 : 0;})
		.def_property("bSwitchedPanelsMousePress", [](UStatusMenuInventoryPanelGFxObject &self){return self.bSwitchedPanelsMousePress;}, [](UStatusMenuInventoryPanelGFxObject &self, bool value){self.bSwitchedPanelsMousePress = value ? 1 : 0;})
		.def_property("bIsDoingEquip", [](UStatusMenuInventoryPanelGFxObject &self){return self.bIsDoingEquip;}, [](UStatusMenuInventoryPanelGFxObject &self, bool value){self.bIsDoingEquip = value ? 1 : 0;})
		.def_property("bShouldShowDualWieldGuides", [](UStatusMenuInventoryPanelGFxObject &self){return self.bShouldShowDualWieldGuides;}, [](UStatusMenuInventoryPanelGFxObject &self, bool value){self.bShouldShowDualWieldGuides = value ? 1 : 0;})
		.def_property("bInitialSetupFinished", [](UStatusMenuInventoryPanelGFxObject &self){return self.bInitialSetupFinished;}, [](UStatusMenuInventoryPanelGFxObject &self, bool value){self.bInitialSetupFinished = value ? 1 : 0;})
		.def_readwrite("EquippedPanel", &UStatusMenuInventoryPanelGFxObject::EquippedPanel, py::return_value_policy::reference)
		.def_readwrite("BackpackPanel", &UStatusMenuInventoryPanelGFxObject::BackpackPanel, py::return_value_policy::reference)
		.def_readwrite("AmmoPanel", &UStatusMenuInventoryPanelGFxObject::AmmoPanel, py::return_value_policy::reference)
		.def_readwrite("EquippingThing", &UStatusMenuInventoryPanelGFxObject::EquippingThing, py::return_value_policy::reference)
		.def_readwrite("SecondEquippingThing", &UStatusMenuInventoryPanelGFxObject::SecondEquippingThing, py::return_value_policy::reference)
		.def_readwrite("StartEquipPanel", &UStatusMenuInventoryPanelGFxObject::StartEquipPanel, py::return_value_policy::reference)
		.def_readwrite("SlotsUsed", &UStatusMenuInventoryPanelGFxObject::SlotsUsed)
		.def_readwrite("MaxCapacity", &UStatusMenuInventoryPanelGFxObject::MaxCapacity)
		.def_readwrite("CachedSortFilterConfig", &UStatusMenuInventoryPanelGFxObject::CachedSortFilterConfig, py::return_value_policy::reference)
		.def_readwrite("TotalSlotCount", &UStatusMenuInventoryPanelGFxObject::TotalSlotCount)
		.def_readwrite("NewlyOpenedSlotCount", &UStatusMenuInventoryPanelGFxObject::NewlyOpenedSlotCount)
		.def_readwrite("BackpackSortConfigIndex", &UStatusMenuInventoryPanelGFxObject::BackpackSortConfigIndex)
		.def_readwrite("StartingBackpackSortConfigIndex", &UStatusMenuInventoryPanelGFxObject::StartingBackpackSortConfigIndex)
		.def_readwrite("BackpackSortConfigurations", &UStatusMenuInventoryPanelGFxObject::BackpackSortConfigurations, py::return_value_policy::reference)
		.def("GetCurrentCellObject", &UStatusMenuInventoryPanelGFxObject::GetCurrentCellObject, py::return_value_policy::reference)
		.def("OnCellPressed", &UStatusMenuInventoryPanelGFxObject::OnCellPressed)
		.def("extCompleteDrag_Backpack", &UStatusMenuInventoryPanelGFxObject::extCompleteDrag_Backpack)
		.def("extCompleteDrag_Equipped", &UStatusMenuInventoryPanelGFxObject::extCompleteDrag_Equipped)
		.def("extCancelDrag", &UStatusMenuInventoryPanelGFxObject::extCancelDrag)
		.def("OnStartDrag", &UStatusMenuInventoryPanelGFxObject::OnStartDrag)
		.def("SetLeftRightArrowVisibility", &UStatusMenuInventoryPanelGFxObject::SetLeftRightArrowVisibility)
		.def("TweenCards", &UStatusMenuInventoryPanelGFxObject::TweenCards)
		.def("__SetStorageInfoCardData", &UStatusMenuInventoryPanelGFxObject::__SetStorageInfoCardData)
		.def("SetStorageInfoCardData", &UStatusMenuInventoryPanelGFxObject::SetStorageInfoCardData)
		.def("SetStorageInfoCardTitle", &UStatusMenuInventoryPanelGFxObject::SetStorageInfoCardTitle)
		.def("FreeCellData", &UStatusMenuInventoryPanelGFxObject::FreeCellData)
		.def("OnTrashFavChanged", &UStatusMenuInventoryPanelGFxObject::OnTrashFavChanged)
		.def("CycleSelectedThingAsTrashOrFavorite", &UStatusMenuInventoryPanelGFxObject::CycleSelectedThingAsTrashOrFavorite)
		.def("CycleEquippedThingAsTrashOrFavorite", &UStatusMenuInventoryPanelGFxObject::CycleEquippedThingAsTrashOrFavorite)
		.def("FlourishDrop", &UStatusMenuInventoryPanelGFxObject::FlourishDrop)
		.def("CanDrop", &UStatusMenuInventoryPanelGFxObject::CanDrop)
		.def("DropSelectedThing", &UStatusMenuInventoryPanelGFxObject::DropSelectedThing)
		.def("CanUnready", &UStatusMenuInventoryPanelGFxObject::CanUnready)
		.def("CanReady", &UStatusMenuInventoryPanelGFxObject::CanReady)
		.def("CanUseConsume", &UStatusMenuInventoryPanelGFxObject::CanUseConsume)
		.def("UnreadyThing", &UStatusMenuInventoryPanelGFxObject::UnreadyThing)
		.def("IsComparing", &UStatusMenuInventoryPanelGFxObject::IsComparing)
		.def("SetBackpackList", &UStatusMenuInventoryPanelGFxObject::SetBackpackList)
		.def("SetTooltipText", &UStatusMenuInventoryPanelGFxObject::SetTooltipText)
		.def("__SetDPadFrames", &UStatusMenuInventoryPanelGFxObject::__SetDPadFrames)
		.def("SetDPadFrames", &UStatusMenuInventoryPanelGFxObject::SetDPadFrames)
		.def("SetTotalCredits", &UStatusMenuInventoryPanelGFxObject::SetTotalCredits)
		.def("SetAllAmmoCounts", &UStatusMenuInventoryPanelGFxObject::SetAllAmmoCounts)
		.def("__SetPortrait", &UStatusMenuInventoryPanelGFxObject::__SetPortrait)
		.def("SetPortrait", &UStatusMenuInventoryPanelGFxObject::SetPortrait)
		.def("ShowDualWieldInventoryGuides", &UStatusMenuInventoryPanelGFxObject::ShowDualWieldInventoryGuides)
		.def("FlourishNewSlots", &UStatusMenuInventoryPanelGFxObject::FlourishNewSlots)
		.def("SetBackpackCapacity", &UStatusMenuInventoryPanelGFxObject::SetBackpackCapacity)
		.def("__AwardNewQuickSlots", &UStatusMenuInventoryPanelGFxObject::__AwardNewQuickSlots)
		.def("AwardNewQuickSlots", &UStatusMenuInventoryPanelGFxObject::AwardNewQuickSlots)
		.def("ConfigureForPlayer", &UStatusMenuInventoryPanelGFxObject::ConfigureForPlayer)
		.def("FlourishEquip", &UStatusMenuInventoryPanelGFxObject::FlourishEquip)
		.def("FinishEquip", &UStatusMenuInventoryPanelGFxObject::FinishEquip)
		.def("CancelEquip", &UStatusMenuInventoryPanelGFxObject::CancelEquip)
		.def("CompleteEquip", &UStatusMenuInventoryPanelGFxObject::CompleteEquip)
		.def("TryUnlockedFlourish", &UStatusMenuInventoryPanelGFxObject::TryUnlockedFlourish)
		.def("StartEquip", &UStatusMenuInventoryPanelGFxObject::StartEquip)
		.def("EquipInputKey", &UStatusMenuInventoryPanelGFxObject::EquipInputKey)
		.def("GetEquippedPanelCurrentCellType", &UStatusMenuInventoryPanelGFxObject::GetEquippedPanelCurrentCellType)
		.def("OnItemSelected", &UStatusMenuInventoryPanelGFxObject::OnItemSelected)
		.def("NormalInputKey", &UStatusMenuInventoryPanelGFxObject::NormalInputKey)
		.def("PanelOnInputKey", &UStatusMenuInventoryPanelGFxObject::PanelOnInputKey)
		.def("InspectSelectedItem", &UStatusMenuInventoryPanelGFxObject::InspectSelectedItem)
		.def("eventGetSelectedThingFromNative", &UStatusMenuInventoryPanelGFxObject::eventGetSelectedThingFromNative, py::return_value_policy::reference)
		.def("GetSelectedThing", &UStatusMenuInventoryPanelGFxObject::GetSelectedThing, py::return_value_policy::reference)
		.def("UpdateDynamicCard", &UStatusMenuInventoryPanelGFxObject::UpdateDynamicCard)
		.def("RefreshItemCards", &UStatusMenuInventoryPanelGFxObject::RefreshItemCards)
		.def("SwitchToEquippedPanel", &UStatusMenuInventoryPanelGFxObject::SwitchToEquippedPanel)
		.def("SwitchToBackpackPanel", &UStatusMenuInventoryPanelGFxObject::SwitchToBackpackPanel)
		.def("UpdateTooltipsText", &UStatusMenuInventoryPanelGFxObject::UpdateTooltipsText)
		.def("SwitchFocus", &UStatusMenuInventoryPanelGFxObject::SwitchFocus)
		.def("OnPanelPressed", &UStatusMenuInventoryPanelGFxObject::OnPanelPressed)
		.def("RestoreState", &UStatusMenuInventoryPanelGFxObject::RestoreState)
		.def("Refresh", &UStatusMenuInventoryPanelGFxObject::Refresh)
		.def("OnListSort", &UStatusMenuInventoryPanelGFxObject::OnListSort)
		.def("SaveBackpackSortPreference", &UStatusMenuInventoryPanelGFxObject::SaveBackpackSortPreference)
		.def("extInitComplete", &UStatusMenuInventoryPanelGFxObject::extInitComplete)
		.def("RefreshBackpackPanel", &UStatusMenuInventoryPanelGFxObject::RefreshBackpackPanel)
		.def("extInitRightPanel", &UStatusMenuInventoryPanelGFxObject::extInitRightPanel)
		.def("extInitLeftPanel", &UStatusMenuInventoryPanelGFxObject::extInitLeftPanel)
		.def("InitItemCards", &UStatusMenuInventoryPanelGFxObject::InitItemCards)
		.def("AssignItemCards", &UStatusMenuInventoryPanelGFxObject::AssignItemCards)
		.def("Init", &UStatusMenuInventoryPanelGFxObject::Init)
		;
	py::class_< UTradingPanelGFxObject, UBaseTopLevelPanelGFxObject >(m, "UTradingPanelGFxObject")
		.def_property("bCancelNextDrag", [](UTradingPanelGFxObject &self){return self.bCancelNextDrag;}, [](UTradingPanelGFxObject &self, bool value){self.bCancelNextDrag = value ? 1 : 0;})
		.def_readwrite("BackpackPanel", &UTradingPanelGFxObject::BackpackPanel, py::return_value_policy::reference)
		.def_readwrite("OffersPanel", &UTradingPanelGFxObject::OffersPanel, py::return_value_policy::reference)
		.def_readwrite("CurrentPanel", &UTradingPanelGFxObject::CurrentPanel)
		.def_readwrite("ReturnPanel", &UTradingPanelGFxObject::ReturnPanel)
		.def_readwrite("OfferingThing", &UTradingPanelGFxObject::OfferingThing, py::return_value_policy::reference)
		.def_readwrite("CachedSortFilterConfig", &UTradingPanelGFxObject::CachedSortFilterConfig, py::return_value_policy::reference)
		.def("extCompleteDrag_Backpack", &UTradingPanelGFxObject::extCompleteDrag_Backpack)
		.def("extCompleteDrag_Offered", &UTradingPanelGFxObject::extCompleteDrag_Offered)
		.def("extCancelDrag", &UTradingPanelGFxObject::extCancelDrag)
		.def("CanDragSelectedThing", &UTradingPanelGFxObject::CanDragSelectedThing)
		.def("OnStartDrag", &UTradingPanelGFxObject::OnStartDrag)
		.def("SetLeftRightArrowVisibility", &UTradingPanelGFxObject::SetLeftRightArrowVisibility)
		.def("InspectItem", &UTradingPanelGFxObject::InspectItem)
		.def("SetBackpackList", &UTradingPanelGFxObject::SetBackpackList)
		.def("SetTooltipText", &UTradingPanelGFxObject::SetTooltipText)
		.def("SetTotalCredits", &UTradingPanelGFxObject::SetTotalCredits)
		.def("ConfigureForPlayer", &UTradingPanelGFxObject::ConfigureForPlayer)
		.def("FinishOffer", &UTradingPanelGFxObject::FinishOffer)
		.def("CancelOffer", &UTradingPanelGFxObject::CancelOffer)
		.def("CompleteOffer", &UTradingPanelGFxObject::CompleteOffer)
		.def("StartOffer", &UTradingPanelGFxObject::StartOffer)
		.def("CanUseCLIKButtons", &UTradingPanelGFxObject::CanUseCLIKButtons)
		.def("CanStartOffer", &UTradingPanelGFxObject::CanStartOffer)
		.def("OfferInputKey", &UTradingPanelGFxObject::OfferInputKey)
		.def("NormalInputKey", &UTradingPanelGFxObject::NormalInputKey)
		.def("BlockInput", &UTradingPanelGFxObject::BlockInput)
		.def("DeferInput", &UTradingPanelGFxObject::DeferInput)
		.def("PanelOnInputKey", &UTradingPanelGFxObject::PanelOnInputKey)
		.def("GetSelectedThing", &UTradingPanelGFxObject::GetSelectedThing, py::return_value_policy::reference)
		.def("RefreshItemCards", &UTradingPanelGFxObject::RefreshItemCards)
		.def("SwitchToPanel", &UTradingPanelGFxObject::SwitchToPanel)
		.def("SwitchFocus", &UTradingPanelGFxObject::SwitchFocus)
		.def("RestoreState", &UTradingPanelGFxObject::RestoreState)
		.def("OnItemSelected", &UTradingPanelGFxObject::OnItemSelected)
		.def("Refresh", &UTradingPanelGFxObject::Refresh)
		.def("OnListSort", &UTradingPanelGFxObject::OnListSort)
		.def("InitPanels", &UTradingPanelGFxObject::InitPanels)
		.def("AssignPanels", &UTradingPanelGFxObject::AssignPanels)
		.def("InitItemCards", &UTradingPanelGFxObject::InitItemCards)
		.def("AssignItemCards", &UTradingPanelGFxObject::AssignItemCards)
		.def("Init", &UTradingPanelGFxObject::Init)
		;
	py::class_< UTwoPanelInterfaceGFxObject, UBaseTopLevelPanelGFxObject >(m, "UTwoPanelInterfaceGFxObject")
		.def_property("bOnLeftPanel", [](UTwoPanelInterfaceGFxObject &self){return self.bOnLeftPanel;}, [](UTwoPanelInterfaceGFxObject &self, bool value){self.bOnLeftPanel = value ? 1 : 0;})
		.def_property("bStartedOnLeftPanel", [](UTwoPanelInterfaceGFxObject &self){return self.bStartedOnLeftPanel;}, [](UTwoPanelInterfaceGFxObject &self, bool value){self.bStartedOnLeftPanel = value ? 1 : 0;})
		.def_property("bLeftPanelRefreshed", [](UTwoPanelInterfaceGFxObject &self){return self.bLeftPanelRefreshed;}, [](UTwoPanelInterfaceGFxObject &self, bool value){self.bLeftPanelRefreshed = value ? 1 : 0;})
		.def_property("bRightPanelRefreshed", [](UTwoPanelInterfaceGFxObject &self){return self.bRightPanelRefreshed;}, [](UTwoPanelInterfaceGFxObject &self, bool value){self.bRightPanelRefreshed = value ? 1 : 0;})
		.def_property("bOwningMovieHandlesCellPress", [](UTwoPanelInterfaceGFxObject &self){return self.bOwningMovieHandlesCellPress;}, [](UTwoPanelInterfaceGFxObject &self, bool value){self.bOwningMovieHandlesCellPress = value ? 1 : 0;})
		.def_readwrite("TwoPanelInterface", &UTwoPanelInterfaceGFxObject::TwoPanelInterface, py::return_value_policy::reference)
		.def_readwrite("StoragePanel", &UTwoPanelInterfaceGFxObject::StoragePanel, py::return_value_policy::reference)
		.def_readwrite("PlayerPanel", &UTwoPanelInterfaceGFxObject::PlayerPanel, py::return_value_policy::reference)
		.def_readwrite("frameNum", &UTwoPanelInterfaceGFxObject::frameNum)
		.def_readwrite("TransferringThing", &UTwoPanelInterfaceGFxObject::TransferringThing, py::return_value_policy::reference)
		.def_readwrite("DynamicCardName", &UTwoPanelInterfaceGFxObject::DynamicCardName, py::return_value_policy::reference)
		.def_readwrite("HeaderNavLeftTooltip", &UTwoPanelInterfaceGFxObject::HeaderNavLeftTooltip, py::return_value_policy::reference)
		.def_readwrite("HeaderNavRightTooltip", &UTwoPanelInterfaceGFxObject::HeaderNavRightTooltip, py::return_value_policy::reference)
		.def_readwrite("StoragePanelLabel", &UTwoPanelInterfaceGFxObject::StoragePanelLabel, py::return_value_policy::reference)
		.def_readwrite("PlayerPanelLabel", &UTwoPanelInterfaceGFxObject::PlayerPanelLabel, py::return_value_policy::reference)
		.def_readwrite("bCanAcceptInput", &UTwoPanelInterfaceGFxObject::bCanAcceptInput)
		.def_readwrite("__SwitchToStartingPanel__Delegate", &UTwoPanelInterfaceGFxObject::__SwitchToStartingPanel__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnDynamicCardUpdated__Delegate", &UTwoPanelInterfaceGFxObject::__OnDynamicCardUpdated__Delegate, py::return_value_policy::reference)
		.def("OnCellPressed", &UTwoPanelInterfaceGFxObject::OnCellPressed)
		.def("InitForConsole", &UTwoPanelInterfaceGFxObject::InitForConsole)
		.def("InitForPC", &UTwoPanelInterfaceGFxObject::InitForPC)
		.def("OnValidCell", &UTwoPanelInterfaceGFxObject::OnValidCell)
		.def("GetCurrentCellObject", &UTwoPanelInterfaceGFxObject::GetCurrentCellObject, py::return_value_policy::reference)
		.def("GetCurrentPanel", &UTwoPanelInterfaceGFxObject::GetCurrentPanel, py::return_value_policy::reference)
		.def("GetInspectedItemCurrencyType", &UTwoPanelInterfaceGFxObject::GetInspectedItemCurrencyType)
		.def("GetInspectedItemOverridePrice", &UTwoPanelInterfaceGFxObject::GetInspectedItemOverridePrice)
		.def("SetActivePanelSelectIndexByThing", &UTwoPanelInterfaceGFxObject::SetActivePanelSelectIndexByThing)
		.def("SetActivePanelSortConfiguration", &UTwoPanelInterfaceGFxObject::SetActivePanelSortConfiguration)
		.def("SetTabIconFrame", &UTwoPanelInterfaceGFxObject::SetTabIconFrame)
		.def("SetActiveTab", &UTwoPanelInterfaceGFxObject::SetActiveTab)
		.def("__SetNavTooltips", &UTwoPanelInterfaceGFxObject::__SetNavTooltips)
		.def("SetNavTooltips", &UTwoPanelInterfaceGFxObject::SetNavTooltips)
		.def("SetTooltipText", &UTwoPanelInterfaceGFxObject::SetTooltipText)
		.def("Cleanup", &UTwoPanelInterfaceGFxObject::Cleanup)
		.def("SetStorageInfoCardVisible", &UTwoPanelInterfaceGFxObject::SetStorageInfoCardVisible)
		.def("__SetStorageInfoCardData", &UTwoPanelInterfaceGFxObject::__SetStorageInfoCardData)
		.def("SetStorageInfoCardData", &UTwoPanelInterfaceGFxObject::SetStorageInfoCardData)
		.def("SetStorageInfoCardTitle", &UTwoPanelInterfaceGFxObject::SetStorageInfoCardTitle)
		.def("CycleSelectedThingAsTrashOrFavorite", &UTwoPanelInterfaceGFxObject::CycleSelectedThingAsTrashOrFavorite)
		.def("TweenCards", &UTwoPanelInterfaceGFxObject::TweenCards)
		.def("FinishTransfer", &UTwoPanelInterfaceGFxObject::FinishTransfer)
		.def("CancelTransfer", &UTwoPanelInterfaceGFxObject::CancelTransfer)
		.def("ConfirmTransfer", &UTwoPanelInterfaceGFxObject::ConfirmTransfer)
		.def("TransferInputKey", &UTwoPanelInterfaceGFxObject::TransferInputKey)
		.def("StartTransfer", &UTwoPanelInterfaceGFxObject::StartTransfer)
		.def("IsTransferring", &UTwoPanelInterfaceGFxObject::IsTransferring)
		.def("NormalInputKey", &UTwoPanelInterfaceGFxObject::NormalInputKey)
		.def("PanelInputKey", &UTwoPanelInterfaceGFxObject::PanelInputKey)
		.def("OnItemSelected", &UTwoPanelInterfaceGFxObject::OnItemSelected)
		.def("InitItemCards", &UTwoPanelInterfaceGFxObject::InitItemCards)
		.def("AssignItemCards", &UTwoPanelInterfaceGFxObject::AssignItemCards)
		.def("SetHeader", &UTwoPanelInterfaceGFxObject::SetHeader)
		.def("GetSelectedThing", &UTwoPanelInterfaceGFxObject::GetSelectedThing, py::return_value_policy::reference)
		.def("GetEquippedAnalogueThroughInterface", &UTwoPanelInterfaceGFxObject::GetEquippedAnalogueThroughInterface, py::return_value_policy::reference)
		.def("GetSelectedThingThroughInterface", &UTwoPanelInterfaceGFxObject::GetSelectedThingThroughInterface, py::return_value_policy::reference)
		.def("UpdateDynamicCard", &UTwoPanelInterfaceGFxObject::UpdateDynamicCard)
		.def("RefreshItemCards", &UTwoPanelInterfaceGFxObject::RefreshItemCards)
		.def("SetUpCard", &UTwoPanelInterfaceGFxObject::SetUpCard)
		.def("SetActive", &UTwoPanelInterfaceGFxObject::SetActive)
		.def("SwitchPanelsForComparing", &UTwoPanelInterfaceGFxObject::SwitchPanelsForComparing)
		.def("TrySwitchToRightPanel", &UTwoPanelInterfaceGFxObject::TrySwitchToRightPanel)
		.def("TrySwitchToLeftPanel", &UTwoPanelInterfaceGFxObject::TrySwitchToLeftPanel)
		.def("SwitchToRightPanel", &UTwoPanelInterfaceGFxObject::SwitchToRightPanel)
		.def("SwitchToLeftPanel", &UTwoPanelInterfaceGFxObject::SwitchToLeftPanel)
		.def("OnListSort", &UTwoPanelInterfaceGFxObject::OnListSort)
		.def("ConfigureForPlayer", &UTwoPanelInterfaceGFxObject::ConfigureForPlayer)
		.def("OnTick", &UTwoPanelInterfaceGFxObject::OnTick)
		.def("Refresh", &UTwoPanelInterfaceGFxObject::Refresh)
		.def("RefreshRightPanel", &UTwoPanelInterfaceGFxObject::RefreshRightPanel)
		.def("RefreshLeftPanel", &UTwoPanelInterfaceGFxObject::RefreshLeftPanel)
		.def("SetActiveHeaderIcon", &UTwoPanelInterfaceGFxObject::SetActiveHeaderIcon)
		.def("SetHeaderLabel", &UTwoPanelInterfaceGFxObject::SetHeaderLabel)
		.def("SetPlayerPanelHidden", &UTwoPanelInterfaceGFxObject::SetPlayerPanelHidden)
		.def("SetNavHeaderIconCount", &UTwoPanelInterfaceGFxObject::SetNavHeaderIconCount)
		.def("extInitRightPanel", &UTwoPanelInterfaceGFxObject::extInitRightPanel)
		.def("extInitLeftPanel", &UTwoPanelInterfaceGFxObject::extInitLeftPanel)
		.def("Init", &UTwoPanelInterfaceGFxObject::Init)
		.def("OnDynamicCardUpdated", &UTwoPanelInterfaceGFxObject::OnDynamicCardUpdated)
		.def("SwitchToStartingPanel", &UTwoPanelInterfaceGFxObject::SwitchToStartingPanel)
		;
	py::class_< UDeferredDataProviderGFxObject, UGFxObject >(m, "UDeferredDataProviderGFxObject")
		.def_readwrite("BaseOwningMovie", &UDeferredDataProviderGFxObject::BaseOwningMovie, py::return_value_policy::reference)
		.def_readwrite("CachedObjects", &UDeferredDataProviderGFxObject::CachedObjects, py::return_value_policy::reference)
		.def("GetLength", &UDeferredDataProviderGFxObject::GetLength)
		.def("eventInvalidate", &UDeferredDataProviderGFxObject::eventInvalidate)
		.def("EmptyData", &UDeferredDataProviderGFxObject::EmptyData)
		.def("RequestItemRange", &UDeferredDataProviderGFxObject::RequestItemRange, py::return_value_policy::reference)
		.def("RequestItemAt", &UDeferredDataProviderGFxObject::RequestItemAt, py::return_value_policy::reference)
		.def("Init", &UDeferredDataProviderGFxObject::Init)
		;
	py::class_< UInventoryDataProviderGFxObject, UDeferredDataProviderGFxObject >(m, "UInventoryDataProviderGFxObject")
		.def_readwrite("OwningMovie", &UInventoryDataProviderGFxObject::OwningMovie, py::return_value_policy::reference)
		.def_readwrite("OwningPanel", &UInventoryDataProviderGFxObject::OwningPanel, py::return_value_policy::reference)
		.def_readwrite("HeavyweightArray", &UInventoryDataProviderGFxObject::HeavyweightArray, py::return_value_policy::reference)
		.def_readwrite("LightweightArray", &UInventoryDataProviderGFxObject::LightweightArray, py::return_value_policy::reference)
		.def_readwrite("CategoryLabelsArray", &UInventoryDataProviderGFxObject::CategoryLabelsArray, py::return_value_policy::reference)
		.def_readwrite("UnloadableCount", &UInventoryDataProviderGFxObject::UnloadableCount)
		.def("OnTrashFavChanged", &UInventoryDataProviderGFxObject::OnTrashFavChanged)
		.def("GetEntryKindAtIndex", &UInventoryDataProviderGFxObject::GetEntryKindAtIndex)
		.def("AddDataEntry", &UInventoryDataProviderGFxObject::AddDataEntry)
		.def("EmptyData", &UInventoryDataProviderGFxObject::EmptyData)
		.def("FindIndexOfThing", &UInventoryDataProviderGFxObject::FindIndexOfThing)
		.def("GetInventoryAtIndex", &UInventoryDataProviderGFxObject::GetInventoryAtIndex, py::return_value_policy::reference)
		.def("Init", &UInventoryDataProviderGFxObject::Init)
		;
	py::class_< UGFxTextListContainer, UObject >(m, "UGFxTextListContainer")
		.def_property("bHighlightBarNormal", [](UGFxTextListContainer &self){return self.bHighlightBarNormal;}, [](UGFxTextListContainer &self, bool value){self.bHighlightBarNormal = value ? 1 : 0;})
		.def_readwrite("OneTimeArray", &UGFxTextListContainer::OneTimeArray, py::return_value_policy::reference)
		.def_readwrite("CategoryLabelsArray", &UGFxTextListContainer::CategoryLabelsArray, py::return_value_policy::reference)
		.def_readwrite("SortableArray", &UGFxTextListContainer::SortableArray, py::return_value_policy::reference)
		.def_readwrite("TextEntries", &UGFxTextListContainer::TextEntries, py::return_value_policy::reference)
		.def_readwrite("ParentMovie", &UGFxTextListContainer::ParentMovie, py::return_value_policy::reference)
		.def_readwrite("HighlightedEntry", &UGFxTextListContainer::HighlightedEntry)
		.def_readwrite("IndexOfTopEntry", &UGFxTextListContainer::IndexOfTopEntry)
		.def_readwrite("NumberEntriesPerPage", &UGFxTextListContainer::NumberEntriesPerPage)
		.def_readwrite("SavedHighlightedEntry", &UGFxTextListContainer::SavedHighlightedEntry)
		.def_readwrite("SavedIndexOfTopEntry", &UGFxTextListContainer::SavedIndexOfTopEntry)
		.def_readwrite("ListDef", &UGFxTextListContainer::ListDef, py::return_value_policy::reference)
		.def("GetIndexOfNextCategory", &UGFxTextListContainer::GetIndexOfNextCategory)
		.def("GetIndexOfPreviousCategory", &UGFxTextListContainer::GetIndexOfPreviousCategory)
		.def("SetMoreBars", &UGFxTextListContainer::SetMoreBars)
		.def("UpdateTextEntries", &UGFxTextListContainer::UpdateTextEntries)
		.def("MoveHighlightBar", &UGFxTextListContainer::MoveHighlightBar)
		.def("GetTextEntryIndexOfFirstRealEntry", &UGFxTextListContainer::GetTextEntryIndexOfFirstRealEntry)
		.def("GetTextAndIconAtIndex", &UGFxTextListContainer::GetTextAndIconAtIndex)
		.def("GetTextEntryKindAtIndex", &UGFxTextListContainer::GetTextEntryKindAtIndex)
		.def("GetObjectAtIndex", &UGFxTextListContainer::GetObjectAtIndex, py::return_value_policy::reference)
		.def("RemoveObject", &UGFxTextListContainer::RemoveObject)
		.def("ScrollToBottomOfList", &UGFxTextListContainer::ScrollToBottomOfList)
		.def("SetIconOverrideFor", &UGFxTextListContainer::SetIconOverrideFor)
		.def("SetObjectHighlighted", &UGFxTextListContainer::SetObjectHighlighted)
		.def("FindObjectIndex", &UGFxTextListContainer::FindObjectIndex)
		.def("SetHighlightBarOff", &UGFxTextListContainer::SetHighlightBarOff)
		.def("SetHighlightBarNormal", &UGFxTextListContainer::SetHighlightBarNormal)
		.def("SetHighlightBarSelected", &UGFxTextListContainer::SetHighlightBarSelected)
		.def("UnHighlightAll", &UGFxTextListContainer::UnHighlightAll)
		.def("PositionHighlightBar", &UGFxTextListContainer::PositionHighlightBar)
		.def("ResetState", &UGFxTextListContainer::ResetState)
		.def("RestoreState", &UGFxTextListContainer::RestoreState)
		.def("SaveState", &UGFxTextListContainer::SaveState)
		.def("GetHighlightedText", &UGFxTextListContainer::GetHighlightedText, py::return_value_policy::reference)
		.def("GetHighlightedObject", &UGFxTextListContainer::GetHighlightedObject, py::return_value_policy::reference)
		.def("IsSlotValid", &UGFxTextListContainer::IsSlotValid)
		.def("SelectSlot", &UGFxTextListContainer::SelectSlot)
		.def("RepositionToFitIndex", &UGFxTextListContainer::RepositionToFitIndex)
		.def("Move", &UGFxTextListContainer::Move, py::return_value_policy::reference)
		.def("UpdateEntriesPerPage", &UGFxTextListContainer::UpdateEntriesPerPage)
		.def("AddDataEntry", &UGFxTextListContainer::AddDataEntry)
		.def("EmptyData", &UGFxTextListContainer::EmptyData)
		.def("Init", &UGFxTextListContainer::Init)
		;
	py::class_< UGFxTextListDefinition, UGBXDefinition >(m, "UGFxTextListDefinition")
		.def_readwrite("ContainerName", &UGFxTextListDefinition::ContainerName, py::return_value_policy::reference)
		.def_readwrite("FunctionPath", &UGFxTextListDefinition::FunctionPath, py::return_value_policy::reference)
		.def_readwrite("MoreUpName", &UGFxTextListDefinition::MoreUpName, py::return_value_policy::reference)
		.def_readwrite("MoreDownName", &UGFxTextListDefinition::MoreDownName, py::return_value_policy::reference)
		.def_readwrite("CategoryPrefix", &UGFxTextListDefinition::CategoryPrefix, py::return_value_policy::reference)
		.def_readwrite("CategoryPostfix", &UGFxTextListDefinition::CategoryPostfix, py::return_value_policy::reference)
		.def_readwrite("CategoryIconLabel", &UGFxTextListDefinition::CategoryIconLabel, py::return_value_policy::reference)
		.def_readwrite("TextNormalColor", &UGFxTextListDefinition::TextNormalColor, py::return_value_policy::reference)
		.def_readwrite("TextHighlightColor", &UGFxTextListDefinition::TextHighlightColor, py::return_value_policy::reference)
		.def_readwrite("InitialEntryCount", &UGFxTextListDefinition::InitialEntryCount)
		;
	py::class_< UHashDisplayGFxDefinition, UGFxMovieDefinition >(m, "UHashDisplayGFxDefinition")
		.def_readwrite("LeftSideDef", &UHashDisplayGFxDefinition::LeftSideDef, py::return_value_policy::reference)
		.def_readwrite("EmptySlotColor", &UHashDisplayGFxDefinition::EmptySlotColor, py::return_value_policy::reference)
		.def_readwrite("CardCellWidth", &UHashDisplayGFxDefinition::CardCellWidth)
		.def_readwrite("CardCellHeight", &UHashDisplayGFxDefinition::CardCellHeight)
		.def_readwrite("CardTextureWidth", &UHashDisplayGFxDefinition::CardTextureWidth)
		.def_readwrite("CardTextureHeight", &UHashDisplayGFxDefinition::CardTextureHeight)
		.def_readwrite("Card1ExternalTextureMap", &UHashDisplayGFxDefinition::Card1ExternalTextureMap, py::return_value_policy::reference)
		;
	py::class_< UHUDScalingAnchorDefinition, UGBXDefinition >(m, "UHUDScalingAnchorDefinition")
		.def_readwrite("AnchorPosition", &UHUDScalingAnchorDefinition::AnchorPosition, py::return_value_policy::reference)
		;
	py::class_< UHUDWidget_Base, UGFxObject >(m, "UHUDWidget_Base")
		.def_readwrite("MyHUDMovie", &UHUDWidget_Base::MyHUDMovie, py::return_value_policy::reference)
		.def("Update", &UHUDWidget_Base::Update)
		.def("Deinit", &UHUDWidget_Base::Deinit)
		.def("Init", &UHUDWidget_Base::Init)
		;
	py::class_< UHUDWidget_Challenges, UHUDWidget_Base >(m, "UHUDWidget_Challenges")
		.def_property("bShowing", [](UHUDWidget_Challenges &self){return self.bShowing;}, [](UHUDWidget_Challenges &self, bool value){self.bShowing = value ? 1 : 0;})
		.def_readwrite("InnerClip", &UHUDWidget_Challenges::InnerClip, py::return_value_policy::reference)
		.def_readwrite("HeaderClip", &UHUDWidget_Challenges::HeaderClip, py::return_value_policy::reference)
		.def_readwrite("SubtextClip", &UHUDWidget_Challenges::SubtextClip, py::return_value_policy::reference)
		.def_readwrite("SubtextInnerClip", &UHUDWidget_Challenges::SubtextInnerClip, py::return_value_policy::reference)
		.def_readwrite("SubtextInnerTextClip", &UHUDWidget_Challenges::SubtextInnerTextClip, py::return_value_policy::reference)
		.def_readwrite("FlipTime", &UHUDWidget_Challenges::FlipTime)
		.def_readwrite("HideTime", &UHUDWidget_Challenges::HideTime)
		.def_readwrite("Header_InProgress", &UHUDWidget_Challenges::Header_InProgress, py::return_value_policy::reference)
		.def_readwrite("Header_Complete", &UHUDWidget_Challenges::Header_Complete, py::return_value_policy::reference)
		.def("GetRewardString", &UHUDWidget_Challenges::GetRewardString, py::return_value_policy::reference)
		.def("GetProgressString", &UHUDWidget_Challenges::GetProgressString, py::return_value_policy::reference)
		.def("GetNameString", &UHUDWidget_Challenges::GetNameString, py::return_value_policy::reference)
		.def("Hide", &UHUDWidget_Challenges::Hide)
		.def("Flip", &UHUDWidget_Challenges::Flip)
		.def("ConditionalShowNextQueuedChallenge", &UHUDWidget_Challenges::ConditionalShowNextQueuedChallenge)
		.def("ShowNextQueuedChallenge", &UHUDWidget_Challenges::ShowNextQueuedChallenge)
		.def("Update", &UHUDWidget_Challenges::Update)
		.def("Deinit", &UHUDWidget_Challenges::Deinit)
		.def("Init", &UHUDWidget_Challenges::Init)
		;
	py::class_< UHUDWidget_Crosshairs, UHUDWidget_Base >(m, "UHUDWidget_Crosshairs")
		.def_property("bScopeCrosshair", [](UHUDWidget_Crosshairs &self){return self.bScopeCrosshair;}, [](UHUDWidget_Crosshairs &self, bool value){self.bScopeCrosshair = value ? 1 : 0;})
		.def_property("bDualWieldCrosshair", [](UHUDWidget_Crosshairs &self){return self.bDualWieldCrosshair;}, [](UHUDWidget_Crosshairs &self, bool value){self.bDualWieldCrosshair = value ? 1 : 0;})
		.def_readwrite("CrosshairSize", &UHUDWidget_Crosshairs::CrosshairSize)
		.def_readwrite("CrosshairFrame", &UHUDWidget_Crosshairs::CrosshairFrame)
		.def_readwrite("CrosshairVisibility", &UHUDWidget_Crosshairs::CrosshairVisibility)
		.def_readwrite("MyCrosshairColor", &UHUDWidget_Crosshairs::MyCrosshairColor)
		.def_readwrite("ChargeFrame", &UHUDWidget_Crosshairs::ChargeFrame)
		.def_readwrite("OuterClip", &UHUDWidget_Crosshairs::OuterClip, py::return_value_policy::reference)
		.def_readwrite("InnerClip", &UHUDWidget_Crosshairs::InnerClip, py::return_value_policy::reference)
		.def_readwrite("ChargeClip", &UHUDWidget_Crosshairs::ChargeClip, py::return_value_policy::reference)
		.def_readwrite("WWeap", &UHUDWidget_Crosshairs::WWeap, py::return_value_policy::reference)
		.def("AssociateWeapon", &UHUDWidget_Crosshairs::AssociateWeapon)
		.def("UpdateCrosshairColor", &UHUDWidget_Crosshairs::UpdateCrosshairColor)
		.def("UpdateCrosshairFrame", &UHUDWidget_Crosshairs::UpdateCrosshairFrame)
		.def("SetCrosshairVisibility", &UHUDWidget_Crosshairs::SetCrosshairVisibility)
		.def("Update", &UHUDWidget_Crosshairs::Update)
		.def("Deinit", &UHUDWidget_Crosshairs::Deinit)
		.def("Init", &UHUDWidget_Crosshairs::Init)
		;
	py::class_< UHUDWidget_Minimap, UHUDWidget_Base >(m, "UHUDWidget_Minimap")
		.def_property("bPlayerRelative", [](UHUDWidget_Minimap &self){return self.bPlayerRelative;}, [](UHUDWidget_Minimap &self, bool value){self.bPlayerRelative = value ? 1 : 0;})
		.def_property("bShowThreats", [](UHUDWidget_Minimap &self){return self.bShowThreats;}, [](UHUDWidget_Minimap &self, bool value){self.bShowThreats = value ? 1 : 0;})
		.def_readwrite("WorldRadius", &UHUDWidget_Minimap::WorldRadius)
		.def_readwrite("UnrealUnitsPerPixel", &UHUDWidget_Minimap::UnrealUnitsPerPixel)
		.def_readwrite("TargetWorldRadius", &UHUDWidget_Minimap::TargetWorldRadius)
		.def_readwrite("OuterRadius", &UHUDWidget_Minimap::OuterRadius)
		.def_readwrite("RadiusLerpPerSecond", &UHUDWidget_Minimap::RadiusLerpPerSecond)
		.def_readwrite("MapClip", &UHUDWidget_Minimap::MapClip, py::return_value_policy::reference)
		.def_readwrite("DirArrowClip", &UHUDWidget_Minimap::DirArrowClip, py::return_value_policy::reference)
		.def_readwrite("NorthMarkerClip", &UHUDWidget_Minimap::NorthMarkerClip, py::return_value_policy::reference)
		.def_readwrite("NorthMarkerOffset", &UHUDWidget_Minimap::NorthMarkerOffset, py::return_value_policy::reference)
		.def_readwrite("CachedPlayerYaw", &UHUDWidget_Minimap::CachedPlayerYaw)
		.def_readwrite("MapYawOffset", &UHUDWidget_Minimap::MapYawOffset)
		.def_readwrite("Icons_Objective", &UHUDWidget_Minimap::Icons_Objective, py::return_value_policy::reference)
		.def_readwrite("Icons_AreaObjective", &UHUDWidget_Minimap::Icons_AreaObjective, py::return_value_policy::reference)
		.def_readwrite("Icons_AreaObjectiveSticky", &UHUDWidget_Minimap::Icons_AreaObjectiveSticky, py::return_value_policy::reference)
		.def_readwrite("Icons_CustomObjective", &UHUDWidget_Minimap::Icons_CustomObjective, py::return_value_policy::reference)
		.def_readwrite("Icons_Threats", &UHUDWidget_Minimap::Icons_Threats, py::return_value_policy::reference)
		.def_readwrite("Icons_Allies", &UHUDWidget_Minimap::Icons_Allies, py::return_value_policy::reference)
		.def_readwrite("Icons_Vehicles", &UHUDWidget_Minimap::Icons_Vehicles, py::return_value_policy::reference)
		.def_readwrite("Icons_Shops", &UHUDWidget_Minimap::Icons_Shops, py::return_value_policy::reference)
		.def_readwrite("Icons_VSS", &UHUDWidget_Minimap::Icons_VSS, py::return_value_policy::reference)
		.def_readwrite("Icons_HealthStations", &UHUDWidget_Minimap::Icons_HealthStations, py::return_value_policy::reference)
		.def_readwrite("Icons_FastTravelStations", &UHUDWidget_Minimap::Icons_FastTravelStations, py::return_value_policy::reference)
		.def_readwrite("Icons_LevelTravelStations", &UHUDWidget_Minimap::Icons_LevelTravelStations, py::return_value_policy::reference)
		.def_readwrite("Icons_CustomizationStations", &UHUDWidget_Minimap::Icons_CustomizationStations, py::return_value_policy::reference)
		.def_readwrite("Icons_MissionEligible", &UHUDWidget_Minimap::Icons_MissionEligible, py::return_value_policy::reference)
		.def_readwrite("Icons_MissionRedeemable", &UHUDWidget_Minimap::Icons_MissionRedeemable, py::return_value_policy::reference)
		.def_readwrite("TacticalMapVolume", &UHUDWidget_Minimap::TacticalMapVolume, py::return_value_policy::reference)
		.def_readwrite("HUDMovieDef", &UHUDWidget_Minimap::HUDMovieDef, py::return_value_policy::reference)
		.def("eventToggleFogOfWarBlob", &UHUDWidget_Minimap::eventToggleFogOfWarBlob)
		.def("eventInitFogOfWarBlobs", &UHUDWidget_Minimap::eventInitFogOfWarBlobs)
		.def("UpdateTargetRadius", &UHUDWidget_Minimap::UpdateTargetRadius)
		.def("SetMapMovie", &UHUDWidget_Minimap::SetMapMovie)
		.def("Update", &UHUDWidget_Minimap::Update)
		.def("Deinit", &UHUDWidget_Minimap::Deinit)
		.def("InitOverheadMapVolume", &UHUDWidget_Minimap::InitOverheadMapVolume)
		.def("Init", &UHUDWidget_Minimap::Init)
		;
	py::class_< UHUDWidget_Missions, UHUDWidget_Base >(m, "UHUDWidget_Missions")
		.def_property("bMissionWidgetNeedsRefresh", [](UHUDWidget_Missions &self){return self.bMissionWidgetNeedsRefresh;}, [](UHUDWidget_Missions &self, bool value){self.bMissionWidgetNeedsRefresh = value ? 1 : 0;})
		.def_property("bCachedMissionTimerRunning", [](UHUDWidget_Missions &self){return self.bCachedMissionTimerRunning;}, [](UHUDWidget_Missions &self, bool value){self.bCachedMissionTimerRunning = value ? 1 : 0;})
		.def_property("bCachedMissionBranches", [](UHUDWidget_Missions &self){return self.bCachedMissionBranches;}, [](UHUDWidget_Missions &self, bool value){self.bCachedMissionBranches = value ? 1 : 0;})
		.def_property("bCachedMissionTurnIn", [](UHUDWidget_Missions &self){return self.bCachedMissionTurnIn;}, [](UHUDWidget_Missions &self, bool value){self.bCachedMissionTurnIn = value ? 1 : 0;})
		.def_property("bCachedMissionFailed", [](UHUDWidget_Missions &self){return self.bCachedMissionFailed;}, [](UHUDWidget_Missions &self, bool value){self.bCachedMissionFailed = value ? 1 : 0;})
		.def_property("bDoingNonTrackedMissionFlip", [](UHUDWidget_Missions &self){return self.bDoingNonTrackedMissionFlip;}, [](UHUDWidget_Missions &self, bool value){self.bDoingNonTrackedMissionFlip = value ? 1 : 0;})
		.def_property("bRejectFurtherNonTrackedAdds", [](UHUDWidget_Missions &self){return self.bRejectFurtherNonTrackedAdds;}, [](UHUDWidget_Missions &self, bool value){self.bRejectFurtherNonTrackedAdds = value ? 1 : 0;})
		.def_readwrite("CachedActiveMissionObjectives", &UHUDWidget_Missions::CachedActiveMissionObjectives, py::return_value_policy::reference)
		.def_readwrite("CachedBranchedMissionObjectives", &UHUDWidget_Missions::CachedBranchedMissionObjectives, py::return_value_policy::reference)
		.def_readwrite("DisplayedActiveMissionObjectives", &UHUDWidget_Missions::DisplayedActiveMissionObjectives, py::return_value_policy::reference)
		.def_readwrite("DisplayedBranchedMissionObjectives", &UHUDWidget_Missions::DisplayedBranchedMissionObjectives, py::return_value_policy::reference)
		.def_readwrite("DisplayedActiveMissionObjectiveCounts", &UHUDWidget_Missions::DisplayedActiveMissionObjectiveCounts, py::return_value_policy::reference)
		.def_readwrite("DisplayedBranchedMissionObjectiveCounts", &UHUDWidget_Missions::DisplayedBranchedMissionObjectiveCounts, py::return_value_policy::reference)
		.def_readwrite("CachedMissionName", &UHUDWidget_Missions::CachedMissionName, py::return_value_policy::reference)
		.def_readwrite("CachedMissionTimerSeconds", &UHUDWidget_Missions::CachedMissionTimerSeconds)
		.def_readwrite("CachedMissionDefenseHealth", &UHUDWidget_Missions::CachedMissionDefenseHealth)
		.def_readwrite("CachedMissionDefenseObjective", &UHUDWidget_Missions::CachedMissionDefenseObjective, py::return_value_policy::reference)
		.def_readwrite("CachedNonTrackedMission", &UHUDWidget_Missions::CachedNonTrackedMission, py::return_value_policy::reference)
		.def_readwrite("CachedNonTrackedMissionObjective", &UHUDWidget_Missions::CachedNonTrackedMissionObjective, py::return_value_policy::reference)
		.def_readwrite("NonTrackedMissionStartTime", &UHUDWidget_Missions::NonTrackedMissionStartTime)
		.def_readwrite("NonTrackedMissionDuration", &UHUDWidget_Missions::NonTrackedMissionDuration)
		.def_readwrite("MissionModuleTweenDuration", &UHUDWidget_Missions::MissionModuleTweenDuration)
		.def_readwrite("MissionTurnInString", &UHUDWidget_Missions::MissionTurnInString, py::return_value_policy::reference)
		.def_readwrite("MissionFailedString", &UHUDWidget_Missions::MissionFailedString, py::return_value_policy::reference)
		.def_readwrite("DefendString", &UHUDWidget_Missions::DefendString, py::return_value_policy::reference)
		.def_readwrite("TimerPausedString", &UHUDWidget_Missions::TimerPausedString, py::return_value_policy::reference)
		.def_readwrite("OrString", &UHUDWidget_Missions::OrString, py::return_value_policy::reference)
		.def_readwrite("MessageQueue", &UHUDWidget_Missions::MessageQueue, py::return_value_policy::reference)
		.def_readwrite("ProcessedMessageQueue", &UHUDWidget_Missions::ProcessedMessageQueue, py::return_value_policy::reference)
		.def_readwrite("ActiveFlyingCheckmarks", &UHUDWidget_Missions::ActiveFlyingCheckmarks, py::return_value_policy::reference)
		.def("ClearAllCheckmarks", &UHUDWidget_Missions::ClearAllCheckmarks)
		.def("ClearNextCheckmark", &UHUDWidget_Missions::ClearNextCheckmark)
		.def("FindModuleNumForDisplayedObjective", &UHUDWidget_Missions::FindModuleNumForDisplayedObjective)
		.def("DoMissionStatusFanfare", &UHUDWidget_Missions::DoMissionStatusFanfare)
		.def("SetDisplayedMission", &UHUDWidget_Missions::SetDisplayedMission)
		.def("SendMissionWidgetMessage", &UHUDWidget_Missions::SendMissionWidgetMessage)
		.def("RefreshMissionWidget", &UHUDWidget_Missions::RefreshMissionWidget)
		.def("extMissionModuleAnimFinished", &UHUDWidget_Missions::extMissionModuleAnimFinished)
		.def("ProcessMissionWidgetMessages", &UHUDWidget_Missions::ProcessMissionWidgetMessages)
		.def("UpdateActiveMission", &UHUDWidget_Missions::UpdateActiveMission)
		.def("Update", &UHUDWidget_Missions::Update)
		.def("Deinit", &UHUDWidget_Missions::Deinit)
		.def("Init", &UHUDWidget_Missions::Init)
		;
	py::class_< UHUDWidget_Trading, UHUDWidget_Base >(m, "UHUDWidget_Trading")
		.def_property("bTipsShown", [](UHUDWidget_Trading &self){return self.bTipsShown;}, [](UHUDWidget_Trading &self, bool value){self.bTipsShown = value ? 1 : 0;})
		.def_readwrite("TradePrompt_Send", &UHUDWidget_Trading::TradePrompt_Send, py::return_value_policy::reference)
		.def_readwrite("TradePrompt_Accept", &UHUDWidget_Trading::TradePrompt_Accept, py::return_value_policy::reference)
		.def_readwrite("TradeSentTo", &UHUDWidget_Trading::TradeSentTo, py::return_value_policy::reference)
		.def_readwrite("TradeReceivedFrom", &UHUDWidget_Trading::TradeReceivedFrom, py::return_value_policy::reference)
		.def_readwrite("TradeCanceled", &UHUDWidget_Trading::TradeCanceled, py::return_value_policy::reference)
		.def_readwrite("TradeFinished", &UHUDWidget_Trading::TradeFinished, py::return_value_policy::reference)
		.def_readwrite("TradeDisabled", &UHUDWidget_Trading::TradeDisabled, py::return_value_policy::reference)
		.def_readwrite("TradingDisabled", &UHUDWidget_Trading::TradingDisabled, py::return_value_policy::reference)
		.def_readwrite("TradeCanceled_Busy", &UHUDWidget_Trading::TradeCanceled_Busy, py::return_value_policy::reference)
		.def_readwrite("TradeCanceled_OutOfRange", &UHUDWidget_Trading::TradeCanceled_OutOfRange, py::return_value_policy::reference)
		.def_readwrite("TradeCanceled_SelfRefused", &UHUDWidget_Trading::TradeCanceled_SelfRefused, py::return_value_policy::reference)
		.def_readwrite("TradeCanceled_OtherRefused", &UHUDWidget_Trading::TradeCanceled_OtherRefused, py::return_value_policy::reference)
		.def_readwrite("TradeCanceled_SelfWithdrew", &UHUDWidget_Trading::TradeCanceled_SelfWithdrew, py::return_value_policy::reference)
		.def_readwrite("TradeCanceled_OtherWithdrew", &UHUDWidget_Trading::TradeCanceled_OtherWithdrew, py::return_value_policy::reference)
		.def_readwrite("TradeCanceled_SelfCanceled", &UHUDWidget_Trading::TradeCanceled_SelfCanceled, py::return_value_policy::reference)
		.def_readwrite("TradeCanceled_OtherCanceled", &UHUDWidget_Trading::TradeCanceled_OtherCanceled, py::return_value_policy::reference)
		.def_readwrite("TradeFinished_Won", &UHUDWidget_Trading::TradeFinished_Won, py::return_value_policy::reference)
		.def_readwrite("TradeFinished_Lost", &UHUDWidget_Trading::TradeFinished_Lost, py::return_value_policy::reference)
		.def_readwrite("TradeFinished_Draw", &UHUDWidget_Trading::TradeFinished_Draw, py::return_value_policy::reference)
		.def_readwrite("InnerClip", &UHUDWidget_Trading::InnerClip, py::return_value_policy::reference)
		.def_readwrite("Line1Clip", &UHUDWidget_Trading::Line1Clip, py::return_value_policy::reference)
		.def_readwrite("Line2Clip", &UHUDWidget_Trading::Line2Clip, py::return_value_policy::reference)
		.def_readwrite("TradeManager", &UHUDWidget_Trading::TradeManager, py::return_value_policy::reference)
		.def_readwrite("CachedStatus", &UHUDWidget_Trading::CachedStatus)
		.def_readwrite("CachedPartnerPRI", &UHUDWidget_Trading::CachedPartnerPRI, py::return_value_policy::reference)
		.def_readwrite("ReasonMessageDuration", &UHUDWidget_Trading::ReasonMessageDuration)
		.def_readwrite("LastReasonMessageTime", &UHUDWidget_Trading::LastReasonMessageTime)
		.def("TradeManagerShutDown", &UHUDWidget_Trading::TradeManagerShutDown)
		.def("TradeManagerInitialized", &UHUDWidget_Trading::TradeManagerInitialized)
		.def("HideTips", &UHUDWidget_Trading::HideTips)
		.def("ShowTips", &UHUDWidget_Trading::ShowTips)
		.def("Update", &UHUDWidget_Trading::Update)
		.def("Deinit", &UHUDWidget_Trading::Deinit)
		.def("Init", &UHUDWidget_Trading::Init)
		;
	py::class_< UHUDWidget_WorldSpace, UHUDWidget_Base >(m, "UHUDWidget_WorldSpace")
		.def_readwrite("ObjectiveIcons", &UHUDWidget_WorldSpace::ObjectiveIcons, py::return_value_policy::reference)
		.def_readwrite("PlayerIcons", &UHUDWidget_WorldSpace::PlayerIcons, py::return_value_policy::reference)
		.def_readwrite("NPCAllyIcons", &UHUDWidget_WorldSpace::NPCAllyIcons, py::return_value_policy::reference)
		.def_readwrite("HUDDef", &UHUDWidget_WorldSpace::HUDDef, py::return_value_policy::reference)
		.def_readwrite("NextRelevantPlayerPawnIndex", &UHUDWidget_WorldSpace::NextRelevantPlayerPawnIndex)
		.def_readwrite("VVOrg", &UHUDWidget_WorldSpace::VVOrg, py::return_value_policy::reference)
		.def_readwrite("VVExt", &UHUDWidget_WorldSpace::VVExt, py::return_value_policy::reference)
		.def_readwrite("TopLevelClip", &UHUDWidget_WorldSpace::TopLevelClip, py::return_value_policy::reference)
		.def_readwrite("MinimapWrapperClip", &UHUDWidget_WorldSpace::MinimapWrapperClip, py::return_value_policy::reference)
		.def_readwrite("MinimapClip", &UHUDWidget_WorldSpace::MinimapClip, py::return_value_policy::reference)
		.def_readwrite("ParentClip", &UHUDWidget_WorldSpace::ParentClip, py::return_value_policy::reference)
		.def("GetPRIFor", &UHUDWidget_WorldSpace::GetPRIFor, py::return_value_policy::reference)
		.def("NotifyOfPawnRelevance", &UHUDWidget_WorldSpace::NotifyOfPawnRelevance)
		.def("UpdateNPCAllyIcons", &UHUDWidget_WorldSpace::UpdateNPCAllyIcons)
		.def("UpdatePlayerIcons", &UHUDWidget_WorldSpace::UpdatePlayerIcons)
		.def("UpdateObjectiveIcons", &UHUDWidget_WorldSpace::UpdateObjectiveIcons)
		.def("IsShowingObjective", &UHUDWidget_WorldSpace::IsShowingObjective)
		.def("SetVirtualViewport", &UHUDWidget_WorldSpace::SetVirtualViewport)
		.def("Update", &UHUDWidget_WorldSpace::Update)
		.def("Deinit", &UHUDWidget_WorldSpace::Deinit)
		.def("Init", &UHUDWidget_WorldSpace::Init)
		;
	py::class_< UInventoryDataProviderElement, UGFxObject >(m, "UInventoryDataProviderElement")
		.def_readwrite("Kind", &UInventoryDataProviderElement::Kind)
		.def_readwrite("LightweightIdx", &UInventoryDataProviderElement::LightweightIdx)
		;
	py::class_< UItemCardGFxObject, UGFxObject >(m, "UItemCardGFxObject")
		.def_property("bIsVisible", [](UItemCardGFxObject &self){return self.bIsVisible;}, [](UItemCardGFxObject &self, bool value){self.bIsVisible = value ? 1 : 0;})
		.def("SetVisible_", &UItemCardGFxObject::SetVisible_)
		.def("SetBackgroundStyle", &UItemCardGFxObject::SetBackgroundStyle)
		.def("__SetTopStat", &UItemCardGFxObject::__SetTopStat)
		.def("__SetTitle", &UItemCardGFxObject::__SetTitle)
		.def("SetCardUIStats", &UItemCardGFxObject::SetCardUIStats)
		.def("AdjustHeight", &UItemCardGFxObject::AdjustHeight)
		.def("SetHeight", &UItemCardGFxObject::SetHeight)
		.def("SetLevelRequirement", &UItemCardGFxObject::SetLevelRequirement)
		.def("ToggleCreditsSpinner", &UItemCardGFxObject::ToggleCreditsSpinner)
		.def("SetEridiumValue", &UItemCardGFxObject::SetEridiumValue)
		.def("SetValue", &UItemCardGFxObject::SetValue)
		.def("SetFunStats", &UItemCardGFxObject::SetFunStats)
		.def("SetTopStat", &UItemCardGFxObject::SetTopStat)
		.def("SetTitle", &UItemCardGFxObject::SetTitle)
		.def("SetItemCardEx", &UItemCardGFxObject::SetItemCardEx)
		.def("eventSetItemCard", &UItemCardGFxObject::eventSetItemCard)
		.def("Init", &UItemCardGFxObject::Init)
		;
	py::class_< UItemOfTheDayPanelGFxObject, UGFxObject >(m, "UItemOfTheDayPanelGFxObject")
		.def_readwrite("VendingMachineMovie", &UItemOfTheDayPanelGFxObject::VendingMachineMovie, py::return_value_policy::reference)
		.def_readwrite("CellThumbnail", &UItemOfTheDayPanelGFxObject::CellThumbnail, py::return_value_policy::reference)
		.def_readwrite("CustomMovieClip", &UItemOfTheDayPanelGFxObject::CustomMovieClip, py::return_value_policy::reference)
		.def("GetCellObject", &UItemOfTheDayPanelGFxObject::GetCellObject, py::return_value_policy::reference)
		.def("extOnIOTDPress", &UItemOfTheDayPanelGFxObject::extOnIOTDPress)
		.def("extOnIOTDRollOut", &UItemOfTheDayPanelGFxObject::extOnIOTDRollOut)
		.def("extOnIOTDRollOver", &UItemOfTheDayPanelGFxObject::extOnIOTDRollOver)
		.def("SetCellStatus", &UItemOfTheDayPanelGFxObject::SetCellStatus)
		.def("__SetBackgroundClip", &UItemOfTheDayPanelGFxObject::__SetBackgroundClip)
		.def("SetBackgroundClip", &UItemOfTheDayPanelGFxObject::SetBackgroundClip)
		.def("__SetBackground", &UItemOfTheDayPanelGFxObject::__SetBackground)
		.def("SetBackground", &UItemOfTheDayPanelGFxObject::SetBackground)
		.def("__SetRarityColor", &UItemOfTheDayPanelGFxObject::__SetRarityColor)
		.def("SetRarityColor", &UItemOfTheDayPanelGFxObject::SetRarityColor)
		.def("SetItemOfTheDayItem", &UItemOfTheDayPanelGFxObject::SetItemOfTheDayItem)
		.def("SetSelected", &UItemOfTheDayPanelGFxObject::SetSelected)
		.def("SetCellData", &UItemOfTheDayPanelGFxObject::SetCellData)
		.def("SetTimeRemaining", &UItemOfTheDayPanelGFxObject::SetTimeRemaining)
		.def("SetVisibility", &UItemOfTheDayPanelGFxObject::SetVisibility)
		.def("__SetLocalizedStrings", &UItemOfTheDayPanelGFxObject::__SetLocalizedStrings)
		.def("SetLocalizedStrings", &UItemOfTheDayPanelGFxObject::SetLocalizedStrings)
		.def("Cleanup", &UItemOfTheDayPanelGFxObject::Cleanup)
		.def("InitLabels", &UItemOfTheDayPanelGFxObject::InitLabels)
		.def("Init", &UItemOfTheDayPanelGFxObject::Init)
		;
	py::class_< UItemPickupGFxDefinition, UGFxMovieDefinition >(m, "UItemPickupGFxDefinition")
		.def_readwrite("MatSrc", &UItemPickupGFxDefinition::MatSrc, py::return_value_policy::reference)
		.def_readwrite("Particle", &UItemPickupGFxDefinition::Particle, py::return_value_policy::reference)
		.def_readwrite("ParticleMatParamName", &UItemPickupGFxDefinition::ParticleMatParamName, py::return_value_policy::reference)
		.def_readwrite("MatTexParamName", &UItemPickupGFxDefinition::MatTexParamName, py::return_value_policy::reference)
		.def_readwrite("TallItemZOffsetPercentage", &UItemPickupGFxDefinition::TallItemZOffsetPercentage)
		;
	py::class_< UMontageGFxObject, UGFxObject >(m, "UMontageGFxObject")
		.def_property("bShouldShowImages", [](UMontageGFxObject &self){return self.bShouldShowImages;}, [](UMontageGFxObject &self, bool value){self.bShouldShowImages = value ? 1 : 0;})
		.def_property("bMontageTexturesLoaded", [](UMontageGFxObject &self){return self.bMontageTexturesLoaded;}, [](UMontageGFxObject &self, bool value){self.bMontageTexturesLoaded = value ? 1 : 0;})
		.def_readwrite("WPCOwner", &UMontageGFxObject::WPCOwner, py::return_value_policy::reference)
		.def_readwrite("CreditsDef", &UMontageGFxObject::CreditsDef, py::return_value_policy::reference)
		.def_readwrite("LinkageName", &UMontageGFxObject::LinkageName, py::return_value_policy::reference)
		.def_readwrite("MontageIdx", &UMontageGFxObject::MontageIdx)
		.def_readwrite("MontageTextures", &UMontageGFxObject::MontageTextures, py::return_value_policy::reference)
		.def("extFadeOutComplete", &UMontageGFxObject::extFadeOutComplete)
		.def("extFadeInComplete", &UMontageGFxObject::extFadeInComplete)
		.def("FadeOut", &UMontageGFxObject::FadeOut)
		.def("FadeIn", &UMontageGFxObject::FadeIn)
		.def("StartNewTexture", &UMontageGFxObject::StartNewTexture)
		.def("StartNextTexture", &UMontageGFxObject::StartNextTexture)
		.def("Close", &UMontageGFxObject::Close)
		.def("eventOnMontageTexturesLoaded", &UMontageGFxObject::eventOnMontageTexturesLoaded)
		.def("Init", &UMontageGFxObject::Init)
		.def("SetShouldShowImages", &UMontageGFxObject::SetShouldShowImages)
		.def("ClearMontageTextures", &UMontageGFxObject::ClearMontageTextures)
		.def("AddMontageTextures", &UMontageGFxObject::AddMontageTextures)
		;
	py::class_< UScrollingListGFxObject, UGFxObject >(m, "UScrollingListGFxObject")
		.def("eventSetSelectedIndex", &UScrollingListGFxObject::eventSetSelectedIndex)
		.def("ScrollToIndex", &UScrollingListGFxObject::ScrollToIndex)
		.def("Init", &UScrollingListGFxObject::Init)
		;
	py::class_< UMultitypeScrollingListGFxObject, UScrollingListGFxObject >(m, "UMultitypeScrollingListGFxObject")
		.def_property("bInitialInitComplete", [](UMultitypeScrollingListGFxObject &self){return self.bInitialInitComplete;}, [](UMultitypeScrollingListGFxObject &self, bool value){self.bInitialInitComplete = value ? 1 : 0;})
		.def_readwrite("ParentPanel", &UMultitypeScrollingListGFxObject::ParentPanel, py::return_value_policy::reference)
		.def("ContinueInitialInit", &UMultitypeScrollingListGFxObject::ContinueInitialInit)
		.def("extGameScroll", &UMultitypeScrollingListGFxObject::extGameScroll)
		.def("getRendererAt", &UMultitypeScrollingListGFxObject::getRendererAt, py::return_value_policy::reference)
		.def("SetEquippingState", &UMultitypeScrollingListGFxObject::SetEquippingState)
		.def("extSetRendererInfo", &UMultitypeScrollingListGFxObject::extSetRendererInfo)
		.def("Init", &UMultitypeScrollingListGFxObject::Init)
		.def("InitMultitype", &UMultitypeScrollingListGFxObject::InitMultitype)
		;
	py::class_< USkillTreeGFxDefinition, UGBXDefinition >(m, "USkillTreeGFxDefinition")
		.def_readwrite("SkillMovieClip", &USkillTreeGFxDefinition::SkillMovieClip, py::return_value_policy::reference)
		.def_readwrite("ArtifactDialogMovieClip", &USkillTreeGFxDefinition::ArtifactDialogMovieClip, py::return_value_policy::reference)
		.def_readwrite("IconOnName", &USkillTreeGFxDefinition::IconOnName, py::return_value_policy::reference)
		.def_readwrite("IconOffName", &USkillTreeGFxDefinition::IconOffName, py::return_value_policy::reference)
		.def_readwrite("IconHiddenName", &USkillTreeGFxDefinition::IconHiddenName, py::return_value_policy::reference)
		.def_readwrite("IncendiaryArtifactName", &USkillTreeGFxDefinition::IncendiaryArtifactName, py::return_value_policy::reference)
		.def_readwrite("CorrosiveArtifactName", &USkillTreeGFxDefinition::CorrosiveArtifactName, py::return_value_policy::reference)
		.def_readwrite("ShockArtifactName", &USkillTreeGFxDefinition::ShockArtifactName, py::return_value_policy::reference)
		.def_readwrite("ExplosiveArtifactName", &USkillTreeGFxDefinition::ExplosiveArtifactName, py::return_value_policy::reference)
		.def_readwrite("ArtifactListSize", &USkillTreeGFxDefinition::ArtifactListSize)
		.def_readwrite("SkillSelectedName", &USkillTreeGFxDefinition::SkillSelectedName, py::return_value_policy::reference)
		.def_readwrite("SkillUnselectedName", &USkillTreeGFxDefinition::SkillUnselectedName, py::return_value_policy::reference)
		.def_readwrite("SkillDisabledName", &USkillTreeGFxDefinition::SkillDisabledName, py::return_value_policy::reference)
		.def_readwrite("SkillEnabledName", &USkillTreeGFxDefinition::SkillEnabledName, py::return_value_policy::reference)
		.def_readwrite("SkillPartialName", &USkillTreeGFxDefinition::SkillPartialName, py::return_value_policy::reference)
		.def_readwrite("SkillMaxedName", &USkillTreeGFxDefinition::SkillMaxedName, py::return_value_policy::reference)
		.def_readwrite("SkillSpentName", &USkillTreeGFxDefinition::SkillSpentName, py::return_value_policy::reference)
		.def_readwrite("SkillRushShowName", &USkillTreeGFxDefinition::SkillRushShowName, py::return_value_policy::reference)
		.def_readwrite("SkillRushHideName", &USkillTreeGFxDefinition::SkillRushHideName, py::return_value_policy::reference)
		.def_readwrite("SkillArtifactShowName", &USkillTreeGFxDefinition::SkillArtifactShowName, py::return_value_policy::reference)
		.def_readwrite("SkillArtifactHideName", &USkillTreeGFxDefinition::SkillArtifactHideName, py::return_value_policy::reference)
		.def_readwrite("SkillArtifactSelectionName", &USkillTreeGFxDefinition::SkillArtifactSelectionName, py::return_value_policy::reference)
		.def_readwrite("SkillArtifactIconName", &USkillTreeGFxDefinition::SkillArtifactIconName, py::return_value_policy::reference)
		.def_readwrite("SkillArtifactListItemName", &USkillTreeGFxDefinition::SkillArtifactListItemName, py::return_value_policy::reference)
		.def_readwrite("DescriptionBackgroundUnlockedName", &USkillTreeGFxDefinition::DescriptionBackgroundUnlockedName, py::return_value_policy::reference)
		.def_readwrite("DescriptionBackgroundLockedName", &USkillTreeGFxDefinition::DescriptionBackgroundLockedName, py::return_value_policy::reference)
		.def_readwrite("DescriptionBackgroundFirstName", &USkillTreeGFxDefinition::DescriptionBackgroundFirstName, py::return_value_policy::reference)
		.def_readwrite("DescriptionBackgroundSomeName", &USkillTreeGFxDefinition::DescriptionBackgroundSomeName, py::return_value_policy::reference)
		.def_readwrite("DescriptionBackgroundMaxedName", &USkillTreeGFxDefinition::DescriptionBackgroundMaxedName, py::return_value_policy::reference)
		.def_readwrite("KillSkillPrefix", &USkillTreeGFxDefinition::KillSkillPrefix, py::return_value_policy::reference)
		.def_readwrite("SkillPointsName", &USkillTreeGFxDefinition::SkillPointsName, py::return_value_policy::reference)
		.def_readwrite("SkillPointsSpentVersusTotalName", &USkillTreeGFxDefinition::SkillPointsSpentVersusTotalName, py::return_value_policy::reference)
		.def_readwrite("SkillPointsRemainingName", &USkillTreeGFxDefinition::SkillPointsRemainingName, py::return_value_policy::reference)
		.def_readwrite("SkillPointSpentName", &USkillTreeGFxDefinition::SkillPointSpentName, py::return_value_policy::reference)
		.def_readwrite("SkillRushName", &USkillTreeGFxDefinition::SkillRushName, py::return_value_policy::reference)
		.def_readwrite("DescriptionBackgroundName", &USkillTreeGFxDefinition::DescriptionBackgroundName, py::return_value_policy::reference)
		.def_readwrite("DescriptionName", &USkillTreeGFxDefinition::DescriptionName, py::return_value_policy::reference)
		.def_readwrite("SkillName", &USkillTreeGFxDefinition::SkillName, py::return_value_policy::reference)
		.def_readwrite("PortraitName", &USkillTreeGFxDefinition::PortraitName, py::return_value_policy::reference)
		.def_readwrite("InfoBoxName", &USkillTreeGFxDefinition::InfoBoxName, py::return_value_policy::reference)
		.def_readwrite("ClassModPath", &USkillTreeGFxDefinition::ClassModPath, py::return_value_policy::reference)
		.def_readwrite("ClassName", &USkillTreeGFxDefinition::ClassName, py::return_value_policy::reference)
		.def_readwrite("ArtifactName", &USkillTreeGFxDefinition::ArtifactName, py::return_value_policy::reference)
		.def_readwrite("SkillFirstTreeMovieClip", &USkillTreeGFxDefinition::SkillFirstTreeMovieClip, py::return_value_policy::reference)
		.def_readwrite("SkillLeftTreeMovieClip", &USkillTreeGFxDefinition::SkillLeftTreeMovieClip, py::return_value_policy::reference)
		.def_readwrite("SkillMiddleTreeMovieClip", &USkillTreeGFxDefinition::SkillMiddleTreeMovieClip, py::return_value_policy::reference)
		.def_readwrite("SkillRightTreeMovieClip", &USkillTreeGFxDefinition::SkillRightTreeMovieClip, py::return_value_policy::reference)
		.def_readwrite("FirstBranchProgressionMaskSize", &USkillTreeGFxDefinition::FirstBranchProgressionMaskSize)
		.def_readwrite("SkillBranchProgressionMaskSize", &USkillTreeGFxDefinition::SkillBranchProgressionMaskSize)
		.def_readwrite("BranchProgressionMaskSpeed", &USkillTreeGFxDefinition::BranchProgressionMaskSpeed)
		.def_readwrite("BranchProgressionMaskSpeedEnterScreen", &USkillTreeGFxDefinition::BranchProgressionMaskSpeedEnterScreen)
		.def_readwrite("NumBranchesPerTree", &USkillTreeGFxDefinition::NumBranchesPerTree)
		.def_readwrite("NumTiersPerBranch", &USkillTreeGFxDefinition::NumTiersPerBranch)
		.def_readwrite("NumCellsPerTier", &USkillTreeGFxDefinition::NumCellsPerTier)
		.def_readwrite("SelectedLocation", &USkillTreeGFxDefinition::SelectedLocation, py::return_value_policy::reference)
		.def_readwrite("UnselectedOffset", &USkillTreeGFxDefinition::UnselectedOffset, py::return_value_policy::reference)
		.def_readwrite("OverviewOffset", &USkillTreeGFxDefinition::OverviewOffset, py::return_value_policy::reference)
		.def_readwrite("OverviewGlobalOffset", &USkillTreeGFxDefinition::OverviewGlobalOffset, py::return_value_policy::reference)
		.def_readwrite("TweenDuration", &USkillTreeGFxDefinition::TweenDuration)
		.def_readwrite("SelectedScale", &USkillTreeGFxDefinition::SelectedScale)
		.def_readwrite("UnselectedScale", &USkillTreeGFxDefinition::UnselectedScale)
		.def_readwrite("OverviewScale", &USkillTreeGFxDefinition::OverviewScale)
		.def_readwrite("SelectedAlpha", &USkillTreeGFxDefinition::SelectedAlpha)
		.def_readwrite("UnselectedAlpha", &USkillTreeGFxDefinition::UnselectedAlpha)
		.def_readwrite("OverviewAlpha", &USkillTreeGFxDefinition::OverviewAlpha)
		.def_readwrite("SelectedSkillZOffset", &USkillTreeGFxDefinition::SelectedSkillZOffset)
		.def_readwrite("SelectedSkillZTweenTime", &USkillTreeGFxDefinition::SelectedSkillZTweenTime)
		;
	py::class_< USkillTreeGFxObject, UGFxObject >(m, "USkillTreeGFxObject")
		.def_property("bCanPlayRushingHelpClip", [](USkillTreeGFxObject &self){return self.bCanPlayRushingHelpClip;}, [](USkillTreeGFxObject &self, bool value){self.bCanPlayRushingHelpClip = value ? 1 : 0;})
		.def_property("bInstinctDialogOpen", [](USkillTreeGFxObject &self){return self.bInstinctDialogOpen;}, [](USkillTreeGFxObject &self, bool value){self.bInstinctDialogOpen = value ? 1 : 0;})
		.def_property("bArtifactDialogOpen", [](USkillTreeGFxObject &self){return self.bArtifactDialogOpen;}, [](USkillTreeGFxObject &self, bool value){self.bArtifactDialogOpen = value ? 1 : 0;})
		.def_property("bUsingLockedSkillNameColor", [](USkillTreeGFxObject &self){return self.bUsingLockedSkillNameColor;}, [](USkillTreeGFxObject &self, bool value){self.bUsingLockedSkillNameColor = value ? 1 : 0;})
		.def_property("bOverviewMode", [](USkillTreeGFxObject &self){return self.bOverviewMode;}, [](USkillTreeGFxObject &self, bool value){self.bOverviewMode = value ? 1 : 0;})
		.def_readwrite("Artifacts", &USkillTreeGFxObject::Artifacts, py::return_value_policy::reference)
		.def_readwrite("NoArtifactsDescription", &USkillTreeGFxObject::NoArtifactsDescription, py::return_value_policy::reference)
		.def_readwrite("ArtifactsDescription", &USkillTreeGFxObject::ArtifactsDescription, py::return_value_policy::reference)
		.def_readwrite("EquipArtifact", &USkillTreeGFxObject::EquipArtifact, py::return_value_policy::reference)
		.def_readwrite("NoArtifactEquippedDescription", &USkillTreeGFxObject::NoArtifactEquippedDescription, py::return_value_policy::reference)
		.def_readwrite("NoArtifactOption", &USkillTreeGFxObject::NoArtifactOption, py::return_value_policy::reference)
		.def_readwrite("AdrenalineRush", &USkillTreeGFxObject::AdrenalineRush, py::return_value_policy::reference)
		.def_readwrite("Level", &USkillTreeGFxObject::Level, py::return_value_policy::reference)
		.def_readwrite("SkillModifierNextLevel", &USkillTreeGFxObject::SkillModifierNextLevel, py::return_value_policy::reference)
		.def_readwrite("ClassModBonusString", &USkillTreeGFxObject::ClassModBonusString, py::return_value_policy::reference)
		.def_readwrite("SkillPoints_Sing", &USkillTreeGFxObject::SkillPoints_Sing, py::return_value_policy::reference)
		.def_readwrite("SkillPoints_Plur", &USkillTreeGFxObject::SkillPoints_Plur, py::return_value_policy::reference)
		.def_readwrite("ClassModUntrainedString", &USkillTreeGFxObject::ClassModUntrainedString, py::return_value_policy::reference)
		.def_readwrite("SkillPointsRemainingString", &USkillTreeGFxObject::SkillPointsRemainingString, py::return_value_policy::reference)
		.def_readwrite("MovieDef", &USkillTreeGFxObject::MovieDef, py::return_value_policy::reference)
		.def_readwrite("Movie", &USkillTreeGFxObject::Movie, py::return_value_policy::reference)
		.def_readwrite("WPCOwner", &USkillTreeGFxObject::WPCOwner, py::return_value_policy::reference)
		.def_readwrite("NumSkillPoints", &USkillTreeGFxObject::NumSkillPoints)
		.def_readwrite("ProgressionMaskSpeed", &USkillTreeGFxObject::ProgressionMaskSpeed)
		.def_readwrite("FinalFirstBranchProgressionMask", &USkillTreeGFxObject::FinalFirstBranchProgressionMask)
		.def_readwrite("CurrentFirstBranchProgressionMask", &USkillTreeGFxObject::CurrentFirstBranchProgressionMask)
		.def_readwrite("FinalLeftBranchProgressionMask", &USkillTreeGFxObject::FinalLeftBranchProgressionMask)
		.def_readwrite("CurrentLeftBranchProgressionMask", &USkillTreeGFxObject::CurrentLeftBranchProgressionMask)
		.def_readwrite("FinalMiddleBranchProgressionMask", &USkillTreeGFxObject::FinalMiddleBranchProgressionMask)
		.def_readwrite("CurrentMiddleBranchProgressionMask", &USkillTreeGFxObject::CurrentMiddleBranchProgressionMask)
		.def_readwrite("FinalRightBranchProgressionMask", &USkillTreeGFxObject::FinalRightBranchProgressionMask)
		.def_readwrite("CurrentRightBranchProgressionMask", &USkillTreeGFxObject::CurrentRightBranchProgressionMask)
		.def_readwrite("EquippedArtifactIndex", &USkillTreeGFxObject::EquippedArtifactIndex)
		.def_readwrite("ArtifactList", &USkillTreeGFxObject::ArtifactList, py::return_value_policy::reference)
		.def_readwrite("CurrentArtifactIndex", &USkillTreeGFxObject::CurrentArtifactIndex)
		.def_readwrite("PreviousSkillNameColor", &USkillTreeGFxObject::PreviousSkillNameColor, py::return_value_policy::reference)
		.def_readwrite("SkillIntermediateGradeColor", &USkillTreeGFxObject::SkillIntermediateGradeColor, py::return_value_policy::reference)
		.def_readwrite("SkillMaxGradeColor", &USkillTreeGFxObject::SkillMaxGradeColor, py::return_value_policy::reference)
		.def_readwrite("SkillLockedTextColor", &USkillTreeGFxObject::SkillLockedTextColor, py::return_value_policy::reference)
		.def_readwrite("SkillNextGradeModifierTextHTML", &USkillTreeGFxObject::SkillNextGradeModifierTextHTML, py::return_value_policy::reference)
		.def_readwrite("SkillLockedModifierTextHTML", &USkillTreeGFxObject::SkillLockedModifierTextHTML, py::return_value_policy::reference)
		.def_readwrite("CurrentSkill", &USkillTreeGFxObject::CurrentSkill, py::return_value_policy::reference)
		.def_readwrite("CurrentSkill_Rollover", &USkillTreeGFxObject::CurrentSkill_Rollover, py::return_value_policy::reference)
		.def_readwrite("CellNavPref", &USkillTreeGFxObject::CellNavPref)
		.def_readwrite("BranchNavPref", &USkillTreeGFxObject::BranchNavPref)
		.def_readwrite("OverrideBranchNum", &USkillTreeGFxObject::OverrideBranchNum)
		.def_readwrite("Tooltips_SpendPoints", &USkillTreeGFxObject::Tooltips_SpendPoints, py::return_value_policy::reference)
		.def_readwrite("Tooltips_Overview", &USkillTreeGFxObject::Tooltips_Overview, py::return_value_policy::reference)
		.def_readwrite("Tooltips_Cancel", &USkillTreeGFxObject::Tooltips_Cancel, py::return_value_policy::reference)
		.def_readwrite("InformationBox", &USkillTreeGFxObject::InformationBox, py::return_value_policy::reference)
		.def_readwrite("HACK_PrevBranchForClick", &USkillTreeGFxObject::HACK_PrevBranchForClick)
		.def_readwrite("bSetProgressTree1", &USkillTreeGFxObject::bSetProgressTree1)
		.def_readwrite("bSetProgressTree2", &USkillTreeGFxObject::bSetProgressTree2)
		.def_readwrite("bSetProgressTree3", &USkillTreeGFxObject::bSetProgressTree3)
		.def_readwrite("bTree1Init", &USkillTreeGFxObject::bTree1Init)
		.def_readwrite("bTree2Init", &USkillTreeGFxObject::bTree2Init)
		.def_readwrite("bTree3Init", &USkillTreeGFxObject::bTree3Init)
		.def("eventOnCellRolledOver", &USkillTreeGFxObject::eventOnCellRolledOver)
		.def("CellRolledOver", &USkillTreeGFxObject::CellRolledOver)
		.def("eventOnCellClicked", &USkillTreeGFxObject::eventOnCellClicked)
		.def("CellClicked", &USkillTreeGFxObject::CellClicked)
		.def("GetPlayerClassMod", &USkillTreeGFxObject::GetPlayerClassMod, py::return_value_policy::reference)
		.def("Flash_UpdateArtifactSelection", &USkillTreeGFxObject::Flash_UpdateArtifactSelection)
		.def("Flash_PopulateArtifactList", &USkillTreeGFxObject::Flash_PopulateArtifactList)
		.def("BuildArtifactList", &USkillTreeGFxObject::BuildArtifactList)
		.def("GetSkillDescriptionForGrade", &USkillTreeGFxObject::GetSkillDescriptionForGrade, py::return_value_policy::reference)
		.def("SetSkillNameColorToUnlocked", &USkillTreeGFxObject::SetSkillNameColorToUnlocked)
		.def("SetSkillNameColorToLocked", &USkillTreeGFxObject::SetSkillNameColorToLocked)
		.def("GetSkillNameColorPath", &USkillTreeGFxObject::GetSkillNameColorPath, py::return_value_policy::reference)
		.def("Flash_SetSkillPointProperties_AS", &USkillTreeGFxObject::Flash_SetSkillPointProperties_AS)
		.def("Flash_SetSkillPointProperties", &USkillTreeGFxObject::Flash_SetSkillPointProperties)
		.def("Flash_SetCharacter_AS", &USkillTreeGFxObject::Flash_SetCharacter_AS)
		.def("Flash_SetCharacter", &USkillTreeGFxObject::Flash_SetCharacter)
		.def("EquipSelectedArtifact", &USkillTreeGFxObject::EquipSelectedArtifact)
		.def("RequestRespec", &USkillTreeGFxObject::RequestRespec)
		.def("HandleArtifactChange", &USkillTreeGFxObject::HandleArtifactChange)
		.def("HandleSkillTreeReset", &USkillTreeGFxObject::HandleSkillTreeReset)
		.def("HandleSkillPointsChange", &USkillTreeGFxObject::HandleSkillPointsChange)
		.def("PlaySpendFlourish", &USkillTreeGFxObject::PlaySpendFlourish)
		.def("HandleSkillGradeChange", &USkillTreeGFxObject::HandleSkillGradeChange)
		.def("RequestSkillUpgrade", &USkillTreeGFxObject::RequestSkillUpgrade)
		.def("CanUpgradeSkill", &USkillTreeGFxObject::CanUpgradeSkill)
		.def("Nav_Back", &USkillTreeGFxObject::Nav_Back)
		.def("ToggleOverviewMode", &USkillTreeGFxObject::ToggleOverviewMode)
		.def("Reset", &USkillTreeGFxObject::Reset)
		.def("HoverSkillCell", &USkillTreeGFxObject::HoverSkillCell)
		.def("Activate", &USkillTreeGFxObject::Activate)
		.def("ArtifactSelect", &USkillTreeGFxObject::ArtifactSelect)
		.def("Nav_DownArtifact", &USkillTreeGFxObject::Nav_DownArtifact)
		.def("Nav_UpArtifact", &USkillTreeGFxObject::Nav_UpArtifact)
		.def("UpdateSkillIcon", &USkillTreeGFxObject::UpdateSkillIcon)
		.def("UpdateAllSkillIcons_Branch", &USkillTreeGFxObject::UpdateAllSkillIcons_Branch)
		.def("UpdateAllSkillIcons", &USkillTreeGFxObject::UpdateAllSkillIcons)
		.def("SetSkillIconVisibility", &USkillTreeGFxObject::SetSkillIconVisibility)
		.def("UpdateInfoBox", &USkillTreeGFxObject::UpdateInfoBox)
		.def("UpdateBranchLocations", &USkillTreeGFxObject::UpdateBranchLocations)
		.def("UpdateBranchDepths", &USkillTreeGFxObject::UpdateBranchDepths)
		.def("eventGetEffectiveCurrentBranchNumber", &USkillTreeGFxObject::eventGetEffectiveCurrentBranchNumber)
		.def("UpdateTooltips", &USkillTreeGFxObject::UpdateTooltips)
		.def("PostNav", &USkillTreeGFxObject::PostNav)
		.def("GetHighlightClip", &USkillTreeGFxObject::GetHighlightClip, py::return_value_policy::reference)
		.def("GetCellClip", &USkillTreeGFxObject::GetCellClip, py::return_value_policy::reference)
		.def("GetUICell", &USkillTreeGFxObject::GetUICell)
		.def("Navigate", &USkillTreeGFxObject::Navigate, py::return_value_policy::reference)
		.def("Nav_Right", &USkillTreeGFxObject::Nav_Right)
		.def("Nav_Left", &USkillTreeGFxObject::Nav_Left)
		.def("Nav_Down", &USkillTreeGFxObject::Nav_Down)
		.def("Nav_Up", &USkillTreeGFxObject::Nav_Up)
		.def("HandleInputKey", &USkillTreeGFxObject::HandleInputKey)
		.def("extInitTree", &USkillTreeGFxObject::extInitTree)
		.def("ClearCellMap", &USkillTreeGFxObject::ClearCellMap)
		.def("HandleClose", &USkillTreeGFxObject::HandleClose)
		.def("Init", &USkillTreeGFxObject::Init)
		.def("HandleOpen", &USkillTreeGFxObject::HandleOpen)
		.def("CalculateBranchProgression", &USkillTreeGFxObject::CalculateBranchProgression)
		.def("Flash_SendInitialSkillData", &USkillTreeGFxObject::Flash_SendInitialSkillData)
		;
	py::class_< UStatusMenuMapGFxObject, UGFxObject >(m, "UStatusMenuMapGFxObject")
		.def_property("bSizesInitialized", [](UStatusMenuMapGFxObject &self){return self.bSizesInitialized;}, [](UStatusMenuMapGFxObject &self, bool value){self.bSizesInitialized = value ? 1 : 0;})
		.def_property("bMapFrameDirty", [](UStatusMenuMapGFxObject &self){return self.bMapFrameDirty;}, [](UStatusMenuMapGFxObject &self, bool value){self.bMapFrameDirty = value ? 1 : 0;})
		.def_property("bDesiredCenterDirty", [](UStatusMenuMapGFxObject &self){return self.bDesiredCenterDirty;}, [](UStatusMenuMapGFxObject &self, bool value){self.bDesiredCenterDirty = value ? 1 : 0;})
		.def_property("bCenterDirty", [](UStatusMenuMapGFxObject &self){return self.bCenterDirty;}, [](UStatusMenuMapGFxObject &self, bool value){self.bCenterDirty = value ? 1 : 0;})
		.def_property("bPlayersDirty", [](UStatusMenuMapGFxObject &self){return self.bPlayersDirty;}, [](UStatusMenuMapGFxObject &self, bool value){self.bPlayersDirty = value ? 1 : 0;})
		.def_readwrite("ViewBorder", &UStatusMenuMapGFxObject::ViewBorder)
		.def_readwrite("PanRate", &UStatusMenuMapGFxObject::PanRate)
		.def_readwrite("PlayerOwner", &UStatusMenuMapGFxObject::PlayerOwner, py::return_value_policy::reference)
		.def_readwrite("MapObjects", &UStatusMenuMapGFxObject::MapObjects, py::return_value_policy::reference)
		.def_readwrite("Transform", &UStatusMenuMapGFxObject::Transform, py::return_value_policy::reference)
		.def_readwrite("CoordScale", &UStatusMenuMapGFxObject::CoordScale, py::return_value_policy::reference)
		.def_readwrite("ClipSize", &UStatusMenuMapGFxObject::ClipSize, py::return_value_policy::reference)
		.def_readwrite("MapClipRect", &UStatusMenuMapGFxObject::MapClipRect, py::return_value_policy::reference)
		.def_readwrite("ViewSize", &UStatusMenuMapGFxObject::ViewSize, py::return_value_policy::reference)
		.def_readwrite("ViewOffset", &UStatusMenuMapGFxObject::ViewOffset, py::return_value_policy::reference)
		.def_readwrite("DesiredCenter", &UStatusMenuMapGFxObject::DesiredCenter, py::return_value_policy::reference)
		.def_readwrite("PanScalingFactor", &UStatusMenuMapGFxObject::PanScalingFactor)
		.def_readwrite("CurrScaleVal", &UStatusMenuMapGFxObject::CurrScaleVal)
		.def_readwrite("ZoomSpeedFactor", &UStatusMenuMapGFxObject::ZoomSpeedFactor)
		.def_readwrite("MaxScale", &UStatusMenuMapGFxObject::MaxScale)
		.def_readwrite("MinScale", &UStatusMenuMapGFxObject::MinScale)
		.def_readwrite("TacticalMapVolume", &UStatusMenuMapGFxObject::TacticalMapVolume, py::return_value_policy::reference)
		.def_readwrite("UnrealUnitsPerPixel", &UStatusMenuMapGFxObject::UnrealUnitsPerPixel)
		.def_readwrite("MapPlaceholderClip", &UStatusMenuMapGFxObject::MapPlaceholderClip, py::return_value_policy::reference)
		.def_readwrite("MaskClip", &UStatusMenuMapGFxObject::MaskClip, py::return_value_policy::reference)
		.def_readwrite("InfoBoxClip", &UStatusMenuMapGFxObject::InfoBoxClip, py::return_value_policy::reference)
		.def_readwrite("InfoBoxIconIndex", &UStatusMenuMapGFxObject::InfoBoxIconIndex)
		.def_readwrite("InfoBoxDistance", &UStatusMenuMapGFxObject::InfoBoxDistance)
		.def_readwrite("PanIncrement", &UStatusMenuMapGFxObject::PanIncrement)
		.def_readwrite("PanZoomFactor", &UStatusMenuMapGFxObject::PanZoomFactor)
		.def_readwrite("CursorPos", &UStatusMenuMapGFxObject::CursorPos, py::return_value_policy::reference)
		.def_readwrite("MapYawOffset", &UStatusMenuMapGFxObject::MapYawOffset)
		.def_readwrite("AndMore", &UStatusMenuMapGFxObject::AndMore, py::return_value_policy::reference)
		.def_readwrite("CustomObjectiveToggle", &UStatusMenuMapGFxObject::CustomObjectiveToggle, py::return_value_policy::reference)
		.def_readwrite("Title_Player", &UStatusMenuMapGFxObject::Title_Player, py::return_value_policy::reference)
		.def_readwrite("Title_CustomObjective", &UStatusMenuMapGFxObject::Title_CustomObjective, py::return_value_policy::reference)
		.def_readwrite("Title_MissionAvailable", &UStatusMenuMapGFxObject::Title_MissionAvailable, py::return_value_policy::reference)
		.def_readwrite("Title_MissionComplete", &UStatusMenuMapGFxObject::Title_MissionComplete, py::return_value_policy::reference)
		.def_readwrite("Title_Vehicle", &UStatusMenuMapGFxObject::Title_Vehicle, py::return_value_policy::reference)
		.def_readwrite("Title_Objective", &UStatusMenuMapGFxObject::Title_Objective, py::return_value_policy::reference)
		.def_readwrite("Title_AreaObjective", &UStatusMenuMapGFxObject::Title_AreaObjective, py::return_value_policy::reference)
		.def_readwrite("Title_InteractiveObject", &UStatusMenuMapGFxObject::Title_InteractiveObject, py::return_value_policy::reference)
		.def_readwrite("MissionTurnIn", &UStatusMenuMapGFxObject::MissionTurnIn, py::return_value_policy::reference)
		.def("ToggleFogOfWarBlob", &UStatusMenuMapGFxObject::ToggleFogOfWarBlob)
		.def("ToggleLegend", &UStatusMenuMapGFxObject::ToggleLegend)
		.def("eventSetPlayerInfo", &UStatusMenuMapGFxObject::eventSetPlayerInfo)
		.def("eventHidePlayerInfo", &UStatusMenuMapGFxObject::eventHidePlayerInfo)
		.def("SetMapScale", &UStatusMenuMapGFxObject::SetMapScale)
		.def("SetMapMovie", &UStatusMenuMapGFxObject::SetMapMovie)
		.def("FindLandmarks", &UStatusMenuMapGFxObject::FindLandmarks)
		.def("PanVert", &UStatusMenuMapGFxObject::PanVert)
		.def("PanHorz", &UStatusMenuMapGFxObject::PanHorz)
		.def("GetZoomScalingFactor", &UStatusMenuMapGFxObject::GetZoomScalingFactor)
		.def("ApplyAnalogScale", &UStatusMenuMapGFxObject::ApplyAnalogScale)
		.def("AnalogScale", &UStatusMenuMapGFxObject::AnalogScale)
		.def("GetDeltaTimeScalar", &UStatusMenuMapGFxObject::GetDeltaTimeScalar)
		.def("ResetMapObjects", &UStatusMenuMapGFxObject::ResetMapObjects)
		.def("OnClose", &UStatusMenuMapGFxObject::OnClose)
		.def("PostMapMovieLoad", &UStatusMenuMapGFxObject::PostMapMovieLoad)
		.def("Init", &UStatusMenuMapGFxObject::Init)
		.def("UpdateInfoBox", &UStatusMenuMapGFxObject::UpdateInfoBox)
		.def("QuickAccessInit", &UStatusMenuMapGFxObject::QuickAccessInit)
		.def("PlaceCustomObjective", &UStatusMenuMapGFxObject::PlaceCustomObjective)
		.def("RemoveCustomObjective", &UStatusMenuMapGFxObject::RemoveCustomObjective)
		.def("AddCustomObjective", &UStatusMenuMapGFxObject::AddCustomObjective)
		.def("GetCustomObjectiveIndex", &UStatusMenuMapGFxObject::GetCustomObjectiveIndex)
		.def("HasCustomObjective", &UStatusMenuMapGFxObject::HasCustomObjective)
		.def("GetUnrealMapScale", &UStatusMenuMapGFxObject::GetUnrealMapScale)
		.def("FindObjects", &UStatusMenuMapGFxObject::FindObjects)
		.def("FindPlayers", &UStatusMenuMapGFxObject::FindPlayers)
		.def("UpdateObjects", &UStatusMenuMapGFxObject::UpdateObjects)
		.def("ApplyFlash", &UStatusMenuMapGFxObject::ApplyFlash)
		.def("SetMapHeader", &UStatusMenuMapGFxObject::SetMapHeader)
		.def("InitMapFrameVars", &UStatusMenuMapGFxObject::InitMapFrameVars)
		;
	py::class_< UWillowGFxColiseumOverlayDefinition, UGFxMovieDefinition >(m, "UWillowGFxColiseumOverlayDefinition")
		.def_readwrite("CurrentRoundCounter", &UWillowGFxColiseumOverlayDefinition::CurrentRoundCounter, py::return_value_policy::reference)
		.def_readwrite("CurrentWaveCounter", &UWillowGFxColiseumOverlayDefinition::CurrentWaveCounter, py::return_value_policy::reference)
		.def_readwrite("MaxRoundCounter", &UWillowGFxColiseumOverlayDefinition::MaxRoundCounter, py::return_value_policy::reference)
		.def_readwrite("HealthModifier", &UWillowGFxColiseumOverlayDefinition::HealthModifier, py::return_value_policy::reference)
		.def_readwrite("DamageModifier", &UWillowGFxColiseumOverlayDefinition::DamageModifier, py::return_value_policy::reference)
		.def_readwrite("ShieldModifier", &UWillowGFxColiseumOverlayDefinition::ShieldModifier, py::return_value_policy::reference)
		.def_readwrite("WaveLabels", &UWillowGFxColiseumOverlayDefinition::WaveLabels, py::return_value_policy::reference)
		.def_readwrite("RefreshInterval", &UWillowGFxColiseumOverlayDefinition::RefreshInterval)
		.def_readwrite("AllRulesDefinition", &UWillowGFxColiseumOverlayDefinition::AllRulesDefinition, py::return_value_policy::reference)
		.def("EvaluateBalanceFormula", &UWillowGFxColiseumOverlayDefinition::EvaluateBalanceFormula, py::return_value_policy::reference)
		;
	py::class_< UWillowGFxMenuHelperSaveGame, UObject >(m, "UWillowGFxMenuHelperSaveGame")
		.def_property("bValidateOnly", [](UWillowGFxMenuHelperSaveGame &self){return self.bValidateOnly;}, [](UWillowGFxMenuHelperSaveGame &self, bool value){self.bValidateOnly = value ? 1 : 0;})
		.def_property("bIsEnumerating", [](UWillowGFxMenuHelperSaveGame &self){return self.bIsEnumerating;}, [](UWillowGFxMenuHelperSaveGame &self, bool value){self.bIsEnumerating = value ? 1 : 0;})
		.def_property("bShouldLoadDefaultProfileAfterDelete", [](UWillowGFxMenuHelperSaveGame &self){return self.bShouldLoadDefaultProfileAfterDelete;}, [](UWillowGFxMenuHelperSaveGame &self, bool value){self.bShouldLoadDefaultProfileAfterDelete = value ? 1 : 0;})
		.def_readwrite("LoadingListDlg", &UWillowGFxMenuHelperSaveGame::LoadingListDlg, py::return_value_policy::reference)
		.def_readwrite("DeletingDlg", &UWillowGFxMenuHelperSaveGame::DeletingDlg, py::return_value_policy::reference)
		.def_readwrite("ValidatingDlg", &UWillowGFxMenuHelperSaveGame::ValidatingDlg, py::return_value_policy::reference)
		.def_readwrite("SaveGames", &UWillowGFxMenuHelperSaveGame::SaveGames, py::return_value_policy::reference)
		.def_readwrite("PlayerIndex", &UWillowGFxMenuHelperSaveGame::PlayerIndex)
		.def_readwrite("MenuOwner", &UWillowGFxMenuHelperSaveGame::MenuOwner, py::return_value_policy::reference)
		.def_readwrite("CurrentSelection", &UWillowGFxMenuHelperSaveGame::CurrentSelection)
		.def_readwrite("__OnDeleted__Delegate", &UWillowGFxMenuHelperSaveGame::__OnDeleted__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSaveGamesUpdated__Delegate", &UWillowGFxMenuHelperSaveGame::__OnSaveGamesUpdated__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnDeleteStarted__Delegate", &UWillowGFxMenuHelperSaveGame::__OnDeleteStarted__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnDeleteEnded__Delegate", &UWillowGFxMenuHelperSaveGame::__OnDeleteEnded__Delegate, py::return_value_policy::reference)
		.def("CheckForPS3SaveList", &UWillowGFxMenuHelperSaveGame::CheckForPS3SaveList)
		.def("CheckForPS3LoadGame", &UWillowGFxMenuHelperSaveGame::CheckForPS3LoadGame)
		.def("BeginPS3LoadGame", &UWillowGFxMenuHelperSaveGame::BeginPS3LoadGame)
		.def("OnDeleteComplete", &UWillowGFxMenuHelperSaveGame::OnDeleteComplete)
		.def("GetSaveIdFromFilePath", &UWillowGFxMenuHelperSaveGame::GetSaveIdFromFilePath)
		.def("IntFromHex", &UWillowGFxMenuHelperSaveGame::IntFromHex)
		.def("ConfirmSaveDelete_Clicked", &UWillowGFxMenuHelperSaveGame::ConfirmSaveDelete_Clicked)
		.def("FinishSaveGameUpdate", &UWillowGFxMenuHelperSaveGame::FinishSaveGameUpdate)
		.def("SortResults", &UWillowGFxMenuHelperSaveGame::SortResults)
		.def("OnSaveGameListLoadComplete", &UWillowGFxMenuHelperSaveGame::OnSaveGameListLoadComplete)
		.def("GetSaveList", &UWillowGFxMenuHelperSaveGame::GetSaveList)
		.def("GetSaveListComplete", &UWillowGFxMenuHelperSaveGame::GetSaveListComplete)
		.def("OnSaveGameLoadComplete", &UWillowGFxMenuHelperSaveGame::OnSaveGameLoadComplete)
		.def("LoadSelectedCharacter", &UWillowGFxMenuHelperSaveGame::LoadSelectedCharacter)
		.def("OnValidationComplete", &UWillowGFxMenuHelperSaveGame::OnValidationComplete)
		.def("GetSaveGames", &UWillowGFxMenuHelperSaveGame::GetSaveGames, py::return_value_policy::reference)
		.def("OnLoadingStorageDeviceChanged", &UWillowGFxMenuHelperSaveGame::OnLoadingStorageDeviceChanged)
		.def("ShowBlockingLoadingDialog", &UWillowGFxMenuHelperSaveGame::ShowBlockingLoadingDialog)
		.def("BeginGetSaveList", &UWillowGFxMenuHelperSaveGame::BeginGetSaveList)
		.def("EmptyResults", &UWillowGFxMenuHelperSaveGame::EmptyResults)
		.def("EmptyContent", &UWillowGFxMenuHelperSaveGame::EmptyContent)
		.def("OnDeleteStorageDeviceChanged", &UWillowGFxMenuHelperSaveGame::OnDeleteStorageDeviceChanged)
		.def("Delete", &UWillowGFxMenuHelperSaveGame::Delete)
		.def("Activate", &UWillowGFxMenuHelperSaveGame::Activate)
		.def("AbortRead", &UWillowGFxMenuHelperSaveGame::AbortRead)
		.def("SetOwner", &UWillowGFxMenuHelperSaveGame::SetOwner)
		.def("Init", &UWillowGFxMenuHelperSaveGame::Init)
		.def("OnDeleteEnded", &UWillowGFxMenuHelperSaveGame::OnDeleteEnded)
		.def("OnDeleteStarted", &UWillowGFxMenuHelperSaveGame::OnDeleteStarted)
		.def("OnSaveGamesUpdated", &UWillowGFxMenuHelperSaveGame::OnSaveGamesUpdated)
		.def("OnDeleted", &UWillowGFxMenuHelperSaveGame::OnDeleted)
		;
	py::class_< UWillowGFxMovie, UGearboxGFxMovie >(m, "UWillowGFxMovie")
		.def_property("bAutoCloseHUD", [](UWillowGFxMovie &self){return self.bAutoCloseHUD;}, [](UWillowGFxMovie &self, bool value){self.bAutoCloseHUD = value ? 1 : 0;})
		.def_property("bAutoCloseAll", [](UWillowGFxMovie &self){return self.bAutoCloseAll;}, [](UWillowGFxMovie &self, bool value){self.bAutoCloseAll = value ? 1 : 0;})
		.def_readwrite("DefaultRTTSize_PC", &UWillowGFxMovie::DefaultRTTSize_PC)
		.def_readwrite("DefaultRTTSize_Console", &UWillowGFxMovie::DefaultRTTSize_Console)
		.def_readwrite("WPCOwner", &UWillowGFxMovie::WPCOwner, py::return_value_policy::reference)
		.def("GetQuadrantForControllerId", &UWillowGFxMovie::GetQuadrantForControllerId)
		.def("extConditionalBeginSway", &UWillowGFxMovie::extConditionalBeginSway)
		.def("GetRecommendedThumbnail", &UWillowGFxMovie::GetRecommendedThumbnail, py::return_value_policy::reference)
		.def("eventFreeGFxThumbnails", &UWillowGFxMovie::eventFreeGFxThumbnails)
		.def("eventFreeGFxThumbnail", &UWillowGFxMovie::eventFreeGFxThumbnail)
		.def("eventGetGFxThumbnail", &UWillowGFxMovie::eventGetGFxThumbnail, py::return_value_policy::reference)
		.def("ResolveMission", &UWillowGFxMovie::ResolveMission, py::return_value_policy::reference)
		.def("IsPresenceContextMatch", &UWillowGFxMovie::IsPresenceContextMatch)
		.def("GetInviteType", &UWillowGFxMovie::GetInviteType)
		.def("GetNetworkType", &UWillowGFxMovie::GetNetworkType)
		.def("GetCappedDisplayCurrencyAmount", &UWillowGFxMovie::GetCappedDisplayCurrencyAmount)
		.def("GFxColoredText", &UWillowGFxMovie::GFxColoredText, py::return_value_policy::reference)
		.def("ConditionalLoadGame", &UWillowGFxMovie::ConditionalLoadGame)
		.def("NotifyLoadGameStarted", &UWillowGFxMovie::NotifyLoadGameStarted)
		.def("DoDeviceSelection", &UWillowGFxMovie::DoDeviceSelection)
		.def("GetGameInterface", &UWillowGFxMovie::GetGameInterface, py::return_value_policy::reference)
		.def("ShowGamerCardUI", &UWillowGFxMovie::ShowGamerCardUI)
		.def("ShowLivePartyUI", &UWillowGFxMovie::ShowLivePartyUI)
		.def("ShowAchievementsUI", &UWillowGFxMovie::ShowAchievementsUI)
		.def("CheckControllerStatus", &UWillowGFxMovie::CheckControllerStatus)
		.def("FocusOn", &UWillowGFxMovie::FocusOn)
		.def("GetControllerId", &UWillowGFxMovie::GetControllerId)
		.def("GetInputPlayerIndex", &UWillowGFxMovie::GetInputPlayerIndex)
		.def("GetWillowOwner", &UWillowGFxMovie::GetWillowOwner, py::return_value_policy::reference)
		.def("Movie_IsPlaying", &UWillowGFxMovie::Movie_IsPlaying)
		.def("Movie_Stop", &UWillowGFxMovie::Movie_Stop)
		.def("Movie_Play", &UWillowGFxMovie::Movie_Play)
		.def("LocText", &UWillowGFxMovie::LocText)
		.def("GetFallbackLocSection", &UWillowGFxMovie::GetFallbackLocSection, py::return_value_policy::reference)
		.def("GetFallbackLocFile", &UWillowGFxMovie::GetFallbackLocFile, py::return_value_policy::reference)
		.def("LookupFallbackAkEventFromGlobalsDefinition", &UWillowGFxMovie::LookupFallbackAkEventFromGlobalsDefinition, py::return_value_policy::reference)
		.def("UpdateHUDVisibility", &UWillowGFxMovie::UpdateHUDVisibility)
		.def("eventOnClose", &UWillowGFxMovie::eventOnClose)
		.def("eventStart", &UWillowGFxMovie::eventStart)
		.def("CleanupDestroyedMovies", &UWillowGFxMovie::CleanupDestroyedMovies)
		.def("SingleArgInvokeSF", &UWillowGFxMovie::SingleArgInvokeSF)
		.def("GetRecommendedRTTSizesFor", [](UWillowGFxMovie &self , unsigned char TargetType) { int* pyTexWidth = (int*)malloc(sizeof(int)) ; int* pyTexHeight = (int*)malloc(sizeof(int)) ; int* pyCellWidth = (int*)malloc(sizeof(int)) ; int* pyCellHeight = (int*)malloc(sizeof(int)) ;   self.GetRecommendedRTTSizesFor(TargetType, pyTexWidth, pyTexHeight, pyCellWidth, pyCellHeight); return py::make_tuple(*pyTexWidth, *pyTexHeight, *pyCellWidth, *pyCellHeight); })
		.def("GetFriendCharacterClassAndLevel", [](UWillowGFxMovie &self , struct FOnlineFriend Friend, struct FString* CharacterClassPath) { int* pyLevel = (int*)malloc(sizeof(int)) ;   self.GetFriendCharacterClassAndLevel(Friend, CharacterClassPath, pyLevel); return py::make_tuple(*pyLevel); })
		.def("GetFriendLocation", [](UWillowGFxMovie &self , struct FOnlineFriend Friend, struct FString* Mission) { int* pyPlayThrough = (int*)malloc(sizeof(int)) ;   self.GetFriendLocation(Friend, pyPlayThrough, Mission); return py::make_tuple(*pyPlayThrough); })
		;
	py::class_< UGearboxAccountGFxMovie, UWillowGFxMovie >(m, "UGearboxAccountGFxMovie")
		.def_property("bIsFirstWelcome", [](UGearboxAccountGFxMovie &self){return self.bIsFirstWelcome;}, [](UGearboxAccountGFxMovie &self, bool value){self.bIsFirstWelcome = value ? 1 : 0;})
		.def_property("bCtrl", [](UGearboxAccountGFxMovie &self){return self.bCtrl;}, [](UGearboxAccountGFxMovie &self, bool value){self.bCtrl = value ? 1 : 0;})
		.def_property("bHasSeenOffers", [](UGearboxAccountGFxMovie &self){return self.bHasSeenOffers;}, [](UGearboxAccountGFxMovie &self, bool value){self.bHasSeenOffers = value ? 1 : 0;})
		.def_readwrite("GearboxAccountObj", &UGearboxAccountGFxMovie::GearboxAccountObj, py::return_value_policy::reference)
		.def_readwrite("ScreenStack", &UGearboxAccountGFxMovie::ScreenStack, py::return_value_policy::reference)
		.def_readwrite("CurrentAgeString", &UGearboxAccountGFxMovie::CurrentAgeString, py::return_value_policy::reference)
		.def_readwrite("authenticationAttempts", &UGearboxAccountGFxMovie::authenticationAttempts)
		.def_readwrite("SparkInteractionWaitInSeconds", &UGearboxAccountGFxMovie::SparkInteractionWaitInSeconds)
		.def_readwrite("NextSparkInteractionTime", &UGearboxAccountGFxMovie::NextSparkInteractionTime)
		.def_readwrite("SparkTicker", &UGearboxAccountGFxMovie::SparkTicker, py::return_value_policy::reference)
		.def_readwrite("OfferCount", &UGearboxAccountGFxMovie::OfferCount)
		.def_readwrite("DefaultInitTime", &UGearboxAccountGFxMovie::DefaultInitTime)
		.def_readwrite("MinInitTime", &UGearboxAccountGFxMovie::MinInitTime)
		.def_readwrite("MaxInitTime", &UGearboxAccountGFxMovie::MaxInitTime)
		.def_readwrite("InitTicker", &UGearboxAccountGFxMovie::InitTicker, py::return_value_policy::reference)
		.def_readwrite("__OnConsoleInputComplete__Delegate", &UGearboxAccountGFxMovie::__OnConsoleInputComplete__Delegate, py::return_value_policy::reference)
		.def("IsSparkTimerActive", &UGearboxAccountGFxMovie::IsSparkTimerActive)
		.def("ClearSparkTimer", &UGearboxAccountGFxMovie::ClearSparkTimer)
		.def("SetSparkTimer", &UGearboxAccountGFxMovie::SetSparkTimer)
		.def("CanRunSparkInteraction", &UGearboxAccountGFxMovie::CanRunSparkInteraction)
		.def("GetShiftMenuTextString", &UGearboxAccountGFxMovie::GetShiftMenuTextString, py::return_value_policy::reference)
		.def("DelayNextSparkInteraction", &UGearboxAccountGFxMovie::DelayNextSparkInteraction)
		.def("UpdateLegal", &UGearboxAccountGFxMovie::UpdateLegal)
		.def("extRequestCurrentOffers", &UGearboxAccountGFxMovie::extRequestCurrentOffers)
		.def("extRequestConsoleCodeEntry", &UGearboxAccountGFxMovie::extRequestConsoleCodeEntry)
		.def("extRequestConfigureSignUpAdditionalTextMessage", &UGearboxAccountGFxMovie::extRequestConfigureSignUpAdditionalTextMessage)
		.def("extRequestConfigureAdditionalBenefitsMessage", &UGearboxAccountGFxMovie::extRequestConfigureAdditionalBenefitsMessage)
		.def("extGearboxAccountOnLoad", &UGearboxAccountGFxMovie::extGearboxAccountOnLoad)
		.def("TryPasteKeyCode", &UGearboxAccountGFxMovie::TryPasteKeyCode)
		.def("PopulateOffers", &UGearboxAccountGFxMovie::PopulateOffers)
		.def("OnEntitlementsUpdated", &UGearboxAccountGFxMovie::OnEntitlementsUpdated)
		.def("PerformRedeemCode", &UGearboxAccountGFxMovie::PerformRedeemCode)
		.def("OnRedeemCodeButtonClick", &UGearboxAccountGFxMovie::OnRedeemCodeButtonClick)
		.def("OnAgeGateConfirmAgeButtonClick", &UGearboxAccountGFxMovie::OnAgeGateConfirmAgeButtonClick)
		.def("PerformSignUp", &UGearboxAccountGFxMovie::PerformSignUp)
		.def("OnSignUpScreenSignUpButtonClick", &UGearboxAccountGFxMovie::OnSignUpScreenSignUpButtonClick)
		.def("OnEULAScreenAcceptButtonClick", &UGearboxAccountGFxMovie::OnEULAScreenAcceptButtonClick)
		.def("PerformResetPassword", &UGearboxAccountGFxMovie::PerformResetPassword)
		.def("OnResetPasswordScreenResetPasswordButtonClick", &UGearboxAccountGFxMovie::OnResetPasswordScreenResetPasswordButtonClick)
		.def("OnSignInScreenResetPasswordButtonClick", &UGearboxAccountGFxMovie::OnSignInScreenResetPasswordButtonClick)
		.def("PerformSignIn", &UGearboxAccountGFxMovie::PerformSignIn)
		.def("OnSignInScreenSignInButtonClick", &UGearboxAccountGFxMovie::OnSignInScreenSignInButtonClick)
		.def("OnGetUserAgeGroup", &UGearboxAccountGFxMovie::OnGetUserAgeGroup)
		.def("OnWelcomeScreenSignUpButtonClick", &UGearboxAccountGFxMovie::OnWelcomeScreenSignUpButtonClick)
		.def("OnWelcomeScreenSignInButtonClick", &UGearboxAccountGFxMovie::OnWelcomeScreenSignInButtonClick)
		.def("OnConfirmPasswordButtonClick", &UGearboxAccountGFxMovie::OnConfirmPasswordButtonClick)
		.def("OnPasswordButtonClick", &UGearboxAccountGFxMovie::OnPasswordButtonClick)
		.def("OnEmailButtonClick", &UGearboxAccountGFxMovie::OnEmailButtonClick)
		.def("OnBackButtonClick", &UGearboxAccountGFxMovie::OnBackButtonClick)
		.def("IsConsole", &UGearboxAccountGFxMovie::IsConsole)
		.def("IsSteamworksInitialized", &UGearboxAccountGFxMovie::IsSteamworksInitialized)
		.def("IsSignedIn", &UGearboxAccountGFxMovie::IsSignedIn)
		.def("IsAuthenticated", &UGearboxAccountGFxMovie::IsAuthenticated)
		.def("IsFirstWelcome", &UGearboxAccountGFxMovie::IsFirstWelcome)
		.def("AttachFunctions", &UGearboxAccountGFxMovie::AttachFunctions)
		.def("OnEmailOrPasswordEntryComplete", &UGearboxAccountGFxMovie::OnEmailOrPasswordEntryComplete)
		.def("OnRedeemCodeEntryComplete", &UGearboxAccountGFxMovie::OnRedeemCodeEntryComplete)
		.def("OnAgeYearEntryComplete", &UGearboxAccountGFxMovie::OnAgeYearEntryComplete)
		.def("OnAgeDayEntryComplete", &UGearboxAccountGFxMovie::OnAgeDayEntryComplete)
		.def("OnAgeMonthEntryComplete", &UGearboxAccountGFxMovie::OnAgeMonthEntryComplete)
		.def("OnConsoleCodeEntryComplete", &UGearboxAccountGFxMovie::OnConsoleCodeEntryComplete)
		.def("OnConfirmPasswordInputComplete", &UGearboxAccountGFxMovie::OnConfirmPasswordInputComplete)
		.def("OnPasswordInputComplete", &UGearboxAccountGFxMovie::OnPasswordInputComplete)
		.def("OnEmailInputComplete", &UGearboxAccountGFxMovie::OnEmailInputComplete)
		.def("ConsolePlayerInput", &UGearboxAccountGFxMovie::ConsolePlayerInput)
		.def("ValidateConfirmPassword", &UGearboxAccountGFxMovie::ValidateConfirmPassword)
		.def("ValidatePassword", &UGearboxAccountGFxMovie::ValidatePassword)
		.def("ValidateEmail", &UGearboxAccountGFxMovie::ValidateEmail)
		.def("ValidateAge", &UGearboxAccountGFxMovie::ValidateAge)
		.def("UpdateTooltips", &UGearboxAccountGFxMovie::UpdateTooltips)
		.def("UpdateSignInStatus", &UGearboxAccountGFxMovie::UpdateSignInStatus)
		.def("UpdatePlayerName", &UGearboxAccountGFxMovie::UpdatePlayerName)
		.def("ReturnToWelcomeScreen", &UGearboxAccountGFxMovie::ReturnToWelcomeScreen)
		.def("PopScreen", &UGearboxAccountGFxMovie::PopScreen)
		.def("PushScreen", &UGearboxAccountGFxMovie::PushScreen)
		.def("HandleBack", &UGearboxAccountGFxMovie::HandleBack)
		.def("OnCodeRedemptionSuccessClicked", &UGearboxAccountGFxMovie::OnCodeRedemptionSuccessClicked)
		.def("HandleCodeRedeemed", &UGearboxAccountGFxMovie::HandleCodeRedeemed)
		.def("HandleResetPassword", &UGearboxAccountGFxMovie::HandleResetPassword)
		.def("HandleAccountSignUp", &UGearboxAccountGFxMovie::HandleAccountSignUp)
		.def("HandleAgeGate", &UGearboxAccountGFxMovie::HandleAgeGate)
		.def("HandleAccountSignIn", &UGearboxAccountGFxMovie::HandleAccountSignIn)
		.def("HandleInitializedTimeoutClicked", &UGearboxAccountGFxMovie::HandleInitializedTimeoutClicked)
		.def("HandleInitializedTimeout", &UGearboxAccountGFxMovie::HandleInitializedTimeout)
		.def("HandleInitialized", &UGearboxAccountGFxMovie::HandleInitialized)
		.def("eventOnClose", &UGearboxAccountGFxMovie::eventOnClose)
		.def("extConfigureForViewOffers", &UGearboxAccountGFxMovie::extConfigureForViewOffers)
		.def("ResetSparkAndHideMovie", &UGearboxAccountGFxMovie::ResetSparkAndHideMovie)
		.def("HandleInputKey", &UGearboxAccountGFxMovie::HandleInputKey)
		.def("OnConsoleInputComplete", &UGearboxAccountGFxMovie::OnConsoleInputComplete)
		.def("GetRegion", &UGearboxAccountGFxMovie::GetRegion, py::return_value_policy::reference)
		.def("IsKeyValid", &UGearboxAccountGFxMovie::IsKeyValid)
		.def("GetCurrentDate", [](UGearboxAccountGFxMovie &self ) { int* pyMonth = (int*)malloc(sizeof(int)) ; int* pyDay = (int*)malloc(sizeof(int)) ; int* pyYear = (int*)malloc(sizeof(int)) ;   self.GetCurrentDate(pyMonth, pyDay, pyYear); return py::make_tuple(*pyMonth, *pyDay, *pyYear); })
		;
	py::class_< UHashDisplayGFxMovie, UWillowGFxMovie >(m, "UHashDisplayGFxMovie")
		.def_readwrite("WInvMgr", &UHashDisplayGFxMovie::WInvMgr, py::return_value_policy::reference)
		.def_readwrite("HashDisplayDef", &UHashDisplayGFxMovie::HashDisplayDef, py::return_value_policy::reference)
		.def_readwrite("LeftSideTextList", &UHashDisplayGFxMovie::LeftSideTextList, py::return_value_policy::reference)
		.def_readwrite("RTM", &UHashDisplayGFxMovie::RTM, py::return_value_policy::reference)
		.def_readwrite("Card1Tex", &UHashDisplayGFxMovie::Card1Tex, py::return_value_policy::reference)
		.def_readwrite("Card1Mesh", &UHashDisplayGFxMovie::Card1Mesh, py::return_value_policy::reference)
		.def_readwrite("SortConfigurations", &UHashDisplayGFxMovie::SortConfigurations, py::return_value_policy::reference)
		.def_readwrite("LeftSideSortConfigIndex", &UHashDisplayGFxMovie::LeftSideSortConfigIndex)
		.def_readwrite("UsedInvTypes", &UHashDisplayGFxMovie::UsedInvTypes, py::return_value_policy::reference)
		.def_readwrite("UsedManufacturers", &UHashDisplayGFxMovie::UsedManufacturers, py::return_value_policy::reference)
		.def_readwrite("UsedWeaponTypes", &UHashDisplayGFxMovie::UsedWeaponTypes, py::return_value_policy::reference)
		.def_readwrite("EquippedLabels", &UHashDisplayGFxMovie::EquippedLabels, py::return_value_policy::reference)
		.def_readwrite("EmptySlotText", &UHashDisplayGFxMovie::EmptySlotText, py::return_value_policy::reference)
		.def_readwrite("__OnStatefulInputKey__Delegate", &UHashDisplayGFxMovie::__OnStatefulInputKey__Delegate, py::return_value_policy::reference)
		.def("ConfigureForPlayer", &UHashDisplayGFxMovie::ConfigureForPlayer)
		.def("FadePopup_AS", &UHashDisplayGFxMovie::FadePopup_AS)
		.def("ShowPopup_AS", &UHashDisplayGFxMovie::ShowPopup_AS)
		.def("ShowPopup", &UHashDisplayGFxMovie::ShowPopup)
		.def("SetAmmoCount", &UHashDisplayGFxMovie::SetAmmoCount)
		.def("SetAllAmmoCounts", &UHashDisplayGFxMovie::SetAllAmmoCounts)
		.def("ToggleSort", &UHashDisplayGFxMovie::ToggleSort)
		.def("UpdateCardPanelWithCurrentActiveListEntry", &UHashDisplayGFxMovie::UpdateCardPanelWithCurrentActiveListEntry)
		.def("UpdateCardPanel", &UHashDisplayGFxMovie::UpdateCardPanel)
		.def("GetHashDisplayStringForItem", &UHashDisplayGFxMovie::GetHashDisplayStringForItem, py::return_value_policy::reference)
		.def("GetHashDisplayStringForWeapon", &UHashDisplayGFxMovie::GetHashDisplayStringForWeapon, py::return_value_policy::reference)
		.def("MoveHighlightBar", &UHashDisplayGFxMovie::MoveHighlightBar)
		.def("SortContainer", &UHashDisplayGFxMovie::SortContainer)
		.def("SetupContainerWithData", &UHashDisplayGFxMovie::SetupContainerWithData)
		.def("StartClosing", &UHashDisplayGFxMovie::StartClosing)
		.def("extUpdateLeftListSize", &UHashDisplayGFxMovie::extUpdateLeftListSize)
		.def("extPopupFading", &UHashDisplayGFxMovie::extPopupFading)
		.def("SetCredits_Wrapper", &UHashDisplayGFxMovie::SetCredits_Wrapper)
		.def("SetCredits", &UHashDisplayGFxMovie::SetCredits)
		.def("extSetupScreen", &UHashDisplayGFxMovie::extSetupScreen)
		.def("HandleMove", &UHashDisplayGFxMovie::HandleMove)
		.def("PopupStateInputKey", &UHashDisplayGFxMovie::PopupStateInputKey)
		.def("NormalStateInputKey", &UHashDisplayGFxMovie::NormalStateInputKey)
		.def("MainInputKey", &UHashDisplayGFxMovie::MainInputKey)
		.def("eventOnClose", &UHashDisplayGFxMovie::eventOnClose)
		.def("eventStart", &UHashDisplayGFxMovie::eventStart)
		.def("OnStatefulInputKey", &UHashDisplayGFxMovie::OnStatefulInputKey)
		;
	py::class_< UItemPickupGFxMovie, UWillowGFxMovie >(m, "UItemPickupGFxMovie")
		.def_property("bReadyToDisplay", [](UItemPickupGFxMovie &self){return self.bReadyToDisplay;}, [](UItemPickupGFxMovie &self, bool value){self.bReadyToDisplay = value ? 1 : 0;})
		.def_property("bShouldGetCompareAgainstThing", [](UItemPickupGFxMovie &self){return self.bShouldGetCompareAgainstThing;}, [](UItemPickupGFxMovie &self, bool value){self.bShouldGetCompareAgainstThing = value ? 1 : 0;})
		.def_readwrite("MatSrc", &UItemPickupGFxMovie::MatSrc, py::return_value_policy::reference)
		.def_readwrite("Particle", &UItemPickupGFxMovie::Particle, py::return_value_policy::reference)
		.def_readwrite("ParticleMatParamName", &UItemPickupGFxMovie::ParticleMatParamName, py::return_value_policy::reference)
		.def_readwrite("MatTexParamName", &UItemPickupGFxMovie::MatTexParamName, py::return_value_policy::reference)
		.def_readwrite("TallItemZOffsetPercentage", &UItemPickupGFxMovie::TallItemZOffsetPercentage)
		.def_readwrite("MyHUDOwner", &UItemPickupGFxMovie::MyHUDOwner, py::return_value_policy::reference)
		.def_readwrite("MyPSC", &UItemPickupGFxMovie::MyPSC, py::return_value_policy::reference)
		.def_readwrite("MyMati", &UItemPickupGFxMovie::MyMati, py::return_value_policy::reference)
		.def_readwrite("MyRenderTexture", &UItemPickupGFxMovie::MyRenderTexture, py::return_value_policy::reference)
		.def_readwrite("PickupTex", &UItemPickupGFxMovie::PickupTex, py::return_value_policy::reference)
		.def_readwrite("PickupMesh", &UItemPickupGFxMovie::PickupMesh, py::return_value_policy::reference)
		.def_readwrite("CompareAgainstThing", &UItemPickupGFxMovie::CompareAgainstThing, py::return_value_policy::reference)
		.def_readwrite("SplitIndex", &UItemPickupGFxMovie::SplitIndex)
		.def_readwrite("WeapTexName", &UItemPickupGFxMovie::WeapTexName, py::return_value_policy::reference)
		.def_readwrite("ItemCardHeight", &UItemPickupGFxMovie::ItemCardHeight)
		.def_readwrite("__OnItemCardHeightCalculatedHandler__Delegate", &UItemPickupGFxMovie::__OnItemCardHeightCalculatedHandler__Delegate, py::return_value_policy::reference)
		.def("InitFromDefinition", &UItemPickupGFxMovie::InitFromDefinition)
		.def("EnableThumbnail", &UItemPickupGFxMovie::EnableThumbnail)
		.def("extOnItemCardHeightCalculated", &UItemPickupGFxMovie::extOnItemCardHeightCalculated)
		.def("extReadyForInventoryInfo", &UItemPickupGFxMovie::extReadyForInventoryInfo)
		.def("UpdateCompareAgainstThing", &UItemPickupGFxMovie::UpdateCompareAgainstThing)
		.def("GetCompareAgainstThing", &UItemPickupGFxMovie::GetCompareAgainstThing, py::return_value_policy::reference)
		.def("Show", &UItemPickupGFxMovie::Show)
		.def("InitializeFrom", &UItemPickupGFxMovie::InitializeFrom)
		.def("CreateBackupRenderTarget", &UItemPickupGFxMovie::CreateBackupRenderTarget)
		.def("SetOnItemCardHeightCalculatedHandler", &UItemPickupGFxMovie::SetOnItemCardHeightCalculatedHandler)
		.def("eventOnClose", &UItemPickupGFxMovie::eventOnClose)
		.def("eventStart", &UItemPickupGFxMovie::eventStart)
		.def("OnItemCardHeightCalculatedHandler", &UItemPickupGFxMovie::OnItemCardHeightCalculatedHandler)
		;
	py::class_< UOnlineMessageGFxMovie, UWillowGFxMovie >(m, "UOnlineMessageGFxMovie")
		.def_readwrite("BlockingMessageClip", &UOnlineMessageGFxMovie::BlockingMessageClip, py::return_value_policy::reference)
		.def_readwrite("NonBlockingMessageClip", &UOnlineMessageGFxMovie::NonBlockingMessageClip, py::return_value_policy::reference)
		.def_readwrite("BlockingSubtitle", &UOnlineMessageGFxMovie::BlockingSubtitle, py::return_value_policy::reference)
		.def("extOnHideBegin", &UOnlineMessageGFxMovie::extOnHideBegin)
		.def("extOnlineMessageOnLoad", &UOnlineMessageGFxMovie::extOnlineMessageOnLoad)
		.def("UpdateAspectRatio", &UOnlineMessageGFxMovie::UpdateAspectRatio)
		.def("HACK_DontActuallyBlock", &UOnlineMessageGFxMovie::HACK_DontActuallyBlock)
		.def("SetBlocking", &UOnlineMessageGFxMovie::SetBlocking)
		.def("IsBlocking", &UOnlineMessageGFxMovie::IsBlocking)
		.def("DisplayMessageInternal", &UOnlineMessageGFxMovie::DisplayMessageInternal)
		.def("HideBlocking", &UOnlineMessageGFxMovie::HideBlocking)
		.def("Hide", &UOnlineMessageGFxMovie::Hide)
		.def("AppendSubtitle", &UOnlineMessageGFxMovie::AppendSubtitle)
		.def("DisplayMessageAndSubtitle", &UOnlineMessageGFxMovie::DisplayMessageAndSubtitle)
		.def("DisplayMessage", &UOnlineMessageGFxMovie::DisplayMessage)
		.def("DisplayBlockingMessage", &UOnlineMessageGFxMovie::DisplayBlockingMessage)
		.def("eventOnClose", &UOnlineMessageGFxMovie::eventOnClose)
		.def("eventStart", &UOnlineMessageGFxMovie::eventStart)
		;
	py::class_< UTextChatGFxMovie, UWillowGFxMovie >(m, "UTextChatGFxMovie")
		.def_readwrite("ChatObj", &UTextChatGFxMovie::ChatObj, py::return_value_policy::reference)
		.def("extTextChatOnLoad", &UTextChatGFxMovie::extTextChatOnLoad)
		.def("AddChatMessageInternal", &UTextChatGFxMovie::AddChatMessageInternal)
		.def("HandleTextChatInput", &UTextChatGFxMovie::HandleTextChatInput)
		.def("GetChatObjText", &UTextChatGFxMovie::GetChatObjText, py::return_value_policy::reference)
		.def("StopTextChatInternal", &UTextChatGFxMovie::StopTextChatInternal)
		.def("StartTextChatInternal", &UTextChatGFxMovie::StartTextChatInternal)
		.def("GetTimestampString", &UTextChatGFxMovie::GetTimestampString, py::return_value_policy::reference)
		.def("AddChatMessage", &UTextChatGFxMovie::AddChatMessage)
		.def("StartTextChat", &UTextChatGFxMovie::StartTextChat)
		.def("eventOnClose", &UTextChatGFxMovie::eventOnClose)
		.def("eventStart", &UTextChatGFxMovie::eventStart)
		;
	py::class_< UWillowGFxDialogBox, UWillowGFxMovie >(m, "UWillowGFxDialogBox")
		.def_property("bAutoLocEnabled", [](UWillowGFxDialogBox &self){return self.bAutoLocEnabled;}, [](UWillowGFxDialogBox &self, bool value){self.bAutoLocEnabled = value ? 1 : 0;})
		.def_property("bHasTips", [](UWillowGFxDialogBox &self){return self.bHasTips;}, [](UWillowGFxDialogBox &self, bool value){self.bHasTips = value ? 1 : 0;})
		.def_property("bAllowNonOwnerInput", [](UWillowGFxDialogBox &self){return self.bAllowNonOwnerInput;}, [](UWillowGFxDialogBox &self, bool value){self.bAllowNonOwnerInput = value ? 1 : 0;})
		.def_property("bNoCancel", [](UWillowGFxDialogBox &self){return self.bNoCancel;}, [](UWillowGFxDialogBox &self, bool value){self.bNoCancel = value ? 1 : 0;})
		.def_readwrite("Layouts", &UWillowGFxDialogBox::Layouts, py::return_value_policy::reference)
		.def_readwrite("Buttons", &UWillowGFxDialogBox::Buttons, py::return_value_policy::reference)
		.def_readwrite("DlgCaptionMarkup", &UWillowGFxDialogBox::DlgCaptionMarkup, py::return_value_policy::reference)
		.def_readwrite("DlgTextMarkup", &UWillowGFxDialogBox::DlgTextMarkup, py::return_value_policy::reference)
		.def_readwrite("CancelButtonTag", &UWillowGFxDialogBox::CancelButtonTag, py::return_value_policy::reference)
		.def_readwrite("DialogResult", &UWillowGFxDialogBox::DialogResult, py::return_value_policy::reference)
		.def_readwrite("CurrentSelection", &UWillowGFxDialogBox::CurrentSelection)
		.def_readwrite("AutoLocFile", &UWillowGFxDialogBox::AutoLocFile, py::return_value_policy::reference)
		.def_readwrite("AutoLocSection", &UWillowGFxDialogBox::AutoLocSection, py::return_value_policy::reference)
		.def_readwrite("DefaultTooltips", &UWillowGFxDialogBox::DefaultTooltips, py::return_value_policy::reference)
		.def_readwrite("__OnStorageDeviceChanged__Delegate", &UWillowGFxDialogBox::__OnStorageDeviceChanged__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnButtonClicked__Delegate", &UWillowGFxDialogBox::__OnButtonClicked__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnHandleInputKey__Delegate", &UWillowGFxDialogBox::__OnHandleInputKey__Delegate, py::return_value_policy::reference)
		.def("SetViewScaleMode", &UWillowGFxDialogBox::SetViewScaleMode)
		.def("GetFallbackLocSection", &UWillowGFxDialogBox::GetFallbackLocSection, py::return_value_policy::reference)
		.def("GetFallbackLocFile", &UWillowGFxDialogBox::GetFallbackLocFile, py::return_value_policy::reference)
		.def("SetButtonCaption", &UWillowGFxDialogBox::SetButtonCaption)
		.def("SetQuadrant", &UWillowGFxDialogBox::SetQuadrant)
		.def("SetAllowNonOwnerInput", &UWillowGFxDialogBox::SetAllowNonOwnerInput)
		.def("StorageDeviceChanged", &UWillowGFxDialogBox::StorageDeviceChanged)
		.def("SetTooltips", &UWillowGFxDialogBox::SetTooltips)
		.def("ShowTooltips", &UWillowGFxDialogBox::ShowTooltips)
		.def("DisplayBlockingBox", &UWillowGFxDialogBox::DisplayBlockingBox, py::return_value_policy::reference)
		.def("DisplayCustomYesNoBox", &UWillowGFxDialogBox::DisplayCustomYesNoBox)
		.def("DisplayYesNoBox", &UWillowGFxDialogBox::DisplayYesNoBox)
		.def("DisplayOkBoxTextFromSpark", &UWillowGFxDialogBox::DisplayOkBoxTextFromSpark, py::return_value_policy::reference)
		.def("DisplayOkBox", &UWillowGFxDialogBox::DisplayOkBox, py::return_value_policy::reference)
		.def("ApplySelection", &UWillowGFxDialogBox::ApplySelection)
		.def("OnWidgetClicked", &UWillowGFxDialogBox::OnWidgetClicked)
		.def("OnWidgetFocused", &UWillowGFxDialogBox::OnWidgetFocused)
		.def("OnWidget4Clicked", &UWillowGFxDialogBox::OnWidget4Clicked)
		.def("OnWidget3Clicked", &UWillowGFxDialogBox::OnWidget3Clicked)
		.def("OnWidget2Clicked", &UWillowGFxDialogBox::OnWidget2Clicked)
		.def("OnWidget1Clicked", &UWillowGFxDialogBox::OnWidget1Clicked)
		.def("OnWidget0Clicked", &UWillowGFxDialogBox::OnWidget0Clicked)
		.def("OnWidget4Focused", &UWillowGFxDialogBox::OnWidget4Focused)
		.def("OnWidget3Focused", &UWillowGFxDialogBox::OnWidget3Focused)
		.def("OnWidget2Focused", &UWillowGFxDialogBox::OnWidget2Focused)
		.def("OnWidget1Focused", &UWillowGFxDialogBox::OnWidget1Focused)
		.def("OnWidget0Focused", &UWillowGFxDialogBox::OnWidget0Focused)
		.def("AddEventListenersForWidget", &UWillowGFxDialogBox::AddEventListenersForWidget)
		.def("ApplyFlashButtons", &UWillowGFxDialogBox::ApplyFlashButtons)
		.def("GetWidgetIndex", &UWillowGFxDialogBox::GetWidgetIndex)
		.def("GetLogicalIndex", &UWillowGFxDialogBox::GetLogicalIndex)
		.def("ApplyFlashSelection", &UWillowGFxDialogBox::ApplyFlashSelection)
		.def("ApplyFlashText", &UWillowGFxDialogBox::ApplyFlashText)
		.def("ApplyLayout", &UWillowGFxDialogBox::ApplyLayout)
		.def("SetDefaultButton", &UWillowGFxDialogBox::SetDefaultButton)
		.def("ReplaceDialogCaption", &UWillowGFxDialogBox::ReplaceDialogCaption)
		.def("ReplaceDialogText", &UWillowGFxDialogBox::ReplaceDialogText)
		.def("SetLayout", &UWillowGFxDialogBox::SetLayout)
		.def("SetButtonTip", &UWillowGFxDialogBox::SetButtonTip)
		.def("SetButtonCallback", &UWillowGFxDialogBox::SetButtonCallback)
		.def("AutoAppendButton", &UWillowGFxDialogBox::AutoAppendButton)
		.def("AutoLoc", &UWillowGFxDialogBox::AutoLoc)
		.def("AutoLocEnablePrompt", &UWillowGFxDialogBox::AutoLocEnablePrompt)
		.def("AutoLocEnableCaption", &UWillowGFxDialogBox::AutoLocEnableCaption)
		.def("AutoLocEnable", &UWillowGFxDialogBox::AutoLocEnable)
		.def("AppendButton", &UWillowGFxDialogBox::AppendButton)
		.def("ClearButtons", &UWillowGFxDialogBox::ClearButtons)
		.def("SetText", &UWillowGFxDialogBox::SetText)
		.def("Accepted", &UWillowGFxDialogBox::Accepted)
		.def("Cancelled", &UWillowGFxDialogBox::Cancelled)
		.def("HandleInputKey", &UWillowGFxDialogBox::HandleInputKey)
		.def("eventOnClose", &UWillowGFxDialogBox::eventOnClose)
		.def("eventStart", &UWillowGFxDialogBox::eventStart)
		.def("OnHandleInputKey", &UWillowGFxDialogBox::OnHandleInputKey)
		.def("OnButtonClicked", &UWillowGFxDialogBox::OnButtonClicked)
		.def("OnStorageDeviceChanged", &UWillowGFxDialogBox::OnStorageDeviceChanged)
		;
	py::class_< UWillowGFxMovie3D, UWillowGFxMovie >(m, "UWillowGFxMovie3D")
		.def_property("bFullscreenMovie", [](UWillowGFxMovie3D &self){return self.bFullscreenMovie;}, [](UWillowGFxMovie3D &self, bool value){self.bFullscreenMovie = value ? 1 : 0;})
		.def_property("bApplyHUDScale", [](UWillowGFxMovie3D &self){return self.bApplyHUDScale;}, [](UWillowGFxMovie3D &self, bool value){self.bApplyHUDScale = value ? 1 : 0;})
		.def_property("bNoSplitscreenPanning", [](UWillowGFxMovie3D &self){return self.bNoSplitscreenPanning;}, [](UWillowGFxMovie3D &self, bool value){self.bNoSplitscreenPanning = value ? 1 : 0;})
		.def_property("bNoSplitscreenScaling", [](UWillowGFxMovie3D &self){return self.bNoSplitscreenScaling;}, [](UWillowGFxMovie3D &self, bool value){self.bNoSplitscreenScaling = value ? 1 : 0;})
		.def_property("bNeedsMatricesUpdated", [](UWillowGFxMovie3D &self){return self.bNeedsMatricesUpdated;}, [](UWillowGFxMovie3D &self, bool value){self.bNeedsMatricesUpdated = value ? 1 : 0;})
		.def_property("bDidHorizontalSplitscreenPanningLastTick", [](UWillowGFxMovie3D &self){return self.bDidHorizontalSplitscreenPanningLastTick;}, [](UWillowGFxMovie3D &self, bool value){self.bDidHorizontalSplitscreenPanningLastTick = value ? 1 : 0;})
		.def_property("bAlwaysHideInCinematicMode", [](UWillowGFxMovie3D &self){return self.bAlwaysHideInCinematicMode;}, [](UWillowGFxMovie3D &self, bool value){self.bAlwaysHideInCinematicMode = value ? 1 : 0;})
		.def_readwrite("My3DDefinition", &UWillowGFxMovie3D::My3DDefinition, py::return_value_policy::reference)
		.def_readwrite("SplitRegionOrg", &UWillowGFxMovie3D::SplitRegionOrg, py::return_value_policy::reference)
		.def_readwrite("SplitRegionExt", &UWillowGFxMovie3D::SplitRegionExt, py::return_value_policy::reference)
		.def_readwrite("ChainedObjectMap", &UWillowGFxMovie3D::ChainedObjectMap, py::return_value_policy::reference)
		.def_readwrite("RedundantClipArray", &UWillowGFxMovie3D::RedundantClipArray, py::return_value_policy::reference)
		.def_readwrite("FocusObject", &UWillowGFxMovie3D::FocusObject, py::return_value_policy::reference)
		.def_readwrite("FocusOffset", &UWillowGFxMovie3D::FocusOffset, py::return_value_policy::reference)
		.def_readwrite("InterpFocusOffset", &UWillowGFxMovie3D::InterpFocusOffset, py::return_value_policy::reference)
		.def_readwrite("SlidingObjects", &UWillowGFxMovie3D::SlidingObjects, py::return_value_policy::reference)
		.def_readwrite("SlidingObjectMetrics", &UWillowGFxMovie3D::SlidingObjectMetrics, py::return_value_policy::reference)
		.def_readwrite("SlidingObjectOrigins", &UWillowGFxMovie3D::SlidingObjectOrigins, py::return_value_policy::reference)
		.def_readwrite("CachedViewMat", &UWillowGFxMovie3D::CachedViewMat, py::return_value_policy::reference)
		.def_readwrite("CachedProjMat", &UWillowGFxMovie3D::CachedProjMat, py::return_value_policy::reference)
		.def("extGenericButtonClicked", &UWillowGFxMovie3D::extGenericButtonClicked)
		.def("InitForConsole", &UWillowGFxMovie3D::InitForConsole)
		.def("InitForPC", &UWillowGFxMovie3D::InitForPC)
		.def("InitForPlatform", &UWillowGFxMovie3D::InitForPlatform)
		.def("eventFilterAxisInput", &UWillowGFxMovie3D::eventFilterAxisInput)
		.def("eventFilterButtonInput", &UWillowGFxMovie3D::eventFilterButtonInput)
		.def("GetDynamicFOVScalar", &UWillowGFxMovie3D::GetDynamicFOVScalar)
		.def("GetHUDElemScale", &UWillowGFxMovie3D::GetHUDElemScale)
		.def("GetHUDScale", &UWillowGFxMovie3D::GetHUDScale, py::return_value_policy::reference)
		.def("GetPrimaryPlayerWPC", &UWillowGFxMovie3D::GetPrimaryPlayerWPC, py::return_value_policy::reference)
		.def("IsPropTweening", &UWillowGFxMovie3D::IsPropTweening)
		.def("GetMaybeTweenedProperty", &UWillowGFxMovie3D::GetMaybeTweenedProperty, py::return_value_policy::reference)
		.def("GetViewportScale", &UWillowGFxMovie3D::GetViewportScale, py::return_value_policy::reference)
		.def("GetViewportDimensions", &UWillowGFxMovie3D::GetViewportDimensions, py::return_value_policy::reference)
		.def("GetViewport", &UWillowGFxMovie3D::GetViewport, py::return_value_policy::reference)
		.def("GetMovieDimensions", &UWillowGFxMovie3D::GetMovieDimensions, py::return_value_policy::reference)
		.def("ClearSplitscreenPanningCache", &UWillowGFxMovie3D::ClearSplitscreenPanningCache)
		.def("ResetSlidingObjects", &UWillowGFxMovie3D::ResetSlidingObjects)
		.def("UpdateSlidingObjects", &UWillowGFxMovie3D::UpdateSlidingObjects)
		.def("AddSlidingObject", &UWillowGFxMovie3D::AddSlidingObject)
		.def("ClampFocusOffset", &UWillowGFxMovie3D::ClampFocusOffset)
		.def("UpdateFocusOffset", &UWillowGFxMovie3D::UpdateFocusOffset)
		.def("FocusOn", &UWillowGFxMovie3D::FocusOn)
		.def("GetParentClip", &UWillowGFxMovie3D::GetParentClip, py::return_value_policy::reference)
		.def("AddClipToMap", &UWillowGFxMovie3D::AddClipToMap)
		.def("GetKeyFor", &UWillowGFxMovie3D::GetKeyFor)
		.def("DoVerticalSplitscreenPanning", &UWillowGFxMovie3D::DoVerticalSplitscreenPanning)
		.def("DoHorizontalSplitscreenPanning", &UWillowGFxMovie3D::DoHorizontalSplitscreenPanning)
		.def("Get3DRotationOffset", &UWillowGFxMovie3D::Get3DRotationOffset, py::return_value_policy::reference)
		.def("Get3DLocationOffset", &UWillowGFxMovie3D::Get3DLocationOffset, py::return_value_policy::reference)
		.def("Set3DMatrices", &UWillowGFxMovie3D::Set3DMatrices)
		.def("InitFromDefinition", &UWillowGFxMovie3D::InitFromDefinition)
		.def("eventOnSetViewport", &UWillowGFxMovie3D::eventOnSetViewport)
		.def("eventStart", &UWillowGFxMovie3D::eventStart)
		;
	py::class_< UCharacterSelectionReduxGFxMovie, UWillowGFxMovie3D >(m, "UCharacterSelectionReduxGFxMovie")
		.def_property("CachedIsWidescreen", [](UCharacterSelectionReduxGFxMovie &self){return self.CachedIsWidescreen;}, [](UCharacterSelectionReduxGFxMovie &self, bool value){self.CachedIsWidescreen = value ? 1 : 0;})
		.def_property("bCheckPauseState", [](UCharacterSelectionReduxGFxMovie &self){return self.bCheckPauseState;}, [](UCharacterSelectionReduxGFxMovie &self, bool value){self.bCheckPauseState = value ? 1 : 0;})
		.def_property("bChangingPrimaryStandInPosition", [](UCharacterSelectionReduxGFxMovie &self){return self.bChangingPrimaryStandInPosition;}, [](UCharacterSelectionReduxGFxMovie &self, bool value){self.bChangingPrimaryStandInPosition = value ? 1 : 0;})
		.def_property("bChangingSplitStandInPosition", [](UCharacterSelectionReduxGFxMovie &self){return self.bChangingSplitStandInPosition;}, [](UCharacterSelectionReduxGFxMovie &self, bool value){self.bChangingSplitStandInPosition = value ? 1 : 0;})
		.def_readwrite("FadeInTimeInSeconds", &UCharacterSelectionReduxGFxMovie::FadeInTimeInSeconds)
		.def_readwrite("FadeOutTimeInSeconds", &UCharacterSelectionReduxGFxMovie::FadeOutTimeInSeconds)
		.def_readwrite("CharacterSelectClip", &UCharacterSelectionReduxGFxMovie::CharacterSelectClip, py::return_value_policy::reference)
		.def_readwrite("SelectableCharacters", &UCharacterSelectionReduxGFxMovie::SelectableCharacters, py::return_value_policy::reference)
		.def_readwrite("PrimaryPlayerHeadCustomizations", &UCharacterSelectionReduxGFxMovie::PrimaryPlayerHeadCustomizations, py::return_value_policy::reference)
		.def_readwrite("PrimaryPlayerSkinCustomizations", &UCharacterSelectionReduxGFxMovie::PrimaryPlayerSkinCustomizations, py::return_value_policy::reference)
		.def_readwrite("SplitPlayerHeadCustomizations", &UCharacterSelectionReduxGFxMovie::SplitPlayerHeadCustomizations, py::return_value_policy::reference)
		.def_readwrite("SplitPlayerSkinCustomizations", &UCharacterSelectionReduxGFxMovie::SplitPlayerSkinCustomizations, py::return_value_policy::reference)
		.def_readwrite("CurrentPlayerEnteringName", &UCharacterSelectionReduxGFxMovie::CurrentPlayerEnteringName)
		.def_readwrite("TimerCaption", &UCharacterSelectionReduxGFxMovie::TimerCaption, py::return_value_policy::reference)
		.def_readwrite("WaitingMessage", &UCharacterSelectionReduxGFxMovie::WaitingMessage, py::return_value_policy::reference)
		.def_readwrite("SelectCharMessage", &UCharacterSelectionReduxGFxMovie::SelectCharMessage, py::return_value_policy::reference)
		.def_readwrite("HACK_NextInputTime", &UCharacterSelectionReduxGFxMovie::HACK_NextInputTime)
		.def_readwrite("TimerPauseTicker", &UCharacterSelectionReduxGFxMovie::TimerPauseTicker, py::return_value_policy::reference)
		.def_readwrite("UseCurrentSaveGameDlg", &UCharacterSelectionReduxGFxMovie::UseCurrentSaveGameDlg, py::return_value_policy::reference)
		.def_readwrite("ConfirmQuitDlg", &UCharacterSelectionReduxGFxMovie::ConfirmQuitDlg, py::return_value_policy::reference)
		.def_readwrite("LoadCharacterLobby", &UCharacterSelectionReduxGFxMovie::LoadCharacterLobby, py::return_value_policy::reference)
		.def_readwrite("PreviousStartGameTimer", &UCharacterSelectionReduxGFxMovie::PreviousStartGameTimer)
		.def_readwrite("AdjustStandInDebugMessageKey", &UCharacterSelectionReduxGFxMovie::AdjustStandInDebugMessageKey)
		.def_readwrite("LastOfferPlayerIndex", &UCharacterSelectionReduxGFxMovie::LastOfferPlayerIndex)
		.def_readwrite("PurchaseDialog", &UCharacterSelectionReduxGFxMovie::PurchaseDialog, py::return_value_policy::reference)
		.def("extOnFadeInComplete", &UCharacterSelectionReduxGFxMovie::extOnFadeInComplete)
		.def("extCharacterSelectOnLoad", &UCharacterSelectionReduxGFxMovie::extCharacterSelectOnLoad)
		.def("CheckForStartFadeIn", &UCharacterSelectionReduxGFxMovie::CheckForStartFadeIn)
		.def("FindAndViewCharacterSelectCamera", &UCharacterSelectionReduxGFxMovie::FindAndViewCharacterSelectCamera)
		.def("RegisterStandIns", &UCharacterSelectionReduxGFxMovie::RegisterStandIns)
		.def("ApplyPriorityVisibilityEffect", &UCharacterSelectionReduxGFxMovie::ApplyPriorityVisibilityEffect)
		.def("ApplyPriorityBlurEffect", &UCharacterSelectionReduxGFxMovie::ApplyPriorityBlurEffect)
		.def("CharacterLoadCanceled", &UCharacterSelectionReduxGFxMovie::CharacterLoadCanceled)
		.def("CharacterLoadComplete", &UCharacterSelectionReduxGFxMovie::CharacterLoadComplete)
		.def("OpenCharacterSelect", &UCharacterSelectionReduxGFxMovie::OpenCharacterSelect)
		.def("AppendSelectTooltipSuffix", &UCharacterSelectionReduxGFxMovie::AppendSelectTooltipSuffix)
		.def("AppendTooltipPlayerRestriction", &UCharacterSelectionReduxGFxMovie::AppendTooltipPlayerRestriction)
		.def("AppendTooltipSpacing", &UCharacterSelectionReduxGFxMovie::AppendTooltipSpacing)
		.def("UpdateTooltips", &UCharacterSelectionReduxGFxMovie::UpdateTooltips)
		.def("PopulateSkinCustomizationList", &UCharacterSelectionReduxGFxMovie::PopulateSkinCustomizationList)
		.def("PopulateHeadCustomizationList", &UCharacterSelectionReduxGFxMovie::PopulateHeadCustomizationList)
		.def("IsTimerActive", &UCharacterSelectionReduxGFxMovie::IsTimerActive)
		.def("ClearTimer", &UCharacterSelectionReduxGFxMovie::ClearTimer)
		.def("SetTimer", &UCharacterSelectionReduxGFxMovie::SetTimer)
		.def("HasNonLocalPlayers", &UCharacterSelectionReduxGFxMovie::HasNonLocalPlayers)
		.def("UpdateMessages", &UCharacterSelectionReduxGFxMovie::UpdateMessages)
		.def("UpdatePartySelections", &UCharacterSelectionReduxGFxMovie::UpdatePartySelections)
		.def("UpdatePlayerStandIn", &UCharacterSelectionReduxGFxMovie::UpdatePlayerStandIn)
		.def("UpdatePlayerSaveGameFromSelectedCharacter", &UCharacterSelectionReduxGFxMovie::UpdatePlayerSaveGameFromSelectedCharacter)
		.def("ClearLocalCustomizationsForPlayer", &UCharacterSelectionReduxGFxMovie::ClearLocalCustomizationsForPlayer)
		.def("UpdateSplitPlayerStandIn", &UCharacterSelectionReduxGFxMovie::UpdateSplitPlayerStandIn)
		.def("UpdatePrimaryPlayerStandIn", &UCharacterSelectionReduxGFxMovie::UpdatePrimaryPlayerStandIn)
		.def("UpdateCustomizations", &UCharacterSelectionReduxGFxMovie::UpdateCustomizations)
		.def("UpdateCharacterDisplay", &UCharacterSelectionReduxGFxMovie::UpdateCharacterDisplay)
		.def("UpdateAspectRatio", &UCharacterSelectionReduxGFxMovie::UpdateAspectRatio)
		.def("SetUIState", &UCharacterSelectionReduxGFxMovie::SetUIState)
		.def("SetSelectedCharacterIndex", &UCharacterSelectionReduxGFxMovie::SetSelectedCharacterIndex)
		.def("PromptQuit", &UCharacterSelectionReduxGFxMovie::PromptQuit)
		.def("OnQuitCanceled", &UCharacterSelectionReduxGFxMovie::OnQuitCanceled)
		.def("OnQuitConfirmed", &UCharacterSelectionReduxGFxMovie::OnQuitConfirmed)
		.def("GetSelectedCharacterDefaultName", &UCharacterSelectionReduxGFxMovie::GetSelectedCharacterDefaultName, py::return_value_policy::reference)
		.def("ValidatePlayerName", &UCharacterSelectionReduxGFxMovie::ValidatePlayerName)
		.def("SetPlayerName", &UCharacterSelectionReduxGFxMovie::SetPlayerName)
		.def("OnPlayerNameInputFinished", &UCharacterSelectionReduxGFxMovie::OnPlayerNameInputFinished)
		.def("InputName", &UCharacterSelectionReduxGFxMovie::InputName)
		.def("UpdateSkinPreview", &UCharacterSelectionReduxGFxMovie::UpdateSkinPreview)
		.def("UpdateHeadPreview", &UCharacterSelectionReduxGFxMovie::UpdateHeadPreview)
		.def("CancelSkinCustomization", &UCharacterSelectionReduxGFxMovie::CancelSkinCustomization)
		.def("CancelHeadCustomization", &UCharacterSelectionReduxGFxMovie::CancelHeadCustomization)
		.def("CommitSkinCustomization", &UCharacterSelectionReduxGFxMovie::CommitSkinCustomization)
		.def("CommitHeadCustomization", &UCharacterSelectionReduxGFxMovie::CommitHeadCustomization)
		.def("RecordCustomizationEventForPlayerIndex", &UCharacterSelectionReduxGFxMovie::RecordCustomizationEventForPlayerIndex)
		.def("HandleCustomizationSelected", &UCharacterSelectionReduxGFxMovie::HandleCustomizationSelected)
		.def("UsingGamepad", &UCharacterSelectionReduxGFxMovie::UsingGamepad)
		.def("HandleCustomizationMenuEntryClick", &UCharacterSelectionReduxGFxMovie::HandleCustomizationMenuEntryClick)
		.def("HandleCharacterMouseOver", &UCharacterSelectionReduxGFxMovie::HandleCharacterMouseOver)
		.def("HandleCharacterClicked", &UCharacterSelectionReduxGFxMovie::HandleCharacterClicked)
		.def("PromptPlayerUseCurrentSaveGame", &UCharacterSelectionReduxGFxMovie::PromptPlayerUseCurrentSaveGame)
		.def("OnBeginGameWithCurrentCharacterDeclined", &UCharacterSelectionReduxGFxMovie::OnBeginGameWithCurrentCharacterDeclined)
		.def("OnBeginGameWithCurrentCharacterConfirmed", &UCharacterSelectionReduxGFxMovie::OnBeginGameWithCurrentCharacterConfirmed)
		.def("DetermineStartingCharacterIndex", &UCharacterSelectionReduxGFxMovie::DetermineStartingCharacterIndex)
		.def("OnPurchaseCanceled", &UCharacterSelectionReduxGFxMovie::OnPurchaseCanceled)
		.def("MarketplaceDownloadComplete", &UCharacterSelectionReduxGFxMovie::MarketplaceDownloadComplete)
		.def("OnPurchaseRequest", &UCharacterSelectionReduxGFxMovie::OnPurchaseRequest)
		.def("ConfirmCharacter", &UCharacterSelectionReduxGFxMovie::ConfirmCharacter)
		.def("CacheCustomizations", &UCharacterSelectionReduxGFxMovie::CacheCustomizations)
		.def("DEBUG_AddDummyCharacters", &UCharacterSelectionReduxGFxMovie::DEBUG_AddDummyCharacters)
		.def("BuildCharacterList", &UCharacterSelectionReduxGFxMovie::BuildCharacterList)
		.def("IsUnownedDlcClass", &UCharacterSelectionReduxGFxMovie::IsUnownedDlcClass)
		.def("GetOfferIdForSelectedIndex", &UCharacterSelectionReduxGFxMovie::GetOfferIdForSelectedIndex)
		.def("GetHasPurchaseInfoForDlc", &UCharacterSelectionReduxGFxMovie::GetHasPurchaseInfoForDlc)
		.def("HandleChooseCustomizationInput", &UCharacterSelectionReduxGFxMovie::HandleChooseCustomizationInput)
		.def("HandleCustomizeCharacterInput", &UCharacterSelectionReduxGFxMovie::HandleCustomizeCharacterInput)
		.def("HandleChooseCharacterInput", &UCharacterSelectionReduxGFxMovie::HandleChooseCharacterInput)
		.def("NotifyPauseMenuOpened", &UCharacterSelectionReduxGFxMovie::NotifyPauseMenuOpened)
		.def("HandleInputKey", &UCharacterSelectionReduxGFxMovie::HandleInputKey)
		.def("FadeInputKey", &UCharacterSelectionReduxGFxMovie::FadeInputKey)
		.def("OnExternalUIChanged", &UCharacterSelectionReduxGFxMovie::OnExternalUIChanged)
		.def("eventOnTick", &UCharacterSelectionReduxGFxMovie::eventOnTick)
		.def("eventOnClose", &UCharacterSelectionReduxGFxMovie::eventOnClose)
		.def("BeginClose", &UCharacterSelectionReduxGFxMovie::BeginClose)
		.def("eventStart", &UCharacterSelectionReduxGFxMovie::eventStart)
		.def("GetOfferIdForDlc", [](UCharacterSelectionReduxGFxMovie &self , class UDownloadableContentDefinition* DlcDef) { int* pyOfferId = (int*)malloc(sizeof(int)) ;  bool ret =  self.GetOfferIdForDlc(DlcDef, pyOfferId); return py::make_tuple(ret, *pyOfferId); })
		;
	py::class_< UItemInspectionGFxMovie, UWillowGFxMovie3D >(m, "UItemInspectionGFxMovie")
		.def_property("bDraggingMouse_LMB", [](UItemInspectionGFxMovie &self){return self.bDraggingMouse_LMB;}, [](UItemInspectionGFxMovie &self, bool value){self.bDraggingMouse_LMB = value ? 1 : 0;})
		.def_property("bDraggingMouse_RMB", [](UItemInspectionGFxMovie &self){return self.bDraggingMouse_RMB;}, [](UItemInspectionGFxMovie &self, bool value){self.bDraggingMouse_RMB = value ? 1 : 0;})
		.def_property("bReverseIntroRotation", [](UItemInspectionGFxMovie &self){return self.bReverseIntroRotation;}, [](UItemInspectionGFxMovie &self, bool value){self.bReverseIntroRotation = value ? 1 : 0;})
		.def_property("bInvertIntroAlphaPower", [](UItemInspectionGFxMovie &self){return self.bInvertIntroAlphaPower;}, [](UItemInspectionGFxMovie &self, bool value){self.bInvertIntroAlphaPower = value ? 1 : 0;})
		.def_property("CachedWidescreen", [](UItemInspectionGFxMovie &self){return self.CachedWidescreen;}, [](UItemInspectionGFxMovie &self, bool value){self.CachedWidescreen = value ? 1 : 0;})
		.def_property("bCtrl", [](UItemInspectionGFxMovie &self){return self.bCtrl;}, [](UItemInspectionGFxMovie &self, bool value){self.bCtrl = value ? 1 : 0;})
		.def_property("bLBDown", [](UItemInspectionGFxMovie &self){return self.bLBDown;}, [](UItemInspectionGFxMovie &self, bool value){self.bLBDown = value ? 1 : 0;})
		.def_property("bRBDown", [](UItemInspectionGFxMovie &self){return self.bRBDown;}, [](UItemInspectionGFxMovie &self, bool value){self.bRBDown = value ? 1 : 0;})
		.def_property("bXDown", [](UItemInspectionGFxMovie &self){return self.bXDown;}, [](UItemInspectionGFxMovie &self, bool value){self.bXDown = value ? 1 : 0;})
		.def_property("bRequestInFlight", [](UItemInspectionGFxMovie &self){return self.bRequestInFlight;}, [](UItemInspectionGFxMovie &self, bool value){self.bRequestInFlight = value ? 1 : 0;})
		.def_readwrite("MyInspDef", &UItemInspectionGFxMovie::MyInspDef, py::return_value_policy::reference)
		.def_readwrite("StartTime", &UItemInspectionGFxMovie::StartTime)
		.def_readwrite("MyInspectionMesh", &UItemInspectionGFxMovie::MyInspectionMesh, py::return_value_policy::reference)
		.def_readwrite("InvDef", &UItemInspectionGFxMovie::InvDef, py::return_value_policy::reference)
		.def_readwrite("MeshRotation", &UItemInspectionGFxMovie::MeshRotation, py::return_value_policy::reference)
		.def_readwrite("MeshRotationQuat", &UItemInspectionGFxMovie::MeshRotationQuat, py::return_value_policy::reference)
		.def_readwrite("MeshRotationPitchQuat", &UItemInspectionGFxMovie::MeshRotationPitchQuat, py::return_value_policy::reference)
		.def_readwrite("MeshRotationYawQuat", &UItemInspectionGFxMovie::MeshRotationYawQuat, py::return_value_policy::reference)
		.def_readwrite("CurrentItemScale", &UItemInspectionGFxMovie::CurrentItemScale)
		.def_readwrite("CurrentOffset", &UItemInspectionGFxMovie::CurrentOffset, py::return_value_policy::reference)
		.def_readwrite("StartFOV", &UItemInspectionGFxMovie::StartFOV)
		.def_readwrite("OffsetBounds", &UItemInspectionGFxMovie::OffsetBounds)
		.def_readwrite("DragMouseLoc", &UItemInspectionGFxMovie::DragMouseLoc, py::return_value_policy::reference)
		.def_readwrite("MouseDragScale_Rotate", &UItemInspectionGFxMovie::MouseDragScale_Rotate)
		.def_readwrite("MouseDragScale_Pan", &UItemInspectionGFxMovie::MouseDragScale_Pan)
		.def_readwrite("MouseWheelScale", &UItemInspectionGFxMovie::MouseWheelScale)
		.def_readwrite("KeyPanScale", &UItemInspectionGFxMovie::KeyPanScale)
		.def_readwrite("TooltipsText_Pan_Mouse", &UItemInspectionGFxMovie::TooltipsText_Pan_Mouse, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Pan_Controller", &UItemInspectionGFxMovie::TooltipsText_Pan_Controller, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Rotate_Mouse", &UItemInspectionGFxMovie::TooltipsText_Rotate_Mouse, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Rotate_Controller", &UItemInspectionGFxMovie::TooltipsText_Rotate_Controller, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Zoom_Mouse", &UItemInspectionGFxMovie::TooltipsText_Zoom_Mouse, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Zoom_Controller", &UItemInspectionGFxMovie::TooltipsText_Zoom_Controller, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Screenshot_Keyboard", &UItemInspectionGFxMovie::TooltipsText_Screenshot_Keyboard, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Screenshot_Controller", &UItemInspectionGFxMovie::TooltipsText_Screenshot_Controller, py::return_value_policy::reference)
		.def_readwrite("TooltipsText_Close", &UItemInspectionGFxMovie::TooltipsText_Close, py::return_value_policy::reference)
		.def_readwrite("RandomIntroRotation", &UItemInspectionGFxMovie::RandomIntroRotation, py::return_value_policy::reference)
		.def_readwrite("RandomIntroAlphaPower", &UItemInspectionGFxMovie::RandomIntroAlphaPower)
		.def_readwrite("ItemCard", &UItemInspectionGFxMovie::ItemCard, py::return_value_policy::reference)
		.def_readwrite("CardContents", &UItemInspectionGFxMovie::CardContents, py::return_value_policy::reference)
		.def_readwrite("ScreenShotCounter", &UItemInspectionGFxMovie::ScreenShotCounter)
		.def_readwrite("SerialNumberString", &UItemInspectionGFxMovie::SerialNumberString, py::return_value_policy::reference)
		.def_readwrite("DemoPerkCode", &UItemInspectionGFxMovie::DemoPerkCode, py::return_value_policy::reference)
		.def("ShowDemoPerkCreatedDialog", &UItemInspectionGFxMovie::ShowDemoPerkCreatedDialog)
		.def("HandleCreateDemoPerkResponse", &UItemInspectionGFxMovie::HandleCreateDemoPerkResponse)
		.def("SaveDemoPerk", &UItemInspectionGFxMovie::SaveDemoPerk)
		.def("TrySaveDemoPerk", &UItemInspectionGFxMovie::TrySaveDemoPerk)
		.def("eventUpdateTooltips", &UItemInspectionGFxMovie::eventUpdateTooltips)
		.def("MakeQuatFromAxisAndAngle", &UItemInspectionGFxMovie::MakeQuatFromAxisAndAngle, py::return_value_policy::reference)
		.def("HandleMouseDrag", &UItemInspectionGFxMovie::HandleMouseDrag)
		.def("StopMouseDrag", &UItemInspectionGFxMovie::StopMouseDrag)
		.def("StartMouseDrag", &UItemInspectionGFxMovie::StartMouseDrag)
		.def("GetBoundsFor", &UItemInspectionGFxMovie::GetBoundsFor, py::return_value_policy::reference)
		.def("GetCurrentMeshScale", &UItemInspectionGFxMovie::GetCurrentMeshScale)
		.def("GetCurrentMeshRotation", &UItemInspectionGFxMovie::GetCurrentMeshRotation, py::return_value_policy::reference)
		.def("IntroAlpha", &UItemInspectionGFxMovie::IntroAlpha)
		.def("PlayingIntro", &UItemInspectionGFxMovie::PlayingIntro)
		.def("ScaleMesh", &UItemInspectionGFxMovie::ScaleMesh)
		.def("PanMesh", &UItemInspectionGFxMovie::PanMesh)
		.def("RotateMesh", &UItemInspectionGFxMovie::RotateMesh)
		.def("eventOnClose", &UItemInspectionGFxMovie::eventOnClose)
		.def("InspectItem", &UItemInspectionGFxMovie::InspectItem)
		.def("HandleInputAxis", &UItemInspectionGFxMovie::HandleInputAxis)
		.def("HandleInputKey", &UItemInspectionGFxMovie::HandleInputKey)
		.def("eventUpdateFrameForAspectRatio", &UItemInspectionGFxMovie::eventUpdateFrameForAspectRatio)
		.def("eventStart", &UItemInspectionGFxMovie::eventStart)
		;
	py::class_< ULANServerBrowserGFxMovie, UWillowGFxMovie3D >(m, "ULANServerBrowserGFxMovie")
		.def_property("bIsLanBrowser", [](ULANServerBrowserGFxMovie &self){return self.bIsLanBrowser;}, [](ULANServerBrowserGFxMovie &self, bool value){self.bIsLanBrowser = value ? 1 : 0;})
		.def_property("bSearchingForGames", [](ULANServerBrowserGFxMovie &self){return self.bSearchingForGames;}, [](ULANServerBrowserGFxMovie &self, bool value){self.bSearchingForGames = value ? 1 : 0;})
		.def_property("bUseDebugSearchResults", [](ULANServerBrowserGFxMovie &self){return self.bUseDebugSearchResults;}, [](ULANServerBrowserGFxMovie &self, bool value){self.bUseDebugSearchResults = value ? 1 : 0;})
		.def_readwrite("ServerBrowserObj", &ULANServerBrowserGFxMovie::ServerBrowserObj, py::return_value_policy::reference)
		.def_readwrite("HeaderTextPath", &ULANServerBrowserGFxMovie::HeaderTextPath, py::return_value_policy::reference)
		.def_readwrite("TooltipTextPath", &ULANServerBrowserGFxMovie::TooltipTextPath, py::return_value_policy::reference)
		.def_readwrite("MatchmakingResult", &ULANServerBrowserGFxMovie::MatchmakingResult, py::return_value_policy::reference)
		.def_readwrite("TimerPauseTicker", &ULANServerBrowserGFxMovie::TimerPauseTicker, py::return_value_policy::reference)
		.def_readwrite("IncompatibleGameVersionsServerIndex", &ULANServerBrowserGFxMovie::IncompatibleGameVersionsServerIndex, py::return_value_policy::reference)
		.def_readwrite("SortType", &ULANServerBrowserGFxMovie::SortType)
		.def_readwrite("SortDirection", &ULANServerBrowserGFxMovie::SortDirection)
		.def_readwrite("SortedResults", &ULANServerBrowserGFxMovie::SortedResults, py::return_value_policy::reference)
		.def("GetFriendlyGameVersionString", &ULANServerBrowserGFxMovie::GetFriendlyGameVersionString, py::return_value_policy::reference)
		.def("extLANServerBrowserOnLoad", &ULANServerBrowserGFxMovie::extLANServerBrowserOnLoad)
		.def("HandleServerBrowserSortDirectionButtonClick", &ULANServerBrowserGFxMovie::HandleServerBrowserSortDirectionButtonClick)
		.def("HandleServerBrowserSortTypeButtonClick", &ULANServerBrowserGFxMovie::HandleServerBrowserSortTypeButtonClick)
		.def("GetSortDirectionString", &ULANServerBrowserGFxMovie::GetSortDirectionString, py::return_value_policy::reference)
		.def("GetSortString", &ULANServerBrowserGFxMovie::GetSortString, py::return_value_policy::reference)
		.def("SetTooltips", &ULANServerBrowserGFxMovie::SetTooltips)
		.def("SetSearchingForGames", &ULANServerBrowserGFxMovie::SetSearchingForGames)
		.def("SetHeaderText", &ULANServerBrowserGFxMovie::SetHeaderText)
		.def("SetBrowserType", &ULANServerBrowserGFxMovie::SetBrowserType)
		.def("SortResults", &ULANServerBrowserGFxMovie::SortResults)
		.def("PopulateSearchResults", &ULANServerBrowserGFxMovie::PopulateSearchResults)
		.def("DebugGenerateSearchResults", &ULANServerBrowserGFxMovie::DebugGenerateSearchResults)
		.def("SetSort", &ULANServerBrowserGFxMovie::SetSort)
		.def("FilterResults", &ULANServerBrowserGFxMovie::FilterResults)
		.def("OnFindGamesComplete", &ULANServerBrowserGFxMovie::OnFindGamesComplete)
		.def("CancelGameSearch", &ULANServerBrowserGFxMovie::CancelGameSearch)
		.def("FindGames", &ULANServerBrowserGFxMovie::FindGames)
		.def("OnJoinMatchComplete", &ULANServerBrowserGFxMovie::OnJoinMatchComplete)
		.def("OnDestroyGameForMatchJoinComplete", &ULANServerBrowserGFxMovie::OnDestroyGameForMatchJoinComplete)
		.def("JoinMatchmakingSession", &ULANServerBrowserGFxMovie::JoinMatchmakingSession)
		.def("HandleServerBrowserItemClick", &ULANServerBrowserGFxMovie::HandleServerBrowserItemClick)
		.def("GetNextSortType", &ULANServerBrowserGFxMovie::GetNextSortType)
		.def("HandleInputKey", &ULANServerBrowserGFxMovie::HandleInputKey)
		.def("BeginClose", &ULANServerBrowserGFxMovie::BeginClose)
		.def("eventOnClose", &ULANServerBrowserGFxMovie::eventOnClose)
		.def("Start", &ULANServerBrowserGFxMovie::Start)
		;
	py::class_< UQuestAcceptGFxMovie, UWillowGFxMovie3D >(m, "UQuestAcceptGFxMovie")
		.def_property("bAcceptedMission", [](UQuestAcceptGFxMovie &self){return self.bAcceptedMission;}, [](UQuestAcceptGFxMovie &self, bool value){self.bAcceptedMission = value ? 1 : 0;})
		.def_property("bTurnedInPlotMission", [](UQuestAcceptGFxMovie &self){return self.bTurnedInPlotMission;}, [](UQuestAcceptGFxMovie &self, bool value){self.bTurnedInPlotMission = value ? 1 : 0;})
		.def_property("bSingleMissionDisplay", [](UQuestAcceptGFxMovie &self){return self.bSingleMissionDisplay;}, [](UQuestAcceptGFxMovie &self, bool value){self.bSingleMissionDisplay = value ? 1 : 0;})
		.def_readwrite("MissionUIDef", &UQuestAcceptGFxMovie::MissionUIDef, py::return_value_policy::reference)
		.def_readwrite("MissionTextList", &UQuestAcceptGFxMovie::MissionTextList, py::return_value_policy::reference)
		.def_readwrite("MissionCategories", &UQuestAcceptGFxMovie::MissionCategories, py::return_value_policy::reference)
		.def_readwrite("MissionDirector", &UQuestAcceptGFxMovie::MissionDirector, py::return_value_policy::reference)
		.def_readwrite("FocusSubject", &UQuestAcceptGFxMovie::FocusSubject, py::return_value_policy::reference)
		.def_readwrite("ContextNPC", &UQuestAcceptGFxMovie::ContextNPC, py::return_value_policy::reference)
		.def_readwrite("RedeemableCount", &UQuestAcceptGFxMovie::RedeemableCount)
		.def_readwrite("EligibleCount", &UQuestAcceptGFxMovie::EligibleCount)
		.def_readwrite("InProgressCount", &UQuestAcceptGFxMovie::InProgressCount)
		.def_readwrite("MissionList", &UQuestAcceptGFxMovie::MissionList, py::return_value_policy::reference)
		.def_readwrite("InProgressMissionList", &UQuestAcceptGFxMovie::InProgressMissionList, py::return_value_policy::reference)
		.def_readwrite("MissionDefForRewardPage", &UQuestAcceptGFxMovie::MissionDefForRewardPage, py::return_value_policy::reference)
		.def_readwrite("RewardObject", &UQuestAcceptGFxMovie::RewardObject, py::return_value_policy::reference)
		.def_readwrite("WantsAcceptCounter", &UQuestAcceptGFxMovie::WantsAcceptCounter)
		.def("extGenericButtonClicked", &UQuestAcceptGFxMovie::extGenericButtonClicked)
		.def("eventOnTick", &UQuestAcceptGFxMovie::eventOnTick)
		.def("InitForConsole", &UQuestAcceptGFxMovie::InitForConsole)
		.def("InitForPC", &UQuestAcceptGFxMovie::InitForPC)
		.def("OnClosedOnDeath", &UQuestAcceptGFxMovie::OnClosedOnDeath)
		.def("UpdateMissionList", &UQuestAcceptGFxMovie::UpdateMissionList)
		.def("HandleInputKey", &UQuestAcceptGFxMovie::HandleInputKey)
		.def("MoveHighlight", &UQuestAcceptGFxMovie::MoveHighlight)
		.def("StopMovingHighlight", &UQuestAcceptGFxMovie::StopMovingHighlight)
		.def("StartMovingHighlight", &UQuestAcceptGFxMovie::StartMovingHighlight)
		.def("SetDescriptionScrollValue", &UQuestAcceptGFxMovie::SetDescriptionScrollValue)
		.def("extSetDescriptionScrollValue", &UQuestAcceptGFxMovie::extSetDescriptionScrollValue)
		.def("extLogDown", &UQuestAcceptGFxMovie::extLogDown)
		.def("LogDown", &UQuestAcceptGFxMovie::LogDown)
		.def("extLogUp", &UQuestAcceptGFxMovie::extLogUp)
		.def("LogUp", &UQuestAcceptGFxMovie::LogUp)
		.def("ConditionallyScroll", &UQuestAcceptGFxMovie::ConditionallyScroll)
		.def("SetFocus", &UQuestAcceptGFxMovie::SetFocus)
		.def("UpdateMissionTextList", &UQuestAcceptGFxMovie::UpdateMissionTextList)
		.def("SetScrollArrows", &UQuestAcceptGFxMovie::SetScrollArrows)
		.def("SetLevelAndDifficulty", &UQuestAcceptGFxMovie::SetLevelAndDifficulty)
		.def("SetRewardsItem", &UQuestAcceptGFxMovie::SetRewardsItem)
		.def("SetRewardsXP", &UQuestAcceptGFxMovie::SetRewardsXP)
		.def("SetPlayerXP", &UQuestAcceptGFxMovie::SetPlayerXP)
		.def("SetRewardsTotalOtherCurrency", &UQuestAcceptGFxMovie::SetRewardsTotalOtherCurrency)
		.def("SetRewardsTotalCredits", &UQuestAcceptGFxMovie::SetRewardsTotalCredits)
		.def("SetPlayerDisplayedCredits", &UQuestAcceptGFxMovie::SetPlayerDisplayedCredits)
		.def("SetPlayerTotalCredits", &UQuestAcceptGFxMovie::SetPlayerTotalCredits)
		.def("eventOnClose", &UQuestAcceptGFxMovie::eventOnClose)
		.def("extChoiceConfirmed", &UQuestAcceptGFxMovie::extChoiceConfirmed)
		.def("extChoiceCancelled", &UQuestAcceptGFxMovie::extChoiceCancelled)
		.def("extHover", &UQuestAcceptGFxMovie::extHover)
		.def("extLogListTrack", &UQuestAcceptGFxMovie::extLogListTrack)
		.def("extLogListRollOver", &UQuestAcceptGFxMovie::extLogListRollOver)
		.def("extNavigateDown", &UQuestAcceptGFxMovie::extNavigateDown)
		.def("extNavigateUp", &UQuestAcceptGFxMovie::extNavigateUp)
		.def("extOnRolloverChoice", &UQuestAcceptGFxMovie::extOnRolloverChoice)
		.def("extOnFocusedChoice", &UQuestAcceptGFxMovie::extOnFocusedChoice)
		.def("AcceptReward", &UQuestAcceptGFxMovie::AcceptReward)
		.def("extOnClickedChoice", &UQuestAcceptGFxMovie::extOnClickedChoice)
		.def("HandleRewardInputKey", &UQuestAcceptGFxMovie::HandleRewardInputKey)
		.def("ShowNoRewardScreen", &UQuestAcceptGFxMovie::ShowNoRewardScreen)
		.def("DisplayRewardsPage", &UQuestAcceptGFxMovie::DisplayRewardsPage)
		.def("extCompleteConfirmed", &UQuestAcceptGFxMovie::extCompleteConfirmed)
		.def("extAcceptConfirmed", &UQuestAcceptGFxMovie::extAcceptConfirmed)
		.def("SetRewardCard", &UQuestAcceptGFxMovie::SetRewardCard)
		.def("SetInnerReward", &UQuestAcceptGFxMovie::SetInnerReward)
		.def("GetRewardPresentations", &UQuestAcceptGFxMovie::GetRewardPresentations, py::return_value_policy::reference)
		.def("ProtectedFillOutCommonScreenDetails", &UQuestAcceptGFxMovie::ProtectedFillOutCommonScreenDetails)
		.def("extFillOutQuestAllScreenDetails", &UQuestAcceptGFxMovie::extFillOutQuestAllScreenDetails)
		.def("GetSelectedIndex", &UQuestAcceptGFxMovie::GetSelectedIndex)
		.def("UpdateMissionDetails", &UQuestAcceptGFxMovie::UpdateMissionDetails)
		.def("GotoCorrectPartOfMovie", &UQuestAcceptGFxMovie::GotoCorrectPartOfMovie)
		.def("SetQuestTitle", &UQuestAcceptGFxMovie::SetQuestTitle)
		.def("extPopulateQuestEntries", &UQuestAcceptGFxMovie::extPopulateQuestEntries)
		.def("QuestTitlesPrevFrame", &UQuestAcceptGFxMovie::QuestTitlesPrevFrame)
		.def("QuestTitlesNextFrame", &UQuestAcceptGFxMovie::QuestTitlesNextFrame)
		.def("DetermineQuestEntries", &UQuestAcceptGFxMovie::DetermineQuestEntries)
		.def("HandleInputAxis", &UQuestAcceptGFxMovie::HandleInputAxis)
		.def("HideTopPanel", &UQuestAcceptGFxMovie::HideTopPanel)
		.def("eventStart", &UQuestAcceptGFxMovie::eventStart)
		;
	py::class_< UVehicleSpawnStationGFxMovie, UWillowGFxMovie3D >(m, "UVehicleSpawnStationGFxMovie")
		.def_property("bChoosingFamily", [](UVehicleSpawnStationGFxMovie &self){return self.bChoosingFamily;}, [](UVehicleSpawnStationGFxMovie &self, bool value){self.bChoosingFamily = value ? 1 : 0;})
		.def_property("WaitingOnReplicatedData", [](UVehicleSpawnStationGFxMovie &self){return self.WaitingOnReplicatedData;}, [](UVehicleSpawnStationGFxMovie &self, bool value){self.WaitingOnReplicatedData = value ? 1 : 0;})
		.def_readwrite("VfTable_IIStreamingDataEvent", &UVehicleSpawnStationGFxMovie::VfTable_IIStreamingDataEvent, py::return_value_policy::reference)
		.def_readwrite("VSSWrapperObj", &UVehicleSpawnStationGFxMovie::VSSWrapperObj, py::return_value_policy::reference)
		.def_readwrite("VehicleFamilySelector", &UVehicleSpawnStationGFxMovie::VehicleFamilySelector, py::return_value_policy::reference)
		.def_readwrite("VehicleChoiceInfoCard", &UVehicleSpawnStationGFxMovie::VehicleChoiceInfoCard, py::return_value_policy::reference)
		.def_readwrite("MyVehicleSpawnStationDefinition", &UVehicleSpawnStationGFxMovie::MyVehicleSpawnStationDefinition, py::return_value_policy::reference)
		.def_readwrite("AvailableVehicleFamilyDefinitions", &UVehicleSpawnStationGFxMovie::AvailableVehicleFamilyDefinitions, py::return_value_policy::reference)
		.def_readwrite("DesiredFamilyDefinition", &UVehicleSpawnStationGFxMovie::DesiredFamilyDefinition, py::return_value_policy::reference)
		.def_readwrite("TimeStartedWaitingForFamilyChange", &UVehicleSpawnStationGFxMovie::TimeStartedWaitingForFamilyChange)
		.def_readwrite("ChangeFamilyRequestMinWaitDuration", &UVehicleSpawnStationGFxMovie::ChangeFamilyRequestMinWaitDuration)
		.def_readwrite("ChangeFamilyRequestTimeOutDuration", &UVehicleSpawnStationGFxMovie::ChangeFamilyRequestTimeOutDuration)
		.def_readwrite("AvailableVehicleUIDefinitions", &UVehicleSpawnStationGFxMovie::AvailableVehicleUIDefinitions, py::return_value_policy::reference)
		.def_readwrite("AvailableVehicleSkinDefinitions", &UVehicleSpawnStationGFxMovie::AvailableVehicleSkinDefinitions, py::return_value_policy::reference)
		.def_readwrite("SeenVehicleSkinDefinitions", &UVehicleSpawnStationGFxMovie::SeenVehicleSkinDefinitions, py::return_value_policy::reference)
		.def_readwrite("CurrentStage", &UVehicleSpawnStationGFxMovie::CurrentStage)
		.def_readwrite("VehicleCellCount", &UVehicleSpawnStationGFxMovie::VehicleCellCount)
		.def_readwrite("SelectedModuleIndex", &UVehicleSpawnStationGFxMovie::SelectedModuleIndex)
		.def_readwrite("ClientPawnLocationAtTeleportTime", &UVehicleSpawnStationGFxMovie::ClientPawnLocationAtTeleportTime, py::return_value_policy::reference)
		.def_readwrite("SpawnVehicleLabel", &UVehicleSpawnStationGFxMovie::SpawnVehicleLabel, py::return_value_policy::reference)
		.def_readwrite("RespawnVehicleLabel", &UVehicleSpawnStationGFxMovie::RespawnVehicleLabel, py::return_value_policy::reference)
		.def_readwrite("TeleportLabel", &UVehicleSpawnStationGFxMovie::TeleportLabel, py::return_value_policy::reference)
		.def_readwrite("NoSkinAvailableLabel", &UVehicleSpawnStationGFxMovie::NoSkinAvailableLabel, py::return_value_policy::reference)
		.def_readwrite("NoSkinSelectedLabel", &UVehicleSpawnStationGFxMovie::NoSkinSelectedLabel, py::return_value_policy::reference)
		.def_readwrite("UnlockedText", &UVehicleSpawnStationGFxMovie::UnlockedText, py::return_value_policy::reference)
		.def_readwrite("WaitingOnDataDlg", &UVehicleSpawnStationGFxMovie::WaitingOnDataDlg, py::return_value_policy::reference)
		.def_readwrite("StartTimeWaitingOnReplicatedData", &UVehicleSpawnStationGFxMovie::StartTimeWaitingOnReplicatedData)
		.def_readwrite("StartTime", &UVehicleSpawnStationGFxMovie::StartTime)
		.def_readwrite("StartFOV", &UVehicleSpawnStationGFxMovie::StartFOV)
		.def_readwrite("PreviewIndex", &UVehicleSpawnStationGFxMovie::PreviewIndex)
		.def("eventRunStreamingDataEvent", &UVehicleSpawnStationGFxMovie::eventRunStreamingDataEvent)
		.def("CloseOrReturnToFamilySelection", &UVehicleSpawnStationGFxMovie::CloseOrReturnToFamilySelection)
		.def("extGenericButtonClicked", &UVehicleSpawnStationGFxMovie::extGenericButtonClicked)
		.def("InitForConsole", &UVehicleSpawnStationGFxMovie::InitForConsole)
		.def("InitForPC", &UVehicleSpawnStationGFxMovie::InitForPC)
		.def("HandleInputAxis", &UVehicleSpawnStationGFxMovie::HandleInputAxis)
		.def("UpdatePreview", &UVehicleSpawnStationGFxMovie::UpdatePreview)
		.def("CancelCustomization", &UVehicleSpawnStationGFxMovie::CancelCustomization)
		.def("CommitCustomization", &UVehicleSpawnStationGFxMovie::CommitCustomization)
		.def("extOnSkinCellClick", &UVehicleSpawnStationGFxMovie::extOnSkinCellClick)
		.def("UsingGamepad", &UVehicleSpawnStationGFxMovie::UsingGamepad)
		.def("extOnVehicleFamilyCellClick", &UVehicleSpawnStationGFxMovie::extOnVehicleFamilyCellClick)
		.def("extOnVehicleCellHighlight", &UVehicleSpawnStationGFxMovie::extOnVehicleCellHighlight)
		.def("extOnVehicleCellClick", &UVehicleSpawnStationGFxMovie::extOnVehicleCellClick)
		.def("extOnSkinTypeButtonClick", &UVehicleSpawnStationGFxMovie::extOnSkinTypeButtonClick)
		.def("extOnVehicleTypeButtonClick", &UVehicleSpawnStationGFxMovie::extOnVehicleTypeButtonClick)
		.def("extOnTeleportButtonClick", &UVehicleSpawnStationGFxMovie::extOnTeleportButtonClick)
		.def("extOnSpawnVehicleButtonClick", &UVehicleSpawnStationGFxMovie::extOnSpawnVehicleButtonClick)
		.def("extOnVehicleChoiceInfoCardLoad", &UVehicleSpawnStationGFxMovie::extOnVehicleChoiceInfoCardLoad)
		.def("extOnVehicleChoiceModuleLoad", &UVehicleSpawnStationGFxMovie::extOnVehicleChoiceModuleLoad)
		.def("extOnVehicleFamilySelectorLoad", &UVehicleSpawnStationGFxMovie::extOnVehicleFamilySelectorLoad)
		.def("extCacheVSSClip", &UVehicleSpawnStationGFxMovie::extCacheVSSClip)
		.def("VehicleFamilyInputKey", &UVehicleSpawnStationGFxMovie::VehicleFamilyInputKey)
		.def("SharedInfoCardInputKey", &UVehicleSpawnStationGFxMovie::SharedInfoCardInputKey)
		.def("SkinChoiceInfoCardInputKey", &UVehicleSpawnStationGFxMovie::SkinChoiceInfoCardInputKey)
		.def("VehicleChoiceInfoCardInputKey", &UVehicleSpawnStationGFxMovie::VehicleChoiceInfoCardInputKey)
		.def("HandleKeyDefaults", &UVehicleSpawnStationGFxMovie::HandleKeyDefaults)
		.def("eventTrySetFocus", &UVehicleSpawnStationGFxMovie::eventTrySetFocus)
		.def("eventRefreshFocus", &UVehicleSpawnStationGFxMovie::eventRefreshFocus)
		.def("eventConfigureTooltips", &UVehicleSpawnStationGFxMovie::eventConfigureTooltips)
		.def("ConfigureTooltipsInternal", &UVehicleSpawnStationGFxMovie::ConfigureTooltipsInternal)
		.def("eventConfigureVSSWrapper", &UVehicleSpawnStationGFxMovie::eventConfigureVSSWrapper)
		.def("HideSkinInfoCard", &UVehicleSpawnStationGFxMovie::HideSkinInfoCard)
		.def("ShowSkinInfoCard", &UVehicleSpawnStationGFxMovie::ShowSkinInfoCard)
		.def("HideVehicleInfoCard", &UVehicleSpawnStationGFxMovie::HideVehicleInfoCard)
		.def("ShowVehicleInfoCard", &UVehicleSpawnStationGFxMovie::ShowVehicleInfoCard)
		.def("ConfigureSkinTypeChoices", &UVehicleSpawnStationGFxMovie::ConfigureSkinTypeChoices)
		.def("ConfigureVehicleTypeChoices", &UVehicleSpawnStationGFxMovie::ConfigureVehicleTypeChoices)
		.def("AddVehicleChoices", &UVehicleSpawnStationGFxMovie::AddVehicleChoices)
		.def("eventRefreshVehicleChoiceModule", &UVehicleSpawnStationGFxMovie::eventRefreshVehicleChoiceModule)
		.def("GetVehicleChoiceModule", &UVehicleSpawnStationGFxMovie::GetVehicleChoiceModule, py::return_value_policy::reference)
		.def("eventOnClose", &UVehicleSpawnStationGFxMovie::eventOnClose)
		.def("eventUpdatePreviewFromVSSUIDef", &UVehicleSpawnStationGFxMovie::eventUpdatePreviewFromVSSUIDef)
		.def("DestroyPreviewMeshes", &UVehicleSpawnStationGFxMovie::DestroyPreviewMeshes)
		.def("DestroyPreviewActors", &UVehicleSpawnStationGFxMovie::DestroyPreviewActors)
		.def("CreatePreviewActors", &UVehicleSpawnStationGFxMovie::CreatePreviewActors)
		.def("eventShowPlayersMustExitMessage", &UVehicleSpawnStationGFxMovie::eventShowPlayersMustExitMessage)
		.def("eventShowProcessingRequestMessage", &UVehicleSpawnStationGFxMovie::eventShowProcessingRequestMessage)
		.def("eventShowPleaseWaitMessage", &UVehicleSpawnStationGFxMovie::eventShowPleaseWaitMessage)
		.def("eventShowNoVehiclesMessage", &UVehicleSpawnStationGFxMovie::eventShowNoVehiclesMessage)
		.def("eventStart", &UVehicleSpawnStationGFxMovie::eventStart)
		.def("GetCurrentMeshScale", &UVehicleSpawnStationGFxMovie::GetCurrentMeshScale)
		.def("IntroAlpha", &UVehicleSpawnStationGFxMovie::IntroAlpha)
		.def("PlayingIntro", &UVehicleSpawnStationGFxMovie::PlayingIntro)
		.def("GetBoundsFor", &UVehicleSpawnStationGFxMovie::GetBoundsFor, py::return_value_policy::reference)
		.def("InitVehicleChoiceModules", &UVehicleSpawnStationGFxMovie::InitVehicleChoiceModules)
		.def("HandleVehicleFamilySelection", &UVehicleSpawnStationGFxMovie::HandleVehicleFamilySelection)
		.def("SetCurrentStage", &UVehicleSpawnStationGFxMovie::SetCurrentStage)
		.def("UpdateSkinsOnVehicleTypeChange", &UVehicleSpawnStationGFxMovie::UpdateSkinsOnVehicleTypeChange)
		.def("CacheDefinitions", &UVehicleSpawnStationGFxMovie::CacheDefinitions)
		.def("CacheVehicleFamilies", &UVehicleSpawnStationGFxMovie::CacheVehicleFamilies)
		.def("VehicleExistsAndIsOccupied", [](UVehicleSpawnStationGFxMovie &self ) { class UVehicleFamilyDefinition** pyOutSpawnedVehicleFamilyDef = 0 ;  bool ret =  self.VehicleExistsAndIsOccupied(pyOutSpawnedVehicleFamilyDef); return py::make_tuple(ret, *pyOutSpawnedVehicleFamilyDef); })
		;
	py::class_< UWeaponScopeGFxMovie, UWillowGFxMovie3D >(m, "UWeaponScopeGFxMovie")
		.def_readwrite("MyScopeDefinition", &UWeaponScopeGFxMovie::MyScopeDefinition, py::return_value_policy::reference)
		.def_readwrite("CrosshairWidget", &UWeaponScopeGFxMovie::CrosshairWidget, py::return_value_policy::reference)
		.def_readwrite("CachedFLN_Housing", &UWeaponScopeGFxMovie::CachedFLN_Housing, py::return_value_policy::reference)
		.def_readwrite("CachedFLN_Stock", &UWeaponScopeGFxMovie::CachedFLN_Stock, py::return_value_policy::reference)
		.def_readwrite("CachedFLN_Grip", &UWeaponScopeGFxMovie::CachedFLN_Grip, py::return_value_policy::reference)
		.def_readwrite("CachedFLN_Collateral", &UWeaponScopeGFxMovie::CachedFLN_Collateral, py::return_value_policy::reference)
		.def_readwrite("CachedFLN_Crosshairs", &UWeaponScopeGFxMovie::CachedFLN_Crosshairs, py::return_value_policy::reference)
		.def_readwrite("CachedSFN", &UWeaponScopeGFxMovie::CachedSFN, py::return_value_policy::reference)
		.def_readwrite("CachedElementalName", &UWeaponScopeGFxMovie::CachedElementalName, py::return_value_policy::reference)
		.def("InitializeAsTelescope", &UWeaponScopeGFxMovie::InitializeAsTelescope)
		.def("CloseScope", &UWeaponScopeGFxMovie::CloseScope)
		.def("InitCrosshair", &UWeaponScopeGFxMovie::InitCrosshair)
		.def("InitElemental", &UWeaponScopeGFxMovie::InitElemental)
		.def("GetElementalName", &UWeaponScopeGFxMovie::GetElementalName, py::return_value_policy::reference)
		.def("InitializeFromWeapon", &UWeaponScopeGFxMovie::InitializeFromWeapon)
		.def("ClearCached", &UWeaponScopeGFxMovie::ClearCached)
		.def("GetManufacturerDefinitionFromWeaponPart", &UWeaponScopeGFxMovie::GetManufacturerDefinitionFromWeaponPart, py::return_value_policy::reference)
		.def("GetWeaponTypeNameForLinkage", &UWeaponScopeGFxMovie::GetWeaponTypeNameForLinkage, py::return_value_policy::reference)
		.def("GetManufacturerNameForLinkage", &UWeaponScopeGFxMovie::GetManufacturerNameForLinkage, py::return_value_policy::reference)
		.def("GetLinkageName", &UWeaponScopeGFxMovie::GetLinkageName, py::return_value_policy::reference)
		.def("eventOnClose", &UWeaponScopeGFxMovie::eventOnClose)
		.def("eventStart", &UWeaponScopeGFxMovie::eventStart)
		;
	py::class_< UWillowGFxMovieCredits, UWillowGFxMovie3D >(m, "UWillowGFxMovieCredits")
		.def_property("bMiddlewareTextureLoaded", [](UWillowGFxMovieCredits &self){return self.bMiddlewareTextureLoaded;}, [](UWillowGFxMovieCredits &self, bool value){self.bMiddlewareTextureLoaded = value ? 1 : 0;})
		.def_property("bSplatTextureLoaded", [](UWillowGFxMovieCredits &self){return self.bSplatTextureLoaded;}, [](UWillowGFxMovieCredits &self, bool value){self.bSplatTextureLoaded = value ? 1 : 0;})
		.def_property("bClosing", [](UWillowGFxMovieCredits &self){return self.bClosing;}, [](UWillowGFxMovieCredits &self, bool value){self.bClosing = value ? 1 : 0;})
		.def_readwrite("ceStarted", &UWillowGFxMovieCredits::ceStarted, py::return_value_policy::reference)
		.def_readwrite("ceFinished", &UWillowGFxMovieCredits::ceFinished, py::return_value_policy::reference)
		.def_readwrite("Credits", &UWillowGFxMovieCredits::Credits, py::return_value_policy::reference)
		.def_readwrite("Montage", &UWillowGFxMovieCredits::Montage, py::return_value_policy::reference)
		.def_readwrite("DataProvider", &UWillowGFxMovieCredits::DataProvider, py::return_value_policy::reference)
		.def_readwrite("CreditsDef", &UWillowGFxMovieCredits::CreditsDef, py::return_value_policy::reference)
		.def_readwrite("MiddlewareTexture", &UWillowGFxMovieCredits::MiddlewareTexture, py::return_value_policy::reference)
		.def_readwrite("MiddlewareTextureLinkageName", &UWillowGFxMovieCredits::MiddlewareTextureLinkageName, py::return_value_policy::reference)
		.def_readwrite("SplatTexture", &UWillowGFxMovieCredits::SplatTexture, py::return_value_policy::reference)
		.def_readwrite("SplatTextureLinkageName", &UWillowGFxMovieCredits::SplatTextureLinkageName, py::return_value_policy::reference)
		.def_readwrite("ClosingTimeRemaining", &UWillowGFxMovieCredits::ClosingTimeRemaining)
		.def_readwrite("AxisResetCounter", &UWillowGFxMovieCredits::AxisResetCounter)
		.def("HandleInputAxis", &UWillowGFxMovieCredits::HandleInputAxis)
		.def("HandleInputKey", &UWillowGFxMovieCredits::HandleInputKey)
		.def("BeginClosing", &UWillowGFxMovieCredits::BeginClosing)
		.def("extCreditsFinished", &UWillowGFxMovieCredits::extCreditsFinished)
		.def("extOnSplatClipOnLoad", &UWillowGFxMovieCredits::extOnSplatClipOnLoad)
		.def("eventOnSplatTextureLoaded", &UWillowGFxMovieCredits::eventOnSplatTextureLoaded)
		.def("ClearSplatTexture", &UWillowGFxMovieCredits::ClearSplatTexture)
		.def("LoadSplatTexture", &UWillowGFxMovieCredits::LoadSplatTexture)
		.def("extOnMiddlewareClipOnLoad", &UWillowGFxMovieCredits::extOnMiddlewareClipOnLoad)
		.def("eventOnMiddlewareTextureLoaded", &UWillowGFxMovieCredits::eventOnMiddlewareTextureLoaded)
		.def("ClearMiddlewareTexture", &UWillowGFxMovieCredits::ClearMiddlewareTexture)
		.def("LoadMiddlewareTexture", &UWillowGFxMovieCredits::LoadMiddlewareTexture)
		.def("extInitMontage", &UWillowGFxMovieCredits::extInitMontage)
		.def("extInitCredits", &UWillowGFxMovieCredits::extInitCredits)
		.def("eventOnTick", &UWillowGFxMovieCredits::eventOnTick)
		.def("eventOnClose", &UWillowGFxMovieCredits::eventOnClose)
		.def("eventStart", &UWillowGFxMovieCredits::eventStart)
		;
	py::class_< UWillowGFxThirdPersonMovie, UWillowGFxMovie3D >(m, "UWillowGFxThirdPersonMovie")
		.def_property("bAdjustedCameraLastTick", [](UWillowGFxThirdPersonMovie &self){return self.bAdjustedCameraLastTick;}, [](UWillowGFxThirdPersonMovie &self, bool value){self.bAdjustedCameraLastTick = value ? 1 : 0;})
		.def_property("bClosing", [](UWillowGFxThirdPersonMovie &self){return self.bClosing;}, [](UWillowGFxThirdPersonMovie &self, bool value){self.bClosing = value ? 1 : 0;})
		.def_property("bControlModeAdjustsMenu", [](UWillowGFxThirdPersonMovie &self){return self.bControlModeAdjustsMenu;}, [](UWillowGFxThirdPersonMovie &self, bool value){self.bControlModeAdjustsMenu = value ? 1 : 0;})
		.def_property("bNeedsCamRotUpdate", [](UWillowGFxThirdPersonMovie &self){return self.bNeedsCamRotUpdate;}, [](UWillowGFxThirdPersonMovie &self, bool value){self.bNeedsCamRotUpdate = value ? 1 : 0;})
		.def_property("bDoCameraCollision", [](UWillowGFxThirdPersonMovie &self){return self.bDoCameraCollision;}, [](UWillowGFxThirdPersonMovie &self, bool value){self.bDoCameraCollision = value ? 1 : 0;})
		.def_property("bHideMeshInVertSplit", [](UWillowGFxThirdPersonMovie &self){return self.bHideMeshInVertSplit;}, [](UWillowGFxThirdPersonMovie &self, bool value){self.bHideMeshInVertSplit = value ? 1 : 0;})
		.def_property("bDraggingMouse_Camera", [](UWillowGFxThirdPersonMovie &self){return self.bDraggingMouse_Camera;}, [](UWillowGFxThirdPersonMovie &self, bool value){self.bDraggingMouse_Camera = value ? 1 : 0;})
		.def_property("bDoMenuSpring", [](UWillowGFxThirdPersonMovie &self){return self.bDoMenuSpring;}, [](UWillowGFxThirdPersonMovie &self, bool value){self.bDoMenuSpring = value ? 1 : 0;})
		.def_readwrite("MyThirdPersonDefinition", &UWillowGFxThirdPersonMovie::MyThirdPersonDefinition, py::return_value_policy::reference)
		.def_readwrite("CameraYaw", &UWillowGFxThirdPersonMovie::CameraYaw)
		.def_readwrite("CameraPitch", &UWillowGFxThirdPersonMovie::CameraPitch)
		.def_readwrite("CameraRotation", &UWillowGFxThirdPersonMovie::CameraRotation, py::return_value_policy::reference)
		.def_readwrite("CameraLocation", &UWillowGFxThirdPersonMovie::CameraLocation, py::return_value_policy::reference)
		.def_readwrite("CameraSplitOffset", &UWillowGFxThirdPersonMovie::CameraSplitOffset)
		.def_readwrite("CameraSplitSpread", &UWillowGFxThirdPersonMovie::CameraSplitSpread)
		.def_readwrite("CameraFocusBoneName", &UWillowGFxThirdPersonMovie::CameraFocusBoneName, py::return_value_policy::reference)
		.def_readwrite("CameraFocusYaw", &UWillowGFxThirdPersonMovie::CameraFocusYaw)
		.def_readwrite("LastCameraPitchTime", &UWillowGFxThirdPersonMovie::LastCameraPitchTime)
		.def_readwrite("MenuYaw", &UWillowGFxThirdPersonMovie::MenuYaw)
		.def_readwrite("MenuPitch", &UWillowGFxThirdPersonMovie::MenuPitch)
		.def_readwrite("MenuRotation", &UWillowGFxThirdPersonMovie::MenuRotation, py::return_value_policy::reference)
		.def_readwrite("MenuLocation", &UWillowGFxThirdPersonMovie::MenuLocation, py::return_value_policy::reference)
		.def_readwrite("CloseTime", &UWillowGFxThirdPersonMovie::CloseTime)
		.def_readwrite("CloseCamLoc", &UWillowGFxThirdPersonMovie::CloseCamLoc, py::return_value_policy::reference)
		.def_readwrite("CloseCamRot", &UWillowGFxThirdPersonMovie::CloseCamRot, py::return_value_policy::reference)
		.def_readwrite("MenuSpringYaw", &UWillowGFxThirdPersonMovie::MenuSpringYaw)
		.def_readwrite("MenuSpringPitch", &UWillowGFxThirdPersonMovie::MenuSpringPitch)
		.def_readwrite("MenuSpringRotation", &UWillowGFxThirdPersonMovie::MenuSpringRotation, py::return_value_policy::reference)
		.def_readwrite("DragMouseLoc_Camera", &UWillowGFxThirdPersonMovie::DragMouseLoc_Camera, py::return_value_policy::reference)
		.def_readwrite("MouseDragScale_Camera", &UWillowGFxThirdPersonMovie::MouseDragScale_Camera)
		.def_readwrite("MouseDrag_Region_Left", &UWillowGFxThirdPersonMovie::MouseDrag_Region_Left)
		.def_readwrite("MouseDrag_Region_Right", &UWillowGFxThirdPersonMovie::MouseDrag_Region_Right)
		.def_readwrite("MouseDrag_Region_Top", &UWillowGFxThirdPersonMovie::MouseDrag_Region_Top)
		.def_readwrite("MouseDrag_Region_Bottom", &UWillowGFxThirdPersonMovie::MouseDrag_Region_Bottom)
		.def("HandleMouseDrag_Camera", &UWillowGFxThirdPersonMovie::HandleMouseDrag_Camera)
		.def("Get3DRotationOffset", &UWillowGFxThirdPersonMovie::Get3DRotationOffset, py::return_value_policy::reference)
		.def("Get3DLocationOffset", &UWillowGFxThirdPersonMovie::Get3DLocationOffset, py::return_value_policy::reference)
		.def("ToggleControlMode", &UWillowGFxThirdPersonMovie::ToggleControlMode)
		.def("EnableControl", &UWillowGFxThirdPersonMovie::EnableControl)
		.def("SaveTabView", &UWillowGFxThirdPersonMovie::SaveTabView)
		.def("StopMouseDrag", &UWillowGFxThirdPersonMovie::StopMouseDrag)
		.def("TryStartMouseDrag", &UWillowGFxThirdPersonMovie::TryStartMouseDrag)
		.def("HandleKeyDefaults", &UWillowGFxThirdPersonMovie::HandleKeyDefaults)
		.def("HandleInputAxisPlayerCameraRotation", &UWillowGFxThirdPersonMovie::HandleInputAxisPlayerCameraRotation)
		.def("HandleCameraInputAxis", &UWillowGFxThirdPersonMovie::HandleCameraInputAxis)
		.def("UpdateDesiredCameraPosition", &UWillowGFxThirdPersonMovie::UpdateDesiredCameraPosition)
		.def("eventOnClose", &UWillowGFxThirdPersonMovie::eventOnClose)
		.def("eventFinishClosing", &UWillowGFxThirdPersonMovie::eventFinishClosing)
		.def("eventBeginClosing", &UWillowGFxThirdPersonMovie::eventBeginClosing)
		.def("eventGetCurrentTab", &UWillowGFxThirdPersonMovie::eventGetCurrentTab)
		.def("eventStart", &UWillowGFxThirdPersonMovie::eventStart)
		.def("AmITheStatusMenu", &UWillowGFxThirdPersonMovie::AmITheStatusMenu)
		;
	py::class_< UCustomizationGFxMovie, UWillowGFxThirdPersonMovie >(m, "UCustomizationGFxMovie")
		.def_property("bSelectingFromList", [](UCustomizationGFxMovie &self){return self.bSelectingFromList;}, [](UCustomizationGFxMovie &self, bool value){self.bSelectingFromList = value ? 1 : 0;})
		.def_property("bHasSpentSkillPoints", [](UCustomizationGFxMovie &self){return self.bHasSpentSkillPoints;}, [](UCustomizationGFxMovie &self, bool value){self.bHasSpentSkillPoints = value ? 1 : 0;})
		.def_readwrite("CharacterCustomizationMenu", &UCustomizationGFxMovie::CharacterCustomizationMenu, py::return_value_policy::reference)
		.def_readwrite("CharacterCustomizationInfoCard", &UCustomizationGFxMovie::CharacterCustomizationInfoCard, py::return_value_policy::reference)
		.def_readwrite("HeadCustomizations", &UCustomizationGFxMovie::HeadCustomizations, py::return_value_policy::reference)
		.def_readwrite("SeenHeadCustomizations", &UCustomizationGFxMovie::SeenHeadCustomizations, py::return_value_policy::reference)
		.def_readwrite("SkinCustomizations", &UCustomizationGFxMovie::SkinCustomizations, py::return_value_policy::reference)
		.def_readwrite("SeenSkinCustomizations", &UCustomizationGFxMovie::SeenSkinCustomizations, py::return_value_policy::reference)
		.def_readwrite("EquippedHeadCustomization", &UCustomizationGFxMovie::EquippedHeadCustomization, py::return_value_policy::reference)
		.def_readwrite("EquippedSkinCustomization", &UCustomizationGFxMovie::EquippedSkinCustomization, py::return_value_policy::reference)
		.def_readwrite("PreviewHeadCustomization", &UCustomizationGFxMovie::PreviewHeadCustomization, py::return_value_policy::reference)
		.def_readwrite("PreviewSkinCustomization", &UCustomizationGFxMovie::PreviewSkinCustomization, py::return_value_policy::reference)
		.def_readwrite("SelectedEntryIdx", &UCustomizationGFxMovie::SelectedEntryIdx)
		.def_readwrite("StringPreKeyboardUI", &UCustomizationGFxMovie::StringPreKeyboardUI, py::return_value_policy::reference)
		.def_readwrite("MaxNameLength", &UCustomizationGFxMovie::MaxNameLength)
		.def_readwrite("HeaderText", &UCustomizationGFxMovie::HeaderText, py::return_value_policy::reference)
		.def_readwrite("NoValidHeadCaption", &UCustomizationGFxMovie::NoValidHeadCaption, py::return_value_policy::reference)
		.def_readwrite("NoValidSkinCaption", &UCustomizationGFxMovie::NoValidSkinCaption, py::return_value_policy::reference)
		.def_readwrite("UnlockedText", &UCustomizationGFxMovie::UnlockedText, py::return_value_policy::reference)
		.def_readwrite("UnlockedHeadsNumbersText", &UCustomizationGFxMovie::UnlockedHeadsNumbersText, py::return_value_policy::reference)
		.def_readwrite("UnlockedSkinsNumbersText", &UCustomizationGFxMovie::UnlockedSkinsNumbersText, py::return_value_policy::reference)
		.def_readwrite("TooltipsPath", &UCustomizationGFxMovie::TooltipsPath, py::return_value_policy::reference)
		.def_readwrite("PreviewIndex", &UCustomizationGFxMovie::PreviewIndex)
		.def_readwrite("PreviewType", &UCustomizationGFxMovie::PreviewType, py::return_value_policy::reference)
		.def_readwrite("UnauthorizedHeadCustomizations", &UCustomizationGFxMovie::UnauthorizedHeadCustomizations, py::return_value_policy::reference)
		.def_readwrite("UnauthorizedSkinCustomizations", &UCustomizationGFxMovie::UnauthorizedSkinCustomizations, py::return_value_policy::reference)
		.def_readwrite("PotentialCustomizationForPurchase", &UCustomizationGFxMovie::PotentialCustomizationForPurchase, py::return_value_policy::reference)
		.def("MarketplaceDownloadComplete", &UCustomizationGFxMovie::MarketplaceDownloadComplete)
		.def("extGenericButtonClicked", &UCustomizationGFxMovie::extGenericButtonClicked)
		.def("InitForConsole", &UCustomizationGFxMovie::InitForConsole)
		.def("InitForPC", &UCustomizationGFxMovie::InitForPC)
		.def("eventGetCurrentTab", &UCustomizationGFxMovie::eventGetCurrentTab)
		.def("extInitSkinInfoCard", &UCustomizationGFxMovie::extInitSkinInfoCard)
		.def("extInitHeadInfoCard", &UCustomizationGFxMovie::extInitHeadInfoCard)
		.def("extInitRespecInfoCard", &UCustomizationGFxMovie::extInitRespecInfoCard)
		.def("extInitNameInfoCard", &UCustomizationGFxMovie::extInitNameInfoCard)
		.def("extInitPlayerClassDisplay", &UCustomizationGFxMovie::extInitPlayerClassDisplay)
		.def("SetToolTipsForPurchase", &UCustomizationGFxMovie::SetToolTipsForPurchase)
		.def("SetTooltips", &UCustomizationGFxMovie::SetTooltips)
		.def("extCharacterCustomizationOnLoad", &UCustomizationGFxMovie::extCharacterCustomizationOnLoad)
		.def("ValidatePlayerName", &UCustomizationGFxMovie::ValidatePlayerName)
		.def("SetPlayerName", &UCustomizationGFxMovie::SetPlayerName)
		.def("OnPlayerNameInputFinished", &UCustomizationGFxMovie::OnPlayerNameInputFinished)
		.def("InputName", &UCustomizationGFxMovie::InputName)
		.def("OnCurrencyChanged", &UCustomizationGFxMovie::OnCurrencyChanged)
		.def("OnSkillTreeReset", &UCustomizationGFxMovie::OnSkillTreeReset)
		.def("SetUnlockedText_Skins", &UCustomizationGFxMovie::SetUnlockedText_Skins)
		.def("SetUnlockedText_Heads", &UCustomizationGFxMovie::SetUnlockedText_Heads)
		.def("UpdateInfoCard", &UCustomizationGFxMovie::UpdateInfoCard)
		.def("UpdateSkinPreview", &UCustomizationGFxMovie::UpdateSkinPreview)
		.def("UpdateHeadPreview", &UCustomizationGFxMovie::UpdateHeadPreview)
		.def("CancelSkinCustomization", &UCustomizationGFxMovie::CancelSkinCustomization)
		.def("CancelHeadCustomization", &UCustomizationGFxMovie::CancelHeadCustomization)
		.def("OnPurchaseCanceled", &UCustomizationGFxMovie::OnPurchaseCanceled)
		.def("OnPurchaseRequest", &UCustomizationGFxMovie::OnPurchaseRequest)
		.def("ShowMarketplaceOfferFor", &UCustomizationGFxMovie::ShowMarketplaceOfferFor)
		.def("CommitSkinCustomization", &UCustomizationGFxMovie::CommitSkinCustomization)
		.def("CommitHeadCustomization", &UCustomizationGFxMovie::CommitHeadCustomization)
		.def("HandleCustomizationEvent", &UCustomizationGFxMovie::HandleCustomizationEvent)
		.def("UsingGamepad", &UCustomizationGFxMovie::UsingGamepad)
		.def("HandleMenuEntryRollOver", &UCustomizationGFxMovie::HandleMenuEntryRollOver)
		.def("HandleMenuEntryFocus", &UCustomizationGFxMovie::HandleMenuEntryFocus)
		.def("HandleMenuEntryClick", &UCustomizationGFxMovie::HandleMenuEntryClick)
		.def("CacheCustomizations", &UCustomizationGFxMovie::CacheCustomizations)
		.def("CacheSkillBranchDescriptions", &UCustomizationGFxMovie::CacheSkillBranchDescriptions)
		.def("MainInputKey", &UCustomizationGFxMovie::MainInputKey)
		.def("OnClose", &UCustomizationGFxMovie::OnClose)
		.def("BeginClosing", &UCustomizationGFxMovie::BeginClosing)
		.def("eventStart", &UCustomizationGFxMovie::eventStart)
		.def("GetSonyTitleID", &UCustomizationGFxMovie::GetSonyTitleID, py::return_value_policy::reference)
		.def("GetOfferIdForCustomization", [](UCustomizationGFxMovie &self , class UCustomizationDefinition* Customization) { int* pyOfferIdForCustomization = (int*)malloc(sizeof(int)) ;  bool ret =  self.GetOfferIdForCustomization(Customization, pyOfferIdForCustomization); return py::make_tuple(ret, *pyOfferIdForCustomization); })
		.def("ShowPurchaseDialog", [](UCustomizationGFxMovie &self , class AWillowPlayerController* WPC, struct FScriptDelegate PurchaseRequested, struct FScriptDelegate PurchaseCanceled) { class UWillowGFxDialogBox** pyDialogOwner = 0 ;  bool ret =  self.ShowPurchaseDialog(WPC, PurchaseRequested, PurchaseCanceled, pyDialogOwner); return py::make_tuple(ret, *pyDialogOwner); })
		;
	py::class_< UFastTravelStationGFxMovie, UWillowGFxThirdPersonMovie >(m, "UFastTravelStationGFxMovie")
		.def_readwrite("LocationDisplayNames", &UFastTravelStationGFxMovie::LocationDisplayNames, py::return_value_policy::reference)
		.def_readwrite("LocationStationStrings", &UFastTravelStationGFxMovie::LocationStationStrings, py::return_value_policy::reference)
		.def_readwrite("LocationStationDefinitions", &UFastTravelStationGFxMovie::LocationStationDefinitions, py::return_value_policy::reference)
		.def_readwrite("CurrentWaypointStationDef", &UFastTravelStationGFxMovie::CurrentWaypointStationDef, py::return_value_policy::reference)
		.def_readwrite("FastTravelClip", &UFastTravelStationGFxMovie::FastTravelClip, py::return_value_policy::reference)
		.def_readwrite("InitialSelectionIndex", &UFastTravelStationGFxMovie::InitialSelectionIndex)
		.def_readwrite("SortMode", &UFastTravelStationGFxMovie::SortMode)
		.def_readwrite("LocationsHeader", &UFastTravelStationGFxMovie::LocationsHeader, py::return_value_policy::reference)
		.def_readwrite("LocationsHeaderAlphabetical", &UFastTravelStationGFxMovie::LocationsHeaderAlphabetical, py::return_value_policy::reference)
		.def_readwrite("LocationMissionTeaserHeader", &UFastTravelStationGFxMovie::LocationMissionTeaserHeader, py::return_value_policy::reference)
		.def_readwrite("LocationMissionTeaser", &UFastTravelStationGFxMovie::LocationMissionTeaser, py::return_value_policy::reference)
		.def_readwrite("NextWaypointCheckTime", &UFastTravelStationGFxMovie::NextWaypointCheckTime)
		.def_readwrite("LastSelectionIndex", &UFastTravelStationGFxMovie::LastSelectionIndex)
		.def("eventSetCurrentWaypoint", &UFastTravelStationGFxMovie::eventSetCurrentWaypoint)
		.def("extGenericButtonClicked", &UFastTravelStationGFxMovie::extGenericButtonClicked)
		.def("InitForConsole", &UFastTravelStationGFxMovie::InitForConsole)
		.def("InitForPC", &UFastTravelStationGFxMovie::InitForPC)
		.def("extRequestLocationMissionData", &UFastTravelStationGFxMovie::extRequestLocationMissionData)
		.def("extRegisterMapLocationBlob", &UFastTravelStationGFxMovie::extRegisterMapLocationBlob)
		.def("extEnterTeleportScreen", &UFastTravelStationGFxMovie::extEnterTeleportScreen)
		.def("extActivate", &UFastTravelStationGFxMovie::extActivate)
		.def("eventBeginClosing", &UFastTravelStationGFxMovie::eventBeginClosing)
		.def("extPlayItemChangeSound", &UFastTravelStationGFxMovie::extPlayItemChangeSound)
		.def("BuildDLCMapLocations", &UFastTravelStationGFxMovie::BuildDLCMapLocations)
		.def("ProcessDLCMovies", &UFastTravelStationGFxMovie::ProcessDLCMovies)
		.def("GetFastTravelHeader", &UFastTravelStationGFxMovie::GetFastTravelHeader, py::return_value_policy::reference)
		.def("HandleInputKey", &UFastTravelStationGFxMovie::HandleInputKey)
		.def("BuildMissionDataForLocation", &UFastTravelStationGFxMovie::BuildMissionDataForLocation)
		.def("BuildLocationData", &UFastTravelStationGFxMovie::BuildLocationData)
		.def("eventOnClose", &UFastTravelStationGFxMovie::eventOnClose)
		.def("HandleOpen", &UFastTravelStationGFxMovie::HandleOpen)
		;
	py::class_< UWillowInventoryGFxMovie, UWillowGFxThirdPersonMovie >(m, "UWillowInventoryGFxMovie")
		.def_readwrite("RTM", &UWillowInventoryGFxMovie::RTM, py::return_value_policy::reference)
		.def_readwrite("CardContents", &UWillowInventoryGFxMovie::CardContents, py::return_value_policy::reference)
		.def_readwrite("FrozenThing", &UWillowInventoryGFxMovie::FrozenThing, py::return_value_policy::reference)
		.def_readwrite("FrozenThingType", &UWillowInventoryGFxMovie::FrozenThingType)
		.def_readwrite("UsedInvTypes", &UWillowInventoryGFxMovie::UsedInvTypes, py::return_value_policy::reference)
		.def_readwrite("MyInventoryDef", &UWillowInventoryGFxMovie::MyInventoryDef, py::return_value_policy::reference)
		.def_readwrite("WInvMgr", &UWillowInventoryGFxMovie::WInvMgr, py::return_value_policy::reference)
		.def("GetPlayerThings", &UWillowInventoryGFxMovie::GetPlayerThings)
		.def("GetTotalCredits", &UWillowInventoryGFxMovie::GetTotalCredits)
		.def("EvaluateCurrentSelection", &UWillowInventoryGFxMovie::EvaluateCurrentSelection)
		.def("OnPanelRollOver", &UWillowInventoryGFxMovie::OnPanelRollOver)
		.def("GetEquippedAnalogue", &UWillowInventoryGFxMovie::GetEquippedAnalogue, py::return_value_policy::reference)
		.def("PressedHotkeyNumber", &UWillowInventoryGFxMovie::PressedHotkeyNumber)
		.def("OnInventoryPanelSetActive", &UWillowInventoryGFxMovie::OnInventoryPanelSetActive)
		.def("GetNextSortConfiguration", &UWillowInventoryGFxMovie::GetNextSortConfiguration)
		.def("GetPlayerPanelItems", &UWillowInventoryGFxMovie::GetPlayerPanelItems)
		.def("FillOutListOfPlayerThings", &UWillowInventoryGFxMovie::FillOutListOfPlayerThings)
		.def("HandleInputKey", &UWillowInventoryGFxMovie::HandleInputKey)
		.def("eventOnClose", &UWillowInventoryGFxMovie::eventOnClose)
		.def("eventStart", &UWillowInventoryGFxMovie::eventStart)
		;
	py::class_< UStatusMenuExGFxMovie, UWillowInventoryGFxMovie >(m, "UStatusMenuExGFxMovie")
		.def_property("bShowWorldMissions", [](UStatusMenuExGFxMovie &self){return self.bShowWorldMissions;}, [](UStatusMenuExGFxMovie &self, bool value){self.bShowWorldMissions = value ? 1 : 0;})
		.def_property("bOnLeftSide", [](UStatusMenuExGFxMovie &self){return self.bOnLeftSide;}, [](UStatusMenuExGFxMovie &self, bool value){self.bOnLeftSide = value ? 1 : 0;})
		.def_property("bFullyOpened", [](UStatusMenuExGFxMovie &self){return self.bFullyOpened;}, [](UStatusMenuExGFxMovie &self, bool value){self.bFullyOpened = value ? 1 : 0;})
		.def_property("bHasScreenToCleanup", [](UStatusMenuExGFxMovie &self){return self.bHasScreenToCleanup;}, [](UStatusMenuExGFxMovie &self, bool value){self.bHasScreenToCleanup = value ? 1 : 0;})
		.def_property("bMissionUpdated", [](UStatusMenuExGFxMovie &self){return self.bMissionUpdated;}, [](UStatusMenuExGFxMovie &self, bool value){self.bMissionUpdated = value ? 1 : 0;})
		.def_property("bHasReadiableWeapon", [](UStatusMenuExGFxMovie &self){return self.bHasReadiableWeapon;}, [](UStatusMenuExGFxMovie &self, bool value){self.bHasReadiableWeapon = value ? 1 : 0;})
		.def_property("bHasReadiableShield", [](UStatusMenuExGFxMovie &self){return self.bHasReadiableShield;}, [](UStatusMenuExGFxMovie &self, bool value){self.bHasReadiableShield = value ? 1 : 0;})
		.def_property("bHasReadiableGrenadeMod", [](UStatusMenuExGFxMovie &self){return self.bHasReadiableGrenadeMod;}, [](UStatusMenuExGFxMovie &self, bool value){self.bHasReadiableGrenadeMod = value ? 1 : 0;})
		.def_property("bHasReadiableClassMod", [](UStatusMenuExGFxMovie &self){return self.bHasReadiableClassMod;}, [](UStatusMenuExGFxMovie &self, bool value){self.bHasReadiableClassMod = value ? 1 : 0;})
		.def_property("bHasReadiableArtifact", [](UStatusMenuExGFxMovie &self){return self.bHasReadiableArtifact;}, [](UStatusMenuExGFxMovie &self, bool value){self.bHasReadiableArtifact = value ? 1 : 0;})
		.def_property("bInListView", [](UStatusMenuExGFxMovie &self){return self.bInListView;}, [](UStatusMenuExGFxMovie &self, bool value){self.bInListView = value ? 1 : 0;})
		.def_property("bContextMenuUp", [](UStatusMenuExGFxMovie &self){return self.bContextMenuUp;}, [](UStatusMenuExGFxMovie &self, bool value){self.bContextMenuUp = value ? 1 : 0;})
		.def_property("bDisplayMarketingUnlockDialogOnNextTick", [](UStatusMenuExGFxMovie &self){return self.bDisplayMarketingUnlockDialogOnNextTick;}, [](UStatusMenuExGFxMovie &self, bool value){self.bDisplayMarketingUnlockDialogOnNextTick = value ? 1 : 0;})
		.def_property("bDraggingMouse", [](UStatusMenuExGFxMovie &self){return self.bDraggingMouse;}, [](UStatusMenuExGFxMovie &self, bool value){self.bDraggingMouse = value ? 1 : 0;})
		.def_property("bShouldSaveGame", [](UStatusMenuExGFxMovie &self){return self.bShouldSaveGame;}, [](UStatusMenuExGFxMovie &self, bool value){self.bShouldSaveGame = value ? 1 : 0;})
		.def_readwrite("StatusDef", &UStatusMenuExGFxMovie::StatusDef, py::return_value_policy::reference)
		.def_readwrite("SkillDef", &UStatusMenuExGFxMovie::SkillDef, py::return_value_policy::reference)
		.def_readwrite("InventoryTabString", &UStatusMenuExGFxMovie::InventoryTabString, py::return_value_policy::reference)
		.def_readwrite("LogTabString", &UStatusMenuExGFxMovie::LogTabString, py::return_value_policy::reference)
		.def_readwrite("MapTabString", &UStatusMenuExGFxMovie::MapTabString, py::return_value_policy::reference)
		.def_readwrite("LevelString", &UStatusMenuExGFxMovie::LevelString, py::return_value_policy::reference)
		.def_readwrite("XPString", &UStatusMenuExGFxMovie::XPString, py::return_value_policy::reference)
		.def_readwrite("NextString", &UStatusMenuExGFxMovie::NextString, py::return_value_policy::reference)
		.def_readwrite("PoweredByString", &UStatusMenuExGFxMovie::PoweredByString, py::return_value_policy::reference)
		.def_readwrite("NoMissionsString", &UStatusMenuExGFxMovie::NoMissionsString, py::return_value_policy::reference)
		.def_readwrite("NoClassModString", &UStatusMenuExGFxMovie::NoClassModString, py::return_value_policy::reference)
		.def_readwrite("EmptyInventorySlotText", &UStatusMenuExGFxMovie::EmptyInventorySlotText, py::return_value_policy::reference)
		.def_readwrite("AlreadyEquipped", &UStatusMenuExGFxMovie::AlreadyEquipped, py::return_value_policy::reference)
		.def_readwrite("Leg_Trans", &UStatusMenuExGFxMovie::Leg_Trans, py::return_value_policy::reference)
		.def_readwrite("Leg_Outpost", &UStatusMenuExGFxMovie::Leg_Outpost, py::return_value_policy::reference)
		.def_readwrite("Leg_POI", &UStatusMenuExGFxMovie::Leg_POI, py::return_value_policy::reference)
		.def_readwrite("Leg_Player", &UStatusMenuExGFxMovie::Leg_Player, py::return_value_policy::reference)
		.def_readwrite("Leg_Buddy", &UStatusMenuExGFxMovie::Leg_Buddy, py::return_value_policy::reference)
		.def_readwrite("Leg_Waypoint", &UStatusMenuExGFxMovie::Leg_Waypoint, py::return_value_policy::reference)
		.def_readwrite("Leg_Vss", &UStatusMenuExGFxMovie::Leg_Vss, py::return_value_policy::reference)
		.def_readwrite("Leg_BB", &UStatusMenuExGFxMovie::Leg_BB, py::return_value_policy::reference)
		.def_readwrite("Leg_Health", &UStatusMenuExGFxMovie::Leg_Health, py::return_value_policy::reference)
		.def_readwrite("Leg_Shop", &UStatusMenuExGFxMovie::Leg_Shop, py::return_value_policy::reference)
		.def_readwrite("Leg_Unknown", &UStatusMenuExGFxMovie::Leg_Unknown, py::return_value_policy::reference)
		.def_readwrite("Leg_Vehicle", &UStatusMenuExGFxMovie::Leg_Vehicle, py::return_value_policy::reference)
		.def_readwrite("Leg_CustomWaypoint", &UStatusMenuExGFxMovie::Leg_CustomWaypoint, py::return_value_policy::reference)
		.def_readwrite("Leg_Customization", &UStatusMenuExGFxMovie::Leg_Customization, py::return_value_policy::reference)
		.def_readwrite("MissionLogTooltip_Replay", &UStatusMenuExGFxMovie::MissionLogTooltip_Replay, py::return_value_policy::reference)
		.def_readwrite("MissionLogTooltip_Track", &UStatusMenuExGFxMovie::MissionLogTooltip_Track, py::return_value_policy::reference)
		.def_readwrite("MissionLogTooltip_Scroll", &UStatusMenuExGFxMovie::MissionLogTooltip_Scroll, py::return_value_policy::reference)
		.def_readwrite("MissionLogTooltip_Sort", &UStatusMenuExGFxMovie::MissionLogTooltip_Sort, py::return_value_policy::reference)
		.def_readwrite("MissionLogTooltip_ViewWorldMissions", &UStatusMenuExGFxMovie::MissionLogTooltip_ViewWorldMissions, py::return_value_policy::reference)
		.def_readwrite("MissionLogTooltip_ViewMyMissions", &UStatusMenuExGFxMovie::MissionLogTooltip_ViewMyMissions, py::return_value_policy::reference)
		.def_readwrite("MissionLogTooltip_Ignore", &UStatusMenuExGFxMovie::MissionLogTooltip_Ignore, py::return_value_policy::reference)
		.def_readwrite("MissionLogTooltip_Unignore", &UStatusMenuExGFxMovie::MissionLogTooltip_Unignore, py::return_value_policy::reference)
		.def_readwrite("MissionLogTooltip_Cancel", &UStatusMenuExGFxMovie::MissionLogTooltip_Cancel, py::return_value_policy::reference)
		.def_readwrite("ClientMissions", &UStatusMenuExGFxMovie::ClientMissions, py::return_value_policy::reference)
		.def_readwrite("ClientActiveMissionIndex", &UStatusMenuExGFxMovie::ClientActiveMissionIndex)
		.def_readwrite("WorldMissions", &UStatusMenuExGFxMovie::WorldMissions, py::return_value_policy::reference)
		.def_readwrite("MissionSortType", &UStatusMenuExGFxMovie::MissionSortType)
		.def_readwrite("CurrentScreen", &UStatusMenuExGFxMovie::CurrentScreen)
		.def_readwrite("MaxCapacity", &UStatusMenuExGFxMovie::MaxCapacity)
		.def_readwrite("SlotsUsed", &UStatusMenuExGFxMovie::SlotsUsed)
		.def_readwrite("InventoryRefreshRate", &UStatusMenuExGFxMovie::InventoryRefreshRate)
		.def_readwrite("CachedMaxCapacity", &UStatusMenuExGFxMovie::CachedMaxCapacity)
		.def_readwrite("NewSlots", &UStatusMenuExGFxMovie::NewSlots)
		.def_readwrite("CachedMaxReadied", &UStatusMenuExGFxMovie::CachedMaxReadied)
		.def_readwrite("MaxReadiedWeapons", &UStatusMenuExGFxMovie::MaxReadiedWeapons)
		.def_readwrite("CachedInventory", &UStatusMenuExGFxMovie::CachedInventory, py::return_value_policy::reference)
		.def_readwrite("SkillTreePanel", &UStatusMenuExGFxMovie::SkillTreePanel, py::return_value_policy::reference)
		.def_readwrite("StatusMenuMap", &UStatusMenuExGFxMovie::StatusMenuMap, py::return_value_policy::reference)
		.def_readwrite("BackpackThings", &UStatusMenuExGFxMovie::BackpackThings, py::return_value_policy::reference)
		.def_readwrite("AllThings", &UStatusMenuExGFxMovie::AllThings, py::return_value_policy::reference)
		.def_readwrite("CurrentCellName", &UStatusMenuExGFxMovie::CurrentCellName, py::return_value_policy::reference)
		.def_readwrite("LastMainAction", &UStatusMenuExGFxMovie::LastMainAction, py::return_value_policy::reference)
		.def_readwrite("PlayerName", &UStatusMenuExGFxMovie::PlayerName, py::return_value_policy::reference)
		.def_readwrite("ChangingCard", &UStatusMenuExGFxMovie::ChangingCard)
		.def_readwrite("UsedManufacturers", &UStatusMenuExGFxMovie::UsedManufacturers, py::return_value_policy::reference)
		.def_readwrite("UsedWeaponTypes", &UStatusMenuExGFxMovie::UsedWeaponTypes, py::return_value_policy::reference)
		.def_readwrite("EquippedLabels", &UStatusMenuExGFxMovie::EquippedLabels, py::return_value_policy::reference)
		.def_readwrite("CompareConfiguration", &UStatusMenuExGFxMovie::CompareConfiguration, py::return_value_policy::reference)
		.def_readwrite("SortConfigurations", &UStatusMenuExGFxMovie::SortConfigurations, py::return_value_policy::reference)
		.def_readwrite("LeftSideSortConfigIndex", &UStatusMenuExGFxMovie::LeftSideSortConfigIndex)
		.def_readwrite("ScreenExitKey", &UStatusMenuExGFxMovie::ScreenExitKey, py::return_value_policy::reference)
		.def_readwrite("MissionLogTextList", &UStatusMenuExGFxMovie::MissionLogTextList, py::return_value_policy::reference)
		.def_readwrite("MissionCategories", &UStatusMenuExGFxMovie::MissionCategories, py::return_value_policy::reference)
		.def_readwrite("MoreArrowsDirection", &UStatusMenuExGFxMovie::MoreArrowsDirection, py::return_value_policy::reference)
		.def_readwrite("MoveHighlightRepeatRate", &UStatusMenuExGFxMovie::MoveHighlightRepeatRate)
		.def_readwrite("DragMouseLoc", &UStatusMenuExGFxMovie::DragMouseLoc, py::return_value_policy::reference)
		.def_readwrite("MouseDragScale", &UStatusMenuExGFxMovie::MouseDragScale)
		.def_readwrite("InventoryPanel", &UStatusMenuExGFxMovie::InventoryPanel, py::return_value_policy::reference)
		.def_readwrite("ChallengesPanel", &UStatusMenuExGFxMovie::ChallengesPanel, py::return_value_policy::reference)
		.def_readwrite("CurrentScreenTime", &UStatusMenuExGFxMovie::CurrentScreenTime)
		.def_readwrite("CurrMapZoomAudioLoopCounter", &UStatusMenuExGFxMovie::CurrMapZoomAudioLoopCounter)
		.def_readwrite("PrevMapZoomAudioLoopCounter", &UStatusMenuExGFxMovie::PrevMapZoomAudioLoopCounter)
		.def_readwrite("MapZoomAudioRefireDelay", &UStatusMenuExGFxMovie::MapZoomAudioRefireDelay)
		.def_readwrite("MapZoomAudioRefireDuration", &UStatusMenuExGFxMovie::MapZoomAudioRefireDuration)
		.def_readwrite("LastMissionLogTickTime", &UStatusMenuExGFxMovie::LastMissionLogTickTime)
		.def_readwrite("TicksUntilPanelSwitchAllowed", &UStatusMenuExGFxMovie::TicksUntilPanelSwitchAllowed)
		.def_readwrite("PCContextMenu", &UStatusMenuExGFxMovie::PCContextMenu, py::return_value_policy::reference)
		.def("TrySwitchToScreen", &UStatusMenuExGFxMovie::TrySwitchToScreen)
		.def("extChallLogDown", &UStatusMenuExGFxMovie::extChallLogDown)
		.def("extChallLogUp", &UStatusMenuExGFxMovie::extChallLogUp)
		.def("extGenericButtonClicked", &UStatusMenuExGFxMovie::extGenericButtonClicked)
		.def("extCellRolledOver", &UStatusMenuExGFxMovie::extCellRolledOver)
		.def("extCellClicked", &UStatusMenuExGFxMovie::extCellClicked)
		.def("EnableControl", &UStatusMenuExGFxMovie::EnableControl)
		.def("extArtifactClose", &UStatusMenuExGFxMovie::extArtifactClose)
		.def("extArtifactSelect", &UStatusMenuExGFxMovie::extArtifactSelect)
		.def("extSkillActivate", &UStatusMenuExGFxMovie::extSkillActivate)
		.def("extHoverSkillCell", &UStatusMenuExGFxMovie::extHoverSkillCell)
		.def("NotifySkillPointsChanged", &UStatusMenuExGFxMovie::NotifySkillPointsChanged)
		.def("InvalidateQuickAccess", &UStatusMenuExGFxMovie::InvalidateQuickAccess)
		.def("SetupSkillTree", &UStatusMenuExGFxMovie::SetupSkillTree)
		.def("PanMap", &UStatusMenuExGFxMovie::PanMap)
		.def("eventHandleMouseDrag", &UStatusMenuExGFxMovie::eventHandleMouseDrag)
		.def("StopMouseDrag", &UStatusMenuExGFxMovie::StopMouseDrag)
		.def("HandleMapZoom", &UStatusMenuExGFxMovie::HandleMapZoom)
		.def("HandleMapInputAxis", &UStatusMenuExGFxMovie::HandleMapInputAxis)
		.def("HandleMapInputKey", &UStatusMenuExGFxMovie::HandleMapInputKey)
		.def("HandleSkillsInputKey", &UStatusMenuExGFxMovie::HandleSkillsInputKey)
		.def("CanToggleMissionView", &UStatusMenuExGFxMovie::CanToggleMissionView)
		.def("CanShowWorldMissionView", &UStatusMenuExGFxMovie::CanShowWorldMissionView)
		.def("CanShowClientMissionView", &UStatusMenuExGFxMovie::CanShowClientMissionView)
		.def("HandleInputKey", &UStatusMenuExGFxMovie::HandleInputKey)
		.def("GotoNextTab", &UStatusMenuExGFxMovie::GotoNextTab)
		.def("GotoPrevTab", &UStatusMenuExGFxMovie::GotoPrevTab)
		.def("HasVehicleRestrictions", &UStatusMenuExGFxMovie::HasVehicleRestrictions)
		.def("ToggleUndiscoveredMissionVisibility", &UStatusMenuExGFxMovie::ToggleUndiscoveredMissionVisibility)
		.def("RepositionMissionLog", &UStatusMenuExGFxMovie::RepositionMissionLog)
		.def("OnMissionFilteredChanged", &UStatusMenuExGFxMovie::OnMissionFilteredChanged)
		.def("ToggleMissionFiltered", &UStatusMenuExGFxMovie::ToggleMissionFiltered)
		.def("IsHighlightedMissionFiltered", &UStatusMenuExGFxMovie::IsHighlightedMissionFiltered)
		.def("CanToggleHighlightedMissionFilter", &UStatusMenuExGFxMovie::CanToggleHighlightedMissionFilter)
		.def("extStatusMenuMapPostMapMovieLoad", &UStatusMenuExGFxMovie::extStatusMenuMapPostMapMovieLoad)
		.def("UpdateMousePositionForMap", &UStatusMenuExGFxMovie::UpdateMousePositionForMap)
		.def("extStatusMenuMapOnLoad", &UStatusMenuExGFxMovie::extStatusMenuMapOnLoad)
		.def("ShowPopupModal", &UStatusMenuExGFxMovie::ShowPopupModal)
		.def("ShowPopup", &UStatusMenuExGFxMovie::ShowPopup)
		.def("extSetupNoMissionsPage", &UStatusMenuExGFxMovie::extSetupNoMissionsPage)
		.def("GotoRegularMissions", &UStatusMenuExGFxMovie::GotoRegularMissions)
		.def("GotoNoMissions", &UStatusMenuExGFxMovie::GotoNoMissions)
		.def("ResetScroll", &UStatusMenuExGFxMovie::ResetScroll)
		.def("UpdateActiveMissionIcon", &UStatusMenuExGFxMovie::UpdateActiveMissionIcon)
		.def("OnActiveMissionChanged", &UStatusMenuExGFxMovie::OnActiveMissionChanged)
		.def("HitEnterOnLog", &UStatusMenuExGFxMovie::HitEnterOnLog)
		.def("ScrollSidePanel", &UStatusMenuExGFxMovie::ScrollSidePanel)
		.def("SetDescriptionScrollValue", &UStatusMenuExGFxMovie::SetDescriptionScrollValue)
		.def("extSetDescriptionScrollValue", &UStatusMenuExGFxMovie::extSetDescriptionScrollValue)
		.def("extChallListTrack", &UStatusMenuExGFxMovie::extChallListTrack)
		.def("extChallListRollOver", &UStatusMenuExGFxMovie::extChallListRollOver)
		.def("extLogListTrack", &UStatusMenuExGFxMovie::extLogListTrack)
		.def("extLogListRollOver", &UStatusMenuExGFxMovie::extLogListRollOver)
		.def("extLogDown", &UStatusMenuExGFxMovie::extLogDown)
		.def("LogDown", &UStatusMenuExGFxMovie::LogDown)
		.def("extLogUp", &UStatusMenuExGFxMovie::extLogUp)
		.def("LogUp", &UStatusMenuExGFxMovie::LogUp)
		.def("SetLevelAndDifficulty", &UStatusMenuExGFxMovie::SetLevelAndDifficulty)
		.def("SetRewardsItem", &UStatusMenuExGFxMovie::SetRewardsItem)
		.def("SetRewardsXP", &UStatusMenuExGFxMovie::SetRewardsXP)
		.def("SetPlayerXP", &UStatusMenuExGFxMovie::SetPlayerXP)
		.def("SetPlayerLevel", &UStatusMenuExGFxMovie::SetPlayerLevel)
		.def("SetRewardsTotalOtherCurrency", &UStatusMenuExGFxMovie::SetRewardsTotalOtherCurrency)
		.def("SetRewardsTotalCredits", &UStatusMenuExGFxMovie::SetRewardsTotalCredits)
		.def("SetPlayerDisplayedEridium", &UStatusMenuExGFxMovie::SetPlayerDisplayedEridium)
		.def("SetPlayerTotalEridium", &UStatusMenuExGFxMovie::SetPlayerTotalEridium)
		.def("SetPlayerDisplayedCredits", &UStatusMenuExGFxMovie::SetPlayerDisplayedCredits)
		.def("SetPlayerTotalCredits", &UStatusMenuExGFxMovie::SetPlayerTotalCredits)
		.def("SetRewardCard", &UStatusMenuExGFxMovie::SetRewardCard)
		.def("SetInnerReward", &UStatusMenuExGFxMovie::SetInnerReward)
		.def("GetRewardPresentations", &UStatusMenuExGFxMovie::GetRewardPresentations, py::return_value_policy::reference)
		.def("SetScrollArrows", &UStatusMenuExGFxMovie::SetScrollArrows)
		.def("eventUpdateGeneralDetails", &UStatusMenuExGFxMovie::eventUpdateGeneralDetails)
		.def("GetRightMostDelimited", &UStatusMenuExGFxMovie::GetRightMostDelimited, py::return_value_policy::reference)
		.def("UpdateMissionDetails", &UStatusMenuExGFxMovie::UpdateMissionDetails)
		.def("OnMissionObjectivesChanged", &UStatusMenuExGFxMovie::OnMissionObjectivesChanged)
		.def("SetActiveMission", &UStatusMenuExGFxMovie::SetActiveMission)
		.def("UpdateListOfMissionTitles", &UStatusMenuExGFxMovie::UpdateListOfMissionTitles)
		.def("FilterMissions", &UStatusMenuExGFxMovie::FilterMissions)
		.def("StaticFilterMissions", &UStatusMenuExGFxMovie::StaticFilterMissions)
		.def("GetHighestPlotMissionDependency", &UStatusMenuExGFxMovie::GetHighestPlotMissionDependency, py::return_value_policy::reference)
		.def("ArePlotMissionsInSequence", &UStatusMenuExGFxMovie::ArePlotMissionsInSequence)
		.def("GetHighestChainedPlotMissionCompleted", &UStatusMenuExGFxMovie::GetHighestChainedPlotMissionCompleted, py::return_value_policy::reference)
		.def("AllSideMissionDependenciesComplete", &UStatusMenuExGFxMovie::AllSideMissionDependenciesComplete)
		.def("GetUndiscoveredMissions", &UStatusMenuExGFxMovie::GetUndiscoveredMissions)
		.def("eventGetAllUndiscoveredMissions", &UStatusMenuExGFxMovie::eventGetAllUndiscoveredMissions)
		.def("GetFirstMissionNumber", &UStatusMenuExGFxMovie::GetFirstMissionNumber)
		.def("UpdateMissionTextList", &UStatusMenuExGFxMovie::UpdateMissionTextList)
		.def("SetAvailability", &UStatusMenuExGFxMovie::SetAvailability)
		.def("SetupChallengesScreen", &UStatusMenuExGFxMovie::SetupChallengesScreen)
		.def("IsPrimaryHostPlayer", &UStatusMenuExGFxMovie::IsPrimaryHostPlayer)
		.def("extSetupMissionLogScreen", &UStatusMenuExGFxMovie::extSetupMissionLogScreen)
		.def("OnMissionStatusChanged", &UStatusMenuExGFxMovie::OnMissionStatusChanged)
		.def("ChangeMissionLogSorting", &UStatusMenuExGFxMovie::ChangeMissionLogSorting)
		.def("GetNextMissionSortType", &UStatusMenuExGFxMovie::GetNextMissionSortType)
		.def("eventSetupGenericLogs", &UStatusMenuExGFxMovie::eventSetupGenericLogs)
		.def("SetCellsForWeaponEquipping", &UStatusMenuExGFxMovie::SetCellsForWeaponEquipping)
		.def("EnterCellsView", &UStatusMenuExGFxMovie::EnterCellsView)
		.def("SwitchToCellsView", &UStatusMenuExGFxMovie::SwitchToCellsView)
		.def("EnterListView", &UStatusMenuExGFxMovie::EnterListView)
		.def("SwitchToListView", &UStatusMenuExGFxMovie::SwitchToListView)
		.def("ConditionallyScroll", &UStatusMenuExGFxMovie::ConditionallyScroll)
		.def("MoveHighlight", &UStatusMenuExGFxMovie::MoveHighlight)
		.def("StopMovingHighlight", &UStatusMenuExGFxMovie::StopMovingHighlight)
		.def("StartMovingHighlight", &UStatusMenuExGFxMovie::StartMovingHighlight)
		.def("extInventoryListSet", &UStatusMenuExGFxMovie::extInventoryListSet)
		.def("extInventoryListMove", &UStatusMenuExGFxMovie::extInventoryListMove)
		.def("extCellsSet", &UStatusMenuExGFxMovie::extCellsSet)
		.def("IsCellValid", &UStatusMenuExGFxMovie::IsCellValid)
		.def("TryToFindNextValidCell", &UStatusMenuExGFxMovie::TryToFindNextValidCell, py::return_value_policy::reference)
		.def("ProcessCellMove", &UStatusMenuExGFxMovie::ProcessCellMove)
		.def("extInventoryCellMove", &UStatusMenuExGFxMovie::extInventoryCellMove)
		.def("UpdateCardPanel", &UStatusMenuExGFxMovie::UpdateCardPanel)
		.def("AddCell", &UStatusMenuExGFxMovie::AddCell)
		.def("SetDissimilarCells", &UStatusMenuExGFxMovie::SetDissimilarCells)
		.def("FlourishDrop", &UStatusMenuExGFxMovie::FlourishDrop)
		.def("extDropItem", &UStatusMenuExGFxMovie::extDropItem)
		.def("EquipFlourish", &UStatusMenuExGFxMovie::EquipFlourish)
		.def("DetachCell", &UStatusMenuExGFxMovie::DetachCell)
		.def("UpdateCellData", &UStatusMenuExGFxMovie::UpdateCellData)
		.def("FreeCellData", &UStatusMenuExGFxMovie::FreeCellData)
		.def("InitCellData", &UStatusMenuExGFxMovie::InitCellData)
		.def("extContextMenuClicked", &UStatusMenuExGFxMovie::extContextMenuClicked)
		.def("ShowContextMenuWrapper", &UStatusMenuExGFxMovie::ShowContextMenuWrapper)
		.def("ShowContextMenu", &UStatusMenuExGFxMovie::ShowContextMenu)
		.def("Cancel", &UStatusMenuExGFxMovie::Cancel)
		.def("SetSelectedState", &UStatusMenuExGFxMovie::SetSelectedState)
		.def("RestoreAllNormalState", &UStatusMenuExGFxMovie::RestoreAllNormalState)
		.def("DisableCancel", &UStatusMenuExGFxMovie::DisableCancel)
		.def("EnableCancel", &UStatusMenuExGFxMovie::EnableCancel)
		.def("extUpdateBackpackListSize", &UStatusMenuExGFxMovie::extUpdateBackpackListSize)
		.def("PrepareForCompare_Equipped", &UStatusMenuExGFxMovie::PrepareForCompare_Equipped)
		.def("PrepareForCompare_Backpack", &UStatusMenuExGFxMovie::PrepareForCompare_Backpack)
		.def("CleanupCompare", &UStatusMenuExGFxMovie::CleanupCompare)
		.def("extQuitCompare", &UStatusMenuExGFxMovie::extQuitCompare)
		.def("extCard2Visible", &UStatusMenuExGFxMovie::extCard2Visible)
		.def("extCompare", &UStatusMenuExGFxMovie::extCompare)
		.def("GetEquippedCellInventory", &UStatusMenuExGFxMovie::GetEquippedCellInventory, py::return_value_policy::reference)
		.def("GetHighlightedCellEntry", &UStatusMenuExGFxMovie::GetHighlightedCellEntry, py::return_value_policy::reference)
		.def("GetHighlightedRightSideEntry", &UStatusMenuExGFxMovie::GetHighlightedRightSideEntry, py::return_value_policy::reference)
		.def("GetHighlightedLeftSideEntry", &UStatusMenuExGFxMovie::GetHighlightedLeftSideEntry, py::return_value_policy::reference)
		.def("GetCurrentHighlightedObject", &UStatusMenuExGFxMovie::GetCurrentHighlightedObject, py::return_value_policy::reference)
		.def("ClearInventoryRefreshTimer", &UStatusMenuExGFxMovie::ClearInventoryRefreshTimer)
		.def("SetInventoryRefreshTimer", &UStatusMenuExGFxMovie::SetInventoryRefreshTimer)
		.def("RefreshInventoryScreen", &UStatusMenuExGFxMovie::RefreshInventoryScreen)
		.def("HasAnyBackpackOfCorrectType", &UStatusMenuExGFxMovie::HasAnyBackpackOfCorrectType)
		.def("CanSort", &UStatusMenuExGFxMovie::CanSort)
		.def("CanSwap", &UStatusMenuExGFxMovie::CanSwap)
		.def("CanUnready", &UStatusMenuExGFxMovie::CanUnready)
		.def("CanReady", &UStatusMenuExGFxMovie::CanReady)
		.def("CanDrop", &UStatusMenuExGFxMovie::CanDrop)
		.def("CanCompare", &UStatusMenuExGFxMovie::CanCompare)
		.def("SetInventoryTooltipsText", &UStatusMenuExGFxMovie::SetInventoryTooltipsText)
		.def("SetTooltipsText", &UStatusMenuExGFxMovie::SetTooltipsText)
		.def("GetSortString", &UStatusMenuExGFxMovie::GetSortString, py::return_value_policy::reference)
		.def("CanTrackHighlightedMission", &UStatusMenuExGFxMovie::CanTrackHighlightedMission)
		.def("GetCurrentMainAction", &UStatusMenuExGFxMovie::GetCurrentMainAction)
		.def("extToggleSort", &UStatusMenuExGFxMovie::extToggleSort)
		.def("extUpdateLeftSideListSize", &UStatusMenuExGFxMovie::extUpdateLeftSideListSize)
		.def("extSetInitialHighlightBar", &UStatusMenuExGFxMovie::extSetInitialHighlightBar)
		.def("SortContainer", &UStatusMenuExGFxMovie::SortContainer)
		.def("UpdateCachedInventoryMarkForThing", &UStatusMenuExGFxMovie::UpdateCachedInventoryMarkForThing)
		.def("UpdateCachedInventoryMarks", &UStatusMenuExGFxMovie::UpdateCachedInventoryMarks)
		.def("PrepareListOfAllInventory", &UStatusMenuExGFxMovie::PrepareListOfAllInventory)
		.def("eventIsComparing", &UStatusMenuExGFxMovie::eventIsComparing)
		.def("SetupInventoryScreen", &UStatusMenuExGFxMovie::SetupInventoryScreen)
		.def("InventoryPanelInputKey", &UStatusMenuExGFxMovie::InventoryPanelInputKey)
		.def("ShowInventoryContextMenu", &UStatusMenuExGFxMovie::ShowInventoryContextMenu)
		.def("InventoryContextMenuClosed", &UStatusMenuExGFxMovie::InventoryContextMenuClosed)
		.def("InventoryContextMenuActivated", &UStatusMenuExGFxMovie::InventoryContextMenuActivated)
		.def("GetPlayerThings", &UStatusMenuExGFxMovie::GetPlayerThings)
		.def("SetPlayerCardInfo", &UStatusMenuExGFxMovie::SetPlayerCardInfo)
		.def("SetCondensedHealthWidget_Wrapper", &UStatusMenuExGFxMovie::SetCondensedHealthWidget_Wrapper)
		.def("SetCondensedHealthWidget", &UStatusMenuExGFxMovie::SetCondensedHealthWidget)
		.def("eventDisplayMarketingUnlockDialogIfNecessary", &UStatusMenuExGFxMovie::eventDisplayMarketingUnlockDialogIfNecessary)
		.def("HandleCurrencyChanged", &UStatusMenuExGFxMovie::HandleCurrencyChanged)
		.def("eventOnClose", &UStatusMenuExGFxMovie::eventOnClose)
		.def("GetScreenByName", &UStatusMenuExGFxMovie::GetScreenByName)
		.def("CleanupScreen", &UStatusMenuExGFxMovie::CleanupScreen)
		.def("extSetCurrentScreen", &UStatusMenuExGFxMovie::extSetCurrentScreen)
		.def("Flash_SetMissionLogEnabled", &UStatusMenuExGFxMovie::Flash_SetMissionLogEnabled)
		.def("Flash_SetVehicleRestrictions", &UStatusMenuExGFxMovie::Flash_SetVehicleRestrictions)
		.def("Flash_SetCurrentScreen", &UStatusMenuExGFxMovie::Flash_SetCurrentScreen)
		.def("GetInitialScreen", &UStatusMenuExGFxMovie::GetInitialScreen, py::return_value_policy::reference)
		.def("GetInitialMissionSortType", &UStatusMenuExGFxMovie::GetInitialMissionSortType)
		.def("eventGetCurrentTab", &UStatusMenuExGFxMovie::eventGetCurrentTab)
		.def("eventFinishClosing", &UStatusMenuExGFxMovie::eventFinishClosing)
		.def("Hide", &UStatusMenuExGFxMovie::Hide)
		.def("DisplayRewardsPanel", &UStatusMenuExGFxMovie::DisplayRewardsPanel)
		.def("TryDisplayRewardPanel", &UStatusMenuExGFxMovie::TryDisplayRewardPanel)
		.def("eventGetAllWorldMissions", &UStatusMenuExGFxMovie::eventGetAllWorldMissions)
		.def("RegisterMissionDelegates", &UStatusMenuExGFxMovie::RegisterMissionDelegates)
		.def("InitForConsole", &UStatusMenuExGFxMovie::InitForConsole)
		.def("InitForPC", &UStatusMenuExGFxMovie::InitForPC)
		.def("AmITheStatusMenu", &UStatusMenuExGFxMovie::AmITheStatusMenu)
		.def("eventStart", &UStatusMenuExGFxMovie::eventStart)
		;
	py::class_< UTradingGFxMovie, UWillowInventoryGFxMovie >(m, "UTradingGFxMovie")
		.def_property("bDoDuelingCheck", [](UTradingGFxMovie &self){return self.bDoDuelingCheck;}, [](UTradingGFxMovie &self, bool value){self.bDoDuelingCheck = value ? 1 : 0;})
		.def_property("bDuelingAllowed", [](UTradingGFxMovie &self){return self.bDuelingAllowed;}, [](UTradingGFxMovie &self, bool value){self.bDuelingAllowed = value ? 1 : 0;})
		.def_property("bUseTextboxForMoney", [](UTradingGFxMovie &self){return self.bUseTextboxForMoney;}, [](UTradingGFxMovie &self, bool value){self.bUseTextboxForMoney = value ? 1 : 0;})
		.def_readwrite("OfferingString", &UTradingGFxMovie::OfferingString, py::return_value_policy::reference)
		.def_readwrite("ReceivingString", &UTradingGFxMovie::ReceivingString, py::return_value_policy::reference)
		.def_readwrite("TooltipString", &UTradingGFxMovie::TooltipString, py::return_value_policy::reference)
		.def_readwrite("ToolTipString_Split", &UTradingGFxMovie::ToolTipString_Split, py::return_value_policy::reference)
		.def_readwrite("ReadyString", &UTradingGFxMovie::ReadyString, py::return_value_policy::reference)
		.def_readwrite("TradeString", &UTradingGFxMovie::TradeString, py::return_value_policy::reference)
		.def_readwrite("DuelString", &UTradingGFxMovie::DuelString, py::return_value_policy::reference)
		.def_readwrite("CancelDuelString", &UTradingGFxMovie::CancelDuelString, py::return_value_policy::reference)
		.def_readwrite("CancelTradeString", &UTradingGFxMovie::CancelTradeString, py::return_value_policy::reference)
		.def_readwrite("WinnerTakeAllString", &UTradingGFxMovie::WinnerTakeAllString, py::return_value_policy::reference)
		.def_readwrite("NoRoomForItemsString", &UTradingGFxMovie::NoRoomForItemsString, py::return_value_policy::reference)
		.def_readwrite("MyMoneyOffer", &UTradingGFxMovie::MyMoneyOffer)
		.def_readwrite("CachedPartnerMoneyOffer", &UTradingGFxMovie::CachedPartnerMoneyOffer)
		.def_readwrite("CachedMyStance", &UTradingGFxMovie::CachedMyStance)
		.def_readwrite("CachedPartnerStance", &UTradingGFxMovie::CachedPartnerStance)
		.def_readwrite("BackpackThings", &UTradingGFxMovie::BackpackThings, py::return_value_policy::reference)
		.def_readwrite("TradingPanel", &UTradingGFxMovie::TradingPanel, py::return_value_policy::reference)
		.def_readwrite("TradingDef", &UTradingGFxMovie::TradingDef, py::return_value_policy::reference)
		.def_readwrite("CompareConfiguration", &UTradingGFxMovie::CompareConfiguration, py::return_value_policy::reference)
		.def_readwrite("GenericSortConfigurations", &UTradingGFxMovie::GenericSortConfigurations, py::return_value_policy::reference)
		.def_readwrite("GenericSortConfigIndex", &UTradingGFxMovie::GenericSortConfigIndex)
		.def_readwrite("LastMoneyOfferString", &UTradingGFxMovie::LastMoneyOfferString, py::return_value_policy::reference)
		.def("UpdateMoneyOfferFromTextbox", &UTradingGFxMovie::UpdateMoneyOfferFromTextbox)
		.def("extGenericButtonClicked", &UTradingGFxMovie::extGenericButtonClicked)
		.def("extMoneyWidgetActivated", &UTradingGFxMovie::extMoneyWidgetActivated)
		.def("FreeCellData", &UTradingGFxMovie::FreeCellData)
		.def("GetLocalInvForTradeSlot", &UTradingGFxMovie::GetLocalInvForTradeSlot, py::return_value_policy::reference)
		.def("OnPartnerInvChanged", &UTradingGFxMovie::OnPartnerInvChanged)
		.def("GetOfferedCellInventory", &UTradingGFxMovie::GetOfferedCellInventory, py::return_value_policy::reference)
		.def("UpdateTimer", &UTradingGFxMovie::UpdateTimer)
		.def("extSetDuel", &UTradingGFxMovie::extSetDuel)
		.def("extSetTrade", &UTradingGFxMovie::extSetTrade)
		.def("eventUnselectActionButtons", &UTradingGFxMovie::eventUnselectActionButtons)
		.def("eventSetPlayerInventoryMoney", &UTradingGFxMovie::eventSetPlayerInventoryMoney)
		.def("eventSetPartnerMoneyOffer", &UTradingGFxMovie::eventSetPartnerMoneyOffer)
		.def("eventSetPlayerMoneyOffer", &UTradingGFxMovie::eventSetPlayerMoneyOffer)
		.def("eventOnClose", &UTradingGFxMovie::eventOnClose)
		.def("UpdateMoneyOffer", &UTradingGFxMovie::UpdateMoneyOffer)
		.def("extExitMoneyWidget", &UTradingGFxMovie::extExitMoneyWidget)
		.def("TweenOut", &UTradingGFxMovie::TweenOut)
		.def("eventBeginClosing", &UTradingGFxMovie::eventBeginClosing)
		.def("InitTradingScreen", &UTradingGFxMovie::InitTradingScreen)
		.def("SetTooltips", &UTradingGFxMovie::SetTooltips)
		.def("GetTradeManager", &UTradingGFxMovie::GetTradeManager, py::return_value_policy::reference)
		.def("InitCellData", &UTradingGFxMovie::InitCellData)
		.def("IsOffering", &UTradingGFxMovie::IsOffering)
		.def("AddInventory", &UTradingGFxMovie::AddInventory)
		.def("PrepareListOfAllInventory", &UTradingGFxMovie::PrepareListOfAllInventory)
		.def("RefreshContents", &UTradingGFxMovie::RefreshContents)
		.def("InitForConsole", &UTradingGFxMovie::InitForConsole)
		.def("InitForPC", &UTradingGFxMovie::InitForPC)
		.def("eventStart", &UTradingGFxMovie::eventStart)
		;
	py::class_< UTwoPanelInterfaceGFxMovie, UWillowInventoryGFxMovie >(m, "UTwoPanelInterfaceGFxMovie")
		.def_property("bShouldStartOnLeftPanel", [](UTwoPanelInterfaceGFxMovie &self){return self.bShouldStartOnLeftPanel;}, [](UTwoPanelInterfaceGFxMovie &self, bool value){self.bShouldStartOnLeftPanel = value ? 1 : 0;})
		.def_readwrite("TwoPanelInterface", &UTwoPanelInterfaceGFxMovie::TwoPanelInterface, py::return_value_policy::reference)
		.def_readwrite("GenericSortConfigurations", &UTwoPanelInterfaceGFxMovie::GenericSortConfigurations, py::return_value_policy::reference)
		.def_readwrite("GenericSortConfigIndex_Storage", &UTwoPanelInterfaceGFxMovie::GenericSortConfigIndex_Storage)
		.def_readwrite("GenericSortConfigIndex_Player", &UTwoPanelInterfaceGFxMovie::GenericSortConfigIndex_Player)
		.def_readwrite("InteractiveObjectContext", &UTwoPanelInterfaceGFxMovie::InteractiveObjectContext, py::return_value_policy::reference)
		.def_readwrite("StoragePanelLabel", &UTwoPanelInterfaceGFxMovie::StoragePanelLabel, py::return_value_policy::reference)
		.def_readwrite("PlayerPanelLabel", &UTwoPanelInterfaceGFxMovie::PlayerPanelLabel, py::return_value_policy::reference)
		.def_readwrite("NumHeaderButtons", &UTwoPanelInterfaceGFxMovie::NumHeaderButtons)
		.def("SetItemLocation", &UTwoPanelInterfaceGFxMovie::SetItemLocation)
		.def("PressedHotkeyNumber", &UTwoPanelInterfaceGFxMovie::PressedHotkeyNumber)
		.def("extGenericButtonClicked", &UTwoPanelInterfaceGFxMovie::extGenericButtonClicked)
		.def("InitForConsole", &UTwoPanelInterfaceGFxMovie::InitForConsole)
		.def("InitForPC", &UTwoPanelInterfaceGFxMovie::InitForPC)
		.def("SetTooltips", &UTwoPanelInterfaceGFxMovie::SetTooltips)
		.def("_GetAddTip", &UTwoPanelInterfaceGFxMovie::_GetAddTip, py::return_value_policy::reference)
		.def("GetAddTip", &UTwoPanelInterfaceGFxMovie::GetAddTip, py::return_value_policy::reference)
		.def("AttachBackgroundClip", &UTwoPanelInterfaceGFxMovie::AttachBackgroundClip)
		.def("OnCellPressed", &UTwoPanelInterfaceGFxMovie::OnCellPressed)
		.def("PanelOnItemSelected", &UTwoPanelInterfaceGFxMovie::PanelOnItemSelected)
		.def("ShouldStoragePanelHighlightFrozen", &UTwoPanelInterfaceGFxMovie::ShouldStoragePanelHighlightFrozen)
		.def("GetSelectedThing", &UTwoPanelInterfaceGFxMovie::GetSelectedThing, py::return_value_policy::reference)
		.def("GetPlayerPanelLabel", &UTwoPanelInterfaceGFxMovie::GetPlayerPanelLabel, py::return_value_policy::reference)
		.def("GetStoragePanelLabel", &UTwoPanelInterfaceGFxMovie::GetStoragePanelLabel, py::return_value_policy::reference)
		.def("ShouldShowPanelNavTooltips", &UTwoPanelInterfaceGFxMovie::ShouldShowPanelNavTooltips)
		.def("NotifySelectionChange", &UTwoPanelInterfaceGFxMovie::NotifySelectionChange)
		.def("GetCurrencyTypeForInventory", &UTwoPanelInterfaceGFxMovie::GetCurrencyTypeForInventory)
		.def("GetOverridePriceForInventory", &UTwoPanelInterfaceGFxMovie::GetOverridePriceForInventory)
		.def("GetSortConfigDataForPanel", &UTwoPanelInterfaceGFxMovie::GetSortConfigDataForPanel)
		.def("OnLeftPanelInit", &UTwoPanelInterfaceGFxMovie::OnLeftPanelInit)
		.def("GetStorageReferenceForTransferring", &UTwoPanelInterfaceGFxMovie::GetStorageReferenceForTransferring, py::return_value_policy::reference)
		.def("GetStorageReferenceForSwapping", &UTwoPanelInterfaceGFxMovie::GetStorageReferenceForSwapping, py::return_value_policy::reference)
		.def("GetPlayerPanelItems", &UTwoPanelInterfaceGFxMovie::GetPlayerPanelItems)
		.def("GetTitle", &UTwoPanelInterfaceGFxMovie::GetTitle, py::return_value_policy::reference)
		.def("ShouldStartOnLeftPanel", &UTwoPanelInterfaceGFxMovie::ShouldStartOnLeftPanel)
		.def("InitCardCellData", &UTwoPanelInterfaceGFxMovie::InitCardCellData)
		.def("extInitMainPanel", &UTwoPanelInterfaceGFxMovie::extInitMainPanel)
		.def("eventOnClose", &UTwoPanelInterfaceGFxMovie::eventOnClose)
		.def("eventStart", &UTwoPanelInterfaceGFxMovie::eventStart)
		.def("GetStoragePanelItems", [](UTwoPanelInterfaceGFxMovie &self , TArray< class AWillowInventory* >* Things) { int* pyUnloadableCount = (int*)malloc(sizeof(int)) ;   self.GetStoragePanelItems(Things, pyUnloadableCount); return py::make_tuple(*pyUnloadableCount); })
		;
	py::class_< UVendingMachineExGFxMovie, UWillowInventoryGFxMovie >(m, "UVendingMachineExGFxMovie")
		.def_property("bIsStoragePanelShowingBuyback", [](UVendingMachineExGFxMovie &self){return self.bIsStoragePanelShowingBuyback;}, [](UVendingMachineExGFxMovie &self, bool value){self.bIsStoragePanelShowingBuyback = value ? 1 : 0;})
		.def_property("bShouldStartOnLeftPanel", [](UVendingMachineExGFxMovie &self){return self.bShouldStartOnLeftPanel;}, [](UVendingMachineExGFxMovie &self, bool value){self.bShouldStartOnLeftPanel = value ? 1 : 0;})
		.def_property("bOnItemOfTheDay", [](UVendingMachineExGFxMovie &self){return self.bOnItemOfTheDay;}, [](UVendingMachineExGFxMovie &self, bool value){self.bOnItemOfTheDay = value ? 1 : 0;})
		.def_readwrite("VM", &UVendingMachineExGFxMovie::VM, py::return_value_policy::reference)
		.def_readwrite("VMGFxDef", &UVendingMachineExGFxMovie::VMGFxDef, py::return_value_policy::reference)
		.def_readwrite("OwnerInventoryPawn", &UVendingMachineExGFxMovie::OwnerInventoryPawn, py::return_value_policy::reference)
		.def_readwrite("ItemOfTheDayData", &UVendingMachineExGFxMovie::ItemOfTheDayData, py::return_value_policy::reference)
		.def_readwrite("ShopItems", &UVendingMachineExGFxMovie::ShopItems, py::return_value_policy::reference)
		.def_readwrite("BuyBackItems", &UVendingMachineExGFxMovie::BuyBackItems, py::return_value_policy::reference)
		.def_readwrite("TwoPanelInterface", &UVendingMachineExGFxMovie::TwoPanelInterface, py::return_value_policy::reference)
		.def_readwrite("ItemOfTheDayPanel", &UVendingMachineExGFxMovie::ItemOfTheDayPanel, py::return_value_policy::reference)
		.def_readwrite("PlayerMoney", &UVendingMachineExGFxMovie::PlayerMoney, py::return_value_policy::reference)
		.def_readwrite("HealthBar", &UVendingMachineExGFxMovie::HealthBar, py::return_value_policy::reference)
		.def_readwrite("ShieldBar", &UVendingMachineExGFxMovie::ShieldBar, py::return_value_policy::reference)
		.def_readwrite("AmmoPanel", &UVendingMachineExGFxMovie::AmmoPanel, py::return_value_policy::reference)
		.def_readwrite("Feedback", &UVendingMachineExGFxMovie::Feedback, py::return_value_policy::reference)
		.def_readwrite("HealthShopTitle", &UVendingMachineExGFxMovie::HealthShopTitle, py::return_value_policy::reference)
		.def_readwrite("ItemsShopTitle", &UVendingMachineExGFxMovie::ItemsShopTitle, py::return_value_policy::reference)
		.def_readwrite("WeaponsShopTitle", &UVendingMachineExGFxMovie::WeaponsShopTitle, py::return_value_policy::reference)
		.def_readwrite("BlackMarketTitle", &UVendingMachineExGFxMovie::BlackMarketTitle, py::return_value_policy::reference)
		.def_readwrite("VisitLabel", &UVendingMachineExGFxMovie::VisitLabel, py::return_value_policy::reference)
		.def_readwrite("ItemOfTheDayLabel", &UVendingMachineExGFxMovie::ItemOfTheDayLabel, py::return_value_policy::reference)
		.def_readwrite("VisitLabel_BlackMarket", &UVendingMachineExGFxMovie::VisitLabel_BlackMarket, py::return_value_policy::reference)
		.def_readwrite("ItemOfTheDayLabel_BlackMarket", &UVendingMachineExGFxMovie::ItemOfTheDayLabel_BlackMarket, py::return_value_policy::reference)
		.def_readwrite("StoragePanelLabel", &UVendingMachineExGFxMovie::StoragePanelLabel, py::return_value_policy::reference)
		.def_readwrite("PlayerPanelLabel", &UVendingMachineExGFxMovie::PlayerPanelLabel, py::return_value_policy::reference)
		.def_readwrite("BuybackPanelLabel", &UVendingMachineExGFxMovie::BuybackPanelLabel, py::return_value_policy::reference)
		.def_readwrite("ComparePanelLabel", &UVendingMachineExGFxMovie::ComparePanelLabel, py::return_value_policy::reference)
		.def_readwrite("CurrentSelectionShopStatus", &UVendingMachineExGFxMovie::CurrentSelectionShopStatus)
		.def_readwrite("ShopType", &UVendingMachineExGFxMovie::ShopType)
		.def_readwrite("bCanAcceptInput", &UVendingMachineExGFxMovie::bCanAcceptInput)
		.def_readwrite("CurrentSelectionItem", &UVendingMachineExGFxMovie::CurrentSelectionItem, py::return_value_policy::reference)
		.def_readwrite("CachedCurrency", &UVendingMachineExGFxMovie::CachedCurrency)
		.def_readwrite("StoragePanelSortConfigIndex", &UVendingMachineExGFxMovie::StoragePanelSortConfigIndex)
		.def_readwrite("PlayerPanelSortConfigIndex", &UVendingMachineExGFxMovie::PlayerPanelSortConfigIndex)
		.def_readwrite("WeaponsSortConfigurations", &UVendingMachineExGFxMovie::WeaponsSortConfigurations, py::return_value_policy::reference)
		.def_readwrite("WeaponsSortConfigIndex", &UVendingMachineExGFxMovie::WeaponsSortConfigIndex)
		.def_readwrite("HealthSortConfigurations", &UVendingMachineExGFxMovie::HealthSortConfigurations, py::return_value_policy::reference)
		.def_readwrite("HealthSortConfigIndex", &UVendingMachineExGFxMovie::HealthSortConfigIndex)
		.def_readwrite("GrenadesSortConfigurations", &UVendingMachineExGFxMovie::GrenadesSortConfigurations, py::return_value_policy::reference)
		.def_readwrite("GrenadesSortConfigIndex", &UVendingMachineExGFxMovie::GrenadesSortConfigIndex)
		.def_readwrite("BlackMarketSortConfigurations", &UVendingMachineExGFxMovie::BlackMarketSortConfigurations, py::return_value_policy::reference)
		.def_readwrite("BlackMarketSortConfigIndex", &UVendingMachineExGFxMovie::BlackMarketSortConfigIndex)
		.def_readwrite("GenericSortConfigurations", &UVendingMachineExGFxMovie::GenericSortConfigurations, py::return_value_policy::reference)
		.def_readwrite("GenericSortConfigIndex", &UVendingMachineExGFxMovie::GenericSortConfigIndex)
		.def_readwrite("CompareConfiguration", &UVendingMachineExGFxMovie::CompareConfiguration, py::return_value_policy::reference)
		.def_readwrite("VendingMachineRefreshRate", &UVendingMachineExGFxMovie::VendingMachineRefreshRate)
		.def_readwrite("NumHeaderButtons", &UVendingMachineExGFxMovie::NumHeaderButtons)
		.def_readwrite("PCContextMenu", &UVendingMachineExGFxMovie::PCContextMenu, py::return_value_policy::reference)
		.def_readwrite("ShopIconBase", &UVendingMachineExGFxMovie::ShopIconBase, py::return_value_policy::reference)
		.def("SetItemLocation", &UVendingMachineExGFxMovie::SetItemLocation)
		.def("CycleSelectedThingAsTrashOrFavorite", &UVendingMachineExGFxMovie::CycleSelectedThingAsTrashOrFavorite)
		.def("PressedHotkeyNumber", &UVendingMachineExGFxMovie::PressedHotkeyNumber)
		.def("extGenericButtonClicked", &UVendingMachineExGFxMovie::extGenericButtonClicked)
		.def("InitForConsole", &UVendingMachineExGFxMovie::InitForConsole)
		.def("InitForPC", &UVendingMachineExGFxMovie::InitForPC)
		.def("RefreshShieldBar", &UVendingMachineExGFxMovie::RefreshShieldBar)
		.def("RefreshHealthBar", &UVendingMachineExGFxMovie::RefreshHealthBar)
		.def("TweenOut", &UVendingMachineExGFxMovie::TweenOut)
		.def("BeginClosing", &UVendingMachineExGFxMovie::BeginClosing)
		.def("SetTooltips", &UVendingMachineExGFxMovie::SetTooltips)
		.def("FinishCompare", &UVendingMachineExGFxMovie::FinishCompare)
		.def("StartCompare", &UVendingMachineExGFxMovie::StartCompare)
		.def("CheckShopOpStatus", &UVendingMachineExGFxMovie::CheckShopOpStatus)
		.def("CanSellAllTrash", &UVendingMachineExGFxMovie::CanSellAllTrash)
		.def("SellAllTrash", &UVendingMachineExGFxMovie::SellAllTrash)
		.def("PlayFeedback_CannotCarryOrUse", &UVendingMachineExGFxMovie::PlayFeedback_CannotCarryOrUse)
		.def("PlayFeedback_CannotAfford", &UVendingMachineExGFxMovie::PlayFeedback_CannotAfford)
		.def("ConditionalStartTransfer", &UVendingMachineExGFxMovie::ConditionalStartTransfer)
		.def("IsCurrentSelectionBuyBack", &UVendingMachineExGFxMovie::IsCurrentSelectionBuyBack)
		.def("IsCurrentSelectionSell", &UVendingMachineExGFxMovie::IsCurrentSelectionSell)
		.def("GetStatusForItem", &UVendingMachineExGFxMovie::GetStatusForItem)
		.def("EvaluateCurrentSelection", &UVendingMachineExGFxMovie::EvaluateCurrentSelection)
		.def("ShouldStoragePanelHighlightFrozen", &UVendingMachineExGFxMovie::ShouldStoragePanelHighlightFrozen)
		.def("SwitchToItemOfTheDay", &UVendingMachineExGFxMovie::SwitchToItemOfTheDay)
		.def("SwitchToPanels", &UVendingMachineExGFxMovie::SwitchToPanels)
		.def("OnPanelRollOver", &UVendingMachineExGFxMovie::OnPanelRollOver)
		.def("OnDynamicCardUpdated", &UVendingMachineExGFxMovie::OnDynamicCardUpdated)
		.def("InspectItem", &UVendingMachineExGFxMovie::InspectItem)
		.def("CompareInputKey", &UVendingMachineExGFxMovie::CompareInputKey)
		.def("HandleItemOfTheDayInput", &UVendingMachineExGFxMovie::HandleItemOfTheDayInput)
		.def("CanSwitchToBuyback", &UVendingMachineExGFxMovie::CanSwitchToBuyback)
		.def("MainInputKey", &UVendingMachineExGFxMovie::MainInputKey)
		.def("OnInventoryPanelSetActive", &UVendingMachineExGFxMovie::OnInventoryPanelSetActive)
		.def("ShowContextMenu", &UVendingMachineExGFxMovie::ShowContextMenu)
		.def("GetCurrentCellObject", &UVendingMachineExGFxMovie::GetCurrentCellObject, py::return_value_policy::reference)
		.def("ContextMenuClosed", &UVendingMachineExGFxMovie::ContextMenuClosed)
		.def("ContextMenuActivated", &UVendingMachineExGFxMovie::ContextMenuActivated)
		.def("OnCellPressed", &UVendingMachineExGFxMovie::OnCellPressed)
		.def("PanelOnItemSelected", &UVendingMachineExGFxMovie::PanelOnItemSelected)
		.def("GetSelectedThing", &UVendingMachineExGFxMovie::GetSelectedThing, py::return_value_policy::reference)
		.def("GetPlayerPanelLabel", &UVendingMachineExGFxMovie::GetPlayerPanelLabel, py::return_value_policy::reference)
		.def("GetStoragePanelLabel", &UVendingMachineExGFxMovie::GetStoragePanelLabel, py::return_value_policy::reference)
		.def("NotifySelectionChange", &UVendingMachineExGFxMovie::NotifySelectionChange)
		.def("GetCurrencyTypeForInventory", &UVendingMachineExGFxMovie::GetCurrencyTypeForInventory)
		.def("GetOverridePriceForInventory", &UVendingMachineExGFxMovie::GetOverridePriceForInventory)
		.def("GetSortConfigDataForPanel", &UVendingMachineExGFxMovie::GetSortConfigDataForPanel)
		.def("SetPlayerCurrencyType", &UVendingMachineExGFxMovie::SetPlayerCurrencyType)
		.def("GetStorageReferenceForTransferring", &UVendingMachineExGFxMovie::GetStorageReferenceForTransferring, py::return_value_policy::reference)
		.def("GetStorageReferenceForSwapping", &UVendingMachineExGFxMovie::GetStorageReferenceForSwapping, py::return_value_policy::reference)
		.def("GetPlayerPanelItems", &UVendingMachineExGFxMovie::GetPlayerPanelItems)
		.def("GetTitle", &UVendingMachineExGFxMovie::GetTitle, py::return_value_policy::reference)
		.def("ShouldStartOnLeftPanel", &UVendingMachineExGFxMovie::ShouldStartOnLeftPanel)
		.def("ShouldShowPanelNavTooltips", &UVendingMachineExGFxMovie::ShouldShowPanelNavTooltips)
		.def("SetCreditsDisplay", &UVendingMachineExGFxMovie::SetCreditsDisplay)
		.def("GetCurrencyType", &UVendingMachineExGFxMovie::GetCurrencyType)
		.def("UpdateTimeRemaining", &UVendingMachineExGFxMovie::UpdateTimeRemaining)
		.def("eventOnTick", &UVendingMachineExGFxMovie::eventOnTick)
		.def("ConfigureShopForType", &UVendingMachineExGFxMovie::ConfigureShopForType)
		.def("Refresh", &UVendingMachineExGFxMovie::Refresh)
		.def("RefreshStoragePanelItems", &UVendingMachineExGFxMovie::RefreshStoragePanelItems)
		.def("RefreshTransientData", &UVendingMachineExGFxMovie::RefreshTransientData)
		.def("ClearVendingMachineRefreshTimer", &UVendingMachineExGFxMovie::ClearVendingMachineRefreshTimer)
		.def("SetVendingMachineRefreshTimer", &UVendingMachineExGFxMovie::SetVendingMachineRefreshTimer)
		.def("InitCardCellThumbnail", &UVendingMachineExGFxMovie::InitCardCellThumbnail, py::return_value_policy::reference)
		.def("FreeTextures", &UVendingMachineExGFxMovie::FreeTextures)
		.def("eventOnClose", &UVendingMachineExGFxMovie::eventOnClose)
		.def("ConfigureForType_IOTD", &UVendingMachineExGFxMovie::ConfigureForType_IOTD)
		.def("ConfigureForType_TPI", &UVendingMachineExGFxMovie::ConfigureForType_TPI)
		.def("ConfigureForType_Shop", &UVendingMachineExGFxMovie::ConfigureForType_Shop)
		.def("OnLeftPanelInit", &UVendingMachineExGFxMovie::OnLeftPanelInit)
		.def("extInitMainPanel", &UVendingMachineExGFxMovie::extInitMainPanel)
		.def("extInitCustomItemOfTheDayBackground", &UVendingMachineExGFxMovie::extInitCustomItemOfTheDayBackground)
		.def("extInitItemOfTheDayPanel", &UVendingMachineExGFxMovie::extInitItemOfTheDayPanel)
		.def("extInitVendingMachine", &UVendingMachineExGFxMovie::extInitVendingMachine)
		.def("eventStart", &UVendingMachineExGFxMovie::eventStart)
		.def("GetCurrentShopMode", [](UVendingMachineExGFxMovie &self ) { unsigned char* pyShopMode = (unsigned char*)malloc(sizeof(unsigned char)) ; int* pybCanActivate = (int*)malloc(sizeof(int)) ;  bool ret =  self.GetCurrentShopMode(pyShopMode, pybCanActivate); return py::make_tuple(ret, *pyShopMode, *pybCanActivate); })
		.def("GetStoragePanelItems", [](UVendingMachineExGFxMovie &self , TArray< class AWillowInventory* >* Things) { int* pyUnloadableCount = (int*)malloc(sizeof(int)) ;   self.GetStoragePanelItems(Things, pyUnloadableCount); return py::make_tuple(*pyUnloadableCount); })
		;
	py::class_< UWillowHUDGFxMovie, UWillowGFxMovie3D >(m, "UWillowHUDGFxMovie")
		.def_property("bIsWidescreen", [](UWillowHUDGFxMovie &self){return self.bIsWidescreen;}, [](UWillowHUDGFxMovie &self, bool value){self.bIsWidescreen = value ? 1 : 0;})
		.def_property("bIsPrimary", [](UWillowHUDGFxMovie &self){return self.bIsPrimary;}, [](UWillowHUDGFxMovie &self, bool value){self.bIsPrimary = value ? 1 : 0;})
		.def_property("bUsingPC360", [](UWillowHUDGFxMovie &self){return self.bUsingPC360;}, [](UWillowHUDGFxMovie &self, bool value){self.bUsingPC360 = value ? 1 : 0;})
		.def_property("bUpdateSplitRegionNextTick", [](UWillowHUDGFxMovie &self){return self.bUpdateSplitRegionNextTick;}, [](UWillowHUDGFxMovie &self, bool value){self.bUpdateSplitRegionNextTick = value ? 1 : 0;})
		.def_property("bHasEverPickedUpGrenades", [](UWillowHUDGFxMovie &self){return self.bHasEverPickedUpGrenades;}, [](UWillowHUDGFxMovie &self, bool value){self.bHasEverPickedUpGrenades = value ? 1 : 0;})
		.def_property("bShowLevelTimer", [](UWillowHUDGFxMovie &self){return self.bShowLevelTimer;}, [](UWillowHUDGFxMovie &self, bool value){self.bShowLevelTimer = value ? 1 : 0;})
		.def_property("bShowIpAddr", [](UWillowHUDGFxMovie &self){return self.bShowIpAddr;}, [](UWillowHUDGFxMovie &self, bool value){self.bShowIpAddr = value ? 1 : 0;})
		.def_property("bGameStageDebugEnabled", [](UWillowHUDGFxMovie &self){return self.bGameStageDebugEnabled;}, [](UWillowHUDGFxMovie &self, bool value){self.bGameStageDebugEnabled = value ? 1 : 0;})
		.def_property("bCachedPersistentMapNameMatchesRecordingList", [](UWillowHUDGFxMovie &self){return self.bCachedPersistentMapNameMatchesRecordingList;}, [](UWillowHUDGFxMovie &self, bool value){self.bCachedPersistentMapNameMatchesRecordingList = value ? 1 : 0;})
		.def_property("bDisplayTradeIcon_HUD", [](UWillowHUDGFxMovie &self){return self.bDisplayTradeIcon_HUD;}, [](UWillowHUDGFxMovie &self, bool value){self.bDisplayTradeIcon_HUD = value ? 1 : 0;})
		.def_property("bDisplayTradeDisabledIcon_HUD", [](UWillowHUDGFxMovie &self){return self.bDisplayTradeDisabledIcon_HUD;}, [](UWillowHUDGFxMovie &self, bool value){self.bDisplayTradeDisabledIcon_HUD = value ? 1 : 0;})
		.def_property("RetryTraining_PausesGame", [](UWillowHUDGFxMovie &self){return self.RetryTraining_PausesGame;}, [](UWillowHUDGFxMovie &self, bool value){self.RetryTraining_PausesGame = value ? 1 : 0;})
		.def_property("RetryTraining_bIsntActuallyATrainingMessage", [](UWillowHUDGFxMovie &self){return self.RetryTraining_bIsntActuallyATrainingMessage;}, [](UWillowHUDGFxMovie &self, bool value){self.RetryTraining_bIsntActuallyATrainingMessage = value ? 1 : 0;})
		.def_property("RetryTraining_bMandatory", [](UWillowHUDGFxMovie &self){return self.RetryTraining_bMandatory;}, [](UWillowHUDGFxMovie &self, bool value){self.RetryTraining_bMandatory = value ? 1 : 0;})
		.def_property("bMidTick", [](UWillowHUDGFxMovie &self){return self.bMidTick;}, [](UWillowHUDGFxMovie &self, bool value){self.bMidTick = value ? 1 : 0;})
		.def_readwrite("SplitscreenMode", &UWillowHUDGFxMovie::SplitscreenMode)
		.def_readwrite("bIsInVehicle", &UWillowHUDGFxMovie::bIsInVehicle)
		.def_readwrite("bNeedsWidgetsRenewed", &UWillowHUDGFxMovie::bNeedsWidgetsRenewed)
		.def_readwrite("bNeedsXPUpdate", &UWillowHUDGFxMovie::bNeedsXPUpdate)
		.def_readwrite("bCachedKillSkillsEnabled", &UWillowHUDGFxMovie::bCachedKillSkillsEnabled)
		.def_readwrite("bCachedShieldPrimed", &UWillowHUDGFxMovie::bCachedShieldPrimed)
		.def_readwrite("CachedHasActiveSkill", &UWillowHUDGFxMovie::CachedHasActiveSkill)
		.def_readwrite("bCachedCrouched", &UWillowHUDGFxMovie::bCachedCrouched)
		.def_readwrite("bCachedInjured", &UWillowHUDGFxMovie::bCachedInjured)
		.def_readwrite("bCachedHadReviveTarget", &UWillowHUDGFxMovie::bCachedHadReviveTarget)
		.def_readwrite("CachedActionSkillTooltip", &UWillowHUDGFxMovie::CachedActionSkillTooltip)
		.def_readwrite("bActionSkillGuideIsHidden", &UWillowHUDGFxMovie::bActionSkillGuideIsHidden)
		.def_readwrite("bDrawEnemyHealth", &UWillowHUDGFxMovie::bDrawEnemyHealth)
		.def_readwrite("bNewTarget", &UWillowHUDGFxMovie::bNewTarget)
		.def_readwrite("bLastShieldPresentUpdated", &UWillowHUDGFxMovie::bLastShieldPresentUpdated)
		.def_readwrite("bLastMinibarPresentUpdated", &UWillowHUDGFxMovie::bLastMinibarPresentUpdated)
		.def_readwrite("bLastChampionUpdated", &UWillowHUDGFxMovie::bLastChampionUpdated)
		.def_readwrite("bLastFullyArmoredUpdated", &UWillowHUDGFxMovie::bLastFullyArmoredUpdated)
		.def_readwrite("bLastBeingHealedUpdated", &UWillowHUDGFxMovie::bLastBeingHealedUpdated)
		.def_readwrite("EquippedCardType", &UWillowHUDGFxMovie::EquippedCardType)
		.def_readwrite("bCachedBoundaryWarningEnabled", &UWillowHUDGFxMovie::bCachedBoundaryWarningEnabled)
		.def_readwrite("DesiredCrosshairColor", &UWillowHUDGFxMovie::DesiredCrosshairColor)
		.def_readwrite("bCachedBossBar", &UWillowHUDGFxMovie::bCachedBossBar)
		.def_readwrite("bCachedBossHasShield", &UWillowHUDGFxMovie::bCachedBossHasShield)
		.def_readwrite("bCachedRecording", &UWillowHUDGFxMovie::bCachedRecording)
		.def_readwrite("RetryTraining_StatusMenuTab", &UWillowHUDGFxMovie::RetryTraining_StatusMenuTab)
		.def_readwrite("LastShutoffTime", &UWillowHUDGFxMovie::LastShutoffTime)
		.def_readwrite("Pawn", &UWillowHUDGFxMovie::Pawn, py::return_value_policy::reference)
		.def_readwrite("WPRI", &UWillowHUDGFxMovie::WPRI, py::return_value_policy::reference)
		.def_readwrite("WWeap", &UWillowHUDGFxMovie::WWeap, py::return_value_policy::reference)
		.def_readwrite("MyHUDOwner", &UWillowHUDGFxMovie::MyHUDOwner, py::return_value_policy::reference)
		.def_readwrite("MyHUDDefinition", &UWillowHUDGFxMovie::MyHUDDefinition, py::return_value_policy::reference)
		.def_readwrite("CriticalTextMessages", &UWillowHUDGFxMovie::CriticalTextMessages, py::return_value_policy::reference)
		.def_readwrite("ChatTextMessages", &UWillowHUDGFxMovie::ChatTextMessages, py::return_value_policy::reference)
		.def_readwrite("TrainingTextMessages", &UWillowHUDGFxMovie::TrainingTextMessages, py::return_value_policy::reference)
		.def_readwrite("SavedGrenadePool", &UWillowHUDGFxMovie::SavedGrenadePool, py::return_value_policy::reference)
		.def_readwrite("CachedXP", &UWillowHUDGFxMovie::CachedXP)
		.def_readwrite("NumSkillSkillsVisible", &UWillowHUDGFxMovie::NumSkillSkillsVisible)
		.def_readwrite("CachedCooldown", &UWillowHUDGFxMovie::CachedCooldown)
		.def_readwrite("CachedMaxCooldown", &UWillowHUDGFxMovie::CachedMaxCooldown)
		.def_readwrite("CachedCooldownFrame", &UWillowHUDGFxMovie::CachedCooldownFrame)
		.def_readwrite("CachedWeaponInfo", &UWillowHUDGFxMovie::CachedWeaponInfo, py::return_value_policy::reference)
		.def_readwrite("CrosshairWidget", &UWillowHUDGFxMovie::CrosshairWidget, py::return_value_policy::reference)
		.def_readwrite("CachedGrenades", &UWillowHUDGFxMovie::CachedGrenades)
		.def_readwrite("CachedMaxGrenades", &UWillowHUDGFxMovie::CachedMaxGrenades)
		.def_readwrite("CachedGrenadeMod", &UWillowHUDGFxMovie::CachedGrenadeMod, py::return_value_policy::reference)
		.def_readwrite("CachedClassModNamePart", &UWillowHUDGFxMovie::CachedClassModNamePart, py::return_value_policy::reference)
		.def_readwrite("CachedHealth", &UWillowHUDGFxMovie::CachedHealth)
		.def_readwrite("CachedMaxHealth", &UWillowHUDGFxMovie::CachedMaxHealth)
		.def_readwrite("CachedShields", &UWillowHUDGFxMovie::CachedShields)
		.def_readwrite("CachedMaxShields", &UWillowHUDGFxMovie::CachedMaxShields)
		.def_readwrite("CachedShieldType", &UWillowHUDGFxMovie::CachedShieldType, py::return_value_policy::reference)
		.def_readwrite("CachedShieldDamageResistanceType", &UWillowHUDGFxMovie::CachedShieldDamageResistanceType, py::return_value_policy::reference)
		.def_readwrite("ShieldClip", &UWillowHUDGFxMovie::ShieldClip, py::return_value_policy::reference)
		.def_readwrite("CachedLevel", &UWillowHUDGFxMovie::CachedLevel)
		.def_readwrite("CachedPlayerNameIds", &UWillowHUDGFxMovie::CachedPlayerNameIds, py::return_value_policy::reference)
		.def_readwrite("CachedSkillPointsToSpend", &UWillowHUDGFxMovie::CachedSkillPointsToSpend)
		.def_readwrite("SkillPointsPromptTimer", &UWillowHUDGFxMovie::SkillPointsPromptTimer)
		.def_readwrite("CachedAfterburner", &UWillowHUDGFxMovie::CachedAfterburner)
		.def_readwrite("CachedCreditStopTime", &UWillowHUDGFxMovie::CachedCreditStopTime)
		.def_readwrite("CachedExCurrencyStopTime", &UWillowHUDGFxMovie::CachedExCurrencyStopTime)
		.def_readwrite("CachedCreditRemovalStopTime", &UWillowHUDGFxMovie::CachedCreditRemovalStopTime)
		.def_readwrite("MoneyWidgetInterval", &UWillowHUDGFxMovie::MoneyWidgetInterval)
		.def_readwrite("ExCurrencyWidgetInterval", &UWillowHUDGFxMovie::ExCurrencyWidgetInterval)
		.def_readwrite("MoneyRemovalInterval", &UWillowHUDGFxMovie::MoneyRemovalInterval)
		.def_readwrite("MoneyRemovalFrame", &UWillowHUDGFxMovie::MoneyRemovalFrame, py::return_value_policy::reference)
		.def_readwrite("WeaponSelect", &UWillowHUDGFxMovie::WeaponSelect, py::return_value_policy::reference)
		.def_readwrite("CachedInjuredPct", &UWillowHUDGFxMovie::CachedInjuredPct)
		.def_readwrite("CachedRevivePct", &UWillowHUDGFxMovie::CachedRevivePct)
		.def_readwrite("CachedTargetRevivePct", &UWillowHUDGFxMovie::CachedTargetRevivePct)
		.def_readwrite("CachedActionSkillTime", &UWillowHUDGFxMovie::CachedActionSkillTime)
		.def_readwrite("CurrentTargetable", &UWillowHUDGFxMovie::CurrentTargetable, py::return_value_policy::reference)
		.def_readwrite("LastTargetable", &UWillowHUDGFxMovie::LastTargetable, py::return_value_policy::reference)
		.def_readwrite("FadingTargetable", &UWillowHUDGFxMovie::FadingTargetable, py::return_value_policy::reference)
		.def_readwrite("CurrentTargetAllegiance", &UWillowHUDGFxMovie::CurrentTargetAllegiance, py::return_value_policy::reference)
		.def_readwrite("LastTargetAllegiance", &UWillowHUDGFxMovie::LastTargetAllegiance, py::return_value_policy::reference)
		.def_readwrite("LastMyLevelUpdated", &UWillowHUDGFxMovie::LastMyLevelUpdated)
		.def_readwrite("LastHealthUpdated", &UWillowHUDGFxMovie::LastHealthUpdated)
		.def_readwrite("LastShieldUpdated", &UWillowHUDGFxMovie::LastShieldUpdated)
		.def_readwrite("LastMinibarUpdated", &UWillowHUDGFxMovie::LastMinibarUpdated)
		.def_readwrite("CurrentHealth", &UWillowHUDGFxMovie::CurrentHealth)
		.def_readwrite("CurrentShield", &UWillowHUDGFxMovie::CurrentShield)
		.def_readwrite("CurrentMinibar", &UWillowHUDGFxMovie::CurrentMinibar)
		.def_readwrite("LastEnemyLevelUpdated", &UWillowHUDGFxMovie::LastEnemyLevelUpdated)
		.def_readwrite("LastEnemyNameUpdated", &UWillowHUDGFxMovie::LastEnemyNameUpdated, py::return_value_policy::reference)
		.def_readwrite("TargetWidgetClip", &UWillowHUDGFxMovie::TargetWidgetClip, py::return_value_policy::reference)
		.def_readwrite("DangerousDifference", &UWillowHUDGFxMovie::DangerousDifference)
		.def_readwrite("ImpossibleDifference", &UWillowHUDGFxMovie::ImpossibleDifference)
		.def_readwrite("SkillPointsPromptInterval", &UWillowHUDGFxMovie::SkillPointsPromptInterval)
		.def_readwrite("RTM", &UWillowHUDGFxMovie::RTM, py::return_value_policy::reference)
		.def_readwrite("SavedEquippedItemForCard", &UWillowHUDGFxMovie::SavedEquippedItemForCard, py::return_value_policy::reference)
		.def_readwrite("SavedComparisonItemForCard", &UWillowHUDGFxMovie::SavedComparisonItemForCard, py::return_value_policy::reference)
		.def_readwrite("EquippedCardHideTime", &UWillowHUDGFxMovie::EquippedCardHideTime)
		.def_readwrite("QueuedLevelUpLevel", &UWillowHUDGFxMovie::QueuedLevelUpLevel)
		.def_readwrite("CurrentInteractionIcon", &UWillowHUDGFxMovie::CurrentInteractionIcon, py::return_value_policy::reference)
		.def_readwrite("AllyLeveledUpString", &UWillowHUDGFxMovie::AllyLeveledUpString, py::return_value_policy::reference)
		.def_readwrite("AllyDyingString", &UWillowHUDGFxMovie::AllyDyingString, py::return_value_policy::reference)
		.def_readwrite("AllyRevivingString", &UWillowHUDGFxMovie::AllyRevivingString, py::return_value_policy::reference)
		.def_readwrite("PlayerInjuredString", &UWillowHUDGFxMovie::PlayerInjuredString, py::return_value_policy::reference)
		.def_readwrite("SecondWindString", &UWillowHUDGFxMovie::SecondWindString, py::return_value_policy::reference)
		.def_readwrite("PlayerRevivingString", &UWillowHUDGFxMovie::PlayerRevivingString, py::return_value_policy::reference)
		.def_readwrite("RevivingTargetString", &UWillowHUDGFxMovie::RevivingTargetString, py::return_value_policy::reference)
		.def_readwrite("InjuredTooltipString1", &UWillowHUDGFxMovie::InjuredTooltipString1, py::return_value_policy::reference)
		.def_readwrite("InjuredTooltipString2", &UWillowHUDGFxMovie::InjuredTooltipString2, py::return_value_policy::reference)
		.def_readwrite("ContextualPromptString", &UWillowHUDGFxMovie::ContextualPromptString, py::return_value_policy::reference)
		.def_readwrite("ContextualPromptButtonString", &UWillowHUDGFxMovie::ContextualPromptButtonString, py::return_value_policy::reference)
		.def_readwrite("CannotOpenMenuString", &UWillowHUDGFxMovie::CannotOpenMenuString, py::return_value_policy::reference)
		.def_readwrite("CannotSpendMoneyString", &UWillowHUDGFxMovie::CannotSpendMoneyString, py::return_value_policy::reference)
		.def_readwrite("BadassTokenGet", &UWillowHUDGFxMovie::BadassTokenGet, py::return_value_policy::reference)
		.def_readwrite("CharacterHeadGet", &UWillowHUDGFxMovie::CharacterHeadGet, py::return_value_policy::reference)
		.def_readwrite("CharacterSkinGet", &UWillowHUDGFxMovie::CharacterSkinGet, py::return_value_policy::reference)
		.def_readwrite("VehicleSkinGet", &UWillowHUDGFxMovie::VehicleSkinGet, py::return_value_policy::reference)
		.def_readwrite("XPGet", &UWillowHUDGFxMovie::XPGet, py::return_value_policy::reference)
		.def_readwrite("LastHUDTickTime", &UWillowHUDGFxMovie::LastHUDTickTime)
		.def_readwrite("CrosshairSmoothingSpeed", &UWillowHUDGFxMovie::CrosshairSmoothingSpeed)
		.def_readwrite("MyIpAddress", &UWillowHUDGFxMovie::MyIpAddress, py::return_value_policy::reference)
		.def_readwrite("LastLevelTimerTime", &UWillowHUDGFxMovie::LastLevelTimerTime)
		.def_readwrite("LevelTimerString", &UWillowHUDGFxMovie::LevelTimerString, py::return_value_policy::reference)
		.def_readwrite("GameStageString", &UWillowHUDGFxMovie::GameStageString, py::return_value_policy::reference)
		.def_readwrite("HealthLerpStartValue", &UWillowHUDGFxMovie::HealthLerpStartValue)
		.def_readwrite("HealthLerpCurrValue", &UWillowHUDGFxMovie::HealthLerpCurrValue)
		.def_readwrite("HealthLerpDesiredTime", &UWillowHUDGFxMovie::HealthLerpDesiredTime)
		.def_readwrite("HealthLerpElapsedTime", &UWillowHUDGFxMovie::HealthLerpElapsedTime)
		.def_readwrite("MyMissionWidget", &UWillowHUDGFxMovie::MyMissionWidget, py::return_value_policy::reference)
		.def_readwrite("MyMinimapWidget", &UWillowHUDGFxMovie::MyMinimapWidget, py::return_value_policy::reference)
		.def_readwrite("MyWorldSpaceWidget", &UWillowHUDGFxMovie::MyWorldSpaceWidget, py::return_value_policy::reference)
		.def_readwrite("MyTradingWidget", &UWillowHUDGFxMovie::MyTradingWidget, py::return_value_policy::reference)
		.def_readwrite("MyChallengesWidget", &UWillowHUDGFxMovie::MyChallengesWidget, py::return_value_policy::reference)
		.def_readwrite("CachedBossPawn", &UWillowHUDGFxMovie::CachedBossPawn, py::return_value_policy::reference)
		.def_readwrite("CachedBossHealthAmt", &UWillowHUDGFxMovie::CachedBossHealthAmt)
		.def_readwrite("CachedBossShieldAmt", &UWillowHUDGFxMovie::CachedBossShieldAmt)
		.def_readwrite("CachedBossName", &UWillowHUDGFxMovie::CachedBossName, py::return_value_policy::reference)
		.def_readwrite("CachedBossLevel", &UWillowHUDGFxMovie::CachedBossLevel)
		.def_readwrite("CachedPersistentMapName", &UWillowHUDGFxMovie::CachedPersistentMapName, py::return_value_policy::reference)
		.def_readwrite("LastRecordingCheckTime", &UWillowHUDGFxMovie::LastRecordingCheckTime)
		.def_readwrite("CachedTSkillIcon_Flask", &UWillowHUDGFxMovie::CachedTSkillIcon_Flask, py::return_value_policy::reference)
		.def_readwrite("AvailableTrackedSkills", &UWillowHUDGFxMovie::AvailableTrackedSkills, py::return_value_policy::reference)
		.def_readwrite("NumPurchasedTrigRespSlots", &UWillowHUDGFxMovie::NumPurchasedTrigRespSlots)
		.def_readwrite("RetryTrainingTime", &UWillowHUDGFxMovie::RetryTrainingTime)
		.def_readwrite("RetryTrainingDuration", &UWillowHUDGFxMovie::RetryTrainingDuration)
		.def_readwrite("RetryTraining_MessageString", &UWillowHUDGFxMovie::RetryTraining_MessageString, py::return_value_policy::reference)
		.def_readwrite("RetryTraining_TitleString", &UWillowHUDGFxMovie::RetryTraining_TitleString, py::return_value_policy::reference)
		.def_readwrite("RetryTraining_Duration", &UWillowHUDGFxMovie::RetryTraining_Duration)
		.def_readwrite("RetryTraining_DrawColor", &UWillowHUDGFxMovie::RetryTraining_DrawColor, py::return_value_policy::reference)
		.def_readwrite("RetryTraining_HUDInitializationFrame", &UWillowHUDGFxMovie::RetryTraining_HUDInitializationFrame, py::return_value_policy::reference)
		.def_readwrite("RetryTraining_PauseContinueDelay", &UWillowHUDGFxMovie::RetryTraining_PauseContinueDelay)
		.def_readwrite("RetryTraining_Related_PRI1", &UWillowHUDGFxMovie::RetryTraining_Related_PRI1, py::return_value_policy::reference)
		.def_readwrite("HUDGFxDef", &UWillowHUDGFxMovie::HUDGFxDef, py::return_value_policy::reference)
		.def_readwrite("StartTime", &UWillowHUDGFxMovie::StartTime)
		.def("ShouldShowAllyWidget", &UWillowHUDGFxMovie::ShouldShowAllyWidget)
		.def("ShowPullThePinNotification", &UWillowHUDGFxMovie::ShowPullThePinNotification)
		.def("extInitMinimapFogOfWar", &UWillowHUDGFxMovie::extInitMinimapFogOfWar)
		.def("extExecuteReadyNeedsUpdate", &UWillowHUDGFxMovie::extExecuteReadyNeedsUpdate)
		.def("GetDynamicFOVScalar", &UWillowHUDGFxMovie::GetDynamicFOVScalar)
		.def("GetActualCoordsForAnchor", &UWillowHUDGFxMovie::GetActualCoordsForAnchor, py::return_value_policy::reference)
		.def("ApplyElementScaling", &UWillowHUDGFxMovie::ApplyElementScaling)
		.def("eventShowRewardPopup", &UWillowHUDGFxMovie::eventShowRewardPopup)
		.def("eventOnSetViewport", &UWillowHUDGFxMovie::eventOnSetViewport)
		.def("UpdateMinimapRadius", &UWillowHUDGFxMovie::UpdateMinimapRadius)
		.def("eventSetExCurrency", &UWillowHUDGFxMovie::eventSetExCurrency)
		.def("eventSetCredits", &UWillowHUDGFxMovie::eventSetCredits)
		.def("extContextualPromptFadedOut", &UWillowHUDGFxMovie::extContextualPromptFadedOut)
		.def("ToggleContextualPrompt", &UWillowHUDGFxMovie::ToggleContextualPrompt)
		.def("UpdateSkillIcon", &UWillowHUDGFxMovie::UpdateSkillIcon)
		.def("FindTrackedSkill", &UWillowHUDGFxMovie::FindTrackedSkill)
		.def("UpdateSkillIcons", &UWillowHUDGFxMovie::UpdateSkillIcons)
		.def("GetRemappedSlot", &UWillowHUDGFxMovie::GetRemappedSlot)
		.def("SortAvailableTrackedSkills", &UWillowHUDGFxMovie::SortAvailableTrackedSkills)
		.def("eventInitSkillIconsAvailability", &UWillowHUDGFxMovie::eventInitSkillIconsAvailability)
		.def("AddTrackedSkill", &UWillowHUDGFxMovie::AddTrackedSkill)
		.def("UpdateRecording", &UWillowHUDGFxMovie::UpdateRecording)
		.def("UpdateBossBar", &UWillowHUDGFxMovie::UpdateBossBar)
		.def("ShowChapterHeader", &UWillowHUDGFxMovie::ShowChapterHeader)
		.def("ResetShieldPrimeCachedValues", &UWillowHUDGFxMovie::ResetShieldPrimeCachedValues)
		.def("SetShieldTriggeredState", &UWillowHUDGFxMovie::SetShieldTriggeredState)
		.def("AmmoAbsorbed", &UWillowHUDGFxMovie::AmmoAbsorbed)
		.def("EnableActionSkill", &UWillowHUDGFxMovie::EnableActionSkill)
		.def("ShowWorldDiscovery", &UWillowHUDGFxMovie::ShowWorldDiscovery)
		.def("ResumeActionSkillGuides", &UWillowHUDGFxMovie::ResumeActionSkillGuides)
		.def("HideActionSkillGuides", &UWillowHUDGFxMovie::HideActionSkillGuides)
		.def("extDuelClipEnded", &UWillowHUDGFxMovie::extDuelClipEnded)
		.def("UpdateCachedXPValue", &UWillowHUDGFxMovie::UpdateCachedXPValue)
		.def("extMissionModuleAnimFinished", &UWillowHUDGFxMovie::extMissionModuleAnimFinished)
		.def("DoMissionStatusFanfare", &UWillowHUDGFxMovie::DoMissionStatusFanfare)
		.def("UpdateBoundaryWarning", &UWillowHUDGFxMovie::UpdateBoundaryWarning)
		.def("eventTEMPClearOtherSkillIcons", &UWillowHUDGFxMovie::eventTEMPClearOtherSkillIcons)
		.def("eventToggleKillSkills", &UWillowHUDGFxMovie::eventToggleKillSkills)
		.def("ShowToolTip", &UWillowHUDGFxMovie::ShowToolTip)
		.def("SetEquippedCardUIStats", &UWillowHUDGFxMovie::SetEquippedCardUIStats)
		.def("UpdateEquippedCardFrom", &UWillowHUDGFxMovie::UpdateEquippedCardFrom)
		.def("extEquippedCardOpened", &UWillowHUDGFxMovie::extEquippedCardOpened)
		.def("HighlightSlotForPlayer", &UWillowHUDGFxMovie::HighlightSlotForPlayer)
		.def("DisplayAllyDing", &UWillowHUDGFxMovie::DisplayAllyDing)
		.def("DisplayGenericRevive", &UWillowHUDGFxMovie::DisplayGenericRevive)
		.def("DisplaySecondWind", &UWillowHUDGFxMovie::DisplaySecondWind)
		.def("DisplayDuel", &UWillowHUDGFxMovie::DisplayDuel)
		.def("DisplayLevelUp", &UWillowHUDGFxMovie::DisplayLevelUp)
		.def("TickDisplayLevelUp", &UWillowHUDGFxMovie::TickDisplayLevelUp)
		.def("CanDisplayLevelUp", &UWillowHUDGFxMovie::CanDisplayLevelUp)
		.def("QueueDisplayLevelUp", &UWillowHUDGFxMovie::QueueDisplayLevelUp)
		.def("FreeResourcesInArray", &UWillowHUDGFxMovie::FreeResourcesInArray)
		.def("HideQuickSelectWeaponMenuForPlayer", &UWillowHUDGFxMovie::HideQuickSelectWeaponMenuForPlayer)
		.def("PrivateOpenQuickSelectWeaponMenuForPlayer", &UWillowHUDGFxMovie::PrivateOpenQuickSelectWeaponMenuForPlayer)
		.def("SetResourcesInArray", &UWillowHUDGFxMovie::SetResourcesInArray)
		.def("OpenQuickSelectWeaponMenuForPlayer", &UWillowHUDGFxMovie::OpenQuickSelectWeaponMenuForPlayer)
		.def("SetDangerousIconDifference", &UWillowHUDGFxMovie::SetDangerousIconDifference)
		.def("extTrainingTextBoxOpened", &UWillowHUDGFxMovie::extTrainingTextBoxOpened)
		.def("CloseTrainingTextBox", &UWillowHUDGFxMovie::CloseTrainingTextBox)
		.def("OpenTrainingTextBox", &UWillowHUDGFxMovie::OpenTrainingTextBox)
		.def("DrawTrainingText", &UWillowHUDGFxMovie::DrawTrainingText)
		.def("DrawChatText", &UWillowHUDGFxMovie::DrawChatText)
		.def("GetFontColorTag", &UWillowHUDGFxMovie::GetFontColorTag, py::return_value_policy::reference)
		.def("DrawCriticalText", &UWillowHUDGFxMovie::DrawCriticalText)
		.def("TickCriticalText", &UWillowHUDGFxMovie::TickCriticalText)
		.def("eventClearTrainingText", &UWillowHUDGFxMovie::eventClearTrainingText)
		.def("eventAddTrainingText", &UWillowHUDGFxMovie::eventAddTrainingText)
		.def("eventAddChatText", &UWillowHUDGFxMovie::eventAddChatText)
		.def("eventAddCriticalText", &UWillowHUDGFxMovie::eventAddCriticalText)
		.def("UpdateDebug", &UWillowHUDGFxMovie::UpdateDebug)
		.def("DisplayCouldNotSpendMoneyMessage", &UWillowHUDGFxMovie::DisplayCouldNotSpendMoneyMessage)
		.def("DisplayCouldNotOpenMenuMessage", &UWillowHUDGFxMovie::DisplayCouldNotOpenMenuMessage)
		.def("DisplayCouldNotPickUpMessage", &UWillowHUDGFxMovie::DisplayCouldNotPickUpMessage)
		.def("extTooltipFadedOut", &UWillowHUDGFxMovie::extTooltipFadedOut)
		.def("extShieldTriggerComplete", &UWillowHUDGFxMovie::extShieldTriggerComplete)
		.def("extEnemyRingFadeInFinished", &UWillowHUDGFxMovie::extEnemyRingFadeInFinished)
		.def("extEnemyRingFadeOutFinished", &UWillowHUDGFxMovie::extEnemyRingFadeOutFinished)
		.def("UpdateTargetInformation", &UWillowHUDGFxMovie::UpdateTargetInformation)
		.def("UpdateCurrentTarget", &UWillowHUDGFxMovie::UpdateCurrentTarget)
		.def("SetVehicleUIWidgetVisibility", &UWillowHUDGFxMovie::SetVehicleUIWidgetVisibility)
		.def("HideEchoCaller", &UWillowHUDGFxMovie::HideEchoCaller)
		.def("ShowEchoCaller", &UWillowHUDGFxMovie::ShowEchoCaller)
		.def("UpdateSplitRegion", &UWillowHUDGFxMovie::UpdateSplitRegion)
		.def("Refresh", &UWillowHUDGFxMovie::Refresh)
		.def("UpdateMainFrame", &UWillowHUDGFxMovie::UpdateMainFrame)
		.def("extResAnimFinished", &UWillowHUDGFxMovie::extResAnimFinished)
		.def("ClearAllyCache", &UWillowHUDGFxMovie::ClearAllyCache)
		.def("UpdateAllyTeamBuffs", &UWillowHUDGFxMovie::UpdateAllyTeamBuffs)
		.def("UpdateAllyInjured", &UWillowHUDGFxMovie::UpdateAllyInjured)
		.def("UpdateAllyTalkingFromNetId", &UWillowHUDGFxMovie::UpdateAllyTalkingFromNetId)
		.def("UpdateAllyTalking", &UWillowHUDGFxMovie::UpdateAllyTalking)
		.def("UpdateAllyClassMod", &UWillowHUDGFxMovie::UpdateAllyClassMod)
		.def("UpdateAllyName", &UWillowHUDGFxMovie::UpdateAllyName)
		.def("UpdateAllyCharacter", &UWillowHUDGFxMovie::UpdateAllyCharacter)
		.def("UpdateAllyLevel", &UWillowHUDGFxMovie::UpdateAllyLevel)
		.def("UpdateAllyShield", &UWillowHUDGFxMovie::UpdateAllyShield)
		.def("UpdateAllyHealth", &UWillowHUDGFxMovie::UpdateAllyHealth)
		.def("SetAllyVisible", &UWillowHUDGFxMovie::SetAllyVisible)
		.def("UpdateInteractionIcon", &UWillowHUDGFxMovie::UpdateInteractionIcon)
		.def("UpdateCrouched", &UWillowHUDGFxMovie::UpdateCrouched)
		.def("UpdateBootup", &UWillowHUDGFxMovie::UpdateBootup)
		.def("UpdateInjured", &UWillowHUDGFxMovie::UpdateInjured)
		.def("UpdateExCurrency", &UWillowHUDGFxMovie::UpdateExCurrency)
		.def("UpdateCredits", &UWillowHUDGFxMovie::UpdateCredits)
		.def("UpdateAfterburner", &UWillowHUDGFxMovie::UpdateAfterburner)
		.def("UpdateSkillPoints", &UWillowHUDGFxMovie::UpdateSkillPoints)
		.def("UpdateCharacter", &UWillowHUDGFxMovie::UpdateCharacter)
		.def("UpdateClassMod", &UWillowHUDGFxMovie::UpdateClassMod)
		.def("UpdateLevel", &UWillowHUDGFxMovie::UpdateLevel)
		.def("UpdateGrenades", &UWillowHUDGFxMovie::UpdateGrenades)
		.def("UpdateAmmo", &UWillowHUDGFxMovie::UpdateAmmo)
		.def("UpdateActionSkillPortrait", &UWillowHUDGFxMovie::UpdateActionSkillPortrait)
		.def("UpdateActionSkill", &UWillowHUDGFxMovie::UpdateActionSkill)
		.def("UpdateXP", &UWillowHUDGFxMovie::UpdateXP)
		.def("UpdateShield", &UWillowHUDGFxMovie::UpdateShield)
		.def("UpdateHealth", &UWillowHUDGFxMovie::UpdateHealth)
		.def("GetUncappedXP", &UWillowHUDGFxMovie::GetUncappedXP)
		.def("InitCachedValues", &UWillowHUDGFxMovie::InitCachedValues)
		.def("eventOnClose", &UWillowHUDGFxMovie::eventOnClose)
		.def("DoInitialSetupStuff", &UWillowHUDGFxMovie::DoInitialSetupStuff)
		.def("eventStart", &UWillowHUDGFxMovie::eventStart)
		.def("InitFromDefinition", &UWillowHUDGFxMovie::InitFromDefinition)
		.def("ShowIpAddress", &UWillowHUDGFxMovie::ShowIpAddress)
		.def("LevelTimer", &UWillowHUDGFxMovie::LevelTimer)
		.def("eventLoadDebugStrings", &UWillowHUDGFxMovie::eventLoadDebugStrings)
		.def("UpdateCachedPlayerInfo", &UWillowHUDGFxMovie::UpdateCachedPlayerInfo)
		.def("UpdateCachedViewportInfo", &UWillowHUDGFxMovie::UpdateCachedViewportInfo)
		;
	py::class_< UWillowGFxMoviePressStart, UWillowGFxMovie >(m, "UWillowGFxMoviePressStart")
		.def_property("bAsyncInProgress", [](UWillowGFxMoviePressStart &self){return self.bAsyncInProgress;}, [](UWillowGFxMoviePressStart &self, bool value){self.bAsyncInProgress = value ? 1 : 0;})
		.def_property("bDisableAttractLoop", [](UWillowGFxMoviePressStart &self){return self.bDisableAttractLoop;}, [](UWillowGFxMoviePressStart &self, bool value){self.bDisableAttractLoop = value ? 1 : 0;})
		.def_property("bMutedWorld", [](UWillowGFxMoviePressStart &self){return self.bMutedWorld;}, [](UWillowGFxMoviePressStart &self, bool value){self.bMutedWorld = value ? 1 : 0;})
		.def_property("ShouldStartSparkInitialization", [](UWillowGFxMoviePressStart &self){return self.ShouldStartSparkInitialization;}, [](UWillowGFxMoviePressStart &self, bool value){self.ShouldStartSparkInitialization = value ? 1 : 0;})
		.def_readwrite("IdleTimeBeforeStartingAttractLoop", &UWillowGFxMoviePressStart::IdleTimeBeforeStartingAttractLoop)
		.def_readwrite("CurrIdleTime", &UWillowGFxMoviePressStart::CurrIdleTime)
		.def_readwrite("AttractModeMovieName", &UWillowGFxMoviePressStart::AttractModeMovieName, py::return_value_policy::reference)
		.def_readwrite("Legal_ESRBDisclaimer", &UWillowGFxMoviePressStart::Legal_ESRBDisclaimer, py::return_value_policy::reference)
		.def_readwrite("Legal_GearboxTrademarks", &UWillowGFxMoviePressStart::Legal_GearboxTrademarks, py::return_value_policy::reference)
		.def_readwrite("Legal_GearboxTrademarks_Console", &UWillowGFxMoviePressStart::Legal_GearboxTrademarks_Console, py::return_value_policy::reference)
		.def_readwrite("TimerPauseTicker", &UWillowGFxMoviePressStart::TimerPauseTicker, py::return_value_policy::reference)
		.def_readwrite("CurrentStartupStep", &UWillowGFxMoviePressStart::CurrentStartupStep)
		.def("extSetLegalText", &UWillowGFxMoviePressStart::extSetLegalText)
		.def("IsTimerActive", &UWillowGFxMoviePressStart::IsTimerActive)
		.def("ClearTimer", &UWillowGFxMoviePressStart::ClearTimer)
		.def("SetTimer", &UWillowGFxMoviePressStart::SetTimer)
		.def("ValidateEggCode", &UWillowGFxMoviePressStart::ValidateEggCode)
		.def("eventOnClose", &UWillowGFxMoviePressStart::eventOnClose)
		.def("ClearDelegates", &UWillowGFxMoviePressStart::ClearDelegates)
		.def("ContinueToMenu", &UWillowGFxMoviePressStart::ContinueToMenu)
		.def("SessionCreationComplete", &UWillowGFxMoviePressStart::SessionCreationComplete)
		.def("OnCreateOnlineGameComplete", &UWillowGFxMoviePressStart::OnCreateOnlineGameComplete)
		.def("TryCreateLANGame", &UWillowGFxMoviePressStart::TryCreateLANGame)
		.def("TryCreateInternetGame", &UWillowGFxMoviePressStart::TryCreateInternetGame)
		.def("CreateSession", &UWillowGFxMoviePressStart::CreateSession)
		.def("GetFrontEndMovieDef", &UWillowGFxMoviePressStart::GetFrontEndMovieDef, py::return_value_policy::reference)
		.def("DoStartupDeviceSelection", &UWillowGFxMoviePressStart::DoStartupDeviceSelection)
		.def("PatcherDownloadProcessComplete", &UWillowGFxMoviePressStart::PatcherDownloadProcessComplete)
		.def("DownloadPatcherFiles", &UWillowGFxMoviePressStart::DownloadPatcherFiles)
		.def("RefreshMissionTracker", &UWillowGFxMoviePressStart::RefreshMissionTracker)
		.def("DlcRefreshComplete", &UWillowGFxMoviePressStart::DlcRefreshComplete)
		.def("DlcRefreshCompleteFromBusy", &UWillowGFxMoviePressStart::DlcRefreshCompleteFromBusy)
		.def("DoDlcEnumeration", &UWillowGFxMoviePressStart::DoDlcEnumeration)
		.def("DoSparkAuthentication", &UWillowGFxMoviePressStart::DoSparkAuthentication)
		.def("PerformStartupStep", &UWillowGFxMoviePressStart::PerformStartupStep)
		.def("GotoNextStartupStep", &UWillowGFxMoviePressStart::GotoNextStartupStep)
		.def("BeginStartupProcess", &UWillowGFxMoviePressStart::BeginStartupProcess)
		.def("CustomPlay", &UWillowGFxMoviePressStart::CustomPlay)
		.def("extContinue", &UWillowGFxMoviePressStart::extContinue)
		.def("extBeginWait", &UWillowGFxMoviePressStart::extBeginWait)
		.def("HandleEggInput", &UWillowGFxMoviePressStart::HandleEggInput)
		.def("HandleInputKey_AtTitle", &UWillowGFxMoviePressStart::HandleInputKey_AtTitle)
		.def("HandleInputKey_ShowingLegal", &UWillowGFxMoviePressStart::HandleInputKey_ShowingLegal)
		.def("ConditionalSkipToMenu", &UWillowGFxMoviePressStart::ConditionalSkipToMenu)
		.def("OnReturnToTitleScreen_Click", &UWillowGFxMoviePressStart::OnReturnToTitleScreen_Click)
		.def("IsDialogOpen", &UWillowGFxMoviePressStart::IsDialogOpen)
		.def("eventOnTick", &UWillowGFxMoviePressStart::eventOnTick)
		.def("OnInviteDialogClicked", &UWillowGFxMoviePressStart::OnInviteDialogClicked)
		.def("eventStart", &UWillowGFxMoviePressStart::eventStart)
		.def("StopAttractLoop", &UWillowGFxMoviePressStart::StopAttractLoop)
		.def("IsAttractPlaying", &UWillowGFxMoviePressStart::IsAttractPlaying)
		.def("PlayAttractLoop", &UWillowGFxMoviePressStart::PlayAttractLoop)
		;
	py::class_< UWillowGFxMovie3DDefinition, UGFxMovieDefinition >(m, "UWillowGFxMovie3DDefinition")
		.def_property("bSetMatricesEveryTick", [](UWillowGFxMovie3DDefinition &self){return self.bSetMatricesEveryTick;}, [](UWillowGFxMovie3DDefinition &self, bool value){self.bSetMatricesEveryTick = value ? 1 : 0;})
		.def_readwrite("View3DFOV", &UWillowGFxMovie3DDefinition::View3DFOV)
		.def_readwrite("View3DScale", &UWillowGFxMovie3DDefinition::View3DScale)
		.def_readwrite("View3DTrans", &UWillowGFxMovie3DDefinition::View3DTrans, py::return_value_policy::reference)
		.def_readwrite("View3DRot", &UWillowGFxMovie3DDefinition::View3DRot, py::return_value_policy::reference)
		.def_readwrite("SplitscreenFOVScalar", &UWillowGFxMovie3DDefinition::SplitscreenFOVScalar)
		.def_readwrite("SplitscreenSizeScalar", &UWillowGFxMovie3DDefinition::SplitscreenSizeScalar)
		.def_readwrite("VerticalSplitscreenPanning", &UWillowGFxMovie3DDefinition::VerticalSplitscreenPanning)
		.def_readwrite("VerticalSplitscreenPanning_Spread", &UWillowGFxMovie3DDefinition::VerticalSplitscreenPanning_Spread)
		;
	py::class_< UBankGFxDefinition, UWillowGFxMovie3DDefinition >(m, "UBankGFxDefinition")
		.def_readwrite("LeftSideDef", &UBankGFxDefinition::LeftSideDef, py::return_value_policy::reference)
		.def_readwrite("RightSideDef", &UBankGFxDefinition::RightSideDef, py::return_value_policy::reference)
		.def_readwrite("EmptySlotColor", &UBankGFxDefinition::EmptySlotColor, py::return_value_policy::reference)
		.def_readwrite("CardCellWidth", &UBankGFxDefinition::CardCellWidth)
		.def_readwrite("CardCellHeight", &UBankGFxDefinition::CardCellHeight)
		.def_readwrite("CardTextureWidth", &UBankGFxDefinition::CardTextureWidth)
		.def_readwrite("CardTextureHeight", &UBankGFxDefinition::CardTextureHeight)
		.def_readwrite("Card1ExternalTextureMap", &UBankGFxDefinition::Card1ExternalTextureMap, py::return_value_policy::reference)
		.def_readwrite("Card2ExternalTextureMap", &UBankGFxDefinition::Card2ExternalTextureMap, py::return_value_policy::reference)
		;
	py::class_< UCreditsGFxDefinition, UWillowGFxMovie3DDefinition >(m, "UCreditsGFxDefinition")
		.def_property("bLoopMontageImages", [](UCreditsGFxDefinition &self){return self.bLoopMontageImages;}, [](UCreditsGFxDefinition &self, bool value){self.bLoopMontageImages = value ? 1 : 0;})
		.def_readwrite("CreditData", &UCreditsGFxDefinition::CreditData, py::return_value_policy::reference)
		.def_readwrite("DefaultSpeed", &UCreditsGFxDefinition::DefaultSpeed)
		.def_readwrite("MaxFastForwardSpeed", &UCreditsGFxDefinition::MaxFastForwardSpeed)
		.def_readwrite("MaxRewindSpeed", &UCreditsGFxDefinition::MaxRewindSpeed)
		.def_readwrite("ImageMontage", &UCreditsGFxDefinition::ImageMontage, py::return_value_policy::reference)
		.def_readwrite("ImageMontagePackageName", &UCreditsGFxDefinition::ImageMontagePackageName, py::return_value_policy::reference)
		.def_readwrite("ImageDuration", &UCreditsGFxDefinition::ImageDuration)
		.def_readwrite("ImageBlankSpace", &UCreditsGFxDefinition::ImageBlankSpace)
		.def_readwrite("InitialBlankSpace", &UCreditsGFxDefinition::InitialBlankSpace)
		.def_readwrite("MiddlewareLogosPackageName", &UCreditsGFxDefinition::MiddlewareLogosPackageName, py::return_value_policy::reference)
		.def_readwrite("MiddlewareTexturePath", &UCreditsGFxDefinition::MiddlewareTexturePath, py::return_value_policy::reference)
		.def_readwrite("SplatPackageName", &UCreditsGFxDefinition::SplatPackageName, py::return_value_policy::reference)
		.def_readwrite("SplatTexturePath", &UCreditsGFxDefinition::SplatTexturePath, py::return_value_policy::reference)
		;
	py::class_< UItemInspectionGFxMovieDefinition, UWillowGFxMovie3DDefinition >(m, "UItemInspectionGFxMovieDefinition")
		.def_readwrite("ItemFOV", &UItemInspectionGFxMovieDefinition::ItemFOV)
		.def_readwrite("ItemScale", &UItemInspectionGFxMovieDefinition::ItemScale)
		.def_readwrite("RotationSpeed", &UItemInspectionGFxMovieDefinition::RotationSpeed)
		.def_readwrite("ScaleSpeed", &UItemInspectionGFxMovieDefinition::ScaleSpeed)
		.def_readwrite("ScaleMin", &UItemInspectionGFxMovieDefinition::ScaleMin)
		.def_readwrite("ScaleMax", &UItemInspectionGFxMovieDefinition::ScaleMax)
		.def_readwrite("IntroTime", &UItemInspectionGFxMovieDefinition::IntroTime)
		.def_readwrite("IntroRotation", &UItemInspectionGFxMovieDefinition::IntroRotation, py::return_value_policy::reference)
		.def_readwrite("IntroRotationRandomness", &UItemInspectionGFxMovieDefinition::IntroRotationRandomness, py::return_value_policy::reference)
		.def_readwrite("IntroRotationAlphaPowerRandomness", &UItemInspectionGFxMovieDefinition::IntroRotationAlphaPowerRandomness)
		.def_readwrite("HeightThreshold", &UItemInspectionGFxMovieDefinition::HeightThreshold)
		;
	py::class_< UVehicleSpawnStationGFxDefinition, UWillowGFxMovie3DDefinition >(m, "UVehicleSpawnStationGFxDefinition")
		.def_property("bUsePPOverride", [](UVehicleSpawnStationGFxDefinition &self){return self.bUsePPOverride;}, [](UVehicleSpawnStationGFxDefinition &self, bool value){self.bUsePPOverride = value ? 1 : 0;})
		.def_readwrite("SupportedTags", &UVehicleSpawnStationGFxDefinition::SupportedTags, py::return_value_policy::reference)
		.def_readwrite("RequiredTags", &UVehicleSpawnStationGFxDefinition::RequiredTags, py::return_value_policy::reference)
		.def_readwrite("PostProcessInterpolationTime", &UVehicleSpawnStationGFxDefinition::PostProcessInterpolationTime)
		.def_readwrite("PreviewMeshFOV", &UVehicleSpawnStationGFxDefinition::PreviewMeshFOV)
		.def_readwrite("PreviewMeshScale", &UVehicleSpawnStationGFxDefinition::PreviewMeshScale)
		.def_readwrite("IntroTime", &UVehicleSpawnStationGFxDefinition::IntroTime)
		.def_readwrite("HeaderTextOverrideKey", &UVehicleSpawnStationGFxDefinition::HeaderTextOverrideKey, py::return_value_policy::reference)
		;
	py::class_< UVendingMachineGFxDefinition, UWillowGFxMovie3DDefinition >(m, "UVendingMachineGFxDefinition")
		.def_readwrite("StrictGiveUpDistance", &UVendingMachineGFxDefinition::StrictGiveUpDistance)
		.def_readwrite("LooseGiveUpDistance", &UVendingMachineGFxDefinition::LooseGiveUpDistance)
		.def_readwrite("StrictTolerance", &UVendingMachineGFxDefinition::StrictTolerance)
		.def_readwrite("LooseTolerance", &UVendingMachineGFxDefinition::LooseTolerance)
		.def_readwrite("InitialLeftCell", &UVendingMachineGFxDefinition::InitialLeftCell, py::return_value_policy::reference)
		.def_readwrite("InitialRightCell", &UVendingMachineGFxDefinition::InitialRightCell, py::return_value_policy::reference)
		.def_readwrite("ItemOfTheDayCell", &UVendingMachineGFxDefinition::ItemOfTheDayCell, py::return_value_policy::reference)
		.def_readwrite("Card1Tex", &UVendingMachineGFxDefinition::Card1Tex, py::return_value_policy::reference)
		.def_readwrite("Card2Tex", &UVendingMachineGFxDefinition::Card2Tex, py::return_value_policy::reference)
		.def_readwrite("RightSideCellOrderNames", &UVendingMachineGFxDefinition::RightSideCellOrderNames, py::return_value_policy::reference)
		.def_readwrite("BackpackCellNames", &UVendingMachineGFxDefinition::BackpackCellNames, py::return_value_policy::reference)
		.def_readwrite("EquippedCellNames", &UVendingMachineGFxDefinition::EquippedCellNames, py::return_value_policy::reference)
		.def_readwrite("TotalNumberOfCells", &UVendingMachineGFxDefinition::TotalNumberOfCells)
		.def_readwrite("WeaponsLeftSideDef", &UVendingMachineGFxDefinition::WeaponsLeftSideDef, py::return_value_policy::reference)
		.def_readwrite("WeaponsRightSideDef", &UVendingMachineGFxDefinition::WeaponsRightSideDef, py::return_value_policy::reference)
		.def_readwrite("GrenadesLeftSideDef", &UVendingMachineGFxDefinition::GrenadesLeftSideDef, py::return_value_policy::reference)
		.def_readwrite("GrenadesRightSideDef", &UVendingMachineGFxDefinition::GrenadesRightSideDef, py::return_value_policy::reference)
		.def_readwrite("HealthLeftSideDef", &UVendingMachineGFxDefinition::HealthLeftSideDef, py::return_value_policy::reference)
		.def_readwrite("HealthRightSideDef", &UVendingMachineGFxDefinition::HealthRightSideDef, py::return_value_policy::reference)
		.def_readwrite("ItemOfTheDay_Texture_Width", &UVendingMachineGFxDefinition::ItemOfTheDay_Texture_Width)
		.def_readwrite("ItemOfTheDay_Texture_Height", &UVendingMachineGFxDefinition::ItemOfTheDay_Texture_Height)
		.def_readwrite("ItemOfTheDay_Cell_Width", &UVendingMachineGFxDefinition::ItemOfTheDay_Cell_Width)
		.def_readwrite("ItemOfTheDay_Cell_Height", &UVendingMachineGFxDefinition::ItemOfTheDay_Cell_Height)
		.def_readwrite("Card_Texture_Width", &UVendingMachineGFxDefinition::Card_Texture_Width)
		.def_readwrite("Card_Texture_Height", &UVendingMachineGFxDefinition::Card_Texture_Height)
		.def_readwrite("Card_Cell_Width", &UVendingMachineGFxDefinition::Card_Cell_Width)
		.def_readwrite("Card_Cell_Height", &UVendingMachineGFxDefinition::Card_Cell_Height)
		.def_readwrite("ItemOfTheDayTextureLinkage", &UVendingMachineGFxDefinition::ItemOfTheDayTextureLinkage, py::return_value_policy::reference)
		.def_readwrite("Card1TextureLinkage", &UVendingMachineGFxDefinition::Card1TextureLinkage, py::return_value_policy::reference)
		.def_readwrite("Card2TextureLinkage", &UVendingMachineGFxDefinition::Card2TextureLinkage, py::return_value_policy::reference)
		.def_readwrite("RefreshInterval", &UVendingMachineGFxDefinition::RefreshInterval)
		;
	py::class_< UWeaponScopeGFxDefinition, UWillowGFxMovie3DDefinition >(m, "UWeaponScopeGFxDefinition")
		.def_readwrite("LinkageMappings_Manufacturers", &UWeaponScopeGFxDefinition::LinkageMappings_Manufacturers, py::return_value_policy::reference)
		.def_readwrite("LinkageMappings_WeaponTypes", &UWeaponScopeGFxDefinition::LinkageMappings_WeaponTypes, py::return_value_policy::reference)
		;
	py::class_< UWillowGFxThirdPersonDefinition, UWillowGFxMovie3DDefinition >(m, "UWillowGFxThirdPersonDefinition")
		.def_property("bUsePPOverride", [](UWillowGFxThirdPersonDefinition &self){return self.bUsePPOverride;}, [](UWillowGFxThirdPersonDefinition &self, bool value){self.bUsePPOverride = value ? 1 : 0;})
		.def_property("bFixedYaw", [](UWillowGFxThirdPersonDefinition &self){return self.bFixedYaw;}, [](UWillowGFxThirdPersonDefinition &self, bool value){self.bFixedYaw = value ? 1 : 0;})
		.def_readwrite("CameraInterpSpeed", &UWillowGFxThirdPersonDefinition::CameraInterpSpeed)
		.def_readwrite("CloseInterpTime", &UWillowGFxThirdPersonDefinition::CloseInterpTime)
		.def_readwrite("CloseInterpDistSqThreshold", &UWillowGFxThirdPersonDefinition::CloseInterpDistSqThreshold)
		.def_readwrite("PostProcessInterpolationTime", &UWillowGFxThirdPersonDefinition::PostProcessInterpolationTime)
		.def_readwrite("TabViews", &UWillowGFxThirdPersonDefinition::TabViews, py::return_value_policy::reference)
		.def_readwrite("CameraPitchMin", &UWillowGFxThirdPersonDefinition::CameraPitchMin)
		.def_readwrite("CameraPitchMax", &UWillowGFxThirdPersonDefinition::CameraPitchMax)
		.def_readwrite("MenuRotationSpeed", &UWillowGFxThirdPersonDefinition::MenuRotationSpeed)
		.def_readwrite("MenuRotationSmoothingSpeed", &UWillowGFxThirdPersonDefinition::MenuRotationSmoothingSpeed)
		;
	py::class_< UCustomizationGFxDefinition, UWillowGFxThirdPersonDefinition >(m, "UCustomizationGFxDefinition")
		;
	py::class_< UWillowInventoryGFxDefinition, UWillowGFxThirdPersonDefinition >(m, "UWillowInventoryGFxDefinition")
		.def_readwrite("TF_Standard", &UWillowInventoryGFxDefinition::TF_Standard)
		.def_readwrite("TF_Trash", &UWillowInventoryGFxDefinition::TF_Trash)
		.def_readwrite("TF_Favorite", &UWillowInventoryGFxDefinition::TF_Favorite)
		.def_readwrite("TweenTime", &UWillowInventoryGFxDefinition::TweenTime)
		.def_readwrite("Panels", &UWillowInventoryGFxDefinition::Panels, py::return_value_policy::reference)
		.def_readwrite("Cards", &UWillowInventoryGFxDefinition::Cards, py::return_value_policy::reference)
		.def_readwrite("ExternalTextureMap", &UWillowInventoryGFxDefinition::ExternalTextureMap, py::return_value_policy::reference)
		.def_readwrite("CardExternalTextureMap", &UWillowInventoryGFxDefinition::CardExternalTextureMap, py::return_value_policy::reference)
		;
	py::class_< UStatusMenuGFxDefinition, UWillowInventoryGFxDefinition >(m, "UStatusMenuGFxDefinition")
		.def_readwrite("Directions", &UStatusMenuGFxDefinition::Directions, py::return_value_policy::reference)
		.def_readwrite("NumEntriesOnMissionLog", &UStatusMenuGFxDefinition::NumEntriesOnMissionLog)
		.def_readwrite("MissionLogTextDefinition", &UStatusMenuGFxDefinition::MissionLogTextDefinition, py::return_value_policy::reference)
		.def_readwrite("Pres_Active", &UStatusMenuGFxDefinition::Pres_Active, py::return_value_policy::reference)
		.def_readwrite("Pres_ActivePlot", &UStatusMenuGFxDefinition::Pres_ActivePlot, py::return_value_policy::reference)
		.def_readwrite("Pres_ReadyToTurnIn", &UStatusMenuGFxDefinition::Pres_ReadyToTurnIn, py::return_value_policy::reference)
		.def_readwrite("Pres_NotStarted", &UStatusMenuGFxDefinition::Pres_NotStarted, py::return_value_policy::reference)
		.def_readwrite("Pres_Complete", &UStatusMenuGFxDefinition::Pres_Complete, py::return_value_policy::reference)
		.def_readwrite("Pres_Ineligible", &UStatusMenuGFxDefinition::Pres_Ineligible, py::return_value_policy::reference)
		.def_readwrite("Pres_Failed", &UStatusMenuGFxDefinition::Pres_Failed, py::return_value_policy::reference)
		.def_readwrite("UnselectedChallengeLogTextColor", &UStatusMenuGFxDefinition::UnselectedChallengeLogTextColor, py::return_value_policy::reference)
		.def_readwrite("ChallengeLogTextDefinition", &UStatusMenuGFxDefinition::ChallengeLogTextDefinition, py::return_value_policy::reference)
		.def_readwrite("EmptyInventorySlotColor", &UStatusMenuGFxDefinition::EmptyInventorySlotColor, py::return_value_policy::reference)
		.def_readwrite("Up", &UStatusMenuGFxDefinition::Up, py::return_value_policy::reference)
		.def_readwrite("Down", &UStatusMenuGFxDefinition::Down, py::return_value_policy::reference)
		.def_readwrite("Left", &UStatusMenuGFxDefinition::Left, py::return_value_policy::reference)
		.def_readwrite("Right", &UStatusMenuGFxDefinition::Right, py::return_value_policy::reference)
		.def_readwrite("Shield", &UStatusMenuGFxDefinition::Shield, py::return_value_policy::reference)
		.def_readwrite("mod", &UStatusMenuGFxDefinition::mod, py::return_value_policy::reference)
		.def_readwrite("Deck", &UStatusMenuGFxDefinition::Deck, py::return_value_policy::reference)
		.def_readwrite("ReadyWeaponUpIdx", &UStatusMenuGFxDefinition::ReadyWeaponUpIdx)
		.def_readwrite("ReadyWeaponDownIdx", &UStatusMenuGFxDefinition::ReadyWeaponDownIdx)
		.def_readwrite("ReadyWeaponLeftIdx", &UStatusMenuGFxDefinition::ReadyWeaponLeftIdx)
		.def_readwrite("ReadyWeaponRightIdx", &UStatusMenuGFxDefinition::ReadyWeaponRightIdx)
		.def_readwrite("EquippedShieldIdx", &UStatusMenuGFxDefinition::EquippedShieldIdx)
		.def_readwrite("EquippedGrenadeModIdx", &UStatusMenuGFxDefinition::EquippedGrenadeModIdx)
		.def_readwrite("EquippedClassModIdx", &UStatusMenuGFxDefinition::EquippedClassModIdx)
		.def_readwrite("EquippedArtifactIdx", &UStatusMenuGFxDefinition::EquippedArtifactIdx)
		.def_readwrite("ReadyWeaponUpSuffix", &UStatusMenuGFxDefinition::ReadyWeaponUpSuffix)
		.def_readwrite("ReadyWeaponDownSuffix", &UStatusMenuGFxDefinition::ReadyWeaponDownSuffix)
		.def_readwrite("ReadyWeaponLeftSuffix", &UStatusMenuGFxDefinition::ReadyWeaponLeftSuffix)
		.def_readwrite("ReadyWeaponRightSuffix", &UStatusMenuGFxDefinition::ReadyWeaponRightSuffix)
		.def_readwrite("EquippedShieldSuffix", &UStatusMenuGFxDefinition::EquippedShieldSuffix)
		.def_readwrite("EquippedGrenadeModSuffix", &UStatusMenuGFxDefinition::EquippedGrenadeModSuffix)
		.def_readwrite("EquippedClassModSuffix", &UStatusMenuGFxDefinition::EquippedClassModSuffix)
		.def_readwrite("EquippedArtifactSuffix", &UStatusMenuGFxDefinition::EquippedArtifactSuffix)
		.def_readwrite("EquippedCellWidth", &UStatusMenuGFxDefinition::EquippedCellWidth)
		.def_readwrite("EquippedCellHeight", &UStatusMenuGFxDefinition::EquippedCellHeight)
		.def_readwrite("EquippedSmCellWidth", &UStatusMenuGFxDefinition::EquippedSmCellWidth)
		.def_readwrite("EquippedSmCellHeight", &UStatusMenuGFxDefinition::EquippedSmCellHeight)
		.def_readwrite("EquippedTextureWidth", &UStatusMenuGFxDefinition::EquippedTextureWidth)
		.def_readwrite("EquippedTextureHeight", &UStatusMenuGFxDefinition::EquippedTextureHeight)
		.def_readwrite("CardCellWidth", &UStatusMenuGFxDefinition::CardCellWidth)
		.def_readwrite("CardCellHeight", &UStatusMenuGFxDefinition::CardCellHeight)
		.def_readwrite("CardTextureWidth", &UStatusMenuGFxDefinition::CardTextureWidth)
		.def_readwrite("CardTextureHeight", &UStatusMenuGFxDefinition::CardTextureHeight)
		.def_readwrite("BackpackCellWidth", &UStatusMenuGFxDefinition::BackpackCellWidth)
		.def_readwrite("BackpackCellHeight", &UStatusMenuGFxDefinition::BackpackCellHeight)
		.def_readwrite("SkillDef", &UStatusMenuGFxDefinition::SkillDef, py::return_value_policy::reference)
		.def_readwrite("InventoryPanelPath", &UStatusMenuGFxDefinition::InventoryPanelPath, py::return_value_policy::reference)
		.def_readwrite("ChallengesPanelDef", &UStatusMenuGFxDefinition::ChallengesPanelDef, py::return_value_policy::reference)
		.def_readwrite("LatentRewardDef", &UStatusMenuGFxDefinition::LatentRewardDef, py::return_value_policy::reference)
		;
	py::class_< UTradingGFxDefinition, UWillowInventoryGFxDefinition >(m, "UTradingGFxDefinition")
		;
	py::class_< UWillowHUDGFxMovieDefinition, UWillowGFxMovie3DDefinition >(m, "UWillowHUDGFxMovieDefinition")
		.def_readwrite("MinimapRadius", &UWillowHUDGFxMovieDefinition::MinimapRadius)
		.def_readwrite("MinimapRadiusInVehicle", &UWillowHUDGFxMovieDefinition::MinimapRadiusInVehicle)
		.def_readwrite("MinimapRadiusLerpTime", &UWillowHUDGFxMovieDefinition::MinimapRadiusLerpTime)
		.def_readwrite("AlphaForInWorldObjectives", &UWillowHUDGFxMovieDefinition::AlphaForInWorldObjectives)
		.def_readwrite("StatusFanfareTweenTime", &UWillowHUDGFxMovieDefinition::StatusFanfareTweenTime)
		.def_readwrite("WorldSpaceIconRangeIn", &UWillowHUDGFxMovieDefinition::WorldSpaceIconRangeIn)
		.def_readwrite("WorldSpaceIconRangeOut", &UWillowHUDGFxMovieDefinition::WorldSpaceIconRangeOut)
		.def_readwrite("WorldSpaceIconLerpTime", &UWillowHUDGFxMovieDefinition::WorldSpaceIconLerpTime)
		.def_readwrite("ObjFadeAlpha", &UWillowHUDGFxMovieDefinition::ObjFadeAlpha)
		.def_readwrite("ObjFadeScale", &UWillowHUDGFxMovieDefinition::ObjFadeScale)
		.def_readwrite("ObjFadeSpeed", &UWillowHUDGFxMovieDefinition::ObjFadeSpeed)
		.def_readwrite("OcclusionTestInterval", &UWillowHUDGFxMovieDefinition::OcclusionTestInterval)
		.def_readwrite("OcclusionAlpha", &UWillowHUDGFxMovieDefinition::OcclusionAlpha)
		.def_readwrite("ChallengePart1Time", &UWillowHUDGFxMovieDefinition::ChallengePart1Time)
		.def_readwrite("ChallengePart2Time", &UWillowHUDGFxMovieDefinition::ChallengePart2Time)
		.def_readwrite("NoLevelAllegiances", &UWillowHUDGFxMovieDefinition::NoLevelAllegiances, py::return_value_policy::reference)
		.def_readwrite("UsableFadeAllegiances", &UWillowHUDGFxMovieDefinition::UsableFadeAllegiances, py::return_value_policy::reference)
		.def_readwrite("RecordingObjectives", &UWillowHUDGFxMovieDefinition::RecordingObjectives, py::return_value_policy::reference)
		.def_readwrite("RecordingMaps", &UWillowHUDGFxMovieDefinition::RecordingMaps, py::return_value_policy::reference)
		.def_readwrite("ScaledElements", &UWillowHUDGFxMovieDefinition::ScaledElements, py::return_value_policy::reference)
		.def_readwrite("InjuredStringReplacements", &UWillowHUDGFxMovieDefinition::InjuredStringReplacements, py::return_value_policy::reference)
		;
	py::class_< UWillowGFxMovieStatePlatform, UGFxMovieState >(m, "UWillowGFxMovieStatePlatform")
		.def_property("UseXboxFrameForPCWithGamepad", [](UWillowGFxMovieStatePlatform &self){return self.UseXboxFrameForPCWithGamepad;}, [](UWillowGFxMovieStatePlatform &self, bool value){self.UseXboxFrameForPCWithGamepad = value ? 1 : 0;})
		.def_readwrite("PlatformStates", &UWillowGFxMovieStatePlatform::PlatformStates, py::return_value_policy::reference)
		;
	py::class_< UWillowGFxMovieStateUsable, UGFxMovieState >(m, "UWillowGFxMovieStateUsable")
		.def_readwrite("UsabilityStates", &UWillowGFxMovieStateUsable::UsabilityStates, py::return_value_policy::reference)
		;
	py::class_< UWillowGFxUIManager, UObject >(m, "UWillowGFxUIManager")
		.def_property("bDefaultScreenMesh", [](UWillowGFxUIManager &self){return self.bDefaultScreenMesh;}, [](UWillowGFxUIManager &self, bool value){self.bDefaultScreenMesh = value ? 1 : 0;})
		.def_property("bPassAxisInputToScreenMovies", [](UWillowGFxUIManager &self){return self.bPassAxisInputToScreenMovies;}, [](UWillowGFxUIManager &self, bool value){self.bPassAxisInputToScreenMovies = value ? 1 : 0;})
		.def_readwrite("MyDefinition", &UWillowGFxUIManager::MyDefinition, py::return_value_policy::reference)
		.def_readwrite("PlayerOwner", &UWillowGFxUIManager::PlayerOwner, py::return_value_policy::reference)
		.def_readwrite("PlayerViewOffset", &UWillowGFxUIManager::PlayerViewOffset, py::return_value_policy::reference)
		.def_readwrite("ScreenMesh", &UWillowGFxUIManager::ScreenMesh, py::return_value_policy::reference)
		.def_readwrite("RenderTarget", &UWillowGFxUIManager::RenderTarget, py::return_value_policy::reference)
		.def_readwrite("ScreenMovies", &UWillowGFxUIManager::ScreenMovies, py::return_value_policy::reference)
		.def_readwrite("TheLobby", &UWillowGFxUIManager::TheLobby, py::return_value_policy::reference)
		.def_readwrite("__OnMovieSpawned__Delegate", &UWillowGFxUIManager::__OnMovieSpawned__Delegate, py::return_value_policy::reference)
		.def("WantsPause", &UWillowGFxUIManager::WantsPause)
		.def("UpdatePause", &UWillowGFxUIManager::UpdatePause)
		.def("Movie_OnClosed", &UWillowGFxUIManager::Movie_OnClosed)
		.def("ScreenMovie_OnClosed", &UWillowGFxUIManager::ScreenMovie_OnClosed)
		.def("UpdateFocus", &UWillowGFxUIManager::UpdateFocus)
		.def("FindFocusMovie", &UWillowGFxUIManager::FindFocusMovie, py::return_value_policy::reference)
		.def("ShowTrainingDialog", &UWillowGFxUIManager::ShowTrainingDialog, py::return_value_policy::reference)
		.def("ShowEditDialog", &UWillowGFxUIManager::ShowEditDialog, py::return_value_policy::reference)
		.def("ShowDialog", &UWillowGFxUIManager::ShowDialog, py::return_value_policy::reference)
		.def("OnRestrictDialogToOwnerViewport", &UWillowGFxUIManager::OnRestrictDialogToOwnerViewport)
		.def("GetPlayingMovie", &UWillowGFxUIManager::GetPlayingMovie, py::return_value_policy::reference)
		.def("eventIsBlockingMoviePlaying", &UWillowGFxUIManager::eventIsBlockingMoviePlaying)
		.def("CloseMovie", &UWillowGFxUIManager::CloseMovie)
		.def("IsMoviePlaying", &UWillowGFxUIManager::IsMoviePlaying)
		.def("PlayMovie", &UWillowGFxUIManager::PlayMovie, py::arg("MovieDefinition"), py::arg("OtherObject") = nullptr, py::return_value_policy::reference)
		.def("OnMovieSpawned", &UWillowGFxUIManager::OnMovieSpawned)
		.def("ModalGameMenuCount", &UWillowGFxUIManager::ModalGameMenuCount)
		.def("Init", &UWillowGFxUIManager::Init)
		.def("ProcessViewRotation", &UWillowGFxUIManager::ProcessViewRotation)
		.def("CalcCamera", &UWillowGFxUIManager::CalcCamera)
		.def("UpdateScreenMesh", &UWillowGFxUIManager::UpdateScreenMesh)
		;
	py::class_< UWillowGFxUIManagerDefinition, UGBXDefinition >(m, "UWillowGFxUIManagerDefinition")
		.def_readwrite("MeshRotation", &UWillowGFxUIManagerDefinition::MeshRotation, py::return_value_policy::reference)
		.def_readwrite("ViewOffsetClamp", &UWillowGFxUIManagerDefinition::ViewOffsetClamp, py::return_value_policy::reference)
		.def_readwrite("ViewOffsetScale", &UWillowGFxUIManagerDefinition::ViewOffsetScale)
		.def_readwrite("TextureParameterName", &UWillowGFxUIManagerDefinition::TextureParameterName, py::return_value_policy::reference)
		.def_readwrite("RenderTextureMode", &UWillowGFxUIManagerDefinition::RenderTextureMode)
		.def_readwrite("DialogBoxDefinition", &UWillowGFxUIManagerDefinition::DialogBoxDefinition, py::return_value_policy::reference)
		.def_readwrite("TrainingDialogBoxDefinition", &UWillowGFxUIManagerDefinition::TrainingDialogBoxDefinition, py::return_value_policy::reference)
		.def_readwrite("TrainingDialogBoxDefinition_NoPause", &UWillowGFxUIManagerDefinition::TrainingDialogBoxDefinition_NoPause, py::return_value_policy::reference)
		.def_readwrite("EditDialogBoxDefinition", &UWillowGFxUIManagerDefinition::EditDialogBoxDefinition, py::return_value_policy::reference)
		.def_readwrite("RenderTextureSize", &UWillowGFxUIManagerDefinition::RenderTextureSize)
		.def("GetTranslation", &UWillowGFxUIManagerDefinition::GetTranslation, py::return_value_policy::reference)
		;
	py::class_< UWillowLeviathanService, ULeviathanService >(m, "UWillowLeviathanService")
		.def_readwrite("VfTable_FTickableObject", &UWillowLeviathanService::VfTable_FTickableObject, py::return_value_policy::reference)
		.def("RecordDiagnosticEventForPlayer", &UWillowLeviathanService::RecordDiagnosticEventForPlayer)
		.def("RecordCustomizeCharacterEventForPlayer", &UWillowLeviathanService::RecordCustomizeCharacterEventForPlayer)
		.def("RecordCharacterDeletedEventForPlayer", &UWillowLeviathanService::RecordCharacterDeletedEventForPlayer)
		.def("RecordCharacterCreatedEventForPlayer", &UWillowLeviathanService::RecordCharacterCreatedEventForPlayer)
		.def("RecordCharacterLoadedEventForPlayer", &UWillowLeviathanService::RecordCharacterLoadedEventForPlayer)
		.def("RecordPointsSpentEventForPlayer", &UWillowLeviathanService::RecordPointsSpentEventForPlayer)
		.def("RecordPointsResetEventForPlayer", &UWillowLeviathanService::RecordPointsResetEventForPlayer)
		.def("RecordPointsEarnedEventForPlayer", &UWillowLeviathanService::RecordPointsEarnedEventForPlayer)
		.def("RecordPartnerLeftGameEventForAllPlayers", &UWillowLeviathanService::RecordPartnerLeftGameEventForAllPlayers)
		.def("RecordPartnerLeftGameEventForPlayer", &UWillowLeviathanService::RecordPartnerLeftGameEventForPlayer)
		.def("RecordPartnerJoinedGameEventForAllPlayers", &UWillowLeviathanService::RecordPartnerJoinedGameEventForAllPlayers)
		.def("RecordPartnerJoinedGameEventForPlayer", &UWillowLeviathanService::RecordPartnerJoinedGameEventForPlayer)
		.def("RecordCharacterRevivedEventForPlayer", &UWillowLeviathanService::RecordCharacterRevivedEventForPlayer)
		.def("RecordCharacterKilledEventForPlayer", &UWillowLeviathanService::RecordCharacterKilledEventForPlayer)
		.def("RecordCharacterDownEventForPlayer", &UWillowLeviathanService::RecordCharacterDownEventForPlayer)
		.def("RecordTeleportedToVehicleEventForPlayer", &UWillowLeviathanService::RecordTeleportedToVehicleEventForPlayer)
		.def("RecordDestroyVehicleEventForPlayer", &UWillowLeviathanService::RecordDestroyVehicleEventForPlayer)
		.def("RecordSpawnVehicleEventForPlayer", &UWillowLeviathanService::RecordSpawnVehicleEventForPlayer)
		.def("RecordDeclinedDuelEventForPlayer", &UWillowLeviathanService::RecordDeclinedDuelEventForPlayer)
		.def("RecordDuelEndedEventForPlayer", &UWillowLeviathanService::RecordDuelEndedEventForPlayer)
		.def("RecordMinorActionEventForPlayer", &UWillowLeviathanService::RecordMinorActionEventForPlayer)
		.def("RecordMissionFastForwardEventForPlayer", &UWillowLeviathanService::RecordMissionFastForwardEventForPlayer)
		.def("RecordMissionObjectiveChangedEventForPlayer", &UWillowLeviathanService::RecordMissionObjectiveChangedEventForPlayer)
		.def("RecordMissionObjectiveSetActivatedEventForPlayer", &UWillowLeviathanService::RecordMissionObjectiveSetActivatedEventForPlayer)
		.def("RecordMissionStatusChangedEventForPlayer", &UWillowLeviathanService::RecordMissionStatusChangedEventForPlayer)
		.def("RecordDiscoverLocationEventForPlayer", &UWillowLeviathanService::RecordDiscoverLocationEventForPlayer)
		.def("RecordWieldedWeaponChangedEventForPlayer", &UWillowLeviathanService::RecordWieldedWeaponChangedEventForPlayer)
		.def("RecordBlackMarketUpgradePurchasedEventForPlayer", &UWillowLeviathanService::RecordBlackMarketUpgradePurchasedEventForPlayer)
		.def("RecordItemMovedInInventoryEventForPlayer", &UWillowLeviathanService::RecordItemMovedInInventoryEventForPlayer)
		.def("RecordItemFromInventoryEventForPlayer", &UWillowLeviathanService::RecordItemFromInventoryEventForPlayer)
		.def("RecordItemToInventoryEventForPlayer", &UWillowLeviathanService::RecordItemToInventoryEventForPlayer)
		.def("RecordItemSpawnedEventForAllPlayers", &UWillowLeviathanService::RecordItemSpawnedEventForAllPlayers)
		.def("RecordItemSpawnedEventForPlayer", &UWillowLeviathanService::RecordItemSpawnedEventForPlayer)
		.def("RecordPlayerCharacterGainedLevelEventForPlayer", &UWillowLeviathanService::RecordPlayerCharacterGainedLevelEventForPlayer)
		.def("RecordExperienceGainedEventForPlayer", &UWillowLeviathanService::RecordExperienceGainedEventForPlayer)
		.def("RecordLocationPulseEventForPlayer", &UWillowLeviathanService::RecordLocationPulseEventForPlayer)
		.def("IsLeviathanEnabled", &UWillowLeviathanService::IsLeviathanEnabled)
		.def("PublishEvents", &UWillowLeviathanService::PublishEvents)
		.def("NewPlaySession", &UWillowLeviathanService::NewPlaySession)
		;
	py::class_< UAction_AimAtScanRange, UWillowActionSequencePawn >(m, "UAction_AimAtScanRange")
		.def_readwrite("YawRange", &UAction_AimAtScanRange::YawRange)
		.def_readwrite("ScanSpeed", &UAction_AimAtScanRange::ScanSpeed)
		.def_readwrite("PointDelay", &UAction_AimAtScanRange::PointDelay)
		.def_readwrite("CurrentYawRange", &UAction_AimAtScanRange::CurrentYawRange)
		.def("SetNewRotation", &UAction_AimAtScanRange::SetNewRotation)
		.def("eventStop", &UAction_AimAtScanRange::eventStop)
		.def("eventStart", &UAction_AimAtScanRange::eventStart)
		;
	py::class_< UAction_AimAtThreat, UWillowActionSequencePawn >(m, "UAction_AimAtThreat")
		.def("eventStart", &UAction_AimAtThreat::eventStart)
		.def("eventCanRun", &UAction_AimAtThreat::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UBehaviorAliasLookupDefinition, UGBXDefinition >(m, "UBehaviorAliasLookupDefinition")
		.def_readwrite("BehaviorAliasList", &UBehaviorAliasLookupDefinition::BehaviorAliasList, py::return_value_policy::reference)
		.def("RunBehaviorAlias", &UBehaviorAliasLookupDefinition::RunBehaviorAlias)
		;
	py::class_< UPhaseLockDefinition, UGBXDefinition >(m, "UPhaseLockDefinition")
		.def_readwrite("DropTime", &UPhaseLockDefinition::DropTime)
		.def_readwrite("HeightFromGround", &UPhaseLockDefinition::HeightFromGround)
		.def_readwrite("CanPlayDropAnims", &UPhaseLockDefinition::CanPlayDropAnims, py::return_value_policy::reference)
		.def_readwrite("LiftAnim", &UPhaseLockDefinition::LiftAnim, py::return_value_policy::reference)
		.def_readwrite("LoopAnim", &UPhaseLockDefinition::LoopAnim, py::return_value_policy::reference)
		.def_readwrite("DropAnim", &UPhaseLockDefinition::DropAnim, py::return_value_policy::reference)
		.def_readwrite("LandAnim", &UPhaseLockDefinition::LandAnim, py::return_value_policy::reference)
		;
	py::class_< UAction_AttackLoop, UAction_BasicAttack >(m, "UAction_AttackLoop")
		.def_readwrite("LoopCount", &UAction_AttackLoop::LoopCount, py::return_value_policy::reference)
		.def_readwrite("StartSMD", &UAction_AttackLoop::StartSMD, py::return_value_policy::reference)
		.def_readwrite("StopSMD", &UAction_AttackLoop::StopSMD, py::return_value_policy::reference)
		.def_readwrite("LoopSMD", &UAction_AttackLoop::LoopSMD, py::return_value_policy::reference)
		.def_readwrite("LoopCondition", &UAction_AttackLoop::LoopCondition, py::return_value_policy::reference)
		.def_readwrite("NumLoops", &UAction_AttackLoop::NumLoops)
		.def_readwrite("MaxLoops", &UAction_AttackLoop::MaxLoops)
		.def("PlayAnim", &UAction_AttackLoop::PlayAnim)
		;
	py::class_< UAction_FollowPath, UAction_Burrow >(m, "UAction_FollowPath")
		.def_property("bPerchExiting", [](UAction_FollowPath &self){return self.bPerchExiting;}, [](UAction_FollowPath &self, bool value){self.bPerchExiting = value ? 1 : 0;})
		.def_property("bWaitingOnPerch", [](UAction_FollowPath &self){return self.bWaitingOnPerch;}, [](UAction_FollowPath &self, bool value){self.bWaitingOnPerch = value ? 1 : 0;})
		.def_property("bWaitingOnTimer", [](UAction_FollowPath &self){return self.bWaitingOnTimer;}, [](UAction_FollowPath &self, bool value){self.bWaitingOnTimer = value ? 1 : 0;})
		.def_property("bWaitingOnSpecialMoves", [](UAction_FollowPath &self){return self.bWaitingOnSpecialMoves;}, [](UAction_FollowPath &self, bool value){self.bWaitingOnSpecialMoves = value ? 1 : 0;})
		.def_property("bReachedNode", [](UAction_FollowPath &self){return self.bReachedNode;}, [](UAction_FollowPath &self, bool value){self.bReachedNode = value ? 1 : 0;})
		.def_property("bPathInterrupted", [](UAction_FollowPath &self){return self.bPathInterrupted;}, [](UAction_FollowPath &self, bool value){self.bPathInterrupted = value ? 1 : 0;})
		.def_readwrite("PerchData", &UAction_FollowPath::PerchData, py::return_value_policy::reference)
		.def_readwrite("MoveNode", &UAction_FollowPath::MoveNode, py::return_value_policy::reference)
		.def_readwrite("NextNode", &UAction_FollowPath::NextNode, py::return_value_policy::reference)
		.def_readwrite("LastPathFailTime", &UAction_FollowPath::LastPathFailTime)
		.def_readwrite("TimeToStopLooping", &UAction_FollowPath::TimeToStopLooping)
		.def("PathAttemptFinished", &UAction_FollowPath::PathAttemptFinished)
		.def("PerchStop", &UAction_FollowPath::PerchStop)
		.def("PerchDone", &UAction_FollowPath::PerchDone)
		.def("PerchPlayStop", &UAction_FollowPath::PerchPlayStop)
		.def("PerchPlayLoop", &UAction_FollowPath::PerchPlayLoop)
		.def("PerchPlayIdle", &UAction_FollowPath::PerchPlayIdle)
		.def("PerchStart", &UAction_FollowPath::PerchStart)
		.def("GetPerchConsumerHandle", &UAction_FollowPath::GetPerchConsumerHandle, py::return_value_policy::reference)
		.def("SetPerch", &UAction_FollowPath::SetPerch)
		.def("SpecialMoveCallback", &UAction_FollowPath::SpecialMoveCallback)
		.def("SetSpecialMoves", &UAction_FollowPath::SetSpecialMoves)
		.def("MoveTimerCallback", &UAction_FollowPath::MoveTimerCallback)
		.def("SetMoveTimer", &UAction_FollowPath::SetMoveTimer)
		.def("eventStop", &UAction_FollowPath::eventStop)
		.def("SetMoveNode", &UAction_FollowPath::SetMoveNode)
		.def("GetMoveNode", &UAction_FollowPath::GetMoveNode, py::return_value_policy::reference)
		.def("SetMoveFacingPolicy", &UAction_FollowPath::SetMoveFacingPolicy)
		.def("SetMoveNodeSpeed", &UAction_FollowPath::SetMoveNodeSpeed)
		;
	py::class_< UAction_BunkerBoss_Flight, UAction_FollowPath >(m, "UAction_BunkerBoss_Flight")
		.def_property("bShowDebug", [](UAction_BunkerBoss_Flight &self){return self.bShowDebug;}, [](UAction_BunkerBoss_Flight &self, bool value){self.bShowDebug = value ? 1 : 0;})
		.def_property("bDebugPerch", [](UAction_BunkerBoss_Flight &self){return self.bDebugPerch;}, [](UAction_BunkerBoss_Flight &self, bool value){self.bDebugPerch = value ? 1 : 0;})
		.def_property("bOnScriptedPath", [](UAction_BunkerBoss_Flight &self){return self.bOnScriptedPath;}, [](UAction_BunkerBoss_Flight &self, bool value){self.bOnScriptedPath = value ? 1 : 0;})
		.def_property("bMoveToOffset", [](UAction_BunkerBoss_Flight &self){return self.bMoveToOffset;}, [](UAction_BunkerBoss_Flight &self, bool value){self.bMoveToOffset = value ? 1 : 0;})
		.def_property("bNearDeath", [](UAction_BunkerBoss_Flight &self){return self.bNearDeath;}, [](UAction_BunkerBoss_Flight &self, bool value){self.bNearDeath = value ? 1 : 0;})
		.def_property("bTurnOffSkelControl", [](UAction_BunkerBoss_Flight &self){return self.bTurnOffSkelControl;}, [](UAction_BunkerBoss_Flight &self, bool value){self.bTurnOffSkelControl = value ? 1 : 0;})
		.def_readwrite("OffsetDistance", &UAction_BunkerBoss_Flight::OffsetDistance)
		.def_readwrite("TimeBetweenAttacks", &UAction_BunkerBoss_Flight::TimeBetweenAttacks)
		.def_readwrite("CircleFlightDistance", &UAction_BunkerBoss_Flight::CircleFlightDistance)
		.def_readwrite("CircleFlightHeight", &UAction_BunkerBoss_Flight::CircleFlightHeight)
		.def_readwrite("NonTargetOrigin", &UAction_BunkerBoss_Flight::NonTargetOrigin, py::return_value_policy::reference)
		.def_readwrite("NearDeathExpression", &UAction_BunkerBoss_Flight::NearDeathExpression, py::return_value_policy::reference)
		.def_readwrite("MoveToPointNearDeath", &UAction_BunkerBoss_Flight::MoveToPointNearDeath, py::return_value_policy::reference)
		.def_readwrite("PerchLoopExpression", &UAction_BunkerBoss_Flight::PerchLoopExpression, py::return_value_policy::reference)
		.def_readwrite("Turn360Anim", &UAction_BunkerBoss_Flight::Turn360Anim, py::return_value_policy::reference)
		.def_readwrite("BackupPerchFlag", &UAction_BunkerBoss_Flight::BackupPerchFlag, py::return_value_policy::reference)
		.def_readwrite("DeathPerchName", &UAction_BunkerBoss_Flight::DeathPerchName, py::return_value_policy::reference)
		.def_readwrite("RotationOffsetName", &UAction_BunkerBoss_Flight::RotationOffsetName, py::return_value_policy::reference)
		.def_readwrite("LastLocation", &UAction_BunkerBoss_Flight::LastLocation, py::return_value_policy::reference)
		.def_readwrite("BackupOffset", &UAction_BunkerBoss_Flight::BackupOffset, py::return_value_policy::reference)
		.def_readwrite("TimeOfNextAttack", &UAction_BunkerBoss_Flight::TimeOfNextAttack)
		.def_readwrite("NextValidationTime", &UAction_BunkerBoss_Flight::NextValidationTime)
		.def_readwrite("BackupDist", &UAction_BunkerBoss_Flight::BackupDist)
		.def_readwrite("PerchFailCount", &UAction_BunkerBoss_Flight::PerchFailCount)
		.def_readwrite("PerchOffset", &UAction_BunkerBoss_Flight::PerchOffset, py::return_value_policy::reference)
		.def_readwrite("DeathPerch", &UAction_BunkerBoss_Flight::DeathPerch, py::return_value_policy::reference)
		.def_readwrite("RotOffsetBone", &UAction_BunkerBoss_Flight::RotOffsetBone, py::return_value_policy::reference)
		.def("PerchStart", &UAction_BunkerBoss_Flight::PerchStart)
		.def("GetFlightPathToPerch", &UAction_BunkerBoss_Flight::GetFlightPathToPerch, py::return_value_policy::reference)
		.def("PerchDone", &UAction_BunkerBoss_Flight::PerchDone)
		.def("ReadyToDie", &UAction_BunkerBoss_Flight::ReadyToDie)
		.def("eventStop", &UAction_BunkerBoss_Flight::eventStop)
		.def("eventStart", &UAction_BunkerBoss_Flight::eventStart)
		.def("eventCanRun", &UAction_BunkerBoss_Flight::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_Idle, UAction_Burrow >(m, "UAction_Idle")
		.def_property("bLookAtTarget", [](UAction_Idle &self){return self.bLookAtTarget;}, [](UAction_Idle &self, bool value){self.bLookAtTarget = value ? 1 : 0;})
		.def_readwrite("IdleTime", &UAction_Idle::IdleTime, py::return_value_policy::reference)
		.def_readwrite("CloakBehavior", &UAction_Idle::CloakBehavior)
		.def_readwrite("FollowType", &UAction_Idle::FollowType)
		.def_readwrite("DistMin", &UAction_Idle::DistMin)
		.def_readwrite("DistMax", &UAction_Idle::DistMax)
		.def_readwrite("CheckRate", &UAction_Idle::CheckRate)
		.def("CheckStateTransition", &UAction_Idle::CheckStateTransition)
		.def("ShouldPathToTarget", &UAction_Idle::ShouldPathToTarget)
		.def("GetGoalActor", &UAction_Idle::GetGoalActor, py::return_value_policy::reference)
		.def("IdleFinished", &UAction_Idle::IdleFinished)
		.def("eventStop", &UAction_Idle::eventStop)
		.def("eventStart", &UAction_Idle::eventStart)
		.def("eventCanRun", &UAction_Idle::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_BurrowIdle, UAction_Idle >(m, "UAction_BurrowIdle")
		;
	py::class_< UAction_ChargeTarget, UAction_BasicAttack >(m, "UAction_ChargeTarget")
		.def_readwrite("MissDistance", &UAction_ChargeTarget::MissDistance)
		.def_readwrite("StrikeDistance", &UAction_ChargeTarget::StrikeDistance)
		.def_readwrite("ChargeStart", &UAction_ChargeTarget::ChargeStart, py::return_value_policy::reference)
		.def_readwrite("ChargeStop", &UAction_ChargeTarget::ChargeStop, py::return_value_policy::reference)
		.def_readwrite("ChargeStrike", &UAction_ChargeTarget::ChargeStrike, py::return_value_policy::reference)
		.def_readwrite("ChargeHitWall", &UAction_ChargeTarget::ChargeHitWall, py::return_value_policy::reference)
		.def("StopCharge", &UAction_ChargeTarget::StopCharge)
		.def("ChargeFinished", &UAction_ChargeTarget::ChargeFinished)
		.def("eventCanRun", &UAction_ChargeTarget::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_CombatPerch, UAction_FollowPath >(m, "UAction_CombatPerch")
		.def_property("bMustHaveTarget", [](UAction_CombatPerch &self){return self.bMustHaveTarget;}, [](UAction_CombatPerch &self, bool value){self.bMustHaveTarget = value ? 1 : 0;})
		.def_property("bTeleport", [](UAction_CombatPerch &self){return self.bTeleport;}, [](UAction_CombatPerch &self, bool value){self.bTeleport = value ? 1 : 0;})
		.def_property("bPickClosestPerch", [](UAction_CombatPerch &self){return self.bPickClosestPerch;}, [](UAction_CombatPerch &self, bool value){self.bPickClosestPerch = value ? 1 : 0;})
		.def("eventPathFind", &UAction_CombatPerch::eventPathFind)
		.def("eventStop", &UAction_CombatPerch::eventStop)
		.def("eventStart", &UAction_CombatPerch::eventStart)
		.def("eventCanRun", &UAction_CombatPerch::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_DeathTrap, UWillowActionSequencePawn >(m, "UAction_DeathTrap")
		.def_property("bRandomOffsets", [](UAction_DeathTrap &self){return self.bRandomOffsets;}, [](UAction_DeathTrap &self, bool value){self.bRandomOffsets = value ? 1 : 0;})
		.def_property("bCanShoot", [](UAction_DeathTrap &self){return self.bCanShoot;}, [](UAction_DeathTrap &self, bool value){self.bCanShoot = value ? 1 : 0;})
		.def_property("bAttacking", [](UAction_DeathTrap &self){return self.bAttacking;}, [](UAction_DeathTrap &self, bool value){self.bAttacking = value ? 1 : 0;})
		.def_property("bCloseToOwner", [](UAction_DeathTrap &self){return self.bCloseToOwner;}, [](UAction_DeathTrap &self, bool value){self.bCloseToOwner = value ? 1 : 0;})
		.def_readwrite("MoveRange", &UAction_DeathTrap::MoveRange, py::return_value_policy::reference)
		.def_readwrite("RandomHOffset", &UAction_DeathTrap::RandomHOffset, py::return_value_policy::reference)
		.def_readwrite("RandomVOffset", &UAction_DeathTrap::RandomVOffset, py::return_value_policy::reference)
		.def_readwrite("RandomTime", &UAction_DeathTrap::RandomTime, py::return_value_policy::reference)
		.def_readwrite("RandomAngleLimits", &UAction_DeathTrap::RandomAngleLimits, py::return_value_policy::reference)
		.def_readwrite("AttackDist", &UAction_DeathTrap::AttackDist)
		.def_readwrite("CurrentMoveOffset", &UAction_DeathTrap::CurrentMoveOffset, py::return_value_policy::reference)
		.def("Reinitialize", &UAction_DeathTrap::Reinitialize)
		.def("WantsPath", &UAction_DeathTrap::WantsPath)
		.def("StopAttacking", &UAction_DeathTrap::StopAttacking)
		.def("StartAttacking", &UAction_DeathTrap::StartAttacking)
		.def("CheckAttack", &UAction_DeathTrap::CheckAttack)
		.def("CanAttack", &UAction_DeathTrap::CanAttack)
		.def("eventActivateEvent", &UAction_DeathTrap::eventActivateEvent)
		.def("GetBufferDist", &UAction_DeathTrap::GetBufferDist)
		.def("GetMoveLoc", &UAction_DeathTrap::GetMoveLoc, py::return_value_policy::reference)
		.def("PickRandomOffset", &UAction_DeathTrap::PickRandomOffset)
		.def("GetRandomYaw", &UAction_DeathTrap::GetRandomYaw)
		.def("GetPointDefense", &UAction_DeathTrap::GetPointDefense, py::return_value_policy::reference)
		.def("GetOwner", &UAction_DeathTrap::GetOwner, py::return_value_policy::reference)
		.def("eventStop", &UAction_DeathTrap::eventStop)
		.def("eventStart", &UAction_DeathTrap::eventStart)
		.def("eventCanRun", &UAction_DeathTrap::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_Drive_Pursuit, UWillowActionSequencePawn >(m, "UAction_Drive_Pursuit")
		.def_property("UseHandbrakeToStop", [](UAction_Drive_Pursuit &self){return self.UseHandbrakeToStop;}, [](UAction_Drive_Pursuit &self, bool value){self.UseHandbrakeToStop = value ? 1 : 0;})
		.def_property("UseAfterburnerBoosting", [](UAction_Drive_Pursuit &self){return self.UseAfterburnerBoosting;}, [](UAction_Drive_Pursuit &self, bool value){self.UseAfterburnerBoosting = value ? 1 : 0;})
		.def_property("HasStarted", [](UAction_Drive_Pursuit &self){return self.HasStarted;}, [](UAction_Drive_Pursuit &self, bool value){self.HasStarted = value ? 1 : 0;})
		.def_property("WantsToBoost", [](UAction_Drive_Pursuit &self){return self.WantsToBoost;}, [](UAction_Drive_Pursuit &self, bool value){self.WantsToBoost = value ? 1 : 0;})
		.def_property("WantsToStopBoosting", [](UAction_Drive_Pursuit &self){return self.WantsToStopBoosting;}, [](UAction_Drive_Pursuit &self, bool value){self.WantsToStopBoosting = value ? 1 : 0;})
		.def_readwrite("TargetForwardVelocityStartAction", &UAction_Drive_Pursuit::TargetForwardVelocityStartAction)
		.def_readwrite("TargetForwardVelocityStopAction", &UAction_Drive_Pursuit::TargetForwardVelocityStopAction)
		.def_readwrite("TimeBeforeExitingActionIfTargetSlowsDown", &UAction_Drive_Pursuit::TimeBeforeExitingActionIfTargetSlowsDown)
		.def_readwrite("MaxSpeedMultiplier", &UAction_Drive_Pursuit::MaxSpeedMultiplier)
		.def_readwrite("SpeedMultiplierDuringSharpTurns", &UAction_Drive_Pursuit::SpeedMultiplierDuringSharpTurns)
		.def_readwrite("DistanceToTargetStartAction", &UAction_Drive_Pursuit::DistanceToTargetStartAction)
		.def_readwrite("DistanceToTargetStopAction", &UAction_Drive_Pursuit::DistanceToTargetStopAction)
		.def_readwrite("DistanceStopUsingBreadcrumbs", &UAction_Drive_Pursuit::DistanceStopUsingBreadcrumbs)
		.def_readwrite("DistanceToTargetPursue", &UAction_Drive_Pursuit::DistanceToTargetPursue)
		.def_readwrite("DistanceToTargetRetreat", &UAction_Drive_Pursuit::DistanceToTargetRetreat)
		.def_readwrite("CanUseHandbrakeSpeedThreshold", &UAction_Drive_Pursuit::CanUseHandbrakeSpeedThreshold)
		.def_readwrite("NoHandbrakeSpeedThreshold", &UAction_Drive_Pursuit::NoHandbrakeSpeedThreshold)
		.def_readwrite("MyVehicle", &UAction_Drive_Pursuit::MyVehicle, py::return_value_policy::reference)
		.def_readwrite("LastTimeTargetWasFastEnough", &UAction_Drive_Pursuit::LastTimeTargetWasFastEnough)
		.def_readwrite("PursuitPoint", &UAction_Drive_Pursuit::PursuitPoint, py::return_value_policy::reference)
		.def_readwrite("SpeedMultiplier", &UAction_Drive_Pursuit::SpeedMultiplier)
		.def_readwrite("TimeOfLastBraking", &UAction_Drive_Pursuit::TimeOfLastBraking)
		.def_readwrite("MyCombatArea", &UAction_Drive_Pursuit::MyCombatArea, py::return_value_policy::reference)
		.def_readwrite("TargetCombatArea", &UAction_Drive_Pursuit::TargetCombatArea, py::return_value_policy::reference)
		.def_readwrite("LastBoostTime", &UAction_Drive_Pursuit::LastBoostTime)
		.def_readwrite("TimeStampOutsideCombatArea", &UAction_Drive_Pursuit::TimeStampOutsideCombatArea)
		.def_readwrite("TargetVehicle", &UAction_Drive_Pursuit::TargetVehicle, py::return_value_policy::reference)
		.def_readwrite("EnemyPosBreadCrumbs", &UAction_Drive_Pursuit::EnemyPosBreadCrumbs, py::return_value_policy::reference)
		.def_readwrite("CurrentState", &UAction_Drive_Pursuit::CurrentState)
		.def_readwrite("I", &UAction_Drive_Pursuit::I)
		.def_readwrite("MinTimeSpentBraking", &UAction_Drive_Pursuit::MinTimeSpentBraking)
		.def_readwrite("RequiredDelayBetweenBrakings", &UAction_Drive_Pursuit::RequiredDelayBetweenBrakings)
		.def_readwrite("RequiredDelayBetweenBoosts", &UAction_Drive_Pursuit::RequiredDelayBetweenBoosts)
		.def_readwrite("BreadCrumbCoalesceThreshold", &UAction_Drive_Pursuit::BreadCrumbCoalesceThreshold)
		.def_readwrite("OutOfCombatAreaGracePeriod", &UAction_Drive_Pursuit::OutOfCombatAreaGracePeriod)
		.def("DisplayDebugBreadCrumbs", &UAction_Drive_Pursuit::DisplayDebugBreadCrumbs)
		.def("ReachedBreadCrumb", &UAction_Drive_Pursuit::ReachedBreadCrumb)
		.def("UpdateBreadCrumbs", &UAction_Drive_Pursuit::UpdateBreadCrumbs)
		.def("IsSharpTurn", &UAction_Drive_Pursuit::IsSharpTurn)
		.def("eventStop", &UAction_Drive_Pursuit::eventStop)
		.def("eventStart", &UAction_Drive_Pursuit::eventStart)
		.def("eventCanRun", &UAction_Drive_Pursuit::eventCanRun, py::return_value_policy::reference)
		.def("ComputeCurrentState", &UAction_Drive_Pursuit::ComputeCurrentState)
		.def("GetPursuitPointAndSpeedMultiplier", [](UAction_Drive_Pursuit &self ) { float* pyOutSpeedMultiplier = (float*)malloc(sizeof(float)) ;  struct FVector ret =  self.GetPursuitPointAndSpeedMultiplier(pyOutSpeedMultiplier); return py::make_tuple(ret, *pyOutSpeedMultiplier); })
		;
	py::class_< UAction_Drive_AlongsideTarget, UAction_Drive_Pursuit >(m, "UAction_Drive_AlongsideTarget")
		.def_readwrite("IdealDistanceFromTarget", &UAction_Drive_AlongsideTarget::IdealDistanceFromTarget)
		.def_readwrite("IdealDistanceAheadOfTarget", &UAction_Drive_AlongsideTarget::IdealDistanceAheadOfTarget)
		.def_readwrite("MinSpeedMultiplierWhenAheadOfTarget", &UAction_Drive_AlongsideTarget::MinSpeedMultiplierWhenAheadOfTarget)
		.def_readwrite("MaxSpeedMultiplierWhenAheadOfTarget", &UAction_Drive_AlongsideTarget::MaxSpeedMultiplierWhenAheadOfTarget)
		.def_readwrite("SpeedDamperWhenRightAlongsideTarget", &UAction_Drive_AlongsideTarget::SpeedDamperWhenRightAlongsideTarget)
		.def_readwrite("DistanceAheadOfTargetToAimFor", &UAction_Drive_AlongsideTarget::DistanceAheadOfTargetToAimFor)
		.def_readwrite("NudgeDistance", &UAction_Drive_AlongsideTarget::NudgeDistance)
		.def("DetermineClosestFlankPoint", &UAction_Drive_AlongsideTarget::DetermineClosestFlankPoint, py::return_value_policy::reference)
		.def("GetPursuitPointAndSpeedMultiplier", [](UAction_Drive_AlongsideTarget &self ) { float* pyOutSpeedMultiplier = (float*)malloc(sizeof(float)) ;  struct FVector ret =  self.GetPursuitPointAndSpeedMultiplier(pyOutSpeedMultiplier); return py::make_tuple(ret, *pyOutSpeedMultiplier); })
		;
	py::class_< UAction_Drive_AvoidWall, UWillowActionSequencePawn >(m, "UAction_Drive_AvoidWall")
		.def_readwrite("LineCheckDistance", &UAction_Drive_AvoidWall::LineCheckDistance)
		.def_readwrite("NumLineChecks", &UAction_Drive_AvoidWall::NumLineChecks)
		.def_readwrite("HitNormalDotZThreshold", &UAction_Drive_AvoidWall::HitNormalDotZThreshold)
		.def_readwrite("SpeedThresholdWhenVeering", &UAction_Drive_AvoidWall::SpeedThresholdWhenVeering)
		.def_readwrite("MyVehicle", &UAction_Drive_AvoidWall::MyVehicle, py::return_value_policy::reference)
		.def_readwrite("PursuitPoint", &UAction_Drive_AvoidWall::PursuitPoint, py::return_value_policy::reference)
		.def_readwrite("CollisionPoint", &UAction_Drive_AvoidWall::CollisionPoint, py::return_value_policy::reference)
		.def_readwrite("HitNormal", &UAction_Drive_AvoidWall::HitNormal, py::return_value_policy::reference)
		.def_readwrite("Speed", &UAction_Drive_AvoidWall::Speed)
		.def_readwrite("SpeedMultiplier", &UAction_Drive_AvoidWall::SpeedMultiplier)
		.def("IAmBlocked", &UAction_Drive_AvoidWall::IAmBlocked)
		.def("eventStart", &UAction_Drive_AvoidWall::eventStart)
		.def("eventCanRun", &UAction_Drive_AvoidWall::eventCanRun, py::return_value_policy::reference)
		.def("TestForCollision", &UAction_Drive_AvoidWall::TestForCollision)
		.def("GetPursuitPoint", [](UAction_Drive_AvoidWall &self ) { float* pyOutSpeedMultiplier = (float*)malloc(sizeof(float)) ;  struct FVector ret =  self.GetPursuitPoint(pyOutSpeedMultiplier); return py::make_tuple(ret, *pyOutSpeedMultiplier); })
		;
	py::class_< UAction_Drive_BackUpAndAdjust, UAction_Drive_AvoidWall >(m, "UAction_Drive_BackUpAndAdjust")
		.def_property("HasStarted", [](UAction_Drive_BackUpAndAdjust &self){return self.HasStarted;}, [](UAction_Drive_BackUpAndAdjust &self, bool value){self.HasStarted = value ? 1 : 0;})
		.def("eventStop", &UAction_Drive_BackUpAndAdjust::eventStop)
		.def("eventStart", &UAction_Drive_BackUpAndAdjust::eventStart)
		.def("eventCanRun", &UAction_Drive_BackUpAndAdjust::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_Drive_GoBackToCombatArea, UWillowActionSequencePawn >(m, "UAction_Drive_GoBackToCombatArea")
		.def_property("HasStarted", [](UAction_Drive_GoBackToCombatArea &self){return self.HasStarted;}, [](UAction_Drive_GoBackToCombatArea &self, bool value){self.HasStarted = value ? 1 : 0;})
		.def_readwrite("MinSpeedMultiplier", &UAction_Drive_GoBackToCombatArea::MinSpeedMultiplier)
		.def_readwrite("MaxSpeedMultiplier", &UAction_Drive_GoBackToCombatArea::MaxSpeedMultiplier)
		.def_readwrite("MyVehicle", &UAction_Drive_GoBackToCombatArea::MyVehicle, py::return_value_policy::reference)
		.def("SetSpeedMultiplier", &UAction_Drive_GoBackToCombatArea::SetSpeedMultiplier)
		.def("eventStop", &UAction_Drive_GoBackToCombatArea::eventStop)
		.def("eventStart", &UAction_Drive_GoBackToCombatArea::eventStart)
		.def("eventCanRun", &UAction_Drive_GoBackToCombatArea::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_Drive_Pursuit_TargetOnFoot, UWillowActionSequencePawn >(m, "UAction_Drive_Pursuit_TargetOnFoot")
		.def_property("UseHandbrakeToStop", [](UAction_Drive_Pursuit_TargetOnFoot &self){return self.UseHandbrakeToStop;}, [](UAction_Drive_Pursuit_TargetOnFoot &self, bool value){self.UseHandbrakeToStop = value ? 1 : 0;})
		.def_property("HasStarted", [](UAction_Drive_Pursuit_TargetOnFoot &self){return self.HasStarted;}, [](UAction_Drive_Pursuit_TargetOnFoot &self, bool value){self.HasStarted = value ? 1 : 0;})
		.def_readwrite("MaxSpeedMultiplier", &UAction_Drive_Pursuit_TargetOnFoot::MaxSpeedMultiplier)
		.def_readwrite("SpeedMultiplierDuringSharpTurns", &UAction_Drive_Pursuit_TargetOnFoot::SpeedMultiplierDuringSharpTurns)
		.def_readwrite("DistanceToTargetStartAction", &UAction_Drive_Pursuit_TargetOnFoot::DistanceToTargetStartAction)
		.def_readwrite("DistanceToTargetStopAction", &UAction_Drive_Pursuit_TargetOnFoot::DistanceToTargetStopAction)
		.def_readwrite("DistanceToTargetPursue", &UAction_Drive_Pursuit_TargetOnFoot::DistanceToTargetPursue)
		.def_readwrite("DistanceToTargetRetreat", &UAction_Drive_Pursuit_TargetOnFoot::DistanceToTargetRetreat)
		.def_readwrite("CanUseHandbrakeSpeedThreshold", &UAction_Drive_Pursuit_TargetOnFoot::CanUseHandbrakeSpeedThreshold)
		.def_readwrite("NoHandbrakeSpeedThreshold", &UAction_Drive_Pursuit_TargetOnFoot::NoHandbrakeSpeedThreshold)
		.def_readwrite("MyVehicle", &UAction_Drive_Pursuit_TargetOnFoot::MyVehicle, py::return_value_policy::reference)
		.def_readwrite("PursuitPoint", &UAction_Drive_Pursuit_TargetOnFoot::PursuitPoint, py::return_value_policy::reference)
		.def_readwrite("SpeedMultiplier", &UAction_Drive_Pursuit_TargetOnFoot::SpeedMultiplier)
		.def_readwrite("TimeOfLastBraking", &UAction_Drive_Pursuit_TargetOnFoot::TimeOfLastBraking)
		.def_readwrite("MyCombatArea", &UAction_Drive_Pursuit_TargetOnFoot::MyCombatArea, py::return_value_policy::reference)
		.def_readwrite("TimeStampOutsideCombatArea", &UAction_Drive_Pursuit_TargetOnFoot::TimeStampOutsideCombatArea)
		.def_readwrite("MinTimeSpentBraking", &UAction_Drive_Pursuit_TargetOnFoot::MinTimeSpentBraking)
		.def_readwrite("RequiredDelayBetweenBrakings", &UAction_Drive_Pursuit_TargetOnFoot::RequiredDelayBetweenBrakings)
		.def_readwrite("OutOfCombatAreaGracePeriod", &UAction_Drive_Pursuit_TargetOnFoot::OutOfCombatAreaGracePeriod)
		.def("IsSharpTurn", &UAction_Drive_Pursuit_TargetOnFoot::IsSharpTurn)
		.def("eventStop", &UAction_Drive_Pursuit_TargetOnFoot::eventStop)
		.def("eventStart", &UAction_Drive_Pursuit_TargetOnFoot::eventStart)
		.def("eventCanRun", &UAction_Drive_Pursuit_TargetOnFoot::eventCanRun, py::return_value_policy::reference)
		.def("GetPursuitPointAndSpeedMultiplier", [](UAction_Drive_Pursuit_TargetOnFoot &self ) { float* pyOutSpeedMultiplier = (float*)malloc(sizeof(float)) ;  struct FVector ret =  self.GetPursuitPointAndSpeedMultiplier(pyOutSpeedMultiplier); return py::make_tuple(ret, *pyOutSpeedMultiplier); })
		;
	py::class_< UAction_DriveVehicle, UWillowActionSequencePawn >(m, "UAction_DriveVehicle")
		.def_property("HasStarted", [](UAction_DriveVehicle &self){return self.HasStarted;}, [](UAction_DriveVehicle &self, bool value){self.HasStarted = value ? 1 : 0;})
		.def_readwrite("MaxSpeedMultiplier", &UAction_DriveVehicle::MaxSpeedMultiplier)
		.def_readwrite("ReachedNodeWeighting", &UAction_DriveVehicle::ReachedNodeWeighting)
		.def_readwrite("MyVehicle", &UAction_DriveVehicle::MyVehicle, py::return_value_policy::reference)
		.def_readwrite("MoveNode", &UAction_DriveVehicle::MoveNode, py::return_value_policy::reference)
		.def_readwrite("NextMoveNode", &UAction_DriveVehicle::NextMoveNode, py::return_value_policy::reference)
		.def_readwrite("StartLoc", &UAction_DriveVehicle::StartLoc, py::return_value_policy::reference)
		.def_readwrite("VectA", &UAction_DriveVehicle::VectA, py::return_value_policy::reference)
		.def_readwrite("VectB", &UAction_DriveVehicle::VectB, py::return_value_policy::reference)
		.def_readwrite("T", &UAction_DriveVehicle::T)
		.def("AdvanceNodes", &UAction_DriveVehicle::AdvanceNodes)
		.def("PassedNode", &UAction_DriveVehicle::PassedNode)
		.def("ReachedNode", &UAction_DriveVehicle::ReachedNode)
		.def("eventStop", &UAction_DriveVehicle::eventStop)
		.def("eventStart", &UAction_DriveVehicle::eventStart)
		.def("eventCanRun", &UAction_DriveVehicle::eventCanRun, py::return_value_policy::reference)
		.def("GetBestPatrolNode", &UAction_DriveVehicle::GetBestPatrolNode, py::return_value_policy::reference)
		;
	py::class_< UAction_FinalBoss, UAction_FollowPath >(m, "UAction_FinalBoss")
		.def("eventStop", &UAction_FinalBoss::eventStop)
		.def("eventStart", &UAction_FinalBoss::eventStart)
		.def("eventCanRun", &UAction_FinalBoss::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_FinalBossFly, UAction_FollowPath >(m, "UAction_FinalBossFly")
		.def_property("bReverse", [](UAction_FinalBossFly &self){return self.bReverse;}, [](UAction_FinalBossFly &self, bool value){self.bReverse = value ? 1 : 0;})
		.def_readwrite("LandPerchID", &UAction_FinalBossFly::LandPerchID, py::return_value_policy::reference)
		.def_readwrite("FlightSplineName", &UAction_FinalBossFly::FlightSplineName, py::return_value_policy::reference)
		.def_readwrite("FlightSplineReverseName", &UAction_FinalBossFly::FlightSplineReverseName, py::return_value_policy::reference)
		.def_readwrite("FlightAnimNodeRName", &UAction_FinalBossFly::FlightAnimNodeRName, py::return_value_policy::reference)
		.def_readwrite("FlightAnimNodeLName", &UAction_FinalBossFly::FlightAnimNodeLName, py::return_value_policy::reference)
		.def_readwrite("FlyToPerch", &UAction_FinalBossFly::FlyToPerch, py::return_value_policy::reference)
		.def_readwrite("FlightSpline", &UAction_FinalBossFly::FlightSpline, py::return_value_policy::reference)
		.def_readwrite("MyAnimSeqR", &UAction_FinalBossFly::MyAnimSeqR, py::return_value_policy::reference)
		.def_readwrite("MyAnimSeqL", &UAction_FinalBossFly::MyAnimSeqL, py::return_value_policy::reference)
		.def("eventStop", &UAction_FinalBossFly::eventStop)
		.def("eventStart", &UAction_FinalBossFly::eventStart)
		.def("eventCanRun", &UAction_FinalBossFly::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_FlyAnimAttack, UAction_Burrow >(m, "UAction_FlyAnimAttack")
		.def_property("bShootTarget", [](UAction_FlyAnimAttack &self){return self.bShootTarget;}, [](UAction_FlyAnimAttack &self, bool value){self.bShootTarget = value ? 1 : 0;})
		.def_property("bAttackFromOppositeSideOfMaster", [](UAction_FlyAnimAttack &self){return self.bAttackFromOppositeSideOfMaster;}, [](UAction_FlyAnimAttack &self, bool value){self.bAttackFromOppositeSideOfMaster = value ? 1 : 0;})
		.def_property("bTargetHeld", [](UAction_FlyAnimAttack &self){return self.bTargetHeld;}, [](UAction_FlyAnimAttack &self, bool value){self.bTargetHeld = value ? 1 : 0;})
		.def_readwrite("AimType", &UAction_FlyAnimAttack::AimType)
		.def_readwrite("VisionAngle", &UAction_FlyAnimAttack::VisionAngle)
		.def_readwrite("Range", &UAction_FlyAnimAttack::Range, py::return_value_policy::reference)
		.def_readwrite("AttackAnim", &UAction_FlyAnimAttack::AttackAnim, py::return_value_policy::reference)
		.def_readwrite("CheckRate", &UAction_FlyAnimAttack::CheckRate)
		.def_readwrite("Aim", &UAction_FlyAnimAttack::Aim)
		.def_readwrite("ActualRange", &UAction_FlyAnimAttack::ActualRange, py::return_value_policy::reference)
		.def("ValidAttackLoc", &UAction_FlyAnimAttack::ValidAttackLoc)
		.def("GetAttackLoc", &UAction_FlyAnimAttack::GetAttackLoc, py::return_value_policy::reference)
		.def("IsAimed", &UAction_FlyAnimAttack::IsAimed)
		.def("GetDotToTarget", &UAction_FlyAnimAttack::GetDotToTarget)
		.def("AttackFinished", &UAction_FlyAnimAttack::AttackFinished)
		.def("CheckStateTransition", &UAction_FlyAnimAttack::CheckStateTransition)
		.def("GetDesiredState", &UAction_FlyAnimAttack::GetDesiredState, py::return_value_policy::reference)
		.def("eventActivateEvent", &UAction_FlyAnimAttack::eventActivateEvent)
		.def("eventStop", &UAction_FlyAnimAttack::eventStop)
		.def("eventStart", &UAction_FlyAnimAttack::eventStart)
		.def("eventCanRun", &UAction_FlyAnimAttack::eventCanRun, py::return_value_policy::reference)
		.def("eventInit", &UAction_FlyAnimAttack::eventInit)
		;
	py::class_< UAction_GoToScriptedDestination, UAction_FollowPath >(m, "UAction_GoToScriptedDestination")
		.def_readwrite("FindLookAtTargetTime", &UAction_GoToScriptedDestination::FindLookAtTargetTime)
		.def("FindLookAtTarget", &UAction_GoToScriptedDestination::FindLookAtTarget)
		.def("ReachedFormation", &UAction_GoToScriptedDestination::ReachedFormation)
		.def("CanFollowFormationOwner", &UAction_GoToScriptedDestination::CanFollowFormationOwner)
		.def("InRange", &UAction_GoToScriptedDestination::InRange)
		.def("WantsPath", &UAction_GoToScriptedDestination::WantsPath)
		.def("SetMoveNode", &UAction_GoToScriptedDestination::SetMoveNode)
		.def("GetMoveNode", &UAction_GoToScriptedDestination::GetMoveNode, py::return_value_policy::reference)
		.def("SetMoveNodeSpeed", &UAction_GoToScriptedDestination::SetMoveNodeSpeed)
		.def("GetDefaultMoveNodeSpeed", &UAction_GoToScriptedDestination::GetDefaultMoveNodeSpeed)
		.def("SetMoveFacingPolicy", &UAction_GoToScriptedDestination::SetMoveFacingPolicy)
		.def("LookAtScriptedFocus", &UAction_GoToScriptedDestination::LookAtScriptedFocus)
		.def("CheckStateTransition", &UAction_GoToScriptedDestination::CheckStateTransition)
		.def("GetDesiredStateName", &UAction_GoToScriptedDestination::GetDesiredStateName, py::return_value_policy::reference)
		.def("ShouldLookAtPlayer", &UAction_GoToScriptedDestination::ShouldLookAtPlayer)
		.def("eventActivateEvent", &UAction_GoToScriptedDestination::eventActivateEvent)
		.def("eventUpdate", &UAction_GoToScriptedDestination::eventUpdate)
		.def("eventStop", &UAction_GoToScriptedDestination::eventStop)
		.def("eventStart", &UAction_GoToScriptedDestination::eventStart)
		.def("eventCanRun", &UAction_GoToScriptedDestination::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_GrabPickup, UWillowActionSequencePawn >(m, "UAction_GrabPickup")
		.def_property("bShootTarget", [](UAction_GrabPickup &self){return self.bShootTarget;}, [](UAction_GrabPickup &self, bool value){self.bShootTarget = value ? 1 : 0;})
		.def_readwrite("CheckRadius", &UAction_GrabPickup::CheckRadius)
		.def_readwrite("PickupAnim", &UAction_GrabPickup::PickupAnim, py::return_value_policy::reference)
		.def_readwrite("GrabTimer", &UAction_GrabPickup::GrabTimer)
		.def_readwrite("CheckTime", &UAction_GrabPickup::CheckTime)
		.def_readwrite("CheckRadiusSq", &UAction_GrabPickup::CheckRadiusSq)
		.def_readwrite("LastCheckTime", &UAction_GrabPickup::LastCheckTime)
		.def_readwrite("MyPickup", &UAction_GrabPickup::MyPickup, py::return_value_policy::reference)
		.def("ActuallyPickupItem", &UAction_GrabPickup::ActuallyPickupItem)
		.def("eventPathFind", &UAction_GrabPickup::eventPathFind)
		.def("GetPathLocation", &UAction_GrabPickup::GetPathLocation, py::return_value_policy::reference)
		.def("HasPathToPickup", &UAction_GrabPickup::HasPathToPickup)
		.def("CheckPickUp", &UAction_GrabPickup::CheckPickUp)
		.def("ValidPickup", &UAction_GrabPickup::ValidPickup)
		.def("eventStart", &UAction_GrabPickup::eventStart)
		.def("eventCanRun", &UAction_GrabPickup::eventCanRun, py::return_value_policy::reference)
		.def("eventInit", &UAction_GrabPickup::eventInit)
		;
	py::class_< AWillowReplicatedEmitter, AWillowEmitter >(m, "AWillowReplicatedEmitter")
		.def_readwrite("EmitterTemplate", &AWillowReplicatedEmitter::EmitterTemplate, py::return_value_policy::reference)
		.def_readwrite("ServerLifeSpan", &AWillowReplicatedEmitter::ServerLifeSpan)
		.def_readwrite("NumFloatParameters", &AWillowReplicatedEmitter::NumFloatParameters)
		.def_readwrite("NumVectorParameters", &AWillowReplicatedEmitter::NumVectorParameters)
		.def_readwrite("NumColorParameters", &AWillowReplicatedEmitter::NumColorParameters)
		.def("Behavior_ChangeParticleSystemActiveState", &AWillowReplicatedEmitter::Behavior_ChangeParticleSystemActiveState)
		.def("ApplyColorParameters", &AWillowReplicatedEmitter::ApplyColorParameters)
		.def("ApplyVectorParameters", &AWillowReplicatedEmitter::ApplyVectorParameters)
		.def("ApplyFloatParameters", &AWillowReplicatedEmitter::ApplyFloatParameters)
		.def("SetColorParameter", &AWillowReplicatedEmitter::SetColorParameter)
		.def("SetVectorParameter", &AWillowReplicatedEmitter::SetVectorParameter)
		.def("SetFloatParameter", &AWillowReplicatedEmitter::SetFloatParameter)
		.def("eventSetTemplate", &AWillowReplicatedEmitter::eventSetTemplate)
		.def("SetTemplateWithCensoredAlternative", &AWillowReplicatedEmitter::SetTemplateWithCensoredAlternative)
		.def("eventReplicatedEvent", &AWillowReplicatedEmitter::eventReplicatedEvent)
		.def("PostBeginPlay", &AWillowReplicatedEmitter::PostBeginPlay)
		.def("Behavior_SetObjectParameterValue", [](AWillowReplicatedEmitter &self , struct FName* ParameterName) { int* pySectionIndex = (int*)malloc(sizeof(int)) ; class UObject** pyParam = 0 ;   self.Behavior_SetObjectParameterValue(pySectionIndex, ParameterName, pyParam); return py::make_tuple(*pySectionIndex, *pyParam); })
		.def("Behavior_GetObjectParameterValue", [](AWillowReplicatedEmitter &self , struct FName* ParameterName) { int* pySectionIndex = (int*)malloc(sizeof(int)) ; class UObject** pyParam = 0 ;  bool ret =  self.Behavior_GetObjectParameterValue(pySectionIndex, ParameterName, pyParam); return py::make_tuple(ret, *pySectionIndex, *pyParam); })
		.def("Behavior_GetColorParameterValue", [](AWillowReplicatedEmitter &self , struct FName* ParameterName, struct FLinearColor* Param) { int* pySectionIndex = (int*)malloc(sizeof(int)) ;  bool ret =  self.Behavior_GetColorParameterValue(pySectionIndex, ParameterName, Param); return py::make_tuple(ret, *pySectionIndex); })
		.def("Behavior_GetVectorParameterValue", [](AWillowReplicatedEmitter &self , struct FName* ParameterName, struct FVector* Param) { int* pySectionIndex = (int*)malloc(sizeof(int)) ;  bool ret =  self.Behavior_GetVectorParameterValue(pySectionIndex, ParameterName, Param); return py::make_tuple(ret, *pySectionIndex); })
		.def("Behavior_GetFloatParameterValue", [](AWillowReplicatedEmitter &self , struct FName* ParameterName) { int* pySectionIndex = (int*)malloc(sizeof(int)) ; float* pyParam = (float*)malloc(sizeof(float)) ;  bool ret =  self.Behavior_GetFloatParameterValue(pySectionIndex, ParameterName, pyParam); return py::make_tuple(ret, *pySectionIndex, *pyParam); })
		.def("Behavior_SetColorParameterValue", [](AWillowReplicatedEmitter &self , struct FName* ParameterName, struct FLinearColor* Param) { int* pySectionIndex = (int*)malloc(sizeof(int)) ;   self.Behavior_SetColorParameterValue(pySectionIndex, ParameterName, Param); return py::make_tuple(*pySectionIndex); })
		.def("Behavior_SetVectorParameterValue", [](AWillowReplicatedEmitter &self , struct FName* ParameterName, struct FVector* Param) { int* pySectionIndex = (int*)malloc(sizeof(int)) ;   self.Behavior_SetVectorParameterValue(pySectionIndex, ParameterName, Param); return py::make_tuple(*pySectionIndex); })
		.def("Behavior_SetFloatParameterValue", [](AWillowReplicatedEmitter &self , struct FName* ParameterName) { int* pySectionIndex = (int*)malloc(sizeof(int)) ; float* pyParam = (float*)malloc(sizeof(float)) ;   self.Behavior_SetFloatParameterValue(pySectionIndex, ParameterName, pyParam); return py::make_tuple(*pySectionIndex, *pyParam); })
		;
	py::class_< UAction_MortarAttack, UAction_BasicAttack >(m, "UAction_MortarAttack")
		.def_property("bStartAnimDefinesSeekTime", [](UAction_MortarAttack &self){return self.bStartAnimDefinesSeekTime;}, [](UAction_MortarAttack &self, bool value){self.bStartAnimDefinesSeekTime = value ? 1 : 0;})
		.def_property("bMoveSeeker", [](UAction_MortarAttack &self){return self.bMoveSeeker;}, [](UAction_MortarAttack &self, bool value){self.bMoveSeeker = value ? 1 : 0;})
		.def_property("bSeeking", [](UAction_MortarAttack &self){return self.bSeeking;}, [](UAction_MortarAttack &self, bool value){self.bSeeking = value ? 1 : 0;})
		.def_readwrite("ShotDelay", &UAction_MortarAttack::ShotDelay)
		.def_readwrite("MortarSocket", &UAction_MortarAttack::MortarSocket, py::return_value_policy::reference)
		.def_readwrite("Options", &UAction_MortarAttack::Options, py::return_value_policy::reference)
		.def_readwrite("NumShots", &UAction_MortarAttack::NumShots)
		.def_readwrite("MortarValues", &UAction_MortarAttack::MortarValues, py::return_value_policy::reference)
		.def_readwrite("MortarProjectile", &UAction_MortarAttack::MortarProjectile, py::return_value_policy::reference)
		.def_readwrite("StartAnim", &UAction_MortarAttack::StartAnim, py::return_value_policy::reference)
		.def_readwrite("ShootAnim", &UAction_MortarAttack::ShootAnim, py::return_value_policy::reference)
		.def_readwrite("StopAnim", &UAction_MortarAttack::StopAnim, py::return_value_policy::reference)
		.def_readwrite("BeamSocket", &UAction_MortarAttack::BeamSocket, py::return_value_policy::reference)
		.def_readwrite("BeamFiringModeDefinition", &UAction_MortarAttack::BeamFiringModeDefinition, py::return_value_policy::reference)
		.def_readwrite("SeekStartOffset", &UAction_MortarAttack::SeekStartOffset, py::return_value_policy::reference)
		.def_readwrite("SeekTime", &UAction_MortarAttack::SeekTime)
		.def_readwrite("TargetParticle", &UAction_MortarAttack::TargetParticle, py::return_value_policy::reference)
		.def_readwrite("SeekSpeed", &UAction_MortarAttack::SeekSpeed)
		.def_readwrite("ShotsTaken", &UAction_MortarAttack::ShotsTaken)
		.def_readwrite("Effect", &UAction_MortarAttack::Effect, py::return_value_policy::reference)
		.def("FireMortar", &UAction_MortarAttack::FireMortar)
		.def("CreateEffect", &UAction_MortarAttack::CreateEffect)
		.def("DetachBeam", &UAction_MortarAttack::DetachBeam)
		.def("AttachBeam", &UAction_MortarAttack::AttachBeam)
		.def("eventStop", &UAction_MortarAttack::eventStop)
		;
	py::class_< UILightProjectileManagerOwner, UInterface >(m, "UILightProjectileManagerOwner")
		.def("GetLightProjMgrFor", &UILightProjectileManagerOwner::GetLightProjMgrFor, py::return_value_policy::reference)
		;
	py::class_< UAction_MoveToFormation, UAction_Burrow >(m, "UAction_MoveToFormation")
		.def_property("bBurrow", [](UAction_MoveToFormation &self){return self.bBurrow;}, [](UAction_MoveToFormation &self, bool value){self.bBurrow = value ? 1 : 0;})
		.def_property("bShootTarget", [](UAction_MoveToFormation &self){return self.bShootTarget;}, [](UAction_MoveToFormation &self, bool value){self.bShootTarget = value ? 1 : 0;})
		.def_property("bCompleteUponArrival", [](UAction_MoveToFormation &self){return self.bCompleteUponArrival;}, [](UAction_MoveToFormation &self, bool value){self.bCompleteUponArrival = value ? 1 : 0;})
		.def_property("bCompletionMustRotate", [](UAction_MoveToFormation &self){return self.bCompletionMustRotate;}, [](UAction_MoveToFormation &self, bool value){self.bCompletionMustRotate = value ? 1 : 0;})
		.def_readwrite("HoldDistance", &UAction_MoveToFormation::HoldDistance)
		.def_readwrite("NameTag", &UAction_MoveToFormation::NameTag, py::return_value_policy::reference)
		.def_readwrite("MyFormation", &UAction_MoveToFormation::MyFormation, py::return_value_policy::reference)
		.def("HalfExposed", &UAction_MoveToFormation::HalfExposed)
		.def("RotatedEnough", &UAction_MoveToFormation::RotatedEnough)
		.def("CloseEnough", &UAction_MoveToFormation::CloseEnough)
		.def("CanBeMagnetized", &UAction_MoveToFormation::CanBeMagnetized)
		.def("OwnerIsMoving", &UAction_MoveToFormation::OwnerIsMoving)
		.def("SetFacingPolicy", &UAction_MoveToFormation::SetFacingPolicy)
		.def("CheckFormation", &UAction_MoveToFormation::CheckFormation)
		.def("GetLeaderPawn", &UAction_MoveToFormation::GetLeaderPawn, py::return_value_policy::reference)
		.def("CanFollowOwner", &UAction_MoveToFormation::CanFollowOwner)
		.def("CheckStateTransition", &UAction_MoveToFormation::CheckStateTransition)
		.def("eventUpdate", &UAction_MoveToFormation::eventUpdate)
		.def("eventStop", &UAction_MoveToFormation::eventStop)
		.def("eventStart", &UAction_MoveToFormation::eventStart)
		.def("eventCanRun", &UAction_MoveToFormation::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_MoveToVehicle, UAction_Burrow >(m, "UAction_MoveToVehicle")
		.def_readwrite("EnterDistance", &UAction_MoveToVehicle::EnterDistance)
		.def_readwrite("MyVehicle", &UAction_MoveToVehicle::MyVehicle, py::return_value_policy::reference)
		.def_readwrite("CheckRate", &UAction_MoveToVehicle::CheckRate)
		.def_readwrite("LastCheckTime", &UAction_MoveToVehicle::LastCheckTime)
		.def("eventPathFind", &UAction_MoveToVehicle::eventPathFind)
		.def("CloseEnough", &UAction_MoveToVehicle::CloseEnough)
		.def("GetMyVehicle", &UAction_MoveToVehicle::GetMyVehicle)
		.def("GetEnterDistance", &UAction_MoveToVehicle::GetEnterDistance)
		.def("eventUpdate", &UAction_MoveToVehicle::eventUpdate)
		.def("eventStop", &UAction_MoveToVehicle::eventStop)
		.def("eventStart", &UAction_MoveToVehicle::eventStart)
		.def("eventCanRun", &UAction_MoveToVehicle::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_Patrol, UAction_FollowPath >(m, "UAction_Patrol")
		.def_property("bTryToHideIfProvoked", [](UAction_Patrol &self){return self.bTryToHideIfProvoked;}, [](UAction_Patrol &self, bool value){self.bTryToHideIfProvoked = value ? 1 : 0;})
		.def_property("bTryToHide", [](UAction_Patrol &self){return self.bTryToHide;}, [](UAction_Patrol &self, bool value){self.bTryToHide = value ? 1 : 0;})
		.def_readwrite("TimeBetweenPatrolMovement", &UAction_Patrol::TimeBetweenPatrolMovement, py::return_value_policy::reference)
		.def_readwrite("TimeOfNextRandomPatrol", &UAction_Patrol::TimeOfNextRandomPatrol)
		.def_readwrite("HideLocation", &UAction_Patrol::HideLocation, py::return_value_policy::reference)
		.def_readwrite("HideLimits", &UAction_Patrol::HideLimits, py::return_value_policy::reference)
		.def("CheckFullyBlocked", &UAction_Patrol::CheckFullyBlocked)
		.def("GetRandomHomeLocation", &UAction_Patrol::GetRandomHomeLocation, py::return_value_policy::reference)
		.def("SetMoveNode", &UAction_Patrol::SetMoveNode)
		.def("GetMoveNode", &UAction_Patrol::GetMoveNode, py::return_value_policy::reference)
		.def("SetMoveNodeSpeed", &UAction_Patrol::SetMoveNodeSpeed)
		.def("SetMoveFacingPolicy", &UAction_Patrol::SetMoveFacingPolicy)
		.def("ShowDesignError", &UAction_Patrol::ShowDesignError)
		.def("CheckStateTransition", &UAction_Patrol::CheckStateTransition)
		.def("GetPatrolState", &UAction_Patrol::GetPatrolState, py::return_value_policy::reference)
		.def("eventStop", &UAction_Patrol::eventStop)
		.def("eventStart", &UAction_Patrol::eventStart)
		.def("eventScriptCleanUp", &UAction_Patrol::eventScriptCleanUp)
		;
	py::class_< UAction_PlayCustomAnimation, UWillowActionSequencePawn >(m, "UAction_PlayCustomAnimation")
		.def_property("bStopMovement", [](UAction_PlayCustomAnimation &self){return self.bStopMovement;}, [](UAction_PlayCustomAnimation &self, bool value){self.bStopMovement = value ? 1 : 0;})
		.def_property("bWaitForMovementToStop", [](UAction_PlayCustomAnimation &self){return self.bWaitForMovementToStop;}, [](UAction_PlayCustomAnimation &self, bool value){self.bWaitForMovementToStop = value ? 1 : 0;})
		.def_property("bStopOnInterrupt", [](UAction_PlayCustomAnimation &self){return self.bStopOnInterrupt;}, [](UAction_PlayCustomAnimation &self, bool value){self.bStopOnInterrupt = value ? 1 : 0;})
		.def_property("bUninteruptible", [](UAction_PlayCustomAnimation &self){return self.bUninteruptible;}, [](UAction_PlayCustomAnimation &self, bool value){self.bUninteruptible = value ? 1 : 0;})
		.def_property("bMovementHeld", [](UAction_PlayCustomAnimation &self){return self.bMovementHeld;}, [](UAction_PlayCustomAnimation &self, bool value){self.bMovementHeld = value ? 1 : 0;})
		.def_readwrite("SpecialMove", &UAction_PlayCustomAnimation::SpecialMove, py::return_value_policy::reference)
		.def("eventStop", &UAction_PlayCustomAnimation::eventStop)
		.def("eventStart", &UAction_PlayCustomAnimation::eventStart)
		.def("eventCanRun", &UAction_PlayCustomAnimation::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_ScriptedNPC, UAction_GoToScriptedDestination >(m, "UAction_ScriptedNPC")
		.def_property("bLoadBalanceNPC", [](UAction_ScriptedNPC &self){return self.bLoadBalanceNPC;}, [](UAction_ScriptedNPC &self, bool value){self.bLoadBalanceNPC = value ? 1 : 0;})
		.def_property("bIdleNPC", [](UAction_ScriptedNPC &self){return self.bIdleNPC;}, [](UAction_ScriptedNPC &self, bool value){self.bIdleNPC = value ? 1 : 0;})
		.def_property("bStuckOnPerch", [](UAction_ScriptedNPC &self){return self.bStuckOnPerch;}, [](UAction_ScriptedNPC &self, bool value){self.bStuckOnPerch = value ? 1 : 0;})
		.def("PerchPlayStopBalanced", &UAction_ScriptedNPC::PerchPlayStopBalanced)
		.def("PerchPlayStop", &UAction_ScriptedNPC::PerchPlayStop)
		.def("PerchDone", &UAction_ScriptedNPC::PerchDone)
		.def("PerchStart", &UAction_ScriptedNPC::PerchStart)
		.def("GetDefaultMoveNodeSpeed", &UAction_ScriptedNPC::GetDefaultMoveNodeSpeed)
		.def("SetMoveFacingPolicy", &UAction_ScriptedNPC::SetMoveFacingPolicy)
		.def("SetupLoadBalancePathing", &UAction_ScriptedNPC::SetupLoadBalancePathing)
		.def("SetupLoadBalanceDefaults", &UAction_ScriptedNPC::SetupLoadBalanceDefaults)
		.def("CreateVectorPath", &UAction_ScriptedNPC::CreateVectorPath)
		.def("CreateActorPath", &UAction_ScriptedNPC::CreateActorPath)
		.def("SetPerch", &UAction_ScriptedNPC::SetPerch)
		.def("PathAttemptFinished", &UAction_ScriptedNPC::PathAttemptFinished)
		.def("GetDesiredStateName", &UAction_ScriptedNPC::GetDesiredStateName, py::return_value_policy::reference)
		.def("CheckStateTransition", &UAction_ScriptedNPC::CheckStateTransition)
		.def("eventCanRun", &UAction_ScriptedNPC::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UBehavior_AISetFlight, UBehaviorBase >(m, "UBehavior_AISetFlight")
		.def_readwrite("Mode", &UBehavior_AISetFlight::Mode)
		.def("ApplyBehaviorToContext", &UBehavior_AISetFlight::ApplyBehaviorToContext)
		;
	py::class_< UAction_SetFlight, UWillowActionSequencePawn >(m, "UAction_SetFlight")
		.def_readwrite("Mode", &UAction_SetFlight::Mode)
		.def_readwrite("Anim", &UAction_SetFlight::Anim, py::return_value_policy::reference)
		.def_readwrite("LandPos", &UAction_SetFlight::LandPos, py::return_value_policy::reference)
		.def("eventStart", &UAction_SetFlight::eventStart)
		.def("eventCanRun", &UAction_SetFlight::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_ShootThreatWhenInView, UAction_AimAtThreat >(m, "UAction_ShootThreatWhenInView")
		.def("eventStop", &UAction_ShootThreatWhenInView::eventStop)
		.def("eventStart", &UAction_ShootThreatWhenInView::eventStart)
		;
	py::class_< UAction_SweepAttack, UWillowActionSequencePawn >(m, "UAction_SweepAttack")
		.def_property("bShootTarget", [](UAction_SweepAttack &self){return self.bShootTarget;}, [](UAction_SweepAttack &self, bool value){self.bShootTarget = value ? 1 : 0;})
		.def_readwrite("Angle", &UAction_SweepAttack::Angle)
		.def_readwrite("Height", &UAction_SweepAttack::Height)
		.def_readwrite("Radius", &UAction_SweepAttack::Radius)
		.def_readwrite("Direction", &UAction_SweepAttack::Direction)
		.def_readwrite("SweepDirection", &UAction_SweepAttack::SweepDirection)
		.def_readwrite("MaxIntervalAngle", &UAction_SweepAttack::MaxIntervalAngle)
		.def_readwrite("NextLoc", &UAction_SweepAttack::NextLoc, py::return_value_policy::reference)
		.def_readwrite("AngleTraveled", &UAction_SweepAttack::AngleTraveled)
		.def("CalcNextLoc", &UAction_SweepAttack::CalcNextLoc)
		.def("eventStop", &UAction_SweepAttack::eventStop)
		.def("eventStart", &UAction_SweepAttack::eventStart)
		.def("eventCanRun", &UAction_SweepAttack::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UAction_VehicleTurret, UWillowActionSequencePawn >(m, "UAction_VehicleTurret")
		.def("eventUpdate", &UAction_VehicleTurret::eventUpdate)
		.def("eventStop", &UAction_VehicleTurret::eventStop)
		.def("eventStart", &UAction_VehicleTurret::eventStart)
		.def("eventCanRun", &UAction_VehicleTurret::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqEvent_TimerElapsed, USequenceEvent >(m, "UWillowSeqEvent_TimerElapsed")
		.def_readwrite("Event", &UWillowSeqEvent_TimerElapsed::Event)
		;
	py::class_< UActorFactoryInteractiveSwitch, UActorFactoryInteractiveObject >(m, "UActorFactoryInteractiveSwitch")
		;
	py::class_< UActorFactoryPopulationOpportunityPoint, UActorFactoryPopulationOpportunityArea >(m, "UActorFactoryPopulationOpportunityPoint")
		;
	py::class_< UActorFactoryPropObject, UActorFactoryInteractiveObject >(m, "UActorFactoryPropObject")
		;
	py::class_< UActorFactoryVehicleSpawnStationPlatform, UActorFactoryInteractiveObject >(m, "UActorFactoryVehicleSpawnStationPlatform")
		;
	py::class_< UActorFactoryVehicleSpawnStationTerminal, UActorFactoryInteractiveObject >(m, "UActorFactoryVehicleSpawnStationTerminal")
		;
	py::class_< AWillowCoopPlayerStart, APlayerStart >(m, "AWillowCoopPlayerStart")
		;
	py::class_< AAIDebugDummy, AAIDebugDummyBase >(m, "AAIDebugDummy")
		;
	py::class_< UAmmoPanelGFxObject, UGFxObject >(m, "UAmmoPanelGFxObject")
		.def_readwrite("AmmoTitle", &UAmmoPanelGFxObject::AmmoTitle, py::return_value_policy::reference)
		.def_readwrite("CachedRepeater", &UAmmoPanelGFxObject::CachedRepeater)
		.def_readwrite("CachedSMG", &UAmmoPanelGFxObject::CachedSMG)
		.def_readwrite("CachedShotgun", &UAmmoPanelGFxObject::CachedShotgun)
		.def_readwrite("CachedAR", &UAmmoPanelGFxObject::CachedAR)
		.def_readwrite("CachedSniper", &UAmmoPanelGFxObject::CachedSniper)
		.def_readwrite("CachedRocket", &UAmmoPanelGFxObject::CachedRocket)
		.def_readwrite("CachedGrenade", &UAmmoPanelGFxObject::CachedGrenade)
		.def("__SetHighlight", &UAmmoPanelGFxObject::__SetHighlight)
		.def("SetHighlight", &UAmmoPanelGFxObject::SetHighlight)
		.def("SetAmmoLabels", &UAmmoPanelGFxObject::SetAmmoLabels)
		.def("SetAllAmmoCounts", &UAmmoPanelGFxObject::SetAllAmmoCounts)
		.def("RefreshTransientData", &UAmmoPanelGFxObject::RefreshTransientData)
		.def("SetTitle", &UAmmoPanelGFxObject::SetTitle)
		.def("Init", &UAmmoPanelGFxObject::Init)
		.def("SetAmmoCount", [](UAmmoPanelGFxObject &self , struct FString FlashString, class UResourceDefinition* ResourceDef, class AWillowPlayerController* WPCOwner) { int* pyCachedAmount = (int*)malloc(sizeof(int)) ;   self.SetAmmoCount(FlashString, ResourceDef, WPCOwner, pyCachedAmount); return py::make_tuple(*pyCachedAmount); })
		;
	py::class_< UInputContextSelectorBase, UObject >(m, "UInputContextSelectorBase")
		.def("SelectContext", &UInputContextSelectorBase::SelectContext, py::return_value_policy::reference)
		;
	py::class_< UDefaultInputContextSelector, UInputContextSelectorBase >(m, "UDefaultInputContextSelector")
		.def("SelectContext", &UDefaultInputContextSelector::SelectContext, py::return_value_policy::reference)
		;
	py::class_< UAssassinInputContextSelector, UDefaultInputContextSelector >(m, "UAssassinInputContextSelector")
		.def("SelectContext", &UAssassinInputContextSelector::SelectContext, py::return_value_policy::reference)
		;
	py::class_< AExecuteActionSkill, AActionSkill >(m, "AExecuteActionSkill")
		.def_property("ForceSwingOnWallCollision", [](AExecuteActionSkill &self){return self.ForceSwingOnWallCollision;}, [](AExecuteActionSkill &self, bool value){self.ForceSwingOnWallCollision = value ? 1 : 0;})
		.def_property("ForceSwingOnExecuteDashTimeout", [](AExecuteActionSkill &self){return self.ForceSwingOnExecuteDashTimeout;}, [](AExecuteActionSkill &self, bool value){self.ForceSwingOnExecuteDashTimeout = value ? 1 : 0;})
		.def_property("bEnableExecuteAimAssistance", [](AExecuteActionSkill &self){return self.bEnableExecuteAimAssistance;}, [](AExecuteActionSkill &self, bool value){self.bEnableExecuteAimAssistance = value ? 1 : 0;})
		.def_property("bDisableExecuteAbility", [](AExecuteActionSkill &self){return self.bDisableExecuteAbility;}, [](AExecuteActionSkill &self, bool value){self.bDisableExecuteAbility = value ? 1 : 0;})
		.def_property("bTargetRequiredForExecute", [](AExecuteActionSkill &self){return self.bTargetRequiredForExecute;}, [](AExecuteActionSkill &self, bool value){self.bTargetRequiredForExecute = value ? 1 : 0;})
		.def_property("bEnemyTargetRequiredForExecute", [](AExecuteActionSkill &self){return self.bEnemyTargetRequiredForExecute;}, [](AExecuteActionSkill &self, bool value){self.bEnemyTargetRequiredForExecute = value ? 1 : 0;})
		.def_property("bMustBeOnGroundToExecute", [](AExecuteActionSkill &self){return self.bMustBeOnGroundToExecute;}, [](AExecuteActionSkill &self, bool value){self.bMustBeOnGroundToExecute = value ? 1 : 0;})
		.def_property("StopExecuteDashIfTouchFriendly", [](AExecuteActionSkill &self){return self.StopExecuteDashIfTouchFriendly;}, [](AExecuteActionSkill &self, bool value){self.StopExecuteDashIfTouchFriendly = value ? 1 : 0;})
		.def_property("ClearVelocityOnDashEndInAir", [](AExecuteActionSkill &self){return self.ClearVelocityOnDashEndInAir;}, [](AExecuteActionSkill &self, bool value){self.ClearVelocityOnDashEndInAir = value ? 1 : 0;})
		.def_property("bLockMovementAndRotation", [](AExecuteActionSkill &self){return self.bLockMovementAndRotation;}, [](AExecuteActionSkill &self, bool value){self.bLockMovementAndRotation = value ? 1 : 0;})
		.def_property("ExecuteDOFEffectActive", [](AExecuteActionSkill &self){return self.ExecuteDOFEffectActive;}, [](AExecuteActionSkill &self, bool value){self.ExecuteDOFEffectActive = value ? 1 : 0;})
		.def_property("bAttemptedExecute", [](AExecuteActionSkill &self){return self.bAttemptedExecute;}, [](AExecuteActionSkill &self, bool value){self.bAttemptedExecute = value ? 1 : 0;})
		.def_property("bEnableAnalogMovementBackup", [](AExecuteActionSkill &self){return self.bEnableAnalogMovementBackup;}, [](AExecuteActionSkill &self, bool value){self.bEnableAnalogMovementBackup = value ? 1 : 0;})
		.def_property("bExecuteIsAvailable", [](AExecuteActionSkill &self){return self.bExecuteIsAvailable;}, [](AExecuteActionSkill &self, bool value){self.bExecuteIsAvailable = value ? 1 : 0;})
		.def_property("bMovementHasBeenRestored", [](AExecuteActionSkill &self){return self.bMovementHasBeenRestored;}, [](AExecuteActionSkill &self, bool value){self.bMovementHasBeenRestored = value ? 1 : 0;})
		.def_property("bCleaningUpExecute", [](AExecuteActionSkill &self){return self.bCleaningUpExecute;}, [](AExecuteActionSkill &self, bool value){self.bCleaningUpExecute = value ? 1 : 0;})
		.def_property("bFindMeleeTarget", [](AExecuteActionSkill &self){return self.bFindMeleeTarget;}, [](AExecuteActionSkill &self, bool value){self.bFindMeleeTarget = value ? 1 : 0;})
		.def_property("bAttachedMeleeWeapon", [](AExecuteActionSkill &self){return self.bAttachedMeleeWeapon;}, [](AExecuteActionSkill &self, bool value){self.bAttachedMeleeWeapon = value ? 1 : 0;})
		.def_readwrite("ExecuteDurationFormula", &AExecuteActionSkill::ExecuteDurationFormula, py::return_value_policy::reference)
		.def_readwrite("RestoreControlAfterMeleeSwingDelay", &AExecuteActionSkill::RestoreControlAfterMeleeSwingDelay)
		.def_readwrite("AutoSwingAngleInDegrees", &AExecuteActionSkill::AutoSwingAngleInDegrees)
		.def_readwrite("ExecuteCaption", &AExecuteActionSkill::ExecuteCaption, py::return_value_policy::reference)
		.def_readwrite("ExecuteMeleeSkill", &AExecuteActionSkill::ExecuteMeleeSkill, py::return_value_policy::reference)
		.def_readwrite("ExecuteAnimDelay", &AExecuteActionSkill::ExecuteAnimDelay)
		.def_readwrite("ExecuteMeleeDef", &AExecuteActionSkill::ExecuteMeleeDef, py::return_value_policy::reference)
		.def_readwrite("CheckForTargetDistance", &AExecuteActionSkill::CheckForTargetDistance)
		.def_readwrite("InitiateMeleeDistance", &AExecuteActionSkill::InitiateMeleeDistance)
		.def_readwrite("ExecuteVelocity", &AExecuteActionSkill::ExecuteVelocity)
		.def_readwrite("AirSpeed", &AExecuteActionSkill::AirSpeed)
		.def_readwrite("AccelRateMultiplier", &AExecuteActionSkill::AccelRateMultiplier)
		.def_readwrite("MinHitWallOverrideFormula", &AExecuteActionSkill::MinHitWallOverrideFormula, py::return_value_policy::reference)
		.def_readwrite("DashEndInAirVelocityScale", &AExecuteActionSkill::DashEndInAirVelocityScale, py::return_value_policy::reference)
		.def_readwrite("BeginExecuteSMD", &AExecuteActionSkill::BeginExecuteSMD, py::return_value_policy::reference)
		.def_readwrite("IdleExecuteSMD", &AExecuteActionSkill::IdleExecuteSMD, py::return_value_policy::reference)
		.def_readwrite("ExecuteAttackSMD", &AExecuteActionSkill::ExecuteAttackSMD, py::return_value_policy::reference)
		.def_readwrite("ExecuteDOFEffectData", &AExecuteActionSkill::ExecuteDOFEffectData, py::return_value_policy::reference)
		.def_readwrite("ExecuteDOFModiferData", &AExecuteActionSkill::ExecuteDOFModiferData, py::return_value_policy::reference)
		.def_readwrite("ExecuteDOFEffectName", &AExecuteActionSkill::ExecuteDOFEffectName, py::return_value_policy::reference)
		.def_readwrite("CancelDashAngleInDegrees", &AExecuteActionSkill::CancelDashAngleInDegrees)
		.def_readwrite("VisionModeMaterial", &AExecuteActionSkill::VisionModeMaterial, py::return_value_policy::reference)
		.def_readwrite("VisionModePostProcessChain", &AExecuteActionSkill::VisionModePostProcessChain, py::return_value_policy::reference)
		.def_readwrite("VisionModePostProcessChainOptions", &AExecuteActionSkill::VisionModePostProcessChainOptions, py::return_value_policy::reference)
		.def_readwrite("VisionModeCoordinatedEffect", &AExecuteActionSkill::VisionModeCoordinatedEffect, py::return_value_policy::reference)
		.def_readwrite("VisionModeCurrentTargetCoordinatedEffect", &AExecuteActionSkill::VisionModeCurrentTargetCoordinatedEffect, py::return_value_policy::reference)
		.def_readwrite("CritLocationsSkill", &AExecuteActionSkill::CritLocationsSkill, py::return_value_policy::reference)
		.def_readwrite("VisionModeMaterialInstance", &AExecuteActionSkill::VisionModeMaterialInstance, py::return_value_policy::reference)
		.def_readwrite("PrevVisionModePPCModifierData", &AExecuteActionSkill::PrevVisionModePPCModifierData, py::return_value_policy::reference)
		.def_readwrite("PrevVisionModeDOFEffectData", &AExecuteActionSkill::PrevVisionModeDOFEffectData, py::return_value_policy::reference)
		.def_readwrite("PreExecuteVelocity", &AExecuteActionSkill::PreExecuteVelocity, py::return_value_policy::reference)
		.def_readwrite("PrevFrameExecuteVelocity", &AExecuteActionSkill::PrevFrameExecuteVelocity, py::return_value_policy::reference)
		.def_readwrite("CachedAccelRate", &AExecuteActionSkill::CachedAccelRate)
		.def_readwrite("CachedMinHitWall", &AExecuteActionSkill::CachedMinHitWall)
		.def_readwrite("MyTarget", &AExecuteActionSkill::MyTarget, py::return_value_policy::reference)
		.def_readwrite("InitiateMeleeDistanceSquared", &AExecuteActionSkill::InitiateMeleeDistanceSquared)
		.def_readwrite("ActionSkill", &AExecuteActionSkill::ActionSkill, py::return_value_policy::reference)
		.def_readwrite("MeleeAttackAnimDuration", &AExecuteActionSkill::MeleeAttackAnimDuration)
		.def_readwrite("ExecuteDuration", &AExecuteActionSkill::ExecuteDuration)
		.def_readwrite("MinHitWallOverride", &AExecuteActionSkill::MinHitWallOverride)
		.def_readwrite("AutoSwingAngleCos", &AExecuteActionSkill::AutoSwingAngleCos)
		.def_readwrite("CancelDashAngleCos", &AExecuteActionSkill::CancelDashAngleCos)
		.def_readwrite("SkillDuration", &AExecuteActionSkill::SkillDuration)
		.def("HasTrainedCritLocationsSkill", &AExecuteActionSkill::HasTrainedCritLocationsSkill)
		.def("eventOverrideCrosshairVisibility", &AExecuteActionSkill::eventOverrideCrosshairVisibility)
		.def("eventDisableActionSkillHUD", &AExecuteActionSkill::eventDisableActionSkillHUD)
		.def("eventEnableActionSkillHUD", &AExecuteActionSkill::eventEnableActionSkillHUD)
		.def("eventTickActionSkillHUD", &AExecuteActionSkill::eventTickActionSkillHUD)
		.def("UpdateHUDTimer", &AExecuteActionSkill::UpdateHUDTimer)
		.def("FoundBadReflectionVelocity", &AExecuteActionSkill::FoundBadReflectionVelocity)
		.def("OnExecuteEndEarlyDueToCollision", &AExecuteActionSkill::OnExecuteEndEarlyDueToCollision)
		.def("OnExecuteFailedToKillTarget", &AExecuteActionSkill::OnExecuteFailedToKillTarget)
		.def("OnExecuteKilledTarget", &AExecuteActionSkill::OnExecuteKilledTarget)
		.def("OnExecuteAttackBegin", &AExecuteActionSkill::OnExecuteAttackBegin)
		.def("OnExecuteDashEnd", &AExecuteActionSkill::OnExecuteDashEnd)
		.def("OnExecuteEnd", &AExecuteActionSkill::OnExecuteEnd)
		.def("OnExecuteBegin", &AExecuteActionSkill::OnExecuteBegin)
		.def("OnExecuteIsNowAvailable", &AExecuteActionSkill::OnExecuteIsNowAvailable)
		.def("DrawExecuteDebug", &AExecuteActionSkill::DrawExecuteDebug)
		.def("IsExecuting", &AExecuteActionSkill::IsExecuting)
		.def("CleanUpExecute", &AExecuteActionSkill::CleanUpExecute)
		.def("EndExecuteEarlyDueToCollision", &AExecuteActionSkill::EndExecuteEarlyDueToCollision)
		.def("RestorePhysicsPostExecute", &AExecuteActionSkill::RestorePhysicsPostExecute)
		.def("RestrictPlayerMovementPreExecute", &AExecuteActionSkill::RestrictPlayerMovementPreExecute)
		.def("RestorePlayerMovementPostExecute", &AExecuteActionSkill::RestorePlayerMovementPostExecute)
		.def("EnableDOFEffect", &AExecuteActionSkill::EnableDOFEffect)
		.def("EnableVisionModeEffect", &AExecuteActionSkill::EnableVisionModeEffect)
		.def("OnActionSkillOwnerTouchedActor", &AExecuteActionSkill::OnActionSkillOwnerTouchedActor)
		.def("OnActionSkillOwnerHitWall", &AExecuteActionSkill::OnActionSkillOwnerHitWall)
		.def("PlayMeleeAttackAnim", &AExecuteActionSkill::PlayMeleeAttackAnim)
		.def("AttachMeleeWeapon", &AExecuteActionSkill::AttachMeleeWeapon)
		.def("FirePawnCannon", &AExecuteActionSkill::FirePawnCannon)
		.def("ServerFirePawnCannon", &AExecuteActionSkill::ServerFirePawnCannon)
		.def("WeaponDeEquipped", &AExecuteActionSkill::WeaponDeEquipped)
		.def("DrawGhettoDebugSphere", &AExecuteActionSkill::DrawGhettoDebugSphere)
		.def("ClientPerformExecuteAttack", &AExecuteActionSkill::ClientPerformExecuteAttack)
		.def("UpdateExecuteRotation", &AExecuteActionSkill::UpdateExecuteRotation)
		.def("IsTargetWithinAutoSwingCone", &AExecuteActionSkill::IsTargetWithinAutoSwingCone)
		.def("TriggerExecuteAttack", &AExecuteActionSkill::TriggerExecuteAttack)
		.def("CanHitExecuteTarget", &AExecuteActionSkill::CanHitExecuteTarget)
		.def("UpdateExecuteTooltip", &AExecuteActionSkill::UpdateExecuteTooltip)
		.def("ClientExecuteIsAvailable", &AExecuteActionSkill::ClientExecuteIsAvailable)
		.def("OnExecuteIsAvailable", &AExecuteActionSkill::OnExecuteIsAvailable)
		.def("SetExecuteAvailability", &AExecuteActionSkill::SetExecuteAvailability)
		.def("HasAutoAimTarget", &AExecuteActionSkill::HasAutoAimTarget)
		.def("TryEnablingExecuteCooldown", &AExecuteActionSkill::TryEnablingExecuteCooldown)
		.def("ClientEndExecuteDash", &AExecuteActionSkill::ClientEndExecuteDash)
		.def("EndExecuteDash", &AExecuteActionSkill::EndExecuteDash)
		.def("ExecuteDashTimerUp", &AExecuteActionSkill::ExecuteDashTimerUp)
		.def("ServerEndExecute", &AExecuteActionSkill::ServerEndExecute)
		.def("EndExecute", &AExecuteActionSkill::EndExecute)
		.def("ClientEndExecute", &AExecuteActionSkill::ClientEndExecute)
		.def("RemoveExecuteFlagInstanceData", &AExecuteActionSkill::RemoveExecuteFlagInstanceData)
		.def("SetExecuteFlagInstanceData", &AExecuteActionSkill::SetExecuteFlagInstanceData)
		.def("IsVisionModeEffectEnabled", &AExecuteActionSkill::IsVisionModeEffectEnabled)
		.def("RemoveVisionModeFromPawns", &AExecuteActionSkill::RemoveVisionModeFromPawns)
		.def("UpdateVisionModeForPawns", &AExecuteActionSkill::UpdateVisionModeForPawns)
		.def("ActionSkillComplete", &AExecuteActionSkill::ActionSkillComplete)
		.def("BeginExecute", &AExecuteActionSkill::BeginExecute)
		.def("TryExecuting", &AExecuteActionSkill::TryExecuting)
		.def("StartActionSkillActiveAbility", &AExecuteActionSkill::StartActionSkillActiveAbility)
		.def("OnActionSkillOwnerMelee", &AExecuteActionSkill::OnActionSkillOwnerMelee)
		.def("CanInitiateNewExecuteAttack", &AExecuteActionSkill::CanInitiateNewExecuteAttack)
		.def("ReadyToInterceptMelee", &AExecuteActionSkill::ReadyToInterceptMelee)
		.def("eventOnActionSkillTick", &AExecuteActionSkill::eventOnActionSkillTick)
		.def("RemoveCritLocationEffect", &AExecuteActionSkill::RemoveCritLocationEffect)
		.def("OnActionSkillKilledEnemy", &AExecuteActionSkill::OnActionSkillKilledEnemy)
		.def("eventOwnerAcquiredAutoAimTarget", &AExecuteActionSkill::eventOwnerAcquiredAutoAimTarget)
		.def("OnActionSkillShowBackMenu", &AExecuteActionSkill::OnActionSkillShowBackMenu)
		.def("OnActionSkillOwnerWeaponSwitched", &AExecuteActionSkill::OnActionSkillOwnerWeaponSwitched)
		.def("OnActionSkillEnded", &AExecuteActionSkill::OnActionSkillEnded)
		.def("ClientActionSkillWantsToDeactivate", &AExecuteActionSkill::ClientActionSkillWantsToDeactivate)
		.def("eventOnActionSkillWantsToDeactivate", &AExecuteActionSkill::eventOnActionSkillWantsToDeactivate)
		.def("OnActionSkillStarted", &AExecuteActionSkill::OnActionSkillStarted)
		;
	py::class_< UValueGFxObject, UGFxObject >(m, "UValueGFxObject")
		.def("SetValue", &UValueGFxObject::SetValue)
		;
	py::class_< UEridiumValueGFxObject, UValueGFxObject >(m, "UEridiumValueGFxObject")
		.def_readwrite("CurrencyFrames", &UEridiumValueGFxObject::CurrencyFrames, py::return_value_policy::reference)
		.def("SetCurrencyClip", &UEridiumValueGFxObject::SetCurrencyClip)
		.def("SetCurrencyFrame", &UEridiumValueGFxObject::SetCurrencyFrame)
		.def("SetCurrencyType", &UEridiumValueGFxObject::SetCurrencyType)
		.def("SetValue", &UEridiumValueGFxObject::SetValue)
		;
	py::class_< UWillowVersusDuelMessage, ULocalMessage >(m, "UWillowVersusDuelMessage")
		.def_readwrite("DuelingDisabled", &UWillowVersusDuelMessage::DuelingDisabled, py::return_value_policy::reference)
		.def_readwrite("AlreadyDueling", &UWillowVersusDuelMessage::AlreadyDueling, py::return_value_policy::reference)
		.def_readwrite("AlreadyChallenged", &UWillowVersusDuelMessage::AlreadyChallenged, py::return_value_policy::reference)
		.def_readwrite("DuelTimeout", &UWillowVersusDuelMessage::DuelTimeout, py::return_value_policy::reference)
		.def_readwrite("IssuedChallenge", &UWillowVersusDuelMessage::IssuedChallenge, py::return_value_policy::reference)
		.def_readwrite("ReceivedChallenge", &UWillowVersusDuelMessage::ReceivedChallenge, py::return_value_policy::reference)
		.def_readwrite("AcceptedChallenge", &UWillowVersusDuelMessage::AcceptedChallenge, py::return_value_policy::reference)
		.def_readwrite("DuelStart", &UWillowVersusDuelMessage::DuelStart, py::return_value_policy::reference)
		.def_readwrite("ArenaWarning", &UWillowVersusDuelMessage::ArenaWarning, py::return_value_policy::reference)
		.def_readwrite("DuelDraw", &UWillowVersusDuelMessage::DuelDraw, py::return_value_policy::reference)
		.def_readwrite("DuelWin", &UWillowVersusDuelMessage::DuelWin, py::return_value_policy::reference)
		.def_readwrite("DuelNotRightNow", &UWillowVersusDuelMessage::DuelNotRightNow, py::return_value_policy::reference)
		.def("GetLifeTime", &UWillowVersusDuelMessage::GetLifeTime)
		.def("GetMsgType", &UWillowVersusDuelMessage::GetMsgType)
		.def("GetString", &UWillowVersusDuelMessage::GetString, py::return_value_policy::reference)
		;
	py::class_< UWillowGFxColiseumOverlayMovie, UWillowGFxMovie >(m, "UWillowGFxColiseumOverlayMovie")
		.def_property("bSuppressHUD", [](UWillowGFxColiseumOverlayMovie &self){return self.bSuppressHUD;}, [](UWillowGFxColiseumOverlayMovie &self, bool value){self.bSuppressHUD = value ? 1 : 0;})
		.def_property("bDismissable", [](UWillowGFxColiseumOverlayMovie &self){return self.bDismissable;}, [](UWillowGFxColiseumOverlayMovie &self, bool value){self.bDismissable = value ? 1 : 0;})
		.def_property("bEveryoneSignedInOn360", [](UWillowGFxColiseumOverlayMovie &self){return self.bEveryoneSignedInOn360;}, [](UWillowGFxColiseumOverlayMovie &self, bool value){self.bEveryoneSignedInOn360 = value ? 1 : 0;})
		.def_readwrite("OverlayDef", &UWillowGFxColiseumOverlayMovie::OverlayDef, py::return_value_policy::reference)
		.def_readwrite("RoundPrefix", &UWillowGFxColiseumOverlayMovie::RoundPrefix, py::return_value_policy::reference)
		.def_readwrite("WavePrefix", &UWillowGFxColiseumOverlayMovie::WavePrefix, py::return_value_policy::reference)
		.def_readwrite("CertificateText", &UWillowGFxColiseumOverlayMovie::CertificateText, py::return_value_policy::reference)
		.def_readwrite("CachedRound", &UWillowGFxColiseumOverlayMovie::CachedRound)
		.def_readwrite("CachedWave", &UWillowGFxColiseumOverlayMovie::CachedWave)
		.def_readwrite("CachedMaxRound", &UWillowGFxColiseumOverlayMovie::CachedMaxRound)
		.def_readwrite("RoundResult", &UWillowGFxColiseumOverlayMovie::RoundResult, py::return_value_policy::reference)
		.def_readwrite("RoundSummary", &UWillowGFxColiseumOverlayMovie::RoundSummary, py::return_value_policy::reference)
		.def_readwrite("EnemyDamage", &UWillowGFxColiseumOverlayMovie::EnemyDamage, py::return_value_policy::reference)
		.def_readwrite("EnemyHealth", &UWillowGFxColiseumOverlayMovie::EnemyHealth, py::return_value_policy::reference)
		.def_readwrite("EnemyShields", &UWillowGFxColiseumOverlayMovie::EnemyShields, py::return_value_policy::reference)
		.def_readwrite("LatentScreenType", &UWillowGFxColiseumOverlayMovie::LatentScreenType)
		.def_readwrite("Platform", &UWillowGFxColiseumOverlayMovie::Platform)
		.def_readwrite("PlayerLines", &UWillowGFxColiseumOverlayMovie::PlayerLines, py::return_value_policy::reference)
		.def_readwrite("HighlightedResultsLine", &UWillowGFxColiseumOverlayMovie::HighlightedResultsLine)
		.def("CertificateGotoAndStop", &UWillowGFxColiseumOverlayMovie::CertificateGotoAndStop)
		.def("HighlightGotoFrame", &UWillowGFxColiseumOverlayMovie::HighlightGotoFrame)
		.def("CatchupColiseumRule_Wrapper", &UWillowGFxColiseumOverlayMovie::CatchupColiseumRule_Wrapper)
		.def("CatchupColiseum_Wrapper", &UWillowGFxColiseumOverlayMovie::CatchupColiseum_Wrapper)
		.def("CloseConfirm_Wrapper", &UWillowGFxColiseumOverlayMovie::CloseConfirm_Wrapper)
		.def("ShowColiseumToLobbyConfirm_Wrapper", &UWillowGFxColiseumOverlayMovie::ShowColiseumToLobbyConfirm_Wrapper)
		.def("ShowPenaltyBox_Wrapper", &UWillowGFxColiseumOverlayMovie::ShowPenaltyBox_Wrapper)
		.def("CloseCertificate_Wrapper", &UWillowGFxColiseumOverlayMovie::CloseCertificate_Wrapper)
		.def("AwardCertificate_Wrapper", &UWillowGFxColiseumOverlayMovie::AwardCertificate_Wrapper)
		.def("CloseResults_Wrapper", &UWillowGFxColiseumOverlayMovie::CloseResults_Wrapper)
		.def("ConfigureResultsScreen_Wrapper", &UWillowGFxColiseumOverlayMovie::ConfigureResultsScreen_Wrapper)
		.def("ShowResults_Wrapper", &UWillowGFxColiseumOverlayMovie::ShowResults_Wrapper)
		.def("Notify_Wrapper", &UWillowGFxColiseumOverlayMovie::Notify_Wrapper)
		.def("RuleAnnounce_Wrapper", &UWillowGFxColiseumOverlayMovie::RuleAnnounce_Wrapper)
		.def("RoundAnnounce_Wrapper", &UWillowGFxColiseumOverlayMovie::RoundAnnounce_Wrapper)
		.def("StartColiseumTimer_Wrapper", &UWillowGFxColiseumOverlayMovie::StartColiseumTimer_Wrapper)
		.def("UpdateWaveDisplay", &UWillowGFxColiseumOverlayMovie::UpdateWaveDisplay)
		.def("UpdateRoundDisplay", &UWillowGFxColiseumOverlayMovie::UpdateRoundDisplay)
		.def("TurnOffColiseumRule_Wrapper", &UWillowGFxColiseumOverlayMovie::TurnOffColiseumRule_Wrapper)
		.def("UpdateColiseumRule_Wrapper", &UWillowGFxColiseumOverlayMovie::UpdateColiseumRule_Wrapper)
		.def("RulesGotoLabel", &UWillowGFxColiseumOverlayMovie::RulesGotoLabel)
		.def("ShowGamerTagCard", &UWillowGFxColiseumOverlayMovie::ShowGamerTagCard)
		.def("SetInput", &UWillowGFxColiseumOverlayMovie::SetInput)
		.def("MoveResultsHighlight", &UWillowGFxColiseumOverlayMovie::MoveResultsHighlight)
		.def("UpdateVisibilityForStatusMenu", &UWillowGFxColiseumOverlayMovie::UpdateVisibilityForStatusMenu)
		.def("CatchupColiseumOverlay", &UWillowGFxColiseumOverlayMovie::CatchupColiseumOverlay)
		.def("CatchupNewPlayer", &UWillowGFxColiseumOverlayMovie::CatchupNewPlayer)
		.def("CloseConfirm", &UWillowGFxColiseumOverlayMovie::CloseConfirm)
		.def("ShowColiseumToLobbyConfirm", &UWillowGFxColiseumOverlayMovie::ShowColiseumToLobbyConfirm)
		.def("ShowPenaltyBox", &UWillowGFxColiseumOverlayMovie::ShowPenaltyBox)
		.def("OnCertificateScreenDismissable", &UWillowGFxColiseumOverlayMovie::OnCertificateScreenDismissable)
		.def("OnResultsScreenDismissable", &UWillowGFxColiseumOverlayMovie::OnResultsScreenDismissable)
		.def("CloseCertificateScreen", &UWillowGFxColiseumOverlayMovie::CloseCertificateScreen)
		.def("AwardCertificate", &UWillowGFxColiseumOverlayMovie::AwardCertificate)
		.def("CloseResultsScreen", &UWillowGFxColiseumOverlayMovie::CloseResultsScreen)
		.def("ShowResultsScreen", &UWillowGFxColiseumOverlayMovie::ShowResultsScreen)
		.def("PublishColiseumStatDelta", &UWillowGFxColiseumOverlayMovie::PublishColiseumStatDelta)
		.def("Notify", &UWillowGFxColiseumOverlayMovie::Notify)
		.def("RuleAnnounce", &UWillowGFxColiseumOverlayMovie::RuleAnnounce)
		.def("RoundAnnounce", &UWillowGFxColiseumOverlayMovie::RoundAnnounce)
		.def("GetFilledInRoundSummary", &UWillowGFxColiseumOverlayMovie::GetFilledInRoundSummary, py::return_value_policy::reference)
		.def("BeginRoundAnnounce", &UWillowGFxColiseumOverlayMovie::BeginRoundAnnounce)
		.def("StartColiseumTimer", &UWillowGFxColiseumOverlayMovie::StartColiseumTimer)
		.def("UpdateColiseumRule", &UWillowGFxColiseumOverlayMovie::UpdateColiseumRule)
		.def("extConfirmIsOpen", &UWillowGFxColiseumOverlayMovie::extConfirmIsOpen)
		.def("extSetupCertificate", &UWillowGFxColiseumOverlayMovie::extSetupCertificate)
		.def("extSetupResultsScreen", &UWillowGFxColiseumOverlayMovie::extSetupResultsScreen)
		.def("extRuleAnnounceComplete", &UWillowGFxColiseumOverlayMovie::extRuleAnnounceComplete)
		.def("OnConsumeEverything", &UWillowGFxColiseumOverlayMovie::OnConsumeEverything)
		.def("OnConfirmInputKey", &UWillowGFxColiseumOverlayMovie::OnConfirmInputKey)
		.def("OnCertificateInputKey", &UWillowGFxColiseumOverlayMovie::OnCertificateInputKey)
		.def("OnResultsScreenInputKey", &UWillowGFxColiseumOverlayMovie::OnResultsScreenInputKey)
		.def("eventOnClose", &UWillowGFxColiseumOverlayMovie::eventOnClose)
		.def("eventStart", &UWillowGFxColiseumOverlayMovie::eventStart)
		;
	py::class_< UColiseumRuleDefinition, UGBXDefinition >(m, "UColiseumRuleDefinition")
		.def_readwrite("RuleTitle", &UColiseumRuleDefinition::RuleTitle, py::return_value_policy::reference)
		.def_readwrite("RuleDescription", &UColiseumRuleDefinition::RuleDescription, py::return_value_policy::reference)
		.def_readwrite("FrameLabel", &UColiseumRuleDefinition::FrameLabel, py::return_value_policy::reference)
		;
	py::class_< UNxFootForceFieldComponent, UNxForceFieldRadialComponent >(m, "UNxFootForceFieldComponent")
		;
	py::class_< UITinnitusTarget, UInterface >(m, "UITinnitusTarget")
		.def("TriggerTinnitus", &UITinnitusTarget::TriggerTinnitus)
		.def("TriggerTinnitusFromLocation", &UITinnitusTarget::TriggerTinnitusFromLocation)
		;
	py::class_< ABuzzaxeActionSkill, AActionSkill >(m, "ABuzzaxeActionSkill")
		.def_property("bMenuOpen", [](ABuzzaxeActionSkill &self){return self.bMenuOpen;}, [](ABuzzaxeActionSkill &self, bool value){self.bMenuOpen = value ? 1 : 0;})
		.def_property("bHideBuzzaxe", [](ABuzzaxeActionSkill &self){return self.bHideBuzzaxe;}, [](ABuzzaxeActionSkill &self, bool value){self.bHideBuzzaxe = value ? 1 : 0;})
		.def_property("bDoNotPutDownBuzzaxe", [](ABuzzaxeActionSkill &self){return self.bDoNotPutDownBuzzaxe;}, [](ABuzzaxeActionSkill &self, bool value){self.bDoNotPutDownBuzzaxe = value ? 1 : 0;})
		.def_property("bAllowNonBuzzaxeEquip", [](ABuzzaxeActionSkill &self){return self.bAllowNonBuzzaxeEquip;}, [](ABuzzaxeActionSkill &self, bool value){self.bAllowNonBuzzaxeEquip = value ? 1 : 0;})
		.def_property("bPlayerRevived", [](ABuzzaxeActionSkill &self){return self.bPlayerRevived;}, [](ABuzzaxeActionSkill &self, bool value){self.bPlayerRevived = value ? 1 : 0;})
		.def_readwrite("ActiveWeaponSlot", &ABuzzaxeActionSkill::ActiveWeaponSlot)
		.def_readwrite("Buzzaxe", &ABuzzaxeActionSkill::Buzzaxe, py::return_value_policy::reference)
		.def_readwrite("MyActionSkill", &ABuzzaxeActionSkill::MyActionSkill, py::return_value_policy::reference)
		.def_readwrite("BuzzaxeBalanceDef", &ABuzzaxeActionSkill::BuzzaxeBalanceDef, py::return_value_policy::reference)
		.def_readwrite("BuzzaxeSMD", &ABuzzaxeActionSkill::BuzzaxeSMD, py::return_value_policy::reference)
		.def_readwrite("BuzzaxeSelfSMD", &ABuzzaxeActionSkill::BuzzaxeSelfSMD, py::return_value_policy::reference)
		.def_readwrite("MeleePercentage", &ABuzzaxeActionSkill::MeleePercentage)
		.def_readwrite("HoldOverrideSkill", &ABuzzaxeActionSkill::HoldOverrideSkill, py::return_value_policy::reference)
		.def_readwrite("HoldNameOverride", &ABuzzaxeActionSkill::HoldNameOverride, py::return_value_policy::reference)
		.def_readwrite("OverrideSMD", &ABuzzaxeActionSkill::OverrideSMD, py::return_value_policy::reference)
		.def_readwrite("OverrideEndSMD", &ABuzzaxeActionSkill::OverrideEndSMD, py::return_value_policy::reference)
		.def_readwrite("OverrideEndInjuredOverridePercentage", &ABuzzaxeActionSkill::OverrideEndInjuredOverridePercentage)
		.def("eventDestroyed", &ABuzzaxeActionSkill::eventDestroyed)
		.def("OnActionSkillWeaponsRestricted", &ABuzzaxeActionSkill::OnActionSkillWeaponsRestricted)
		.def("OnActionSkillOwnerRevived", &ABuzzaxeActionSkill::OnActionSkillOwnerRevived)
		.def("OnInjuredOverride", &ABuzzaxeActionSkill::OnInjuredOverride)
		.def("UpdateThirdPersonBuzzaxeMesh", &ABuzzaxeActionSkill::UpdateThirdPersonBuzzaxeMesh)
		.def("ServerNotifyModalGameMenuClosing", &ABuzzaxeActionSkill::ServerNotifyModalGameMenuClosing)
		.def("ServerNotifyModalGameMenuOpening", &ABuzzaxeActionSkill::ServerNotifyModalGameMenuOpening)
		.def("NotifyModalGameMenuClosing", &ABuzzaxeActionSkill::NotifyModalGameMenuClosing)
		.def("NotifyModalGameMenuOpening", &ABuzzaxeActionSkill::NotifyModalGameMenuOpening)
		.def("eventDisableActionSkillHUD", &ABuzzaxeActionSkill::eventDisableActionSkillHUD)
		.def("eventEnableActionSkillHUD", &ABuzzaxeActionSkill::eventEnableActionSkillHUD)
		.def("MeleeAttack", &ABuzzaxeActionSkill::MeleeAttack)
		.def("ServerMeleeSelf", &ABuzzaxeActionSkill::ServerMeleeSelf)
		.def("ServerMeleeAttack", &ABuzzaxeActionSkill::ServerMeleeAttack)
		.def("OnActionSkillOwnerMelee", &ABuzzaxeActionSkill::OnActionSkillOwnerMelee)
		.def("CanStartMeleeSkill", &ABuzzaxeActionSkill::CanStartMeleeSkill)
		.def("OverridesStandardMelee", &ABuzzaxeActionSkill::OverridesStandardMelee)
		.def("CanEquipWeapon", &ABuzzaxeActionSkill::CanEquipWeapon)
		.def("SetActiveOrBestWeapon", &ABuzzaxeActionSkill::SetActiveOrBestWeapon)
		.def("OnActionSkillEnded", &ABuzzaxeActionSkill::OnActionSkillEnded)
		.def("EndSkill", &ABuzzaxeActionSkill::EndSkill)
		.def("FinishTearOff", &ABuzzaxeActionSkill::FinishTearOff)
		.def("ResetCooldownAndTearOff", &ABuzzaxeActionSkill::ResetCooldownAndTearOff)
		.def("PlayOverrideEndSMD", &ABuzzaxeActionSkill::PlayOverrideEndSMD)
		.def("TearOff", &ABuzzaxeActionSkill::TearOff)
		.def("BuzzaxeEquipFailsafe", &ABuzzaxeActionSkill::BuzzaxeEquipFailsafe)
		.def("WaitingForBuzzaxeEquip", &ABuzzaxeActionSkill::WaitingForBuzzaxeEquip)
		.def("SpawnBuzzaxe", &ABuzzaxeActionSkill::SpawnBuzzaxe)
		.def("IsHoldOverrideSkillRunning", &ABuzzaxeActionSkill::IsHoldOverrideSkillRunning)
		.def("ForceWeaponDown", &ABuzzaxeActionSkill::ForceWeaponDown)
		.def("ClientEquipBuzzaxe", &ABuzzaxeActionSkill::ClientEquipBuzzaxe)
		.def("ClientPlayOverrideSMD", &ABuzzaxeActionSkill::ClientPlayOverrideSMD)
		.def("PlayOverrideSMD", &ABuzzaxeActionSkill::PlayOverrideSMD)
		.def("WeaponIsDown", &ABuzzaxeActionSkill::WeaponIsDown)
		.def("OnActionSkillStarted", &ABuzzaxeActionSkill::OnActionSkillStarted)
		.def("eventReplicatedEvent", &ABuzzaxeActionSkill::eventReplicatedEvent)
		;
	py::class_< UInjuredFeedbackMessage, UWillowLocalMessage >(m, "UInjuredFeedbackMessage")
		.def_readwrite("SecondWind", &UInjuredFeedbackMessage::SecondWind, py::return_value_policy::reference)
		.def("GetString", &UInjuredFeedbackMessage::GetString, py::return_value_policy::reference)
		;
	py::class_< AWillowEmitterServerSide, AWillowReplicatedEmitter >(m, "AWillowEmitterServerSide")
		;
	py::class_< UIRBCollisionListener, UInterface >(m, "UIRBCollisionListener")
		.def("NotifyRigidBodyCollision", &UIRBCollisionListener::NotifyRigidBodyCollision)
		;
	py::class_< AWillowEmit_HitEffect, AWillowReplicatedEmitter >(m, "AWillowEmit_HitEffect")
		.def_readwrite("BoneName", &AWillowEmit_HitEffect::BoneName, py::return_value_policy::reference)
		.def("AttachTo", &AWillowEmit_HitEffect::AttachTo)
		.def("eventReplicatedEvent", &AWillowEmit_HitEffect::eventReplicatedEvent)
		;
	py::class_< UIAttributeEffectBehavior, UInterface >(m, "UIAttributeEffectBehavior")
		;
	py::class_< UIFireShotBehavior, UInterface >(m, "UIFireShotBehavior")
		.def("Behavior_Fire", &UIFireShotBehavior::Behavior_Fire)
		;
	py::class_< UIBehaviorAliasProvider, UInterface >(m, "UIBehaviorAliasProvider")
		.def("BehaviorAlias_GetLookupDefinition", &UIBehaviorAliasProvider::BehaviorAlias_GetLookupDefinition, py::return_value_policy::reference)
		;
	py::class_< AWillowEmit_BloodSpray, AWillowEmit_HitEffect >(m, "AWillowEmit_BloodSpray")
		;
	py::class_< UDeveloperPerksDefinition, UGBXDefinition >(m, "UDeveloperPerksDefinition")
		.def_readwrite("DeveloperInfo", &UDeveloperPerksDefinition::DeveloperInfo, py::return_value_policy::reference)
		.def_readwrite("PerkInfo", &UDeveloperPerksDefinition::PerkInfo, py::return_value_policy::reference)
		.def_readwrite("DeveloperCustomizationUnlocks", &UDeveloperPerksDefinition::DeveloperCustomizationUnlocks, py::return_value_policy::reference)
		.def_readwrite("PatchedPerkInfo", &UDeveloperPerksDefinition::PatchedPerkInfo, py::return_value_policy::reference)
		.def("CheckUnlockGamerpics", &UDeveloperPerksDefinition::CheckUnlockGamerpics)
		.def("IsDeveloper", &UDeveloperPerksDefinition::IsDeveloper)
		.def("IsValidPlatform", &UDeveloperPerksDefinition::IsValidPlatform)
		.def("CheckForButtonChain", &UDeveloperPerksDefinition::CheckForButtonChain)
		.def("PopulatePatchedPerkInfo", &UDeveloperPerksDefinition::PopulatePatchedPerkInfo)
		;
	py::class_< UMissionFeedbackMessage, UWillowLocalMessage >(m, "UMissionFeedbackMessage")
		.def_readwrite("MissionAdded", &UMissionFeedbackMessage::MissionAdded, py::return_value_policy::reference)
		.def_readwrite("MissionCompleted", &UMissionFeedbackMessage::MissionCompleted, py::return_value_policy::reference)
		.def_readwrite("MissionFailed", &UMissionFeedbackMessage::MissionFailed, py::return_value_policy::reference)
		.def_readwrite("MissionRequiredObjectivesComplete", &UMissionFeedbackMessage::MissionRequiredObjectivesComplete, py::return_value_policy::reference)
		.def_readwrite("MissionReadyToTurnIn", &UMissionFeedbackMessage::MissionReadyToTurnIn, py::return_value_policy::reference)
		.def("GetString", &UMissionFeedbackMessage::GetString, py::return_value_policy::reference)
		;
	py::class_< ADualWieldActionSkill, AActionSkill >(m, "ADualWieldActionSkill")
		.def_readwrite("WeaponCache", &ADualWieldActionSkill::WeaponCache, py::return_value_policy::reference)
		.def_readwrite("OffhandWeaponCache", &ADualWieldActionSkill::OffhandWeaponCache, py::return_value_policy::reference)
		.def_readwrite("CrosshairWidget", &ADualWieldActionSkill::CrosshairWidget, py::return_value_policy::reference)
		.def_readwrite("RestoreOffHandWeapon", &ADualWieldActionSkill::RestoreOffHandWeapon, py::return_value_policy::reference)
		.def("eventTickActionSkillHUD", &ADualWieldActionSkill::eventTickActionSkillHUD)
		.def("eventDisableActionSkillHUD", &ADualWieldActionSkill::eventDisableActionSkillHUD)
		.def("SetOffHandCrosshair", &ADualWieldActionSkill::SetOffHandCrosshair)
		.def("eventEnableActionSkillHUD", &ADualWieldActionSkill::eventEnableActionSkillHUD)
		.def("SetDualWieldSwitchEx", &ADualWieldActionSkill::SetDualWieldSwitchEx)
		.def("SetDualWieldSwitch", &ADualWieldActionSkill::SetDualWieldSwitch)
		.def("ClientBringWeaponsUpAfterPutDown", &ADualWieldActionSkill::ClientBringWeaponsUpAfterPutDown)
		.def("BringWeaponsUpAfterPutDown", &ADualWieldActionSkill::BringWeaponsUpAfterPutDown)
		.def("ForceRefreshSkills", &ADualWieldActionSkill::ForceRefreshSkills)
		.def("SwitchToWeapon", &ADualWieldActionSkill::SwitchToWeapon)
		.def("SwitchWeapons", &ADualWieldActionSkill::SwitchWeapons)
		.def("SprintTransition", &ADualWieldActionSkill::SprintTransition)
		.def("EquipInitialWeapons", &ADualWieldActionSkill::EquipInitialWeapons)
		.def("ReturnFirstWeapon", &ADualWieldActionSkill::ReturnFirstWeapon, py::return_value_policy::reference)
		.def("SetLeftSideControl", &ADualWieldActionSkill::SetLeftSideControl)
		.def("OnActionSkillWeaponsRestricted", &ADualWieldActionSkill::OnActionSkillWeaponsRestricted)
		.def("OnActionSkillOwnerWeaponSwitched", &ADualWieldActionSkill::OnActionSkillOwnerWeaponSwitched)
		.def("OnActionSkillEnded", &ADualWieldActionSkill::OnActionSkillEnded)
		.def("OnActionSkillStarted", &ADualWieldActionSkill::OnActionSkillStarted)
		.def("SelectInitialWeapons", [](ADualWieldActionSkill &self ) { class AWillowWeapon** pyMainHandWeapon = 0 ; class AWillowWeapon** pyOffHandWeapon = 0 ;   self.SelectInitialWeapons(pyMainHandWeapon, pyOffHandWeapon); return py::make_tuple(*pyMainHandWeapon, *pyOffHandWeapon); })
		;
	py::class_< UWillowSeqEvent_PlayerJoined, USequenceEvent >(m, "UWillowSeqEvent_PlayerJoined")
		;
	py::class_< UWillowOnlineGameSettings, UOnlineGameSettings >(m, "UWillowOnlineGameSettings")
		.def("GetConnectionQualityUIString", &UWillowOnlineGameSettings::GetConnectionQualityUIString, py::return_value_policy::reference)
		.def("UpdateActivePlotMission", &UWillowOnlineGameSettings::UpdateActivePlotMission)
		.def("GetActivePlotMission", &UWillowOnlineGameSettings::GetActivePlotMission)
		.def("UpdateIsPublic", &UWillowOnlineGameSettings::UpdateIsPublic)
		.def("UpdateExpLevel", &UWillowOnlineGameSettings::UpdateExpLevel)
		.def("GetExpLevel", &UWillowOnlineGameSettings::GetExpLevel)
		.def("UpdateDlcFlag", &UWillowOnlineGameSettings::UpdateDlcFlag)
		.def("UpdateMapDlcContentId", &UWillowOnlineGameSettings::UpdateMapDlcContentId)
		.def("UpdatePlaythrough", &UWillowOnlineGameSettings::UpdatePlaythrough)
		.def("GetPlaythrough", &UWillowOnlineGameSettings::GetPlaythrough)
		.def("UpdateActiveMission", &UWillowOnlineGameSettings::UpdateActiveMission)
		;
	py::class_< UMarketingUnlockInventoryDefinition, UMarketingUnlockDefinition >(m, "UMarketingUnlockInventoryDefinition")
		.def_readwrite("UnlockItems", &UMarketingUnlockInventoryDefinition::UnlockItems, py::return_value_policy::reference)
		.def("GenerateUnlockedItems", &UMarketingUnlockInventoryDefinition::GenerateUnlockedItems)
		;
	py::class_< UWeaponProficiencyFeedbackMessage, ULocalMessage >(m, "UWeaponProficiencyFeedbackMessage")
		.def_readwrite("IsNowLevel", &UWeaponProficiencyFeedbackMessage::IsNowLevel, py::return_value_policy::reference)
		.def("GetMsgType", &UWeaponProficiencyFeedbackMessage::GetMsgType)
		.def("GetString", &UWeaponProficiencyFeedbackMessage::GetString, py::return_value_policy::reference)
		;
	py::class_< ULocalWeaponMessage, UWillowLocalMessage >(m, "ULocalWeaponMessage")
		.def("GetWeaponString", &ULocalWeaponMessage::GetWeaponString, py::return_value_policy::reference)
		.def("GetWeaponColor", &ULocalWeaponMessage::GetWeaponColor, py::return_value_policy::reference)
		.def("ClientWeaponReceive", &ULocalWeaponMessage::ClientWeaponReceive)
		;
	py::class_< UReceivedWeaponMessage, ULocalWeaponMessage >(m, "UReceivedWeaponMessage")
		.def_readwrite("ReceivedWeapon", &UReceivedWeaponMessage::ReceivedWeapon, py::return_value_policy::reference)
		.def_readwrite("SelfReceivedItem", &UReceivedWeaponMessage::SelfReceivedItem, py::return_value_policy::reference)
		.def("GetWeaponString", &UReceivedWeaponMessage::GetWeaponString, py::return_value_policy::reference)
		;
	py::class_< ULocalItemMessage, UWillowLocalMessage >(m, "ULocalItemMessage")
		.def("GetItemString", &ULocalItemMessage::GetItemString, py::return_value_policy::reference)
		.def("GetItemColor", &ULocalItemMessage::GetItemColor, py::return_value_policy::reference)
		.def("ClientItemReceive", &ULocalItemMessage::ClientItemReceive)
		;
	py::class_< UReceivedItemMessage, ULocalItemMessage >(m, "UReceivedItemMessage")
		.def_readwrite("ReceivedItem", &UReceivedItemMessage::ReceivedItem, py::return_value_policy::reference)
		.def_readwrite("SelfReceivedItem", &UReceivedItemMessage::SelfReceivedItem, py::return_value_policy::reference)
		.def("GetItemString", &UReceivedItemMessage::GetItemString, py::return_value_policy::reference)
		;
	py::class_< UReceivedCreditsMessage, UWillowLocalMessage >(m, "UReceivedCreditsMessage")
		.def_readwrite("ReceivedCredits", &UReceivedCreditsMessage::ReceivedCredits, py::return_value_policy::reference)
		.def_readwrite("SelfReceivedCredits", &UReceivedCreditsMessage::SelfReceivedCredits, py::return_value_policy::reference)
		.def_readwrite("NumberOfCredits", &UReceivedCreditsMessage::NumberOfCredits, py::return_value_policy::reference)
		.def_readwrite("OneCredit", &UReceivedCreditsMessage::OneCredit, py::return_value_policy::reference)
		.def_readwrite("MoreCredits", &UReceivedCreditsMessage::MoreCredits, py::return_value_policy::reference)
		.def_readwrite("CreditsFakedRarityLevelForItemColor", &UReceivedCreditsMessage::CreditsFakedRarityLevelForItemColor)
		.def("GetCreditsColor", &UReceivedCreditsMessage::GetCreditsColor, py::return_value_policy::reference)
		.def("GetNumberOfCreditsString", &UReceivedCreditsMessage::GetNumberOfCreditsString, py::return_value_policy::reference)
		.def("GetCreditString", &UReceivedCreditsMessage::GetCreditString, py::return_value_policy::reference)
		.def("ClientCreditReceive", &UReceivedCreditsMessage::ClientCreditReceive)
		;
	py::class_< UExperienceFeedbackMessage, ULocalMessage >(m, "UExperienceFeedbackMessage")
		.def_readwrite("IsNowLevel", &UExperienceFeedbackMessage::IsNowLevel, py::return_value_policy::reference)
		.def("GetMsgType", &UExperienceFeedbackMessage::GetMsgType)
		.def("GetString", &UExperienceFeedbackMessage::GetString, py::return_value_policy::reference)
		;
	py::class_< URotationArrowComponent, UArrowComponent >(m, "URotationArrowComponent")
		;
	py::class_< UPlayerInteractionClient, UObject >(m, "UPlayerInteractionClient")
		.def("eventSendMessage", &UPlayerInteractionClient::eventSendMessage)
		.def("HandleMessage", &UPlayerInteractionClient::HandleMessage)
		.def("ShutDown", &UPlayerInteractionClient::ShutDown)
		.def("Initialize", &UPlayerInteractionClient::Initialize)
		;
	py::class_< UPersonalTeleporterDefinition, UGBXDefinition >(m, "UPersonalTeleporterDefinition")
		.def_readwrite("ParticleEffect", &UPersonalTeleporterDefinition::ParticleEffect, py::return_value_policy::reference)
		.def_readwrite("PlayerTeleportedEffect", &UPersonalTeleporterDefinition::PlayerTeleportedEffect, py::return_value_policy::reference)
		.def_readwrite("PlayerTeleportedEffectLifespan", &UPersonalTeleporterDefinition::PlayerTeleportedEffectLifespan)
		.def_readwrite("SpawnDistance", &UPersonalTeleporterDefinition::SpawnDistance)
		.def_readwrite("ReturnTeleporterLocationOffset", &UPersonalTeleporterDefinition::ReturnTeleporterLocationOffset, py::return_value_policy::reference)
		.def_readwrite("PlaceTeleporterSound", &UPersonalTeleporterDefinition::PlaceTeleporterSound, py::return_value_policy::reference)
		.def_readwrite("EnterTeleporterSound", &UPersonalTeleporterDefinition::EnterTeleporterSound, py::return_value_policy::reference)
		.def_readwrite("AmbientTeleporterSound", &UPersonalTeleporterDefinition::AmbientTeleporterSound, py::return_value_policy::reference)
		.def_readwrite("CollisionRadius", &UPersonalTeleporterDefinition::CollisionRadius)
		.def_readwrite("CollisionHeight", &UPersonalTeleporterDefinition::CollisionHeight)
		.def_readwrite("ExitPointDistance", &UPersonalTeleporterDefinition::ExitPointDistance)
		;
	py::class_< UTeleporterFeedbackMessage, ULocalMessage >(m, "UTeleporterFeedbackMessage")
		.def_readwrite("Teleporter_Disabled", &UTeleporterFeedbackMessage::Teleporter_Disabled, py::return_value_policy::reference)
		.def_readwrite("Teleporter_NoRoom", &UTeleporterFeedbackMessage::Teleporter_NoRoom, py::return_value_policy::reference)
		.def("GetString", &UTeleporterFeedbackMessage::GetString, py::return_value_policy::reference)
		;
	py::class_< UPlayerTrainingMessageListDefinition, UGBXDefinition >(m, "UPlayerTrainingMessageListDefinition")
		.def_readwrite("TrainingMessages", &UPlayerTrainingMessageListDefinition::TrainingMessages, py::return_value_policy::reference)
		;
	py::class_< USeqEvent_TrainingMessage, USequenceEvent >(m, "USeqEvent_TrainingMessage")
		.def_readwrite("TrainingMessageDefinition", &USeqEvent_TrainingMessage::TrainingMessageDefinition, py::return_value_policy::reference)
		;
	py::class_< UFrontendGFxMovie, UWillowGFxMovie3D >(m, "UFrontendGFxMovie")
		.def_property("bSplitJoinInProgress", [](UFrontendGFxMovie &self){return self.bSplitJoinInProgress;}, [](UFrontendGFxMovie &self, bool value){self.bSplitJoinInProgress = value ? 1 : 0;})
		.def_property("bSplitJoinAwaitingNetworkTransition", [](UFrontendGFxMovie &self){return self.bSplitJoinAwaitingNetworkTransition;}, [](UFrontendGFxMovie &self, bool value){self.bSplitJoinAwaitingNetworkTransition = value ? 1 : 0;})
		.def_property("CachedWidescreen", [](UFrontendGFxMovie &self){return self.CachedWidescreen;}, [](UFrontendGFxMovie &self, bool value){self.CachedWidescreen = value ? 1 : 0;})
		.def_property("bMatchmakingInProgress", [](UFrontendGFxMovie &self){return self.bMatchmakingInProgress;}, [](UFrontendGFxMovie &self, bool value){self.bMatchmakingInProgress = value ? 1 : 0;})
		.def_readwrite("MyFrontendDefinition", &UFrontendGFxMovie::MyFrontendDefinition, py::return_value_policy::reference)
		.def_readwrite("FrontendMenu", &UFrontendGFxMovie::FrontendMenu, py::return_value_policy::reference)
		.def_readwrite("TheList", &UFrontendGFxMovie::TheList, py::return_value_policy::reference)
		.def_readwrite("PlayerList", &UFrontendGFxMovie::PlayerList, py::return_value_policy::reference)
		.def_readwrite("OptionsMovie", &UFrontendGFxMovie::OptionsMovie, py::return_value_policy::reference)
		.def_readwrite("MatchmakingMovie", &UFrontendGFxMovie::MatchmakingMovie, py::return_value_policy::reference)
		.def_readwrite("ServerBrowserMovie", &UFrontendGFxMovie::ServerBrowserMovie, py::return_value_policy::reference)
		.def_readwrite("AccountMovie", &UFrontendGFxMovie::AccountMovie, py::return_value_policy::reference)
		.def_readwrite("MarketplaceMovie", &UFrontendGFxMovie::MarketplaceMovie, py::return_value_policy::reference)
		.def_readwrite("MatchmakingDialog", &UFrontendGFxMovie::MatchmakingDialog, py::return_value_policy::reference)
		.def_readwrite("NetworkOptionsMovie", &UFrontendGFxMovie::NetworkOptionsMovie, py::return_value_policy::reference)
		.def_readwrite("DlcWarningPlaythroughLevel", &UFrontendGFxMovie::DlcWarningPlaythroughLevel)
		.def_readwrite("TimerPauseTicker", &UFrontendGFxMovie::TimerPauseTicker, py::return_value_policy::reference)
		.def_readwrite("FriendsList", &UFrontendGFxMovie::FriendsList, py::return_value_policy::reference)
		.def_readwrite("SSHelper", &UFrontendGFxMovie::SSHelper, py::return_value_policy::reference)
		.def_readwrite("ConnectingDlg", &UFrontendGFxMovie::ConnectingDlg, py::return_value_policy::reference)
		.def_readwrite("ConfirmDisconnectDlg", &UFrontendGFxMovie::ConfirmDisconnectDlg, py::return_value_policy::reference)
		.def_readwrite("ConfirmReturnToTitleDlg", &UFrontendGFxMovie::ConfirmReturnToTitleDlg, py::return_value_policy::reference)
		.def_readwrite("SaveGameDlg", &UFrontendGFxMovie::SaveGameDlg, py::return_value_policy::reference)
		.def_readwrite("SaveGameStartTime", &UFrontendGFxMovie::SaveGameStartTime)
		.def_readwrite("CancelTooltip", &UFrontendGFxMovie::CancelTooltip, py::return_value_policy::reference)
		.def_readwrite("CancelTooltip_TwoPlayer", &UFrontendGFxMovie::CancelTooltip_TwoPlayer, py::return_value_policy::reference)
		.def_readwrite("SelectTooltip", &UFrontendGFxMovie::SelectTooltip, py::return_value_policy::reference)
		.def_readwrite("NetworkOptionsTooltip", &UFrontendGFxMovie::NetworkOptionsTooltip, py::return_value_policy::reference)
		.def_readwrite("LANServerBrowserTooltip", &UFrontendGFxMovie::LANServerBrowserTooltip, py::return_value_policy::reference)
		.def_readwrite("CharacterSelectTooltip", &UFrontendGFxMovie::CharacterSelectTooltip, py::return_value_policy::reference)
		.def_readwrite("PartyInviteTooltip", &UFrontendGFxMovie::PartyInviteTooltip, py::return_value_policy::reference)
		.def_readwrite("PartyUITooltip", &UFrontendGFxMovie::PartyUITooltip, py::return_value_policy::reference)
		.def_readwrite("PS3InviteTooltip", &UFrontendGFxMovie::PS3InviteTooltip, py::return_value_policy::reference)
		.def_readwrite("OptionsTooltip", &UFrontendGFxMovie::OptionsTooltip, py::return_value_policy::reference)
		.def_readwrite("SpectatorTooltip", &UFrontendGFxMovie::SpectatorTooltip, py::return_value_policy::reference)
		.def_readwrite("DisconnectString", &UFrontendGFxMovie::DisconnectString, py::return_value_policy::reference)
		.def_readwrite("LeaveString", &UFrontendGFxMovie::LeaveString, py::return_value_policy::reference)
		.def_readwrite("CancelString", &UFrontendGFxMovie::CancelString, py::return_value_policy::reference)
		.def_readwrite("DlcInstallOnTitleScreenReturnString", &UFrontendGFxMovie::DlcInstallOnTitleScreenReturnString, py::return_value_policy::reference)
		.def_readwrite("TooltipSpacing", &UFrontendGFxMovie::TooltipSpacing, py::return_value_policy::reference)
		.def_readwrite("SavedSplitJoinControllerId", &UFrontendGFxMovie::SavedSplitJoinControllerId)
		.def_readwrite("MatchmakingResult", &UFrontendGFxMovie::MatchmakingResult, py::return_value_policy::reference)
		.def_readwrite("RestoreInviteType", &UFrontendGFxMovie::RestoreInviteType)
		.def_readwrite("SavedDlcEnumNetworkOptionsButtonClickIndex", &UFrontendGFxMovie::SavedDlcEnumNetworkOptionsButtonClickIndex)
		.def_readwrite("MessagesOfTheDay", &UFrontendGFxMovie::MessagesOfTheDay, py::return_value_policy::reference)
		.def_readwrite("MessageOfTheDayIdx", &UFrontendGFxMovie::MessageOfTheDayIdx)
		.def_readwrite("RegisteredControllerId", &UFrontendGFxMovie::RegisteredControllerId)
		.def_readwrite("CurrentSelectedOverpowerLevel", &UFrontendGFxMovie::CurrentSelectedOverpowerLevel)
		.def_readwrite("CurrentSelectedDifficulty", &UFrontendGFxMovie::CurrentSelectedDifficulty)
		.def_readwrite("__PrePopupInputHandler__Delegate", &UFrontendGFxMovie::__PrePopupInputHandler__Delegate, py::return_value_policy::reference)
		.def("StartMenuMusic", &UFrontendGFxMovie::StartMenuMusic)
		.def("ShowLanBrowser", &UFrontendGFxMovie::ShowLanBrowser)
		.def("IsOverlayMenuOpen", &UFrontendGFxMovie::IsOverlayMenuOpen)
		.def("HideOptionsMovie", &UFrontendGFxMovie::HideOptionsMovie)
		.def("HideMatchmakingDialog", &UFrontendGFxMovie::HideMatchmakingDialog)
		.def("HideMarketplaceMovie", &UFrontendGFxMovie::HideMarketplaceMovie)
		.def("ShowCompatibilityPack", &UFrontendGFxMovie::ShowCompatibilityPack)
		.def("HideAccountMovie", &UFrontendGFxMovie::HideAccountMovie)
		.def("ShowAccountMovie", &UFrontendGFxMovie::ShowAccountMovie)
		.def("ShowServerBrowser", &UFrontendGFxMovie::ShowServerBrowser)
		.def("HideServerBrowser", &UFrontendGFxMovie::HideServerBrowser)
		.def("Refresh", &UFrontendGFxMovie::Refresh)
		.def("OpenGearboxAccountUI", &UFrontendGFxMovie::OpenGearboxAccountUI)
		.def("HasUnnotifiedOffers", &UFrontendGFxMovie::HasUnnotifiedOffers)
		.def("HasMessageOfTheDay", &UFrontendGFxMovie::HasMessageOfTheDay)
		.def("RefreshOffers", &UFrontendGFxMovie::RefreshOffers)
		.def("RefreshDLC", &UFrontendGFxMovie::RefreshDLC)
		.def("ApplyPriorityVisibilityEffect", &UFrontendGFxMovie::ApplyPriorityVisibilityEffect)
		.def("ApplyPriorityBlurEffect", &UFrontendGFxMovie::ApplyPriorityBlurEffect)
		.def("ShowOptions", &UFrontendGFxMovie::ShowOptions)
		.def("OnControllerChanged", &UFrontendGFxMovie::OnControllerChanged)
		.def("OnPartyMemberListChanged", &UFrontendGFxMovie::OnPartyMemberListChanged)
		.def("OnClickShowMarketplace", &UFrontendGFxMovie::OnClickShowMarketplace)
		.def("OnClickNotLoggedInForPSN", &UFrontendGFxMovie::OnClickNotLoggedInForPSN)
		.def("CheckDownloadableContentListCompleted", &UFrontendGFxMovie::CheckDownloadableContentListCompleted)
		.def("ShowMarketplaceMovie", &UFrontendGFxMovie::ShowMarketplaceMovie)
		.def("OnHostUpdateComplete", &UFrontendGFxMovie::OnHostUpdateComplete)
		.def("HostOnlineGame", &UFrontendGFxMovie::HostOnlineGame)
		.def("HideMatchmakingMovie", &UFrontendGFxMovie::HideMatchmakingMovie)
		.def("CancelMatchmaking", &UFrontendGFxMovie::CancelMatchmaking)
		.def("UserCancelledMatchmaking", &UFrontendGFxMovie::UserCancelledMatchmaking)
		.def("UpdateMatchmakingMovie", &UFrontendGFxMovie::UpdateMatchmakingMovie)
		.def("ShowMatchmakingMovie", &UFrontendGFxMovie::ShowMatchmakingMovie)
		.def("OnMatchmakingStateChanged", &UFrontendGFxMovie::OnMatchmakingStateChanged)
		.def("OnDestroyGameForMatchJoinComplete", &UFrontendGFxMovie::OnDestroyGameForMatchJoinComplete)
		.def("JoinMatchmakingSession", &UFrontendGFxMovie::JoinMatchmakingSession)
		.def("NextMatchmakingSearch", &UFrontendGFxMovie::NextMatchmakingSearch)
		.def("OnFindMatchmakingGamesComplete", &UFrontendGFxMovie::OnFindMatchmakingGamesComplete)
		.def("GetNumMatchmakingPlayers", &UFrontendGFxMovie::GetNumMatchmakingPlayers)
		.def("DoMatchmakingSearch", &UFrontendGFxMovie::DoMatchmakingSearch)
		.def("OnUpdateForMatchmakingComplete", &UFrontendGFxMovie::OnUpdateForMatchmakingComplete)
		.def("StartMatchmaking", &UFrontendGFxMovie::StartMatchmaking)
		.def("OnCanStartMatchmaking_Clicked", &UFrontendGFxMovie::OnCanStartMatchmaking_Clicked)
		.def("CanStartMatchmaking", &UFrontendGFxMovie::CanStartMatchmaking)
		.def("GetMatchmakingState", &UFrontendGFxMovie::GetMatchmakingState)
		.def("SetMatchmakingState", &UFrontendGFxMovie::SetMatchmakingState)
		.def("NotifyLoginStatusChange", &UFrontendGFxMovie::NotifyLoginStatusChange)
		.def("NotifyLinkLost", &UFrontendGFxMovie::NotifyLinkLost)
		.def("ConfirmQuit_Clicked", &UFrontendGFxMovie::ConfirmQuit_Clicked)
		.def("DisplayConfirmQuitDialog", &UFrontendGFxMovie::DisplayConfirmQuitDialog)
		.def("OpenCredits", &UFrontendGFxMovie::OpenCredits)
		.def("OpenMovieLink", &UFrontendGFxMovie::OpenMovieLink, py::return_value_policy::reference)
		.def("PlayMovieLink", &UFrontendGFxMovie::PlayMovieLink, py::return_value_policy::reference)
		.def("BuildOverpowerPromptString", &UFrontendGFxMovie::BuildOverpowerPromptString, py::return_value_policy::reference)
		.def("OverpowerLevelInputKey", &UFrontendGFxMovie::OverpowerLevelInputKey)
		.def("OnSelectOverpowerLevel_Click", &UFrontendGFxMovie::OnSelectOverpowerLevel_Click)
		.def("ConfirmOverpowerLevel", &UFrontendGFxMovie::ConfirmOverpowerLevel)
		.def("OnChooseDifficulty_Click", &UFrontendGFxMovie::OnChooseDifficulty_Click)
		.def("ConfirmPlaythrough", &UFrontendGFxMovie::ConfirmPlaythrough)
		.def("LaunchSaveGameEx", &UFrontendGFxMovie::LaunchSaveGameEx)
		.def("LaunchSaveGame", &UFrontendGFxMovie::LaunchSaveGame)
		.def("GetSaveGameTravelStationDefinition", &UFrontendGFxMovie::GetSaveGameTravelStationDefinition, py::return_value_policy::reference)
		.def("NotAllClientsCanAccessDlc_Clicked", &UFrontendGFxMovie::NotAllClientsCanAccessDlc_Clicked)
		.def("DisplayLastStationUninstalledDlc_Clicked", &UFrontendGFxMovie::DisplayLastStationUninstalledDlc_Clicked)
		.def("DisplayDlcLevelCapInUninstalledDlc_Clicked", &UFrontendGFxMovie::DisplayDlcLevelCapInUninstalledDlc_Clicked)
		.def("ConditionalLookForCrossTitleSaveGames", &UFrontendGFxMovie::ConditionalLookForCrossTitleSaveGames)
		.def("LaunchNewGame", &UFrontendGFxMovie::LaunchNewGame)
		.def("OnJoinMatchComplete", &UFrontendGFxMovie::OnJoinMatchComplete)
		.def("HandleNetworkOptionsButtonClickEx", &UFrontendGFxMovie::HandleNetworkOptionsButtonClickEx)
		.def("DlcNetworkOptionsRefreshComplete", &UFrontendGFxMovie::DlcNetworkOptionsRefreshComplete)
		.def("DlcRefreshCompleteFromBusy", &UFrontendGFxMovie::DlcRefreshCompleteFromBusy)
		.def("HandleNetworkOptionsButtonClick", &UFrontendGFxMovie::HandleNetworkOptionsButtonClick)
		.def("OnNetworkOptionsLoaded", &UFrontendGFxMovie::OnNetworkOptionsLoaded)
		.def("LanNetworkOptionsAvailable", &UFrontendGFxMovie::LanNetworkOptionsAvailable)
		.def("OnlineNetworkOptionsAvailable", &UFrontendGFxMovie::OnlineNetworkOptionsAvailable)
		.def("HideNetworkOptions", &UFrontendGFxMovie::HideNetworkOptions)
		.def("ShowNetworkOptions", &UFrontendGFxMovie::ShowNetworkOptions)
		.def("ShowNetworkOptionsFromList", &UFrontendGFxMovie::ShowNetworkOptionsFromList)
		.def("HandleSplitscreenJoinFail", &UFrontendGFxMovie::HandleSplitscreenJoinFail)
		.def("HandleSplitscreenJoinSuccess", &UFrontendGFxMovie::HandleSplitscreenJoinSuccess)
		.def("OnSaveGameLoaded", &UFrontendGFxMovie::OnSaveGameLoaded)
		.def("FinishSavingCache", &UFrontendGFxMovie::FinishSavingCache)
		.def("OnSaveCachedGameComplete", &UFrontendGFxMovie::OnSaveCachedGameComplete)
		.def("OnChoosePlaythrough_Click", &UFrontendGFxMovie::OnChoosePlaythrough_Click)
		.def("OnResetPlaythroughClicked", &UFrontendGFxMovie::OnResetPlaythroughClicked)
		.def("DifficultyDialogInputKey", &UFrontendGFxMovie::DifficultyDialogInputKey)
		.def("ConditionalAddPlaythroughResetToDialogTooltip", &UFrontendGFxMovie::ConditionalAddPlaythroughResetToDialogTooltip)
		.def("CharacterLoadComplete", &UFrontendGFxMovie::CharacterLoadComplete)
		.def("OpenCharacterSelect", &UFrontendGFxMovie::OpenCharacterSelect)
		.def("OpenCharacterSelectFromList", &UFrontendGFxMovie::OpenCharacterSelectFromList)
		.def("SplitJoinNetworkTransitionFailed", &UFrontendGFxMovie::SplitJoinNetworkTransitionFailed)
		.def("AddSplitPlayerAfterNetworkTransition", &UFrontendGFxMovie::AddSplitPlayerAfterNetworkTransition)
		.def("OnConfirmSwitchSession", &UFrontendGFxMovie::OnConfirmSwitchSession)
		.def("ShowSplitJoinSessionChangeConfirmation", &UFrontendGFxMovie::ShowSplitJoinSessionChangeConfirmation)
		.def("ShowSplitJoinFailureMessage", &UFrontendGFxMovie::ShowSplitJoinFailureMessage)
		.def("ClearSplitscreenLoginDelegates", &UFrontendGFxMovie::ClearSplitscreenLoginDelegates)
		.def("OnSplitLoginCancelled", &UFrontendGFxMovie::OnSplitLoginCancelled)
		.def("ConfirmSplitLoginSucceeded", &UFrontendGFxMovie::ConfirmSplitLoginSucceeded)
		.def("OnSplitLoginChanged", &UFrontendGFxMovie::OnSplitLoginChanged)
		.def("SplitJoinFailed", &UFrontendGFxMovie::SplitJoinFailed)
		.def("OnExternalUIChanged", &UFrontendGFxMovie::OnExternalUIChanged)
		.def("ShowSplitLoginUI", &UFrontendGFxMovie::ShowSplitLoginUI)
		.def("OnSplitLeaveClicked", &UFrontendGFxMovie::OnSplitLeaveClicked)
		.def("ShowConfirmSplitLeaveDialog", &UFrontendGFxMovie::ShowConfirmSplitLeaveDialog)
		.def("HandleSplitscreenLeaveAttempt", &UFrontendGFxMovie::HandleSplitscreenLeaveAttempt)
		.def("IsProfileValidForCurrentGame", &UFrontendGFxMovie::IsProfileValidForCurrentGame)
		.def("HandleSplitscreenJoinAttempt", &UFrontendGFxMovie::HandleSplitscreenJoinAttempt)
		.def("AddSplitscreenPlayer", &UFrontendGFxMovie::AddSplitscreenPlayer)
		.def("GetSplitscreenHelper", &UFrontendGFxMovie::GetSplitscreenHelper, py::return_value_policy::reference)
		.def("GetPlayerDetailsMovieDef", &UFrontendGFxMovie::GetPlayerDetailsMovieDef, py::return_value_policy::reference)
		.def("IsPlayerOwner", &UFrontendGFxMovie::IsPlayerOwner)
		.def("CanKick", &UFrontendGFxMovie::CanKick)
		.def("CanUnmute", &UFrontendGFxMovie::CanUnmute)
		.def("CanMute", &UFrontendGFxMovie::CanMute)
		.def("CanViewGamercard", &UFrontendGFxMovie::CanViewGamercard)
		.def("CanInvite", &UFrontendGFxMovie::CanInvite)
		.def("CanJoin", &UFrontendGFxMovie::CanJoin)
		.def("GetFriend", &UFrontendGFxMovie::GetFriend)
		.def("GetWPCOwner", &UFrontendGFxMovie::GetWPCOwner, py::return_value_policy::reference)
		.def("CanPlayOnline", &UFrontendGFxMovie::CanPlayOnline)
		.def("IsLocalPlayerId", &UFrontendGFxMovie::IsLocalPlayerId)
		.def("IsPrimaryPlayer", &UFrontendGFxMovie::IsPrimaryPlayer)
		.def("OnReadFriendsComplete", &UFrontendGFxMovie::OnReadFriendsComplete)
		.def("RefreshFriends", &UFrontendGFxMovie::RefreshFriends)
		.def("ConfigureFriendsList", &UFrontendGFxMovie::ConfigureFriendsList)
		.def("OnPlayerCharacterClassUpdated", &UFrontendGFxMovie::OnPlayerCharacterClassUpdated)
		.def("OnPlayerExpLevelUpdated", &UFrontendGFxMovie::OnPlayerExpLevelUpdated)
		.def("OnPlayerUidUpdated", &UFrontendGFxMovie::OnPlayerUidUpdated)
		.def("OnPlayerNameUpdated", &UFrontendGFxMovie::OnPlayerNameUpdated)
		.def("OnPlayerRemoved", &UFrontendGFxMovie::OnPlayerRemoved)
		.def("RefreshPlayerList", &UFrontendGFxMovie::RefreshPlayerList)
		.def("WaitForPRI", &UFrontendGFxMovie::WaitForPRI)
		.def("extOnPlayerListSelectionChange", &UFrontendGFxMovie::extOnPlayerListSelectionChange)
		.def("extOnPlayerListButtonClick", &UFrontendGFxMovie::extOnPlayerListButtonClick)
		.def("extOnPlayerListLoad", &UFrontendGFxMovie::extOnPlayerListLoad)
		.def("extFrontEndMenuOnLoad", &UFrontendGFxMovie::extFrontEndMenuOnLoad)
		.def("OnScrollingListItemFocus", &UFrontendGFxMovie::OnScrollingListItemFocus)
		.def("GetPlayer1CancelButtonString", &UFrontendGFxMovie::GetPlayer1CancelButtonString)
		.def("AppendCancelButtonTooltip", &UFrontendGFxMovie::AppendCancelButtonTooltip)
		.def("DelayedHideMOTD", &UFrontendGFxMovie::DelayedHideMOTD)
		.def("DelayedResetMOTD", &UFrontendGFxMovie::DelayedResetMOTD)
		.def("ResetMOTD", &UFrontendGFxMovie::ResetMOTD)
		.def("GetCharacterSelectTooltip", &UFrontendGFxMovie::GetCharacterSelectTooltip, py::return_value_policy::reference)
		.def("GetGenericTooltip", &UFrontendGFxMovie::GetGenericTooltip, py::return_value_policy::reference)
		.def("UpdateTooltips", &UFrontendGFxMovie::UpdateTooltips)
		.def("AddDisabledStringMarkup", &UFrontendGFxMovie::AddDisabledStringMarkup, py::return_value_policy::reference)
		.def("AppendTooltipString", &UFrontendGFxMovie::AppendTooltipString)
		.def("UpdateHeader", &UFrontendGFxMovie::UpdateHeader)
		.def("OnDeviceCheckSaveGamesAvailableComplete", &UFrontendGFxMovie::OnDeviceCheckSaveGamesAvailableComplete)
		.def("OnDeviceSelectionDone", &UFrontendGFxMovie::OnDeviceSelectionDone)
		.def("OnStorageDeviceChange", &UFrontendGFxMovie::OnStorageDeviceChange)
		.def("OnConfirmReturnToTitle", &UFrontendGFxMovie::OnConfirmReturnToTitle)
		.def("ShowConfirmReturnToTitleDialog", &UFrontendGFxMovie::ShowConfirmReturnToTitleDialog)
		.def("OnConfirmDisconnect", &UFrontendGFxMovie::OnConfirmDisconnect)
		.def("ShowConfirmDisconnectDialog", &UFrontendGFxMovie::ShowConfirmDisconnectDialog)
		.def("PlayerListInputKey", &UFrontendGFxMovie::PlayerListInputKey)
		.def("DefaultHandleInputKey", &UFrontendGFxMovie::DefaultHandleInputKey)
		.def("PreviewInputKey", &UFrontendGFxMovie::PreviewInputKey)
		.def("CanShowSpectatorControls", &UFrontendGFxMovie::CanShowSpectatorControls)
		.def("CanShowCharacterSelect", &UFrontendGFxMovie::CanShowCharacterSelect)
		.def("HandlePopListFail", &UFrontendGFxMovie::HandlePopListFail)
		.def("SharedHandleInputKey", &UFrontendGFxMovie::SharedHandleInputKey)
		.def("RefreshListHandler", &UFrontendGFxMovie::RefreshListHandler)
		.def("OnScrollingListChanged", &UFrontendGFxMovie::OnScrollingListChanged)
		.def("UpdateFrameForAspectRatio", &UFrontendGFxMovie::UpdateFrameForAspectRatio)
		.def("IsTimerActive", &UFrontendGFxMovie::IsTimerActive)
		.def("ClearTimer", &UFrontendGFxMovie::ClearTimer)
		.def("SetTimer", &UFrontendGFxMovie::SetTimer)
		.def("eventOnTick", &UFrontendGFxMovie::eventOnTick)
		.def("ClearOSSDelegates", &UFrontendGFxMovie::ClearOSSDelegates)
		.def("RegisterOSSDelegates", &UFrontendGFxMovie::RegisterOSSDelegates)
		.def("ClearGRIDelegates", &UFrontendGFxMovie::ClearGRIDelegates)
		.def("RegisterGRIDelegates", &UFrontendGFxMovie::RegisterGRIDelegates)
		.def("eventOnClose", &UFrontendGFxMovie::eventOnClose)
		.def("HideMOTD", &UFrontendGFxMovie::HideMOTD)
		.def("ShowMOTD", &UFrontendGFxMovie::ShowMOTD)
		.def("IsValidMessageOfTheDay", &UFrontendGFxMovie::IsValidMessageOfTheDay)
		.def("GetMessageOfTheDay", &UFrontendGFxMovie::GetMessageOfTheDay, py::return_value_policy::reference)
		.def("GetMessagesOfTheDay", &UFrontendGFxMovie::GetMessagesOfTheDay, py::return_value_policy::reference)
		.def("ShouldDoInitialDeviceSelection", &UFrontendGFxMovie::ShouldDoInitialDeviceSelection)
		.def("NotifyAtMainMenu", &UFrontendGFxMovie::NotifyAtMainMenu)
		.def("OnProfileWriteComplete", &UFrontendGFxMovie::OnProfileWriteComplete)
		.def("eventStart", &UFrontendGFxMovie::eventStart)
		.def("PrePopupInputHandler", &UFrontendGFxMovie::PrePopupInputHandler)
		;
	py::class_< UFrontendGFxMovieDefinition, UWillowGFxMovie3DDefinition >(m, "UFrontendGFxMovieDefinition")
		.def_readwrite("OnStart", &UFrontendGFxMovieDefinition::OnStart, py::return_value_policy::reference)
		.def_readwrite("WalkableMapList", &UFrontendGFxMovieDefinition::WalkableMapList, py::return_value_policy::reference)
		.def_readwrite("BlockoutMapList", &UFrontendGFxMovieDefinition::BlockoutMapList, py::return_value_policy::reference)
		.def_readwrite("TestMapList", &UFrontendGFxMovieDefinition::TestMapList, py::return_value_policy::reference)
		.def_readwrite("ListPath", &UFrontendGFxMovieDefinition::ListPath, py::return_value_policy::reference)
		.def_readwrite("HeaderPath", &UFrontendGFxMovieDefinition::HeaderPath, py::return_value_policy::reference)
		.def_readwrite("InviteDisplayTime", &UFrontendGFxMovieDefinition::InviteDisplayTime)
		.def_readwrite("MOTD_HeaderPath", &UFrontendGFxMovieDefinition::MOTD_HeaderPath, py::return_value_policy::reference)
		.def_readwrite("MOTD_BodyPath", &UFrontendGFxMovieDefinition::MOTD_BodyPath, py::return_value_policy::reference)
		.def_readwrite("MOTD_Delay", &UFrontendGFxMovieDefinition::MOTD_Delay)
		.def_readwrite("TooltipPath", &UFrontendGFxMovieDefinition::TooltipPath, py::return_value_policy::reference)
		.def_readwrite("Header_TopLevel", &UFrontendGFxMovieDefinition::Header_TopLevel, py::return_value_policy::reference)
		.def_readwrite("NetworkOptionsMovieDef", &UFrontendGFxMovieDefinition::NetworkOptionsMovieDef, py::return_value_policy::reference)
		.def_readwrite("PlayerDetailsMovieDef", &UFrontendGFxMovieDefinition::PlayerDetailsMovieDef, py::return_value_policy::reference)
		.def_readwrite("OptionsMovieDef", &UFrontendGFxMovieDefinition::OptionsMovieDef, py::return_value_policy::reference)
		.def_readwrite("MatchmakingMovieDef", &UFrontendGFxMovieDefinition::MatchmakingMovieDef, py::return_value_policy::reference)
		.def_readwrite("ConfirmCharacterMovieDef", &UFrontendGFxMovieDefinition::ConfirmCharacterMovieDef, py::return_value_policy::reference)
		.def_readwrite("InitialScrollingListProviderClass", &UFrontendGFxMovieDefinition::InitialScrollingListProviderClass, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_PlayCameraAnim, USequenceAction >(m, "UWillowSeqAct_PlayCameraAnim")
		.def_readwrite("AnimToPlay", &UWillowSeqAct_PlayCameraAnim::AnimToPlay, py::return_value_policy::reference)
		.def_readwrite("BlendInTime", &UWillowSeqAct_PlayCameraAnim::BlendInTime)
		.def_readwrite("BlendOutTime", &UWillowSeqAct_PlayCameraAnim::BlendOutTime)
		.def_readwrite("Rate", &UWillowSeqAct_PlayCameraAnim::Rate)
		.def_readwrite("IntensityScale", &UWillowSeqAct_PlayCameraAnim::IntensityScale)
		;
	py::class_< UWillowSeqAct_StopCameraAnim, USequenceAction >(m, "UWillowSeqAct_StopCameraAnim")
		.def_property("bStopImmediately", [](UWillowSeqAct_StopCameraAnim &self){return self.bStopImmediately;}, [](UWillowSeqAct_StopCameraAnim &self, bool value){self.bStopImmediately = value ? 1 : 0;})
		;
	py::class_< USeqAct_UnlockAchievement, USequenceAction >(m, "USeqAct_UnlockAchievement")
		.def_readwrite("AchievementId", &USeqAct_UnlockAchievement::AchievementId)
		.def_readwrite("MinimumPlayersRequired", &USeqAct_UnlockAchievement::MinimumPlayersRequired)
		.def("eventActivated", &USeqAct_UnlockAchievement::eventActivated)
		;
	py::class_< UWillowSeqEvent_ShowCharacterSelectUI, USequenceEvent >(m, "UWillowSeqEvent_ShowCharacterSelectUI")
		;
	py::class_< UFastTravelStationDiscoveryMessage, ULocalMessage >(m, "UFastTravelStationDiscoveryMessage")
		.def_readwrite("StationDiscoveredSolo", &UFastTravelStationDiscoveryMessage::StationDiscoveredSolo, py::return_value_policy::reference)
		.def_readwrite("StationDiscoveredTeam", &UFastTravelStationDiscoveryMessage::StationDiscoveredTeam, py::return_value_policy::reference)
		.def("GetString", &UFastTravelStationDiscoveryMessage::GetString, py::return_value_policy::reference)
		;
	py::class_< UIStorageDevice, UInterface >(m, "UIStorageDevice")
		.def("StorageDeviceChanged", &UIStorageDevice::StorageDeviceChanged)
		;
	py::class_< UWillowSeqAct_MarkEnteredRegion, USequenceAction >(m, "UWillowSeqAct_MarkEnteredRegion")
		.def_readwrite("Region", &UWillowSeqAct_MarkEnteredRegion::Region)
		;
	py::class_< UWillowSeqAct_MarkExitedRegion, USequenceAction >(m, "UWillowSeqAct_MarkExitedRegion")
		.def_readwrite("Region", &UWillowSeqAct_MarkExitedRegion::Region)
		;
	py::class_< UWillowSeqAct_ColiseumAnnouncePenaltyBox, USequenceAction >(m, "UWillowSeqAct_ColiseumAnnouncePenaltyBox")
		;
	py::class_< UVehicleSeatSwap_PlayerInteractionClient, UPlayerInteractionClient >(m, "UVehicleSeatSwap_PlayerInteractionClient")
		.def_property("bIsInstigator", [](UVehicleSeatSwap_PlayerInteractionClient &self){return self.bIsInstigator;}, [](UVehicleSeatSwap_PlayerInteractionClient &self, bool value){self.bIsInstigator = value ? 1 : 0;})
		.def_readwrite("MsgTitle", &UVehicleSeatSwap_PlayerInteractionClient::MsgTitle, py::return_value_policy::reference)
		.def("ShutDown", &UVehicleSeatSwap_PlayerInteractionClient::ShutDown)
		.def("HandleSeatSwapCommand", &UVehicleSeatSwap_PlayerInteractionClient::HandleSeatSwapCommand)
		.def("Initialize", &UVehicleSeatSwap_PlayerInteractionClient::Initialize)
		;
	py::class_< ULobbyGFxMovie, UFrontendGFxMovie >(m, "ULobbyGFxMovie")
		.def_readwrite("PrimaryPlayerPRI", &ULobbyGFxMovie::PrimaryPlayerPRI, py::return_value_policy::reference)
		.def_readwrite("SplitPlayerPRI", &ULobbyGFxMovie::SplitPlayerPRI, py::return_value_policy::reference)
		.def("FadeLobbyDeco", &ULobbyGFxMovie::FadeLobbyDeco)
		.def("ShowConfirmQuitDialog", &ULobbyGFxMovie::ShowConfirmQuitDialog)
		.def("OnQuitConfirmed", &ULobbyGFxMovie::OnQuitConfirmed)
		.def("CanShowSpectatorControls", &ULobbyGFxMovie::CanShowSpectatorControls)
		.def("extFrontEndMenuOnLoad", &ULobbyGFxMovie::extFrontEndMenuOnLoad)
		.def("OnConfirmCharacters", &ULobbyGFxMovie::OnConfirmCharacters)
		.def("PromptConfirmCharacters", &ULobbyGFxMovie::PromptConfirmCharacters)
		.def("eventOnClose", &ULobbyGFxMovie::eventOnClose)
		.def("CheckSpectatorPoint", &ULobbyGFxMovie::CheckSpectatorPoint)
		.def("eventStart", &ULobbyGFxMovie::eventStart)
		;
	py::class_< UOptionsGFxMovie, UWillowGFxMovie3D >(m, "UOptionsGFxMovie")
		.def_property("CachedWidescreen", [](UOptionsGFxMovie &self){return self.CachedWidescreen;}, [](UOptionsGFxMovie &self, bool value){self.CachedWidescreen = value ? 1 : 0;})
		.def_property("bTrainingWasEnabled", [](UOptionsGFxMovie &self){return self.bTrainingWasEnabled;}, [](UOptionsGFxMovie &self, bool value){self.bTrainingWasEnabled = value ? 1 : 0;})
		.def_readwrite("OptionsObj", &UOptionsGFxMovie::OptionsObj, py::return_value_policy::reference)
		.def_readwrite("TheList", &UOptionsGFxMovie::TheList, py::return_value_policy::reference)
		.def_readwrite("TooltipSpacing", &UOptionsGFxMovie::TooltipSpacing, py::return_value_policy::reference)
		.def_readwrite("PreviousMenuHeader", &UOptionsGFxMovie::PreviousMenuHeader, py::return_value_policy::reference)
		.def_readwrite("SystemSettings", &UOptionsGFxMovie::SystemSettings, py::return_value_policy::reference)
		.def_readwrite("HandleInputKeyHook", &UOptionsGFxMovie::HandleInputKeyHook, py::return_value_policy::reference)
		.def_readwrite("BackTooltip", &UOptionsGFxMovie::BackTooltip, py::return_value_policy::reference)
		.def("extOptionsMenuOnLoad", &UOptionsGFxMovie::extOptionsMenuOnLoad)
		.def("GetSystemSettings", &UOptionsGFxMovie::GetSystemSettings, py::return_value_policy::reference)
		.def("OnScrollingListItemFocus", &UOptionsGFxMovie::OnScrollingListItemFocus)
		.def("UpdateTooltips", &UOptionsGFxMovie::UpdateTooltips)
		.def("AppendTooltipString", &UOptionsGFxMovie::AppendTooltipString)
		.def("UpdateHeader", &UOptionsGFxMovie::UpdateHeader)
		.def("CloseMovie", &UOptionsGFxMovie::CloseMovie)
		.def("HandleInputKey", &UOptionsGFxMovie::HandleInputKey)
		.def("RefreshListHandler", &UOptionsGFxMovie::RefreshListHandler)
		.def("OnScollingListSelectedIndexChanged", &UOptionsGFxMovie::OnScollingListSelectedIndexChanged)
		.def("OnScrollingListChanged", &UOptionsGFxMovie::OnScrollingListChanged)
		.def("UpdateFrameForAspectRatio", &UOptionsGFxMovie::UpdateFrameForAspectRatio)
		.def("eventOnTick", &UOptionsGFxMovie::eventOnTick)
		.def("SaveOptions", &UOptionsGFxMovie::SaveOptions)
		.def("eventOnClose", &UOptionsGFxMovie::eventOnClose)
		.def("eventStart", &UOptionsGFxMovie::eventStart)
		;
	py::class_< USeqAct_CausePlayerDeath, USequenceAction >(m, "USeqAct_CausePlayerDeath")
		.def_property("bInstaKill", [](USeqAct_CausePlayerDeath &self){return self.bInstaKill;}, [](USeqAct_CausePlayerDeath &self, bool value){self.bInstaKill = value ? 1 : 0;})
		;
	py::class_< UISkillBehavior, UInterface >(m, "UISkillBehavior")
		.def("Behavior_GetSkillInstigatorController", &UISkillBehavior::Behavior_GetSkillInstigatorController, py::return_value_policy::reference)
		.def("Behavior_UpgradeSkill", &UISkillBehavior::Behavior_UpgradeSkill)
		.def("Behavior_DeactivateSkill", &UISkillBehavior::Behavior_DeactivateSkill)
		.def("Behavior_ActivateSkill", &UISkillBehavior::Behavior_ActivateSkill)
		;
	py::class_< UIChallengeRecipient, UInterface >(m, "UIChallengeRecipient")
		.def("ReceiveChallenge", &UIChallengeRecipient::ReceiveChallenge)
		;
	py::class_< AWillowPlayerCamera, AGearboxCameraBasic >(m, "AWillowPlayerCamera")
		.def("UpdateViewTarget", &AWillowPlayerCamera::UpdateViewTarget)
		.def("PostBeginPlay", &AWillowPlayerCamera::PostBeginPlay)
		;
	py::class_< UWillowCheatManager, UCheatManager >(m, "UWillowCheatManager")
		.def_property("DEBUG_bSkipSkillDependencyCheck", [](UWillowCheatManager &self){return self.DEBUG_bSkipSkillDependencyCheck;}, [](UWillowCheatManager &self, bool value){self.DEBUG_bSkipSkillDependencyCheck = value ? 1 : 0;})
		.def_property("bSkillDebugWatchPlayers", [](UWillowCheatManager &self){return self.bSkillDebugWatchPlayers;}, [](UWillowCheatManager &self, bool value){self.bSkillDebugWatchPlayers = value ? 1 : 0;})
		.def_property("bSkillDebugWatchNonPlayers", [](UWillowCheatManager &self){return self.bSkillDebugWatchNonPlayers;}, [](UWillowCheatManager &self, bool value){self.bSkillDebugWatchNonPlayers = value ? 1 : 0;})
		.def_property("bShowTimeOfDay", [](UWillowCheatManager &self){return self.bShowTimeOfDay;}, [](UWillowCheatManager &self, bool value){self.bShowTimeOfDay = value ? 1 : 0;})
		.def_property("bLevelHacksEnabled", [](UWillowCheatManager &self){return self.bLevelHacksEnabled;}, [](UWillowCheatManager &self, bool value){self.bLevelHacksEnabled = value ? 1 : 0;})
		.def_property("bPreHLQNoClipCanTargetCheatState", [](UWillowCheatManager &self){return self.bPreHLQNoClipCanTargetCheatState;}, [](UWillowCheatManager &self, bool value){self.bPreHLQNoClipCanTargetCheatState = value ? 1 : 0;})
		.def_property("bPreHLQNoClipDemigodState", [](UWillowCheatManager &self){return self.bPreHLQNoClipDemigodState;}, [](UWillowCheatManager &self, bool value){self.bPreHLQNoClipDemigodState = value ? 1 : 0;})
		.def_readwrite("ClassModPoolDefinitionName", &UWillowCheatManager::ClassModPoolDefinitionName, py::return_value_policy::reference)
		.def_readwrite("CurrencyBalanceFormulaMultiplier", &UWillowCheatManager::CurrencyBalanceFormulaMultiplier)
		.def_readwrite("CurrencyBalanceFormulaLevel", &UWillowCheatManager::CurrencyBalanceFormulaLevel)
		.def_readwrite("CurrencyBalanceFormulaOffset", &UWillowCheatManager::CurrencyBalanceFormulaOffset)
		.def_readwrite("AwesomeLevelBoostForAutoBalancedInventory", &UWillowCheatManager::AwesomeLevelBoostForAutoBalancedInventory)
		.def_readwrite("BalanceMeItemPoolListDefinitionName", &UWillowCheatManager::BalanceMeItemPoolListDefinitionName, py::return_value_policy::reference)
		.def_readwrite("BalanceMeAwesomeLevel", &UWillowCheatManager::BalanceMeAwesomeLevel)
		.def_readwrite("ResourceUpgrades", &UWillowCheatManager::ResourceUpgrades, py::return_value_policy::reference)
		.def_readwrite("StatusEffects", &UWillowCheatManager::StatusEffects, py::return_value_policy::reference)
		.def_readwrite("WatchedSkills", &UWillowCheatManager::WatchedSkills, py::return_value_policy::reference)
		.def_readwrite("SkillDebugPages", &UWillowCheatManager::SkillDebugPages, py::return_value_policy::reference)
		.def_readwrite("LastDebugPageIndex", &UWillowCheatManager::LastDebugPageIndex)
		.def_readwrite("LastSkillDebugPageUpdateTime", &UWillowCheatManager::LastSkillDebugPageUpdateTime)
		.def_readwrite("LastDamagedAmount", &UWillowCheatManager::LastDamagedAmount)
		.def_readwrite("SpawnItemPool_PoolToSpawnOutOf", &UWillowCheatManager::SpawnItemPool_PoolToSpawnOutOf, py::return_value_policy::reference)
		.def_readwrite("SpawnItemPool_GameStage", &UWillowCheatManager::SpawnItemPool_GameStage)
		.def_readwrite("SpawnItemPool_AwesomeLevel", &UWillowCheatManager::SpawnItemPool_AwesomeLevel)
		.def_readwrite("SpawnItemPool_NumTimesToSpawnFromPool", &UWillowCheatManager::SpawnItemPool_NumTimesToSpawnFromPool)
		.def_readwrite("SpawnItemPool_LastUpdateTime", &UWillowCheatManager::SpawnItemPool_LastUpdateTime)
		.def_readwrite("SpawnItemPool_AccruedTime", &UWillowCheatManager::SpawnItemPool_AccruedTime)
		.def_readwrite("SpawnItemPool_FuncName", &UWillowCheatManager::SpawnItemPool_FuncName, py::return_value_policy::reference)
		;
	py::class_< UIMultitypeScrollingList, UInterface >(m, "UIMultitypeScrollingList")
		.def("Move", &UIMultitypeScrollingList::Move)
		.def("SetRendererInfo", &UIMultitypeScrollingList::SetRendererInfo)
		;
	py::class_< UTwoPanelInterfaceGFxDefinition, UWillowInventoryGFxDefinition >(m, "UTwoPanelInterfaceGFxDefinition")
		.def_readwrite("PathToBackgroundArtClip", &UTwoPanelInterfaceGFxDefinition::PathToBackgroundArtClip, py::return_value_policy::reference)
		;
	py::class_< UIWillowStorable, UInterface >(m, "UIWillowStorable")
		.def("Put", &UIWillowStorable::Put)
		.def("Get", &UIWillowStorable::Get)
		.def("Swap", &UIWillowStorable::Swap)
		;
	py::class_< UITwoPanelInterface, UInterface >(m, "UITwoPanelInterface")
		.def("OnCellPressed", &UITwoPanelInterface::OnCellPressed)
		.def("OnLeftPanelInit", &UITwoPanelInterface::OnLeftPanelInit)
		.def("SetItemLocation", &UITwoPanelInterface::SetItemLocation)
		.def("PanelOnItemSelected", &UITwoPanelInterface::PanelOnItemSelected)
		.def("ShouldStoragePanelHighlightFrozen", &UITwoPanelInterface::ShouldStoragePanelHighlightFrozen)
		.def("GetEquippedAnalogue", &UITwoPanelInterface::GetEquippedAnalogue, py::return_value_policy::reference)
		.def("GetSelectedThing", &UITwoPanelInterface::GetSelectedThing, py::return_value_policy::reference)
		.def("GetPlayerPanelLabel", &UITwoPanelInterface::GetPlayerPanelLabel, py::return_value_policy::reference)
		.def("GetStoragePanelLabel", &UITwoPanelInterface::GetStoragePanelLabel, py::return_value_policy::reference)
		.def("ShouldShowPanelNavTooltips", &UITwoPanelInterface::ShouldShowPanelNavTooltips)
		.def("NotifySelectionChange", &UITwoPanelInterface::NotifySelectionChange)
		.def("GetCurrencyTypeForInventory", &UITwoPanelInterface::GetCurrencyTypeForInventory)
		.def("GetOverridePriceForInventory", &UITwoPanelInterface::GetOverridePriceForInventory)
		.def("GetSortConfigDataForPanel", &UITwoPanelInterface::GetSortConfigDataForPanel)
		.def("GetStorageReferenceForTransferring", &UITwoPanelInterface::GetStorageReferenceForTransferring, py::return_value_policy::reference)
		.def("GetStorageReferenceForSwapping", &UITwoPanelInterface::GetStorageReferenceForSwapping, py::return_value_policy::reference)
		.def("GetPlayerPanelItems", &UITwoPanelInterface::GetPlayerPanelItems)
		.def("GetTitle", &UITwoPanelInterface::GetTitle, py::return_value_policy::reference)
		.def("ShouldStartOnLeftPanel", &UITwoPanelInterface::ShouldStartOnLeftPanel)
		.def("GetStoragePanelItems", [](UITwoPanelInterface &self , TArray< class AWillowInventory* >* Things) { int* pyUnloadableCount = (int*)malloc(sizeof(int)) ;   self.GetStoragePanelItems(Things, pyUnloadableCount); return py::make_tuple(*pyUnloadableCount); })
		;
	py::class_< UBankGFxMovie, UTwoPanelInterfaceGFxMovie >(m, "UBankGFxMovie")
		.def_readwrite("BankTitle", &UBankGFxMovie::BankTitle, py::return_value_policy::reference)
		.def_readwrite("BankAddTip", &UBankGFxMovie::BankAddTip, py::return_value_policy::reference)
		.def_readwrite("BankStorage", &UBankGFxMovie::BankStorage, py::return_value_policy::reference)
		.def("SetItemLocation", &UBankGFxMovie::SetItemLocation)
		.def("OnInventoryPanelSetActive", &UBankGFxMovie::OnInventoryPanelSetActive)
		.def("GetStorageReferenceForTransferring", &UBankGFxMovie::GetStorageReferenceForTransferring, py::return_value_policy::reference)
		.def("GetStorageReferenceForSwapping", &UBankGFxMovie::GetStorageReferenceForSwapping, py::return_value_policy::reference)
		.def("GetPlayerPanelItems", &UBankGFxMovie::GetPlayerPanelItems)
		.def("GetAddTip", &UBankGFxMovie::GetAddTip, py::return_value_policy::reference)
		.def("GetTitle", &UBankGFxMovie::GetTitle, py::return_value_policy::reference)
		.def("eventOnClose", &UBankGFxMovie::eventOnClose)
		.def("extInitMainPanel", &UBankGFxMovie::extInitMainPanel)
		.def("eventStart", &UBankGFxMovie::eventStart)
		.def("GetStoragePanelItems", [](UBankGFxMovie &self , TArray< class AWillowInventory* >* Things) { int* pyUnloadableCount = (int*)malloc(sizeof(int)) ;   self.GetStoragePanelItems(Things, pyUnloadableCount); return py::make_tuple(*pyUnloadableCount); })
		;
	py::class_< UBehavior_ActivateListenerSkill, UBehaviorBase >(m, "UBehavior_ActivateListenerSkill")
		.def_readwrite("SkillToActivate", &UBehavior_ActivateListenerSkill::SkillToActivate, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ActivateListenerSkill::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ActivateSkill, UBehaviorBase >(m, "UBehavior_ActivateSkill")
		.def_property("bUseAdditionalSkillTarget", [](UBehavior_ActivateSkill &self){return self.bUseAdditionalSkillTarget;}, [](UBehavior_ActivateSkill &self, bool value){self.bUseAdditionalSkillTarget = value ? 1 : 0;})
		.def_property("bNoSkillStacking", [](UBehavior_ActivateSkill &self){return self.bNoSkillStacking;}, [](UBehavior_ActivateSkill &self, bool value){self.bNoSkillStacking = value ? 1 : 0;})
		.def_readwrite("SkillToActivate", &UBehavior_ActivateSkill::SkillToActivate, py::return_value_policy::reference)
		.def_readwrite("AdditionalTargetContext", &UBehavior_ActivateSkill::AdditionalTargetContext, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ActivateSkill::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AddInstanceData, UBehaviorBase >(m, "UBehavior_AddInstanceData")
		.def_property("bAllowDuplicates", [](UBehavior_AddInstanceData &self){return self.bAllowDuplicates;}, [](UBehavior_AddInstanceData &self, bool value){self.bAllowDuplicates = value ? 1 : 0;})
		.def_readwrite("InstanceData", &UBehavior_AddInstanceData::InstanceData, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AddInstanceData::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AddInstanceDataFromBehaviorContext, UBehaviorBase >(m, "UBehavior_AddInstanceDataFromBehaviorContext")
		.def_property("bDeleteByOwner", [](UBehavior_AddInstanceDataFromBehaviorContext &self){return self.bDeleteByOwner;}, [](UBehavior_AddInstanceDataFromBehaviorContext &self, bool value){self.bDeleteByOwner = value ? 1 : 0;})
		.def_readwrite("DatumName", &UBehavior_AddInstanceDataFromBehaviorContext::DatumName, py::return_value_policy::reference)
		.def_readwrite("ObjectContext", &UBehavior_AddInstanceDataFromBehaviorContext::ObjectContext, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AddInstanceDataFromBehaviorContext::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AddInventoryToStorage, UBehaviorBase >(m, "UBehavior_AddInventoryToStorage")
		.def_property("bIgnoreCapacityCheck", [](UBehavior_AddInventoryToStorage &self){return self.bIgnoreCapacityCheck;}, [](UBehavior_AddInventoryToStorage &self, bool value){self.bIgnoreCapacityCheck = value ? 1 : 0;})
		.def_property("bUniqueInventory", [](UBehavior_AddInventoryToStorage &self){return self.bUniqueInventory;}, [](UBehavior_AddInventoryToStorage &self, bool value){self.bUniqueInventory = value ? 1 : 0;})
		.def_readwrite("ItemDef", &UBehavior_AddInventoryToStorage::ItemDef, py::return_value_policy::reference)
		.def_readwrite("WeaponDef", &UBehavior_AddInventoryToStorage::WeaponDef, py::return_value_policy::reference)
		.def_readwrite("InvType", &UBehavior_AddInventoryToStorage::InvType)
		.def_readwrite("Destination", &UBehavior_AddInventoryToStorage::Destination)
		.def("ApplyBehaviorToContext", &UBehavior_AddInventoryToStorage::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AddObjectInstanceData, UBehaviorBase >(m, "UBehavior_AddObjectInstanceData")
		.def_property("bDeleteByOwner", [](UBehavior_AddObjectInstanceData &self){return self.bDeleteByOwner;}, [](UBehavior_AddObjectInstanceData &self, bool value){self.bDeleteByOwner = value ? 1 : 0;})
		.def_property("bAllowDuplicateNames", [](UBehavior_AddObjectInstanceData &self){return self.bAllowDuplicateNames;}, [](UBehavior_AddObjectInstanceData &self, bool value){self.bAllowDuplicateNames = value ? 1 : 0;})
		.def_readwrite("InstanceDataObject", &UBehavior_AddObjectInstanceData::InstanceDataObject, py::return_value_policy::reference)
		.def_readwrite("InstanceDataName", &UBehavior_AddObjectInstanceData::InstanceDataName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AddObjectInstanceData::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AdjustCameraAnimByEyeHeight, UBehaviorBase >(m, "UBehavior_AdjustCameraAnimByEyeHeight")
		.def_property("bEnable", [](UBehavior_AdjustCameraAnimByEyeHeight &self){return self.bEnable;}, [](UBehavior_AdjustCameraAnimByEyeHeight &self, bool value){self.bEnable = value ? 1 : 0;})
		.def_readwrite("BaseEyeHeight", &UBehavior_AdjustCameraAnimByEyeHeight::BaseEyeHeight)
		.def("ApplyBehaviorToContext", &UBehavior_AdjustCameraAnimByEyeHeight::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AIChangeInventory, UBehaviorBase >(m, "UBehavior_AIChangeInventory")
		.def_readwrite("NewItemPoolList", &UBehavior_AIChangeInventory::NewItemPoolList, py::return_value_policy::reference)
		.def_readwrite("NewItemPoolIncludedLists", &UBehavior_AIChangeInventory::NewItemPoolIncludedLists, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AIChangeInventory::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AIFollow, UBehaviorBase >(m, "UBehavior_AIFollow")
		.def_property("bCanShoot", [](UBehavior_AIFollow &self){return self.bCanShoot;}, [](UBehavior_AIFollow &self, bool value){self.bCanShoot = value ? 1 : 0;})
		.def_property("bUseFormation", [](UBehavior_AIFollow &self){return self.bUseFormation;}, [](UBehavior_AIFollow &self, bool value){self.bUseFormation = value ? 1 : 0;})
		.def_readwrite("ToFollow", &UBehavior_AIFollow::ToFollow, py::return_value_policy::reference)
		.def_readwrite("Action", &UBehavior_AIFollow::Action)
		.def_readwrite("Stance", &UBehavior_AIFollow::Stance)
		.def_readwrite("CatchupDistance", &UBehavior_AIFollow::CatchupDistance)
		.def_readwrite("HoldStillDistance", &UBehavior_AIFollow::HoldStillDistance)
		.def("ApplyBehaviorToContext", &UBehavior_AIFollow::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AILevelUp, UBehaviorBase >(m, "UBehavior_AILevelUp")
		.def_property("bResetHealth", [](UBehavior_AILevelUp &self){return self.bResetHealth;}, [](UBehavior_AILevelUp &self, bool value){self.bResetHealth = value ? 1 : 0;})
		.def_readwrite("MaxLevelUps", &UBehavior_AILevelUp::MaxLevelUps)
		.def("ApplyBehaviorToContext", &UBehavior_AILevelUp::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AIPatsy, UBehaviorBase >(m, "UBehavior_AIPatsy")
		.def_property("bClearPatsy", [](UBehavior_AIPatsy &self){return self.bClearPatsy;}, [](UBehavior_AIPatsy &self, bool value){self.bClearPatsy = value ? 1 : 0;})
		.def_readwrite("Patsy", &UBehavior_AIPatsy::Patsy, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AIPatsy::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AIProvoke, UBehaviorBase >(m, "UBehavior_AIProvoke")
		.def_readwrite("ProvokeInstigator", &UBehavior_AIProvoke::ProvokeInstigator, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AIProvoke::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AIResetProvocation, UBehaviorBase >(m, "UBehavior_AIResetProvocation")
		.def("ApplyBehaviorToContext", &UBehavior_AIResetProvocation::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AISetItemTossTarget, UBehaviorBase >(m, "UBehavior_AISetItemTossTarget")
		.def_readwrite("TossTarget", &UBehavior_AISetItemTossTarget::TossTarget, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AISetItemTossTarget::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AISetWeaponFireRotation, UBehaviorBase >(m, "UBehavior_AISetWeaponFireRotation")
		.def_property("bUseWeaponRotation", [](UBehavior_AISetWeaponFireRotation &self){return self.bUseWeaponRotation;}, [](UBehavior_AISetWeaponFireRotation &self, bool value){self.bUseWeaponRotation = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_AISetWeaponFireRotation::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AITakeMoney, UBehaviorBase >(m, "UBehavior_AITakeMoney")
		.def_readwrite("TakePercent", &UBehavior_AITakeMoney::TakePercent)
		.def_readwrite("GiveTo", &UBehavior_AITakeMoney::GiveTo, py::return_value_policy::reference)
		.def_readwrite("CashItemPool", &UBehavior_AITakeMoney::CashItemPool, py::return_value_policy::reference)
		.def_readwrite("HUDSpecialRemovalFrame", &UBehavior_AITakeMoney::HUDSpecialRemovalFrame, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AITakeMoney::ApplyBehaviorToContext)
		;
	py::class_< UINPCBehavior, UInterface >(m, "UINPCBehavior")
		.def("GetCurrentProjectile", &UINPCBehavior::GetCurrentProjectile, py::return_value_policy::reference)
		.def("GetGrenadeMod", &UINPCBehavior::GetGrenadeMod, py::return_value_policy::reference)
		;
	py::class_< UBehavior_AssignBoolVariable, UBehaviorBase >(m, "UBehavior_AssignBoolVariable")
		.def_property("Value", [](UBehavior_AssignBoolVariable &self){return self.Value;}, [](UBehavior_AssignBoolVariable &self, bool value){self.Value = value ? 1 : 0;})
		.def("PublishBehaviorOutput", &UBehavior_AssignBoolVariable::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_AssignBoolVariable::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AssignFloatVariable, UBehaviorBase >(m, "UBehavior_AssignFloatVariable")
		.def_readwrite("Value", &UBehavior_AssignFloatVariable::Value)
		.def("PublishBehaviorOutput", &UBehavior_AssignFloatVariable::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_AssignFloatVariable::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AssignIntVariable, UBehaviorBase >(m, "UBehavior_AssignIntVariable")
		.def_readwrite("Value", &UBehavior_AssignIntVariable::Value)
		.def("PublishBehaviorOutput", &UBehavior_AssignIntVariable::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_AssignIntVariable::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AssignObjectVariable, UBehaviorBase >(m, "UBehavior_AssignObjectVariable")
		.def_readwrite("Value", &UBehavior_AssignObjectVariable::Value, py::return_value_policy::reference)
		.def("PublishBehaviorOutput", &UBehavior_AssignObjectVariable::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_AssignObjectVariable::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AssignVectorVariable, UBehaviorBase >(m, "UBehavior_AssignVectorVariable")
		.def_readwrite("Value", &UBehavior_AssignVectorVariable::Value, py::return_value_policy::reference)
		.def("PublishBehaviorOutput", &UBehavior_AssignVectorVariable::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_AssignVectorVariable::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AttachActor, UBehaviorBase >(m, "UBehavior_AttachActor")
		.def_readwrite("AttachmentPointName", &UBehavior_AttachActor::AttachmentPointName, py::return_value_policy::reference)
		.def_readwrite("ToAttach", &UBehavior_AttachActor::ToAttach, py::return_value_policy::reference)
		.def_readwrite("AttachTime", &UBehavior_AttachActor::AttachTime)
		.def_readwrite("InstanceDataName", &UBehavior_AttachActor::InstanceDataName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AttachActor::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AttachAOEStatusEffect, UBehaviorBase >(m, "UBehavior_AttachAOEStatusEffect")
		.def_readwrite("StatusEffectDamageType", &UBehavior_AttachAOEStatusEffect::StatusEffectDamageType, py::return_value_policy::reference)
		.def_readwrite("SaveReferenceName", &UBehavior_AttachAOEStatusEffect::SaveReferenceName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AttachAOEStatusEffect::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AttachItems, UBehaviorBase >(m, "UBehavior_AttachItems")
		.def_property("bDisablePickups", [](UBehavior_AttachItems &self){return self.bDisablePickups;}, [](UBehavior_AttachItems &self, bool value){self.bDisablePickups = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_AttachItems::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AttributeEffect, UBehaviorBase >(m, "UBehavior_AttributeEffect")
		.def_readwrite("AttributeEffect", &UBehavior_AttributeEffect::AttributeEffect, py::return_value_policy::reference)
		.def_readwrite("AttributeEffects", &UBehavior_AttributeEffect::AttributeEffects, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_AttributeEffect::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_AwardExperienceForMyDeath, UBehaviorBase >(m, "UBehavior_AwardExperienceForMyDeath")
		.def("ApplyBehaviorToContext", &UBehavior_AwardExperienceForMyDeath::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_BeginLifting, UBehaviorBase >(m, "UBehavior_BeginLifting")
		.def_readwrite("LifterSkillContext", &UBehavior_BeginLifting::LifterSkillContext, py::return_value_policy::reference)
		.def_readwrite("LifterPawnContext", &UBehavior_BeginLifting::LifterPawnContext, py::return_value_policy::reference)
		.def_readwrite("HeightFromGroundFormula", &UBehavior_BeginLifting::HeightFromGroundFormula, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_BeginLifting::ApplyBehaviorToContext)
		;
	py::class_< UILiftBehavior, UInterface >(m, "UILiftBehavior")
		.def("BeginLifting", &UILiftBehavior::BeginLifting)
		.def("FinishLifting", &UILiftBehavior::FinishLifting)
		.def("SelectTarget", &UILiftBehavior::SelectTarget)
		;
	py::class_< UBehavior_BoolMath, UBehaviorBase >(m, "UBehavior_BoolMath")
		.def_property("A", [](UBehavior_BoolMath &self){return self.A;}, [](UBehavior_BoolMath &self, bool value){self.A = value ? 1 : 0;})
		.def_property("B", [](UBehavior_BoolMath &self){return self.B;}, [](UBehavior_BoolMath &self, bool value){self.B = value ? 1 : 0;})
		.def_readwrite("Operation", &UBehavior_BoolMath::Operation)
		.def("PublishBehaviorOutput", &UBehavior_BoolMath::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_BoolMath::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_BroadcastEcho, UBehaviorBase >(m, "UBehavior_BroadcastEcho")
		.def("ApplyBehaviorToContext", &UBehavior_BroadcastEcho::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CauseTinnitus, UBehaviorBase >(m, "UBehavior_CauseTinnitus")
		.def_property("bOverrideTinnitusAkEvent", [](UBehavior_CauseTinnitus &self){return self.bOverrideTinnitusAkEvent;}, [](UBehavior_CauseTinnitus &self, bool value){self.bOverrideTinnitusAkEvent = value ? 1 : 0;})
		.def_readwrite("Radius", &UBehavior_CauseTinnitus::Radius, py::return_value_policy::reference)
		.def_readwrite("StrengthModifier", &UBehavior_CauseTinnitus::StrengthModifier, py::return_value_policy::reference)
		.def_readwrite("OverrideTinnitusAkEvent", &UBehavior_CauseTinnitus::OverrideTinnitusAkEvent, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_CauseTinnitus::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ChangeBehaviorSetState, UBehaviorBase >(m, "UBehavior_ChangeBehaviorSetState")
		.def_readwrite("BehaviorSetName", &UBehavior_ChangeBehaviorSetState::BehaviorSetName, py::return_value_policy::reference)
		.def_readwrite("ChangeStatus", &UBehavior_ChangeBehaviorSetState::ChangeStatus)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeBehaviorSetState::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ChangeCanTarget, UBehaviorBase >(m, "UBehavior_ChangeCanTarget")
		.def_readwrite("ChangeStatus", &UBehavior_ChangeCanTarget::ChangeStatus)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeCanTarget::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ChangeDenAllegiance, UBehaviorBase >(m, "UBehavior_ChangeDenAllegiance")
		.def_readwrite("Allegiance", &UBehavior_ChangeDenAllegiance::Allegiance, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeDenAllegiance::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ChangeDialogName, UBehaviorBase >(m, "UBehavior_ChangeDialogName")
		.def_readwrite("NewNameTag", &UBehavior_ChangeDialogName::NewNameTag, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeDialogName::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ChangeEnvironmentTag, UBehaviorBase >(m, "UBehavior_ChangeEnvironmentTag")
		.def_property("bOverwriteExistingTag", [](UBehavior_ChangeEnvironmentTag &self){return self.bOverwriteExistingTag;}, [](UBehavior_ChangeEnvironmentTag &self, bool value){self.bOverwriteExistingTag = value ? 1 : 0;})
		.def_readwrite("Action", &UBehavior_ChangeEnvironmentTag::Action)
		.def_readwrite("EnvironmentTag", &UBehavior_ChangeEnvironmentTag::EnvironmentTag, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeEnvironmentTag::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ChangeInstanceDataSwitch, UBehaviorBase >(m, "UBehavior_ChangeInstanceDataSwitch")
		.def_property("bSimulated", [](UBehavior_ChangeInstanceDataSwitch &self){return self.bSimulated;}, [](UBehavior_ChangeInstanceDataSwitch &self, bool value){self.bSimulated = value ? 1 : 0;})
		.def_readwrite("SwitchName", &UBehavior_ChangeInstanceDataSwitch::SwitchName, py::return_value_policy::reference)
		.def_readwrite("NewValue", &UBehavior_ChangeInstanceDataSwitch::NewValue)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeInstanceDataSwitch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ChangeUsability, UBehaviorBase >(m, "UBehavior_ChangeUsability")
		.def_readwrite("ChangeUsability", &UBehavior_ChangeUsability::ChangeUsability)
		.def_readwrite("UsabilityType", &UBehavior_ChangeUsability::UsabilityType)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeUsability::ApplyBehaviorToContext)
		;
	py::class_< UIChangeUsabilityBehavior, UInterface >(m, "UIChangeUsabilityBehavior")
		.def("Behavior_ChangeUsabilityCost", &UIChangeUsabilityBehavior::Behavior_ChangeUsabilityCost)
		.def("Behavior_ChangeUsability", &UIChangeUsabilityBehavior::Behavior_ChangeUsability)
		;
	py::class_< UBehavior_ChangeWeaponVisibility, UBehaviorBase >(m, "UBehavior_ChangeWeaponVisibility")
		.def_property("bApplyToFirstPerson", [](UBehavior_ChangeWeaponVisibility &self){return self.bApplyToFirstPerson;}, [](UBehavior_ChangeWeaponVisibility &self, bool value){self.bApplyToFirstPerson = value ? 1 : 0;})
		.def_property("bApplyToThirdPerson", [](UBehavior_ChangeWeaponVisibility &self){return self.bApplyToThirdPerson;}, [](UBehavior_ChangeWeaponVisibility &self, bool value){self.bApplyToThirdPerson = value ? 1 : 0;})
		.def_readwrite("Status", &UBehavior_ChangeWeaponVisibility::Status)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeWeaponVisibility::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_Charm, UBehaviorBase >(m, "UBehavior_Charm")
		.def_readwrite("Action", &UBehavior_Charm::Action)
		.def_readwrite("CharmOwner", &UBehavior_Charm::CharmOwner, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_Charm::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CheckMapChangeConditions, UBehaviorBase >(m, "UBehavior_CheckMapChangeConditions")
		.def_readwrite("MapChangeCustomEvent", &UBehavior_CheckMapChangeConditions::MapChangeCustomEvent, py::return_value_policy::reference)
		.def_readwrite("PlayerBusyCustomEvent", &UBehavior_CheckMapChangeConditions::PlayerBusyCustomEvent, py::return_value_policy::reference)
		.def("PlayerBusyEvent", &UBehavior_CheckMapChangeConditions::PlayerBusyEvent)
		.def("MapChangeEvent", &UBehavior_CheckMapChangeConditions::MapChangeEvent)
		.def("GetDestinationStationDefinition", &UBehavior_CheckMapChangeConditions::GetDestinationStationDefinition, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_CheckMapChangeConditions::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ClearStatusEffects, UBehaviorBase >(m, "UBehavior_ClearStatusEffects")
		.def_property("bKillImmediately", [](UBehavior_ClearStatusEffects &self){return self.bKillImmediately;}, [](UBehavior_ClearStatusEffects &self, bool value){self.bKillImmediately = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_ClearStatusEffects::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CombatPerch, UBehaviorBase >(m, "UBehavior_CombatPerch")
		.def_readwrite("AttachmentName", &UBehavior_CombatPerch::AttachmentName, py::return_value_policy::reference)
		.def_readwrite("Action", &UBehavior_CombatPerch::Action)
		.def("ApplyBehaviorToContext", &UBehavior_CombatPerch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CombatPerchThrow, UBehavior_AIThrowProjectileAtTarget >(m, "UBehavior_CombatPerchThrow")
		.def_property("bDrop", [](UBehavior_CombatPerchThrow &self){return self.bDrop;}, [](UBehavior_CombatPerchThrow &self, bool value){self.bDrop = value ? 1 : 0;})
		.def("ThrowProjectile", &UBehavior_CombatPerchThrow::ThrowProjectile)
		.def("ApplyBehaviorToContext", &UBehavior_CombatPerchThrow::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CompareFloat, UBehaviorBase >(m, "UBehavior_CompareFloat")
		.def_readwrite("ValueA", &UBehavior_CompareFloat::ValueA)
		.def_readwrite("ValueB", &UBehavior_CompareFloat::ValueB)
		.def("ApplyBehaviorToContext", &UBehavior_CompareFloat::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CompareInt, UBehaviorBase >(m, "UBehavior_CompareInt")
		.def_readwrite("A", &UBehavior_CompareInt::A)
		.def_readwrite("B", &UBehavior_CompareInt::B)
		.def("ApplyBehaviorToContext", &UBehavior_CompareInt::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CompareObject, UBehaviorBase >(m, "UBehavior_CompareObject")
		.def_readwrite("ObjectA", &UBehavior_CompareObject::ObjectA, py::return_value_policy::reference)
		.def_readwrite("ObjectB", &UBehavior_CompareObject::ObjectB, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_CompareObject::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CoordinatedEffect, UBehaviorBase >(m, "UBehavior_CoordinatedEffect")
		.def_readwrite("Status", &UBehavior_CoordinatedEffect::Status)
		.def_readwrite("Effect", &UBehavior_CoordinatedEffect::Effect, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_CoordinatedEffect::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_Crane, UBehaviorBase >(m, "UBehavior_Crane")
		.def_readwrite("Action", &UBehavior_Crane::Action)
		.def("DontDoShit", &UBehavior_Crane::DontDoShit)
		.def("FollowDummy", &UBehavior_Crane::FollowDummy)
		.def("DetachDummy", &UBehavior_Crane::DetachDummy)
		.def("AttachDummy", &UBehavior_Crane::AttachDummy)
		.def("FindDummy", &UBehavior_Crane::FindDummy)
		.def("ApplyBehaviorToContext", &UBehavior_Crane::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CreateImpactEffect, UBehaviorBase >(m, "UBehavior_CreateImpactEffect")
		.def_readwrite("ImpactDefinition", &UBehavior_CreateImpactEffect::ImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("ImpactPointName", &UBehavior_CreateImpactEffect::ImpactPointName, py::return_value_policy::reference)
		.def_readwrite("ImpactDirection", &UBehavior_CreateImpactEffect::ImpactDirection)
		.def_readwrite("ImpactTraceLength", &UBehavior_CreateImpactEffect::ImpactTraceLength)
		.def_readwrite("ImpactTraceStartBackupLength", &UBehavior_CreateImpactEffect::ImpactTraceStartBackupLength)
		.def("ApplyBehaviorToContext", &UBehavior_CreateImpactEffect::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_CreateWeatherSystem, UBehaviorBase >(m, "UBehavior_CreateWeatherSystem")
		.def_readwrite("WeatherSystemTemplate", &UBehavior_CreateWeatherSystem::WeatherSystemTemplate, py::return_value_policy::reference)
		.def_readwrite("ScreenEffectTemplate", &UBehavior_CreateWeatherSystem::ScreenEffectTemplate, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_CreateWeatherSystem::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DamageArea, UBehaviorBase >(m, "UBehavior_DamageArea")
		.def_readwrite("Action", &UBehavior_DamageArea::Action)
		.def("ApplyBehaviorToContext", &UBehavior_DamageArea::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DamageClassSwitch, UBehaviorBase >(m, "UBehavior_DamageClassSwitch")
		.def_readwrite("HitObject", &UBehavior_DamageClassSwitch::HitObject, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_DamageClassSwitch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DamageSourceSwitch, UBehaviorBase >(m, "UBehavior_DamageSourceSwitch")
		.def_readwrite("DamageSource", &UBehavior_DamageSourceSwitch::DamageSource, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_DamageSourceSwitch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DamageSurfaceTypeSwitch, UBehaviorBase >(m, "UBehavior_DamageSurfaceTypeSwitch")
		.def_readwrite("DamageSurfaceType", &UBehavior_DamageSurfaceTypeSwitch::DamageSurfaceType)
		.def("ApplyBehaviorToContext", &UBehavior_DamageSurfaceTypeSwitch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DeactivateSkill, UBehaviorBase >(m, "UBehavior_DeactivateSkill")
		.def_property("bIgnoreSkillInstigator", [](UBehavior_DeactivateSkill &self){return self.bIgnoreSkillInstigator;}, [](UBehavior_DeactivateSkill &self, bool value){self.bIgnoreSkillInstigator = value ? 1 : 0;})
		.def_readwrite("SkillToDeactivate", &UBehavior_DeactivateSkill::SkillToDeactivate, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_DeactivateSkill::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DebugMessage, UBehaviorBase >(m, "UBehavior_DebugMessage")
		.def_property("DebugBool", [](UBehavior_DebugMessage &self){return self.DebugBool;}, [](UBehavior_DebugMessage &self, bool value){self.DebugBool = value ? 1 : 0;})
		.def_property("bOutputBool", [](UBehavior_DebugMessage &self){return self.bOutputBool;}, [](UBehavior_DebugMessage &self, bool value){self.bOutputBool = value ? 1 : 0;})
		.def_property("bOutputFloat", [](UBehavior_DebugMessage &self){return self.bOutputFloat;}, [](UBehavior_DebugMessage &self, bool value){self.bOutputFloat = value ? 1 : 0;})
		.def_property("bOutputInt", [](UBehavior_DebugMessage &self){return self.bOutputInt;}, [](UBehavior_DebugMessage &self, bool value){self.bOutputInt = value ? 1 : 0;})
		.def_property("bOutputObject", [](UBehavior_DebugMessage &self){return self.bOutputObject;}, [](UBehavior_DebugMessage &self, bool value){self.bOutputObject = value ? 1 : 0;})
		.def_property("bOutputVector", [](UBehavior_DebugMessage &self){return self.bOutputVector;}, [](UBehavior_DebugMessage &self, bool value){self.bOutputVector = value ? 1 : 0;})
		.def_property("bOutputToLogFile", [](UBehavior_DebugMessage &self){return self.bOutputToLogFile;}, [](UBehavior_DebugMessage &self, bool value){self.bOutputToLogFile = value ? 1 : 0;})
		.def_readwrite("DebugMessage", &UBehavior_DebugMessage::DebugMessage, py::return_value_policy::reference)
		.def_readwrite("Duration", &UBehavior_DebugMessage::Duration)
		.def_readwrite("DebugFloat", &UBehavior_DebugMessage::DebugFloat)
		.def_readwrite("DebugInt", &UBehavior_DebugMessage::DebugInt)
		.def_readwrite("DebugObject", &UBehavior_DebugMessage::DebugObject, py::return_value_policy::reference)
		.def_readwrite("DebugVector", &UBehavior_DebugMessage::DebugVector, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_DebugMessage::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DestroyBeams, UBehaviorBase >(m, "UBehavior_DestroyBeams")
		.def_property("bDestroyAllBeams", [](UBehavior_DestroyBeams &self){return self.bDestroyAllBeams;}, [](UBehavior_DestroyBeams &self, bool value){self.bDestroyAllBeams = value ? 1 : 0;})
		.def_readwrite("TargetContext", &UBehavior_DestroyBeams::TargetContext, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_DestroyBeams::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DestroyBeamsForSource, UBehaviorBase >(m, "UBehavior_DestroyBeamsForSource")
		.def_readwrite("SourceContext", &UBehavior_DestroyBeamsForSource::SourceContext, py::return_value_policy::reference)
		.def_readwrite("SourceSocket", &UBehavior_DestroyBeamsForSource::SourceSocket, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_DestroyBeamsForSource::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DestroyWeatherSystem, UBehaviorBase >(m, "UBehavior_DestroyWeatherSystem")
		.def("ApplyBehaviorToContext", &UBehavior_DestroyWeatherSystem::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DetachActor, UBehaviorBase >(m, "UBehavior_DetachActor")
		.def_property("bSetActorToPhysFallingOnDetach", [](UBehavior_DetachActor &self){return self.bSetActorToPhysFallingOnDetach;}, [](UBehavior_DetachActor &self, bool value){self.bSetActorToPhysFallingOnDetach = value ? 1 : 0;})
		.def_property("bAddVelocityOnDetach", [](UBehavior_DetachActor &self){return self.bAddVelocityOnDetach;}, [](UBehavior_DetachActor &self, bool value){self.bAddVelocityOnDetach = value ? 1 : 0;})
		.def_readwrite("DetachDirection", &UBehavior_DetachActor::DetachDirection, py::return_value_policy::reference)
		.def_readwrite("DetachSpeed", &UBehavior_DetachActor::DetachSpeed, py::return_value_policy::reference)
		.def("ApplyDetachVelocity", &UBehavior_DetachActor::ApplyDetachVelocity)
		.def("CalculateDetachVelocity", &UBehavior_DetachActor::CalculateDetachVelocity, py::return_value_policy::reference)
		.def("DetachActor", &UBehavior_DetachActor::DetachActor)
		.def("ApplyBehaviorToContext", &UBehavior_DetachActor::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DisableFallingDamage, UBehaviorBase >(m, "UBehavior_DisableFallingDamage")
		.def_property("bDisableFallingDamage", [](UBehavior_DisableFallingDamage &self){return self.bDisableFallingDamage;}, [](UBehavior_DisableFallingDamage &self, bool value){self.bDisableFallingDamage = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_DisableFallingDamage::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DiscoverLevelChallengeObject, UBehaviorBase >(m, "UBehavior_DiscoverLevelChallengeObject")
		.def_property("bForAllPlayers", [](UBehavior_DiscoverLevelChallengeObject &self){return self.bForAllPlayers;}, [](UBehavior_DiscoverLevelChallengeObject &self, bool value){self.bForAllPlayers = value ? 1 : 0;})
		.def_property("bIgnoreNumbering", [](UBehavior_DiscoverLevelChallengeObject &self){return self.bIgnoreNumbering;}, [](UBehavior_DiscoverLevelChallengeObject &self, bool value){self.bIgnoreNumbering = value ? 1 : 0;})
		.def_readwrite("UnlockForPlayer", &UBehavior_DiscoverLevelChallengeObject::UnlockForPlayer, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_DiscoverLevelChallengeObject::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DropItems, UBehaviorBase >(m, "UBehavior_DropItems")
		.def_property("bDisablePickups", [](UBehavior_DropItems &self){return self.bDisablePickups;}, [](UBehavior_DropItems &self, bool value){self.bDisablePickups = value ? 1 : 0;})
		.def_property("bCircularScatter", [](UBehavior_DropItems &self){return self.bCircularScatter;}, [](UBehavior_DropItems &self, bool value){self.bCircularScatter = value ? 1 : 0;})
		.def_property("bTorque", [](UBehavior_DropItems &self){return self.bTorque;}, [](UBehavior_DropItems &self, bool value){self.bTorque = value ? 1 : 0;})
		.def_readwrite("ItemDropOffset", &UBehavior_DropItems::ItemDropOffset, py::return_value_policy::reference)
		.def_readwrite("ItemDropVelocity", &UBehavior_DropItems::ItemDropVelocity, py::return_value_policy::reference)
		.def_readwrite("ItemScatterOffset", &UBehavior_DropItems::ItemScatterOffset, py::return_value_policy::reference)
		.def_readwrite("CustomDirection", &UBehavior_DropItems::CustomDirection, py::return_value_policy::reference)
		.def_readwrite("CustomVelocity", &UBehavior_DropItems::CustomVelocity)
		.def_readwrite("Torque", &UBehavior_DropItems::Torque, py::return_value_policy::reference)
		.def("DropItems", &UBehavior_DropItems::DropItems)
		.def("ApplyBehaviorToContext", &UBehavior_DropItems::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DropProjectile, UBehaviorBase >(m, "UBehavior_DropProjectile")
		.def_readwrite("InstanceDataName", &UBehavior_DropProjectile::InstanceDataName, py::return_value_policy::reference)
		.def_readwrite("ChildProjectileBaseValues", &UBehavior_DropProjectile::ChildProjectileBaseValues, py::return_value_policy::reference)
		.def_readwrite("ProjectileDef", &UBehavior_DropProjectile::ProjectileDef, py::return_value_policy::reference)
		.def_readwrite("SetProjectileSequenceState", &UBehavior_DropProjectile::SetProjectileSequenceState, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_DropProjectile::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_DuplicateInstanceData, UBehaviorBase >(m, "UBehavior_DuplicateInstanceData")
		.def_readwrite("DuplicateName", &UBehavior_DuplicateInstanceData::DuplicateName, py::return_value_policy::reference)
		.def_readwrite("InstanceData", &UBehavior_DuplicateInstanceData::InstanceData, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_DuplicateInstanceData::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_EnterVehicle, UBehaviorBase >(m, "UBehavior_EnterVehicle")
		.def_readwrite("SeatPos", &UBehavior_EnterVehicle::SeatPos)
		.def_readwrite("VehicleContext", &UBehavior_EnterVehicle::VehicleContext, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_EnterVehicle::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_FinishLifting, UBehaviorBase >(m, "UBehavior_FinishLifting")
		.def_property("bDropImmediately", [](UBehavior_FinishLifting &self){return self.bDropImmediately;}, [](UBehavior_FinishLifting &self, bool value){self.bDropImmediately = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_FinishLifting::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_FireBeam, UBehaviorBase >(m, "UBehavior_FireBeam")
		.def_property("bLockTarget", [](UBehavior_FireBeam &self){return self.bLockTarget;}, [](UBehavior_FireBeam &self, bool value){self.bLockTarget = value ? 1 : 0;})
		.def_readwrite("SourceSocket", &UBehavior_FireBeam::SourceSocket, py::return_value_policy::reference)
		.def_readwrite("SourceOffset", &UBehavior_FireBeam::SourceOffset, py::return_value_policy::reference)
		.def_readwrite("TargetSocket", &UBehavior_FireBeam::TargetSocket, py::return_value_policy::reference)
		.def_readwrite("TargetOffset", &UBehavior_FireBeam::TargetOffset, py::return_value_policy::reference)
		.def_readwrite("TargetContext", &UBehavior_FireBeam::TargetContext, py::return_value_policy::reference)
		.def_readwrite("NumBeams", &UBehavior_FireBeam::NumBeams)
		.def_readwrite("DamagePerSecondFormula", &UBehavior_FireBeam::DamagePerSecondFormula, py::return_value_policy::reference)
		.def_readwrite("MomentumPerSecondFormula", &UBehavior_FireBeam::MomentumPerSecondFormula, py::return_value_policy::reference)
		.def_readwrite("RadiusToDoDamageAroundImpact", &UBehavior_FireBeam::RadiusToDoDamageAroundImpact, py::return_value_policy::reference)
		.def_readwrite("FiringModeDefinition", &UBehavior_FireBeam::FiringModeDefinition, py::return_value_policy::reference)
		.def_readwrite("DamageSource", &UBehavior_FireBeam::DamageSource, py::return_value_policy::reference)
		.def_readwrite("DamageTypeDefinition", &UBehavior_FireBeam::DamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("ImpactDefinition", &UBehavior_FireBeam::ImpactDefinition, py::return_value_policy::reference)
		.def("FillData", &UBehavior_FireBeam::FillData)
		.def("ApplyBehaviorToContext", &UBehavior_FireBeam::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_FireCustomSkillEvent, UBehaviorBase >(m, "UBehavior_FireCustomSkillEvent")
		.def_readwrite("EventName", &UBehavior_FireCustomSkillEvent::EventName, py::return_value_policy::reference)
		.def_readwrite("Skill", &UBehavior_FireCustomSkillEvent::Skill, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_FireCustomSkillEvent::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_FireShot, UBehaviorBase >(m, "UBehavior_FireShot")
		.def_property("bTreatDirectionAsDestination", [](UBehavior_FireShot &self){return self.bTreatDirectionAsDestination;}, [](UBehavior_FireShot &self, bool value){self.bTreatDirectionAsDestination = value ? 1 : 0;})
		.def_readwrite("WeaponOwnerContext", &UBehavior_FireShot::WeaponOwnerContext, py::return_value_policy::reference)
		.def_readwrite("NumProjectiles", &UBehavior_FireShot::NumProjectiles)
		.def_readwrite("SpawnDirection", &UBehavior_FireShot::SpawnDirection, py::return_value_policy::reference)
		.def_readwrite("SpawnSocket", &UBehavior_FireShot::SpawnSocket, py::return_value_policy::reference)
		.def_readwrite("SpawnDirectionVector", &UBehavior_FireShot::SpawnDirectionVector, py::return_value_policy::reference)
		.def_readwrite("FiringModeDefinition", &UBehavior_FireShot::FiringModeDefinition, py::return_value_policy::reference)
		.def_readwrite("FireLocationSocketNames", &UBehavior_FireShot::FireLocationSocketNames, py::return_value_policy::reference)
		.def_readwrite("FireSocketSelection", &UBehavior_FireShot::FireSocketSelection)
		.def_readwrite("TimeBetweenShots", &UBehavior_FireShot::TimeBetweenShots)
		.def_readwrite("DamagePerSecondFormula", &UBehavior_FireShot::DamagePerSecondFormula, py::return_value_policy::reference)
		.def_readwrite("MomentumPerSecondFormula", &UBehavior_FireShot::MomentumPerSecondFormula, py::return_value_policy::reference)
		.def_readwrite("RadiusToDoDamageAroundImpact", &UBehavior_FireShot::RadiusToDoDamageAroundImpact, py::return_value_policy::reference)
		.def_readwrite("DamageSource", &UBehavior_FireShot::DamageSource, py::return_value_policy::reference)
		.def_readwrite("DamageTypeDefinition", &UBehavior_FireShot::DamageTypeDefinition, py::return_value_policy::reference)
		.def_readwrite("ImpactDefinition", &UBehavior_FireShot::ImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("BeamLocationOffset", &UBehavior_FireShot::BeamLocationOffset, py::return_value_policy::reference)
		.def_readwrite("FireLocationSocketsRemaining", &UBehavior_FireShot::FireLocationSocketsRemaining, py::return_value_policy::reference)
		.def_readwrite("NumShotsFired", &UBehavior_FireShot::NumShotsFired)
		.def("FireNextShot", &UBehavior_FireShot::FireNextShot)
		.def("ApplyBehaviorToContext", &UBehavior_FireShot::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ForceDownState, UBehaviorBase >(m, "UBehavior_ForceDownState")
		.def("ApplyBehaviorToContext", &UBehavior_ForceDownState::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ForceInjured, UBehaviorBase >(m, "UBehavior_ForceInjured")
		.def("ApplyBehaviorToContext", &UBehavior_ForceInjured::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GetClosestPlayer, UBehaviorBase >(m, "UBehavior_GetClosestPlayer")
		.def_property("bFriendlyToContext", [](UBehavior_GetClosestPlayer &self){return self.bFriendlyToContext;}, [](UBehavior_GetClosestPlayer &self, bool value){self.bFriendlyToContext = value ? 1 : 0;})
		.def_property("bEnemyToContext", [](UBehavior_GetClosestPlayer &self){return self.bEnemyToContext;}, [](UBehavior_GetClosestPlayer &self, bool value){self.bEnemyToContext = value ? 1 : 0;})
		.def("PublishBehaviorOutput", &UBehavior_GetClosestPlayer::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_GetClosestPlayer::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GetItemPrice, UBehaviorBase >(m, "UBehavior_GetItemPrice")
		.def_readwrite("Item", &UBehavior_GetItemPrice::Item, py::return_value_policy::reference)
		.def_readwrite("Markup", &UBehavior_GetItemPrice::Markup)
		.def("PublishBehaviorOutput", &UBehavior_GetItemPrice::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_GetItemPrice::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GetPlayerStat, UBehaviorBase >(m, "UBehavior_GetPlayerStat")
		.def_readwrite("StatId", &UBehavior_GetPlayerStat::StatId, py::return_value_policy::reference)
		.def("PublishBehaviorOutput", &UBehavior_GetPlayerStat::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_GetPlayerStat::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GFxMoviePlay, UBehaviorBase >(m, "UBehavior_GFxMoviePlay")
		.def_readwrite("MovieDefinition", &UBehavior_GFxMoviePlay::MovieDefinition, py::return_value_policy::reference)
		.def_readwrite("OtherContext", &UBehavior_GFxMoviePlay::OtherContext, py::return_value_policy::reference)
		.def_readwrite("Tag", &UBehavior_GFxMoviePlay::Tag, py::return_value_policy::reference)
		.def("ResolveController", &UBehavior_GFxMoviePlay::ResolveController, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_GFxMoviePlay::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GFxMovieSetState, UBehaviorBase >(m, "UBehavior_GFxMovieSetState")
		.def_readwrite("StateToChange", &UBehavior_GFxMovieSetState::StateToChange, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_GFxMovieSetState::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GFxMovieStop, UBehaviorBase >(m, "UBehavior_GFxMovieStop")
		.def_readwrite("Tag", &UBehavior_GFxMovieStop::Tag, py::return_value_policy::reference)
		.def("ResolveController", &UBehavior_GFxMovieStop::ResolveController, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_GFxMovieStop::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GiveInjuredPlayerSecondWind, UBehaviorBase >(m, "UBehavior_GiveInjuredPlayerSecondWind")
		.def_property("bDontCountAsKill", [](UBehavior_GiveInjuredPlayerSecondWind &self){return self.bDontCountAsKill;}, [](UBehavior_GiveInjuredPlayerSecondWind &self, bool value){self.bDontCountAsKill = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_GiveInjuredPlayerSecondWind::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_HasMissions, UBehaviorBase >(m, "UBehavior_HasMissions")
		.def("ApplyBehaviorToContext", &UBehavior_HasMissions::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_HeadLookHold, UBehaviorBase >(m, "UBehavior_HeadLookHold")
		.def_readwrite("Reason", &UBehavior_HeadLookHold::Reason, py::return_value_policy::reference)
		.def_readwrite("Action", &UBehavior_HeadLookHold::Action)
		.def("ApplyBehaviorToContext", &UBehavior_HeadLookHold::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_IncrementPlayerStat, UBehaviorBase >(m, "UBehavior_IncrementPlayerStat")
		.def_property("bReplicateToServer", [](UBehavior_IncrementPlayerStat &self){return self.bReplicateToServer;}, [](UBehavior_IncrementPlayerStat &self, bool value){self.bReplicateToServer = value ? 1 : 0;})
		.def_readwrite("StatId", &UBehavior_IncrementPlayerStat::StatId, py::return_value_policy::reference)
		.def_readwrite("IncAmount", &UBehavior_IncrementPlayerStat::IncAmount)
		.def("ResolveController", &UBehavior_IncrementPlayerStat::ResolveController, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_IncrementPlayerStat::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_IsCensoredMode, UBehaviorBase >(m, "UBehavior_IsCensoredMode")
		.def("ApplyBehaviorToContext", &UBehavior_IsCensoredMode::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_IsObjectPlayer, UBehaviorBase >(m, "UBehavior_IsObjectPlayer")
		.def_readwrite("PlayerCandidate", &UBehavior_IsObjectPlayer::PlayerCandidate, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_IsObjectPlayer::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_IsObjectVehicle, UBehaviorBase >(m, "UBehavior_IsObjectVehicle")
		.def_readwrite("VehicleCandidate", &UBehavior_IsObjectVehicle::VehicleCandidate, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_IsObjectVehicle::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_LeaderCommand, UBehaviorBase >(m, "UBehavior_LeaderCommand")
		.def_property("bOverride", [](UBehavior_LeaderCommand &self){return self.bOverride;}, [](UBehavior_LeaderCommand &self, bool value){self.bOverride = value ? 1 : 0;})
		.def_readwrite("Type", &UBehavior_LeaderCommand::Type)
		.def_readwrite("Action", &UBehavior_LeaderCommand::Action)
		.def("ApplyBehaviorToContext", &UBehavior_LeaderCommand::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_LeapAtTarget, UBehaviorBase >(m, "UBehavior_LeapAtTarget")
		;
	py::class_< UBehavior_LocalCustomEvent, UBehaviorBase >(m, "UBehavior_LocalCustomEvent")
		.def_readwrite("CustomEventName", &UBehavior_LocalCustomEvent::CustomEventName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_LocalCustomEvent::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_MakeVector, UBehaviorBase >(m, "UBehavior_MakeVector")
		.def_readwrite("X", &UBehavior_MakeVector::X)
		.def_readwrite("Y", &UBehavior_MakeVector::Y)
		.def_readwrite("Z", &UBehavior_MakeVector::Z)
		.def("eventPublishBehaviorOutput", &UBehavior_MakeVector::eventPublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_MakeVector::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_MissionCustomEvent, UBehaviorBase >(m, "UBehavior_MissionCustomEvent")
		.def_readwrite("RelatedMission", &UBehavior_MissionCustomEvent::RelatedMission, py::return_value_policy::reference)
		.def_readwrite("EventName", &UBehavior_MissionCustomEvent::EventName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_MissionCustomEvent::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_NetworkRoleSwitch, UBehaviorBase >(m, "UBehavior_NetworkRoleSwitch")
		.def("ApplyBehaviorToContext", &UBehavior_NetworkRoleSwitch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_NotifyThoughtLockStatus, UBehaviorBase >(m, "UBehavior_NotifyThoughtLockStatus")
		.def_property("bClearThoughtlock", [](UBehavior_NotifyThoughtLockStatus &self){return self.bClearThoughtlock;}, [](UBehavior_NotifyThoughtLockStatus &self, bool value){self.bClearThoughtlock = value ? 1 : 0;})
		.def_readwrite("InstigatingPlayer", &UBehavior_NotifyThoughtLockStatus::InstigatingPlayer, py::return_value_policy::reference)
		.def("eventApplyBehaviorToContext", &UBehavior_NotifyThoughtLockStatus::eventApplyBehaviorToContext)
		;
	py::class_< UBehavior_ObjectClassSwitch, UBehaviorBase >(m, "UBehavior_ObjectClassSwitch")
		.def_readwrite("ObjectClassName", &UBehavior_ObjectClassSwitch::ObjectClassName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ObjectClassSwitch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_OpinionSwitch, UBehaviorBase >(m, "UBehavior_OpinionSwitch")
		.def_readwrite("Other", &UBehavior_OpinionSwitch::Other, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_OpinionSwitch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_OverrideWeaponCrosshair, UBehaviorBase >(m, "UBehavior_OverrideWeaponCrosshair")
		.def_readwrite("CrosshairFrame", &UBehavior_OverrideWeaponCrosshair::CrosshairFrame, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_OverrideWeaponCrosshair::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PackAttack, UBehaviorBase >(m, "UBehavior_PackAttack")
		;
	py::class_< UBehavior_PawnLeap, UBehaviorBase >(m, "UBehavior_PawnLeap")
		.def_property("bOffsetBasedOnRotation", [](UBehavior_PawnLeap &self){return self.bOffsetBasedOnRotation;}, [](UBehavior_PawnLeap &self, bool value){self.bOffsetBasedOnRotation = value ? 1 : 0;})
		.def_property("bUseTrace", [](UBehavior_PawnLeap &self){return self.bUseTrace;}, [](UBehavior_PawnLeap &self, bool value){self.bUseTrace = value ? 1 : 0;})
		.def_readwrite("LeapSpeed", &UBehavior_PawnLeap::LeapSpeed)
		.def_readwrite("LeapAngle", &UBehavior_PawnLeap::LeapAngle)
		.def_readwrite("OffsetLocation", &UBehavior_PawnLeap::OffsetLocation, py::return_value_policy::reference)
		.def_readwrite("TraceCheckRandomYaw", &UBehavior_PawnLeap::TraceCheckRandomYaw)
		.def_readwrite("TraceCheckPitch", &UBehavior_PawnLeap::TraceCheckPitch)
		.def_readwrite("TraceCheckMaxDistance", &UBehavior_PawnLeap::TraceCheckMaxDistance)
		.def_readwrite("TraceStartOffset", &UBehavior_PawnLeap::TraceStartOffset, py::return_value_policy::reference)
		.def_readwrite("TargetObject", &UBehavior_PawnLeap::TargetObject, py::return_value_policy::reference)
		.def_readwrite("RandomYawOnTarget", &UBehavior_PawnLeap::RandomYawOnTarget)
		.def_readwrite("LeapAnimDef", &UBehavior_PawnLeap::LeapAnimDef, py::return_value_policy::reference)
		.def("FindLandingLocation", &UBehavior_PawnLeap::FindLandingLocation, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_PawnLeap::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PhaseLockHold, UBehaviorBase >(m, "UBehavior_PhaseLockHold")
		.def_readwrite("Reason", &UBehavior_PhaseLockHold::Reason, py::return_value_policy::reference)
		.def_readwrite("Action", &UBehavior_PhaseLockHold::Action)
		.def("ApplyBehaviorToContext", &UBehavior_PhaseLockHold::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PhysXLevel, UBehaviorBase >(m, "UBehavior_PhysXLevel")
		.def("ApplyBehaviorToContext", &UBehavior_PhysXLevel::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PlayAIMissionContextDialog, UBehaviorBase >(m, "UBehavior_PlayAIMissionContextDialog")
		.def_readwrite("PlayerWhoUsedMe", &UBehavior_PlayAIMissionContextDialog::PlayerWhoUsedMe, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_PlayAIMissionContextDialog::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PlayAnimation, UBehaviorBase >(m, "UBehavior_PlayAnimation")
		.def_readwrite("AnimName", &UBehavior_PlayAnimation::AnimName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_PlayAnimation::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PlayHardFlinch, UBehaviorBase >(m, "UBehavior_PlayHardFlinch")
		.def_readwrite("HitLocation", &UBehavior_PlayHardFlinch::HitLocation, py::return_value_policy::reference)
		.def_readwrite("InstigatedBy", &UBehavior_PlayHardFlinch::InstigatedBy, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_PlayHardFlinch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PlayMultipleExplosionsSound, UBehaviorBase >(m, "UBehavior_PlayMultipleExplosionsSound")
		.def_property("bReplicate", [](UBehavior_PlayMultipleExplosionsSound &self){return self.bReplicate;}, [](UBehavior_PlayMultipleExplosionsSound &self, bool value){self.bReplicate = value ? 1 : 0;})
		.def_readwrite("Definition", &UBehavior_PlayMultipleExplosionsSound::Definition, py::return_value_policy::reference)
		.def_readwrite("OverrideContext", &UBehavior_PlayMultipleExplosionsSound::OverrideContext, py::return_value_policy::reference)
		.def_readwrite("OverrideName", &UBehavior_PlayMultipleExplosionsSound::OverrideName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_PlayMultipleExplosionsSound::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PostAkEventGetRTPC, UBehavior_PostAkEvent >(m, "UBehavior_PostAkEventGetRTPC")
		.def_property("bIsRegistered", [](UBehavior_PostAkEventGetRTPC &self){return self.bIsRegistered;}, [](UBehavior_PostAkEventGetRTPC &self, bool value){self.bIsRegistered = value ? 1 : 0;})
		.def_readwrite("RTPC", &UBehavior_PostAkEventGetRTPC::RTPC, py::return_value_policy::reference)
		.def_readwrite("LastValue", &UBehavior_PostAkEventGetRTPC::LastValue)
		.def("PublishBehaviorOutput", &UBehavior_PostAkEventGetRTPC::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_PostAkEventGetRTPC::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PostProcessChain, UBehaviorBase >(m, "UBehavior_PostProcessChain")
		.def_readwrite("MaterialEffectModifiers", &UBehavior_PostProcessChain::MaterialEffectModifiers, py::return_value_policy::reference)
		.def_readwrite("Action", &UBehavior_PostProcessChain::Action)
		.def_readwrite("Chain", &UBehavior_PostProcessChain::Chain, py::return_value_policy::reference)
		.def_readwrite("DOFEffectModifier", &UBehavior_PostProcessChain::DOFEffectModifier, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_PostProcessChain::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PostProcessChain_LostShield, UBehavior_PostProcessChain >(m, "UBehavior_PostProcessChain_LostShield")
		.def_readwrite("HealthParamName", &UBehavior_PostProcessChain_LostShield::HealthParamName, py::return_value_policy::reference)
		.def_readwrite("MaterialEffectName", &UBehavior_PostProcessChain_LostShield::MaterialEffectName, py::return_value_policy::reference)
		.def_readwrite("UpdateRate", &UBehavior_PostProcessChain_LostShield::UpdateRate)
		.def("ApplyBehaviorToContext", &UBehavior_PostProcessChain_LostShield::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PostProcessOverlay, UBehaviorBase >(m, "UBehavior_PostProcessOverlay")
		.def_readwrite("OverlayParameters", &UBehavior_PostProcessOverlay::OverlayParameters, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_PostProcessOverlay::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_PursueNodeType, UBehaviorBase >(m, "UBehavior_PursueNodeType")
		.def_readwrite("NodeType", &UBehavior_PursueNodeType::NodeType, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_PursueNodeType::ApplyBehaviorToContext)
		;
	py::class_< UIPursuitBehavior, UInterface >(m, "UIPursuitBehavior")
		.def("Behavior_SetPreferredNodeType", &UIPursuitBehavior::Behavior_SetPreferredNodeType)
		;
	py::class_< UBehavior_QueryDayNightCycle, UBehaviorBase >(m, "UBehavior_QueryDayNightCycle")
		.def("ApplyBehaviorToContext", &UBehavior_QueryDayNightCycle::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_QueuePersonalEcho, UBehaviorBase >(m, "UBehavior_QueuePersonalEcho")
		.def_readwrite("PersonalEchoTag", &UBehavior_QueuePersonalEcho::PersonalEchoTag, py::return_value_policy::reference)
		.def_readwrite("DialogGroup", &UBehavior_QueuePersonalEcho::DialogGroup, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_QueuePersonalEcho::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_RadarIcon, UBehaviorBase >(m, "UBehavior_RadarIcon")
		.def_readwrite("IconType", &UBehavior_RadarIcon::IconType)
		.def_readwrite("Action", &UBehavior_RadarIcon::Action)
		.def_readwrite("OverrideDuration", &UBehavior_RadarIcon::OverrideDuration)
		.def("ApplyBehaviorToContext", &UBehavior_RadarIcon::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ReCalculateResourcePoolValues, UBehaviorBase >(m, "UBehavior_ReCalculateResourcePoolValues")
		.def_readwrite("Resource", &UBehavior_ReCalculateResourcePoolValues::Resource, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ReCalculateResourcePoolValues::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_RefillResourcePool, UBehaviorBase >(m, "UBehavior_RefillResourcePool")
		.def_property("bCreatePoolIfNecessary", [](UBehavior_RefillResourcePool &self){return self.bCreatePoolIfNecessary;}, [](UBehavior_RefillResourcePool &self, bool value){self.bCreatePoolIfNecessary = value ? 1 : 0;})
		.def_readwrite("Resource", &UBehavior_RefillResourcePool::Resource, py::return_value_policy::reference)
		.def_readwrite("Percentage", &UBehavior_RefillResourcePool::Percentage, py::return_value_policy::reference)
		.def_readwrite("MaxPercentage", &UBehavior_RefillResourcePool::MaxPercentage, py::return_value_policy::reference)
		.def_readwrite("PercentageContext", &UBehavior_RefillResourcePool::PercentageContext, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_RefillResourcePool::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_RefillWeapon, UBehaviorBase >(m, "UBehavior_RefillWeapon")
		.def("ApplyBehaviorToContext", &UBehavior_RefillWeapon::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_RegisterFastTravelDefinition, UBehaviorBase >(m, "UBehavior_RegisterFastTravelDefinition")
		.def_property("bSetAsLastVisited", [](UBehavior_RegisterFastTravelDefinition &self){return self.bSetAsLastVisited;}, [](UBehavior_RegisterFastTravelDefinition &self, bool value){self.bSetAsLastVisited = value ? 1 : 0;})
		.def_readwrite("StationToRegister", &UBehavior_RegisterFastTravelDefinition::StationToRegister, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_RegisterFastTravelDefinition::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_RegisterTargetable, UBehaviorBase >(m, "UBehavior_RegisterTargetable")
		.def_property("bUnregister", [](UBehavior_RegisterTargetable &self){return self.bUnregister;}, [](UBehavior_RegisterTargetable &self, bool value){self.bUnregister = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_RegisterTargetable::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ReloadComplete, UBehaviorBase >(m, "UBehavior_ReloadComplete")
		.def("ApplyBehaviorToContext", &UBehavior_ReloadComplete::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_RemoveInstanceData, UBehaviorBase >(m, "UBehavior_RemoveInstanceData")
		.def_readwrite("InstanceData", &UBehavior_RemoveInstanceData::InstanceData, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_RemoveInstanceData::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_RemoveInventoryFromStorage, UBehaviorBase >(m, "UBehavior_RemoveInventoryFromStorage")
		.def_readwrite("ItemDef", &UBehavior_RemoveInventoryFromStorage::ItemDef, py::return_value_policy::reference)
		.def_readwrite("WeaponDef", &UBehavior_RemoveInventoryFromStorage::WeaponDef, py::return_value_policy::reference)
		.def_readwrite("InvType", &UBehavior_RemoveInventoryFromStorage::InvType)
		.def_readwrite("Source", &UBehavior_RemoveInventoryFromStorage::Source)
		.def("ApplyBehaviorToContext", &UBehavior_RemoveInventoryFromStorage::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ResetActionSkillCooldown, UBehaviorBase >(m, "UBehavior_ResetActionSkillCooldown")
		.def("ApplyBehaviorToContext", &UBehavior_ResetActionSkillCooldown::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ResetHitRegionHealth, UBehaviorBase >(m, "UBehavior_ResetHitRegionHealth")
		.def_readwrite("HitRegion", &UBehavior_ResetHitRegionHealth::HitRegion, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ResetHitRegionHealth::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_RotatePawn, UBehaviorBase >(m, "UBehavior_RotatePawn")
		.def_property("bYawOnly", [](UBehavior_RotatePawn &self){return self.bYawOnly;}, [](UBehavior_RotatePawn &self, bool value){self.bYawOnly = value ? 1 : 0;})
		.def_readwrite("RotateDirection", &UBehavior_RotatePawn::RotateDirection, py::return_value_policy::reference)
		.def_readwrite("Time", &UBehavior_RotatePawn::Time)
		.def("ApplyBehaviorToContext", &UBehavior_RotatePawn::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_RuleEvent, UBehaviorBase >(m, "UBehavior_RuleEvent")
		;
	py::class_< UBehavior_RunBehaviorAlias, UBehaviorBase >(m, "UBehavior_RunBehaviorAlias")
		.def_readwrite("BehaviorAlias", &UBehavior_RunBehaviorAlias::BehaviorAlias, py::return_value_policy::reference)
		.def_readwrite("AliasSelfContext", &UBehavior_RunBehaviorAlias::AliasSelfContext, py::return_value_policy::reference)
		.def_readwrite("AliasMyInstigatorContext", &UBehavior_RunBehaviorAlias::AliasMyInstigatorContext, py::return_value_policy::reference)
		.def_readwrite("AliasOtherEventParticipantContext", &UBehavior_RunBehaviorAlias::AliasOtherEventParticipantContext, py::return_value_policy::reference)
		;
	py::class_< UBehaviorAliasDefinition, UGBXDefinition >(m, "UBehaviorAliasDefinition")
		.def_readwrite("FallbackBehaviors", &UBehaviorAliasDefinition::FallbackBehaviors, py::return_value_policy::reference)
		;
	py::class_< UBehavior_SelectPhaselockTarget, UBehaviorBase >(m, "UBehavior_SelectPhaselockTarget")
		.def_readwrite("LifterSkillContext", &UBehavior_SelectPhaselockTarget::LifterSkillContext, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SelectPhaselockTarget::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SendMessageToPlayers, UBehaviorBase >(m, "UBehavior_SendMessageToPlayers")
		.def_property("bShouldSendToInstigator", [](UBehavior_SendMessageToPlayers &self){return self.bShouldSendToInstigator;}, [](UBehavior_SendMessageToPlayers &self, bool value){self.bShouldSendToInstigator = value ? 1 : 0;})
		.def_readwrite("SendMsgClass", &UBehavior_SendMessageToPlayers::SendMsgClass, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SendMessageToPlayers::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetAIFlag, UBehaviorBase >(m, "UBehavior_SetAIFlag")
		.def_property("FlagValue", [](UBehavior_SetAIFlag &self){return self.FlagValue;}, [](UBehavior_SetAIFlag &self, bool value){self.FlagValue = value ? 1 : 0;})
		.def_readwrite("FlagDef", &UBehavior_SetAIFlag::FlagDef, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetAIFlag::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetAlternateVertexWeight, UBehaviorBase >(m, "UBehavior_SetAlternateVertexWeight")
		.def_readwrite("BoneName", &UBehavior_SetAlternateVertexWeight::BoneName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetAlternateVertexWeight::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetAnimSwitchNode, UBehaviorBase >(m, "UBehavior_SetAnimSwitchNode")
		.def_readwrite("AnimNodeName", &UBehavior_SetAnimSwitchNode::AnimNodeName, py::return_value_policy::reference)
		.def_readwrite("Switch", &UBehavior_SetAnimSwitchNode::Switch, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetAnimSwitchNode::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetAnimTree, UBehaviorBase >(m, "UBehavior_SetAnimTree")
		.def_readwrite("AnimTreeTemplate", &UBehavior_SetAnimTree::AnimTreeTemplate, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetAnimTree::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetBeingHealed, UBehaviorBase >(m, "UBehavior_SetBeingHealed")
		.def_property("bBeingHealed", [](UBehavior_SetBeingHealed &self){return self.bBeingHealed;}, [](UBehavior_SetBeingHealed &self, bool value){self.bBeingHealed = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_SetBeingHealed::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetChallengeCompleted, UBehaviorBase >(m, "UBehavior_SetChallengeCompleted")
		.def_property("bForAllPlayers", [](UBehavior_SetChallengeCompleted &self){return self.bForAllPlayers;}, [](UBehavior_SetChallengeCompleted &self, bool value){self.bForAllPlayers = value ? 1 : 0;})
		.def_readwrite("UnlockForPlayer", &UBehavior_SetChallengeCompleted::UnlockForPlayer, py::return_value_policy::reference)
		.def_readwrite("ChallengeDef", &UBehavior_SetChallengeCompleted::ChallengeDef, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetChallengeCompleted::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetCleanupParameters, UBehaviorBase >(m, "UBehavior_SetCleanupParameters")
		.def_readwrite("MaxLifetime", &UBehavior_SetCleanupParameters::MaxLifetime)
		.def("eventApplyBehaviorToContext", &UBehavior_SetCleanupParameters::eventApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetCompassIcon, UBehaviorBase >(m, "UBehavior_SetCompassIcon")
		.def_readwrite("CompassIcon", &UBehavior_SetCompassIcon::CompassIcon)
		.def("ApplyBehaviorToContext", &UBehavior_SetCompassIcon::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetDeathDefinition, UBehaviorBase >(m, "UBehavior_SetDeathDefinition")
		.def_readwrite("NewDeathDefinition", &UBehavior_SetDeathDefinition::NewDeathDefinition, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetDeathDefinition::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetDiscardRootMotion, UBehaviorBase >(m, "UBehavior_SetDiscardRootMotion")
		.def_property("bDiscardRootMotion", [](UBehavior_SetDiscardRootMotion &self){return self.bDiscardRootMotion;}, [](UBehavior_SetDiscardRootMotion &self, bool value){self.bDiscardRootMotion = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_SetDiscardRootMotion::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetDualWieldBlendState, UBehaviorBase >(m, "UBehavior_SetDualWieldBlendState")
		.def_property("bEnabled", [](UBehavior_SetDualWieldBlendState &self){return self.bEnabled;}, [](UBehavior_SetDualWieldBlendState &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def_property("bApplyToFirstPerson", [](UBehavior_SetDualWieldBlendState &self){return self.bApplyToFirstPerson;}, [](UBehavior_SetDualWieldBlendState &self, bool value){self.bApplyToFirstPerson = value ? 1 : 0;})
		.def_property("bApplyToThirdPerson", [](UBehavior_SetDualWieldBlendState &self){return self.bApplyToThirdPerson;}, [](UBehavior_SetDualWieldBlendState &self, bool value){self.bApplyToThirdPerson = value ? 1 : 0;})
		.def_readwrite("BlendTime", &UBehavior_SetDualWieldBlendState::BlendTime)
		.def("ApplyBehaviorToContext", &UBehavior_SetDualWieldBlendState::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetElevatorButtonGlowing, UBehaviorBase >(m, "UBehavior_SetElevatorButtonGlowing")
		.def_property("bEnableGlow", [](UBehavior_SetElevatorButtonGlowing &self){return self.bEnableGlow;}, [](UBehavior_SetElevatorButtonGlowing &self, bool value){self.bEnableGlow = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_SetElevatorButtonGlowing::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetExtraImpactEffect, UBehaviorBase >(m, "UBehavior_SetExtraImpactEffect")
		.def_readwrite("BulletFromClip", &UBehavior_SetExtraImpactEffect::BulletFromClip)
		.def_readwrite("ImpactDefinition", &UBehavior_SetExtraImpactEffect::ImpactDefinition, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetExtraImpactEffect::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetExtraMuzzleEffect, UBehaviorBase >(m, "UBehavior_SetExtraMuzzleEffect")
		.def_readwrite("BulletFromClip", &UBehavior_SetExtraMuzzleEffect::BulletFromClip)
		.def_readwrite("Effect", &UBehavior_SetExtraMuzzleEffect::Effect, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetExtraMuzzleEffect::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetGodMode, UBehaviorBase >(m, "UBehavior_SetGodMode")
		.def_property("bNonCheatGodMode", [](UBehavior_SetGodMode &self){return self.bNonCheatGodMode;}, [](UBehavior_SetGodMode &self, bool value){self.bNonCheatGodMode = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_SetGodMode::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetHardAttach, UBehaviorBase >(m, "UBehavior_SetHardAttach")
		.def_property("bHardAttach", [](UBehavior_SetHardAttach &self){return self.bHardAttach;}, [](UBehavior_SetHardAttach &self, bool value){self.bHardAttach = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_SetHardAttach::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetInfoBarVisibility, UBehaviorBase >(m, "UBehavior_SetInfoBarVisibility")
		.def_property("bVisible", [](UBehavior_SetInfoBarVisibility &self){return self.bVisible;}, [](UBehavior_SetInfoBarVisibility &self, bool value){self.bVisible = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_SetInfoBarVisibility::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetJackVoiceModulatorState, UBehaviorBase >(m, "UBehavior_SetJackVoiceModulatorState")
		.def_property("bEnable", [](UBehavior_SetJackVoiceModulatorState &self){return self.bEnable;}, [](UBehavior_SetJackVoiceModulatorState &self, bool value){self.bEnable = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_SetJackVoiceModulatorState::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetLookAtSpeed, UBehaviorBase >(m, "UBehavior_SetLookAtSpeed")
		.def_readwrite("Action", &UBehavior_SetLookAtSpeed::Action)
		.def_readwrite("OverrideSpeed", &UBehavior_SetLookAtSpeed::OverrideSpeed)
		.def("ApplyBehaviorToContext", &UBehavior_SetLookAtSpeed::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetMaterialScalarFade, UBehaviorBase >(m, "UBehavior_SetMaterialScalarFade")
		.def_readwrite("ScalarName", &UBehavior_SetMaterialScalarFade::ScalarName, py::return_value_policy::reference)
		.def_readwrite("StartValue", &UBehavior_SetMaterialScalarFade::StartValue, py::return_value_policy::reference)
		.def_readwrite("EndValue", &UBehavior_SetMaterialScalarFade::EndValue, py::return_value_policy::reference)
		.def_readwrite("FadeTime", &UBehavior_SetMaterialScalarFade::FadeTime, py::return_value_policy::reference)
		.def("StartFade", &UBehavior_SetMaterialScalarFade::StartFade)
		.def("ApplyBehaviorToContext", &UBehavior_SetMaterialScalarFade::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetMaterialScalarFadeForGoreDeath, UBehavior_SetMaterialScalarFade >(m, "UBehavior_SetMaterialScalarFadeForGoreDeath")
		.def_property("bDestroyActorAfterGoreEffect", [](UBehavior_SetMaterialScalarFadeForGoreDeath &self){return self.bDestroyActorAfterGoreEffect;}, [](UBehavior_SetMaterialScalarFadeForGoreDeath &self, bool value){self.bDestroyActorAfterGoreEffect = value ? 1 : 0;})
		.def("StartFade", &UBehavior_SetMaterialScalarFadeForGoreDeath::StartFade)
		;
	py::class_< UBehavior_SetMorphNodeWeight, UBehaviorBase >(m, "UBehavior_SetMorphNodeWeight")
		.def_readwrite("MorphNodeName", &UBehavior_SetMorphNodeWeight::MorphNodeName, py::return_value_policy::reference)
		.def_readwrite("WeightTarget", &UBehavior_SetMorphNodeWeight::WeightTarget)
		.def_readwrite("WeightBlendTime", &UBehavior_SetMorphNodeWeight::WeightBlendTime)
		.def("ApplyBehaviorToContext", &UBehavior_SetMorphNodeWeight::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetNumBankSlots, UBehaviorBase >(m, "UBehavior_SetNumBankSlots")
		.def_readwrite("NewBankSlotCount", &UBehavior_SetNumBankSlots::NewBankSlotCount)
		.def("ApplyBehaviorToContext", &UBehavior_SetNumBankSlots::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetPawnThrottleData, UBehaviorBase >(m, "UBehavior_SetPawnThrottleData")
		.def_property("bSkipWhileIdle", [](UBehavior_SetPawnThrottleData &self){return self.bSkipWhileIdle;}, [](UBehavior_SetPawnThrottleData &self, bool value){self.bSkipWhileIdle = value ? 1 : 0;})
		.def_readwrite("FullThrottleDistance", &UBehavior_SetPawnThrottleData::FullThrottleDistance)
		.def_readwrite("FullThrottleTime", &UBehavior_SetPawnThrottleData::FullThrottleTime)
		.def_readwrite("MinThrottleDistance", &UBehavior_SetPawnThrottleData::MinThrottleDistance)
		.def_readwrite("MaxThrottleDistance", &UBehavior_SetPawnThrottleData::MaxThrottleDistance)
		.def_readwrite("MinThrottleTime", &UBehavior_SetPawnThrottleData::MinThrottleTime)
		.def_readwrite("MaxThrottleTime", &UBehavior_SetPawnThrottleData::MaxThrottleTime)
		.def("ApplyBehaviorToContext", &UBehavior_SetPawnThrottleData::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetRuleSet, UBehaviorBase >(m, "UBehavior_SetRuleSet")
		;
	py::class_< UBehavior_SetRuleSetByName, UBehaviorBase >(m, "UBehavior_SetRuleSetByName")
		;
	py::class_< UBehavior_SetShieldColor, UBehaviorBase >(m, "UBehavior_SetShieldColor")
		.def_property("bResetShieldToDefaultColor", [](UBehavior_SetShieldColor &self){return self.bResetShieldToDefaultColor;}, [](UBehavior_SetShieldColor &self, bool value){self.bResetShieldToDefaultColor = value ? 1 : 0;})
		.def_readwrite("NewShieldColor", &UBehavior_SetShieldColor::NewShieldColor, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetShieldColor::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetSkelControlLookAtActor, UBehaviorBase >(m, "UBehavior_SetSkelControlLookAtActor")
		.def_readwrite("SkelControlName", &UBehavior_SetSkelControlLookAtActor::SkelControlName, py::return_value_policy::reference)
		.def_readwrite("TargetContext", &UBehavior_SetSkelControlLookAtActor::TargetContext, py::return_value_policy::reference)
		.def_readwrite("Offset", &UBehavior_SetSkelControlLookAtActor::Offset, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetSkelControlLookAtActor::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetSkelControlSingleBoneData, UBehaviorBase >(m, "UBehavior_SetSkelControlSingleBoneData")
		.def_readwrite("SkelControlName", &UBehavior_SetSkelControlSingleBoneData::SkelControlName, py::return_value_policy::reference)
		.def_readwrite("BoneTranslation", &UBehavior_SetSkelControlSingleBoneData::BoneTranslation, py::return_value_policy::reference)
		.def_readwrite("BoneRotation", &UBehavior_SetSkelControlSingleBoneData::BoneRotation, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetSkelControlSingleBoneData::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetSkelControlTurretConstrainedValues, UBehaviorBase >(m, "UBehavior_SetSkelControlTurretConstrainedValues")
		.def_property("bConstrainPitch", [](UBehavior_SetSkelControlTurretConstrainedValues &self){return self.bConstrainPitch;}, [](UBehavior_SetSkelControlTurretConstrainedValues &self, bool value){self.bConstrainPitch = value ? 1 : 0;})
		.def_property("bConstrainYaw", [](UBehavior_SetSkelControlTurretConstrainedValues &self){return self.bConstrainYaw;}, [](UBehavior_SetSkelControlTurretConstrainedValues &self, bool value){self.bConstrainYaw = value ? 1 : 0;})
		.def_property("bConstrainRoll", [](UBehavior_SetSkelControlTurretConstrainedValues &self){return self.bConstrainRoll;}, [](UBehavior_SetSkelControlTurretConstrainedValues &self, bool value){self.bConstrainRoll = value ? 1 : 0;})
		.def_property("bInvertPitch", [](UBehavior_SetSkelControlTurretConstrainedValues &self){return self.bInvertPitch;}, [](UBehavior_SetSkelControlTurretConstrainedValues &self, bool value){self.bInvertPitch = value ? 1 : 0;})
		.def_property("bInvertYaw", [](UBehavior_SetSkelControlTurretConstrainedValues &self){return self.bInvertYaw;}, [](UBehavior_SetSkelControlTurretConstrainedValues &self, bool value){self.bInvertYaw = value ? 1 : 0;})
		.def_property("bInvertRoll", [](UBehavior_SetSkelControlTurretConstrainedValues &self){return self.bInvertRoll;}, [](UBehavior_SetSkelControlTurretConstrainedValues &self, bool value){self.bInvertRoll = value ? 1 : 0;})
		.def_readwrite("SkelControlName", &UBehavior_SetSkelControlTurretConstrainedValues::SkelControlName, py::return_value_policy::reference)
		.def_readwrite("MaxAngle", &UBehavior_SetSkelControlTurretConstrainedValues::MaxAngle, py::return_value_policy::reference)
		.def_readwrite("MinAngle", &UBehavior_SetSkelControlTurretConstrainedValues::MinAngle, py::return_value_policy::reference)
		.def_readwrite("LagDegreesPerSecondYaw", &UBehavior_SetSkelControlTurretConstrainedValues::LagDegreesPerSecondYaw)
		.def_readwrite("LagDegreesPerSecondPitch", &UBehavior_SetSkelControlTurretConstrainedValues::LagDegreesPerSecondPitch)
		.def_readwrite("LagDegreesPerSecondRoll", &UBehavior_SetSkelControlTurretConstrainedValues::LagDegreesPerSecondRoll)
		.def("ApplyBehaviorToContext", &UBehavior_SetSkelControlTurretConstrainedValues::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetStance, UBehaviorBase >(m, "UBehavior_SetStance")
		.def_readwrite("SetType", &UBehavior_SetStance::SetType)
		.def_readwrite("StanceType", &UBehavior_SetStance::StanceType, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetStance::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetTimeOfDay, UBehaviorBase >(m, "UBehavior_SetTimeOfDay")
		.def_readwrite("TimeOfDay", &UBehavior_SetTimeOfDay::TimeOfDay)
		.def("ApplyBehaviorToContext", &UBehavior_SetTimeOfDay::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetUsabilityByMissionDirectives, UBehaviorBase >(m, "UBehavior_SetUsabilityByMissionDirectives")
		.def_readwrite("ChangeUsability", &UBehavior_SetUsabilityByMissionDirectives::ChangeUsability)
		.def("ApplyBehaviorToContext", &UBehavior_SetUsabilityByMissionDirectives::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetUsabilityCost, UBehaviorBase >(m, "UBehavior_SetUsabilityCost")
		.def_readwrite("ChangeCost", &UBehavior_SetUsabilityCost::ChangeCost)
		.def_readwrite("CostCurrencyType", &UBehavior_SetUsabilityCost::CostCurrencyType)
		.def_readwrite("UsabilityType", &UBehavior_SetUsabilityCost::UsabilityType)
		.def_readwrite("CostAmount", &UBehavior_SetUsabilityCost::CostAmount)
		.def("ApplyBehaviorToContext", &UBehavior_SetUsabilityCost::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetUsableIcon, UBehaviorBase >(m, "UBehavior_SetUsableIcon")
		.def_readwrite("Icon", &UBehavior_SetUsableIcon::Icon, py::return_value_policy::reference)
		.def_readwrite("UsabilityType", &UBehavior_SetUsableIcon::UsabilityType)
		.def("ApplyBehaviorToContext", &UBehavior_SetUsableIcon::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetVehicleSimObject, UBehaviorBase >(m, "UBehavior_SetVehicleSimObject")
		.def_readwrite("SimObjTemplate", &UBehavior_SetVehicleSimObject::SimObjTemplate, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetVehicleSimObject::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ShowGenericReviveMessage, UBehaviorBase >(m, "UBehavior_ShowGenericReviveMessage")
		.def_readwrite("ReviveMessageDef", &UBehavior_ShowGenericReviveMessage::ReviveMessageDef, py::return_value_policy::reference)
		.def_readwrite("OtherPlayer", &UBehavior_ShowGenericReviveMessage::OtherPlayer, py::return_value_policy::reference)
		.def("ResolveController", &UBehavior_ShowGenericReviveMessage::ResolveController, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ShowGenericReviveMessage::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ShowMissionInterface, UBehaviorBase >(m, "UBehavior_ShowMissionInterface")
		.def("ResolveController", &UBehavior_ShowMissionInterface::ResolveController, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ShowMissionInterface::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ShowSelfAsTarget, UBehaviorBase >(m, "UBehavior_ShowSelfAsTarget")
		.def_property("ControllersOnly", [](UBehavior_ShowSelfAsTarget &self){return self.ControllersOnly;}, [](UBehavior_ShowSelfAsTarget &self, bool value){self.ControllersOnly = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_ShowSelfAsTarget::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SimpleAnimPlay, UBehaviorBase >(m, "UBehavior_SimpleAnimPlay")
		.def_readwrite("Tree", &UBehavior_SimpleAnimPlay::Tree, py::return_value_policy::reference)
		.def_readwrite("AnimName", &UBehavior_SimpleAnimPlay::AnimName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SimpleAnimPlay::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SimpleAnimStop, UBehaviorBase >(m, "UBehavior_SimpleAnimStop")
		.def_readwrite("Tree", &UBehavior_SimpleAnimStop::Tree, py::return_value_policy::reference)
		.def_readwrite("AnimName", &UBehavior_SimpleAnimStop::AnimName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SimpleAnimStop::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpawnActor, UBehaviorBase >(m, "UBehavior_SpawnActor")
		.def_property("bSaveReference", [](UBehavior_SpawnActor &self){return self.bSaveReference;}, [](UBehavior_SpawnActor &self, bool value){self.bSaveReference = value ? 1 : 0;})
		.def_property("bDeleteByOwner", [](UBehavior_SpawnActor &self){return self.bDeleteByOwner;}, [](UBehavior_SpawnActor &self, bool value){self.bDeleteByOwner = value ? 1 : 0;})
		.def_property("bAttachToContext", [](UBehavior_SpawnActor &self){return self.bAttachToContext;}, [](UBehavior_SpawnActor &self, bool value){self.bAttachToContext = value ? 1 : 0;})
		.def_readwrite("SavedReferenceName", &UBehavior_SpawnActor::SavedReferenceName, py::return_value_policy::reference)
		.def_readwrite("InstanceDataContext", &UBehavior_SpawnActor::InstanceDataContext, py::return_value_policy::reference)
		.def_readwrite("ActorTemplate", &UBehavior_SpawnActor::ActorTemplate, py::return_value_policy::reference)
		.def_readwrite("AttachmentPointName", &UBehavior_SpawnActor::AttachmentPointName, py::return_value_policy::reference)
		.def_readwrite("RelativeLocation", &UBehavior_SpawnActor::RelativeLocation, py::return_value_policy::reference)
		.def_readwrite("RelativeRotation", &UBehavior_SpawnActor::RelativeRotation, py::return_value_policy::reference)
		.def_readwrite("SpawnDirection", &UBehavior_SpawnActor::SpawnDirection)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnActor::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpawnDecal, UBehaviorBase >(m, "UBehavior_SpawnDecal")
		.def_readwrite("Material", &UBehavior_SpawnDecal::Material, py::return_value_policy::reference)
		.def_readwrite("BoneName", &UBehavior_SpawnDecal::BoneName, py::return_value_policy::reference)
		.def_readwrite("AlignToAxis", &UBehavior_SpawnDecal::AlignToAxis)
		.def_readwrite("Size", &UBehavior_SpawnDecal::Size)
		.def_readwrite("SpawnRotation", &UBehavior_SpawnDecal::SpawnRotation, py::return_value_policy::reference)
		.def_readwrite("SpawnLocation", &UBehavior_SpawnDecal::SpawnLocation, py::return_value_policy::reference)
		.def_readwrite("Thickness", &UBehavior_SpawnDecal::Thickness)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnDecal::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpawnFromVehicleSpawnStation, UBehaviorBase >(m, "UBehavior_SpawnFromVehicleSpawnStation")
		.def("ApplyBehaviorToContext", &UBehavior_SpawnFromVehicleSpawnStation::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpawnItems, UBehaviorBase >(m, "UBehavior_SpawnItems")
		.def_property("bDisablePickups", [](UBehavior_SpawnItems &self){return self.bDisablePickups;}, [](UBehavior_SpawnItems &self, bool value){self.bDisablePickups = value ? 1 : 0;})
		.def_property("bCircularScatter", [](UBehavior_SpawnItems &self){return self.bCircularScatter;}, [](UBehavior_SpawnItems &self, bool value){self.bCircularScatter = value ? 1 : 0;})
		.def_property("bTorque", [](UBehavior_SpawnItems &self){return self.bTorque;}, [](UBehavior_SpawnItems &self, bool value){self.bTorque = value ? 1 : 0;})
		.def_property("bSavePickup", [](UBehavior_SpawnItems &self){return self.bSavePickup;}, [](UBehavior_SpawnItems &self, bool value){self.bSavePickup = value ? 1 : 0;})
		.def_readwrite("ItemDropOffset", &UBehavior_SpawnItems::ItemDropOffset, py::return_value_policy::reference)
		.def_readwrite("ItemDropVelocity", &UBehavior_SpawnItems::ItemDropVelocity, py::return_value_policy::reference)
		.def_readwrite("ItemScatterOffset", &UBehavior_SpawnItems::ItemScatterOffset, py::return_value_policy::reference)
		.def_readwrite("ExpLevel", &UBehavior_SpawnItems::ExpLevel)
		.def_readwrite("InstanceDataName", &UBehavior_SpawnItems::InstanceDataName, py::return_value_policy::reference)
		.def_readwrite("ItemPoolList", &UBehavior_SpawnItems::ItemPoolList, py::return_value_policy::reference)
		.def_readwrite("ItemPoolIncludedLists", &UBehavior_SpawnItems::ItemPoolIncludedLists, py::return_value_policy::reference)
		.def_readwrite("AttachmentPointNames", &UBehavior_SpawnItems::AttachmentPointNames, py::return_value_policy::reference)
		.def_readwrite("Torque", &UBehavior_SpawnItems::Torque, py::return_value_policy::reference)
		.def_readwrite("ItemSpawnSocket", &UBehavior_SpawnItems::ItemSpawnSocket, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnItems::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpawnLoot, UBehaviorBase >(m, "UBehavior_SpawnLoot")
		.def_property("bIncludeLootFromLootableContext", [](UBehavior_SpawnLoot &self){return self.bIncludeLootFromLootableContext;}, [](UBehavior_SpawnLoot &self, bool value){self.bIncludeLootFromLootableContext = value ? 1 : 0;})
		.def_property("bTorque", [](UBehavior_SpawnLoot &self){return self.bTorque;}, [](UBehavior_SpawnLoot &self, bool value){self.bTorque = value ? 1 : 0;})
		.def_readwrite("ItemPools", &UBehavior_SpawnLoot::ItemPools, py::return_value_policy::reference)
		.def_readwrite("Torque", &UBehavior_SpawnLoot::Torque, py::return_value_policy::reference)
		.def("GetOrientationFromContextObject", &UBehavior_SpawnLoot::GetOrientationFromContextObject)
		.def("GetLocationFromContextObject", &UBehavior_SpawnLoot::GetLocationFromContextObject)
		.def("PlaceSpawnedItems", &UBehavior_SpawnLoot::PlaceSpawnedItems)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnLoot::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpawnLootAroundPoint, UBehavior_SpawnLoot >(m, "UBehavior_SpawnLootAroundPoint")
		.def_readwrite("CustomLocation", &UBehavior_SpawnLootAroundPoint::CustomLocation, py::return_value_policy::reference)
		.def_readwrite("CircularScatterRadius", &UBehavior_SpawnLootAroundPoint::CircularScatterRadius)
		.def_readwrite("SpawnVelocity", &UBehavior_SpawnLootAroundPoint::SpawnVelocity, py::return_value_policy::reference)
		.def_readwrite("SpawnVelocityRelativeTo", &UBehavior_SpawnLootAroundPoint::SpawnVelocityRelativeTo)
		.def("ScatterItem", &UBehavior_SpawnLootAroundPoint::ScatterItem)
		.def("PlaceSpawnedItems", &UBehavior_SpawnLootAroundPoint::PlaceSpawnedItems)
		;
	py::class_< UBehavior_SpawnLootAtPoints, UBehavior_SpawnLoot >(m, "UBehavior_SpawnLootAtPoints")
		.def_property("bAttachToSpawnPoints", [](UBehavior_SpawnLootAtPoints &self){return self.bAttachToSpawnPoints;}, [](UBehavior_SpawnLootAtPoints &self, bool value){self.bAttachToSpawnPoints = value ? 1 : 0;})
		.def_property("bDisablePickups", [](UBehavior_SpawnLootAtPoints &self){return self.bDisablePickups;}, [](UBehavior_SpawnLootAtPoints &self, bool value){self.bDisablePickups = value ? 1 : 0;})
		.def_readwrite("SpawnPoints", &UBehavior_SpawnLootAtPoints::SpawnPoints, py::return_value_policy::reference)
		.def_readwrite("SpawnVelocity", &UBehavior_SpawnLootAtPoints::SpawnVelocity, py::return_value_policy::reference)
		.def_readwrite("SpawnVelocityRelativeTo", &UBehavior_SpawnLootAtPoints::SpawnVelocityRelativeTo)
		.def_readwrite("NextSpawnPointIndex", &UBehavior_SpawnLootAtPoints::NextSpawnPointIndex)
		.def("GetNextSpawnPointIndex", &UBehavior_SpawnLootAtPoints::GetNextSpawnPointIndex)
		.def("DropItemFromSpawnPoint", &UBehavior_SpawnLootAtPoints::DropItemFromSpawnPoint)
		.def("AttachItemToSpawnPoint", &UBehavior_SpawnLootAtPoints::AttachItemToSpawnPoint)
		.def("PlaceSpawnedItems", &UBehavior_SpawnLootAtPoints::PlaceSpawnedItems)
		;
	py::class_< UBehavior_SpawnParticleSystemAtWorldLocation, UBehaviorBase >(m, "UBehavior_SpawnParticleSystemAtWorldLocation")
		.def_property("bSaveParticleReference", [](UBehavior_SpawnParticleSystemAtWorldLocation &self){return self.bSaveParticleReference;}, [](UBehavior_SpawnParticleSystemAtWorldLocation &self, bool value){self.bSaveParticleReference = value ? 1 : 0;})
		.def_property("bUseClientPrediction", [](UBehavior_SpawnParticleSystemAtWorldLocation &self){return self.bUseClientPrediction;}, [](UBehavior_SpawnParticleSystemAtWorldLocation &self, bool value){self.bUseClientPrediction = value ? 1 : 0;})
		.def_property("bDeleteByOwner", [](UBehavior_SpawnParticleSystemAtWorldLocation &self){return self.bDeleteByOwner;}, [](UBehavior_SpawnParticleSystemAtWorldLocation &self, bool value){self.bDeleteByOwner = value ? 1 : 0;})
		.def_property("bReplicateEmitter", [](UBehavior_SpawnParticleSystemAtWorldLocation &self){return self.bReplicateEmitter;}, [](UBehavior_SpawnParticleSystemAtWorldLocation &self, bool value){self.bReplicateEmitter = value ? 1 : 0;})
		.def_property("bHideEffectFromOwner", [](UBehavior_SpawnParticleSystemAtWorldLocation &self){return self.bHideEffectFromOwner;}, [](UBehavior_SpawnParticleSystemAtWorldLocation &self, bool value){self.bHideEffectFromOwner = value ? 1 : 0;})
		.def_readwrite("InstanceDataContext", &UBehavior_SpawnParticleSystemAtWorldLocation::InstanceDataContext, py::return_value_policy::reference)
		.def_readwrite("SavedReferenceName", &UBehavior_SpawnParticleSystemAtWorldLocation::SavedReferenceName, py::return_value_policy::reference)
		.def_readwrite("ParticleEffect", &UBehavior_SpawnParticleSystemAtWorldLocation::ParticleEffect, py::return_value_policy::reference)
		.def_readwrite("Location", &UBehavior_SpawnParticleSystemAtWorldLocation::Location, py::return_value_policy::reference)
		.def_readwrite("Direction", &UBehavior_SpawnParticleSystemAtWorldLocation::Direction, py::return_value_policy::reference)
		.def_readwrite("DrawScale", &UBehavior_SpawnParticleSystemAtWorldLocation::DrawScale)
		.def("PublishBehaviorOutput", &UBehavior_SpawnParticleSystemAtWorldLocation::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnParticleSystemAtWorldLocation::ApplyBehaviorToContext)
		.def("GetEmitterClass", &UBehavior_SpawnParticleSystemAtWorldLocation::GetEmitterClass, py::return_value_policy::reference)
		;
	py::class_< UBehavior_SpawnPerch, UBehaviorBase >(m, "UBehavior_SpawnPerch")
		.def_readwrite("AttachPoint", &UBehavior_SpawnPerch::AttachPoint, py::return_value_policy::reference)
		.def_readwrite("PerchDef", &UBehavior_SpawnPerch::PerchDef, py::return_value_policy::reference)
		.def_readwrite("PerchLifetime", &UBehavior_SpawnPerch::PerchLifetime)
		.def_readwrite("UseRadius", &UBehavior_SpawnPerch::UseRadius)
		.def_readwrite("UseHeight", &UBehavior_SpawnPerch::UseHeight)
		.def("PublishBehaviorOutput", &UBehavior_SpawnPerch::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnPerch::ApplyBehaviorToContext)
		;
	py::class_< APerch_Dynamic, APerch >(m, "APerch_Dynamic")
		;
	py::class_< AWillowLocalOnlyProjectile, AWillowProjectile >(m, "AWillowLocalOnlyProjectile")
		;
	py::class_< UBehavior_SpawnProjectileFromImpact, UBehaviorBase >(m, "UBehavior_SpawnProjectileFromImpact")
		.def_property("bSetOwnerFromOwnerContext", [](UBehavior_SpawnProjectileFromImpact &self){return self.bSetOwnerFromOwnerContext;}, [](UBehavior_SpawnProjectileFromImpact &self, bool value){self.bSetOwnerFromOwnerContext = value ? 1 : 0;})
		.def_property("bSaveProjectileReference", [](UBehavior_SpawnProjectileFromImpact &self){return self.bSaveProjectileReference;}, [](UBehavior_SpawnProjectileFromImpact &self, bool value){self.bSaveProjectileReference = value ? 1 : 0;})
		.def_property("bSetLikenessFromContext", [](UBehavior_SpawnProjectileFromImpact &self){return self.bSetLikenessFromContext;}, [](UBehavior_SpawnProjectileFromImpact &self, bool value){self.bSetLikenessFromContext = value ? 1 : 0;})
		.def_readwrite("OwnerContext", &UBehavior_SpawnProjectileFromImpact::OwnerContext, py::return_value_policy::reference)
		.def_readwrite("InstanceDataContext", &UBehavior_SpawnProjectileFromImpact::InstanceDataContext, py::return_value_policy::reference)
		.def_readwrite("SavedReferenceName", &UBehavior_SpawnProjectileFromImpact::SavedReferenceName, py::return_value_policy::reference)
		.def_readwrite("ProjectileDefinition", &UBehavior_SpawnProjectileFromImpact::ProjectileDefinition, py::return_value_policy::reference)
		.def_readwrite("SetProjectileSequenceState", &UBehavior_SpawnProjectileFromImpact::SetProjectileSequenceState, py::return_value_policy::reference)
		.def_readwrite("GearLikenessContext", &UBehavior_SpawnProjectileFromImpact::GearLikenessContext, py::return_value_policy::reference)
		.def("AttachProjectileToBase", &UBehavior_SpawnProjectileFromImpact::AttachProjectileToBase)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnProjectileFromImpact::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SpawnTemporalField, UBehaviorBase >(m, "UBehavior_SpawnTemporalField")
		.def_property("bAttachToContext", [](UBehavior_SpawnTemporalField &self){return self.bAttachToContext;}, [](UBehavior_SpawnTemporalField &self, bool value){self.bAttachToContext = value ? 1 : 0;})
		.def_readwrite("TemporalField", &UBehavior_SpawnTemporalField::TemporalField, py::return_value_policy::reference)
		.def_readwrite("LifeSpan", &UBehavior_SpawnTemporalField::LifeSpan)
		.def_readwrite("LocationContext", &UBehavior_SpawnTemporalField::LocationContext, py::return_value_policy::reference)
		.def_readwrite("AttachmentPointName", &UBehavior_SpawnTemporalField::AttachmentPointName, py::return_value_policy::reference)
		.def_readwrite("RelativeLocation", &UBehavior_SpawnTemporalField::RelativeLocation, py::return_value_policy::reference)
		.def_readwrite("RelativeRotation", &UBehavior_SpawnTemporalField::RelativeRotation, py::return_value_policy::reference)
		.def("GetAttachmentLocation", &UBehavior_SpawnTemporalField::GetAttachmentLocation, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SpawnTemporalField::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_StartDeathRagdoll, UBehaviorBase >(m, "UBehavior_StartDeathRagdoll")
		.def_property("bAnimationDriven", [](UBehavior_StartDeathRagdoll &self){return self.bAnimationDriven;}, [](UBehavior_StartDeathRagdoll &self, bool value){self.bAnimationDriven = value ? 1 : 0;})
		.def_property("bEnableContactNotification", [](UBehavior_StartDeathRagdoll &self){return self.bEnableContactNotification;}, [](UBehavior_StartDeathRagdoll &self, bool value){self.bEnableContactNotification = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_StartDeathRagdoll::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_StatusEffectSwitch, UBehaviorBase >(m, "UBehavior_StatusEffectSwitch")
		.def_readwrite("StatusEffectType", &UBehavior_StatusEffectSwitch::StatusEffectType)
		.def("ApplyBehaviorToContext", &UBehavior_StatusEffectSwitch::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_StopMeleeAttack, UBehaviorBase >(m, "UBehavior_StopMeleeAttack")
		.def("ApplyBehaviorToContext", &UBehavior_StopMeleeAttack::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ToggleNPCAlly, UBehaviorBase >(m, "UBehavior_ToggleNPCAlly")
		.def_property("bEnable", [](UBehavior_ToggleNPCAlly &self){return self.bEnable;}, [](UBehavior_ToggleNPCAlly &self, bool value){self.bEnable = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_ToggleNPCAlly::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ToggleObstacle, UBehaviorBase >(m, "UBehavior_ToggleObstacle")
		.def_readwrite("Option", &UBehavior_ToggleObstacle::Option)
		.def("ApplyBehaviorToContext", &UBehavior_ToggleObstacle::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ToggleTelescopeOverlay, UBehaviorBase >(m, "UBehavior_ToggleTelescopeOverlay")
		.def_property("bEnabled", [](UBehavior_ToggleTelescopeOverlay &self){return self.bEnabled;}, [](UBehavior_ToggleTelescopeOverlay &self, bool value){self.bEnabled = value ? 1 : 0;})
		.def("ResolveController", &UBehavior_ToggleTelescopeOverlay::ResolveController, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ToggleTelescopeOverlay::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_Transform, UBehaviorBase >(m, "UBehavior_Transform")
		.def_readwrite("Transform", &UBehavior_Transform::Transform)
		.def("ApplyBehaviorToContext", &UBehavior_Transform::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_UnlockAvatarAward, UBehaviorBase >(m, "UBehavior_UnlockAvatarAward")
		.def_readwrite("AvatarAward", &UBehavior_UnlockAvatarAward::AvatarAward)
		.def("ApplyBehaviorToContext", &UBehavior_UnlockAvatarAward::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_UnlockAvatarAwardForAllPlayers, UBehaviorBase >(m, "UBehavior_UnlockAvatarAwardForAllPlayers")
		.def_readwrite("AvatarAward", &UBehavior_UnlockAvatarAwardForAllPlayers::AvatarAward)
		.def("ApplyBehaviorToContext", &UBehavior_UnlockAvatarAwardForAllPlayers::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_UnlockCustomization, UBehaviorBase >(m, "UBehavior_UnlockCustomization")
		.def_property("bLockBehavior", [](UBehavior_UnlockCustomization &self){return self.bLockBehavior;}, [](UBehavior_UnlockCustomization &self, bool value){self.bLockBehavior = value ? 1 : 0;})
		.def_readwrite("DefinitionToUnlock", &UBehavior_UnlockCustomization::DefinitionToUnlock, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_UnlockCustomization::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_UnlockCustomizationFromRewardPool, UBehaviorBase >(m, "UBehavior_UnlockCustomizationFromRewardPool")
		.def_readwrite("RewardItemPool", &UBehavior_UnlockCustomizationFromRewardPool::RewardItemPool, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_UnlockCustomizationFromRewardPool::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_UpgradeSkill, UBehaviorBase >(m, "UBehavior_UpgradeSkill")
		.def_readwrite("SkillToUpgrade", &UBehavior_UpgradeSkill::SkillToUpgrade, py::return_value_policy::reference)
		.def_readwrite("NumberOfLevelsToRaise", &UBehavior_UpgradeSkill::NumberOfLevelsToRaise, py::return_value_policy::reference)
		.def_readwrite("MaximumLevelToRaiseSkill", &UBehavior_UpgradeSkill::MaximumLevelToRaiseSkill, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_UpgradeSkill::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_UseObject, UBehaviorBase >(m, "UBehavior_UseObject")
		.def_readwrite("UseType", &UBehavior_UseObject::UseType)
		.def_readwrite("User", &UBehavior_UseObject::User, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_UseObject::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_VoGScreenParticle, UBehavior_ScreenParticle >(m, "UBehavior_VoGScreenParticle")
		.def_readwrite("TextureMovieParamName", &UBehavior_VoGScreenParticle::TextureMovieParamName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_VoGScreenParticle::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_WeaponBoneControl, UBehaviorBase >(m, "UBehavior_WeaponBoneControl")
		.def_readwrite("BoneControlName", &UBehavior_WeaponBoneControl::BoneControlName, py::return_value_policy::reference)
		.def_readwrite("WeaponEventType", &UBehavior_WeaponBoneControl::WeaponEventType)
		.def("ApplyBehaviorToContext", &UBehavior_WeaponBoneControl::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_WeaponGlowEffect, UBehaviorBase >(m, "UBehavior_WeaponGlowEffect")
		.def_readwrite("Action", &UBehavior_WeaponGlowEffect::Action)
		.def_readwrite("Effect", &UBehavior_WeaponGlowEffect::Effect, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_WeaponGlowEffect::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_WeaponsRestriction, UBehaviorBase >(m, "UBehavior_WeaponsRestriction")
		.def_property("bRestrictionOn", [](UBehavior_WeaponsRestriction &self){return self.bRestrictionOn;}, [](UBehavior_WeaponsRestriction &self, bool value){self.bRestrictionOn = value ? 1 : 0;})
		.def_property("bAllowOnPlayers", [](UBehavior_WeaponsRestriction &self){return self.bAllowOnPlayers;}, [](UBehavior_WeaponsRestriction &self, bool value){self.bAllowOnPlayers = value ? 1 : 0;})
		.def_property("bLilacHACKOverride", [](UBehavior_WeaponsRestriction &self){return self.bLilacHACKOverride;}, [](UBehavior_WeaponsRestriction &self, bool value){self.bLilacHACKOverride = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UBehavior_WeaponsRestriction::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_WeaponVisibleAmmoState, UBehaviorBase >(m, "UBehavior_WeaponVisibleAmmoState")
		.def_readwrite("State", &UBehavior_WeaponVisibleAmmoState::State)
		.def("ApplyBehaviorToContext", &UBehavior_WeaponVisibleAmmoState::ApplyBehaviorToContext)
		;
	py::class_< UChallengesPanelDefinition, UGBXDefinition >(m, "UChallengesPanelDefinition")
		;
	py::class_< UCharacterCustomizationInfoCardGFxObject, UGFxObject >(m, "UCharacterCustomizationInfoCardGFxObject")
		.def("SetAutoSizeTextOnFields", &UCharacterCustomizationInfoCardGFxObject::SetAutoSizeTextOnFields)
		.def("TryFocusList", &UCharacterCustomizationInfoCardGFxObject::TryFocusList)
		.def("PopulateScrollingList", &UCharacterCustomizationInfoCardGFxObject::PopulateScrollingList)
		.def("SetRespecInfo", &UCharacterCustomizationInfoCardGFxObject::SetRespecInfo)
		.def("SetNameInfo", &UCharacterCustomizationInfoCardGFxObject::SetNameInfo)
		.def("Hide", &UCharacterCustomizationInfoCardGFxObject::Hide)
		.def("DisplaySkinCard", &UCharacterCustomizationInfoCardGFxObject::DisplaySkinCard)
		.def("DisplayHeadCard", &UCharacterCustomizationInfoCardGFxObject::DisplayHeadCard)
		.def("DisplayRespecCard", &UCharacterCustomizationInfoCardGFxObject::DisplayRespecCard)
		.def("DisplayNameCard", &UCharacterCustomizationInfoCardGFxObject::DisplayNameCard)
		;
	py::class_< UCharacterCustomizationMenuGFxObject, UGFxObject >(m, "UCharacterCustomizationMenuGFxObject")
		.def("GetEntryLabel", &UCharacterCustomizationMenuGFxObject::GetEntryLabel, py::return_value_policy::reference)
		.def("SetSelectedEntry", &UCharacterCustomizationMenuGFxObject::SetSelectedEntry)
		.def("GetSelectedEntry", &UCharacterCustomizationMenuGFxObject::GetSelectedEntry)
		.def("FocusPreviousEntry", &UCharacterCustomizationMenuGFxObject::FocusPreviousEntry)
		.def("FocusNextEntry", &UCharacterCustomizationMenuGFxObject::FocusNextEntry)
		.def("FocusBestEntry", &UCharacterCustomizationMenuGFxObject::FocusBestEntry)
		.def("ConfigureMenuEntry", &UCharacterCustomizationMenuGFxObject::ConfigureMenuEntry)
		.def("InitMenuEntry", &UCharacterCustomizationMenuGFxObject::InitMenuEntry)
		;
	py::class_< ACharacterSelectCameraActor, ACameraActor >(m, "ACharacterSelectCameraActor")
		;
	py::class_< UCharacterSelectionCustomizationListGFxObject, UGFxObject >(m, "UCharacterSelectionCustomizationListGFxObject")
		.def("ScrollDown", &UCharacterSelectionCustomizationListGFxObject::ScrollDown)
		.def("ScrollUp", &UCharacterSelectionCustomizationListGFxObject::ScrollUp)
		.def("PopulateScrollingList", &UCharacterSelectionCustomizationListGFxObject::PopulateScrollingList)
		.def("GetSelectedIndex", &UCharacterSelectionCustomizationListGFxObject::GetSelectedIndex)
		;
	py::class_< UCharacterSelectionGFxObject, UGFxObject >(m, "UCharacterSelectionGFxObject")
		.def("FadeIn", &UCharacterSelectionGFxObject::FadeIn)
		.def("BeginClose", &UCharacterSelectionGFxObject::BeginClose)
		.def("ConfigureForPause", &UCharacterSelectionGFxObject::ConfigureForPause)
		.def("SetTooltips", &UCharacterSelectionGFxObject::SetTooltips)
		.def("GetCharacterGridIndexInDirection", &UCharacterSelectionGFxObject::GetCharacterGridIndexInDirection)
		.def("SetMessageInfo", &UCharacterSelectionGFxObject::SetMessageInfo)
		.def("SetTimerInfo", &UCharacterSelectionGFxObject::SetTimerInfo)
		.def("SetSelectionIndicator", &UCharacterSelectionGFxObject::SetSelectionIndicator)
		.def("SetPartySelection", &UCharacterSelectionGFxObject::SetPartySelection)
		.def("ClearPartySelections", &UCharacterSelectionGFxObject::ClearPartySelections)
		.def("SetState", &UCharacterSelectionGFxObject::SetState)
		.def("SetCharacterInfo", &UCharacterSelectionGFxObject::SetCharacterInfo)
		.def("CommitSelectableCharacters", &UCharacterSelectionGFxObject::CommitSelectableCharacters)
		.def("AddSelectableCharacter", &UCharacterSelectionGFxObject::AddSelectableCharacter)
		;
	py::class_< UWillowGFxLobbyLoadCharacter, UWillowGFxMovie >(m, "UWillowGFxLobbyLoadCharacter")
		.def_property("bWaitingForPS3LoadGame", [](UWillowGFxLobbyLoadCharacter &self){return self.bWaitingForPS3LoadGame;}, [](UWillowGFxLobbyLoadCharacter &self, bool value){self.bWaitingForPS3LoadGame = value ? 1 : 0;})
		.def_property("bWaitingForPS3SaveList", [](UWillowGFxLobbyLoadCharacter &self){return self.bWaitingForPS3SaveList;}, [](UWillowGFxLobbyLoadCharacter &self, bool value){self.bWaitingForPS3SaveList = value ? 1 : 0;})
		.def_property("bRestrictClose", [](UWillowGFxLobbyLoadCharacter &self){return self.bRestrictClose;}, [](UWillowGFxLobbyLoadCharacter &self, bool value){self.bRestrictClose = value ? 1 : 0;})
		.def_readwrite("LoadCharacterLobby", &UWillowGFxLobbyLoadCharacter::LoadCharacterLobby, py::return_value_policy::reference)
		.def_readwrite("DisplayedCharacterDataList", &UWillowGFxLobbyLoadCharacter::DisplayedCharacterDataList, py::return_value_policy::reference)
		.def_readwrite("SaveGameHelper", &UWillowGFxLobbyLoadCharacter::SaveGameHelper, py::return_value_policy::reference)
		.def_readwrite("DefaultNewCharacterList", &UWillowGFxLobbyLoadCharacter::DefaultNewCharacterList, py::return_value_policy::reference)
		.def_readwrite("MostRecentLoadInfo", &UWillowGFxLobbyLoadCharacter::MostRecentLoadInfo, py::return_value_policy::reference)
		.def_readwrite("LoadingCharacterDlg", &UWillowGFxLobbyLoadCharacter::LoadingCharacterDlg, py::return_value_policy::reference)
		.def_readwrite("Platform", &UWillowGFxLobbyLoadCharacter::Platform)
		.def_readwrite("CachedSaveGame", &UWillowGFxLobbyLoadCharacter::CachedSaveGame, py::return_value_policy::reference)
		.def_readwrite("AvailableSlots", &UWillowGFxLobbyLoadCharacter::AvailableSlots)
		.def_readwrite("TopSlotDataIndex", &UWillowGFxLobbyLoadCharacter::TopSlotDataIndex)
		.def_readwrite("SelectedDataIndex", &UWillowGFxLobbyLoadCharacter::SelectedDataIndex)
		.def_readwrite("LastActionTime", &UWillowGFxLobbyLoadCharacter::LastActionTime)
		.def_readwrite("LastDeletedPlayedTime", &UWillowGFxLobbyLoadCharacter::LastDeletedPlayedTime)
		.def_readwrite("LastDeletedLevel", &UWillowGFxLobbyLoadCharacter::LastDeletedLevel)
		.def_readwrite("LastDeletedGuid", &UWillowGFxLobbyLoadCharacter::LastDeletedGuid, py::return_value_policy::reference)
		.def_readwrite("LastClickedDataIndex", &UWillowGFxLobbyLoadCharacter::LastClickedDataIndex)
		.def_readwrite("__OnLoadGame__Delegate", &UWillowGFxLobbyLoadCharacter::__OnLoadGame__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnCloseNoLoad__Delegate", &UWillowGFxLobbyLoadCharacter::__OnCloseNoLoad__Delegate, py::return_value_policy::reference)
		.def("OnTick", &UWillowGFxLobbyLoadCharacter::OnTick)
		.def("SetTickInterval", &UWillowGFxLobbyLoadCharacter::SetTickInterval)
		.def("CanShowStorageSelector", &UWillowGFxLobbyLoadCharacter::CanShowStorageSelector)
		.def("StorageDeviceChanged", &UWillowGFxLobbyLoadCharacter::StorageDeviceChanged)
		.def("HideLoadingSavedGameDialog", &UWillowGFxLobbyLoadCharacter::HideLoadingSavedGameDialog)
		.def("ShowLoadingSavedGameDialog", &UWillowGFxLobbyLoadCharacter::ShowLoadingSavedGameDialog)
		.def("NotifyLoadGameStarted", &UWillowGFxLobbyLoadCharacter::NotifyLoadGameStarted)
		.def("PS3_CheckForSaveList", &UWillowGFxLobbyLoadCharacter::PS3_CheckForSaveList)
		.def("PS3_CheckForLoadGame", &UWillowGFxLobbyLoadCharacter::PS3_CheckForLoadGame)
		.def("PS3_BeginLoadGame", &UWillowGFxLobbyLoadCharacter::PS3_BeginLoadGame)
		.def("FinishConditionalLoadGame", &UWillowGFxLobbyLoadCharacter::FinishConditionalLoadGame)
		.def("ConditionalLoadGame", &UWillowGFxLobbyLoadCharacter::ConditionalLoadGame)
		.def("StripSavePath", &UWillowGFxLobbyLoadCharacter::StripSavePath, py::return_value_policy::reference)
		.def("FinishLoadGame", &UWillowGFxLobbyLoadCharacter::FinishLoadGame)
		.def("GetSaveList", &UWillowGFxLobbyLoadCharacter::GetSaveList)
		.def("DeviceSelectionDone", &UWillowGFxLobbyLoadCharacter::DeviceSelectionDone)
		.def("SetupCharacterMenu", &UWillowGFxLobbyLoadCharacter::SetupCharacterMenu)
		.def("SetTipText", &UWillowGFxLobbyLoadCharacter::SetTipText)
		.def("OnPurchaseCanceled", &UWillowGFxLobbyLoadCharacter::OnPurchaseCanceled)
		.def("MarketplaceDownloadComplete", &UWillowGFxLobbyLoadCharacter::MarketplaceDownloadComplete)
		.def("OnPurchaseRequest", &UWillowGFxLobbyLoadCharacter::OnPurchaseRequest)
		.def("OnSlotClicked", &UWillowGFxLobbyLoadCharacter::OnSlotClicked)
		.def("FocusOn", &UWillowGFxLobbyLoadCharacter::FocusOn)
		.def("OnDeleteEnded", &UWillowGFxLobbyLoadCharacter::OnDeleteEnded)
		.def("OnDeleteStarted", &UWillowGFxLobbyLoadCharacter::OnDeleteStarted)
		.def("TryDeleteSelectedCharacter", &UWillowGFxLobbyLoadCharacter::TryDeleteSelectedCharacter)
		.def("ScrollDown", &UWillowGFxLobbyLoadCharacter::ScrollDown)
		.def("ScrollUp", &UWillowGFxLobbyLoadCharacter::ScrollUp)
		.def("RefreshCharacterList", &UWillowGFxLobbyLoadCharacter::RefreshCharacterList)
		.def("SetListSelection", &UWillowGFxLobbyLoadCharacter::SetListSelection)
		.def("SavesUpdated", &UWillowGFxLobbyLoadCharacter::SavesUpdated)
		.def("ResolvePlaythrough", &UWillowGFxLobbyLoadCharacter::ResolvePlaythrough, py::return_value_policy::reference)
		.def("HandleInputKey", &UWillowGFxLobbyLoadCharacter::HandleInputKey)
		.def("BeginClose", &UWillowGFxLobbyLoadCharacter::BeginClose)
		.def("eventOnClose", &UWillowGFxLobbyLoadCharacter::eventOnClose)
		.def("extLoadCharacterLobbyReady", &UWillowGFxLobbyLoadCharacter::extLoadCharacterLobbyReady)
		.def("eventStart", &UWillowGFxLobbyLoadCharacter::eventStart)
		.def("OnCloseNoLoad", &UWillowGFxLobbyLoadCharacter::OnCloseNoLoad)
		.def("OnLoadGame", &UWillowGFxLobbyLoadCharacter::OnLoadGame)
		;
	py::class_< UConfirmCharacterLobbyGFxMovie, UWillowGFxMovie >(m, "UConfirmCharacterLobbyGFxMovie")
		.def_readwrite("ConfirmCharacterLobbyObj", &UConfirmCharacterLobbyGFxMovie::ConfirmCharacterLobbyObj, py::return_value_policy::reference)
		.def_readwrite("__OnConfirmCharacters__Delegate", &UConfirmCharacterLobbyGFxMovie::__OnConfirmCharacters__Delegate, py::return_value_policy::reference)
		.def("SetHeader", &UConfirmCharacterLobbyGFxMovie::SetHeader)
		.def("SetCharacterInfo", &UConfirmCharacterLobbyGFxMovie::SetCharacterInfo)
		.def("Hide", &UConfirmCharacterLobbyGFxMovie::Hide)
		.def("Show", &UConfirmCharacterLobbyGFxMovie::Show)
		.def("PopulatePlayerData", &UConfirmCharacterLobbyGFxMovie::PopulatePlayerData)
		.def("CharacterSelectClosed", &UConfirmCharacterLobbyGFxMovie::CharacterSelectClosed)
		.def("CharacterLoadComplete", &UConfirmCharacterLobbyGFxMovie::CharacterLoadComplete)
		.def("OpenCharacterSelect", &UConfirmCharacterLobbyGFxMovie::OpenCharacterSelect)
		.def("ConfirmCharacterSelectForPlayer", &UConfirmCharacterLobbyGFxMovie::ConfirmCharacterSelectForPlayer)
		.def("ConfigureForPlayers", &UConfirmCharacterLobbyGFxMovie::ConfigureForPlayers)
		.def("ResolvePlaythrough", &UConfirmCharacterLobbyGFxMovie::ResolvePlaythrough, py::return_value_policy::reference)
		.def("OnChangeCharacterButtonClick", &UConfirmCharacterLobbyGFxMovie::OnChangeCharacterButtonClick)
		.def("OnCancelButtonClick", &UConfirmCharacterLobbyGFxMovie::OnCancelButtonClick)
		.def("HandleConfirm", &UConfirmCharacterLobbyGFxMovie::HandleConfirm)
		.def("OnConfirmButtonClick", &UConfirmCharacterLobbyGFxMovie::OnConfirmButtonClick)
		.def("HandleInputKey", &UConfirmCharacterLobbyGFxMovie::HandleInputKey)
		.def("BeginClose", &UConfirmCharacterLobbyGFxMovie::BeginClose)
		.def("eventOnClose", &UConfirmCharacterLobbyGFxMovie::eventOnClose)
		.def("extConfirmCharacterLobbyReady", &UConfirmCharacterLobbyGFxMovie::extConfirmCharacterLobbyReady)
		.def("eventStart", &UConfirmCharacterLobbyGFxMovie::eventStart)
		.def("OnConfirmCharacters", &UConfirmCharacterLobbyGFxMovie::OnConfirmCharacters)
		;
	py::class_< UCreditsDataProviderGFxObject, UGFxObject >(m, "UCreditsDataProviderGFxObject")
		.def_readwrite("CreditsDef", &UCreditsDataProviderGFxObject::CreditsDef, py::return_value_policy::reference)
		.def_readwrite("bShouldAvoidAccentedLetters", &UCreditsDataProviderGFxObject::bShouldAvoidAccentedLetters)
		.def("extGetLengthOfData", &UCreditsDataProviderGFxObject::extGetLengthOfData)
		.def("ReplaceCertainAccentedLetters", &UCreditsDataProviderGFxObject::ReplaceCertainAccentedLetters, py::return_value_policy::reference)
		.def("extGetClipDataAt", &UCreditsDataProviderGFxObject::extGetClipDataAt, py::return_value_policy::reference)
		.def("Init", &UCreditsDataProviderGFxObject::Init)
		;
	py::class_< UCreditsLineDefinition, UGBXDefinition >(m, "UCreditsLineDefinition")
		.def_readwrite("LinkageName", &UCreditsLineDefinition::LinkageName, py::return_value_policy::reference)
		;
	py::class_< UCreditsGFxObject, UGFxObject >(m, "UCreditsGFxObject")
		.def_readwrite("CreditsDef", &UCreditsGFxObject::CreditsDef, py::return_value_policy::reference)
		.def_readwrite("CachedDelta", &UCreditsGFxObject::CachedDelta)
		.def("UpdateDelta", &UCreditsGFxObject::UpdateDelta)
		.def("StartCreditScroll", &UCreditsGFxObject::StartCreditScroll)
		.def("Init", &UCreditsGFxObject::Init)
		;
	py::class_< UCustomizationUsage_Player, UCustomizationUsage >(m, "UCustomizationUsage_Player")
		;
	py::class_< UCustomizationUsage_Vehicle, UCustomizationUsage >(m, "UCustomizationUsage_Vehicle")
		;
	py::class_< UCustomizationUsage_Assassin, UCustomizationUsage_Player >(m, "UCustomizationUsage_Assassin")
		;
	py::class_< UCustomizationUsage_BanditTech, UCustomizationUsage_Vehicle >(m, "UCustomizationUsage_BanditTech")
		;
	py::class_< UCustomizationUsage_ExtraPlayerA, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerA")
		;
	py::class_< UCustomizationUsage_ExtraPlayerB, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerB")
		;
	py::class_< UCustomizationUsage_ExtraPlayerC, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerC")
		;
	py::class_< UCustomizationUsage_ExtraPlayerD, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerD")
		;
	py::class_< UCustomizationUsage_ExtraPlayerE, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerE")
		;
	py::class_< UCustomizationUsage_ExtraPlayerF, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerF")
		;
	py::class_< UCustomizationUsage_ExtraPlayerG, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerG")
		;
	py::class_< UCustomizationUsage_ExtraPlayerH, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerH")
		;
	py::class_< UCustomizationUsage_ExtraPlayerI, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerI")
		;
	py::class_< UCustomizationUsage_ExtraPlayerJ, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerJ")
		;
	py::class_< UCustomizationUsage_ExtraPlayerK, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerK")
		;
	py::class_< UCustomizationUsage_ExtraPlayerL, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerL")
		;
	py::class_< UCustomizationUsage_ExtraPlayerM, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerM")
		;
	py::class_< UCustomizationUsage_ExtraPlayerN, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerN")
		;
	py::class_< UCustomizationUsage_ExtraPlayerO, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerO")
		;
	py::class_< UCustomizationUsage_ExtraPlayerP, UCustomizationUsage_Player >(m, "UCustomizationUsage_ExtraPlayerP")
		;
	py::class_< UCustomizationUsage_Hovercraft, UCustomizationUsage_Vehicle >(m, "UCustomizationUsage_Hovercraft")
		;
	py::class_< UCustomizationUsage_Mercenary, UCustomizationUsage_Player >(m, "UCustomizationUsage_Mercenary")
		;
	py::class_< UCustomizationUsage_Runner, UCustomizationUsage_Vehicle >(m, "UCustomizationUsage_Runner")
		;
	py::class_< UCustomizationUsage_Siren, UCustomizationUsage_Player >(m, "UCustomizationUsage_Siren")
		;
	py::class_< UCustomizationUsage_Soldier, UCustomizationUsage_Player >(m, "UCustomizationUsage_Soldier")
		;
	py::class_< ADeathtrapActionSkill, AActionSkill >(m, "ADeathtrapActionSkill")
		.def_readwrite("DeathTrap", &ADeathtrapActionSkill::DeathTrap, py::return_value_policy::reference)
		.def_readwrite("ShareShieldsSkill", &ADeathtrapActionSkill::ShareShieldsSkill, py::return_value_policy::reference)
		.def_readwrite("MedicBeamTarget", &ADeathtrapActionSkill::MedicBeamTarget, py::return_value_policy::reference)
		.def_readwrite("MedicBeamState", &ADeathtrapActionSkill::MedicBeamState)
		.def_readwrite("MedicBeamSourceSocket", &ADeathtrapActionSkill::MedicBeamSourceSocket, py::return_value_policy::reference)
		.def_readwrite("MedicBeamTargetSocket", &ADeathtrapActionSkill::MedicBeamTargetSocket, py::return_value_policy::reference)
		.def_readwrite("MedicBeamMaxDistance", &ADeathtrapActionSkill::MedicBeamMaxDistance)
		.def_readwrite("MedicBeamSkill", &ADeathtrapActionSkill::MedicBeamSkill, py::return_value_policy::reference)
		.def_readwrite("MedicBeamTargetSkill", &ADeathtrapActionSkill::MedicBeamTargetSkill, py::return_value_policy::reference)
		.def_readwrite("MedicBeamFiringMode", &ADeathtrapActionSkill::MedicBeamFiringMode, py::return_value_policy::reference)
		.def("DeactivateMedicBeam", &ADeathtrapActionSkill::DeactivateMedicBeam)
		.def("BlockMedicBeam", &ADeathtrapActionSkill::BlockMedicBeam)
		.def("ActivateMedicBeam", &ADeathtrapActionSkill::ActivateMedicBeam)
		.def("TryToActivateMedicBeam", &ADeathtrapActionSkill::TryToActivateMedicBeam)
		.def("IsValidCurrentMedicBeamTarget", &ADeathtrapActionSkill::IsValidCurrentMedicBeamTarget)
		.def("IsValidMedicBeamTarget", &ADeathtrapActionSkill::IsValidMedicBeamTarget)
		.def("TryToShareShields", &ADeathtrapActionSkill::TryToShareShields)
		.def("DestroyOwnedInstanceData", &ADeathtrapActionSkill::DestroyOwnedInstanceData)
		.def("RemoveInstanceData", &ADeathtrapActionSkill::RemoveInstanceData)
		.def("eventGetInstanceData", &ADeathtrapActionSkill::eventGetInstanceData)
		.def("SetInstanceData", &ADeathtrapActionSkill::SetInstanceData)
		.def("GetAutoAimPawn", &ADeathtrapActionSkill::GetAutoAimPawn, py::return_value_policy::reference)
		.def("NotifyActionSkillActiveAbility", &ADeathtrapActionSkill::NotifyActionSkillActiveAbility)
		.def("StartActionSkillActiveAbility", &ADeathtrapActionSkill::StartActionSkillActiveAbility)
		.def("OnActionSkillEnded", &ADeathtrapActionSkill::OnActionSkillEnded)
		.def("OnActionSkillStarted", &ADeathtrapActionSkill::OnActionSkillStarted)
		.def("eventOnActionSkillTick", &ADeathtrapActionSkill::eventOnActionSkillTick)
		;
	py::class_< UDebugArrowComponent, UArrowComponent >(m, "UDebugArrowComponent")
		;
	py::class_< UWillowSeqAct_AISetItemTossTarget, USequenceAction >(m, "UWillowSeqAct_AISetItemTossTarget")
		.def_readwrite("TossTargets", &UWillowSeqAct_AISetItemTossTarget::TossTargets, py::return_value_policy::reference)
		;
	py::class_< UDesignerAttributeContextResolver, UAttributeContextResolver >(m, "UDesignerAttributeContextResolver")
		.def_readwrite("ValueName", &UDesignerAttributeContextResolver::ValueName, py::return_value_policy::reference)
		.def_readwrite("BaseValue", &UDesignerAttributeContextResolver::BaseValue, py::return_value_policy::reference)
		.def("GetAttributeContext", &UDesignerAttributeContextResolver::GetAttributeContext, py::return_value_policy::reference)
		;
	py::class_< ADynamicBehaviorVolume, ABehaviorVolume >(m, "ADynamicBehaviorVolume")
		;
	py::class_< UEndOfGameGFxMovie, UWillowGFxMovie >(m, "UEndOfGameGFxMovie")
		.def_readwrite("ConsoleEvent", &UEndOfGameGFxMovie::ConsoleEvent, py::return_value_policy::reference)
		.def("extCancel", &UEndOfGameGFxMovie::extCancel)
		.def("extConfirmRestart", &UEndOfGameGFxMovie::extConfirmRestart)
		.def("eventStart", &UEndOfGameGFxMovie::eventStart)
		;
	py::class_< UGFxMovieInteractiveObject, UGearboxGFxMovie >(m, "UGFxMovieInteractiveObject")
		;
	py::class_< UFastTravelSignGFxMovie, UGFxMovieInteractiveObject >(m, "UFastTravelSignGFxMovie")
		.def("eventStart", &UFastTravelSignGFxMovie::eventStart)
		;
	py::class_< UFastTravelStationGFxObject, UGFxObject >(m, "UFastTravelStationGFxObject")
		.def("SetCurrentWaypoint", &UFastTravelStationGFxObject::SetCurrentWaypoint)
		.def("SetSortMode", &UFastTravelStationGFxObject::SetSortMode)
		.def("SendLocationData", &UFastTravelStationGFxObject::SendLocationData)
		.def("ScrollLocationListDown", &UFastTravelStationGFxObject::ScrollLocationListDown)
		.def("ScrollLocationListUp", &UFastTravelStationGFxObject::ScrollLocationListUp)
		.def("RegisterMapLocationBlob", &UFastTravelStationGFxObject::RegisterMapLocationBlob)
		.def("CacheLocationMissionData", &UFastTravelStationGFxObject::CacheLocationMissionData)
		.def("AddDLCMapLocations", &UFastTravelStationGFxObject::AddDLCMapLocations)
		;
	py::class_< AFixedMarker, ATrigger >(m, "AFixedMarker")
		.def_property("DisplayOnCompass", [](AFixedMarker &self){return self.DisplayOnCompass;}, [](AFixedMarker &self, bool value){self.DisplayOnCompass = value ? 1 : 0;})
		.def_readwrite("MarkerTexture", &AFixedMarker::MarkerTexture, py::return_value_policy::reference)
		.def_readwrite("MarkerColor", &AFixedMarker::MarkerColor, py::return_value_policy::reference)
		.def_readwrite("MarkerScale", &AFixedMarker::MarkerScale)
		.def("OnToggle", &AFixedMarker::OnToggle)
		;
	py::class_< AWillowAutoTestManager, AAutoTestManager >(m, "AWillowAutoTestManager")
		.def_property("bIsMenuActive", [](AWillowAutoTestManager &self){return self.bIsMenuActive;}, [](AWillowAutoTestManager &self, bool value){self.bIsMenuActive = value ? 1 : 0;})
		.def_property("bIsWillowSentinelPCWalking", [](AWillowAutoTestManager &self){return self.bIsWillowSentinelPCWalking;}, [](AWillowAutoTestManager &self, bool value){self.bIsWillowSentinelPCWalking = value ? 1 : 0;})
		.def_readwrite("WillowSentinelPC", &AWillowAutoTestManager::WillowSentinelPC, py::return_value_policy::reference)
		.def_readwrite("TotalLevelLoads", &AWillowAutoTestManager::TotalLevelLoads)
		.def("Tick", &AWillowAutoTestManager::Tick)
		.def("CloseAutomatedMapTestTimer", &AWillowAutoTestManager::CloseAutomatedMapTestTimer)
		.def("AutomatedTravelToNextMap", &AWillowAutoTestManager::AutomatedTravelToNextMap)
		.def("GetNextAutomatedTestingMap", &AWillowAutoTestManager::GetNextAutomatedTestingMap, py::return_value_policy::reference)
		.def("MenuTimerWorker", &AWillowAutoTestManager::MenuTimerWorker)
		.def("TestBackMenu", &AWillowAutoTestManager::TestBackMenu)
		.def("TestDucking", &AWillowAutoTestManager::TestDucking)
		.def("TestJumping", &AWillowAutoTestManager::TestJumping)
		.def("TestNextWeapon", &AWillowAutoTestManager::TestNextWeapon)
		.def("TestStopFiring", &AWillowAutoTestManager::TestStopFiring)
		.def("TestStartFiring", &AWillowAutoTestManager::TestStartFiring)
		.def("TestStopWalking", &AWillowAutoTestManager::TestStopWalking)
		.def("TestStartWalking", &AWillowAutoTestManager::TestStartWalking)
		.def("DisableTrainingMessages", &AWillowAutoTestManager::DisableTrainingMessages)
		.def("ExecuteConsoleCommand", &AWillowAutoTestManager::ExecuteConsoleCommand)
		.def("DoAutomatedSmokeTest", &AWillowAutoTestManager::DoAutomatedSmokeTest)
		.def("DoUIAutoMemTest", &AWillowAutoTestManager::DoUIAutoMemTest)
		.def("eventPostBeginPlay", &AWillowAutoTestManager::eventPostBeginPlay)
		;
	py::class_< UWillowSeqEvent_PlayerLeft, USequenceEvent >(m, "UWillowSeqEvent_PlayerLeft")
		;
	py::class_< USeqEvent_SeamlessTravelComplete, USequenceEvent >(m, "USeqEvent_SeamlessTravelComplete")
		;
	py::class_< UIPlayerObserver, UInterface >(m, "UIPlayerObserver")
		.def("PlayerLeftGame", &UIPlayerObserver::PlayerLeftGame)
		.def("PlayerEnteredGame", &UIPlayerObserver::PlayerEnteredGame)
		;
	py::class_< UWillowGameMessage, ULocalMessage >(m, "UWillowGameMessage")
		.def_readwrite("PlayerEnteredGame", &UWillowGameMessage::PlayerEnteredGame, py::return_value_policy::reference)
		.def_readwrite("PlayerLeftGame", &UWillowGameMessage::PlayerLeftGame, py::return_value_policy::reference)
		.def_readwrite("CreaturesGrowStronger", &UWillowGameMessage::CreaturesGrowStronger, py::return_value_policy::reference)
		.def_readwrite("CreaturesWeaken", &UWillowGameMessage::CreaturesWeaken, py::return_value_policy::reference)
		.def("GetString", &UWillowGameMessage::GetString, py::return_value_policy::reference)
		.def("ClientReceive", &UWillowGameMessage::ClientReceive)
		;
	py::class_< ULocalMapChangeMessage, UWillowLocalMessage >(m, "ULocalMapChangeMessage")
		.def("ClientReceive", &ULocalMapChangeMessage::ClientReceive)
		.def("GetString", &ULocalMapChangeMessage::GetString, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqEvent_StartNewGameCinematics, USequenceEvent >(m, "UWillowSeqEvent_StartNewGameCinematics")
		;
	py::class_< AWillowAccessControl, AAccessControl >(m, "AWillowAccessControl")
		.def("ForceKickPlayer", &AWillowAccessControl::ForceKickPlayer)
		;
	py::class_< USplitscreenHelper, UObject >(m, "USplitscreenHelper")
		.def_readwrite("PS3UserSelectTicker", &USplitscreenHelper::PS3UserSelectTicker, py::return_value_policy::reference)
		.def_readwrite("PS3SplitScreenControllerId", &USplitscreenHelper::PS3SplitScreenControllerId)
		.def_readwrite("PrimaryPC", &USplitscreenHelper::PrimaryPC, py::return_value_policy::reference)
		.def_readwrite("__HandleSplitscreenJoinSuccess__Delegate", &USplitscreenHelper::__HandleSplitscreenJoinSuccess__Delegate, py::return_value_policy::reference)
		.def_readwrite("__HandleSplitscreenJoinFail__Delegate", &USplitscreenHelper::__HandleSplitscreenJoinFail__Delegate, py::return_value_policy::reference)
		.def("CheckPS3UserSelectResult", &USplitscreenHelper::CheckPS3UserSelectResult)
		.def("SparkAuthenticate", &USplitscreenHelper::SparkAuthenticate)
		.def("OnSplitscreenJoinComplete", &USplitscreenHelper::OnSplitscreenJoinComplete)
		.def("AttemptSplitscreenJoin", &USplitscreenHelper::AttemptSplitscreenJoin)
		.def("GetPrimaryPC", &USplitscreenHelper::GetPrimaryPC, py::return_value_policy::reference)
		.def("PrepareSplitscreenJoin", &USplitscreenHelper::PrepareSplitscreenJoin)
		.def("AttemptSplitscreenLeave", &USplitscreenHelper::AttemptSplitscreenLeave)
		.def("HandleSplitscreenJoinFail", &USplitscreenHelper::HandleSplitscreenJoinFail)
		.def("HandleSplitscreenJoinSuccess", &USplitscreenHelper::HandleSplitscreenJoinSuccess)
		;
	py::class_< UNetworkOptionsGFxMovie, UWillowGFxMovie >(m, "UNetworkOptionsGFxMovie")
		.def_readwrite("NetworkOptionsObject", &UNetworkOptionsGFxMovie::NetworkOptionsObject, py::return_value_policy::reference)
		.def_readwrite("OwningMovie", &UNetworkOptionsGFxMovie::OwningMovie, py::return_value_policy::reference)
		.def_readwrite("__OnLoad__Delegate", &UNetworkOptionsGFxMovie::__OnLoad__Delegate, py::return_value_policy::reference)
		.def("ResolveNetworkTypeString", &UNetworkOptionsGFxMovie::ResolveNetworkTypeString, py::return_value_policy::reference)
		.def("HandleInputKey", &UNetworkOptionsGFxMovie::HandleInputKey)
		.def("extClosed", &UNetworkOptionsGFxMovie::extClosed)
		.def("extOnLoad", &UNetworkOptionsGFxMovie::extOnLoad)
		.def("eventOnClose", &UNetworkOptionsGFxMovie::eventOnClose)
		.def("eventStart", &UNetworkOptionsGFxMovie::eventStart)
		.def("OnLoad", &UNetworkOptionsGFxMovie::OnLoad)
		;
	py::class_< UMarketplaceGFxMovie, UWillowGFxMovie3D >(m, "UMarketplaceGFxMovie")
		.def_property("bDelegateFired", [](UMarketplaceGFxMovie &self){return self.bDelegateFired;}, [](UMarketplaceGFxMovie &self, bool value){self.bDelegateFired = value ? 1 : 0;})
		.def_readwrite("BasicFilters", &UMarketplaceGFxMovie::BasicFilters, py::return_value_policy::reference)
		.def_readwrite("MarketPlacePanelObject", &UMarketplaceGFxMovie::MarketPlacePanelObject, py::return_value_policy::reference)
		.def_readwrite("MarketplaceDef", &UMarketplaceGFxMovie::MarketplaceDef, py::return_value_policy::reference)
		.def_readwrite("FilterAll", &UMarketplaceGFxMovie::FilterAll, py::return_value_policy::reference)
		.def_readwrite("FilterCompatibility", &UMarketplaceGFxMovie::FilterCompatibility, py::return_value_policy::reference)
		.def_readwrite("FilterSeasonPass", &UMarketplaceGFxMovie::FilterSeasonPass, py::return_value_policy::reference)
		.def_readwrite("FilterAddOn", &UMarketplaceGFxMovie::FilterAddOn, py::return_value_policy::reference)
		.def_readwrite("FilterMisc", &UMarketplaceGFxMovie::FilterMisc, py::return_value_policy::reference)
		.def_readwrite("TipPurchase", &UMarketplaceGFxMovie::TipPurchase, py::return_value_policy::reference)
		.def_readwrite("TipCancel", &UMarketplaceGFxMovie::TipCancel, py::return_value_policy::reference)
		.def_readwrite("TipRedeemCode", &UMarketplaceGFxMovie::TipRedeemCode, py::return_value_policy::reference)
		.def_readwrite("TipSort", &UMarketplaceGFxMovie::TipSort, py::return_value_policy::reference)
		.def_readwrite("TipDownload", &UMarketplaceGFxMovie::TipDownload, py::return_value_policy::reference)
		.def_readwrite("TipDetails", &UMarketplaceGFxMovie::TipDetails, py::return_value_policy::reference)
		.def_readwrite("TipPSNStore", &UMarketplaceGFxMovie::TipPSNStore, py::return_value_policy::reference)
		.def_readwrite("CostFormatPS3", &UMarketplaceGFxMovie::CostFormatPS3, py::return_value_policy::reference)
		.def_readwrite("CostFormatPS3Free", &UMarketplaceGFxMovie::CostFormatPS3Free, py::return_value_policy::reference)
		.def_readwrite("CostFormat360", &UMarketplaceGFxMovie::CostFormat360, py::return_value_policy::reference)
		.def_readwrite("CostFormat360Free", &UMarketplaceGFxMovie::CostFormat360Free, py::return_value_policy::reference)
		.def_readwrite("Purchased", &UMarketplaceGFxMovie::Purchased, py::return_value_policy::reference)
		.def_readwrite("StatusPurchased", &UMarketplaceGFxMovie::StatusPurchased, py::return_value_policy::reference)
		.def_readwrite("StatusDownloaded", &UMarketplaceGFxMovie::StatusDownloaded, py::return_value_policy::reference)
		.def_readwrite("StatusInstalled", &UMarketplaceGFxMovie::StatusInstalled, py::return_value_policy::reference)
		.def_readwrite("StatusNew", &UMarketplaceGFxMovie::StatusNew, py::return_value_policy::reference)
		.def_readwrite("MessageEnumerating", &UMarketplaceGFxMovie::MessageEnumerating, py::return_value_policy::reference)
		.def_readwrite("DefaultHeader", &UMarketplaceGFxMovie::DefaultHeader, py::return_value_policy::reference)
		.def_readwrite("DefaultFeature", &UMarketplaceGFxMovie::DefaultFeature, py::return_value_policy::reference)
		.def_readwrite("DefaultFeatureDescription", &UMarketplaceGFxMovie::DefaultFeatureDescription, py::return_value_policy::reference)
		.def_readwrite("Prop_offeringId", &UMarketplaceGFxMovie::Prop_offeringId, py::return_value_policy::reference)
		.def_readwrite("Prop_isPurchased", &UMarketplaceGFxMovie::Prop_isPurchased, py::return_value_policy::reference)
		.def_readwrite("Prop_isSeasonPass", &UMarketplaceGFxMovie::Prop_isSeasonPass, py::return_value_policy::reference)
		.def_readwrite("Prop_isNewOffer", &UMarketplaceGFxMovie::Prop_isNewOffer, py::return_value_policy::reference)
		.def_readwrite("Prop_isDownloaded", &UMarketplaceGFxMovie::Prop_isDownloaded, py::return_value_policy::reference)
		.def_readwrite("Prop_isInstalled", &UMarketplaceGFxMovie::Prop_isInstalled, py::return_value_policy::reference)
		.def_readwrite("Prop_isFree", &UMarketplaceGFxMovie::Prop_isFree, py::return_value_policy::reference)
		.def_readwrite("Prop_isCompatibility", &UMarketplaceGFxMovie::Prop_isCompatibility, py::return_value_policy::reference)
		.def_readwrite("Prop_isAddOn", &UMarketplaceGFxMovie::Prop_isAddOn, py::return_value_policy::reference)
		.def_readwrite("Prop_isMisc", &UMarketplaceGFxMovie::Prop_isMisc, py::return_value_policy::reference)
		.def_readwrite("Prop_contentTitleText", &UMarketplaceGFxMovie::Prop_contentTitleText, py::return_value_policy::reference)
		.def_readwrite("Prop_messageText", &UMarketplaceGFxMovie::Prop_messageText, py::return_value_policy::reference)
		.def_readwrite("Prop_costText", &UMarketplaceGFxMovie::Prop_costText, py::return_value_policy::reference)
		.def_readwrite("Prop_statusText", &UMarketplaceGFxMovie::Prop_statusText, py::return_value_policy::reference)
		.def_readwrite("Prop_descriptionText", &UMarketplaceGFxMovie::Prop_descriptionText, py::return_value_policy::reference)
		.def_readwrite("WarningDlg", &UMarketplaceGFxMovie::WarningDlg, py::return_value_policy::reference)
		.def("GetSelectedObject", &UMarketplaceGFxMovie::GetSelectedObject, py::return_value_policy::reference)
		.def("FinalizeContentData", &UMarketplaceGFxMovie::FinalizeContentData, py::return_value_policy::reference)
		.def("SetContentData", &UMarketplaceGFxMovie::SetContentData)
		.def("AddContentData", &UMarketplaceGFxMovie::AddContentData)
		.def("SetFilterFromStringAndSortNew", &UMarketplaceGFxMovie::SetFilterFromStringAndSortNew, py::return_value_policy::reference)
		.def("SetFilterFromString", &UMarketplaceGFxMovie::SetFilterFromString, py::return_value_policy::reference)
		.def("ClearFilters", &UMarketplaceGFxMovie::ClearFilters)
		.def("CycleFilter", &UMarketplaceGFxMovie::CycleFilter)
		.def("ApplyFilter", &UMarketplaceGFxMovie::ApplyFilter)
		.def("ScrollDescription", &UMarketplaceGFxMovie::ScrollDescription)
		.def("ShowMessage", &UMarketplaceGFxMovie::ShowMessage)
		.def("ShowMarketplaceElements", &UMarketplaceGFxMovie::ShowMarketplaceElements)
		.def("SetStoreHeader", &UMarketplaceGFxMovie::SetStoreHeader)
		.def("SetTooltips", &UMarketplaceGFxMovie::SetTooltips)
		.def("CreateContentItem", &UMarketplaceGFxMovie::CreateContentItem, py::return_value_policy::reference)
		.def("CreateMarketplaceItem", &UMarketplaceGFxMovie::CreateMarketplaceItem, py::return_value_policy::reference)
		.def("GetOfferingStatusMessage", &UMarketplaceGFxMovie::GetOfferingStatusMessage, py::return_value_policy::reference)
		.def("FormatCost", &UMarketplaceGFxMovie::FormatCost, py::return_value_policy::reference)
		.def("extOnOfferingChanged", &UMarketplaceGFxMovie::extOnOfferingChanged)
		.def("SetShoppingTooltips", &UMarketplaceGFxMovie::SetShoppingTooltips)
		.def("OnFailureDialogClicked", &UMarketplaceGFxMovie::OnFailureDialogClicked)
		.def("ShowDeferredFailureMessage", &UMarketplaceGFxMovie::ShowDeferredFailureMessage)
		.def("PostContentLoaded", &UMarketplaceGFxMovie::PostContentLoaded)
		.def("OnHiddenDownloadableContentListRead", &UMarketplaceGFxMovie::OnHiddenDownloadableContentListRead)
		.def("IsOfferOwned", &UMarketplaceGFxMovie::IsOfferOwned)
		.def("OnDownloadableContentListRead", &UMarketplaceGFxMovie::OnDownloadableContentListRead)
		.def("GetHiddenDLCList", &UMarketplaceGFxMovie::GetHiddenDLCList)
		.def("RefreshDLC", &UMarketplaceGFxMovie::RefreshDLC)
		.def("extOnMarketPlacePanelLoad", &UMarketplaceGFxMovie::extOnMarketPlacePanelLoad)
		.def("extPopupMessage", &UMarketplaceGFxMovie::extPopupMessage)
		.def("OnClickShowMarketplace", &UMarketplaceGFxMovie::OnClickShowMarketplace)
		.def("OnClickShowMarketplaceOffer", &UMarketplaceGFxMovie::OnClickShowMarketplaceOffer)
		.def("ShopInputKey", &UMarketplaceGFxMovie::ShopInputKey)
		.def("eventOnClose", &UMarketplaceGFxMovie::eventOnClose)
		.def("eventStart", &UMarketplaceGFxMovie::eventStart)
		;
	py::class_< UMatchmakingLobbyGFxMovie, UWillowGFxMovie3D >(m, "UMatchmakingLobbyGFxMovie")
		.def_readwrite("CharacterInfoGFxObj", &UMatchmakingLobbyGFxMovie::CharacterInfoGFxObj, py::return_value_policy::reference)
		.def_readwrite("ResultsGFxObj", &UMatchmakingLobbyGFxMovie::ResultsGFxObj, py::return_value_policy::reference)
		.def_readwrite("TooltipsGFxObj", &UMatchmakingLobbyGFxMovie::TooltipsGFxObj, py::return_value_policy::reference)
		.def_readwrite("CurrentMatchmakingState", &UMatchmakingLobbyGFxMovie::CurrentMatchmakingState)
		.def_readwrite("__OnCancel__Delegate", &UMatchmakingLobbyGFxMovie::__OnCancel__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnHostGameAccept__Delegate", &UMatchmakingLobbyGFxMovie::__OnHostGameAccept__Delegate, py::return_value_policy::reference)
		.def("extMatchmakingLobbyOnLoad", &UMatchmakingLobbyGFxMovie::extMatchmakingLobbyOnLoad)
		.def("ResolvePlaythrough", &UMatchmakingLobbyGFxMovie::ResolvePlaythrough, py::return_value_policy::reference)
		.def("UpdateTooltips", &UMatchmakingLobbyGFxMovie::UpdateTooltips)
		.def("UpdateResults", &UMatchmakingLobbyGFxMovie::UpdateResults)
		.def("SetMatchmakingState", &UMatchmakingLobbyGFxMovie::SetMatchmakingState)
		.def("GetResultMessage", &UMatchmakingLobbyGFxMovie::GetResultMessage, py::return_value_policy::reference)
		.def("GetMatchTypeIconFrameName", &UMatchmakingLobbyGFxMovie::GetMatchTypeIconFrameName, py::return_value_policy::reference)
		.def("InitResultEntries", &UMatchmakingLobbyGFxMovie::InitResultEntries)
		.def("HandleInputKey", &UMatchmakingLobbyGFxMovie::HandleInputKey)
		.def("BeginClose", &UMatchmakingLobbyGFxMovie::BeginClose)
		.def("eventOnClose", &UMatchmakingLobbyGFxMovie::eventOnClose)
		.def("eventStart", &UMatchmakingLobbyGFxMovie::eventStart)
		.def("OnHostGameAccept", &UMatchmakingLobbyGFxMovie::OnHostGameAccept)
		.def("OnCancel", &UMatchmakingLobbyGFxMovie::OnCancel)
		;
	py::class_< UFrontEndPlayerListGFxObject, UGFxObject >(m, "UFrontEndPlayerListGFxObject")
		.def_readwrite("OwningMovie", &UFrontEndPlayerListGFxObject::OwningMovie, py::return_value_policy::reference)
		.def_readwrite("PlayerListIds", &UFrontEndPlayerListGFxObject::PlayerListIds, py::return_value_policy::reference)
		.def_readwrite("SelectedPlayerIndex", &UFrontEndPlayerListGFxObject::SelectedPlayerIndex)
		.def_readwrite("SplitJoinRowIndex", &UFrontEndPlayerListGFxObject::SplitJoinRowIndex)
		.def_readwrite("CachedPlayerToKick", &UFrontEndPlayerListGFxObject::CachedPlayerToKick, py::return_value_policy::reference)
		.def_readwrite("WPCOwner", &UFrontEndPlayerListGFxObject::WPCOwner, py::return_value_policy::reference)
		.def_readwrite("MyPartyHeaderBase", &UFrontEndPlayerListGFxObject::MyPartyHeaderBase, py::return_value_policy::reference)
		.def_readwrite("FriendPartyHeader", &UFrontEndPlayerListGFxObject::FriendPartyHeader, py::return_value_policy::reference)
		.def_readwrite("NoMissionFallbackText", &UFrontEndPlayerListGFxObject::NoMissionFallbackText, py::return_value_policy::reference)
		.def_readwrite("PlayerConnectingString", &UFrontEndPlayerListGFxObject::PlayerConnectingString, py::return_value_policy::reference)
		.def_readwrite("SplitJoinMessage", &UFrontEndPlayerListGFxObject::SplitJoinMessage, py::return_value_policy::reference)
		.def_readwrite("InviteFriendMessage", &UFrontEndPlayerListGFxObject::InviteFriendMessage, py::return_value_policy::reference)
		.def_readwrite("WaitingMessage", &UFrontEndPlayerListGFxObject::WaitingMessage, py::return_value_policy::reference)
		.def_readwrite("OfflineMessage", &UFrontEndPlayerListGFxObject::OfflineMessage, py::return_value_policy::reference)
		.def_readwrite("PlayerDetailsIdMap", &UFrontEndPlayerListGFxObject::PlayerDetailsIdMap, py::return_value_policy::reference)
		.def_readwrite("PlayerDetailsMovie", &UFrontEndPlayerListGFxObject::PlayerDetailsMovie, py::return_value_policy::reference)
		.def_readwrite("PlayerDetailsUniqueId", &UFrontEndPlayerListGFxObject::PlayerDetailsUniqueId, py::return_value_policy::reference)
		.def_readwrite("JoinGameCaption", &UFrontEndPlayerListGFxObject::JoinGameCaption, py::return_value_policy::reference)
		.def_readwrite("InviteGameCaption", &UFrontEndPlayerListGFxObject::InviteGameCaption, py::return_value_policy::reference)
		.def_readwrite("ViewGamercardCaption", &UFrontEndPlayerListGFxObject::ViewGamercardCaption, py::return_value_policy::reference)
		.def_readwrite("MuteCaption", &UFrontEndPlayerListGFxObject::MuteCaption, py::return_value_policy::reference)
		.def_readwrite("UnmuteCaption", &UFrontEndPlayerListGFxObject::UnmuteCaption, py::return_value_policy::reference)
		.def_readwrite("KickCaption", &UFrontEndPlayerListGFxObject::KickCaption, py::return_value_policy::reference)
		.def_readwrite("BackCaption", &UFrontEndPlayerListGFxObject::BackCaption, py::return_value_policy::reference)
		.def("HidePlayerDetailsMovie", &UFrontEndPlayerListGFxObject::HidePlayerDetailsMovie)
		.def("GetPrimaryPlayerControllerId", &UFrontEndPlayerListGFxObject::GetPrimaryPlayerControllerId)
		.def("GetPlayerName", &UFrontEndPlayerListGFxObject::GetPlayerName, py::return_value_policy::reference)
		.def("GetPlayerListIndex", &UFrontEndPlayerListGFxObject::GetPlayerListIndex)
		.def("UpdateMuteStatus", &UFrontEndPlayerListGFxObject::UpdateMuteStatus)
		.def("KickPlayer", &UFrontEndPlayerListGFxObject::KickPlayer)
		.def("InviteToGame", &UFrontEndPlayerListGFxObject::InviteToGame)
		.def("JoinGame", &UFrontEndPlayerListGFxObject::JoinGame)
		.def("OnConfirmKickPlayer_Clicked", &UFrontEndPlayerListGFxObject::OnConfirmKickPlayer_Clicked)
		.def("HandlePlayerDetailsButtonClick", &UFrontEndPlayerListGFxObject::HandlePlayerDetailsButtonClick)
		.def("GetPRI", &UFrontEndPlayerListGFxObject::GetPRI, py::return_value_policy::reference)
		.def("PopulatePlayerDetailsDialog", &UFrontEndPlayerListGFxObject::PopulatePlayerDetailsDialog)
		.def("AddPlayerDetailsButton", &UFrontEndPlayerListGFxObject::AddPlayerDetailsButton)
		.def("OnPlayerDetailsLoaded", &UFrontEndPlayerListGFxObject::OnPlayerDetailsLoaded)
		.def("ShowPlayerSelectedDialog", &UFrontEndPlayerListGFxObject::ShowPlayerSelectedDialog)
		.def("GetSessionKey", &UFrontEndPlayerListGFxObject::GetSessionKey, py::return_value_policy::reference)
		.def("ContainsUniqueId", &UFrontEndPlayerListGFxObject::ContainsUniqueId)
		.def("IsInCurrentGame", &UFrontEndPlayerListGFxObject::IsInCurrentGame)
		.def("IsLocalPlayer", &UFrontEndPlayerListGFxObject::IsLocalPlayer)
		.def("IsPlayerMuted", &UFrontEndPlayerListGFxObject::IsPlayerMuted)
		.def("IsRemotePlayerTalking", &UFrontEndPlayerListGFxObject::IsRemotePlayerTalking)
		.def("IsLocalPlayerTalking", &UFrontEndPlayerListGFxObject::IsLocalPlayerTalking)
		.def("IsLocalVoiceEnabled", &UFrontEndPlayerListGFxObject::IsLocalVoiceEnabled)
		.def("IsInPartyChat", &UFrontEndPlayerListGFxObject::IsInPartyChat)
		.def("IsPartyLeader", &UFrontEndPlayerListGFxObject::IsPartyLeader)
		.def("GetCurrentPlaythrough", &UFrontEndPlayerListGFxObject::GetCurrentPlaythrough)
		.def("GetCurrentMissionName", &UFrontEndPlayerListGFxObject::GetCurrentMissionName, py::return_value_policy::reference)
		.def("GetMatchQualityText", &UFrontEndPlayerListGFxObject::GetMatchQualityText, py::return_value_policy::reference)
		.def("GetFriendPartyQualityType", &UFrontEndPlayerListGFxObject::GetFriendPartyQualityType, py::return_value_policy::reference)
		.def("GetFriendPartySlotInfo", &UFrontEndPlayerListGFxObject::GetFriendPartySlotInfo, py::return_value_policy::reference)
		.def("GetFriendPartyHeader", &UFrontEndPlayerListGFxObject::GetFriendPartyHeader, py::return_value_policy::reference)
		.def("GetCharacterIconSwfMoviePath", &UFrontEndPlayerListGFxObject::GetCharacterIconSwfMoviePath, py::return_value_policy::reference)
		.def("DebugAddDummyPlayers", &UFrontEndPlayerListGFxObject::DebugAddDummyPlayers)
		.def("IsPlayerConnecting", &UFrontEndPlayerListGFxObject::IsPlayerConnecting)
		.def("OnPlayerListButtonClick", &UFrontEndPlayerListGFxObject::OnPlayerListButtonClick)
		.def("RefreshPlayerList", &UFrontEndPlayerListGFxObject::RefreshPlayerList)
		.def("Hide", &UFrontEndPlayerListGFxObject::Hide)
		.def("Show", &UFrontEndPlayerListGFxObject::Show)
		.def("ScrollUp", &UFrontEndPlayerListGFxObject::ScrollUp)
		.def("ScrollToTop", &UFrontEndPlayerListGFxObject::ScrollToTop)
		.def("ScrollDown", &UFrontEndPlayerListGFxObject::ScrollDown)
		.def("SetVoiceStatusTalking", &UFrontEndPlayerListGFxObject::SetVoiceStatusTalking)
		.def("SetVoiceStatusMuted", &UFrontEndPlayerListGFxObject::SetVoiceStatusMuted)
		.def("SetVoiceStatusEnabled", &UFrontEndPlayerListGFxObject::SetVoiceStatusEnabled)
		.def("SetConnectionQuality", &UFrontEndPlayerListGFxObject::SetConnectionQuality)
		.def("ResetFocus", &UFrontEndPlayerListGFxObject::ResetFocus)
		.def("ClearRow", &UFrontEndPlayerListGFxObject::ClearRow)
		.def("ConfigureSelectedIndex", &UFrontEndPlayerListGFxObject::ConfigureSelectedIndex)
		.def("ConfigureMessagePromptRow", &UFrontEndPlayerListGFxObject::ConfigureMessagePromptRow)
		.def("ConfigurePlayerInfoRow", &UFrontEndPlayerListGFxObject::ConfigurePlayerInfoRow)
		.def("ConfigureHeaderInfoRow", &UFrontEndPlayerListGFxObject::ConfigureHeaderInfoRow)
		.def("ClearAllEntries", &UFrontEndPlayerListGFxObject::ClearAllEntries)
		.def("EndConfigureRows", &UFrontEndPlayerListGFxObject::EndConfigureRows)
		.def("BeginConfigureRows", &UFrontEndPlayerListGFxObject::BeginConfigureRows)
		.def("OnPlayerTalkingStateChange", &UFrontEndPlayerListGFxObject::OnPlayerTalkingStateChange)
		.def("ShutDown", &UFrontEndPlayerListGFxObject::ShutDown)
		.def("Init", &UFrontEndPlayerListGFxObject::Init)
		.def("GetLocalPartyPlayerCount", [](UFrontEndPlayerListGFxObject &self ) { int* pyPlayerCount = (int*)malloc(sizeof(int)) ; int* pyMaxPlayerCount = (int*)malloc(sizeof(int)) ;   self.GetLocalPartyPlayerCount(pyPlayerCount, pyMaxPlayerCount); return py::make_tuple(*pyPlayerCount, *pyMaxPlayerCount); })
		;
	py::class_< UWillowGFxClikWidget, UGFxClikWidget >(m, "UWillowGFxClikWidget")
		.def("OnEvent", &UWillowGFxClikWidget::OnEvent)
		.def("OnClikEvent", &UWillowGFxClikWidget::OnClikEvent)
		.def("AddClikEvent", &UWillowGFxClikWidget::AddClikEvent)
		;
	py::class_< UWillowScrollingList, UWillowGFxClikWidget >(m, "UWillowScrollingList")
		.def_property("bSuppressMovementSound", [](UWillowScrollingList &self){return self.bSuppressMovementSound;}, [](UWillowScrollingList &self, bool value){self.bSuppressMovementSound = value ? 1 : 0;})
		.def_property("bDontFocusFirstAvailableListItem", [](UWillowScrollingList &self){return self.bDontFocusFirstAvailableListItem;}, [](UWillowScrollingList &self, bool value){self.bDontFocusFirstAvailableListItem = value ? 1 : 0;})
		.def_readwrite("DataProviderStack", &UWillowScrollingList::DataProviderStack, py::return_value_policy::reference)
		.def_readwrite("IndexToEventId", &UWillowScrollingList::IndexToEventId, py::return_value_policy::reference)
		.def_readwrite("MyOwnerMovie", &UWillowScrollingList::MyOwnerMovie, py::return_value_policy::reference)
		.def_readwrite("BackCaption", &UWillowScrollingList::BackCaption, py::return_value_policy::reference)
		.def_readwrite("__OnListChanged__Delegate", &UWillowScrollingList::__OnListChanged__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnSelectedIndexChanged__Delegate", &UWillowScrollingList::__OnSelectedIndexChanged__Delegate, py::return_value_policy::reference)
		.def("PlaySound_VerticalMovement", &UWillowScrollingList::PlaySound_VerticalMovement)
		.def("OnSpinnerValueChange", &UWillowScrollingList::OnSpinnerValueChange)
		.def("OnSliderValueChange", &UWillowScrollingList::OnSliderValueChange)
		.def("OnClikEvent", &UWillowScrollingList::OnClikEvent)
		.def("GetSelectedIndex", &UWillowScrollingList::GetSelectedIndex)
		.def("SetSelectedIndex", &UWillowScrollingList::SetSelectedIndex)
		.def("SetFocused", &UWillowScrollingList::SetFocused)
		.def("IsSpinnerListItemInternal", &UWillowScrollingList::IsSpinnerListItemInternal)
		.def("IsSpinnerListItem", &UWillowScrollingList::IsSpinnerListItem)
		.def("IsSliderListItemInternal", &UWillowScrollingList::IsSliderListItemInternal)
		.def("IsSliderListItem", &UWillowScrollingList::IsSliderListItem)
		.def("FocusFirstAvailableListItem", &UWillowScrollingList::FocusFirstAvailableListItem)
		.def("ClearListItems", &UWillowScrollingList::ClearListItems)
		.def("CommitListItems", &UWillowScrollingList::CommitListItems)
		.def("AddSliderListItemInternal", &UWillowScrollingList::AddSliderListItemInternal)
		.def("AddSliderListItem", &UWillowScrollingList::AddSliderListItem)
		.def("AddSpinnerListItemInternal", &UWillowScrollingList::AddSpinnerListItemInternal)
		.def("AddSpinnerListItem", &UWillowScrollingList::AddSpinnerListItem)
		.def("AddListItemInternal", &UWillowScrollingList::AddListItemInternal)
		.def("AddListItem", &UWillowScrollingList::AddListItem)
		.def("HandlePopList", &UWillowScrollingList::HandlePopList)
		.def("Refresh", &UWillowScrollingList::Refresh)
		.def("PushDataProvider", &UWillowScrollingList::PushDataProvider)
		.def("GetCurrentDataProvider", &UWillowScrollingList::GetCurrentDataProvider, py::return_value_policy::reference)
		.def("Cleanup", &UWillowScrollingList::Cleanup)
		.def("Init", &UWillowScrollingList::Init)
		.def("OnSelectedIndexChanged", &UWillowScrollingList::OnSelectedIndexChanged)
		.def("OnListChanged", &UWillowScrollingList::OnListChanged)
		;
	py::class_< UFrontendMenuGFxObject, UGFxObject >(m, "UFrontendMenuGFxObject")
		.def("FadeLobbyDeco", &UFrontendMenuGFxObject::FadeLobbyDeco)
		.def("SetDecoVisible", &UFrontendMenuGFxObject::SetDecoVisible)
		.def("ApplyPriorityVisibilityEffect", &UFrontendMenuGFxObject::ApplyPriorityVisibilityEffect)
		.def("ApplyPriorityBlurEffect", &UFrontendMenuGFxObject::ApplyPriorityBlurEffect)
		;
	py::class_< UIWillowScrollingListDataProvider, UInterface >(m, "UIWillowScrollingListDataProvider")
		.def("Cleanup", &UIWillowScrollingListDataProvider::Cleanup)
		.def("GetSubmenuForEvent", &UIWillowScrollingListDataProvider::GetSubmenuForEvent, py::return_value_policy::reference)
		.def("Populate", &UIWillowScrollingListDataProvider::Populate)
		.def("HandleSpinnerChange", &UIWillowScrollingListDataProvider::HandleSpinnerChange)
		.def("HandleSliderChange", &UIWillowScrollingListDataProvider::HandleSliderChange)
		.def("HandleSelectionRollover", &UIWillowScrollingListDataProvider::HandleSelectionRollover)
		.def("HandleSelectionChange", &UIWillowScrollingListDataProvider::HandleSelectionChange)
		.def("HandleClick", &UIWillowScrollingListDataProvider::HandleClick)
		.def("OnPop", &UIWillowScrollingListDataProvider::OnPop)
		.def("OnPush", &UIWillowScrollingListDataProvider::OnPush)
		.def("GetMenuTooltip", &UIWillowScrollingListDataProvider::GetMenuTooltip, py::return_value_policy::reference)
		.def("GetMenuDisplayName", &UIWillowScrollingListDataProvider::GetMenuDisplayName, py::return_value_policy::reference)
		;
	py::class_< UIPlayerListOwner, UInterface >(m, "UIPlayerListOwner")
		.def("eventPlayUISound", &UIPlayerListOwner::eventPlayUISound)
		.def("GetPlayerDetailsMovieDef", &UIPlayerListOwner::GetPlayerDetailsMovieDef, py::return_value_policy::reference)
		.def("GetFriend", &UIPlayerListOwner::GetFriend)
		.def("AppendTooltipString", &UIPlayerListOwner::AppendTooltipString)
		.def("CheckControllerStatus", &UIPlayerListOwner::CheckControllerStatus)
		.def("IsPlayerOwner", &UIPlayerListOwner::IsPlayerOwner)
		.def("CanKick", &UIPlayerListOwner::CanKick)
		.def("CanViewGamercard", &UIPlayerListOwner::CanViewGamercard)
		.def("CanUnmute", &UIPlayerListOwner::CanUnmute)
		.def("CanMute", &UIPlayerListOwner::CanMute)
		.def("CanInvite", &UIPlayerListOwner::CanInvite)
		.def("CanJoin", &UIPlayerListOwner::CanJoin)
		.def("GetWPCOwner", &UIPlayerListOwner::GetWPCOwner, py::return_value_policy::reference)
		;
	py::class_< UNetworkOptionsGFxObject, UGFxObject >(m, "UNetworkOptionsGFxObject")
		.def_property("bVisible", [](UNetworkOptionsGFxObject &self){return self.bVisible;}, [](UNetworkOptionsGFxObject &self, bool value){self.bVisible = value ? 1 : 0;})
		.def("SetClickHandler", &UNetworkOptionsGFxObject::SetClickHandler)
		.def("NavigateDown", &UNetworkOptionsGFxObject::NavigateDown)
		.def("NavigateUp", &UNetworkOptionsGFxObject::NavigateUp)
		.def("FocusFirstButton", &UNetworkOptionsGFxObject::FocusFirstButton)
		.def("ConfigureButton", &UNetworkOptionsGFxObject::ConfigureButton)
		.def("SetCurrentNetworkType", &UNetworkOptionsGFxObject::SetCurrentNetworkType)
		.def("Hide", &UNetworkOptionsGFxObject::Hide)
		.def("Show", &UNetworkOptionsGFxObject::Show)
		;
	py::class_< UWillowScrollingListDataProviderBase, UObject >(m, "UWillowScrollingListDataProviderBase")
		.def_readwrite("MenuDisplayName", &UWillowScrollingListDataProviderBase::MenuDisplayName, py::return_value_policy::reference)
		.def_readwrite("MenuTooltip", &UWillowScrollingListDataProviderBase::MenuTooltip, py::return_value_policy::reference)
		.def("Cleanup", &UWillowScrollingListDataProviderBase::Cleanup)
		.def("GetSubmenuForEvent", &UWillowScrollingListDataProviderBase::GetSubmenuForEvent, py::return_value_policy::reference)
		.def("Populate", &UWillowScrollingListDataProviderBase::Populate)
		.def("HandleSpinnerChange", &UWillowScrollingListDataProviderBase::HandleSpinnerChange)
		.def("HandleSliderChange", &UWillowScrollingListDataProviderBase::HandleSliderChange)
		.def("HandleSelectionRollover", &UWillowScrollingListDataProviderBase::HandleSelectionRollover)
		.def("HandleSelectionChange", &UWillowScrollingListDataProviderBase::HandleSelectionChange)
		.def("HandleInputKey", &UWillowScrollingListDataProviderBase::HandleInputKey)
		.def("HandleClick", &UWillowScrollingListDataProviderBase::HandleClick)
		.def("OnPop", &UWillowScrollingListDataProviderBase::OnPop)
		.def("OnPush", &UWillowScrollingListDataProviderBase::OnPush)
		.def("GetMenuTooltip", &UWillowScrollingListDataProviderBase::GetMenuTooltip, py::return_value_policy::reference)
		.def("GetMenuDisplayName", &UWillowScrollingListDataProviderBase::GetMenuDisplayName, py::return_value_policy::reference)
		;
	py::class_< UWillowScrollingListDataProviderMatchmaking, UWillowScrollingListDataProviderBase >(m, "UWillowScrollingListDataProviderMatchmaking")
		.def("Populate", &UWillowScrollingListDataProviderMatchmaking::Populate)
		.def("HandleClick", &UWillowScrollingListDataProviderMatchmaking::HandleClick)
		;
	py::class_< UWillowOnlineGameSearch_DataStore, UUIDataStore_OnlineGameSearch >(m, "UWillowOnlineGameSearch_DataStore")
		.def("GetCurrentSearchName", &UWillowOnlineGameSearch_DataStore::GetCurrentSearchName, py::return_value_policy::reference)
		;
	py::class_< UWillowOnlineGameSearch, UOnlineGameSearch >(m, "UWillowOnlineGameSearch")
		.def_readwrite("LevelVariance", &UWillowOnlineGameSearch::LevelVariance)
		.def_readwrite("MaxPing", &UWillowOnlineGameSearch::MaxPing)
		;
	py::class_< UTestMapsListDefinition, UGBXDefinition >(m, "UTestMapsListDefinition")
		.def_readwrite("ListItems", &UTestMapsListDefinition::ListItems, py::return_value_policy::reference)
		;
	py::class_< UPlayerDetailsGFxMovie, UWillowGFxMovie >(m, "UPlayerDetailsGFxMovie")
		.def_readwrite("PlayerDetailsObject", &UPlayerDetailsGFxMovie::PlayerDetailsObject, py::return_value_policy::reference)
		.def_readwrite("OwningMovie", &UPlayerDetailsGFxMovie::OwningMovie, py::return_value_policy::reference)
		.def_readwrite("__OnLoad__Delegate", &UPlayerDetailsGFxMovie::__OnLoad__Delegate, py::return_value_policy::reference)
		.def("HandleInputKey", &UPlayerDetailsGFxMovie::HandleInputKey)
		.def("extClosed", &UPlayerDetailsGFxMovie::extClosed)
		.def("extOnLoad", &UPlayerDetailsGFxMovie::extOnLoad)
		.def("eventOnClose", &UPlayerDetailsGFxMovie::eventOnClose)
		.def("eventStart", &UPlayerDetailsGFxMovie::eventStart)
		.def("OnLoad", &UPlayerDetailsGFxMovie::OnLoad)
		;
	py::class_< UPlayerDetailsGFxObject, UGFxObject >(m, "UPlayerDetailsGFxObject")
		.def_property("bHidden", [](UPlayerDetailsGFxObject &self){return self.bHidden;}, [](UPlayerDetailsGFxObject &self, bool value){self.bHidden = value ? 1 : 0;})
		.def("SetClickHandler", &UPlayerDetailsGFxObject::SetClickHandler)
		.def("NavigateDown", &UPlayerDetailsGFxObject::NavigateDown)
		.def("NavigateUp", &UPlayerDetailsGFxObject::NavigateUp)
		.def("FocusFirstButton", &UPlayerDetailsGFxObject::FocusFirstButton)
		.def("ConfigureButton", &UPlayerDetailsGFxObject::ConfigureButton)
		.def("SetClassIconPath", &UPlayerDetailsGFxObject::SetClassIconPath)
		.def("SetMatchIconAndText", &UPlayerDetailsGFxObject::SetMatchIconAndText)
		.def("SetMissionText", &UPlayerDetailsGFxObject::SetMissionText)
		.def("SetPlaythroughText", &UPlayerDetailsGFxObject::SetPlaythroughText)
		.def("SetClassText", &UPlayerDetailsGFxObject::SetClassText)
		.def("SetGamertag", &UPlayerDetailsGFxObject::SetGamertag)
		.def("Hide", &UPlayerDetailsGFxObject::Hide)
		.def("Show", &UPlayerDetailsGFxObject::Show)
		;
	py::class_< UGammaScreenGFxDefinition, UWillowGFxMovie3DDefinition >(m, "UGammaScreenGFxDefinition")
		.def_readwrite("Parameters", &UGammaScreenGFxDefinition::Parameters, py::return_value_policy::reference)
		;
	py::class_< UGammaScreenGFxMovie, UWillowGFxMovie3D >(m, "UGammaScreenGFxMovie")
		;
	py::class_< UGearboxAccountGFxObject, UGFxObject >(m, "UGearboxAccountGFxObject")
		.def("SelectIsEnabled", &UGearboxAccountGFxObject::SelectIsEnabled)
		.def("ClearKeyCode", &UGearboxAccountGFxObject::ClearKeyCode)
		.def("TrySetKeyCode", &UGearboxAccountGFxObject::TrySetKeyCode)
		.def("ConfigureForViewOffers", &UGearboxAccountGFxObject::ConfigureForViewOffers)
		.def("ConfigureForRedeemCode", &UGearboxAccountGFxObject::ConfigureForRedeemCode)
		.def("IsDisplayingOffers", &UGearboxAccountGFxObject::IsDisplayingOffers)
		.def("SetOfferData", &UGearboxAccountGFxObject::SetOfferData)
		.def("ScrollMessageDown", &UGearboxAccountGFxObject::ScrollMessageDown)
		.def("ScrollMessageUp", &UGearboxAccountGFxObject::ScrollMessageUp)
		.def("HasReadTermsOfService", &UGearboxAccountGFxObject::HasReadTermsOfService)
		.def("SetTermsOfService", &UGearboxAccountGFxObject::SetTermsOfService)
		.def("HasReadPrivacyPolicy", &UGearboxAccountGFxObject::HasReadPrivacyPolicy)
		.def("SetPrivacyPolicy", &UGearboxAccountGFxObject::SetPrivacyPolicy)
		.def("SetTooltips", &UGearboxAccountGFxObject::SetTooltips)
		.def("SetSignInStatus", &UGearboxAccountGFxObject::SetSignInStatus)
		.def("SetPlayerName", &UGearboxAccountGFxObject::SetPlayerName)
		.def("SetFocusedConsoleCodeSegment", &UGearboxAccountGFxObject::SetFocusedConsoleCodeSegment)
		.def("SetConfirmPassword", &UGearboxAccountGFxObject::SetConfirmPassword)
		.def("SetPassword", &UGearboxAccountGFxObject::SetPassword)
		.def("SetEmail", &UGearboxAccountGFxObject::SetEmail)
		.def("GetConfirmPassword", &UGearboxAccountGFxObject::GetConfirmPassword, py::return_value_policy::reference)
		.def("GetPassword", &UGearboxAccountGFxObject::GetPassword, py::return_value_policy::reference)
		.def("GetKeyCode", &UGearboxAccountGFxObject::GetKeyCode, py::return_value_policy::reference)
		.def("GetEmail", &UGearboxAccountGFxObject::GetEmail, py::return_value_policy::reference)
		.def("GetAgeYear", &UGearboxAccountGFxObject::GetAgeYear)
		.def("GetAgeDay", &UGearboxAccountGFxObject::GetAgeDay)
		.def("GetAgeMonth", &UGearboxAccountGFxObject::GetAgeMonth)
		.def("SetCurrentDate", &UGearboxAccountGFxObject::SetCurrentDate)
		.def("OffersBoxIsChecked", &UGearboxAccountGFxObject::OffersBoxIsChecked)
		.def("RefreshWelcomeScreen", &UGearboxAccountGFxObject::RefreshWelcomeScreen)
		.def("DisplayScreen", &UGearboxAccountGFxObject::DisplayScreen)
		;
	py::class_< UGFxMovieMissionStatus, UWillowGFxMovie >(m, "UGFxMovieMissionStatus")
		.def_property("bHasEligibleMissions", [](UGFxMovieMissionStatus &self){return self.bHasEligibleMissions;}, [](UGFxMovieMissionStatus &self, bool value){self.bHasEligibleMissions = value ? 1 : 0;})
		.def_property("bHasCompleteMissions", [](UGFxMovieMissionStatus &self){return self.bHasCompleteMissions;}, [](UGFxMovieMissionStatus &self, bool value){self.bHasCompleteMissions = value ? 1 : 0;})
		.def("eventOnClose", &UGFxMovieMissionStatus::eventOnClose)
		.def("CheckMissionState", &UGFxMovieMissionStatus::CheckMissionState)
		.def("OnTick", &UGFxMovieMissionStatus::OnTick)
		.def("eventStart", &UGFxMovieMissionStatus::eventStart)
		;
	py::class_< UGFxTextListContent, UObject >(m, "UGFxTextListContent")
		.def_readwrite("TextListContent", &UGFxTextListContent::TextListContent, py::return_value_policy::reference)
		.def("GetObjectForIndex", &UGFxTextListContent::GetObjectForIndex, py::return_value_policy::reference)
		.def("GetTextAndLabelForIndex", &UGFxTextListContent::GetTextAndLabelForIndex)
		.def("AddEntry", &UGFxTextListContent::AddEntry)
		.def("GetLength", &UGFxTextListContent::GetLength)
		.def("Empty", &UGFxTextListContent::Empty)
		;
	py::class_< UGraveyardGFxObject, UGFxObject >(m, "UGraveyardGFxObject")
		.def("Hide", &UGraveyardGFxObject::Hide)
		.def("Show", &UGraveyardGFxObject::Show)
		.def("SetTombstoneInfo", &UGraveyardGFxObject::SetTombstoneInfo)
		;
	py::class_< UHealthBarGFxObject, UGFxObject >(m, "UHealthBarGFxObject")
		.def_readwrite("CachedCurrentHealth", &UHealthBarGFxObject::CachedCurrentHealth)
		.def("__SetHealth", &UHealthBarGFxObject::__SetHealth)
		.def("SetHealth", &UHealthBarGFxObject::SetHealth)
		;
	py::class_< UWillowLevelTimerDefinition, UGBXDefinition >(m, "UWillowLevelTimerDefinition")
		.def_readwrite("TimerHeader", &UWillowLevelTimerDefinition::TimerHeader, py::return_value_policy::reference)
		.def_readwrite("XPosition", &UWillowLevelTimerDefinition::XPosition)
		.def_readwrite("YPosition", &UWillowLevelTimerDefinition::YPosition)
		.def_readwrite("TimerFont", &UWillowLevelTimerDefinition::TimerFont, py::return_value_policy::reference)
		.def_readwrite("TimerColor", &UWillowLevelTimerDefinition::TimerColor, py::return_value_policy::reference)
		;
	py::class_< UHUDScaleGuideGFxMovie, UWillowGFxMovie3D >(m, "UHUDScaleGuideGFxMovie")
		.def_property("CachedWidescreen", [](UHUDScaleGuideGFxMovie &self){return self.CachedWidescreen;}, [](UHUDScaleGuideGFxMovie &self, bool value){self.CachedWidescreen = value ? 1 : 0;})
		.def_readwrite("Arrow_Up", &UHUDScaleGuideGFxMovie::Arrow_Up, py::return_value_policy::reference)
		.def_readwrite("Arrow_Down", &UHUDScaleGuideGFxMovie::Arrow_Down, py::return_value_policy::reference)
		.def_readwrite("Arrow_Left", &UHUDScaleGuideGFxMovie::Arrow_Left, py::return_value_policy::reference)
		.def_readwrite("Arrow_Right", &UHUDScaleGuideGFxMovie::Arrow_Right, py::return_value_policy::reference)
		.def("UpdateFrameForAspectRatio", &UHUDScaleGuideGFxMovie::UpdateFrameForAspectRatio)
		.def("SetScaleForClip", &UHUDScaleGuideGFxMovie::SetScaleForClip)
		.def("eventOnTick", &UHUDScaleGuideGFxMovie::eventOnTick)
		.def("eventStart", &UHUDScaleGuideGFxMovie::eventStart)
		;
	py::class_< UIAIBehavior, UInterface >(m, "UIAIBehavior")
		;
	py::class_< UIGFxMenuScreenTickable, UInterface >(m, "UIGFxMenuScreenTickable")
		.def("OnTick", &UIGFxMenuScreenTickable::OnTick)
		;
	py::class_< UIHijackBehavior, UInterface >(m, "UIHijackBehavior")
		;
	py::class_< UInputBindingsClipGFxObject, UGFxObject >(m, "UInputBindingsClipGFxObject")
		.def_property("bIsShown", [](UInputBindingsClipGFxObject &self){return self.bIsShown;}, [](UInputBindingsClipGFxObject &self, bool value){self.bIsShown = value ? 1 : 0;})
		.def("SetCustomizeTip", &UInputBindingsClipGFxObject::SetCustomizeTip)
		.def("AddKeyData", &UInputBindingsClipGFxObject::AddKeyData, py::return_value_policy::reference)
		.def("EmptyKeyData", &UInputBindingsClipGFxObject::EmptyKeyData)
		.def("InvalidateKeyData", &UInputBindingsClipGFxObject::InvalidateKeyData)
		.def("SetKeybindMode", &UInputBindingsClipGFxObject::SetKeybindMode)
		.def("SetControllerMode", &UInputBindingsClipGFxObject::SetControllerMode)
		.def("_SetVisible", &UInputBindingsClipGFxObject::_SetVisible)
		.def("Hide", &UInputBindingsClipGFxObject::Hide)
		.def("Show", &UInputBindingsClipGFxObject::Show)
		;
	py::class_< UInstanceDataContextResolver, UAttributeContextResolver >(m, "UInstanceDataContextResolver")
		.def_readwrite("InstanceDataName", &UInstanceDataContextResolver::InstanceDataName, py::return_value_policy::reference)
		.def("GetAttributeContext", &UInstanceDataContextResolver::GetAttributeContext, py::return_value_policy::reference)
		;
	py::class_< UInventoryAttributeDefinition, UAttributeDefinition >(m, "UInventoryAttributeDefinition")
		;
	py::class_< UInventoryDefinitionAttributeContextResolver, UAttributeContextResolver >(m, "UInventoryDefinitionAttributeContextResolver")
		.def("GetAttributeContext", &UInventoryDefinitionAttributeContextResolver::GetAttributeContext, py::return_value_policy::reference)
		;
	py::class_< UVendingMachineExGFxDefinition, UWillowInventoryGFxDefinition >(m, "UVendingMachineExGFxDefinition")
		.def_property("bCustomStoragePanelTint", [](UVendingMachineExGFxDefinition &self){return self.bCustomStoragePanelTint;}, [](UVendingMachineExGFxDefinition &self, bool value){self.bCustomStoragePanelTint = value ? 1 : 0;})
		.def_property("bShouldAllowCompare", [](UVendingMachineExGFxDefinition &self){return self.bShouldAllowCompare;}, [](UVendingMachineExGFxDefinition &self, bool value){self.bShouldAllowCompare = value ? 1 : 0;})
		.def_property("bDisableSelling", [](UVendingMachineExGFxDefinition &self){return self.bDisableSelling;}, [](UVendingMachineExGFxDefinition &self, bool value){self.bDisableSelling = value ? 1 : 0;})
		.def_property("bShouldPollShopItems", [](UVendingMachineExGFxDefinition &self){return self.bShouldPollShopItems;}, [](UVendingMachineExGFxDefinition &self, bool value){self.bShouldPollShopItems = value ? 1 : 0;})
		.def_property("bShouldAllowSorting", [](UVendingMachineExGFxDefinition &self){return self.bShouldAllowSorting;}, [](UVendingMachineExGFxDefinition &self, bool value){self.bShouldAllowSorting = value ? 1 : 0;})
		.def_property("bShouldShowStorageCountPanel", [](UVendingMachineExGFxDefinition &self){return self.bShouldShowStorageCountPanel;}, [](UVendingMachineExGFxDefinition &self, bool value){self.bShouldShowStorageCountPanel = value ? 1 : 0;})
		.def_property("bShouldShowAmmoPanel", [](UVendingMachineExGFxDefinition &self){return self.bShouldShowAmmoPanel;}, [](UVendingMachineExGFxDefinition &self, bool value){self.bShouldShowAmmoPanel = value ? 1 : 0;})
		.def_readwrite("CustomStoragePanelTint", &UVendingMachineExGFxDefinition::CustomStoragePanelTint, py::return_value_policy::reference)
		.def_readwrite("CustomStoragePanelHeaderIcon", &UVendingMachineExGFxDefinition::CustomStoragePanelHeaderIcon, py::return_value_policy::reference)
		.def_readwrite("CellWidth", &UVendingMachineExGFxDefinition::CellWidth)
		.def_readwrite("CellHeight", &UVendingMachineExGFxDefinition::CellHeight)
		.def_readwrite("TextureWidth", &UVendingMachineExGFxDefinition::TextureWidth)
		.def_readwrite("TextureHeight", &UVendingMachineExGFxDefinition::TextureHeight)
		.def_readwrite("TextureNamePlayer0", &UVendingMachineExGFxDefinition::TextureNamePlayer0, py::return_value_policy::reference)
		.def_readwrite("TextureNamePlayer1", &UVendingMachineExGFxDefinition::TextureNamePlayer1, py::return_value_policy::reference)
		.def_readwrite("CustomIOTDMovie", &UVendingMachineExGFxDefinition::CustomIOTDMovie, py::return_value_policy::reference)
		.def_readwrite("CustomHeaderStyle", &UVendingMachineExGFxDefinition::CustomHeaderStyle, py::return_value_policy::reference)
		.def_readwrite("CustomIOTDVisitLabel", &UVendingMachineExGFxDefinition::CustomIOTDVisitLabel, py::return_value_policy::reference)
		.def_readwrite("bUseAdvancedCustomStoragePanelTint", &UVendingMachineExGFxDefinition::bUseAdvancedCustomStoragePanelTint)
		.def_readwrite("AdvancedCustomTint", &UVendingMachineExGFxDefinition::AdvancedCustomTint, py::return_value_policy::reference)
		;
	py::class_< UIUISubMenuNavigation, UInterface >(m, "UIUISubMenuNavigation")
		.def("ActivateLastSubMenu", &UIUISubMenuNavigation::ActivateLastSubMenu)
		.def("ActivateFirstSubMenu", &UIUISubMenuNavigation::ActivateFirstSubMenu)
		;
	py::class_< ULANServerBrowserGFxObject, UGFxObject >(m, "ULANServerBrowserGFxObject")
		.def("SetSortDirectionButtonLabel", &ULANServerBrowserGFxObject::SetSortDirectionButtonLabel)
		.def("SetSortTypeButtonLabel", &ULANServerBrowserGFxObject::SetSortTypeButtonLabel)
		.def("GetSelectedServerIndex", &ULANServerBrowserGFxObject::GetSelectedServerIndex)
		.def("SetSelectedServerIndex", &ULANServerBrowserGFxObject::SetSelectedServerIndex)
		.def("SetSearchingForGames", &ULANServerBrowserGFxObject::SetSearchingForGames)
		.def("SetGameCountString", &ULANServerBrowserGFxObject::SetGameCountString)
		.def("EndConfigureServerList", &ULANServerBrowserGFxObject::EndConfigureServerList)
		.def("BeginConfigureServerList", &ULANServerBrowserGFxObject::BeginConfigureServerList)
		.def("AddServerListEntry", &ULANServerBrowserGFxObject::AddServerListEntry)
		;
	py::class_< ULatentRewardGFxMovie, UWillowGFxMovie3D >(m, "ULatentRewardGFxMovie")
		.def_readwrite("RewardObject", &ULatentRewardGFxMovie::RewardObject, py::return_value_policy::reference)
		.def("OnClosedOnDeath", &ULatentRewardGFxMovie::OnClosedOnDeath)
		.def("HandleInputAxis", &ULatentRewardGFxMovie::HandleInputAxis)
		.def("HandleRewardInputKey", &ULatentRewardGFxMovie::HandleRewardInputKey)
		.def("extOnRolloverChoice", &ULatentRewardGFxMovie::extOnRolloverChoice)
		.def("extOnFocusedChoice", &ULatentRewardGFxMovie::extOnFocusedChoice)
		.def("extRewardPanelClosed", &ULatentRewardGFxMovie::extRewardPanelClosed)
		.def("AcceptReward", &ULatentRewardGFxMovie::AcceptReward)
		.def("extOnClickedChoice", &ULatentRewardGFxMovie::extOnClickedChoice)
		.def("DisplayRewardsPanel", &ULatentRewardGFxMovie::DisplayRewardsPanel)
		.def("extTryDisplayRewardPanel", &ULatentRewardGFxMovie::extTryDisplayRewardPanel)
		.def("eventOnClose", &ULatentRewardGFxMovie::eventOnClose)
		.def("eventStart", &ULatentRewardGFxMovie::eventStart)
		;
	py::class_< UMissionRewardGFxObject, UGFxObject >(m, "UMissionRewardGFxObject")
		.def_readwrite("RewardData", &UMissionRewardGFxObject::RewardData, py::return_value_policy::reference)
		.def_readwrite("OwningMovie", &UMissionRewardGFxObject::OwningMovie, py::return_value_policy::reference)
		.def_readwrite("CardContents", &UMissionRewardGFxObject::CardContents, py::return_value_policy::reference)
		.def_readwrite("RTM", &UMissionRewardGFxObject::RTM, py::return_value_policy::reference)
		.def_readwrite("ItemCard", &UMissionRewardGFxObject::ItemCard, py::return_value_policy::reference)
		.def_readwrite("Header_Experience", &UMissionRewardGFxObject::Header_Experience, py::return_value_policy::reference)
		.def_readwrite("Header_Money", &UMissionRewardGFxObject::Header_Money, py::return_value_policy::reference)
		.def_readwrite("Header_Gear", &UMissionRewardGFxObject::Header_Gear, py::return_value_policy::reference)
		.def_readwrite("Header_Or", &UMissionRewardGFxObject::Header_Or, py::return_value_policy::reference)
		.def_readwrite("RewardChoiceFocused", &UMissionRewardGFxObject::RewardChoiceFocused)
		.def("DestroyPreviewInventory", &UMissionRewardGFxObject::DestroyPreviewInventory)
		.def("Interrupted", &UMissionRewardGFxObject::Interrupted)
		.def("SetTooltips", &UMissionRewardGFxObject::SetTooltips)
		.def("InspectItem", &UMissionRewardGFxObject::InspectItem)
		.def("GetSelectedThing", &UMissionRewardGFxObject::GetSelectedThing, py::return_value_policy::reference)
		.def("PanelOnInputKey", &UMissionRewardGFxObject::PanelOnInputKey)
		.def("__SetCellMarks", &UMissionRewardGFxObject::__SetCellMarks)
		.def("__SetCellInfo", &UMissionRewardGFxObject::__SetCellInfo)
		.def("SetCellInfo", &UMissionRewardGFxObject::SetCellInfo)
		.def("RemoveEventListeners", &UMissionRewardGFxObject::RemoveEventListeners)
		.def("OnClickedChoice", &UMissionRewardGFxObject::OnClickedChoice)
		.def("OnRolloverChoice", &UMissionRewardGFxObject::OnRolloverChoice)
		.def("OnFocusedChoice", &UMissionRewardGFxObject::OnFocusedChoice)
		.def("AcceptReward", &UMissionRewardGFxObject::AcceptReward)
		.def("ConfigureForPlayer", &UMissionRewardGFxObject::ConfigureForPlayer)
		.def("SetNumItemChoices", &UMissionRewardGFxObject::SetNumItemChoices)
		.def("SpawnInventoryForRewardUI", &UMissionRewardGFxObject::SpawnInventoryForRewardUI, py::return_value_policy::reference)
		.def("SetUpRewardsPageItems", &UMissionRewardGFxObject::SetUpRewardsPageItems)
		.def("GetNumItems", &UMissionRewardGFxObject::GetNumItems)
		.def("SetPlotCritical", &UMissionRewardGFxObject::SetPlotCritical)
		.def("SetUpRewardsPage", &UMissionRewardGFxObject::SetUpRewardsPage)
		.def("FreeCellData", &UMissionRewardGFxObject::FreeCellData)
		.def("InitCellData", &UMissionRewardGFxObject::InitCellData)
		.def("SetNoReward", &UMissionRewardGFxObject::SetNoReward)
		.def("SetPendingMissionRewardData", &UMissionRewardGFxObject::SetPendingMissionRewardData)
		.def("Init", &UMissionRewardGFxObject::Init)
		;
	py::class_< ALevelStreamingVolumeDynamic, ALevelStreamingVolume >(m, "ALevelStreamingVolumeDynamic")
		;
	py::class_< ULevelTransitionGFxMovie, UWillowGFxMovie >(m, "ULevelTransitionGFxMovie")
		;
	py::class_< ULevelTransitionSignGFxMovie, UGFxMovieInteractiveObject >(m, "ULevelTransitionSignGFxMovie")
		.def("eventStart", &ULevelTransitionSignGFxMovie::eventStart)
		;
	py::class_< ALiftActionSkill, AActionSkill >(m, "ALiftActionSkill")
		.def_property("bFizzled", [](ALiftActionSkill &self){return self.bFizzled;}, [](ALiftActionSkill &self, bool value){self.bFizzled = value ? 1 : 0;})
		.def_property("bCharmed", [](ALiftActionSkill &self){return self.bCharmed;}, [](ALiftActionSkill &self, bool value){self.bCharmed = value ? 1 : 0;})
		.def_property("bReplicatedCharmed", [](ALiftActionSkill &self){return self.bReplicatedCharmed;}, [](ALiftActionSkill &self, bool value){self.bReplicatedCharmed = value ? 1 : 0;})
		.def_readwrite("CurrentState", &ALiftActionSkill::CurrentState)
		.def_readwrite("LiftedPawn", &ALiftActionSkill::LiftedPawn, py::return_value_policy::reference)
		.def_readwrite("StateStartTime", &ALiftActionSkill::StateStartTime)
		.def_readwrite("StateDuration", &ALiftActionSkill::StateDuration)
		.def_readwrite("SkillStartTime", &ALiftActionSkill::SkillStartTime)
		.def_readwrite("SkillDuration", &ALiftActionSkill::SkillDuration)
		.def_readwrite("ReleaseBufferTime", &ALiftActionSkill::ReleaseBufferTime)
		.def_readwrite("LiftBodyMap", &ALiftActionSkill::LiftBodyMap, py::return_value_policy::reference)
		.def_readwrite("DefaultPhaseLockDef", &ALiftActionSkill::DefaultPhaseLockDef, py::return_value_policy::reference)
		.def_readwrite("CanLiftTargetIf", &ALiftActionSkill::CanLiftTargetIf, py::return_value_policy::reference)
		.def_readwrite("LiftDuration", &ALiftActionSkill::LiftDuration)
		.def_readwrite("LockDurationFormula", &ALiftActionSkill::LockDurationFormula, py::return_value_policy::reference)
		.def_readwrite("LockDurationScaleFormula", &ALiftActionSkill::LockDurationScaleFormula, py::return_value_policy::reference)
		.def_readwrite("LockFadeOutTime", &ALiftActionSkill::LockFadeOutTime)
		.def_readwrite("LiftSnapTimePct", &ALiftActionSkill::LiftSnapTimePct)
		.def_readwrite("LiftSnapHeightPct", &ALiftActionSkill::LiftSnapHeightPct)
		.def_readwrite("LiftBobFrequency", &ALiftActionSkill::LiftBobFrequency)
		.def_readwrite("LiftBobAmplitude", &ALiftActionSkill::LiftBobAmplitude)
		.def_readwrite("LiftStartTime", &ALiftActionSkill::LiftStartTime)
		.def_readwrite("DroppedPawn", &ALiftActionSkill::DroppedPawn, py::return_value_policy::reference)
		.def_readwrite("LiftStartLocation", &ALiftActionSkill::LiftStartLocation, py::return_value_policy::reference)
		.def_readwrite("PrevBobLocation", &ALiftActionSkill::PrevBobLocation, py::return_value_policy::reference)
		.def_readwrite("LiftEndLocation", &ALiftActionSkill::LiftEndLocation, py::return_value_policy::reference)
		.def_readwrite("IsPhaselockedAttribute", &ALiftActionSkill::IsPhaselockedAttribute, py::return_value_policy::reference)
		.def_readwrite("PhaselockedAttributeEffects", &ALiftActionSkill::PhaselockedAttributeEffects, py::return_value_policy::reference)
		.def_readwrite("SavedPhaselockAttributeModifiers", &ALiftActionSkill::SavedPhaselockAttributeModifiers, py::return_value_policy::reference)
		.def_readwrite("ResurrectSkill", &ALiftActionSkill::ResurrectSkill, py::return_value_policy::reference)
		.def_readwrite("RuinSkill", &ALiftActionSkill::RuinSkill, py::return_value_policy::reference)
		.def_readwrite("CharmSkill", &ALiftActionSkill::CharmSkill, py::return_value_policy::reference)
		.def_readwrite("SubsequenceSkill", &ALiftActionSkill::SubsequenceSkill, py::return_value_policy::reference)
		.def_readwrite("HeliosSkill", &ALiftActionSkill::HeliosSkill, py::return_value_policy::reference)
		.def_readwrite("FirstPersonTranslation", &ALiftActionSkill::FirstPersonTranslation, py::return_value_policy::reference)
		.def_readwrite("FirstPersonScale", &ALiftActionSkill::FirstPersonScale)
		.def_readwrite("FirstPersonParticleSystem", &ALiftActionSkill::FirstPersonParticleSystem, py::return_value_policy::reference)
		.def_readwrite("FirstPersonParticleSystem_Fizzled", &ALiftActionSkill::FirstPersonParticleSystem_Fizzled, py::return_value_policy::reference)
		.def_readwrite("FirstPersonAttachmentName", &ALiftActionSkill::FirstPersonAttachmentName, py::return_value_policy::reference)
		.def_readwrite("ThirdPersonTranslation", &ALiftActionSkill::ThirdPersonTranslation, py::return_value_policy::reference)
		.def_readwrite("ThirdPersonScale", &ALiftActionSkill::ThirdPersonScale)
		.def_readwrite("ThirdPersonParticleSystem", &ALiftActionSkill::ThirdPersonParticleSystem, py::return_value_policy::reference)
		.def_readwrite("ThirdPersonParticleSystem_Fizzled", &ALiftActionSkill::ThirdPersonParticleSystem_Fizzled, py::return_value_policy::reference)
		.def_readwrite("ThirdPersonAttachmentName", &ALiftActionSkill::ThirdPersonAttachmentName, py::return_value_policy::reference)
		.def_readwrite("BubbleFXTranslation", &ALiftActionSkill::BubbleFXTranslation, py::return_value_policy::reference)
		.def_readwrite("BubbleFXScale", &ALiftActionSkill::BubbleFXScale)
		.def_readwrite("BubbleFXParticleSystem_FadeIn", &ALiftActionSkill::BubbleFXParticleSystem_FadeIn, py::return_value_policy::reference)
		.def_readwrite("BubbleFXParticleSystem", &ALiftActionSkill::BubbleFXParticleSystem, py::return_value_policy::reference)
		.def_readwrite("BubbleFXParticleSystem_FadeOut", &ALiftActionSkill::BubbleFXParticleSystem_FadeOut, py::return_value_policy::reference)
		.def_readwrite("BubbleFXAttachmentName", &ALiftActionSkill::BubbleFXAttachmentName, py::return_value_policy::reference)
		.def_readwrite("BubbleFXIntroTime", &ALiftActionSkill::BubbleFXIntroTime)
		.def_readwrite("BubbleFXOutroOverlapTime", &ALiftActionSkill::BubbleFXOutroOverlapTime)
		.def_readwrite("CollapseDuration", &ALiftActionSkill::CollapseDuration)
		.def_readwrite("MaxCollapseValue", &ALiftActionSkill::MaxCollapseValue)
		.def_readwrite("PhaselockLifeTimeParamName", &ALiftActionSkill::PhaselockLifeTimeParamName, py::return_value_policy::reference)
		.def_readwrite("SphereCollapseParamName", &ALiftActionSkill::SphereCollapseParamName, py::return_value_policy::reference)
		.def_readwrite("MissTraceDistance", &ALiftActionSkill::MissTraceDistance)
		.def_readwrite("MissImpactDefinition", &ALiftActionSkill::MissImpactDefinition, py::return_value_policy::reference)
		.def_readwrite("PhaselockSMD_Hit", &ALiftActionSkill::PhaselockSMD_Hit, py::return_value_policy::reference)
		.def_readwrite("PhaselockSMD_Miss", &ALiftActionSkill::PhaselockSMD_Miss, py::return_value_policy::reference)
		.def_readwrite("HeliosFX", &ALiftActionSkill::HeliosFX, py::return_value_policy::reference)
		.def_readwrite("CollapseStartTime", &ALiftActionSkill::CollapseStartTime)
		.def_readwrite("BubbleFXEmitter_FadeIn", &ALiftActionSkill::BubbleFXEmitter_FadeIn, py::return_value_policy::reference)
		.def_readwrite("BubbleFXEmitter_Loop", &ALiftActionSkill::BubbleFXEmitter_Loop, py::return_value_policy::reference)
		.def_readwrite("BubbleFXEmitter_FadeOut", &ALiftActionSkill::BubbleFXEmitter_FadeOut, py::return_value_policy::reference)
		.def_readwrite("FirstPersonPSC", &ALiftActionSkill::FirstPersonPSC, py::return_value_policy::reference)
		.def_readwrite("ClientLiftedPawnForFX", &ALiftActionSkill::ClientLiftedPawnForFX, py::return_value_policy::reference)
		.def_readwrite("PhaselockLight", &ALiftActionSkill::PhaselockLight, py::return_value_policy::reference)
		.def_readwrite("LightBrightness", &ALiftActionSkill::LightBrightness)
		.def_readwrite("RuinHoldTime", &ALiftActionSkill::RuinHoldTime)
		.def_readwrite("RuinDamageScalar", &ALiftActionSkill::RuinDamageScalar)
		.def_readwrite("PawnLocWhenRuinStarted", &ALiftActionSkill::PawnLocWhenRuinStarted, py::return_value_policy::reference)
		.def_readwrite("SubsequenceProjectileDefinition", &ALiftActionSkill::SubsequenceProjectileDefinition, py::return_value_policy::reference)
		.def_readwrite("SubsequenceProjectileChance", &ALiftActionSkill::SubsequenceProjectileChance, py::return_value_policy::reference)
		.def_readwrite("SubsequenceProjectile", &ALiftActionSkill::SubsequenceProjectile, py::return_value_policy::reference)
		.def("eventGetDeferredActionSkillTime", &ALiftActionSkill::eventGetDeferredActionSkillTime)
		.def("eventEnableActionSkillHUD", &ALiftActionSkill::eventEnableActionSkillHUD)
		.def("OnCharmTarget", &ALiftActionSkill::OnCharmTarget)
		.def("OnRuinImpact", &ALiftActionSkill::OnRuinImpact)
		.def("OnLiftFailed", &ALiftActionSkill::OnLiftFailed)
		.def("OnHealedTarget", &ALiftActionSkill::OnHealedTarget)
		.def("OnKilledTarget", &ALiftActionSkill::OnKilledTarget)
		.def("OnReleasedTarget", &ALiftActionSkill::OnReleasedTarget)
		.def("OnTargetIsAboutToBecomeUnlocked", &ALiftActionSkill::OnTargetIsAboutToBecomeUnlocked)
		.def("OnTargetBecomesLocked", &ALiftActionSkill::OnTargetBecomesLocked)
		.def("OnTargetBlocked", &ALiftActionSkill::OnTargetBlocked)
		.def("OnBeginLiftingTarget", &ALiftActionSkill::OnBeginLiftingTarget)
		.def("OnSelectedTarget", &ALiftActionSkill::OnSelectedTarget)
		.def("UpdateEffects", &ALiftActionSkill::UpdateEffects)
		.def("FinishFX", &ALiftActionSkill::FinishFX)
		.def("TransitionToBubbleFXOutro", &ALiftActionSkill::TransitionToBubbleFXOutro)
		.def("TransitionToBubbleFXLoop", &ALiftActionSkill::TransitionToBubbleFXLoop)
		.def("SpawnBubbleFX", &ALiftActionSkill::SpawnBubbleFX)
		.def("FirstPersonEffectFinished", &ALiftActionSkill::FirstPersonEffectFinished)
		.def("eventRunCustomEvent", &ALiftActionSkill::eventRunCustomEvent)
		.def("UpdatePhaselockLight", &ALiftActionSkill::UpdatePhaselockLight)
		.def("GetPhaseLockDefinition", &ALiftActionSkill::GetPhaseLockDefinition, py::return_value_policy::reference)
		.def("GetPlayerAnimation", &ALiftActionSkill::GetPlayerAnimation, py::return_value_policy::reference)
		.def("UpdateLiftedPawnMeshOffset", &ALiftActionSkill::UpdateLiftedPawnMeshOffset)
		.def("UpdateLiftedPawn", &ALiftActionSkill::UpdateLiftedPawn)
		.def("GetBobLocation", &ALiftActionSkill::GetBobLocation, py::return_value_policy::reference)
		.def("GetLiftLocation", &ALiftActionSkill::GetLiftLocation, py::return_value_policy::reference)
		.def("CheckLandTarget", &ALiftActionSkill::CheckLandTarget)
		.def("PawnIsFlying", &ALiftActionSkill::PawnIsFlying)
		.def("DropTarget", &ALiftActionSkill::DropTarget)
		.def("BeginLifting", &ALiftActionSkill::BeginLifting)
		.def("GetLiftCheckLocation", &ALiftActionSkill::GetLiftCheckLocation, py::return_value_policy::reference)
		.def("LiftTarget", &ALiftActionSkill::LiftTarget)
		.def("Fizzled", &ALiftActionSkill::Fizzled)
		.def("PlayMissImpact", &ALiftActionSkill::PlayMissImpact)
		.def("FizzleOut", &ALiftActionSkill::FizzleOut)
		.def("TargetBlocked", &ALiftActionSkill::TargetBlocked)
		.def("ResurrectTarget", &ALiftActionSkill::ResurrectTarget)
		.def("CanResurrectTarget", &ALiftActionSkill::CanResurrectTarget)
		.def("ApplyRuin", &ALiftActionSkill::ApplyRuin)
		.def("Ruin", &ALiftActionSkill::Ruin)
		.def("CanRuin", &ALiftActionSkill::CanRuin)
		.def("SpawnSubsequenceProjectile", &ALiftActionSkill::SpawnSubsequenceProjectile)
		.def("CanDoSubsequence", &ALiftActionSkill::CanDoSubsequence)
		.def("CanCharmTarget", &ALiftActionSkill::CanCharmTarget)
		.def("SpawnHelios", &ALiftActionSkill::SpawnHelios)
		.def("ShouldSpawnHelios", &ALiftActionSkill::ShouldSpawnHelios)
		.def("InterruptPhaseLock", &ALiftActionSkill::InterruptPhaseLock)
		.def("IsLiftedPawnIncapacitated", &ALiftActionSkill::IsLiftedPawnIncapacitated)
		.def("ReleaseTarget", &ALiftActionSkill::ReleaseTarget)
		.def("StartOutro", &ALiftActionSkill::StartOutro)
		.def("FinishLifting", &ALiftActionSkill::FinishLifting)
		.def("LockTarget", &ALiftActionSkill::LockTarget)
		.def("PhaseLockTarget", &ALiftActionSkill::PhaseLockTarget)
		.def("SelectTarget", &ALiftActionSkill::SelectTarget)
		.def("CanPhaseLockTarget", &ALiftActionSkill::CanPhaseLockTarget)
		.def("IsPhaselocked", &ALiftActionSkill::IsPhaselocked)
		.def("EndSkill", &ALiftActionSkill::EndSkill)
		.def("eventOnActionSkillTick", &ALiftActionSkill::eventOnActionSkillTick)
		.def("eventDestroyed", &ALiftActionSkill::eventDestroyed)
		.def("StartActionSkillActiveAbility", &ALiftActionSkill::StartActionSkillActiveAbility)
		.def("OnActionSkillEnded", &ALiftActionSkill::OnActionSkillEnded)
		.def("OnActionSkillStarted", &ALiftActionSkill::OnActionSkillStarted)
		.def("eventReplicatedEvent", &ALiftActionSkill::eventReplicatedEvent)
		.def("UpdateTargetPawn", [](ALiftActionSkill &self ) { class AWillowPawn** pyTheTargetPawn = 0 ;   self.UpdateTargetPawn(pyTheTargetPawn); return py::make_tuple(*pyTheTargetPawn); })
		;
	py::class_< ULoadCharacterLobbyGFxObject, UGFxObject >(m, "ULoadCharacterLobbyGFxObject")
		.def("SetQuadrant", &ULoadCharacterLobbyGFxObject::SetQuadrant)
		.def("SetTooltips", &ULoadCharacterLobbyGFxObject::SetTooltips)
		.def("SetSlotData", &ULoadCharacterLobbyGFxObject::SetSlotData)
		.def("SetScrollArrows", &ULoadCharacterLobbyGFxObject::SetScrollArrows)
		.def("SetCharacterInfo", &ULoadCharacterLobbyGFxObject::SetCharacterInfo)
		.def("SelectSlotIndex", &ULoadCharacterLobbyGFxObject::SelectSlotIndex)
		.def("HideCharacterInfo", &ULoadCharacterLobbyGFxObject::HideCharacterInfo)
		.def("ClearSlots", &ULoadCharacterLobbyGFxObject::ClearSlots)
		;
	py::class_< UMarketplaceGFxMovieDefinition, UWillowGFxMovie3DDefinition >(m, "UMarketplaceGFxMovieDefinition")
		.def_readwrite("DefaultFilterTag", &UMarketplaceGFxMovieDefinition::DefaultFilterTag, py::return_value_policy::reference)
		;
	py::class_< UMatchmakingLobbyCharacterInfoGFxObject, UGFxObject >(m, "UMatchmakingLobbyCharacterInfoGFxObject")
		.def("SetInfo", &UMatchmakingLobbyCharacterInfoGFxObject::SetInfo)
		;
	py::class_< UMatchmakingLobbyResultsGFxObject, UGFxObject >(m, "UMatchmakingLobbyResultsGFxObject")
		.def("UpdateResult", &UMatchmakingLobbyResultsGFxObject::UpdateResult)
		;
	py::class_< UMechromancerInputContextSelector, UDefaultInputContextSelector >(m, "UMechromancerInputContextSelector")
		.def("SelectContext", &UMechromancerInputContextSelector::SelectContext, py::return_value_policy::reference)
		;
	py::class_< UMercenaryInputContextSelector, UDefaultInputContextSelector >(m, "UMercenaryInputContextSelector")
		.def("SelectContext", &UMercenaryInputContextSelector::SelectContext, py::return_value_policy::reference)
		;
	py::class_< UOpenedChestMessage, UWillowLocalMessage >(m, "UOpenedChestMessage")
		.def_readwrite("OpenedChest", &UOpenedChestMessage::OpenedChest, py::return_value_policy::reference)
		.def("GetString", &UOpenedChestMessage::GetString, py::return_value_policy::reference)
		;
	py::class_< UWillowScrollingListDataProviderOptionsBase, UWillowScrollingListDataProviderBase >(m, "UWillowScrollingListDataProviderOptionsBase")
		.def_property("bSkipResolutionUpdate", [](UWillowScrollingListDataProviderOptionsBase &self){return self.bSkipResolutionUpdate;}, [](UWillowScrollingListDataProviderOptionsBase &self, bool value){self.bSkipResolutionUpdate = value ? 1 : 0;})
		.def_readwrite("MyOptionsMovie", &UWillowScrollingListDataProviderOptionsBase::MyOptionsMovie, py::return_value_policy::reference)
		.def_readwrite("RestartSettingInitialValues", &UWillowScrollingListDataProviderOptionsBase::RestartSettingInitialValues, py::return_value_policy::reference)
		.def_readwrite("Descriptions", &UWillowScrollingListDataProviderOptionsBase::Descriptions, py::return_value_policy::reference)
		.def("Cleanup", &UWillowScrollingListDataProviderOptionsBase::Cleanup)
		.def("OnPop", &UWillowScrollingListDataProviderOptionsBase::OnPop)
		.def("UpdateRealtimeSetting", &UWillowScrollingListDataProviderOptionsBase::UpdateRealtimeSetting)
		.def("HandleSpinnerChange", &UWillowScrollingListDataProviderOptionsBase::HandleSpinnerChange)
		.def("HandleSliderChange", &UWillowScrollingListDataProviderOptionsBase::HandleSliderChange)
		.def("HandleSelectionRollover", &UWillowScrollingListDataProviderOptionsBase::HandleSelectionRollover)
		.def("HandleSelectionChange", &UWillowScrollingListDataProviderOptionsBase::HandleSelectionChange)
		.def("UpdateDescriptionText", &UWillowScrollingListDataProviderOptionsBase::UpdateDescriptionText)
		.def("Populate", &UWillowScrollingListDataProviderOptionsBase::Populate)
		.def("GetDescription", &UWillowScrollingListDataProviderOptionsBase::GetDescription, py::return_value_policy::reference)
		.def("ClearDescriptions", &UWillowScrollingListDataProviderOptionsBase::ClearDescriptions)
		.def("AddDescription", &UWillowScrollingListDataProviderOptionsBase::AddDescription)
		.def("AddSystemSettingListItem", &UWillowScrollingListDataProviderOptionsBase::AddSystemSettingListItem)
		.def("AddProfileSettingListItem", &UWillowScrollingListDataProviderOptionsBase::AddProfileSettingListItem)
		.def("FindProfileData", &UWillowScrollingListDataProviderOptionsBase::FindProfileData)
		;
	py::class_< UOptionsGFxObject, UGFxObject >(m, "UOptionsGFxObject")
		.def("SetDescription", &UOptionsGFxObject::SetDescription)
		.def("SetTooltips", &UOptionsGFxObject::SetTooltips)
		.def("SetPlayerName", &UOptionsGFxObject::SetPlayerName)
		.def("SetHeader", &UOptionsGFxObject::SetHeader)
		.def("SetAspectRatio", &UOptionsGFxObject::SetAspectRatio)
		;
	py::class_< UWillowScrollingListDataProviderTopLevelOptions, UWillowScrollingListDataProviderBase >(m, "UWillowScrollingListDataProviderTopLevelOptions")
		.def("GetSubmenuForEvent", &UWillowScrollingListDataProviderTopLevelOptions::GetSubmenuForEvent, py::return_value_policy::reference)
		.def("HandleClick", &UWillowScrollingListDataProviderTopLevelOptions::HandleClick)
		.def("IsPCGamepadConnected", &UWillowScrollingListDataProviderTopLevelOptions::IsPCGamepadConnected)
		.def("CanShowStorageSelector", &UWillowScrollingListDataProviderTopLevelOptions::CanShowStorageSelector)
		.def("Populate", &UWillowScrollingListDataProviderTopLevelOptions::Populate)
		;
	py::class_< UPauseGFxMovie, UFrontendGFxMovie >(m, "UPauseGFxMovie")
		.def_readwrite("PauseDlg", &UPauseGFxMovie::PauseDlg, py::return_value_policy::reference)
		.def_readwrite("SavingDlg", &UPauseGFxMovie::SavingDlg, py::return_value_policy::reference)
		.def_readwrite("SaveDurationTicker", &UPauseGFxMovie::SaveDurationTicker, py::return_value_policy::reference)
		.def_readwrite("SaveStartTime", &UPauseGFxMovie::SaveStartTime)
		.def_readwrite("PlayersToSave", &UPauseGFxMovie::PlayersToSave, py::return_value_policy::reference)
		.def_readwrite("MinSaveDuration", &UPauseGFxMovie::MinSaveDuration)
		.def_readwrite("EnteredButtons", &UPauseGFxMovie::EnteredButtons, py::return_value_policy::reference)
		.def_readwrite("ResumeString", &UPauseGFxMovie::ResumeString, py::return_value_policy::reference)
		.def_readwrite("SplitPlayerPRI", &UPauseGFxMovie::SplitPlayerPRI, py::return_value_policy::reference)
		.def_readwrite("SaveOwner", &UPauseGFxMovie::SaveOwner, py::return_value_policy::reference)
		.def("extFrontEndMenuOnLoad", &UPauseGFxMovie::extFrontEndMenuOnLoad)
		.def("LanNetworkOptionsAvailable", &UPauseGFxMovie::LanNetworkOptionsAvailable)
		.def("OnlineNetworkOptionsAvailable", &UPauseGFxMovie::OnlineNetworkOptionsAvailable)
		.def("OnConfirmCharacters", &UPauseGFxMovie::OnConfirmCharacters)
		.def("PromptConfirmCharacters", &UPauseGFxMovie::PromptConfirmCharacters)
		.def("ValidatePlayers", &UPauseGFxMovie::ValidatePlayers)
		.def("HandleSplitscreenLeaveAttempt", &UPauseGFxMovie::HandleSplitscreenLeaveAttempt)
		.def("PromptQuit", &UPauseGFxMovie::PromptQuit)
		.def("ApplySaveText", &UPauseGFxMovie::ApplySaveText)
		.def("CreateSavePromptDialog", &UPauseGFxMovie::CreateSavePromptDialog)
		.def("PromptQuit_Ok", &UPauseGFxMovie::PromptQuit_Ok)
		.def("CompleteQuitToMenu", &UPauseGFxMovie::CompleteQuitToMenu)
		.def("AllPlayersSaved", &UPauseGFxMovie::AllPlayersSaved)
		.def("SaveNextPlayer", &UPauseGFxMovie::SaveNextPlayer)
		.def("SavePlayer", &UPauseGFxMovie::SavePlayer)
		.def("QuitToMenu", &UPauseGFxMovie::QuitToMenu)
		.def("StorageDeviceChanged", &UPauseGFxMovie::StorageDeviceChanged)
		.def("GetPlayer1CancelButtonString", &UPauseGFxMovie::GetPlayer1CancelButtonString)
		.def("CanShowCharacterSelect", &UPauseGFxMovie::CanShowCharacterSelect)
		.def("HandlePopListFail", &UPauseGFxMovie::HandlePopListFail)
		.def("IsAllowedToUnpause", &UPauseGFxMovie::IsAllowedToUnpause)
		.def("TryToUnpause", &UPauseGFxMovie::TryToUnpause)
		.def("SharedHandleInputKey", &UPauseGFxMovie::SharedHandleInputKey)
		.def("PreviewInputKey", &UPauseGFxMovie::PreviewInputKey)
		.def("ShouldDoInitialDeviceSelection", &UPauseGFxMovie::ShouldDoInitialDeviceSelection)
		.def("eventOnClose", &UPauseGFxMovie::eventOnClose)
		.def("eventStart", &UPauseGFxMovie::eventStart)
		;
	py::class_< UPCContextMenuObject, UGFxMoviePlayer >(m, "UPCContextMenuObject")
		.def_readwrite("MenuListObject", &UPCContextMenuObject::MenuListObject, py::return_value_policy::reference)
		.def_readwrite("Str_Buy", &UPCContextMenuObject::Str_Buy, py::return_value_policy::reference)
		.def_readwrite("Str_BuyBack", &UPCContextMenuObject::Str_BuyBack, py::return_value_policy::reference)
		.def_readwrite("Str_Sell", &UPCContextMenuObject::Str_Sell, py::return_value_policy::reference)
		.def_readwrite("Str_SellTrash", &UPCContextMenuObject::Str_SellTrash, py::return_value_policy::reference)
		.def_readwrite("Str_Compare", &UPCContextMenuObject::Str_Compare, py::return_value_policy::reference)
		.def_readwrite("Str_Inspect", &UPCContextMenuObject::Str_Inspect, py::return_value_policy::reference)
		.def_readwrite("Str_SelectCompare", &UPCContextMenuObject::Str_SelectCompare, py::return_value_policy::reference)
		.def_readwrite("Str_Drop", &UPCContextMenuObject::Str_Drop, py::return_value_policy::reference)
		.def_readwrite("__OnMenuClosed__Delegate", &UPCContextMenuObject::__OnMenuClosed__Delegate, py::return_value_policy::reference)
		.def_readwrite("__OnMenuItemClicked__Delegate", &UPCContextMenuObject::__OnMenuItemClicked__Delegate, py::return_value_policy::reference)
		.def("AddToMenuItemList", &UPCContextMenuObject::AddToMenuItemList)
		.def("extOnMenuItemClicked", &UPCContextMenuObject::extOnMenuItemClicked)
		.def("extOnMenuAbort", &UPCContextMenuObject::extOnMenuAbort)
		.def("extOnMenuClosed", &UPCContextMenuObject::extOnMenuClosed)
		.def("ShowFor", &UPCContextMenuObject::ShowFor)
		.def("Show", &UPCContextMenuObject::Show)
		.def("AddMenuItems", &UPCContextMenuObject::AddMenuItems)
		.def("AddMenuItem", &UPCContextMenuObject::AddMenuItem)
		.def("FocusOn", &UPCContextMenuObject::FocusOn)
		.def("OnClose", &UPCContextMenuObject::OnClose)
		.def("Init", &UPCContextMenuObject::Init)
		.def("OnMenuItemClicked", &UPCContextMenuObject::OnMenuItemClicked)
		.def("OnMenuClosed", &UPCContextMenuObject::OnMenuClosed)
		;
	py::class_< APlaceableDynamicSMActor, ADynamicSMActor >(m, "APlaceableDynamicSMActor")
		;
	py::class_< UPlayerBehaviorBase, UBehaviorBase >(m, "UPlayerBehaviorBase")
		;
	py::class_< UPlayerBehavior_CameraAnim, UPlayerBehaviorBase >(m, "UPlayerBehavior_CameraAnim")
		.def_readwrite("Anim", &UPlayerBehavior_CameraAnim::Anim, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UPlayerBehavior_CameraAnim::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_DropItems, UBehavior_DropItems >(m, "UPlayerBehavior_DropItems")
		.def_readwrite("ConfigurationName", &UPlayerBehavior_DropItems::ConfigurationName, py::return_value_policy::reference)
		.def_readwrite("TargetContext", &UPlayerBehavior_DropItems::TargetContext, py::return_value_policy::reference)
		.def_readwrite("LocationContext", &UPlayerBehavior_DropItems::LocationContext, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UPlayerBehavior_DropItems::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_ForceFeedback, UPlayerBehaviorBase >(m, "UPlayerBehavior_ForceFeedback")
		.def_property("ForWeaponFiring", [](UPlayerBehavior_ForceFeedback &self){return self.ForWeaponFiring;}, [](UPlayerBehavior_ForceFeedback &self, bool value){self.ForWeaponFiring = value ? 1 : 0;})
		.def_readwrite("FFWaveform", &UPlayerBehavior_ForceFeedback::FFWaveform, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UPlayerBehavior_ForceFeedback::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_Melee, UPlayerBehaviorBase >(m, "UPlayerBehavior_Melee")
		.def("ApplyBehaviorToContext", &UPlayerBehavior_Melee::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_PlayEchoCall, UPlayerBehaviorBase >(m, "UPlayerBehavior_PlayEchoCall")
		.def("ApplyBehaviorToContext", &UPlayerBehavior_PlayEchoCall::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_RegisterFastTravelStation, UPlayerBehaviorBase >(m, "UPlayerBehavior_RegisterFastTravelStation")
		.def("ApplyBehaviorToContext", &UPlayerBehavior_RegisterFastTravelStation::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_Reload, UPlayerBehaviorBase >(m, "UPlayerBehavior_Reload")
		.def("ApplyBehaviorToContext", &UPlayerBehavior_Reload::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_SetCurrentProjectile, UPlayerBehaviorBase >(m, "UPlayerBehavior_SetCurrentProjectile")
		.def_readwrite("CurrentProjectile", &UPlayerBehavior_SetCurrentProjectile::CurrentProjectile, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UPlayerBehavior_SetCurrentProjectile::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_SpawnCurrentProjectile, UPlayerBehaviorBase >(m, "UPlayerBehavior_SpawnCurrentProjectile")
		.def_property("bConsumeResource", [](UPlayerBehavior_SpawnCurrentProjectile &self){return self.bConsumeResource;}, [](UPlayerBehavior_SpawnCurrentProjectile &self, bool value){self.bConsumeResource = value ? 1 : 0;})
		.def_property("bSpawnFromLeftHand", [](UPlayerBehavior_SpawnCurrentProjectile &self){return self.bSpawnFromLeftHand;}, [](UPlayerBehavior_SpawnCurrentProjectile &self, bool value){self.bSpawnFromLeftHand = value ? 1 : 0;})
		.def_property("bNoVelocity", [](UPlayerBehavior_SpawnCurrentProjectile &self){return self.bNoVelocity;}, [](UPlayerBehavior_SpawnCurrentProjectile &self, bool value){self.bNoVelocity = value ? 1 : 0;})
		.def_property("bSetProjectileToGrenadeMod", [](UPlayerBehavior_SpawnCurrentProjectile &self){return self.bSetProjectileToGrenadeMod;}, [](UPlayerBehavior_SpawnCurrentProjectile &self, bool value){self.bSetProjectileToGrenadeMod = value ? 1 : 0;})
		.def_property("bSaveProjectileReference", [](UPlayerBehavior_SpawnCurrentProjectile &self){return self.bSaveProjectileReference;}, [](UPlayerBehavior_SpawnCurrentProjectile &self, bool value){self.bSaveProjectileReference = value ? 1 : 0;})
		.def_readwrite("ProjectileToSpawn", &UPlayerBehavior_SpawnCurrentProjectile::ProjectileToSpawn, py::return_value_policy::reference)
		.def_readwrite("InstanceDataContext", &UPlayerBehavior_SpawnCurrentProjectile::InstanceDataContext, py::return_value_policy::reference)
		.def_readwrite("SavedReferenceName", &UPlayerBehavior_SpawnCurrentProjectile::SavedReferenceName, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UPlayerBehavior_SpawnCurrentProjectile::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_SpawnTeleporter, UPlayerBehaviorBase >(m, "UPlayerBehavior_SpawnTeleporter")
		.def_readwrite("PersonalTeleporterDefinition", &UPlayerBehavior_SpawnTeleporter::PersonalTeleporterDefinition, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UPlayerBehavior_SpawnTeleporter::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_ThrowGrenade, UPlayerBehaviorBase >(m, "UPlayerBehavior_ThrowGrenade")
		.def("ApplyBehaviorToContext", &UPlayerBehavior_ThrowGrenade::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_ToggleMeleeWeapon, UPlayerBehaviorBase >(m, "UPlayerBehavior_ToggleMeleeWeapon")
		.def_property("bAttach", [](UPlayerBehavior_ToggleMeleeWeapon &self){return self.bAttach;}, [](UPlayerBehavior_ToggleMeleeWeapon &self, bool value){self.bAttach = value ? 1 : 0;})
		.def_property("bApplyToFirstPerson", [](UPlayerBehavior_ToggleMeleeWeapon &self){return self.bApplyToFirstPerson;}, [](UPlayerBehavior_ToggleMeleeWeapon &self, bool value){self.bApplyToFirstPerson = value ? 1 : 0;})
		.def_property("bApplyToThirdPerson", [](UPlayerBehavior_ToggleMeleeWeapon &self){return self.bApplyToThirdPerson;}, [](UPlayerBehavior_ToggleMeleeWeapon &self, bool value){self.bApplyToThirdPerson = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UPlayerBehavior_ToggleMeleeWeapon::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_ToggleRevive, UPlayerBehaviorBase >(m, "UPlayerBehavior_ToggleRevive")
		.def_property("bStart", [](UPlayerBehavior_ToggleRevive &self){return self.bStart;}, [](UPlayerBehavior_ToggleRevive &self, bool value){self.bStart = value ? 1 : 0;})
		.def("ApplyBehaviorToContext", &UPlayerBehavior_ToggleRevive::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_UnlockAchievement, UPlayerBehaviorBase >(m, "UPlayerBehavior_UnlockAchievement")
		.def_readwrite("Achievement", &UPlayerBehavior_UnlockAchievement::Achievement)
		.def("ApplyBehaviorToContext", &UPlayerBehavior_UnlockAchievement::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_UnlockAchievementForAllPlayers, UPlayerBehaviorBase >(m, "UPlayerBehavior_UnlockAchievementForAllPlayers")
		.def_readwrite("Achievement", &UPlayerBehavior_UnlockAchievementForAllPlayers::Achievement)
		.def_readwrite("MinimumPlayersRequired", &UPlayerBehavior_UnlockAchievementForAllPlayers::MinimumPlayersRequired)
		.def("ApplyBehaviorToContext", &UPlayerBehavior_UnlockAchievementForAllPlayers::ApplyBehaviorToContext)
		;
	py::class_< UPlayerBehavior_ViewShake, UPlayerBehaviorBase >(m, "UPlayerBehavior_ViewShake")
		.def_readwrite("ShakeInfo", &UPlayerBehavior_ViewShake::ShakeInfo, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UPlayerBehavior_ViewShake::ApplyBehaviorToContext)
		;
	py::class_< UWillowSeqAct_AIProvoke, USequenceAction >(m, "UWillowSeqAct_AIProvoke")
		.def_readwrite("Provoker", &UWillowSeqAct_AIProvoke::Provoker, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_AIScriptedHold, USequenceAction >(m, "UWillowSeqAct_AIScriptedHold")
		.def_property("bAttackTarget", [](UWillowSeqAct_AIScriptedHold &self){return self.bAttackTarget;}, [](UWillowSeqAct_AIScriptedHold &self, bool value){self.bAttackTarget = value ? 1 : 0;})
		.def_readwrite("Option", &UWillowSeqAct_AIScriptedHold::Option)
		;
	py::class_< UWillowSeqAct_AIScriptedFollow, USequenceAction >(m, "UWillowSeqAct_AIScriptedFollow")
		.def_property("bCanShoot", [](UWillowSeqAct_AIScriptedFollow &self){return self.bCanShoot;}, [](UWillowSeqAct_AIScriptedFollow &self, bool value){self.bCanShoot = value ? 1 : 0;})
		.def_property("bUseFormation", [](UWillowSeqAct_AIScriptedFollow &self){return self.bUseFormation;}, [](UWillowSeqAct_AIScriptedFollow &self, bool value){self.bUseFormation = value ? 1 : 0;})
		.def_readwrite("ToFollow", &UWillowSeqAct_AIScriptedFollow::ToFollow, py::return_value_policy::reference)
		.def_readwrite("Action", &UWillowSeqAct_AIScriptedFollow::Action)
		.def_readwrite("Stance", &UWillowSeqAct_AIScriptedFollow::Stance)
		.def_readwrite("CatchupDistance", &UWillowSeqAct_AIScriptedFollow::CatchupDistance)
		.def_readwrite("HoldStillDistance", &UWillowSeqAct_AIScriptedFollow::HoldStillDistance)
		;
	py::class_< UWillowSeqAct_AIScriptedDeath, USequenceAction >(m, "UWillowSeqAct_AIScriptedDeath")
		.def_readwrite("DamageType", &UWillowSeqAct_AIScriptedDeath::DamageType, py::return_value_policy::reference)
		.def_readwrite("DeathType", &UWillowSeqAct_AIScriptedDeath::DeathType)
		.def_readwrite("Anim", &UWillowSeqAct_AIScriptedDeath::Anim, py::return_value_policy::reference)
		.def_readwrite("EditInlineAnim", &UWillowSeqAct_AIScriptedDeath::EditInlineAnim, py::return_value_policy::reference)
		.def_readwrite("Killer", &UWillowSeqAct_AIScriptedDeath::Killer, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_AICombatVolume, USequenceAction >(m, "UWillowSeqAct_AICombatVolume")
		.def_property("bCombatVolumeOnlyLimitsRangedAttacks", [](UWillowSeqAct_AICombatVolume &self){return self.bCombatVolumeOnlyLimitsRangedAttacks;}, [](UWillowSeqAct_AICombatVolume &self, bool value){self.bCombatVolumeOnlyLimitsRangedAttacks = value ? 1 : 0;})
		.def_readwrite("CombatVolume", &UWillowSeqAct_AICombatVolume::CombatVolume, py::return_value_policy::reference)
		.def_readwrite("Option", &UWillowSeqAct_AICombatVolume::Option)
		;
	py::class_< UProjectileBehavior_Attach, UProjectileBehaviorBase >(m, "UProjectileBehavior_Attach")
		.def_readwrite("AttachAkEvent", &UProjectileBehavior_Attach::AttachAkEvent, py::return_value_policy::reference)
		.def_readwrite("HitActor", &UProjectileBehavior_Attach::HitActor, py::return_value_policy::reference)
		.def_readwrite("HitNormal", &UProjectileBehavior_Attach::HitNormal, py::return_value_policy::reference)
		.def_readwrite("HitLocation", &UProjectileBehavior_Attach::HitLocation, py::return_value_policy::reference)
		.def_readwrite("BoneIndex", &UProjectileBehavior_Attach::BoneIndex)
		.def("ApplyBehaviorToContext", &UProjectileBehavior_Attach::ApplyBehaviorToContext)
		;
	py::class_< UProjectileBehavior_Detonate, UProjectileBehaviorBase >(m, "UProjectileBehavior_Detonate")
		.def_readwrite("TargetAllegiance", &UProjectileBehavior_Detonate::TargetAllegiance)
		.def("ApplyBehaviorToContext", &UProjectileBehavior_Detonate::ApplyBehaviorToContext)
		;
	py::class_< UProjectileBehavior_FindHomingTarget, UProjectileBehaviorBase >(m, "UProjectileBehavior_FindHomingTarget")
		.def_property("bNotInstigator", [](UProjectileBehavior_FindHomingTarget &self){return self.bNotInstigator;}, [](UProjectileBehavior_FindHomingTarget &self, bool value){self.bNotInstigator = value ? 1 : 0;})
		.def_property("bIgnoreFOVZTest", [](UProjectileBehavior_FindHomingTarget &self){return self.bIgnoreFOVZTest;}, [](UProjectileBehavior_FindHomingTarget &self, bool value){self.bIgnoreFOVZTest = value ? 1 : 0;})
		.def_property("bBestForwardTarget", [](UProjectileBehavior_FindHomingTarget &self){return self.bBestForwardTarget;}, [](UProjectileBehavior_FindHomingTarget &self, bool value){self.bBestForwardTarget = value ? 1 : 0;})
		.def_property("bRetryIfTargetNotFound", [](UProjectileBehavior_FindHomingTarget &self){return self.bRetryIfTargetNotFound;}, [](UProjectileBehavior_FindHomingTarget &self, bool value){self.bRetryIfTargetNotFound = value ? 1 : 0;})
		.def_property("bUniqueTarget", [](UProjectileBehavior_FindHomingTarget &self){return self.bUniqueTarget;}, [](UProjectileBehavior_FindHomingTarget &self, bool value){self.bUniqueTarget = value ? 1 : 0;})
		.def_readwrite("TargetType", &UProjectileBehavior_FindHomingTarget::TargetType)
		.def_readwrite("TargetSearchFOVAngle", &UProjectileBehavior_FindHomingTarget::TargetSearchFOVAngle)
		.def_readwrite("TargetSearchRange", &UProjectileBehavior_FindHomingTarget::TargetSearchRange)
		.def("ApplyBehaviorToContext", &UProjectileBehavior_FindHomingTarget::ApplyBehaviorToContext)
		;
	py::class_< UProjectileBehavior_LevelOff, UProjectileBehaviorBase >(m, "UProjectileBehavior_LevelOff")
		.def_readwrite("DesiredWorldZToLevelOff", &UProjectileBehavior_LevelOff::DesiredWorldZToLevelOff)
		.def_readwrite("TurnSpeed", &UProjectileBehavior_LevelOff::TurnSpeed)
		.def("ApplyBehaviorToContext", &UProjectileBehavior_LevelOff::ApplyBehaviorToContext)
		;
	py::class_< UProjectileBehavior_SetDamageTypeDefinition, UProjectileBehaviorBase >(m, "UProjectileBehavior_SetDamageTypeDefinition")
		.def_readwrite("DamageTypeDefinition", &UProjectileBehavior_SetDamageTypeDefinition::DamageTypeDefinition, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UProjectileBehavior_SetDamageTypeDefinition::ApplyBehaviorToContext)
		;
	py::class_< UProjectileBehavior_SetExplosionDefinition, UProjectileBehaviorBase >(m, "UProjectileBehavior_SetExplosionDefinition")
		.def_readwrite("ExplosionDefinition", &UProjectileBehavior_SetExplosionDefinition::ExplosionDefinition, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UProjectileBehavior_SetExplosionDefinition::ApplyBehaviorToContext)
		;
	py::class_< UProjectileBehavior_SetHomingTarget, UProjectileBehaviorBase >(m, "UProjectileBehavior_SetHomingTarget")
		.def_readwrite("AssignedTarget", &UProjectileBehavior_SetHomingTarget::AssignedTarget, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UProjectileBehavior_SetHomingTarget::ApplyBehaviorToContext)
		;
	py::class_< UProjectileBehavior_SetProximity, UProjectileBehaviorBase >(m, "UProjectileBehavior_SetProximity")
		.def_readwrite("ProximityRadius", &UProjectileBehavior_SetProximity::ProximityRadius)
		.def_readwrite("ProximityHeight", &UProjectileBehavior_SetProximity::ProximityHeight)
		.def("ApplyBehaviorToContext", &UProjectileBehavior_SetProximity::ApplyBehaviorToContext)
		;
	py::class_< UProjectileBehavior_SetSpeed, UProjectileBehaviorBase >(m, "UProjectileBehavior_SetSpeed")
		.def_readwrite("NewSpeed", &UProjectileBehavior_SetSpeed::NewSpeed)
		.def_readwrite("SpeedMultiplier", &UProjectileBehavior_SetSpeed::SpeedMultiplier)
		.def("ApplyBehaviorToContext", &UProjectileBehavior_SetSpeed::ApplyBehaviorToContext)
		;
	py::class_< UProjectileBehavior_SetStickyGrenade, UProjectileBehaviorBase >(m, "UProjectileBehavior_SetStickyGrenade")
		.def("ApplyBehaviorToContext", &UProjectileBehavior_SetStickyGrenade::ApplyBehaviorToContext)
		;
	py::class_< UProjectileBehavior_TagPayloadType, UProjectileBehaviorBase >(m, "UProjectileBehavior_TagPayloadType")
		.def_readwrite("PayloadType", &UProjectileBehavior_TagPayloadType::PayloadType)
		.def("ApplyBehaviorToContext", &UProjectileBehavior_TagPayloadType::ApplyBehaviorToContext)
		;
	py::class_< AProximityActor, AActor >(m, "AProximityActor")
		.def_readwrite("ProximityRadius", &AProximityActor::ProximityRadius)
		.def_readwrite("ProximityHeight", &AProximityActor::ProximityHeight)
		.def_readwrite("ProximityCylinder", &AProximityActor::ProximityCylinder, py::return_value_policy::reference)
		.def("eventTouch", &AProximityActor::eventTouch)
		.def("SetProximitySize", &AProximityActor::SetProximitySize)
		;
	py::class_< UPS3InvitesPopupGFxObject, UGFxObject >(m, "UPS3InvitesPopupGFxObject")
		.def("Hide", &UPS3InvitesPopupGFxObject::Hide)
		.def("Show", &UPS3InvitesPopupGFxObject::Show)
		.def("Refresh", &UPS3InvitesPopupGFxObject::Refresh)
		.def("SelectionDown", &UPS3InvitesPopupGFxObject::SelectionDown)
		.def("SelectionUp", &UPS3InvitesPopupGFxObject::SelectionUp)
		.def("SetSelectedInviteIndex", &UPS3InvitesPopupGFxObject::SetSelectedInviteIndex)
		.def("GetSelectedInviteIndex", &UPS3InvitesPopupGFxObject::GetSelectedInviteIndex)
		.def("ClearInvites", &UPS3InvitesPopupGFxObject::ClearInvites)
		.def("AddInvite", &UPS3InvitesPopupGFxObject::AddInvite)
		;
	py::class_< UQuestAcceptGFxDefinition, UWillowGFxMovie3DDefinition >(m, "UQuestAcceptGFxDefinition")
		.def_property("bUsePPOverride", [](UQuestAcceptGFxDefinition &self){return self.bUsePPOverride;}, [](UQuestAcceptGFxDefinition &self, bool value){self.bUsePPOverride = value ? 1 : 0;})
		.def_readwrite("MissionTextDefinition", &UQuestAcceptGFxDefinition::MissionTextDefinition, py::return_value_policy::reference)
		.def_readwrite("NumEntriesOnMissionList", &UQuestAcceptGFxDefinition::NumEntriesOnMissionList)
		.def_readwrite("Pres_Available", &UQuestAcceptGFxDefinition::Pres_Available, py::return_value_policy::reference)
		.def_readwrite("Pres_Active", &UQuestAcceptGFxDefinition::Pres_Active, py::return_value_policy::reference)
		.def_readwrite("Pres_ReadyToTurnIn", &UQuestAcceptGFxDefinition::Pres_ReadyToTurnIn, py::return_value_policy::reference)
		.def_readwrite("Pres_NotStarted", &UQuestAcceptGFxDefinition::Pres_NotStarted, py::return_value_policy::reference)
		.def_readwrite("Pres_Complete", &UQuestAcceptGFxDefinition::Pres_Complete, py::return_value_policy::reference)
		.def_readwrite("Pres_Ineligible", &UQuestAcceptGFxDefinition::Pres_Ineligible, py::return_value_policy::reference)
		.def_readwrite("Pres_Failed", &UQuestAcceptGFxDefinition::Pres_Failed, py::return_value_policy::reference)
		.def_readwrite("PostProcessInterpolationTime", &UQuestAcceptGFxDefinition::PostProcessInterpolationTime)
		;
	py::class_< UReferenceSet, UObject >(m, "UReferenceSet")
		.def_readwrite("References", &UReferenceSet::References, py::return_value_policy::reference)
		;
	py::class_< UResourcePoolAttributeDefinition, UAttributeDefinition >(m, "UResourcePoolAttributeDefinition")
		.def_readwrite("Resource", &UResourcePoolAttributeDefinition::Resource, py::return_value_policy::reference)
		;
	py::class_< USeqAct_GetInstanceData, USequenceAction >(m, "USeqAct_GetInstanceData")
		.def_readwrite("InstanceDataName", &USeqAct_GetInstanceData::InstanceDataName, py::return_value_policy::reference)
		.def_readwrite("InObject", &USeqAct_GetInstanceData::InObject, py::return_value_policy::reference)
		.def_readwrite("OutObject", &USeqAct_GetInstanceData::OutObject, py::return_value_policy::reference)
		.def("eventActivated", &USeqAct_GetInstanceData::eventActivated)
		;
	py::class_< USeqEvent_SpawnedMissionPickup, USequenceEvent >(m, "USeqEvent_SpawnedMissionPickup")
		;
	py::class_< UShieldBarGFxObject, UGFxObject >(m, "UShieldBarGFxObject")
		.def_readwrite("CachedCurrentShield", &UShieldBarGFxObject::CachedCurrentShield)
		.def("__SetHealth", &UShieldBarGFxObject::__SetHealth)
		.def("SetShield", &UShieldBarGFxObject::SetShield)
		;
	py::class_< ASimpleVolume, AVolume >(m, "ASimpleVolume")
		.def("StopsProjectile", &ASimpleVolume::StopsProjectile)
		;
	py::class_< USirenInputContextSelector, UDefaultInputContextSelector >(m, "USirenInputContextSelector")
		.def("SelectContext", &USirenInputContextSelector::SelectContext, py::return_value_policy::reference)
		;
	py::class_< USkillPointsFeedbackMessage, UWillowLocalMessage >(m, "USkillPointsFeedbackMessage")
		.def_readwrite("HasSkillPoints", &USkillPointsFeedbackMessage::HasSkillPoints, py::return_value_policy::reference)
		.def("GetString", &USkillPointsFeedbackMessage::GetString, py::return_value_policy::reference)
		;
	py::class_< USoldierInputContextSelector, UDefaultInputContextSelector >(m, "USoldierInputContextSelector")
		.def("SelectContext", &USoldierInputContextSelector::SelectContext, py::return_value_policy::reference)
		;
	py::class_< USpecialMove_WeaponAction, UWillowAnimDefinition >(m, "USpecialMove_WeaponAction")
		.def_property("bBlocksWeaponActions", [](USpecialMove_WeaponAction &self){return self.bBlocksWeaponActions;}, [](USpecialMove_WeaponAction &self, bool value){self.bBlocksWeaponActions = value ? 1 : 0;})
		.def("eventClientStarted", &USpecialMove_WeaponAction::eventClientStarted)
		;
	py::class_< USpecialMove_FirstAndThirdPersonAnimation, USpecialMove_WeaponAction >(m, "USpecialMove_FirstAndThirdPersonAnimation")
		.def_readwrite("FirstPersonSM", &USpecialMove_FirstAndThirdPersonAnimation::FirstPersonSM, py::return_value_policy::reference)
		.def("eventClientStarted", &USpecialMove_FirstAndThirdPersonAnimation::eventClientStarted)
		;
	py::class_< USpecialMove_FirstPersonOffHand, USpecialMove_FirstPerson >(m, "USpecialMove_FirstPersonOffHand")
		.def("StopWeaponRecoilAnim", &USpecialMove_FirstPersonOffHand::StopWeaponRecoilAnim)
		;
	py::class_< UWillowSeqEvent_JumpAnimStart, USequenceEvent >(m, "UWillowSeqEvent_JumpAnimStart")
		;
	py::class_< UWillowSeqEvent_JumpAnimIdle, USequenceEvent >(m, "UWillowSeqEvent_JumpAnimIdle")
		;
	py::class_< UWillowSeqEvent_JumpAnimStop, USequenceEvent >(m, "UWillowSeqEvent_JumpAnimStop")
		;
	py::class_< USpecialMove_WeaponActionOffHand, USpecialMove_WeaponAction >(m, "USpecialMove_WeaponActionOffHand")
		;
	py::class_< UStashGFxMovie, UTwoPanelInterfaceGFxMovie >(m, "UStashGFxMovie")
		.def_readwrite("StashTitle", &UStashGFxMovie::StashTitle, py::return_value_policy::reference)
		.def_readwrite("StashAddTip", &UStashGFxMovie::StashAddTip, py::return_value_policy::reference)
		.def_readwrite("StashStorage", &UStashGFxMovie::StashStorage, py::return_value_policy::reference)
		.def_readwrite("StorageSortConfiguration", &UStashGFxMovie::StorageSortConfiguration, py::return_value_policy::reference)
		.def("SetItemLocation", &UStashGFxMovie::SetItemLocation)
		.def("OnInventoryPanelSetActive", &UStashGFxMovie::OnInventoryPanelSetActive)
		.def("GetSortConfigDataForPanel", &UStashGFxMovie::GetSortConfigDataForPanel)
		.def("GetStorageReferenceForTransferring", &UStashGFxMovie::GetStorageReferenceForTransferring, py::return_value_policy::reference)
		.def("GetStorageReferenceForSwapping", &UStashGFxMovie::GetStorageReferenceForSwapping, py::return_value_policy::reference)
		.def("GetPlayerPanelItems", &UStashGFxMovie::GetPlayerPanelItems)
		.def("GetAddTip", &UStashGFxMovie::GetAddTip, py::return_value_policy::reference)
		.def("GetTitle", &UStashGFxMovie::GetTitle, py::return_value_policy::reference)
		.def("OnLeftPanelInit", &UStashGFxMovie::OnLeftPanelInit)
		.def("extInitMainPanel", &UStashGFxMovie::extInitMainPanel)
		.def("eventOnClose", &UStashGFxMovie::eventOnClose)
		.def("eventStart", &UStashGFxMovie::eventStart)
		.def("GetStoragePanelItems", [](UStashGFxMovie &self , TArray< class AWillowInventory* >* Things) { int* pyUnloadableCount = (int*)malloc(sizeof(int)) ;   self.GetStoragePanelItems(Things, pyUnloadableCount); return py::make_tuple(*pyUnloadableCount); })
		;
	py::class_< UStatusMenuEquippedPanelGFxObject, UBaseInventoryPanelGFxObject >(m, "UStatusMenuEquippedPanelGFxObject")
		.def_property("bReadyWeaponLeftUnlocked", [](UStatusMenuEquippedPanelGFxObject &self){return self.bReadyWeaponLeftUnlocked;}, [](UStatusMenuEquippedPanelGFxObject &self, bool value){self.bReadyWeaponLeftUnlocked = value ? 1 : 0;})
		.def_property("bReadyWeaponRightUnlocked", [](UStatusMenuEquippedPanelGFxObject &self){return self.bReadyWeaponRightUnlocked;}, [](UStatusMenuEquippedPanelGFxObject &self, bool value){self.bReadyWeaponRightUnlocked = value ? 1 : 0;})
		.def_readwrite("SelectedCellSuffix", &UStatusMenuEquippedPanelGFxObject::SelectedCellSuffix)
		.def_readwrite("PreferredDownCellSuffix", &UStatusMenuEquippedPanelGFxObject::PreferredDownCellSuffix)
		.def_readwrite("EquippedTypeCellSuffix", &UStatusMenuEquippedPanelGFxObject::EquippedTypeCellSuffix)
		.def_readwrite("StatusDef", &UStatusMenuEquippedPanelGFxObject::StatusDef, py::return_value_policy::reference)
		.def_readwrite("CachedCurrentlySelectedCell", &UStatusMenuEquippedPanelGFxObject::CachedCurrentlySelectedCell, py::return_value_policy::reference)
		.def_readwrite("__MoveFunction__Delegate", &UStatusMenuEquippedPanelGFxObject::__MoveFunction__Delegate, py::return_value_policy::reference)
		.def("ShowDualWieldInventoryGuides", &UStatusMenuEquippedPanelGFxObject::ShowDualWieldInventoryGuides)
		.def("CleanUpAfterCancelledDrag", &UStatusMenuEquippedPanelGFxObject::CleanUpAfterCancelledDrag)
		.def("PrepareForFinishDrag", &UStatusMenuEquippedPanelGFxObject::PrepareForFinishDrag)
		.def("CanFinishDragOnCell", &UStatusMenuEquippedPanelGFxObject::CanFinishDragOnCell)
		.def("OnStartDrag", &UStatusMenuEquippedPanelGFxObject::OnStartDrag)
		.def("SetCellMarkForIndex", &UStatusMenuEquippedPanelGFxObject::SetCellMarkForIndex)
		.def("SetCellMarkForThing", &UStatusMenuEquippedPanelGFxObject::SetCellMarkForThing)
		.def("__SetCellMarks", &UStatusMenuEquippedPanelGFxObject::__SetCellMarks)
		.def("__SetCellInfo", &UStatusMenuEquippedPanelGFxObject::__SetCellInfo)
		.def("extOnTrashFavChanged", &UStatusMenuEquippedPanelGFxObject::extOnTrashFavChanged)
		.def("GetMarkFromInventory", &UStatusMenuEquippedPanelGFxObject::GetMarkFromInventory)
		.def("SetCellInfo", &UStatusMenuEquippedPanelGFxObject::SetCellInfo)
		.def("GetSelectedCellInventoryType", &UStatusMenuEquippedPanelGFxObject::GetSelectedCellInventoryType)
		.def("GetSuffixFromQuickSlot", &UStatusMenuEquippedPanelGFxObject::GetSuffixFromQuickSlot)
		.def("GetWeaponSlotFromSuffix", &UStatusMenuEquippedPanelGFxObject::GetWeaponSlotFromSuffix)
		.def("GetWeaponSlotFromThing", &UStatusMenuEquippedPanelGFxObject::GetWeaponSlotFromThing)
		.def("GetHighlightedWeaponSlot", &UStatusMenuEquippedPanelGFxObject::GetHighlightedWeaponSlot)
		.def("GetTypeCellSuffixBasedOnPosition", &UStatusMenuEquippedPanelGFxObject::GetTypeCellSuffixBasedOnPosition)
		.def("GetTypeCellSuffixBasedOnThing", &UStatusMenuEquippedPanelGFxObject::GetTypeCellSuffixBasedOnThing)
		.def("IsAWeaponSuffix", &UStatusMenuEquippedPanelGFxObject::IsAWeaponSuffix)
		.def("StopEquip", &UStatusMenuEquippedPanelGFxObject::StopEquip)
		.def("SelectTypeCellBasedOnThing", &UStatusMenuEquippedPanelGFxObject::SelectTypeCellBasedOnThing)
		.def("StartEquip", &UStatusMenuEquippedPanelGFxObject::StartEquip)
		.def("EquippingMove", &UStatusMenuEquippedPanelGFxObject::EquippingMove)
		.def("extOnMouseUp", &UStatusMenuEquippedPanelGFxObject::extOnMouseUp)
		.def("extOnCellPressed", &UStatusMenuEquippedPanelGFxObject::extOnCellPressed)
		.def("extOnEquippedPanelPressed", &UStatusMenuEquippedPanelGFxObject::extOnEquippedPanelPressed)
		.def("NormalMove", &UStatusMenuEquippedPanelGFxObject::NormalMove)
		.def("RestoreCurrentSelectedCell", &UStatusMenuEquippedPanelGFxObject::RestoreCurrentSelectedCell)
		.def("CacheCurrentSelectedCellAndSetToNone", &UStatusMenuEquippedPanelGFxObject::CacheCurrentSelectedCellAndSetToNone)
		.def("ResetCacheCurrentSelectedCell", &UStatusMenuEquippedPanelGFxObject::ResetCacheCurrentSelectedCell)
		.def("GetCurrentSelectedCell", &UStatusMenuEquippedPanelGFxObject::GetCurrentSelectedCell, py::return_value_policy::reference)
		.def("extOnCellUnselected", &UStatusMenuEquippedPanelGFxObject::extOnCellUnselected)
		.def("extOnCellSelected", &UStatusMenuEquippedPanelGFxObject::extOnCellSelected)
		.def("GetThingByIndex", &UStatusMenuEquippedPanelGFxObject::GetThingByIndex, py::return_value_policy::reference)
		.def("GetSelectedThing", &UStatusMenuEquippedPanelGFxObject::GetSelectedThing, py::return_value_policy::reference)
		.def("__SetSelectedCell", &UStatusMenuEquippedPanelGFxObject::__SetSelectedCell)
		.def("SetCellsForEquipping", &UStatusMenuEquippedPanelGFxObject::SetCellsForEquipping)
		.def("SetSelectedCell", &UStatusMenuEquippedPanelGFxObject::SetSelectedCell)
		.def("PanelOnInputKey", &UStatusMenuEquippedPanelGFxObject::PanelOnInputKey)
		.def("SetReadyWeaponRight", &UStatusMenuEquippedPanelGFxObject::SetReadyWeaponRight)
		.def("SetReadyWeaponLeft", &UStatusMenuEquippedPanelGFxObject::SetReadyWeaponLeft)
		.def("FlourishWeaponLeft", &UStatusMenuEquippedPanelGFxObject::FlourishWeaponLeft)
		.def("FlourishWeaponRight", &UStatusMenuEquippedPanelGFxObject::FlourishWeaponRight)
		.def("SetUpEquippedSlotIcons", &UStatusMenuEquippedPanelGFxObject::SetUpEquippedSlotIcons)
		.def("Refresh", &UStatusMenuEquippedPanelGFxObject::Refresh)
		.def("Init", &UStatusMenuEquippedPanelGFxObject::Init)
		.def("MoveFunction", &UStatusMenuEquippedPanelGFxObject::MoveFunction)
		;
	py::class_< UTradingOffersPanelGFxObject, UBaseInventoryPanelGFxObject >(m, "UTradingOffersPanelGFxObject")
		.def_property("bBrowsingCells", [](UTradingOffersPanelGFxObject &self){return self.bBrowsingCells;}, [](UTradingOffersPanelGFxObject &self, bool value){self.bBrowsingCells = value ? 1 : 0;})
		.def_property("bUsingMoneyWidget", [](UTradingOffersPanelGFxObject &self){return self.bUsingMoneyWidget;}, [](UTradingOffersPanelGFxObject &self, bool value){self.bUsingMoneyWidget = value ? 1 : 0;})
		.def_property("bSelectedTradeAction", [](UTradingOffersPanelGFxObject &self){return self.bSelectedTradeAction;}, [](UTradingOffersPanelGFxObject &self, bool value){self.bSelectedTradeAction = value ? 1 : 0;})
		.def_property("bSelectedDuelAction", [](UTradingOffersPanelGFxObject &self){return self.bSelectedDuelAction;}, [](UTradingOffersPanelGFxObject &self, bool value){self.bSelectedDuelAction = value ? 1 : 0;})
		.def_readwrite("SelectedCellSuffix", &UTradingOffersPanelGFxObject::SelectedCellSuffix)
		.def_readwrite("NonCellButtonFocused", &UTradingOffersPanelGFxObject::NonCellButtonFocused)
		.def_readwrite("OfferingThing", &UTradingOffersPanelGFxObject::OfferingThing, py::return_value_policy::reference)
		.def_readwrite("__MoveFunction__Delegate", &UTradingOffersPanelGFxObject::__MoveFunction__Delegate, py::return_value_policy::reference)
		.def("CleanUpAfterCancelledDrag", &UTradingOffersPanelGFxObject::CleanUpAfterCancelledDrag)
		.def("PrepareForFinishDrag", &UTradingOffersPanelGFxObject::PrepareForFinishDrag)
		.def("CanFinishDragOnCell", &UTradingOffersPanelGFxObject::CanFinishDragOnCell)
		.def("OnStartDrag", &UTradingOffersPanelGFxObject::OnStartDrag)
		.def("__SetCellMarks", &UTradingOffersPanelGFxObject::__SetCellMarks)
		.def("__SetCellInfo", &UTradingOffersPanelGFxObject::__SetCellInfo)
		.def("extOnTrashFavChanged", &UTradingOffersPanelGFxObject::extOnTrashFavChanged)
		.def("GetMarkFromInventory", &UTradingOffersPanelGFxObject::GetMarkFromInventory)
		.def("SetCellInfo", &UTradingOffersPanelGFxObject::SetCellInfo)
		.def("GetCellSuffixBasedOnThing", &UTradingOffersPanelGFxObject::GetCellSuffixBasedOnThing)
		.def("CancelOffer", &UTradingOffersPanelGFxObject::CancelOffer)
		.def("StopOffer", &UTradingOffersPanelGFxObject::StopOffer)
		.def("StartOffer", &UTradingOffersPanelGFxObject::StartOffer)
		.def("CanUseCLIKButtons", &UTradingOffersPanelGFxObject::CanUseCLIKButtons)
		.def("CanStartOffer", &UTradingOffersPanelGFxObject::CanStartOffer)
		.def("OfferingMove", &UTradingOffersPanelGFxObject::OfferingMove)
		.def("__SetSelectedButton", &UTradingOffersPanelGFxObject::__SetSelectedButton)
		.def("SetSelectedButton", &UTradingOffersPanelGFxObject::SetSelectedButton)
		.def("ButtonsMove", &UTradingOffersPanelGFxObject::ButtonsMove)
		.def("CellMove", &UTradingOffersPanelGFxObject::CellMove)
		.def("GetCurrentSelectedButton", &UTradingOffersPanelGFxObject::GetCurrentSelectedButton, py::return_value_policy::reference)
		.def("GetCurrentSelectedCell", &UTradingOffersPanelGFxObject::GetCurrentSelectedCell, py::return_value_policy::reference)
		.def("extOnCellSelected", &UTradingOffersPanelGFxObject::extOnCellSelected)
		.def("GetThingByIndex", &UTradingOffersPanelGFxObject::GetThingByIndex, py::return_value_policy::reference)
		.def("GetSelectedThing", &UTradingOffersPanelGFxObject::GetSelectedThing, py::return_value_policy::reference)
		.def("__SetSelectedCell", &UTradingOffersPanelGFxObject::__SetSelectedCell)
		.def("SetSelectedCell", &UTradingOffersPanelGFxObject::SetSelectedCell)
		.def("PanelOnInputKey", &UTradingOffersPanelGFxObject::PanelOnInputKey)
		.def("BlockInput", &UTradingOffersPanelGFxObject::BlockInput)
		.def("DeferInput", &UTradingOffersPanelGFxObject::DeferInput)
		.def("Init", &UTradingOffersPanelGFxObject::Init)
		.def("MoveFunction", &UTradingOffersPanelGFxObject::MoveFunction)
		;
	py::class_< UTurretWeaponTypeDefinition, UWeaponTypeDefinition >(m, "UTurretWeaponTypeDefinition")
		;
	py::class_< UUBMGameOverGFxMovie, UWillowGFxMovie >(m, "UUBMGameOverGFxMovie")
		.def_property("bCanContinue", [](UUBMGameOverGFxMovie &self){return self.bCanContinue;}, [](UUBMGameOverGFxMovie &self, bool value){self.bCanContinue = value ? 1 : 0;})
		.def_readwrite("GameOverClip", &UUBMGameOverGFxMovie::GameOverClip, py::return_value_policy::reference)
		.def("extEnableGameOverScreenInput", &UUBMGameOverGFxMovie::extEnableGameOverScreenInput)
		.def("extGameOverClipReady", &UUBMGameOverGFxMovie::extGameOverClipReady)
		.def("PopulatePlayerInfo", &UUBMGameOverGFxMovie::PopulatePlayerInfo)
		.def("HandleInputKey", &UUBMGameOverGFxMovie::HandleInputKey)
		.def("eventStart", &UUBMGameOverGFxMovie::eventStart)
		;
	py::class_< UUBMGameOverGFxObject, UGFxObject >(m, "UUBMGameOverGFxObject")
		.def("SetPlayerInfo", &UUBMGameOverGFxObject::SetPlayerInfo)
		;
	py::class_< UVehicleChoiceInfoCardGFxObject, UGFxObject >(m, "UVehicleChoiceInfoCardGFxObject")
		.def("TryScrollDown", &UVehicleChoiceInfoCardGFxObject::TryScrollDown)
		.def("TryScrollUp", &UVehicleChoiceInfoCardGFxObject::TryScrollUp)
		.def("TryScrollRight", &UVehicleChoiceInfoCardGFxObject::TryScrollRight)
		.def("TryScrollLeft", &UVehicleChoiceInfoCardGFxObject::TryScrollLeft)
		.def("ConfigureSelectedSkinTypeIndex", &UVehicleChoiceInfoCardGFxObject::ConfigureSelectedSkinTypeIndex)
		.def("ConfigureSelectedVehicleTypeIndex", &UVehicleChoiceInfoCardGFxObject::ConfigureSelectedVehicleTypeIndex)
		.def("ConfigureVehicleTypeCell", &UVehicleChoiceInfoCardGFxObject::ConfigureVehicleTypeCell)
		.def("ConfigureDisplayText", &UVehicleChoiceInfoCardGFxObject::ConfigureDisplayText)
		.def("ShowSkinChoices", &UVehicleChoiceInfoCardGFxObject::ShowSkinChoices)
		.def("ShowVehicleChoices", &UVehicleChoiceInfoCardGFxObject::ShowVehicleChoices)
		.def("Hide", &UVehicleChoiceInfoCardGFxObject::Hide)
		.def("PopulateSkinList", &UVehicleChoiceInfoCardGFxObject::PopulateSkinList)
		.def("EndAddVehicleCells", &UVehicleChoiceInfoCardGFxObject::EndAddVehicleCells)
		.def("AddVehicleTypeCell", &UVehicleChoiceInfoCardGFxObject::AddVehicleTypeCell)
		.def("BeginAddVehicleCells", &UVehicleChoiceInfoCardGFxObject::BeginAddVehicleCells)
		;
	py::class_< UVehicleFamilySelectorGFxObject, UGFxObject >(m, "UVehicleFamilySelectorGFxObject")
		.def("TryScrollDown", &UVehicleFamilySelectorGFxObject::TryScrollDown)
		.def("TryScrollUp", &UVehicleFamilySelectorGFxObject::TryScrollUp)
		.def("SetSelectedVehicleFamilyIndex", &UVehicleFamilySelectorGFxObject::SetSelectedVehicleFamilyIndex)
		.def("EndAddCells", &UVehicleFamilySelectorGFxObject::EndAddCells)
		.def("AddCell", &UVehicleFamilySelectorGFxObject::AddCell)
		.def("BeginAddCells", &UVehicleFamilySelectorGFxObject::BeginAddCells)
		;
	py::class_< UVehicleWeaponTypeDefinition, UWeaponTypeDefinition >(m, "UVehicleWeaponTypeDefinition")
		.def_readwrite("WeaponMeshInstanceDataName", &UVehicleWeaponTypeDefinition::WeaponMeshInstanceDataName, py::return_value_policy::reference)
		;
	py::class_< UVendingMachineFeedbackGFxObject, UGFxObject >(m, "UVendingMachineFeedbackGFxObject")
		.def_readwrite("PurchasedLabel", &UVendingMachineFeedbackGFxObject::PurchasedLabel, py::return_value_policy::reference)
		.def_readwrite("SoldLabel", &UVendingMachineFeedbackGFxObject::SoldLabel, py::return_value_policy::reference)
		.def_readwrite("InsufficientFundsLabel", &UVendingMachineFeedbackGFxObject::InsufficientFundsLabel, py::return_value_policy::reference)
		.def_readwrite("FullLabel", &UVendingMachineFeedbackGFxObject::FullLabel, py::return_value_policy::reference)
		.def("Trigger", &UVendingMachineFeedbackGFxObject::Trigger)
		.def("TriggerCannotCarryOrUse", &UVendingMachineFeedbackGFxObject::TriggerCannotCarryOrUse)
		.def("TriggerCannotAfford", &UVendingMachineFeedbackGFxObject::TriggerCannotAfford)
		.def("TriggerSold", &UVendingMachineFeedbackGFxObject::TriggerSold)
		.def("TriggerPurchased", &UVendingMachineFeedbackGFxObject::TriggerPurchased)
		;
	py::class_< AWeaponShotDebug, AActor >(m, "AWeaponShotDebug")
		.def_readwrite("AimArrow", &AWeaponShotDebug::AimArrow, py::return_value_policy::reference)
		.def_readwrite("ShotArrow", &AWeaponShotDebug::ShotArrow, py::return_value_policy::reference)
		.def_readwrite("SpreadShotArrow", &AWeaponShotDebug::SpreadShotArrow, py::return_value_policy::reference)
		.def("FinalizeComponentInitialization", &AWeaponShotDebug::FinalizeComponentInitialization)
		;
	py::class_< UWillowAIEncounterComponent, UWillowAIDenComponent >(m, "UWillowAIEncounterComponent")
		;
	py::class_< UWillowAnimNode_Audio, UAnimNodeBlendBase >(m, "UWillowAnimNode_Audio")
		.def_readwrite("StartAkEvent", &UWillowAnimNode_Audio::StartAkEvent, py::return_value_policy::reference)
		.def_readwrite("StopAkEvent", &UWillowAnimNode_Audio::StopAkEvent, py::return_value_policy::reference)
		.def("eventOnCeaseRelevant", &UWillowAnimNode_Audio::eventOnCeaseRelevant)
		.def("eventOnBecomeRelevant", &UWillowAnimNode_Audio::eventOnBecomeRelevant)
		.def("IsValid", &UWillowAnimNode_Audio::IsValid)
		;
	py::class_< UWillowPickupMessage, UWillowLocalMessage >(m, "UWillowPickupMessage")
		.def("GetString", &UWillowPickupMessage::GetString, py::return_value_policy::reference)
		.def("ClientReceive", &UWillowPickupMessage::ClientReceive)
		;
	py::class_< UWillowConsole, UConsole >(m, "UWillowConsole")
		;
	py::class_< UWillowDamageType_Bullet, UWillowDamageType >(m, "UWillowDamageType_Bullet")
		;
	py::class_< UWillowDmgSource_MeleeWithBlade, UWillowDmgSource_Melee >(m, "UWillowDmgSource_MeleeWithBlade")
		;
	py::class_< UWillowDmgType_VehicleCollision, UWillowDamageType >(m, "UWillowDmgType_VehicleCollision")
		;
	py::class_< AWillowEmit_BodyFlame, AWillowEmit_HitEffect >(m, "AWillowEmit_BodyFlame")
		;
	py::class_< AWillowEmitterPool, AEmitterPool >(m, "AWillowEmitterPool")
		;
	py::class_< AWillowPendingLevelPlayerController, AWillowPlayerController >(m, "AWillowPendingLevelPlayerController")
		.def("HandleSignInChange", &AWillowPendingLevelPlayerController::HandleSignInChange)
		.def("eventGetLoginStatus", &AWillowPendingLevelPlayerController::eventGetLoginStatus)
		.def("ClearPlayerStandIn", &AWillowPendingLevelPlayerController::ClearPlayerStandIn)
		.def("GetPlayerStandIn", &AWillowPendingLevelPlayerController::GetPlayerStandIn, py::return_value_policy::reference)
		.def("GenericPlayerInitialization", &AWillowPendingLevelPlayerController::GenericPlayerInitialization)
		.def("eventDestroyed", &AWillowPendingLevelPlayerController::eventDestroyed)
		.def("PostBeginPlay", &AWillowPendingLevelPlayerController::PostBeginPlay)
		;
	py::class_< UWillowGFxBuddyPlane, UWillowGFxMovie >(m, "UWillowGFxBuddyPlane")
		;
	py::class_< UWillowGFxEditDialog, UWillowGFxMovie >(m, "UWillowGFxEditDialog")
		.def_readwrite("Tools", &UWillowGFxEditDialog::Tools, py::return_value_policy::reference)
		.def_readwrite("MenuItemCallbacks", &UWillowGFxEditDialog::MenuItemCallbacks, py::return_value_policy::reference)
		.def_readwrite("__OnMenuItemClicked__Delegate", &UWillowGFxEditDialog::__OnMenuItemClicked__Delegate, py::return_value_policy::reference)
		.def("GetDefaultEditBoxValue", &UWillowGFxEditDialog::GetDefaultEditBoxValue, py::return_value_policy::reference)
		.def("DisplayOkBox", &UWillowGFxEditDialog::DisplayOkBox)
		.def("extMenuItemClicked", &UWillowGFxEditDialog::extMenuItemClicked)
		.def("GetEditBoxValueForTag", &UWillowGFxEditDialog::GetEditBoxValueForTag, py::return_value_policy::reference)
		.def("SetDialogueText", &UWillowGFxEditDialog::SetDialogueText)
		.def("SetCaptionText", &UWillowGFxEditDialog::SetCaptionText)
		.def("ApplyLayout", &UWillowGFxEditDialog::ApplyLayout)
		.def("AddMenuItem", &UWillowGFxEditDialog::AddMenuItem)
		.def("AddEditItem", &UWillowGFxEditDialog::AddEditItem)
		.def("HandleInputKey", &UWillowGFxEditDialog::HandleInputKey)
		.def("GetLocalPlayerID", &UWillowGFxEditDialog::GetLocalPlayerID)
		.def("eventOnClose", &UWillowGFxEditDialog::eventOnClose)
		.def("eventStart", &UWillowGFxEditDialog::eventStart)
		.def("OnMenuItemClicked", &UWillowGFxEditDialog::OnMenuItemClicked)
		;
	py::class_< UWillowGFxLobbyTools, UObject >(m, "UWillowGFxLobbyTools")
		.def_readwrite("Movie", &UWillowGFxLobbyTools::Movie, py::return_value_policy::reference)
		.def_readwrite("InputMenuTag", &UWillowGFxLobbyTools::InputMenuTag, py::return_value_policy::reference)
		.def_readwrite("InputPlayerID", &UWillowGFxLobbyTools::InputPlayerID)
		.def("FinishInput", &UWillowGFxLobbyTools::FinishInput)
		.def("BeginInputText", &UWillowGFxLobbyTools::BeginInputText)
		.def("AS_SetArgU", &UWillowGFxLobbyTools::AS_SetArgU)
		.def("AS_SetArgB", &UWillowGFxLobbyTools::AS_SetArgB)
		.def("AS_SetArgS", &UWillowGFxLobbyTools::AS_SetArgS)
		.def("AS_SetArgI", &UWillowGFxLobbyTools::AS_SetArgI)
		.def("AS_SetArgF", &UWillowGFxLobbyTools::AS_SetArgF)
		.def("InvokeNoArgs", &UWillowGFxLobbyTools::InvokeNoArgs)
		.def("menuSetValue", &UWillowGFxLobbyTools::menuSetValue)
		.def("menuGetValue", &UWillowGFxLobbyTools::menuGetValue, py::return_value_policy::reference)
		.def("menuAddEditItem", &UWillowGFxLobbyTools::menuAddEditItem)
		.def("menuAddSlider", &UWillowGFxLobbyTools::menuAddSlider)
		.def("menuUpdateSpinner", &UWillowGFxLobbyTools::menuUpdateSpinner)
		.def("menuAddSpinner", &UWillowGFxLobbyTools::menuAddSpinner)
		.def("menuAddCharacterItem", &UWillowGFxLobbyTools::menuAddCharacterItem)
		.def("menuAddItem", &UWillowGFxLobbyTools::menuAddItem)
		.def("menuEnd", &UWillowGFxLobbyTools::menuEnd)
		.def("menuStart", &UWillowGFxLobbyTools::menuStart)
		.def("inNeedsInput", &UWillowGFxLobbyTools::inNeedsInput)
		.def("inSelect", &UWillowGFxLobbyTools::inSelect)
		.def("inBack", &UWillowGFxLobbyTools::inBack)
		.def("inPrev", &UWillowGFxLobbyTools::inPrev)
		.def("inNext", &UWillowGFxLobbyTools::inNext)
		.def("inMinus", &UWillowGFxLobbyTools::inMinus)
		.def("inPlus", &UWillowGFxLobbyTools::inPlus)
		.def("inCloseAllMenus", &UWillowGFxLobbyTools::inCloseAllMenus)
		.def("inFocus", &UWillowGFxLobbyTools::inFocus)
		.def("Init", &UWillowGFxLobbyTools::Init)
		;
	py::class_< UWillowGFxTrainingDialogBox, UWillowGFxDialogBox >(m, "UWillowGFxTrainingDialogBox")
		.def_readwrite("DelayUntilShowOk", &UWillowGFxTrainingDialogBox::DelayUntilShowOk)
		.def_readwrite("StatusMenuTab", &UWillowGFxTrainingDialogBox::StatusMenuTab)
		.def("OnClose", &UWillowGFxTrainingDialogBox::OnClose)
		.def("OnTick", &UWillowGFxTrainingDialogBox::OnTick)
		.def("DisplayDelayedOkBoxForTraining", &UWillowGFxTrainingDialogBox::DisplayDelayedOkBoxForTraining)
		.def("Accepted", &UWillowGFxTrainingDialogBox::Accepted)
		.def("Cancelled", &UWillowGFxTrainingDialogBox::Cancelled)
		.def("HandleInputKey", &UWillowGFxTrainingDialogBox::HandleInputKey)
		.def("eventStart", &UWillowGFxTrainingDialogBox::eventStart)
		;
	py::class_< UWillowGFxTrainingDialogBox_NoPause, UWillowGFxTrainingDialogBox >(m, "UWillowGFxTrainingDialogBox_NoPause")
		;
	py::class_< UWillowInteractiveObjectAttributeContextResolver, UAttributeContextResolver >(m, "UWillowInteractiveObjectAttributeContextResolver")
		.def("GetAttributeContext", &UWillowInteractiveObjectAttributeContextResolver::GetAttributeContext, py::return_value_policy::reference)
		;
	py::class_< UWillowInventoryManagerAttributeContextResolver, UAttributeContextResolver >(m, "UWillowInventoryManagerAttributeContextResolver")
		.def("GetAttributeContext", &UWillowInventoryManagerAttributeContextResolver::GetAttributeContext, py::return_value_policy::reference)
		;
	py::class_< UWillowLANGameSearch, UWillowOnlineGameSearch >(m, "UWillowLANGameSearch")
		;
	py::class_< UWillowLockWarningMessage, UWillowLocalMessage >(m, "UWillowLockWarningMessage")
		.def_readwrite("MissileLockOnString", &UWillowLockWarningMessage::MissileLockOnString, py::return_value_policy::reference)
		.def_readwrite("AvrilLockOnString", &UWillowLockWarningMessage::AvrilLockOnString, py::return_value_policy::reference)
		.def_readwrite("RadarLockString", &UWillowLockWarningMessage::RadarLockString, py::return_value_policy::reference)
		.def_readwrite("SPMAAcquiredString", &UWillowLockWarningMessage::SPMAAcquiredString, py::return_value_policy::reference)
		.def_readwrite("RedColor", &UWillowLockWarningMessage::RedColor, py::return_value_policy::reference)
		.def_readwrite("YellowColor", &UWillowLockWarningMessage::YellowColor, py::return_value_policy::reference)
		.def("GetColor", &UWillowLockWarningMessage::GetColor, py::return_value_policy::reference)
		.def("GetString", &UWillowLockWarningMessage::GetString, py::return_value_policy::reference)
		.def("AnnouncementLevel", &UWillowLockWarningMessage::AnnouncementLevel)
		;
	py::class_< UWillowSeqAct_AILookAt, USequenceAction >(m, "UWillowSeqAct_AILookAt")
		.def_readwrite("LookAt", &UWillowSeqAct_AILookAt::LookAt, py::return_value_policy::reference)
		;
	py::class_< UWillowOnlineGameSearchSpecific, UWillowOnlineGameSearch >(m, "UWillowOnlineGameSearchSpecific")
		;
	py::class_< UWillowOnlineGameSearchNarrow, UWillowOnlineGameSearch >(m, "UWillowOnlineGameSearchNarrow")
		;
	py::class_< UWillowOnlineGameSearchBroad, UWillowOnlineGameSearch >(m, "UWillowOnlineGameSearchBroad")
		;
	py::class_< UWillowOnlineGameSearchCustom, UWillowOnlineGameSearch >(m, "UWillowOnlineGameSearchCustom")
		;
	py::class_< AWillowTeleporterExitPoint, AActor >(m, "AWillowTeleporterExitPoint")
		.def_readwrite("CylinderComponent", &AWillowTeleporterExitPoint::CylinderComponent, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqEvent_DuelChallengeIssued, USequenceEvent >(m, "UWillowSeqEvent_DuelChallengeIssued")
		;
	py::class_< UWillowSeqEvent_DuelChallengeAccepted, USequenceEvent >(m, "UWillowSeqEvent_DuelChallengeAccepted")
		;
	py::class_< UWillowSeqAct_PlayArmAnimation, USequenceAction >(m, "UWillowSeqAct_PlayArmAnimation")
		.def_readwrite("AnimationType", &UWillowSeqAct_PlayArmAnimation::AnimationType)
		;
	py::class_< AWillowPopulationEncounter, APopulationEncounter >(m, "AWillowPopulationEncounter")
		.def("OnAIAbortMoveToActor", &AWillowPopulationEncounter::OnAIAbortMoveToActor)
		.def("OnAICombatVolume", &AWillowPopulationEncounter::OnAICombatVolume)
		.def("OnAIScripted", &AWillowPopulationEncounter::OnAIScripted)
		.def("OnAIScriptedAnim", &AWillowPopulationEncounter::OnAIScriptedAnim)
		.def("OnAIScriptedDeath", &AWillowPopulationEncounter::OnAIScriptedDeath)
		.def("OnAIScriptedFollow", &AWillowPopulationEncounter::OnAIScriptedFollow)
		.def("OnAIScriptedHold", &AWillowPopulationEncounter::OnAIScriptedHold)
		.def("OnAISetItemTossTarget", &AWillowPopulationEncounter::OnAISetItemTossTarget)
		.def("OnAIProvoke", &AWillowPopulationEncounter::OnAIProvoke)
		;
	py::class_< AWillowReplicatedInventoryManager, AWillowInventoryManager >(m, "AWillowReplicatedInventoryManager")
		;
	py::class_< UWillowScrollingListDataProviderApplyRequiredOption, UWillowScrollingListDataProviderOptionsBase >(m, "UWillowScrollingListDataProviderApplyRequiredOption")
		.def_readwrite("CurrentSettingValue", &UWillowScrollingListDataProviderApplyRequiredOption::CurrentSettingValue)
		.def_readwrite("CurrentSpinnerValue", &UWillowScrollingListDataProviderApplyRequiredOption::CurrentSpinnerValue)
		.def_readwrite("SettingName", &UWillowScrollingListDataProviderApplyRequiredOption::SettingName, py::return_value_policy::reference)
		.def_readwrite("LocalizedSettingCaptionString", &UWillowScrollingListDataProviderApplyRequiredOption::LocalizedSettingCaptionString, py::return_value_policy::reference)
		.def_readwrite("LocalizedSettingDescriptionString", &UWillowScrollingListDataProviderApplyRequiredOption::LocalizedSettingDescriptionString, py::return_value_policy::reference)
		.def("HandleSpinnerChange", &UWillowScrollingListDataProviderApplyRequiredOption::HandleSpinnerChange)
		.def("Populate", &UWillowScrollingListDataProviderApplyRequiredOption::Populate)
		.def("HandleClick", &UWillowScrollingListDataProviderApplyRequiredOption::HandleClick)
		;
	py::class_< UWillowScrollingListDataProviderAudioOptions, UWillowScrollingListDataProviderOptionsBase >(m, "UWillowScrollingListDataProviderAudioOptions")
		.def("UpdateRealtimeSetting", &UWillowScrollingListDataProviderAudioOptions::UpdateRealtimeSetting)
		.def("StopAllVolumeSounds", &UWillowScrollingListDataProviderAudioOptions::StopAllVolumeSounds)
		.def("CheckStopVolumeSound", &UWillowScrollingListDataProviderAudioOptions::CheckStopVolumeSound)
		.def("HandleSpinnerChange", &UWillowScrollingListDataProviderAudioOptions::HandleSpinnerChange)
		.def("HandleSliderChange", &UWillowScrollingListDataProviderAudioOptions::HandleSliderChange)
		.def("HandleSelectionChange", &UWillowScrollingListDataProviderAudioOptions::HandleSelectionChange)
		.def("HandleClick", &UWillowScrollingListDataProviderAudioOptions::HandleClick)
		.def("OnPop", &UWillowScrollingListDataProviderAudioOptions::OnPop)
		.def("Cleanup", &UWillowScrollingListDataProviderAudioOptions::Cleanup)
		.def("Populate", &UWillowScrollingListDataProviderAudioOptions::Populate)
		;
	py::class_< UWillowScrollingListDataProviderExtras, UWillowScrollingListDataProviderBase >(m, "UWillowScrollingListDataProviderExtras")
		.def("Populate", &UWillowScrollingListDataProviderExtras::Populate)
		.def("HandleClick", &UWillowScrollingListDataProviderExtras::HandleClick)
		;
	py::class_< UWillowScrollingListDataProviderFrontEnd, UWillowScrollingListDataProviderBase >(m, "UWillowScrollingListDataProviderFrontEnd")
		.def("GetSubmenuForEvent", &UWillowScrollingListDataProviderFrontEnd::GetSubmenuForEvent, py::return_value_policy::reference)
		.def("Populate", &UWillowScrollingListDataProviderFrontEnd::Populate)
		.def("HandleClick", &UWillowScrollingListDataProviderFrontEnd::HandleClick)
		;
	py::class_< UWillowScrollingListDataProviderGameOptions, UWillowScrollingListDataProviderOptionsBase >(m, "UWillowScrollingListDataProviderGameOptions")
		.def("Populate", &UWillowScrollingListDataProviderGameOptions::Populate)
		;
	py::class_< UWillowScrollingListDataProviderGamepadOptions, UWillowScrollingListDataProviderOptionsBase >(m, "UWillowScrollingListDataProviderGamepadOptions")
		.def_property("bIsUsingCustomBindings", [](UWillowScrollingListDataProviderGamepadOptions &self){return self.bIsUsingCustomBindings;}, [](UWillowScrollingListDataProviderGamepadOptions &self, bool value){self.bIsUsingCustomBindings = value ? 1 : 0;})
		.def_property("bIsInCustomizeMode", [](UWillowScrollingListDataProviderGamepadOptions &self){return self.bIsInCustomizeMode;}, [](UWillowScrollingListDataProviderGamepadOptions &self, bool value){self.bIsInCustomizeMode = value ? 1 : 0;})
		.def_property("bIsInWarnExitMode", [](UWillowScrollingListDataProviderGamepadOptions &self){return self.bIsInWarnExitMode;}, [](UWillowScrollingListDataProviderGamepadOptions &self, bool value){self.bIsInWarnExitMode = value ? 1 : 0;})
		.def_property("bIsWaitingForFirstButton", [](UWillowScrollingListDataProviderGamepadOptions &self){return self.bIsWaitingForFirstButton;}, [](UWillowScrollingListDataProviderGamepadOptions &self, bool value){self.bIsWaitingForFirstButton = value ? 1 : 0;})
		.def_property("bIsWaitingForSecondButton", [](UWillowScrollingListDataProviderGamepadOptions &self){return self.bIsWaitingForSecondButton;}, [](UWillowScrollingListDataProviderGamepadOptions &self, bool value){self.bIsWaitingForSecondButton = value ? 1 : 0;})
		.def_readwrite("KeyCaptionList", &UWillowScrollingListDataProviderGamepadOptions::KeyCaptionList, py::return_value_policy::reference)
		.def_readwrite("ControllerPresetTags", &UWillowScrollingListDataProviderGamepadOptions::ControllerPresetTags, py::return_value_policy::reference)
		.def_readwrite("ControllerPresetNames", &UWillowScrollingListDataProviderGamepadOptions::ControllerPresetNames, py::return_value_policy::reference)
		.def_readwrite("ControllerMappingClip", &UWillowScrollingListDataProviderGamepadOptions::ControllerMappingClip, py::return_value_policy::reference)
		.def_readwrite("KeyTextFieldList", &UWillowScrollingListDataProviderGamepadOptions::KeyTextFieldList, py::return_value_policy::reference)
		.def_readwrite("PresetNameField", &UWillowScrollingListDataProviderGamepadOptions::PresetNameField, py::return_value_policy::reference)
		.def_readwrite("MyOptionsGFxMovie", &UWillowScrollingListDataProviderGamepadOptions::MyOptionsGFxMovie, py::return_value_policy::reference)
		.def_readwrite("CustomPresetIndex", &UWillowScrollingListDataProviderGamepadOptions::CustomPresetIndex)
		.def_readwrite("CurrentSelectedPresetIndex", &UWillowScrollingListDataProviderGamepadOptions::CurrentSelectedPresetIndex)
		.def_readwrite("WPI", &UWillowScrollingListDataProviderGamepadOptions::WPI, py::return_value_policy::reference)
		.def_readwrite("MyWillowScrollingList", &UWillowScrollingListDataProviderGamepadOptions::MyWillowScrollingList, py::return_value_policy::reference)
		.def_readwrite("Platform", &UWillowScrollingListDataProviderGamepadOptions::Platform)
		.def_readwrite("NonCustomizedPresetIndex", &UWillowScrollingListDataProviderGamepadOptions::NonCustomizedPresetIndex)
		.def_readwrite("FirstButtonName", &UWillowScrollingListDataProviderGamepadOptions::FirstButtonName, py::return_value_policy::reference)
		.def_readwrite("SecondButtonName", &UWillowScrollingListDataProviderGamepadOptions::SecondButtonName, py::return_value_policy::reference)
		.def("UpdatePresetCaptions", &UWillowScrollingListDataProviderGamepadOptions::UpdatePresetCaptions)
		.def("InitControllerMapping", &UWillowScrollingListDataProviderGamepadOptions::InitControllerMapping)
		.def("HideControllerMapping", &UWillowScrollingListDataProviderGamepadOptions::HideControllerMapping)
		.def("GetIndexForButton", &UWillowScrollingListDataProviderGamepadOptions::GetIndexForButton)
		.def("StartCustomizeMode", &UWillowScrollingListDataProviderGamepadOptions::StartCustomizeMode)
		.def("HandleExitWarnDlgInputKey", &UWillowScrollingListDataProviderGamepadOptions::HandleExitWarnDlgInputKey)
		.def("DisplayExitWarnDialog", &UWillowScrollingListDataProviderGamepadOptions::DisplayExitWarnDialog)
		.def("HandleClobberDlgInputKey", &UWillowScrollingListDataProviderGamepadOptions::HandleClobberDlgInputKey)
		.def("HandleInputKey", &UWillowScrollingListDataProviderGamepadOptions::HandleInputKey)
		.def("EncodeButton", &UWillowScrollingListDataProviderGamepadOptions::EncodeButton, py::return_value_policy::reference)
		.def("CreateControllerRebindingString", &UWillowScrollingListDataProviderGamepadOptions::CreateControllerRebindingString, py::return_value_policy::reference)
		.def("OnPop", &UWillowScrollingListDataProviderGamepadOptions::OnPop)
		.def("Cleanup", &UWillowScrollingListDataProviderGamepadOptions::Cleanup)
		.def("HandleSelectionRollover", &UWillowScrollingListDataProviderGamepadOptions::HandleSelectionRollover)
		.def("HandleSelectionChange", &UWillowScrollingListDataProviderGamepadOptions::HandleSelectionChange)
		.def("HandleSpinnerChange", &UWillowScrollingListDataProviderGamepadOptions::HandleSpinnerChange)
		.def("AddControllerPresets", &UWillowScrollingListDataProviderGamepadOptions::AddControllerPresets)
		.def("HandleCustomizeModeDlgInputKey", &UWillowScrollingListDataProviderGamepadOptions::HandleCustomizeModeDlgInputKey)
		.def("Populate", &UWillowScrollingListDataProviderGamepadOptions::Populate)
		;
	py::class_< UWillowScrollingListDataProviderKeyboardMouseOptions, UWillowScrollingListDataProviderOptionsBase >(m, "UWillowScrollingListDataProviderKeyboardMouseOptions")
		.def_property("bNeedsToSaveKeyBinds", [](UWillowScrollingListDataProviderKeyboardMouseOptions &self){return self.bNeedsToSaveKeyBinds;}, [](UWillowScrollingListDataProviderKeyboardMouseOptions &self, bool value){self.bNeedsToSaveKeyBinds = value ? 1 : 0;})
		.def_readwrite("WPCOwner", &UWillowScrollingListDataProviderKeyboardMouseOptions::WPCOwner, py::return_value_policy::reference)
		.def_readwrite("ControllerMappingClip", &UWillowScrollingListDataProviderKeyboardMouseOptions::ControllerMappingClip, py::return_value_policy::reference)
		.def_readwrite("DeviceCollection", &UWillowScrollingListDataProviderKeyboardMouseOptions::DeviceCollection, py::return_value_policy::reference)
		.def_readwrite("KeyBinds", &UWillowScrollingListDataProviderKeyboardMouseOptions::KeyBinds, py::return_value_policy::reference)
		.def_readwrite("CurrentKeyBindSelection", &UWillowScrollingListDataProviderKeyboardMouseOptions::CurrentKeyBindSelection)
		.def("ShowControllerMapping", &UWillowScrollingListDataProviderKeyboardMouseOptions::ShowControllerMapping)
		.def("OnPop", &UWillowScrollingListDataProviderKeyboardMouseOptions::OnPop)
		.def("Cleanup", &UWillowScrollingListDataProviderKeyboardMouseOptions::Cleanup)
		.def("HandleClick", &UWillowScrollingListDataProviderKeyboardMouseOptions::HandleClick)
		.def("HandleSelectionRollover", &UWillowScrollingListDataProviderKeyboardMouseOptions::HandleSelectionRollover)
		.def("HandleSelectionChange", &UWillowScrollingListDataProviderKeyboardMouseOptions::HandleSelectionChange)
		.def("OnResetKeyBindsButtonClicked", &UWillowScrollingListDataProviderKeyboardMouseOptions::OnResetKeyBindsButtonClicked)
		.def("HandleKeySwapDialog", &UWillowScrollingListDataProviderKeyboardMouseOptions::HandleKeySwapDialog)
		.def("BindCurrentSelection", &UWillowScrollingListDataProviderKeyboardMouseOptions::BindCurrentSelection)
		.def("HandleBindInputKey", &UWillowScrollingListDataProviderKeyboardMouseOptions::HandleBindInputKey)
		.def("DoBind", &UWillowScrollingListDataProviderKeyboardMouseOptions::DoBind)
		.def("AllowBindKey", &UWillowScrollingListDataProviderKeyboardMouseOptions::AllowBindKey)
		.def("IsGamepadKey", &UWillowScrollingListDataProviderKeyboardMouseOptions::IsGamepadKey)
		.def("GetLocalizedKeyName", &UWillowScrollingListDataProviderKeyboardMouseOptions::GetLocalizedKeyName, py::return_value_policy::reference)
		.def("FindBinding", &UWillowScrollingListDataProviderKeyboardMouseOptions::FindBinding)
		.def("AddKeyBindEntry", &UWillowScrollingListDataProviderKeyboardMouseOptions::AddKeyBindEntry)
		.def("AddAxisButtonBinding", &UWillowScrollingListDataProviderKeyboardMouseOptions::AddAxisButtonBinding)
		.def("GetAxisButtonCaption", &UWillowScrollingListDataProviderKeyboardMouseOptions::GetAxisButtonCaption, py::return_value_policy::reference)
		.def("AddButtonBinding", &UWillowScrollingListDataProviderKeyboardMouseOptions::AddButtonBinding)
		.def("GetButtonCaption", &UWillowScrollingListDataProviderKeyboardMouseOptions::GetButtonCaption, py::return_value_policy::reference)
		.def("GetActionNameForButton", &UWillowScrollingListDataProviderKeyboardMouseOptions::GetActionNameForButton, py::return_value_policy::reference)
		.def("extOnPopulateKeys", &UWillowScrollingListDataProviderKeyboardMouseOptions::extOnPopulateKeys)
		.def("extOnKeySelectionChange", &UWillowScrollingListDataProviderKeyboardMouseOptions::extOnKeySelectionChange)
		.def("extOnKeyClicked", &UWillowScrollingListDataProviderKeyboardMouseOptions::extOnKeyClicked)
		.def("InitKeyBinding", &UWillowScrollingListDataProviderKeyboardMouseOptions::InitKeyBinding)
		.def("InitDeviceCollection", &UWillowScrollingListDataProviderKeyboardMouseOptions::InitDeviceCollection)
		.def("Populate", &UWillowScrollingListDataProviderKeyboardMouseOptions::Populate)
		;
	py::class_< UWillowScrollingListDataProviderLobby, UWillowScrollingListDataProviderBase >(m, "UWillowScrollingListDataProviderLobby")
		.def("Populate", &UWillowScrollingListDataProviderLobby::Populate)
		.def("HandleClick", &UWillowScrollingListDataProviderLobby::HandleClick)
		;
	py::class_< UWillowScrollingListDataProviderMapList, UWillowScrollingListDataProviderBase >(m, "UWillowScrollingListDataProviderMapList")
		.def_readwrite("MapListDef", &UWillowScrollingListDataProviderMapList::MapListDef, py::return_value_policy::reference)
		.def_readwrite("MenuDisplayNameOverride", &UWillowScrollingListDataProviderMapList::MenuDisplayNameOverride, py::return_value_policy::reference)
		.def("Populate", &UWillowScrollingListDataProviderMapList::Populate)
		.def("HandleClick", &UWillowScrollingListDataProviderMapList::HandleClick)
		.def("GetMenuDisplayName", &UWillowScrollingListDataProviderMapList::GetMenuDisplayName, py::return_value_policy::reference)
		;
	py::class_< UWillowScrollingListDataProviderPause, UWillowScrollingListDataProviderBase >(m, "UWillowScrollingListDataProviderPause")
		.def("Populate", &UWillowScrollingListDataProviderPause::Populate)
		.def("HandleClick", &UWillowScrollingListDataProviderPause::HandleClick)
		;
	py::class_< UWillowScrollingListDataProviderResolutionOptions, UWillowScrollingListDataProviderApplyRequiredOption >(m, "UWillowScrollingListDataProviderResolutionOptions")
		.def("HandleClick", &UWillowScrollingListDataProviderResolutionOptions::HandleClick)
		;
	py::class_< UWillowScrollingListDataProviderVideoOptions, UWillowScrollingListDataProviderOptionsBase >(m, "UWillowScrollingListDataProviderVideoOptions")
		.def_readwrite("ScaleGuide", &UWillowScrollingListDataProviderVideoOptions::ScaleGuide, py::return_value_policy::reference)
		.def("GetSubmenuForEvent", &UWillowScrollingListDataProviderVideoOptions::GetSubmenuForEvent, py::return_value_policy::reference)
		.def("HideGuide", &UWillowScrollingListDataProviderVideoOptions::HideGuide)
		.def("ShowGuide", &UWillowScrollingListDataProviderVideoOptions::ShowGuide)
		.def("UpdateRealtimeSetting", &UWillowScrollingListDataProviderVideoOptions::UpdateRealtimeSetting)
		.def("Cleanup", &UWillowScrollingListDataProviderVideoOptions::Cleanup)
		.def("OnPop", &UWillowScrollingListDataProviderVideoOptions::OnPop)
		.def("HandleSelectionRollover", &UWillowScrollingListDataProviderVideoOptions::HandleSelectionRollover)
		.def("HandleSelectionChange", &UWillowScrollingListDataProviderVideoOptions::HandleSelectionChange)
		.def("Populate", &UWillowScrollingListDataProviderVideoOptions::Populate)
		;
	py::class_< UWillowScrollingListDataProviderWindowModeOptions, UWillowScrollingListDataProviderApplyRequiredOption >(m, "UWillowScrollingListDataProviderWindowModeOptions")
		.def("HandleClick", &UWillowScrollingListDataProviderWindowModeOptions::HandleClick)
		;
	py::class_< UWillowSeqAct_BossBar, USequenceAction >(m, "UWillowSeqAct_BossBar")
		.def_property("bEnable", [](UWillowSeqAct_BossBar &self){return self.bEnable;}, [](UWillowSeqAct_BossBar &self, bool value){self.bEnable = value ? 1 : 0;})
		.def_readwrite("BossActor", &UWillowSeqAct_BossBar::BossActor, py::return_value_policy::reference)
		.def("eventActivated", &UWillowSeqAct_BossBar::eventActivated)
		;
	py::class_< UWillowSeqAct_CleanUpPlayerVehicles, USequenceAction >(m, "UWillowSeqAct_CleanUpPlayerVehicles")
		.def_property("CleanUpOccupiedVehiclesAsWell", [](UWillowSeqAct_CleanUpPlayerVehicles &self){return self.CleanUpOccupiedVehiclesAsWell;}, [](UWillowSeqAct_CleanUpPlayerVehicles &self, bool value){self.CleanUpOccupiedVehiclesAsWell = value ? 1 : 0;})
		.def_property("PlayDeRezEffects", [](UWillowSeqAct_CleanUpPlayerVehicles &self){return self.PlayDeRezEffects;}, [](UWillowSeqAct_CleanUpPlayerVehicles &self, bool value){self.PlayDeRezEffects = value ? 1 : 0;})
		.def("eventActivated", &UWillowSeqAct_CleanUpPlayerVehicles::eventActivated)
		;
	py::class_< UWillowSeqAct_ClientFlagGet, USequenceAction >(m, "UWillowSeqAct_ClientFlagGet")
		.def_property("bValue", [](UWillowSeqAct_ClientFlagGet &self){return self.bValue;}, [](UWillowSeqAct_ClientFlagGet &self, bool value){self.bValue = value ? 1 : 0;})
		.def_readwrite("ClientFlagName", &UWillowSeqAct_ClientFlagGet::ClientFlagName, py::return_value_policy::reference)
		.def("eventActivated", &UWillowSeqAct_ClientFlagGet::eventActivated)
		;
	py::class_< UWillowSeqAct_ClientFlagSet, USequenceAction >(m, "UWillowSeqAct_ClientFlagSet")
		.def_property("bEnableFlag", [](UWillowSeqAct_ClientFlagSet &self){return self.bEnableFlag;}, [](UWillowSeqAct_ClientFlagSet &self, bool value){self.bEnableFlag = value ? 1 : 0;})
		.def_readwrite("ClientFlagName", &UWillowSeqAct_ClientFlagSet::ClientFlagName, py::return_value_policy::reference)
		.def("eventActivated", &UWillowSeqAct_ClientFlagSet::eventActivated)
		;
	py::class_< UWillowSeqAct_CloseColiseumOverlay, USequenceAction >(m, "UWillowSeqAct_CloseColiseumOverlay")
		.def("eventActivated", &UWillowSeqAct_CloseColiseumOverlay::eventActivated)
		;
	py::class_< UWillowSeqAct_ColiseumAllDead, USequenceAction >(m, "UWillowSeqAct_ColiseumAllDead")
		.def("eventActivated", &UWillowSeqAct_ColiseumAllDead::eventActivated)
		;
	py::class_< UWillowSeqAct_ColiseumAwardCertificate, USequenceAction >(m, "UWillowSeqAct_ColiseumAwardCertificate")
		.def("eventActivated", &UWillowSeqAct_ColiseumAwardCertificate::eventActivated)
		;
	py::class_< UWillowSeqAct_ColiseumNotify, USequenceAction >(m, "UWillowSeqAct_ColiseumNotify")
		.def_readwrite("NotifyType", &UWillowSeqAct_ColiseumNotify::NotifyType)
		.def("eventActivated", &UWillowSeqAct_ColiseumNotify::eventActivated)
		;
	py::class_< UWillowSeqAct_ColiseumRoundAnnounce, USequenceAction >(m, "UWillowSeqAct_ColiseumRoundAnnounce")
		.def("eventActivated", &UWillowSeqAct_ColiseumRoundAnnounce::eventActivated)
		;
	py::class_< UWillowSeqAct_ColiseumRuleAnnounce, USequenceAction >(m, "UWillowSeqAct_ColiseumRuleAnnounce")
		.def("eventActivated", &UWillowSeqAct_ColiseumRuleAnnounce::eventActivated)
		;
	py::class_< UWillowSeqAct_ColiseumStartTimer, USequenceAction >(m, "UWillowSeqAct_ColiseumStartTimer")
		.def_readwrite("CountdownLength", &UWillowSeqAct_ColiseumStartTimer::CountdownLength)
		.def("eventActivated", &UWillowSeqAct_ColiseumStartTimer::eventActivated)
		;
	py::class_< UWillowSeqAct_ColiseumVictory, USequenceAction >(m, "UWillowSeqAct_ColiseumVictory")
		.def("eventActivated", &UWillowSeqAct_ColiseumVictory::eventActivated)
		;
	py::class_< UWillowSeqAct_ExitVehicle, USequenceAction >(m, "UWillowSeqAct_ExitVehicle")
		.def_property("UseDismountAnimationIfAvailable", [](UWillowSeqAct_ExitVehicle &self){return self.UseDismountAnimationIfAvailable;}, [](UWillowSeqAct_ExitVehicle &self, bool value){self.UseDismountAnimationIfAvailable = value ? 1 : 0;})
		.def_readwrite("SeatsToForceExitOn", &UWillowSeqAct_ExitVehicle::SeatsToForceExitOn, py::return_value_policy::reference)
		;
	py::class_< UWillowSeqAct_KillPawnBasedOnAllegiance, USequenceAction >(m, "UWillowSeqAct_KillPawnBasedOnAllegiance")
		.def_property("bAllowInventoryToDrop", [](UWillowSeqAct_KillPawnBasedOnAllegiance &self){return self.bAllowInventoryToDrop;}, [](UWillowSeqAct_KillPawnBasedOnAllegiance &self, bool value){self.bAllowInventoryToDrop = value ? 1 : 0;})
		.def_readwrite("AllegianceToBaseKillsOn", &UWillowSeqAct_KillPawnBasedOnAllegiance::AllegianceToBaseKillsOn, py::return_value_policy::reference)
		.def_readwrite("AllegianceKillRelationship", &UWillowSeqAct_KillPawnBasedOnAllegiance::AllegianceKillRelationship)
		.def_readwrite("DamageSource", &UWillowSeqAct_KillPawnBasedOnAllegiance::DamageSource, py::return_value_policy::reference)
		.def_readwrite("DamageType", &UWillowSeqAct_KillPawnBasedOnAllegiance::DamageType, py::return_value_policy::reference)
		.def("GetKillInstigatorFromVariableLink", &UWillowSeqAct_KillPawnBasedOnAllegiance::GetKillInstigatorFromVariableLink, py::return_value_policy::reference)
		.def("GetAllegianceFromVariableLink", &UWillowSeqAct_KillPawnBasedOnAllegiance::GetAllegianceFromVariableLink, py::return_value_policy::reference)
		.def("KillBasedOnThisAllegiance", &UWillowSeqAct_KillPawnBasedOnAllegiance::KillBasedOnThisAllegiance)
		.def("eventActivated", &UWillowSeqAct_KillPawnBasedOnAllegiance::eventActivated)
		;
	py::class_< UWillowSeqAct_MarkPlaythroughCompleted, USequenceAction >(m, "UWillowSeqAct_MarkPlaythroughCompleted")
		;
	py::class_< UWillowSeqAct_NotifyDesignerAttribute, USequenceAction >(m, "UWillowSeqAct_NotifyDesignerAttribute")
		.def_readwrite("AttributeName", &UWillowSeqAct_NotifyDesignerAttribute::AttributeName, py::return_value_policy::reference)
		.def_readwrite("OptionalAttributeDefinition", &UWillowSeqAct_NotifyDesignerAttribute::OptionalAttributeDefinition, py::return_value_policy::reference)
		.def("eventActivated", &UWillowSeqAct_NotifyDesignerAttribute::eventActivated)
		;
	py::class_< UWillowSeqAct_OpenColiseumOverlay, USequenceAction >(m, "UWillowSeqAct_OpenColiseumOverlay")
		.def_readwrite("OverlayDefinition", &UWillowSeqAct_OpenColiseumOverlay::OverlayDefinition, py::return_value_policy::reference)
		.def("eventActivated", &UWillowSeqAct_OpenColiseumOverlay::eventActivated)
		;
	py::class_< UWillowSeqAct_UpdateColiseumRuleOverlay, USequenceAction >(m, "UWillowSeqAct_UpdateColiseumRuleOverlay")
		.def_readwrite("RuleInfo", &UWillowSeqAct_UpdateColiseumRuleOverlay::RuleInfo, py::return_value_policy::reference)
		.def_readwrite("UpdateMode", &UWillowSeqAct_UpdateColiseumRuleOverlay::UpdateMode)
		.def("eventActivated", &UWillowSeqAct_UpdateColiseumRuleOverlay::eventActivated)
		;
	py::class_< UWillowSeqEvent_CounterAtTarget, USequenceEvent >(m, "UWillowSeqEvent_CounterAtTarget")
		.def_readwrite("Event", &UWillowSeqEvent_CounterAtTarget::Event)
		;
	py::class_< UWillowSkelControl_LeftLowerEyelidLook, UWillowSkelControl_LowerEyelidLook >(m, "UWillowSkelControl_LeftLowerEyelidLook")
		;
	py::class_< UWillowSkelControl_LeftUpperEyelidLook, UWillowSkelControl_UpperEyelidLook >(m, "UWillowSkelControl_LeftUpperEyelidLook")
		;
	py::class_< UWillowSkelControl_RightLowerEyelidLook, UWillowSkelControl_LowerEyelidLook >(m, "UWillowSkelControl_RightLowerEyelidLook")
		;
	py::class_< UWillowSkelControl_RightUpperEyelidLook, UWillowSkelControl_UpperEyelidLook >(m, "UWillowSkelControl_RightUpperEyelidLook")
		;
	py::class_< AWillowTeleporter, ATeleporter >(m, "AWillowTeleporter")
		.def("OnToggle", &AWillowTeleporter::OnToggle)
		;
	py::class_< UWillowTI_CalcCombat, UTI_Calc >(m, "UWillowTI_CalcCombat")
		;
	py::class_< AWillowVehicle_Turret, AWillowVehicle >(m, "AWillowVehicle_Turret")
		;
	py::class_< UWillowVersusDuelBehavior, UBehaviorBase >(m, "UWillowVersusDuelBehavior")
		.def("ApplyBehaviorToContext", &UWillowVersusDuelBehavior::ApplyBehaviorToContext)
		;
	py::class_< UAction_BikeMove, UWillowActionSequencePawn >(m, "UAction_BikeMove")
		.def_property("bLimitedMovement", [](UAction_BikeMove &self){return self.bLimitedMovement;}, [](UAction_BikeMove &self, bool value){self.bLimitedMovement = value ? 1 : 0;})
		.def_property("bPathingFailed", [](UAction_BikeMove &self){return self.bPathingFailed;}, [](UAction_BikeMove &self, bool value){self.bPathingFailed = value ? 1 : 0;})
		.def_readwrite("TargetOffsets", &UAction_BikeMove::TargetOffsets, py::return_value_policy::reference)
		.def_readwrite("RecalcDestTargetMoveDist", &UAction_BikeMove::RecalcDestTargetMoveDist)
		.def_readwrite("ReachDistance", &UAction_BikeMove::ReachDistance)
		.def_readwrite("MinTravelDistance", &UAction_BikeMove::MinTravelDistance)
		.def_readwrite("Dests", &UAction_BikeMove::Dests, py::return_value_policy::reference)
		.def_readwrite("DestIdx", &UAction_BikeMove::DestIdx)
		.def_readwrite("NumFailedDests", &UAction_BikeMove::NumFailedDests)
		.def_readwrite("CachedTargetLoc", &UAction_BikeMove::CachedTargetLoc, py::return_value_policy::reference)
		.def("WantsPathFind", &UAction_BikeMove::WantsPathFind)
		.def("ShouldRecalcDests", &UAction_BikeMove::ShouldRecalcDests)
		.def("IsDestClose", &UAction_BikeMove::IsDestClose)
		.def("UnclaimMovement", &UAction_BikeMove::UnclaimMovement)
		.def("ClaimMovement", &UAction_BikeMove::ClaimMovement)
		.def("CanMove", &UAction_BikeMove::CanMove)
		.def("ResetDests", &UAction_BikeMove::ResetDests)
		.def("HasDests", &UAction_BikeMove::HasDests)
		.def("CalcDests", &UAction_BikeMove::CalcDests)
		.def("eventStop", &UAction_BikeMove::eventStop)
		.def("eventStart", &UAction_BikeMove::eventStart)
		.def("eventCanRun", &UAction_BikeMove::eventCanRun, py::return_value_policy::reference)
		;
	py::class_< UBehavior_ChangeSkillBehaviorSequenceState, UBehaviorBase >(m, "UBehavior_ChangeSkillBehaviorSequenceState")
		.def_readwrite("Action", &UBehavior_ChangeSkillBehaviorSequenceState::Action)
		.def_readwrite("SequenceName", &UBehavior_ChangeSkillBehaviorSequenceState::SequenceName, py::return_value_policy::reference)
		.def_readwrite("SkillDef", &UBehavior_ChangeSkillBehaviorSequenceState::SkillDef, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ChangeSkillBehaviorSequenceState::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_GetVelocity, UBehaviorBase >(m, "UBehavior_GetVelocity")
		.def_property("bLocalSpace", [](UBehavior_GetVelocity &self){return self.bLocalSpace;}, [](UBehavior_GetVelocity &self, bool value){self.bLocalSpace = value ? 1 : 0;})
		.def("PublishBehaviorOutput", &UBehavior_GetVelocity::PublishBehaviorOutput)
		.def("ApplyBehaviorToContext", &UBehavior_GetVelocity::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_IncrementOverpowerLevel, UBehaviorBase >(m, "UBehavior_IncrementOverpowerLevel")
		.def_readwrite("NumLevelsToAward", &UBehavior_IncrementOverpowerLevel::NumLevelsToAward)
		.def("ApplyBehaviorToContext", &UBehavior_IncrementOverpowerLevel::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ReviveInjuredPlayer, UBehaviorBase >(m, "UBehavior_ReviveInjuredPlayer")
		.def_readwrite("ReviverContext", &UBehavior_ReviveInjuredPlayer::ReviverContext, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ReviveInjuredPlayer::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetAkRTPCValue, UBehaviorBase >(m, "UBehavior_SetAkRTPCValue")
		.def_readwrite("RTPC", &UBehavior_SetAkRTPCValue::RTPC, py::return_value_policy::reference)
		.def_readwrite("Value", &UBehavior_SetAkRTPCValue::Value)
		.def("ApplyBehaviorToContext", &UBehavior_SetAkRTPCValue::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetDemigodMode, UBehaviorBase >(m, "UBehavior_SetDemigodMode")
		.def_readwrite("Status", &UBehavior_SetDemigodMode::Status)
		.def("ApplyBehaviorToContext", &UBehavior_SetDemigodMode::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_SetSkillDefinitionForInjuredStrings, UBehaviorBase >(m, "UBehavior_SetSkillDefinitionForInjuredStrings")
		.def_readwrite("SkillDef", &UBehavior_SetSkillDefinitionForInjuredStrings::SkillDef, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SetSkillDefinitionForInjuredStrings::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_ShowPullThePinNotification, UBehaviorBase >(m, "UBehavior_ShowPullThePinNotification")
		.def_readwrite("ExternalClip", &UBehavior_ShowPullThePinNotification::ExternalClip, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_ShowPullThePinNotification::ApplyBehaviorToContext)
		.def("ResolveController", &UBehavior_ShowPullThePinNotification::ResolveController, py::return_value_policy::reference)
		;
	py::class_< UBehavior_SkillCustomEvent, UBehaviorBase >(m, "UBehavior_SkillCustomEvent")
		.def_readwrite("EventName", &UBehavior_SkillCustomEvent::EventName, py::return_value_policy::reference)
		.def_readwrite("SkillDef", &UBehavior_SkillCustomEvent::SkillDef, py::return_value_policy::reference)
		.def("ApplyBehaviorToContext", &UBehavior_SkillCustomEvent::ApplyBehaviorToContext)
		;
	py::class_< UBehavior_WeaponThrow, UBehaviorBase >(m, "UBehavior_WeaponThrow")
		.def("ApplyBehaviorToContext", &UBehavior_WeaponThrow::ApplyBehaviorToContext)
		;
	py::class_< UBuzzaxeWeaponTypeDefinition, UWeaponTypeDefinition >(m, "UBuzzaxeWeaponTypeDefinition")
		;
	py::class_< UCustomizationUsage_FanBoat, UCustomizationUsage_Vehicle >(m, "UCustomizationUsage_FanBoat")
		;
	py::class_< UPsychoInputContextSelector, UDefaultInputContextSelector >(m, "UPsychoInputContextSelector")
		.def("SelectContext", &UPsychoInputContextSelector::SelectContext, py::return_value_policy::reference)
		;
#endif
}